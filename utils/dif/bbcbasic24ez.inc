jp $040045       ; jp $040045       | 040000 040000 || 040000 C3 45 00 04 0438     JP _start    ; Jump to start
ld b,d           ; ld b,d           | 040004 040004 || 040004 42 42 43 42 0442  _exec_name:  DB "BBCBASIC.BIN", 0  ; The executable name, only used in argv
ld b,d           ;                  | 040005        || ld b,d                         ; 040005
ld b,e           ;                  | 040006        || ld b,e                         ; 040006
ld b,d           ;                  | 040007        || ld b,d                         ; 040007
ld b,c           ;                  | 040008        || ld b,c                         ; 040008
ld d,e           ;                  | 040009        || ld d,e                         ; 040009
ld.lis b,e       ;                  | 04000A        || ld.lis b,e                     ; 04000A
ld l,$42         ;                  | 04000C        || ld l,$42                       ; 04000C
ld.lis c,(hl)    ;                  | 04000E        || ld.lis c,(hl)                  ; 04000E
nop              ;                  | 040010        || nop                            ; 040010
rst $38          ; rst $38          | 040011 040011 || 040011 FF FF FF FF 0444     ALIGN 64
rst $38          ;                  | 040012        || rst $38                        ; 040012
rst $38          ;                  | 040013        || rst $38                        ; 040013
rst $38          ;                  | 040014        || rst $38                        ; 040014
rst $38          ;                  | 040015        || rst $38                        ; 040015
rst $38          ;                  | 040016        || rst $38                        ; 040011
rst $38          ;                  | 040017        || rst $38                        ; 040012
rst $38          ;                  | 040018        || rst $38                        ; 040013
rst $38          ;                  | 040019        || rst $38                        ; 040014
rst $38          ;                  | 04001A        || rst $38                        ; 040015
rst $38          ;                  | 04001B        || rst $38                        ; 040016
rst $38          ;                  | 04001C        || rst $38                        ; 040017
rst $38          ;                  | 04001D        || rst $38                        ; 040018
rst $38          ;                  | 04001E        || rst $38                        ; 040019
rst $38          ;                  | 04001F        || rst $38                        ; 04001A
rst $38          ;                  | 040020        || rst $38                        ; 04001B
rst $38          ;                  | 040021        || rst $38                        ; 04001C
rst $38          ;                  | 040022        || rst $38                        ; 04001D
rst $38          ;                  | 040023        || rst $38                        ; 04001E
rst $38          ;                  | 040024        || rst $38                        ; 04001F
rst $38          ;                  | 040025        || rst $38                        ; 040020
rst $38          ;                  | 040026        || rst $38                        ; 040011
rst $38          ;                  | 040027        || rst $38                        ; 040012
rst $38          ;                  | 040028        || rst $38                        ; 040013
rst $38          ;                  | 040029        || rst $38                        ; 040014
rst $38          ;                  | 04002A        || rst $38                        ; 040015
rst $38          ;                  | 04002B        || rst $38                        ; 040016
rst $38          ;                  | 04002C        || rst $38                        ; 040017
rst $38          ;                  | 04002D        || rst $38                        ; 040018
rst $38          ;                  | 04002E        || rst $38                        ; 040019
rst $38          ;                  | 04002F        || rst $38                        ; 04001A
rst $38          ;                  | 040030        || rst $38                        ; 04001B
rst $38          ;                  | 040031        || rst $38                        ; 04001C
rst $38          ;                  | 040032        || rst $38                        ; 04001D
rst $38          ;                  | 040033        || rst $38                        ; 04001E
rst $38          ;                  | 040034        || rst $38                        ; 04001F
rst $38          ;                  | 040035        || rst $38                        ; 040020
rst $38          ;                  | 040036        || rst $38                        ; 040036
rst $38          ;                  | 040037        || rst $38                        ; 040037
rst $38          ;                  | 040038        || rst $38                        ; 040038
rst $38          ;                  | 040039        || rst $38                        ; 040039
rst $38          ;                  | 04003A        || rst $38                        ; 04003A
rst $38          ;                  | 04003B        || rst $38                        ; 04003B
rst $38          ;                  | 04003C        || rst $38                        ; 04003C
rst $38          ;                  | 04003D        || rst $38                        ; 04003D
rst $38          ;                  | 04003E        || rst $38                        ; 04003E
rst $38          ;                  | 04003F        || rst $38                        ; 04003F
ld c,l           ; ld c,l           | 040040 040040 || 040040 4D 4F 53    0446     DB "MOS"    ; Flag for MOS - to confirm this is a valid MOS command
ld c,a           ;                  | 040041        || ld c,a                         ; 040041
ld d,e           ;                  | 040042        || ld d,e                         ; 040042
nop              ; nop              | 040043 040043 || 040043 00          0447     DB 00h    ; MOS header version 0
ld bc,$d5c5f5    ; ld bc,$d5c5f5    | 040044 040044 || 040044 01          0448     DB 01h    ; Flag for run mode (0: Z80, 1: ADL)
push ix          ; push ix          | 040048 040048 || 040048 DD E5       0455     PUSH  IX
push iy          ; push iy          | 04004A 04004A || 04004A FD E5       0456     PUSH  IY
ld ($0400d7),sp  ; ld ($0400d7),sp  | 04004C 04004C || 04004C ED 73 D7 00 0458     LD  (_sps), SP   ; Preserve the 24-bit stack pointer (SPS)
ld ix,$0400da    ; ld ix,$0400da    | 040051 040051 || 040051 DD 21 DA 00 0460     LD  IX, _argv_ptrs  ; The argv array pointer address
push ix          ; push ix          | 040056 040056 || 040056 DD E5       0461     PUSH  IX
call $040088     ; call $040088     | 040058 040058 || 040058 CD 88 00 04 0462     CALL  _parse_params  ; Parse the parameters
pop ix           ; pop ix           | 04005C 04005C || 04005C DD E1       0463     POP  IX   ; IX: argv
ld b,$00         ; ld b,$00         | 04005E 04005E || 04005E 06 00       0464     LD  B, 0   ;  C: argc
call $040075     ; call $040075     | 040060 040060 || 040060 CD 75 00 04 0465     CALL  _clear_ram
jp $042fee       ; jp $042fb6       | 040064 040064 || 040064 C3 EE 2F 04 0466     JP  _main   ; Start user code
ld sp,($0400d7)  ; ld sp,($0400d7)  | 040068 040068 || 040068 ED 7B D7 00 0470  _end:   LD  SP, (_sps)  ; Restore the stack pointer
pop iy           ; pop iy           | 04006D 04006D || 04006D FD E1       0472     POP  IY   ; Restore the registers
pop ix           ; pop ix           | 04006F 04006F || 04006F DD E1       0473     POP  IX
pop de           ; pop de           | 040071 040071 || 040071 D1          0474     POP  DE
pop bc           ; pop bc           | 040072 040072 || 040072 C1          0475     POP  BC
pop af           ; pop af           | 040073 040073 || 040073 F1          0476     POP  AF
ret              ; ret              | 040074 040074 || 040074 C9          0477     RET     ; Return to MOS
push bc          ; push bc          | 040075 040075 || 040075 C5          0481  _clear_ram:  PUSH  BC
ld hl,$044a00    ; ld hl,$044a00    | 040076 040076 || 040076 21 00 4A 04 0482     LD  HL, RAM_START
ld de,$044a01    ; ld de,$044a01    | 04007A 04007A || 04007A 11 01 4A 04 0483     LD  DE, RAM_START + 1
ld bc,$00034f    ; ld bc,$00034f    | 04007E 04007E || 04007E 01 4F 03 00 0484     LD  BC, RAM_END - RAM_START - 1
xor a            ; xor a            | 040082 040082 || 040082 AF          0485     XOR  A
ld (hl),a        ; ld (hl),a        | 040083 040083 || 040083 77          0486     LD  (HL), A
ldir             ; ldir             | 040084 040084 || 040084 ED B0       0487     LDIR
pop bc           ; pop bc           | 040086 040086 || 040086 C1          0488     POP  BC
ret              ; ret              | 040087 040087 || 040087 C9          0489     RET
ld bc,$040004    ; ld bc,$040004    | 040088 040088 || 040088 01 04 00 04 0498  _parse_params:  LD BC, _exec_name
ld (ix),bc       ; ld (ix),bc       | 04008C 04008C || 04008C DD 0F 00    0499     LD (IX+0), BC  ; ARGV[0] = the executable name
inc ix           ; inc ix           | 04008F 04008F || 04008F DD 23       0500     INC IX
inc ix           ; inc ix           | 040091 040091 || 040091 DD 23       0501     INC IX
inc ix           ; inc ix           | 040093 040093 || 040093 DD 23       0502     INC IX
call $0400d0     ; call $0400d0     | 040095 040095 || 040095 CD D0 00 04 0503     CALL _skip_spaces  ; Skip HL past any leading spaces
ld bc,$000001    ; ld bc,$000001    | 040099 040099 || 040099 01 01 00 00 0505     LD BC, 1   ; C: ARGC = 1 - also clears out top 16 bits of BCU
ld b,$0f         ; ld b,$0f         | 04009D 04009D || 04009D 06 0F       0506     LD B, argv_ptrs_max - 1 ; B: Maximum number of argv_ptrs
push bc          ; push bc          | 04009F 04009F || 04009F C5          0509     PUSH BC   ; Stack ARGC
push hl          ; push hl          | 0400A0 0400A0 || 0400A0 E5          0510     PUSH HL   ; Stack start address of token
call $0400c1     ; call $0400c1     | 0400A1 0400A1 || 0400A1 CD C1 00 04 0511     CALL _get_token  ; Get the next token
ld a,c           ; ld a,c           | 0400A5 0400A5 || 0400A5 79          0512     LD A, C   ; A: Length of the token in characters
pop de           ; pop de           | 0400A6 0400A6 || 0400A6 D1          0513     POP DE   ; Start address of token (was in HL)
pop bc           ; pop bc           | 0400A7 0400A7 || 0400A7 C1          0514     POP BC   ; ARGC
or a             ; or a             | 0400A8 0400A8 || 0400A8 B7          0515     OR A   ; Check for A=0 (no token found) OR at end of string
ret z            ; ret z            | 0400A9 0400A9 || 0400A9 C8          0516     RET Z
ld (ix),de       ; ld (ix),de       | 0400AA 0400AA || 0400AA DD 1F 00    0518     LD (IX+0), DE  ; Store the pointer to the token
push hl          ; push hl          | 0400AD 0400AD || 0400AD E5          0519     PUSH HL   ; DE=HL
pop de           ; pop de           | 0400AE 0400AE || 0400AE D1          0520     POP DE
call $0400d0     ; call $0400d0     | 0400AF 0400AF || 0400AF CD D0 00 04 0521     CALL _skip_spaces  ; And skip HL past any spaces onto the next character
xor a            ; xor a            | 0400B3 0400B3 || 0400B3 AF          0522     XOR A
ld (de),a        ; ld (de),a        | 0400B4 0400B4 || 0400B4 12          0523     LD (DE), A   ; Zero-terminate the token
inc ix           ; inc ix           | 0400B5 0400B5 || 0400B5 DD 23       0524     INC IX
inc ix           ; inc ix           | 0400B7 0400B7 || 0400B7 DD 23       0525     INC IX
inc ix           ; inc ix           | 0400B9 0400B9 || 0400B9 DD 23       0526     INC IX   ; Advance to next pointer position
inc c            ; inc c            | 0400BB 0400BB || 0400BB 0C          0527     INC C   ; Increment ARGC
ld a,c           ; ld a,c           | 0400BC 0400BC || 0400BC 79          0528     LD A, C   ; Check for C >= A
cp b             ; cp b             | 0400BD 0400BD || 0400BD B8          0529     CP B
jr c,$-$1f       ; jr c,$-$1f       | 0400BE 0400BE || 0400BE 38 DF       0530     JR C, _parse_params_1 ; And loop
ret              ; ret              | 0400C0 0400C0 || 0400C0 C9          0531     RET
ld c,$00         ; ld c,$00         | 0400C1 0400C1 || 0400C1 0E 00       0540  _get_token:  LD C, 0   ; Initialise length
ld a,(hl)        ; ld a,(hl)        | 0400C3 0400C3 || 0400C3 7E          0541  @@:   LD A, (HL)   ; Get the character from the parameter string
or a             ; or a             | 0400C4 0400C4 || 0400C4 B7          0542     OR A   ; Exit if 0 (end of parameter string in MOS)
ret z            ; ret z            | 0400C5 0400C5 || 0400C5 C8          0543     RET  Z
cp $0d           ; cp $0d           | 0400C6 0400C6 || 0400C6 FE 0D       0544     CP 13   ; Exit if CR (end of parameter string in BBC BASIC)
ret z            ; ret z            | 0400C8 0400C8 || 0400C8 C8          0545     RET Z
cp $20           ; cp $20           | 0400C9 0400C9 || 0400C9 FE 20       0546     CP ' '   ; Exit if space (end of token)
ret z            ; ret z            | 0400CB 0400CB || 0400CB C8          0547     RET Z
inc hl           ; inc hl           | 0400CC 0400CC || 0400CC 23          0548     INC HL   ; Advance to next character
inc c            ; inc c            | 0400CD 0400CD || 0400CD 0C          0549     INC  C   ; Increment length
jr $-$0b         ; jr $-$0b         | 0400CE 0400CE || 0400CE 18 F3       0550     JR @B
ld a,(hl)        ; ld a,(hl)        | 0400D0 0400D0 || 0400D0 7E          0559  _skip_spaces:  LD A, (HL)   ; Get the character from the parameter string
cp $20           ; cp $20           | 0400D1 0400D1 || 0400D1 FE 20       0560     CP ' '   ; Exit if not space
ret nz           ; ret nz           | 0400D3 0400D3 || 0400D3 C0          0561     RET NZ
inc hl           ; inc hl           | 0400D4 0400D4 || 0400D4 23          0562     INC HL   ; Advance to next character
jr $-$05         ; jr $-$05         | 0400D5 0400D5 || 0400D5 18 F9       0563     JR _skip_spaces  ; Increment length
rst $38          ; rst $38          | 0400D7 0400D7 || 0400D7             0567  _sps:   DS 3   ; Storage for the stack pointer
rst $38          ;                  | 0400D8        || rst $38                        ; 0400D8
rst $38          ;                  | 0400D9        || rst $38                        ; 0400D9
nop              ; nop              | 0400DA 0400DA || 0400DA 00 00 00 00 0568  _argv_ptrs:  BLKP argv_ptrs_max, 0 ; Storage for the argv array pointers; --- End init.asm ---
nop              ;                  | 0400DB        || nop                            ; 0400DB
nop              ;                  | 0400DC        || nop                            ; 0400DC
nop              ;                  | 0400DD        || nop                            ; 0400DD
nop              ;                  | 0400DE        || nop                            ; 0400DE
nop              ;                  | 0400DF        || nop                            ; 0400DF
nop              ;                  | 0400E0        || nop                            ; 0400DA
nop              ;                  | 0400E1        || nop                            ; 0400DB
nop              ;                  | 0400E2        || nop                            ; 0400DC
nop              ;                  | 0400E3        || nop                            ; 0400DD
nop              ;                  | 0400E4        || nop                            ; 0400DE
nop              ;                  | 0400E5        || nop                            ; 0400DF
nop              ;                  | 0400E6        || nop                            ; 0400E0
nop              ;                  | 0400E7        || nop                            ; 0400E1
nop              ;                  | 0400E8        || nop                            ; 0400E2
nop              ;                  | 0400E9        || nop                            ; 0400E3
nop              ;                  | 0400EA        || nop                            ; 0400E4
nop              ;                  | 0400EB        || nop                            ; 0400E5
nop              ;                  | 0400EC        || nop                            ; 0400E6
nop              ;                  | 0400ED        || nop                            ; 0400E7
nop              ;                  | 0400EE        || nop                            ; 0400E8
nop              ;                  | 0400EF        || nop                            ; 0400E9
nop              ;                  | 0400F0        || nop                            ; 0400DA
nop              ;                  | 0400F1        || nop                            ; 0400DB
nop              ;                  | 0400F2        || nop                            ; 0400DC
nop              ;                  | 0400F3        || nop                            ; 0400DD
nop              ;                  | 0400F4        || nop                            ; 0400DE
nop              ;                  | 0400F5        || nop                            ; 0400DF
nop              ;                  | 0400F6        || nop                            ; 0400E0
nop              ;                  | 0400F7        || nop                            ; 0400E1
nop              ;                  | 0400F8        || nop                            ; 0400E2
nop              ;                  | 0400F9        || nop                            ; 0400E3
nop              ;                  | 0400FA        || nop                            ; 0400E4
nop              ;                  | 0400FB        || nop                            ; 0400E5
nop              ;                  | 0400FC        || nop                            ; 0400E6
nop              ;                  | 0400FD        || nop                            ; 0400E7
nop              ;                  | 0400FE        || nop                            ; 0400E8
nop              ;                  | 0400FF        || nop                            ; 0400E9
nop              ;                  | 040100        || nop                            ; 0400FF
nop              ;                  | 040101        || nop                            ; 040100
nop              ;                  | 040102        || nop                            ; 040101
nop              ;                  | 040103        || nop                            ; 040102
nop              ;                  | 040104        || nop                            ; 040103
nop              ;                  | 040105        || nop                            ; 040104
nop              ;                  | 040106        || nop                            ; 040105
nop              ;                  | 040107        || nop                            ; 040106
nop              ;                  | 040108        || nop                            ; 040107
nop              ;                  | 040109        || nop                            ; 040108
ex de,hl         ;                  | 04010A        || 04010A EB 08 04    0673  FUNTBL:   DW24 DECODE   ; Line number
ex af,af'        ;                  | 04010B        || 
inc b            ;                  | 04010C        || inc b                          ; 04010C
sbc a,c          ;                  | 04010D        || 04010D 99 05 04    0674     DW24 OPENIN   ; OPENIN
dec b            ;                  | 04010E        || dec b                          ; 04010E
inc b            ;                  | 04010F        || inc b                          ; 04010F
cp e             ;                  | 040110        || 040110 BB 05 04    0675     DW24 PTR_EV   ; PTR
dec b            ;                  | 040111        || dec b                          ; 04010E
inc b            ;                  | 040112        || inc b                          ; 04010F
ld d,l           ;                  | 040113        || 040113 55 05 04    0676     DW24 PAGEV   ; PAGE
dec b            ;                  | 040114        || dec b                          ; 040111
inc b            ;                  | 040115        || inc b                          ; 040112
push bc          ;                  | 040116        || 040116 C5 05 04    0677     DW24 TIMEV   ; TIME
dec b            ;                  | 040117        || dec b                          ; 040114
inc b            ;                  | 040118        || inc b                          ; 040115
ld b,c           ;                  | 040119        || 040119 41 05 04    0678     DW24 LOMEMV   ; LOMEM
dec b            ;                  | 04011A        || dec b                          ; 040117
inc b            ;                  | 04011B        || inc b                          ; 040118
ld c,e           ;                  | 04011C        || 04011C 4B 05 04    0679     DW24 HIMEMV   ; HIMEM
dec b            ;                  | 04011D        || dec b                          ; 04011A
inc b            ;                  | 04011E        || inc b                          ; 04011B
add hl,de        ;                  | 04011F        || 04011F 19 06 04    0680     DW24 ABSV   ; ABS
ld b,$04         ;                  | 040120        || 
ld d,l           ;                  | 040122        || 040122 55 06 04    0681     DW24 ACS   ; ACS
ld b,$04         ;                  | 040123        || 
add a,h          ;                  | 040125        || 040125 84 49 04    0682     DW24 ADVAL   ; ADVAL
inc.lis b        ;                  | 040126        || 
ld hl,($4d0405)  ;                  | 040128        || 040128 2A 05 04    0683     DW24 ASC   ; ASC
ld b,$04         ;                  | 04012C        || 
ld d,c           ;                  | 04012E        || 04012E 51 06 04    0685     DW24 ATN   ; ATN
ld b,$04         ;                  | 04012F        || 
di               ;                  | 040131        || 040131 F3 04 04    0686     DW24 BGET   ; BGET
inc b            ;                  | 040132        || 
inc b            ;                  | 040133        || 
add hl,sp        ;                  | 040134        || 040134 39 06 04    0687     DW24 COS   ; COS
ld b,$04         ;                  | 040135        || 
add a,b          ;                  | 040137        || 040137 80 05 04    0688     DW24 COUNTV   ; COUNT
dec b            ;                  | 040138        || 
inc b            ;                  | 040139        || 
ld hl,$740406    ;                  | 04013A        || 04013A 21 06 04    0689     DW24 DEG   ; DEG
dec b            ;                  | 04013E        || 
inc b            ;                  | 04013F        || 
ld a,d           ;                  | 040140        || 040140 7A 05 04    0691     DW24 ERRV   ; ERR
dec b            ;                  | 040141        || 
inc b            ;                  | 040142        || 
ld a,(hl)        ;                  | 040143        || 040143 7E 06 04    0692     DW24 EVAL_   ; EVAL
ld b,$04         ;                  | 040144        || 
ld b,c           ;                  | 040146        || 040146 41 06 04    0693     DW24 EXP   ; EXP
ld b,$04         ;                  | 040147        || 
or c             ;                  | 040149        || 040149 B1 05 04    0694     DW24 EXT   ; EXT
dec b            ;                  | 04014A        || 
inc b            ;                  | 04014B        || 
sbc a,b          ;                  | 04014C        || 04014C 98 09 04    0695     DW24 ZERO   ; FALSE
add hl,bc        ;                  | 04014D        || 
inc b            ;                  | 04014E        || 
add a,a          ;                  | 04014F        || 04014F 87 10 04    0696     DW24 FN_EX   ; FN
djnz $+$06       ;                  | 040150        || 
ld de,$000405    ;                  | 040152        || 040152 11 05 04    0697     DW24 GET   ; GET
dec b            ;                  | 040156        || 
inc b            ;                  | 040157        || 
jr nc,$+$09      ;                  | 040158        || 040158 30 07 04    0699     DW24 INSTR   ; INSTR(
inc b            ;                  | 04015A        || 
dec l            ;                  | 04015B        || 04015B 2D 06 04    0700     DW24 INT_   ; INT
ld b,$04         ;                  | 04015C        || 
ld a,($450405)   ;                  | 04015E        || 04015E 3A 05 04    0701     DW24 LEN   ; LEN
ld b,$04         ;                  | 040162        || 
ld.lis b,$04     ;                  | 040164        || 040164 49 06 04    0703     DW24 LOG   ; LOG
dec e            ;                  | 040167        || 040167 1D 06 04    0704     DW24 NOTK   ; NOT
ld b,$04         ;                  | 040168        || 
sub l            ;                  | 04016A        || 04016A 95 05 04    0705     DW24 OPENUP   ; OPENUP
dec b            ;                  | 04016B        || 
inc b            ;                  | 04016C        || 
sub d            ;                  | 04016D        || 04016D 92 05 04    0706     DW24 OPENOT   ; OPENOUT
dec b            ;                  | 04016E        || 
inc b            ;                  | 04016F        || 
dec d            ;                  | 040170        || 040170 15 06 04    0707     DW24 PI   ; PI
ld b,$04         ;                  | 040171        || 
and a            ;                  | 040173        || 040173 A7 44 04    0708     DW24 POINT   ; POINT(
ld b,h           ;                  | 040174        || 
inc b            ;                  | 040175        || 
jp nc,$250404    ;                  | 040176        || 040176 D2 04 04    0709     DW24 POS   ; POS
ld b,$04         ;                  | 04017A        || 
or d             ;                  | 04017C        || 04017C B2 06 04    0711     DW24 RND   ; RND
ld b,$04         ;                  | 04017D        || 
add hl,hl        ;                  | 04017F        || 04017F 29 06 04    0712     DW24 SGN   ; SGN
ld b,$04         ;                  | 040180        || 
dec a            ;                  | 040182        || 040182 3D 06 04    0713     DW24 SIN   ; SIN
ld b,$04         ;                  | 040183        || 
ld sp,$350406    ;                  | 040185        || 040185 31 06 04    0714     DW24 SQR   ; SQR
ld b,$04         ;                  | 040189        || 
ld e,a           ;                  | 04018B        || 04018B 5F 05 04    0716     DW24 TOPV   ; TO(P)
dec b            ;                  | 04018C        || 
inc b            ;                  | 04018D        || 
ld a,(bc)        ;                  | 04018E        || 04018E 0A 06 04    0717     DW24 TRUE   ; TRUE
ld b,$04         ;                  | 04018F        || 
ld d,h           ;                  | 040191        || 040191 54 15 04    0718     DW24 USR   ; USR
dec d            ;                  | 040192        || 
inc b            ;                  | 040193        || 
ld l,a           ;                  | 040194        || 040194 6F 06 04    0719     DW24 VAL   ; VAL
ld b,$04         ;                  | 040195        || 
in a,($04)       ;                  | 040197        || 040197 DB 04 04    0720     DW24 VPOS   ; VPOS
inc b            ;                  | 040199        || 
call nz,$cc0407  ;                  | 04019A        || 04019A C4 07 04    0721     DW24 CHRS   ; CHRS
rlca             ;                  | 04019E        || 
inc b            ;                  | 04019F        || 
ld bc,(ix+$04)   ;                  | 0401A0        || 0401A0 DD 07 04    0723     DW24 INKEYS   ; INKEYS
ld h,d           ;                  | 0401A3        || 0401A3 62 08 04    0724     DW24 LEFTS   ; LEFTS(
ex af,af'        ;                  | 0401A4        || 
inc b            ;                  | 0401A5        || 
ld hl,($820408)  ;                  | 0401A6        || 0401A6 2A 08 04    0725     DW24 MIDS   ; MIDS(
ex af,af'        ;                  | 0401AA        || 
inc b            ;                  | 0401AB        || 
ld c,a           ;                  | 0401AC        || 0401AC 4F 09 04    0727     DW24 STRS   ; STR$
add hl,bc        ;                  | 0401AD        || 
inc b            ;                  | 0401AE        || 
and e            ;                  | 0401AF        || 0401AF A3 08 04    0728     DW24 STRING_   ; STRINGS(
ex af,af'        ;                  | 0401B0        || 
inc b            ;                  | 0401B1        || 
ex (sp),hl       ;                  | 0401B2        || 0401B2 E3 04 04    0729     DW24 EOF   ; EOF
inc b            ;                  | 0401B3        || 
inc b            ;                  | 0401B4        || 
push af          ;                  | 0401B5        || 0401B5 F5 05 04    0741  SOPTBL:   DW24 SLE   ; <= (STRING)
dec b            ;                  | 0401B6        || 
inc b            ;                  | 0401B7        || 
cp $05           ;                  | 0401B8        || 0401B8 FE 05 04    0742     DW24 SNE   ; <>
inc b            ;                  | 0401BA        || 
xor $05          ;                  | 0401BB        || 0401BB EE 05 04    0743     DW24 SGE   ; >=
inc b            ;                  | 0401BD        || 
rst $18          ;                  | 0401BE        || 0401BE DF 05 04    0744     DW24 SLT   ; <
dec b            ;                  | 0401BF        || 
inc b            ;                  | 0401C0        || 
dec b            ;                  | 0401C1        || 0401C1 05 06 04    0745     DW24 SEQ   ; =
ld b,$04         ;                  | 0401C2        || 
and $05          ;                  | 0401C4        || 0401C4 E6 05 04    0746     DW24 SGT   ; >
inc b            ;                  | 0401C6        || inc b                          ; 0401C6
call $0401e0     ; call $0401e0     | 0401C7 0401C7 || 0401C7 CD E0 01 04 0767  EXPR:   CALL    EXPR1   ; Get first operator by calling Level 6
cp $82           ; cp $82           | 0401CB 0401CB || 0401CB FE 82       0768  EXPR0A:   CP      EORK             ; Is operator EOR?
jr z,$+$05       ; jr z,$+$05       | 0401CD 0401CD || 0401CD 28 03       0769     JR      Z,EXPR0B  ; Yes, so skip to next bit
cp $84           ; cp $84           | 0401CF 0401CF || 0401CF FE 84       0770     CP      ORK   ; Is operator OR
ret nz           ; ret nz           | 0401D1 0401D1 || 0401D1 C0          0771     RET     NZ   ; No, so return
call $040a46     ; call $040a3e     | 0401D2 0401D2 || 0401D2 CD 46 0A 04 0773  EXPR0B:   CALL    SAVE_EV             ; Save first operand
call $0401e0     ; call $0401e0     | 0401D6 0401D6 || 0401D6 CD E0 01 04 0774     CALL    EXPR1            ; Get second operand
call $040a55     ; call $040a4d     | 0401DA 0401DA || 0401DA CD 55 0A 04 0775     CALL    DOIT             ; Do the operation
jr $-$13         ; jr $-$13         | 0401DE 0401DE || 0401DE 18 EB       0776     JR      EXPR0A           ; And continue
call $0401f5     ; call $0401f5     | 0401E0 0401E0 || 0401E0 CD F5 01 04 0780  EXPR1:   CALL    EXPR2   ; Get first operator by calling Level 5
cp $80           ; cp $80           | 0401E4 0401E4 || 0401E4 FE 80       0781  EXPR1A:   CP      ANDK   ; Is operator AND?
ret nz           ; ret nz           | 0401E6 0401E6 || 0401E6 C0          0782     RET     NZ   ; No, so return
call $040a46     ; call $040a3e     | 0401E7 0401E7 || 0401E7 CD 46 0A 04 0783     CALL    SAVE_EV   ; Save first operand
call $0401f5     ; call $0401f5     | 0401EB 0401EB || 0401EB CD F5 01 04 0784     CALL    EXPR2   ; Get second operand
call $040a55     ; call $040a4d     | 0401EF 0401EF || 0401EF CD 55 0A 04 0785     CALL    DOIT   ; Do the operation
jr $-$0f         ; jr $-$0f         | 0401F3 0401F3 || 0401F3 18 EF       0786     JR      EXPR1A   ; And continue
call $040267     ; call $040267     | 0401F5 0401F5 || 0401F5 CD 67 02 04 0790  EXPR2:   CALL    EXPR3   ; Get first operator by calling Level 4
call $040a1d     ; call $040a15     | 0401F9 0401F9 || 0401F9 CD 1D 0A 04 0791     CALL    RELOP?   ; Is it ">", "=" or "<"?
ret nz           ; ret nz           | 0401FD 0401FD || 0401FD C0          0792     RET     NZ   ; No, so return
ld b,a           ; ld b,a           | 0401FE 0401FE || 0401FE 47          0793     LD      B,A   ; Store the first operator in B
inc iy           ; inc iy           | 0401FF 0401FF || 0401FF FD 23       0794     INC     IY               ; Bump over operator
call $040a78     ; call $040a70     | 040201 040201 || 040201 CD 78 0A 04 0795     CALL    NXT   ;
call $040a1d     ; call $040a15     | 040205 040205 || 040205 CD 1D 0A 04 0796     CALL    RELOP?           ; Is it a compound operator?
jr nz,$+$0b      ; jr nz,$+$0b      | 040209 040209 || 040209 20 09       0797     JR      NZ,EXPR2B  ; No, so skip next bit
inc iy           ; inc iy           | 04020B 04020B || 04020B FD 23       0798     INC     IY   ; Bump over operator
cp b             ; cp b             | 04020D 04020D || 04020D B8          0799     CP      B   ; Compare with first
jp z,$040c9f     ; jp z,$040c97     | 04020E 04020E || 04020E CA 9F 0C 04 0800     JP      Z,SYNTAX         ; Trap illegal combinations ">>", "==", "<<" (but not "><", "=>", "=<")
add a,b          ; add a,b          | 040212 040212 || 040212 80          0801     ADD     A,B
ld b,a           ; ld b,a           | 040213 040213 || 040213 47          0802     LD      B,A   ; B: Unique code for the compound operator
ld a,b           ; ld a,b           | 040214 040214 || 040214 78          0803  EXPR2B:   LD      A,B   ; A: Code for the operator/compound operator
ex af,af'        ; ex af,af'        | 040215 040215 || 040215 08          0804     EX      AF,AF'
jp m,$040230     ; jp m,$040230     | 040216 040216 || 040216 FA 30 02 04 0805     JP      M,EXPR2S  ; If it is a string, then branch here to handle it
ex af,af'        ; ex af,af'        | 04021A 04021A || 04021A 08          0806     EX      AF,AF'
sub $04          ; sub $04          | 04021B 04021B || 04021B D6 04       0807     SUB     4
cp $3a           ; cp $3a           | 04021D 04021D || 04021D FE 3A       0808     CP      '>'-4
jr nz,$+$04      ; jr nz,$+$04      | 04021F 04021F || 04021F 20 02       0809     JR      NZ,EXPR2C
add a,$02        ; add a,$02        | 040221 040221 || 040221 C6 02       0810     ADD     A,2
call $040a48     ; call $040a40     | 040223 040223 || 040223 CD 48 0A 04 0811  EXPR2C:   CALL    SAVE1
call $040267     ; call $040267     | 040227 040227 || 040227 CD 67 02 04 0812     CALL    EXPR3
call $040a55     ; call $040a4d     | 04022B 04022B || 04022B CD 55 0A 04 0813     CALL    DOIT             ; NB: Must NOT be "JP DOIT"
ret              ; ret              | 04022F 04022F || 04022F C9          0814     RET
ex af,af'        ; ex af,af'        | 040230 040230 || 040230 08          0816  EXPR2S:   EX      AF,AF'   ; Handle string comparisons
dec a            ; dec a            | 040231 040231 || 040231 3D          0817     DEC     A
and $07          ; and $07          | 040232 040232 || 040232 E6 07       0818     AND     7
call $0409b9     ; call $0409b4     | 040234 040234 || 040234 CD B9 09 04 0819     CALL    PUSHS            ; Save string on the stack
push af          ; push af          | 040238 040238 || 040238 F5          0820     PUSH    AF               ; Save the operator
call $040267     ; call $040267     | 040239 040239 || 040239 CD 67 02 04 0821     CALL    EXPR3            ; Get the second string
ex af,af'        ; ex af,af'        | 04023D 04023D || 04023D 08          0822     EX      AF,AF'
jp p,$04033b     ; jp p,$040336     | 04023E 04023E || 04023E F2 3B 03 04 0823     JP      P,TYPE_EV_
pop af           ; pop af           | 040242 040242 || 040242 F1          0824     POP     AF
ld c,e           ; ld c,e           | 040243 040243 || 040243 4B          0825     LD      C,E              ; Length of string #2
pop de           ; pop de           | 040244 040244 || 040244 D1          0826     POP     DE
ld hl,$000000    ; ld hl,$000000    | 040245 040245 || 040245 21 00 00 00 0827     LD      HL,0
add hl,sp        ; add hl,sp        | 040249 040249 || 040249 39          0828     ADD     HL,SP
ld b,e           ; ld b,e           | 04024A 04024A || 04024A 43          0829     LD      B,E              ; Length of string #1
push de          ; push de          | 04024B 04024B || 04024B D5          0830     PUSH    DE
ld de,$044a00    ; ld de,$044a00    | 04024C 04024C || 04024C 11 00 4A 04 0831     LD      DE,ACCS
ex de,hl         ; ex de,hl         | 040250 040250 || 040250 EB          0832     EX      DE,HL
call $040a84     ; call $040a7c     | 040251 040251 || 040251 CD 84 0A 04 0833     CALL    DISPT2
pop de           ; pop de           | 040255 040255 || 040255 D1          0834     POP     DE
ex de,hl         ; ex de,hl         | 040256 040256 || 040256 EB          0835     EX      DE,HL
ld a,l           ; ld a,l           | 040257 040257 || 040257 7D          0836     LD A,L
ld hl,$000000    ; ld hl,$000000    | 040258 040258 || 040258 21 00 00 00 0837     LD HL,0
ld l,a           ; ld l,a           | 04025C 04025C || 04025C 6F          0838     LD L,A
add hl,sp        ; add hl,sp        | 04025D 04025D || 04025D 39          0839     ADD     HL,SP
ld sp,hl         ; ld sp,hl         | 04025E 04025E || 04025E F9          0840     LD      SP,HL
ex de,hl         ; ex de,hl         | 04025F 04025F || 04025F EB          0841     EX      DE,HL
xor a            ; xor a            | 040260 040260 || 040260 AF          0842     XOR     A                ; Numeric marker
ld c,a           ; ld c,a           | 040261 040261 || 040261 4F          0843     LD      C,A              ; Integer marker
ex af,af'        ; ex af,af'        | 040262 040262 || 040262 08          0844     EX      AF,AF'
ld a,(iy)        ; ld a,(iy)        | 040263 040263 || 040263 FD 7E 00    0845     LD      A,(IY)
ret              ; ret              | 040266 040266 || 040266 C9          0846     RET
call $0402c9     ; call $0402c4     | 040267 040267 || 040267 CD C9 02 04 0850  EXPR3:   CALL    EXPR4   ; Get first operator by calling Level 3
cp $2d           ; cp $2d           | 04026B 04026B || 04026B FE 2D       0851  EXPR3A:   CP      '-'   ; Is it "-"?
jr z,$+$0b       ; jr z,$+$0b       | 04026D 04026D || 04026D 28 09       0852     JR      Z,EXPR3B  ; Yes, so skip the next bit
cp $2b           ; cp $2b           | 04026F 04026F || 04026F FE 2B       0853     CP      '+'   ; Is it "+"?
ret nz           ; ret nz           | 040271 040271 || 040271 C0          0854     RET     NZ   ; No, so return
ex af,af'        ; ex af,af'        | 040272 040272 || 040272 08          0855     EX      AF,AF'   ; Get the type
jp m,$040286     ; jp m,$040286     | 040273 040273 || 040273 FA 86 02 04 0856     JP      M,EXPR3S  ; Branch here if string
ex af,af'        ; ex af,af'        | 040277 040277 || 040277 08          0857     EX      AF,AF'
call $040a46     ; call $040a3e     | 040278 040278 || 040278 CD 46 0A 04 0858  EXPR3B:   CALL    SAVE_EV   ; Save the first operator
call $0402c9     ; call $0402c4     | 04027C 04027C || 04027C CD C9 02 04 0859     CALL    EXPR4   ; Fetch the second operator
call $040a55     ; call $040a4d     | 040280 040280 || 040280 CD 55 0A 04 0860     CALL    DOIT   ; Do the operation
jr $-$19         ; jr $-$19         | 040284 040284 || 040284 18 E5       0861     JR      EXPR3A   ; And continue
ex af,af'        ; ex af,af'        | 040286 040286 || 040286 08          0863  EXPR3S:   EX      AF,AF'   ; Handle string concatenation
inc iy           ; inc iy           | 040287 040287 || 040287 FD 23       0864     INC     IY               ; Bump past the "+"
call $0409b9     ; call $0409b4     | 040289 040289 || 040289 CD B9 09 04 0865     CALL    PUSHS            ; Save the string on the stack
call $0402c9     ; call $0402c4     | 04028D 04028D || 04028D CD C9 02 04 0866     CALL    EXPR4            ; Fetch the second operator
ex af,af'        ; ex af,af'        | 040291 040291 || 040291 08          0867     EX      AF,AF'
jp p,$04033b     ; jp p,$040336     | 040292 040292 || 040292 F2 3B 03 04 0868     JP      P,TYPE_EV_   ; If it is not a string, then Error: "Type mismatch"
ld bc,$000000    ; ld bc,$000000    | 040296 040296 || 040296 01 00 00 00 0869     LD BC, 0   ; Clear BC
ld c,e           ; ld c,e           | 04029A 04029A || 04029A 4B          0870     LD      C,E              ; C: Length of the second string
pop de           ; pop de           | 04029B 04029B || 04029B D1          0871     POP     DE
push de          ; push de          | 04029C 04029C || 04029C D5          0872     PUSH    DE
ld hl,$044a00    ; ld hl,$044a00    | 04029D 04029D || 04029D 21 00 4A 04 0873     LD      HL,ACCS
ld a,e           ;                  | 0402A1        || 0402A1 7B          0874     LD A,E   ;  E: Length of the first string
ld de,$044a00    ;                  | 0402A2        || 0402A2 11 00 4A 04 0875     LD      DE,ACCS
ld e,a           ;                  | 0402A6        || 0402A6 5F          0876     LD E,A    ; DE: Pointer to the end of the first string
ld a,c           ; ld a,c           | 0402A7 0402A2 || 0402A7 79          0877     LD      A,C
or a             ; or a             | 0402A8 0402A3 || 0402A8 B7          0878     OR      A
jr z,$+$11       ; jr z,$+$11       | 0402A9 0402A4 || 0402A9 28 0F       0879     JR      Z,EXP3S3
ld l,a           ; ld l,a           | 0402AB 0402A6 || 0402AB 6F          0880     LD      L,A              ; Source
add a,e          ; add a,e          | 0402AC 0402A7 || 0402AC 83          0881     ADD     A,E
ld e,a           ; ld e,a           | 0402AD 0402A8 || 0402AD 5F          0882     LD      E,A              ; Destination
ld a,$13         ; ld a,$13         | 0402AE 0402A9 || 0402AE 3E 13       0883     LD      A,19
jp c,$043798     ; jp c,$043760     | 0402B0 0402AB || 0402B0 DA 98 37 04 0884     JP      C,ERROR_          ; A carry indicates string > 255 bytes, so Error: "String too long"
push de          ; push de          | 0402B4 0402AF || 0402B4 D5          0885     PUSH    DE
dec e            ; dec e            | 0402B5 0402B0 || 0402B5 1D          0886     DEC     E
dec l            ; dec l            | 0402B6 0402B1 || 0402B6 2D          0887     DEC     L
lddr             ; lddr             | 0402B7 0402B2 || 0402B7 ED B8       0888     LDDR                     ; Copy
pop de           ; pop de           | 0402B9 0402B4 || 0402B9 D1          0889     POP     DE
exx              ; exx              | 0402BA 0402B5 || 0402BA D9          0890  EXP3S3:   EXX
pop bc           ; pop bc           | 0402BB 0402B6 || 0402BB C1          0891     POP     BC
call $0409e6     ; call $0409de     | 0402BC 0402B7 || 0402BC CD E6 09 04 0892     CALL    POPS             ; Restore from stack
exx              ; exx              | 0402C0 0402BB || 0402C0 D9          0893     EXX
or $80           ; or $80           | 0402C1 0402BC || 0402C1 F6 80       0894     OR      80H              ; Flag as a string
ex af,af'        ; ex af,af'        | 0402C3 0402BE || 0402C3 08          0895     EX      AF,AF'
ld a,(iy)        ; ld a,(iy)        | 0402C4 0402BF || 0402C4 FD 7E 00    0896     LD      A,(IY)   ; Fetch the next character
jr $-$5c         ; jr $-$57         | 0402C7 0402C2 || 0402C7 18 A2       0897     JR      EXPR3A   ; And continue
call $0402ea     ; call $0402e5     | 0402C9 0402C4 || 0402C9 CD EA 02 04 0901  EXPR4:   CALL    EXPR5   ; Get first operator by calling Level 2
cp $2a           ; cp $2a           | 0402CD 0402C8 || 0402CD FE 2A       0902  EXPR4A:   CP      '*'   ; "*" is valid
jr z,$+$0d       ; jr z,$+$0d       | 0402CF 0402CA || 0402CF 28 0B       0903     JR      Z,EXPR4B
cp $2f           ; cp $2f           | 0402D1 0402CC || 0402D1 FE 2F       0904     CP      '/'   ; "/" is valid
jr z,$+$09       ; jr z,$+$09       | 0402D3 0402CE || 0402D3 28 07       0905     JR      Z,EXPR4B
cp $83           ; cp $83           | 0402D5 0402D0 || 0402D5 FE 83       0906     CP      MODK   ; MOD token is valid
jr z,$+$05       ; jr z,$+$05       | 0402D7 0402D2 || 0402D7 28 03       0907     JR      Z,EXPR4B
cp $81           ; cp $81           | 0402D9 0402D4 || 0402D9 FE 81       0908     CP      DIVK   ; DIV token is valid
ret nz           ; ret nz           | 0402DB 0402D6 || 0402DB C0          0909     RET     NZ   ; And return if it is anything else
call $040a46     ; call $040a3e     | 0402DC 0402D7 || 0402DC CD 46 0A 04 0910  EXPR4B:   CALL    SAVE_EV
call $0402ea     ; call $0402e5     | 0402E0 0402DB || 0402E0 CD EA 02 04 0911     CALL    EXPR5
call $040a55     ; call $040a4d     | 0402E4 0402DF || 0402E4 CD 55 0A 04 0912     CALL    DOIT
jr $-$1b         ; jr $-$1b         | 0402E8 0402E3 || 0402E8 18 E3       0913     JR      EXPR4A
call $0403ca     ; call $0403c5     | 0402EA 0402E5 || 0402EA CD CA 03 04 0917  EXPR5:   CALL    ITEM   ; Get variable
or a             ; or a             | 0402EE 0402E9 || 0402EE B7          0918     OR      A                ; Test type
ex af,af'        ; ex af,af'        | 0402EF 0402EA || 0402EF 08          0919     EX      AF,AF'           ; Save type
call $040a78     ; call $040a70     | 0402F0 0402EB || 0402F0 CD 78 0A 04 0920  EXPR5A:   CALL    NXT   ; Skip spaces
cp $5e           ; cp $5e           | 0402F4 0402EF || 0402F4 FE 5E       0921     CP      '^'   ; Is the operator "^"?
ret nz           ; ret nz           | 0402F6 0402F1 || 0402F6 C0          0922     RET     NZ   ; No, so return
call $040a46     ; call $040a3e     | 0402F7 0402F2 || 0402F7 CD 46 0A 04 0923     CALL    SAVE_EV   ; Save first operand
call $0403ca     ; call $0403c5     | 0402FB 0402F6 || 0402FB CD CA 03 04 0924     CALL    ITEM   ; Get second operand
or a             ; or a             | 0402FF 0402FA || 0402FF B7          0925     OR      A   ; Test type
ex af,af'        ; ex af,af'        | 040300 0402FB || 040300 08          0926     EX      AF,AF'   ; Save type
call $040a55     ; call $040a4d     | 040301 0402FC || 040301 CD 55 0A 04 0927     CALL    DOIT   ; Do the operation
jr $-$15         ; jr $-$15         | 040305 040300 || 040305 18 E9       0928     JR      EXPR5A   ; And continue
call $0401c7     ; call $0401c7     | 040307 040302 || 040307 CD C7 01 04 0932  EXPRN:   CALL    EXPR   ; Evaluate expression
ex af,af'        ; ex af,af'        | 04030B 040306 || 04030B 08          0933     EX      AF,AF'   ; Get the type
ret p            ; ret p            | 04030C 040307 || 04030C F0          0934     RET     P   ; And return if it is a number
jr $+$2e         ; jr $+$2e         | 04030D 040308 || 04030D 18 2C       0935     JR      TYPE_EV_   ; Otherwise Error: "Type mismatch"
call $0401c7     ; call $0401c7     | 04030F 04030A || 04030F CD C7 01 04 0939  EXPRI:   CALL    EXPR   ; Evaluate the expression
ex af,af'        ; ex af,af'        | 040313 04030E || 040313 08          0940     EX      AF,AF'   ; Get the type
jp p,$040667     ; jp p,$040662     | 040314 04030F || 040314 F2 67 06 04 0941     JP      P,SFIX   ; If it is numeric, then convert to fixed-point notation
jr $+$23         ; jr $+$23         | 040318 040313 || 040318 18 21       0942     JR      TYPE_EV_   ; Otherwise Error: "Type mismatch"
call $0401c7     ; call $0401c7     | 04031A 040315 || 04031A CD C7 01 04 0946  EXPRS:   CALL    EXPR   ; Evaluate the expression
ex af,af'        ; ex af,af'        | 04031E 040319 || 04031E 08          0947     EX      AF,AF'   ; Get the type
ret m            ; ret m            | 04031F 04031A || 04031F F8          0948     RET     M   ; And return if it is a string
jr $+$1b         ; jr $+$1b         | 040320 04031B || 040320 18 19       0949     JR      TYPE_EV_   ; Otherwise Error: "Type mismatch"
call $0403ca     ; call $0403c5     | 040322 04031D || 040322 CD CA 03 04 0953  ITEMN:   CALL    ITEM   ; Get the variable
or a             ; or a             | 040326 040321 || 040326 B7          0954     OR      A   ; Test the type
ret p            ; ret p            | 040327 040322 || 040327 F0          0955     RET     P   ; And return if it is a number
jr $+$13         ; jr $+$13         | 040328 040323 || 040328 18 11       0956     JR      TYPE_EV_   ; Otherwise Error: "Type mismatch"
call $0403ca     ; call $0403c5     | 04032A 040325 || 04032A CD CA 03 04 0960  ITEMI:   CALL    ITEM   ; Get the variable
or a             ; or a             | 04032E 040329 || 04032E B7          0961     OR      A   ; Test the type
jp p,$040667     ; jp p,$040662     | 04032F 04032A || 04032F F2 67 06 04 0962     JP      P,SFIX   ; If it is numeric, then convert to fixed-point notation
jr $+$08         ; jr $+$08         | 040333 04032E || 040333 18 06       0963     JR      TYPE_EV_   ; Otherwise Error: "Type mismatch"
call $0403ca     ; call $0403c5     | 040335 040330 || 040335 CD CA 03 04 0967  ITEMS:   CALL    ITEM   ; Get the variable
or a             ; or a             | 040339 040334 || 040339 B7          0968     OR      A   ; Test the type
ret m            ; ret m            | 04033A 040335 || 04033A F8          0969     RET     M   ; If it is a string, then return
ld a,$06         ; ld a,$06         | 04033B 040336 || 04033B 3E 06       0971  TYPE_EV_:   LD      A,6   ; Error: "Type mismatch"
jp $043798       ; jp $043760       | 04033D 040338 || 04033D C3 98 37 04 0972     JP      ERROR_
call $0401c7     ; call $0401c7     | 040341 04033C || 040341 CD C7 01 04 0976  ITEM1:   CALL    EXPR             ; Evaluate the expression
call $040a37     ; call $040a2f     | 040345 040340 || 040345 CD 37 0A 04 0977     CALL    BRAKET   ; Check for closing bracket
ex af,af'        ; ex af,af'        | 040349 040344 || 040349 08          0978     EX      AF,AF'
ret              ; ret              | 04034A 040345 || 04034A C9          0979     RET
call $040998     ; call $040993     | 04034B 040346 || 04034B CD 98 09 04 0986  HEX:   CALL    ZERO   ; Set result to 0
call $040a00     ; call $0409f8     | 04034F 04034A || 04034F CD 00 0A 04 0987     CALL    HEXDIG   ; Fetch the character from IY
jr c,$+$1d       ; jr c,$+$1d       | 040353 04034E || 040353 38 1B       0988     JR      C,BADHEX  ; If invalid HEX character, then Error: "Bad HEX"
inc iy           ; inc iy           | 040355 040350 || 040355 FD 23       0989  HEX1:   INC     IY   ; Move pointer to next character
and $0f          ; and $0f          | 040357 040352 || 040357 E6 0F       0990     AND     0FH   ; Clear the top nibble
ld b,$04         ; ld b,$04         | 040359 040354 || 040359 06 04       0991     LD      B,4   ; Loop counter
exx              ; exx              | 04035B 040356 || 04035B D9          0993  HEX2:   EXX    ; Shift the result left B (4) times. This makes
add.sil hl,hl    ; add.sil hl,hl    | 04035C 040357 || 04035C 52 29       0994     ADD.S   HL,HL   ; space for the incoming nibble in the least significant 4 bits
exx              ; exx              | 04035E 040359 || 04035E D9          0995     EXX    ; .
adc.sil hl,hl    ; adc.sil hl,hl    | 04035F 04035A || 04035F 52 ED 6A    0996     ADC.S   HL,HL   ; .
djnz $-$07       ; djnz $-$07       | 040362 04035D || 040362 10 F7       0997     DJNZ    HEX2   ; And loop
exx              ; exx              | 040364 04035F || 040364 D9          0998     EXX
or l             ; or l             | 040365 040360 || 040365 B5          0999     OR      L   ; OR in the digit
ld l,a           ; ld l,a           | 040366 040361 || 040366 6F          1000     LD      L,A
exx              ; exx              | 040367 040362 || 040367 D9          1001     EXX
call $040a00     ; call $0409f8     | 040368 040363 || 040368 CD 00 0A 04 1003     CALL    HEXDIG   ; Fetch the next character
jr nc,$-$17      ; jr nc,$-$17      | 04036C 040367 || 04036C 30 E7       1004     JR      NC,HEX1   ; If it is a HEX digit then loop
xor a            ; xor a            | 04036E 040369 || 04036E AF          1005     XOR     A   ; Clear A
ret              ; ret              | 04036F 04036A || 04036F C9          1006     RET
ld a,$1c         ; ld a,$1c         | 040370 04036B || 040370 3E 1C       1008  BADHEX:   LD      A,28
jp $043798       ; jp $043760       | 040372 04036D || 040372 C3 98 37 04 1009     JP      ERROR_           ; Error: "Bad HEX"
call $040998     ; call $040993     | 040376 040371 || 040376 CD 98 09 04 1016  BIN:   CALL    ZERO   ; Set result to 0
call $040a13     ; call $040a0b     | 04037A 040375 || 04037A CD 13 0A 04 1017     CALL BINDIG   ; Fetch the character from IY
jr c,$+$15       ; jr c,$+$15       | 04037E 040379 || 04037E 38 13       1018     JR C,BADBIN  ; If invalid BIN character then Error: "Bad Binary"
inc iy           ; inc iy           | 040380 04037B || 040380 FD 23       1019  BIN1:   INC IY   ; Move pointer to next character
rrca             ; rrca             | 040382 04037D || 040382 0F          1020     RRCA    ; Bit 0 of ASCII '0' is 0, and ASCII '1' is 1, so shift that bit into carry
exx              ; exx              | 040383 04037E || 040383 D9          1021     EXX    ;
adc.sil hl,hl    ; adc.sil hl,hl    | 040384 04037F || 040384 52 ED 6A    1022     ADC.S HL,HL   ; And shift back into into H'L'HL (note the ADC)
exx              ; exx              | 040387 040382 || 040387 D9          1023     EXX
adc.sil hl,hl    ; adc.sil hl,hl    | 040388 040383 || 040388 52 ED 6A    1024     ADC.S HL,HL
call $040a13     ; call $040a0b     | 04038B 040386 || 04038B CD 13 0A 04 1025     CALL BINDIG   ; Fetch the next character
jr nc,$-$0f      ; jr nc,$-$0f      | 04038F 04038A || 04038F 30 EF       1026     JR NC,BIN1
xor a            ; xor a            | 040391 04038C || 040391 AF          1027     XOR A   ; Clear A
ret              ; ret              | 040392 04038D || 040392 C9          1028     RET
ld a,$1c         ; ld a,$1c         | 040393 04038E || 040393 3E 1C       1030  BADBIN:   LD A, 28   ; Error: "Bad Binary" - reuses same error code as Bad HEX
call $0437af     ; call $043777     | 040395 040390 || 040395 CD AF 37 04 1031     CALL EXTERR
ld b,d           ; ld b,d           | 040399 040394 || 040399 42 61 64 20 1032     DB "Bad Binary", 0
ld h,c           ;                  | 04039A        || ld h,c                         ; 040395
ld h,h           ;                  | 04039B        || ld h,h                         ; 040396
jr nz,$+$44      ;                  | 04039C        || jr nz,$+$44                    ; 040397
ld l,c           ;                  | 04039E        || ld l,c                         ; 040399
ld l,(hl)        ;                  | 04039F        || ld l,(hl)                      ; 04039A
ld h,c           ;                  | 0403A0        || ld h,c                         ; 04039B
ld (hl),d        ;                  | 0403A1        || ld (hl),d                      ; 04039C
ld a,c           ;                  | 0403A2        || ld a,c                         ; 04039D
nop              ;                  | 0403A3        || nop                            ; 04039E
call $040322     ; call $04031d     | 0403A4 04039F || 0403A4 CD 22 03 04 1039  MINUS:   CALL    ITEMN   ; Get the numeric argument
dec c            ; dec c            | 0403A8 0403A3 || 0403A8 0D          1040  MINUS0:   DEC     C   ; Check exponent (C)
inc c            ; inc c            | 0403A9 0403A4 || 0403A9 0C          1041     INC     C   ; If it is zero, then it's either a FP zero or an integer
jr z,$+$08       ; jr z,$+$08       | 0403AA 0403A5 || 0403AA 28 06       1042     JR      Z,NEGATE_EV         ; So do an integer negation
ld a,h           ; ld a,h           | 0403AC 0403A7 || 0403AC 7C          1044     LD      A,H   ; Do a FP negation by
xor $80          ; xor $80          | 0403AD 0403A8 || 0403AD EE 80       1045     XOR     80H              ; Toggling the sign bit (H)
ld h,a           ; ld h,a           | 0403AF 0403AA || 0403AF 67          1046     LD      H,A
xor a            ; xor a            | 0403B0 0403AB || 0403B0 AF          1047     XOR     A                ; Numeric marker
ret              ; ret              | 0403B1 0403AC || 0403B1 C9          1048     RET
exx              ; exx              | 0403B2 0403AD || 0403B2 D9          1050  NEGATE_EV:   EXX    ; This section does a two's complement negation on H'L'HLC
ld a,h           ; ld a,h           | 0403B3 0403AE || 0403B3 7C          1051     LD      A,H   ; First do a one's complement by negating all the bytes
cpl              ; cpl              | 0403B4 0403AF || 0403B4 2F          1052     CPL
ld h,a           ; ld h,a           | 0403B5 0403B0 || 0403B5 67          1053     LD      H,A
ld a,l           ; ld a,l           | 0403B6 0403B1 || 0403B6 7D          1054     LD      A,L
cpl              ; cpl              | 0403B7 0403B2 || 0403B7 2F          1055     CPL
ld l,a           ; ld l,a           | 0403B8 0403B3 || 0403B8 6F          1056     LD      L,A
exx              ; exx              | 0403B9 0403B4 || 0403B9 D9          1057     EXX
ld a,h           ; ld a,h           | 0403BA 0403B5 || 0403BA 7C          1058     LD      A,H
cpl              ; cpl              | 0403BB 0403B6 || 0403BB 2F          1059     CPL
ld h,a           ; ld h,a           | 0403BC 0403B7 || 0403BC 67          1060     LD      H,A
ld a,l           ; ld a,l           | 0403BD 0403B8 || 0403BD 7D          1061     LD      A,L
cpl              ; cpl              | 0403BE 0403B9 || 0403BE 2F          1062     CPL
ld l,a           ; ld l,a           | 0403BF 0403BA || 0403BF 6F          1063     LD      L,A
exx              ; exx              | 0403C0 0403BB || 0403C0 D9          1064  ADD1:   EXX    ; Then add 1
inc hl           ; inc hl           | 0403C1 0403BC || 0403C1 23          1065     INC     HL
ld a,h           ; ld a,h           | 0403C2 0403BD || 0403C2 7C          1066     LD      A,H
or l             ; or l             | 0403C3 0403BE || 0403C3 B5          1067     OR      L
exx              ; exx              | 0403C4 0403BF || 0403C4 D9          1068     EXX
ld a,$00         ; ld a,$00         | 0403C5 0403C0 || 0403C5 3E 00       1069     LD      A,0              ; Numeric marker
ret nz           ; ret nz           | 0403C7 0403C2 || 0403C7 C0          1070     RET     NZ
inc hl           ; inc hl           | 0403C8 0403C3 || 0403C8 23          1071     INC     HL
ret              ; ret              | 0403C9 0403C4 || 0403C9 C9          1072     RET
call $041681     ; call $04164f     | 0403CA 0403C5 || 0403CA CD 81 16 04 1081  ITEM:   CALL    CHECK   ; Check there's at least a page of free memory left and Error: "No room" if not
call $040a78     ; call $040a70     | 0403CE 0403C9 || 0403CE CD 78 0A 04 1082     CALL    NXT   ; Skip spaces
inc iy           ; inc iy           | 0403D2 0403CD || 0403D2 FD 23       1083     INC     IY   ; Move to the prefix character
cp $26           ; cp $26           | 0403D4 0403CF || 0403D4 FE 26       1084     CP      '&'   ; If `&`
jp z,$04034b     ; jp z,$040346     | 0403D6 0403D1 || 0403D6 CA 4B 03 04 1085     JP      Z,HEX            ; Then get a HEX constant
cp $25           ; cp $25           | 0403DA 0403D5 || 0403DA FE 25       1086     CP '%'   ; If '%'
jr z,$-$66       ; jr z,$-$66       | 0403DC 0403D7 || 0403DC 28 98       1087     JR Z,BIN   ; Then get a BINARY constant
cp $2d           ; cp $2d           | 0403DE 0403D9 || 0403DE FE 2D       1088     CP      '-'   ; If `-`
jr z,$-$3c       ; jr z,$-$3c       | 0403E0 0403DB || 0403E0 28 C2       1089     JR      Z,MINUS          ; Then get a negative number
cp $2b           ; cp $2b           | 0403E2 0403DD || 0403E2 FE 2B       1090     CP      '+'   ; If `+`
jp z,$040322     ; jp z,$04031d     | 0403E4 0403DF || 0403E4 CA 22 03 04 1091     JP      Z,ITEMN          ; Then just fetch the number (unary plus)
cp $28           ; cp $28           | 0403E8 0403E3 || 0403E8 FE 28       1092     CP      '('   ; If `(`
jp z,$040341     ; jp z,$04033c     | 0403EA 0403E5 || 0403EA CA 41 03 04 1093     JP      Z,ITEM1          ; Start of a bracketed expression
cp $22           ; cp $22           | 0403EE 0403E9 || 0403EE FE 22       1094     CP      34   ; If `"`
jr z,$+$7c       ; jr z,$+$7c       | 0403F0 0403EB || 0403F0 28 7A       1095     JR      Z,CONS           ; Start of a string constant
cp $c6           ; cp $c6           | 0403F2 0403ED || 0403F2 FE C6       1096     CP      TCMD_EV   ; Is it out of range of the function table?
jp nc,$040c9f    ; jp nc,$040c97    | 0403F4 0403EF || 0403F4 D2 9F 0C 04 1097     JP      NC,SYNTAX        ; Error: "Syntax Error"
cp $8d           ; cp $8d           | 0403F8 0403F3 || 0403F8 FE 8D       1098     CP      FUNTOK   ; If it is in range, then
jp nc,$040a8b    ; jp nc,$040a83    | 0403FA 0403F5 || 0403FA D2 8B 0A 04 1099     JP      NC,DISPAT        ; It's a function
dec iy           ; dec iy           | 0403FE 0403F9 || 0403FE FD 2B       1100     DEC     IY
cp $3a           ; cp $3a           | 040400 0403FB || 040400 FE 3A       1101     CP      ':'
jr nc,$+$0e      ; jr nc,$+$0e      | 040402 0403FD || 040402 30 0C       1102     JR      NC,ITEM2  ; VARIABLE?
cp $30           ; cp $30           | 040404 0403FF || 040404 FE 30       1103     CP      '0'
jp nc,$040493    ; jp nc,$04048e    | 040406 040401 || 040406 D2 93 04 04 1104     JP      NC,CON   ; NUMERIC CONSTANT
cp $2e           ; cp $2e           | 04040A 040405 || 04040A FE 2E       1105     CP      '.'
jp z,$040493     ; jp z,$04048e     | 04040C 040407 || 04040C CA 93 04 04 1106     JP      Z,CON   ; NUMERIC CONSTANT
call $043a72     ; call $043a3a     | 040410 04040B || 040410 CD 72 3A 04 1107  ITEM2:   CALL    GETVAR   ; VARIABLE
jr nz,$+$39      ; jr nz,$+$39      | 040414 04040F || 040414 20 37       1108     JR      NZ,NOSUCH
or a             ; or a             | 040416 040411 || 040416 B7          1109     OR      A
jp m,$0404a5     ; jp m,$0404a0     | 040417 040412 || 040417 FA A5 04 04 1110     JP      M,LOADS   ; STRING VARIABLE
or a             ; or a             | 04041B 040416 || 04041B B7          1111  LOADN:   OR      A
jr z,$+$22       ; jr z,$+$22       | 04041C 040417 || 04041C 28 20       1112     JR      Z,LOAD1   ; BYTE VARIABLE
ld c,$00         ; ld c,$00         | 04041E 040419 || 04041E 0E 00       1113     LD      C,0
bit 0,a          ; bit 0,a          | 040420 04041B || 040420 CB 47       1114     BIT     0,A
jr z,$+$05       ; jr z,$+$05       | 040422 04041D || 040422 28 03       1115     JR      Z,LOAD4   ; INTEGER VARIABLE
ld c,(ix+$04)    ; ld c,(ix+$04)    | 040424 04041F || 040424 DD 4E 04    1116  LOAD5:   LD      C,(IX+4)
exx              ; exx              | 040427 040422 || 040427 D9          1117  LOAD4:   EXX
ld hl,$000000    ; ld hl,$000000    | 040428 040423 || 040428 21 00 00 00 1118     LD HL, 0   ; TODO: Optimise
ld l,(ix)        ; ld l,(ix)        | 04042C 040427 || 04042C DD 6E 00    1119     LD      L,(IX+0)
ld h,(ix+$01)    ; ld h,(ix+$01)    | 04042F 04042A || 04042F DD 66 01    1120     LD      H,(IX+1)
exx              ; exx              | 040432 04042D || 040432 D9          1121     EXX
ld hl,$000000    ; ld hl,$000000    | 040433 04042E || 040433 21 00 00 00 1122     LD HL, 0   ; TODO: Optimise
ld l,(ix+$02)    ; ld l,(ix+$02)    | 040437 040432 || 040437 DD 6E 02    1123     LD      L,(IX+2)
ld h,(ix+$03)    ; ld h,(ix+$03)    | 04043A 040435 || 04043A DD 66 03    1124     LD      H,(IX+3)
ret              ; ret              | 04043D 040438 || 04043D C9          1125     RET
ld hl,$000000    ; ld hl,$000000    | 04043E 040439 || 04043E 21 00 00 00 1127  LOAD1:   LD      HL,0
exx              ; exx              | 040442 04043D || 040442 D9          1128     EXX
ld hl,$000000    ; ld hl,$000000    | 040443 04043E || 040443 21 00 00 00 1129     LD      HL,0   ; TODO: Optimise
ld l,(ix)        ; ld l,(ix)        | 040447 040442 || 040447 DD 6E 00    1130     LD      L,(IX+0)
exx              ; exx              | 04044A 040445 || 04044A D9          1131     EXX
ld c,h           ; ld c,h           | 04044B 040446 || 04044B 4C          1132     LD      C,H
ret              ; ret              | 04044C 040447 || 04044C C9          1133     RET
jp c,$040c9f     ; jp c,$040c97     | 04044D 040448 || 04044D DA 9F 0C 04 1135  NOSUCH:   JP      C,SYNTAX
ld a,($044d40)   ; ld a,($044d40)   | 040451 04044C || 040451 3A 40 4D 04 1136     LD      A,(LISTON)
bit 5,a          ; bit 5,a          | 040455 040450 || 040455 CB 6F       1137     BIT     5,A
ld a,$1a         ; ld a,$1a         | 040457 040452 || 040457 3E 1A       1138     LD      A,26
jr nz,$+$28      ; jr nz,$+$28      | 040459 040454 || 040459 20 26       1139     JR      NZ,ERROR0_EV  ; Throw "No such variable"
inc iy           ; inc iy           | 04045B 040456 || 04045B FD 23       1140  NOS1:   INC     IY
call $043ca7     ; call $043c6f     | 04045D 040458 || 04045D CD A7 3C 04 1141     CALL    RANGE
jr nc,$-$06      ; jr nc,$-$06      | 040461 04045C || 040461 30 F8       1142     JR      NC,NOS1
ld ix,$113040    ; ld ix,$044c40    | 040463 04045E || 040463 DD 21 40 30 1143     LD      IX,PC
xor a            ; xor a            | 040468 040463 || 040468 AF          1144     XOR     A
ld c,a           ; ld c,a           | 040469 040464 || 040469 4F          1145     LD      C,A
jr $-$43         ; jr $-$43         | 04046A 040465 || 04046A 18 BB       1146     JR      LOAD4
ld de,$044a00    ; ld de,$044a00    | 04046C 040467 || 04046C 11 00 4A 04 1155  CONS:   LD      DE,ACCS   ; DE: Pointer to the string accumulator
ld a,(iy)        ; ld a,(iy)        | 040470 04046B || 040470 FD 7E 00    1156  CONS3:   LD      A,(IY)   ; Fetch the first character and
inc iy           ; inc iy           | 040473 04046E || 040473 FD 23       1157     INC     IY   ; Increment the pointer
cp $22           ; cp $22           | 040475 040470 || 040475 FE 22       1158     CP      '"'   ; Check for start quote
jr z,$+$0e       ; jr z,$+$0e       | 040477 040472 || 040477 28 0C       1159     JR      Z,CONS2   ; Yes, so jump to the bit that parses the string
ld (de),a        ; ld (de),a        | 040479 040474 || 040479 12          1161  CONS1:   LD      (DE),A   ; Store the character in the string accumulator
inc e            ; inc e            | 04047A 040475 || 04047A 1C          1162     INC     E   ; Increment the string accumulator pointer
cp $0d           ; cp $0d           | 04047B 040476 || 04047B FE 0D       1163     CP      CR   ; Is it CR
jr nz,$-$0d      ; jr nz,$-$0d      | 04047D 040478 || 04047D 20 F1       1164     JR      NZ,CONS3  ; No, so keep looping
ld a,$09         ; ld a,$09         | 04047F 04047A || 04047F 3E 09       1166     LD      A,9
jp $043798       ; jp $043760       | 040481 04047C || 040481 C3 98 37 04 1167  ERROR0_EV:   JP      ERROR_            ; Throw error "Missing '"'
ld a,(iy)        ; ld a,(iy)        | 040485 040480 || 040485 FD 7E 00    1169  CONS2:   LD      A,(IY)   ; Fetch the next character
cp $22           ; cp $22           | 040488 040483 || 040488 FE 22       1170     CP      '"'   ; Check for end quote?
inc iy           ; inc iy           | 04048A 040485 || 04048A FD 23       1171     INC     IY   ; Increment the pointer
jr z,$-$13       ; jr z,$-$13       | 04048C 040487 || 04048C 28 EB       1172     JR      Z,CONS1   ; It is the end of string marker so jump to the end routine
dec iy           ; dec iy           | 04048E 040489 || 04048E FD 2B       1173     DEC     IY   ;
ld a,$80         ; ld a,$80         | 040490 04048B || 040490 3E 80       1174     LD      A,80H            ; String marker
ret              ; ret              | 040492 04048D || 040492 C9          1175     RET
push iy          ; push iy          | 040493 04048E || 040493 FD E5       1183  CON:   PUSH    IY
pop ix           ; pop ix           | 040495 040490 || 040495 DD E1       1184     POP     IX
ld a,$24         ; ld a,$24         | 040497 040492 || 040497 3E 24       1185     LD      A,36
call $0420a2     ; call $04206a     | 040499 040494 || 040499 CD A2 20 04 1186     CALL    FPP
jr c,$-$1c       ; jr c,$-$1c       | 04049D 040498 || 04049D 38 E2       1187     JR      C,ERROR0_EV
push ix          ; push ix          | 04049F 04049A || 04049F DD E5       1188     PUSH    IX
pop iy           ; pop iy           | 0404A1 04049C || 0404A1 FD E1       1189     POP     IY
xor a            ; xor a            | 0404A3 04049E || 0404A3 AF          1190     XOR     A
ret              ; ret              | 0404A4 04049F || 0404A4 C9          1191     RET
ld de,$044a00    ; ld de,$044a00    | 0404A5 0404A0 || 0404A5 11 00 4A 04 1193  LOADS:   LD      DE,ACCS   ; Where to store the string
rra              ; rra              | 0404A9 0404A4 || 0404A9 1F          1194     RRA
jr nc,$+$1c      ; jr nc,$+$1c      | 0404AA 0404A5 || 0404AA 30 1A       1195     JR      NC,LOADS2        ; Skip if it is a fixed string
exx              ; exx              | 0404AC 0404A7 || 0404AC D9          1197     EXX    ; This block was a call to LOAD4
ld l,(ix)        ; ld l,(ix)        | 0404AD 0404A8 || 0404AD DD 6E 00    1198     LD      L,(IX+0)  ; The length of the string currently stored in the allocated space
ld h,(ix+$01)    ; ld h,(ix+$01)    | 0404B0 0404AB || 0404B0 DD 66 01    1199     LD      H,(IX+1)  ; The maximum original string length
exx              ; exx              | 0404B3 0404AE || 0404B3 D9          1200     EXX
ld hl,(ix+$02)   ; ld hl,(ix+$02)   | 0404B4 0404AF || 0404B4 DD 27 02    1201     LD HL,(IX+2)  ; Address of the string (24-bit)
exx              ; exx              | 0404B7 0404B2 || 0404B7 D9          1203     EXX
ld a,l           ; ld a,l           | 0404B8 0404B3 || 0404B8 7D          1204     LD      A,L
exx              ; exx              | 0404B9 0404B4 || 0404B9 D9          1205     EXX
or a             ; or a             | 0404BA 0404B5 || 0404BA B7          1206     OR      A
ld bc,$000000    ; ld bc,$000000    | 0404BB 0404B6 || 0404BB 01 00 00 00 1207     LD BC,0   ; BC: Number of bytes to copy
ld c,a           ; ld c,a           | 0404BF 0404BA || 0404BF 4F          1208     LD      C,A
ld a,$80         ; ld a,$80         | 0404C0 0404BB || 0404C0 3E 80       1209     LD      A,80H            ; String marker
ret z            ; ret z            | 0404C2 0404BD || 0404C2 C8          1210     RET     Z
ldir             ; ldir             | 0404C3 0404BE || 0404C3 ED B0       1211     LDIR
ret              ; ret              | 0404C5 0404C0 || 0404C5 C9          1212     RET
ld a,(hl)        ; ld a,(hl)        | 0404C6 0404C1 || 0404C6 7E          1213  LOADS2:   LD      A,(HL)
ld (de),a        ; ld (de),a        | 0404C7 0404C2 || 0404C7 12          1214     LD      (DE),A
inc hl           ; inc hl           | 0404C8 0404C3 || 0404C8 23          1215     INC     HL
cp $0d           ; cp $0d           | 0404C9 0404C4 || 0404C9 FE 0D       1216     CP      CR
ld a,$80         ; ld a,$80         | 0404CB 0404C6 || 0404CB 3E 80       1217     LD      A,80H            ; String marker
ret z            ; ret z            | 0404CD 0404C8 || 0404CD C8          1218     RET     Z
inc e            ; inc e            | 0404CE 0404C9 || 0404CE 1C          1219     INC     E
jr nz,$-$09      ; jr nz,$-$09      | 0404CF 0404CA || 0404CF 20 F5       1220     JR      NZ,LOADS2
ret              ; ret              | 0404D1 0404CC || 0404D1 C9          1221     RET                      ; Return null string
call $043f04     ; call $043ecc     | 0404D2 0404CD || 0404D2 CD 04 3F 04 1250  POS:   CALL    GETCSR   ; Return the horizontal cursor position
ex de,hl         ; ex de,hl         | 0404D6 0404D1 || 0404D6 EB          1251     EX      DE,HL   ;  L: The X cursor position
jp $040586       ; jp $040581       | 0404D7 0404D2 || 0404D7 C3 86 05 04 1252     JP      COUNT1   ; Return an 8-bit value
call $043f04     ; call $043ecc     | 0404DB 0404D6 || 0404DB CD 04 3F 04 1254  VPOS:   CALL    GETCSR   ; Return the vertical cursor position
jp $040586       ; jp $040581       | 0404DF 0404DA || 0404DF C3 86 05 04 1255     JP      COUNT1   ; Return an 8-bit value
call $0418b8     ; call $041886     | 0404E3 0404DE || 0404E3 CD B8 18 04 1257  EOF:   CALL    CHANEL   ; Check for EOF
call $04438d     ; call $044344     | 0404E7 0404E2 || 0404E7 CD 8D 43 04 1258     CALL    OSSTAT
jp z,$04060a     ; jp z,$040605     | 0404EB 0404E6 || 0404EB CA 0A 06 04 1259     JP      Z,TRUE   ; Yes, so return true
jp $040998       ; jp $040993       | 0404EF 0404EA || 0404EF C3 98 09 04 1260     JP      ZERO   ; Otherwise return false (zero)
call $0418b8     ; call $041886     | 0404F3 0404EE || 0404F3 CD B8 18 04 1262  BGET:   CALL    CHANEL           ; Channel number
call $04437c     ; call $044333     | 0404F7 0404F2 || 0404F7 CD 7C 43 04 1263     CALL    OSBGET
ld l,a           ; ld l,a           | 0404FB 0404F6 || 0404FB 6F          1264     LD      L,A
jp $040584       ; jp $04057f       | 0404FC 0404F7 || 0404FC C3 84 05 04 1265     JP      COUNT0   ; Return an 8-bit value
call $04032a     ; call $040325     | 040500 0404FB || 040500 CD 2A 03 04 1267  INKEY:   CALL    ITEMI   ; Get the argument
bit 7,h          ; bit 7,h          | 040504 0404FF || 040504 CB 7C       1268     BIT 7, H   ; Check the sign
exx              ; exx              | 040506 040501 || 040506 D9          1269     EXX    ; HL: The argument
jp nz,$0407f0    ; jp nz,$0407eb    | 040507 040502 || 040507 C2 F0 07 04 1270     JP NZ, INKEYM  ; It's negative, so do INKEY(-n)
call $0407e2     ; call $0407dd     | 04050B 040506 || 04050B CD E2 07 04 1271     CALL INKEY0    ; Do INKEY(n)
jr $+$1f         ; jr $+$1f         | 04050F 04050A || 04050F 18 1D       1272     JR      ASC0   ; Return a numeric value
call $040a78     ; call $040a70     | 040511 04050C || 040511 CD 78 0A 04 1274  GET:   CALL    NXT   ; Skip whitespace
cp $28           ; cp $28           | 040515 040510 || 040515 FE 28       1275     CP      '('   ; Is it GET(
jr nz,$+$0d      ; jr nz,$+$0d      | 040517 040512 || 040517 20 0B       1276     JR      NZ,GET0   ; No, so get a keyboard character
call $04032a     ; call $040325     | 040519 040514 || 040519 CD 2A 03 04 1277     CALL    ITEMI            ; Yes, so fetch the port address
exx              ; exx              | 04051D 040518 || 04051D D9          1278     EXX
ld b,h           ; ld b,h           | 04051E 040519 || 04051E 44          1279     LD      B,H   ; BC: The port address
ld c,l           ; ld c,l           | 04051F 04051A || 04051F 4D          1280     LD      C,L
in l,(bc)        ; in l,(bc)        | 040520 04051B || 040520 ED 68       1281     IN      L,(C)            ;  L: Input from port BC
jr $+$62         ; jr $+$62         | 040522 04051D || 040522 18 60       1282     JR      COUNT0   ; Return an 8-bit value
call $0407cc     ; call $0407c7     | 040524 04051F || 040524 CD CC 07 04 1284  GET0:   CALL    GETS   ; Read the keyboard character
jr $+$0c         ; jr $+$0c         | 040528 040523 || 040528 18 0A       1285     JR      ASC1   ; And return the value
call $040335     ; call $040330     | 04052A 040525 || 04052A CD 35 03 04 1287  ASC:   CALL    ITEMS   ; Get the string argument argument
xor a            ; xor a            | 04052E 040529 || 04052E AF          1288  ASC0:   XOR     A   ; Quickly check the length of the string in ACCS
cp e             ; cp e             | 04052F 04052A || 04052F BB          1289     CP      E   ; Is the pointer 0
jp z,$04060a     ; jp z,$040605     | 040530 04052B || 040530 CA 0A 06 04 1290     JP      Z,TRUE           ; Yes, so return -1 as it is a null string
ld hl,($044a00)  ; ld hl,($044a00)  | 040534 04052F || 040534 2A 00 4A 04 1291  ASC1:   LD      HL,(ACCS)  ;  L: The first character (H will be discarded in COUNT0
jr $+$4c         ; jr $+$4c         | 040538 040533 || 040538 18 4A       1292     JR      COUNT0   ; An 8-bit value
call $040335     ; call $040330     | 04053A 040535 || 04053A CD 35 03 04 1294  LEN:   CALL    ITEMS   ; Get the string argument
ex de,hl         ; ex de,hl         | 04053E 040539 || 04053E EB          1295     EX      DE,HL   ; HL: Pointer into ACCS
jr $+$45         ; jr $+$45         | 04053F 04053A || 04053F 18 43       1296     JR      COUNT0   ; Return L
ld hl,($044d1a)  ; ld hl,($044d1a)  | 040541 04053C || 040541 2A 1A 4D 04 1298  LOMEMV:   LD      HL,(LOMEM)  ; Return the LOMEM system variable
ld a,($044d1c)   ; ld a,($044d1c)   | 040545 040540 || 040545 3A 1C 4D 04 1299     LD A, (LOMEM+2)
jr $+$43         ; jr $+$43         | 040549 040544 || 040549 18 41       1300     JR      COUNT2   ; A 24-bit value
ld hl,($044d20)  ; ld hl,($044d20)  | 04054B 040546 || 04054B 2A 20 4D 04 1302  HIMEMV:   LD      HL,(HIMEM)  ; Return the HIMEM system variable
ld a,($044d22)   ; ld a,($044d22)   | 04054F 04054A || 04054F 3A 22 4D 04 1303     LD A, (HIMEM+2)
jr $+$39         ; jr $+$39         | 040553 04054E || 040553 18 37       1304     JR      COUNT2   ; A 24-bit value
ld hl,($044d14)  ; ld hl,($044d14)  | 040555 040550 || 040555 2A 14 4D 04 1306  PAGEV:   LD     HL,(PAGE_)  ; Return the PAGE system variable
ld a,($044d16)   ; ld a,($044d16)   | 040559 040554 || 040559 3A 16 4D 04 1307     LD A, (PAGE_+2)  ; A 24-bit value
jr $+$2f         ; jr $+$2f         | 04055D 040558 || 04055D 18 2D       1308     JR      COUNT2
ld a,(iy)        ; ld a,(iy)        | 04055F 04055A || 04055F FD 7E 00    1310  TOPV:   LD      A,(IY)   ; Return the TOP system variable
inc iy           ; inc iy           | 040562 04055D || 040562 FD 23       1311     INC     IY               ; Skip "P"
cp $50           ; cp $50           | 040564 04055F || 040564 FE 50       1312     CP      'P'
jp nz,$040c9f    ; jp nz,$040c97    | 040566 040561 || 040566 C2 9F 0C 04 1313     JP      NZ,SYNTAX        ; Throw "Syntax Error"
ld hl,($044d17)  ; ld hl,($044d17)  | 04056A 040565 || 04056A 2A 17 4D 04 1314     LD      HL,(TOP)
ld a,($044d19)   ; ld a,($044d19)   | 04056E 040569 || 04056E 3A 19 4D 04 1315     LD A, (TOP+2)
jr $+$1a         ; jr $+$1a         | 040572 04056D || 040572 18 18       1316     JR      COUNT2
ld hl,($044d33)  ; ld hl,($044d33)  | 040574 04056F || 040574 2A 33 4D 04 1318  ERLV:   LD      HL,(ERL)  ; Return the error line
jr $+$0e         ; jr $+$0e         | 040578 040573 || 040578 18 0C       1319     JR      COUNT1   ; A 16-bit value
ld hl,($044d3f)  ; ld hl,($044d3f)  | 04057A 040575 || 04057A 2A 3F 4D 04 1321  ERRV:   LD      HL,(ERR)  ; Return the error value
jr $+$06         ; jr $+$06         | 04057E 040579 || 04057E 18 04       1322     JR      COUNT0   ; An 8-bit value
ld hl,($044d3d)  ; ld hl,($044d3d)  | 040580 04057B || 040580 2A 3D 4D 04 1324  COUNTV:   LD      HL,(COUNT)  ; Return the print position sysvar
ld h,$00         ; ld h,$00         | 040584 04057F || 040584 26 00       1326  COUNT0:   LD      H,0   ; Return L
exx              ; exx              | 040586 040581 || 040586 D9          1327  COUNT1:   EXX    ; Return HL
xor a            ; xor a            | 040587 040582 || 040587 AF          1328     XOR     A
ld c,a           ; ld c,a           | 040588 040583 || 040588 4F          1329     LD      C,A              ; Integer marker
ld h,a           ; ld h,a           | 040589 040584 || 040589 67          1330     LD      H,A
ld l,a           ; ld l,a           | 04058A 040585 || 04058A 6F          1331     LD      L,A
ret              ; ret              | 04058B 040586 || 04058B C9          1332     RET
exx              ; exx              | 04058C 040587 || 04058C D9          1333  COUNT2:   EXX
ld l,a           ; ld l,a           | 04058D 040588 || 04058D 6F          1334     LD L,A
xor a            ; xor a            | 04058E 040589 || 04058E AF          1335     XOR A
ld c,a           ; ld c,a           | 04058F 04058A || 04058F 4F          1336     LD C,A   ; Integer marker
ld h,a           ; ld h,a           | 040590 04058B || 040590 67          1337     LD H,A
ret              ; ret              | 040591 04058C || 040591 C9          1338     RET
xor a            ; xor a            | 040592 04058D || 040592 AF          1345  OPENOT:   XOR     A   ; Open for writing
jr $+$08         ; jr $+$08         | 040593 04058E || 040593 18 06       1346     JR OPENIN_1
ld a,$02         ; ld a,$02         | 040595 040590 || 040595 3E 02       1348  OPENUP:   LD      A,2   ; Open for reading / writing
jr $+$04         ; jr $+$04         | 040597 040592 || 040597 18 02       1349     JR OPENIN_1
ld a,$01         ; ld a,$01         | 040599 040594 || 040599 3E 01       1351  OPENIN:   LD      A,1   ; Open for reading
push af          ; push af          | 04059B 040596 || 04059B F5          1353  OPENIN_1:  PUSH    AF               ; Save OPEN type
call $040335     ; call $040330     | 04059C 040597 || 04059C CD 35 03 04 1354     CALL    ITEMS            ; Fetch the filename
ld a,$0d         ; ld a,$0d         | 0405A0 04059B || 0405A0 3E 0D       1355     LD      A,CR
ld (de),a        ; ld (de),a        | 0405A2 04059D || 0405A2 12          1356     LD      (DE),A
pop af           ; pop af           | 0405A3 04059E || 0405A3 F1          1357     POP     AF               ; Restore the OPEN type
add a,$ff        ; add a,$ff        | 0405A4 04059F || 0405A4 C6 FF       1358     ADD     A,-1             ; Affect the flags
ld hl,$044a00    ; ld hl,$044a00    | 0405A6 0405A1 || 0405A6 21 00 4A 04 1359     LD      HL,ACCS
call $044365     ; call $04431c     | 0405AA 0405A5 || 0405AA CD 65 43 04 1360     CALL    OSOPEN   ; Call the OS specific OPEN routine in patch.asm
ld l,a           ; ld l,a           | 0405AE 0405A9 || 0405AE 6F          1361     LD      L,A   ; L: Channel number
jr $-$2b         ; jr $-$2b         | 0405AF 0405AA || 0405AF 18 D3       1362     JR      COUNT0   ; Return channel number to BASIC
call $0418b8     ; call $041886     | 0405B1 0405AC || 0405B1 CD B8 18 04 1368  EXT:   CALL    CHANEL
call $0443c3     ; call $04437a     | 0405B5 0405B0 || 0405B5 CD C3 43 04 1369     CALL    GETEXT
jr $+$17         ; jr $+$17         | 0405B9 0405B4 || 0405B9 18 15       1370     JR      TIME0
call $0418b8     ; call $041886     | 0405BB 0405B6 || 0405BB CD B8 18 04 1372  PTR_EV:   CALL    CHANEL
call $044397     ; call $04434e     | 0405BF 0405BA || 0405BF CD 97 43 04 1373     CALL    GETPTR
jr $+$0d         ; jr $+$0d         | 0405C3 0405BE || 0405C3 18 0B       1374     JR      TIME0
ld a,(iy)        ; ld a,(iy)        | 0405C5 0405C0 || 0405C5 FD 7E 00    1379  TIMEV:   LD      A,(IY)
cp $24           ; cp $24           | 0405C8 0405C3 || 0405C8 FE 24       1380     CP      '$'
jr z,$+$0c       ; jr z,$+$0c       | 0405CA 0405C5 || 0405CA 28 0A       1381     JR      Z,TIMEVS
call $043ee4     ; call $043eac     | 0405CC 0405C7 || 0405CC CD E4 3E 04 1382     CALL    GETIME
push de          ; push de          | 0405D0 0405CB || 0405D0 D5          1383  TIME0:   PUSH    DE
exx              ; exx              | 0405D1 0405CC || 0405D1 D9          1384     EXX
pop hl           ; pop hl           | 0405D2 0405CD || 0405D2 E1          1385     POP     HL
xor a            ; xor a            | 0405D3 0405CE || 0405D3 AF          1386     XOR     A
ld c,a           ; ld c,a           | 0405D4 0405CF || 0405D4 4F          1387     LD      C,A
ret              ; ret              | 0405D5 0405D0 || 0405D5 C9          1388     RET
inc iy           ; inc iy           | 0405D6 0405D1 || 0405D6 FD 23       1393  TIMEVS:   INC     IY              ;SKIP $
call $0443dc     ; call $044393     | 0405D8 0405D3 || 0405D8 CD DC 43 04 1394     CALL    GETIMS
ld a,$80         ; ld a,$80         | 0405DC 0405D7 || 0405DC 3E 80       1395     LD      A,80H           ;MARK STRING
ret              ; ret              | 0405DE 0405D9 || 0405DE C9          1396     RET
call $040994     ; call $04098f     | 0405DF 0405DA || 0405DF CD 94 09 04 1400  SLT:   CALL    SCP
ret nc           ; ret nc           | 0405E3 0405DE || 0405E3 D0          1401     RET     NC
jr $+$26         ; jr $+$26         | 0405E4 0405DF || 0405E4 18 24       1402     JR      TRUE
call $040994     ; call $04098f     | 0405E6 0405E1 || 0405E6 CD 94 09 04 1404  SGT:   CALL    SCP
ret z            ; ret z            | 0405EA 0405E5 || 0405EA C8          1405     RET     Z
ret c            ; ret c            | 0405EB 0405E6 || 0405EB D8          1406     RET     C
jr $+$1e         ; jr $+$1e         | 0405EC 0405E7 || 0405EC 18 1C       1407     JR      TRUE
call $040994     ; call $04098f     | 0405EE 0405E9 || 0405EE CD 94 09 04 1409  SGE:   CALL    SCP
ret c            ; ret c            | 0405F2 0405ED || 0405F2 D8          1410     RET     C
jr $+$17         ; jr $+$17         | 0405F3 0405EE || 0405F3 18 15       1411     JR      TRUE
call $040994     ; call $04098f     | 0405F5 0405F0 || 0405F5 CD 94 09 04 1413  SLE:   CALL    SCP
jr z,$+$11       ; jr z,$+$11       | 0405F9 0405F4 || 0405F9 28 0F       1414     JR      Z,TRUE
ret nc           ; ret nc           | 0405FB 0405F6 || 0405FB D0          1415     RET     NC
jr $+$0e         ; jr $+$0e         | 0405FC 0405F7 || 0405FC 18 0C       1416     JR      TRUE
call $040994     ; call $04098f     | 0405FE 0405F9 || 0405FE CD 94 09 04 1418  SNE:   CALL    SCP
ret z            ; ret z            | 040602 0405FD || 040602 C8          1419     RET     Z
jr $+$07         ; jr $+$07         | 040603 0405FE || 040603 18 05       1420     JR      TRUE
call $040994     ; call $04098f     | 040605 040600 || 040605 CD 94 09 04 1422  SEQ:   CALL    SCP
ret nz           ; ret nz           | 040609 040604 || 040609 C0          1423     RET     NZ
ld a,$ff         ; ld a,$ff         | 04060A 040605 || 04060A 3E FF       1424  TRUE:   LD      A,-1
exx              ; exx              | 04060C 040607 || 04060C D9          1425     EXX
ld h,a           ; ld h,a           | 04060D 040608 || 04060D 67          1426     LD      H,A
ld l,a           ; ld l,a           | 04060E 040609 || 04060E 6F          1427     LD      L,A
exx              ; exx              | 04060F 04060A || 04060F D9          1428     EXX
ld h,a           ; ld h,a           | 040610 04060B || 040610 67          1429     LD      H,A
ld l,a           ; ld l,a           | 040611 04060C || 040611 6F          1430     LD      L,A
inc a            ; inc a            | 040612 04060D || 040612 3C          1431     INC     A
ld c,a           ; ld c,a           | 040613 04060E || 040613 4F          1432     LD      C,A
ret              ; ret              | 040614 04060F || 040614 C9          1433     RET
ld a,$23         ; ld a,$23         | 040615 040610 || 040615 3E 23       1438  PI:   LD      A,35
jr $+$46         ; jr $+$46         | 040617 040612 || 040617 18 44       1439     JR      FPP1
ld a,$10         ; ld a,$10         | 040619 040614 || 040619 3E 10       1444  ABSV:   LD      A,16
jr $+$3c         ; jr $+$3c         | 04061B 040616 || 04061B 18 3A       1445     JR      FPPN
ld a,$1a         ; ld a,$1a         | 04061D 040618 || 04061D 3E 1A       1450  NOTK:   LD      A,26
jr $+$38         ; jr $+$46         | 04061F 040612 || 04061F 18 36       1451     JR      FPPN
ld a,$15         ; ld a,$10         | 040621 040614 || 040621 3E 15       1456  DEG:   LD      A,21
jr $+$34         ; jr $+$3c         | 040623 040616 || 040623 18 32       1457     JR      FPPN
ld a,$1b         ; ld a,$1a         | 040625 040618 || 040625 3E 1B       1462  RAD:   LD      A,27
jr $+$30         ; jr $+$38         | 040627 04061A || 040627 18 2E       1463     JR      FPPN
ld a,$1c         ; ld a,$15         | 040629 04061C || 040629 3E 1C       1468  SGN:   LD      A,28
jr $+$2c         ; jr $+$34         | 04062B 04061E || 04062B 18 2A       1469     JR      FPPN
ld a,$17         ; ld a,$1b         | 04062D 040620 || 04062D 3E 17       1474  INT_:   LD      A,23
jr $+$28         ; jr $+$30         | 04062F 040622 || 04062F 18 26       1475     JR      FPPN
ld a,$1e         ; ld a,$1c         | 040631 040624 || 040631 3E 1E       1480  SQR:   LD      A,30
jr $+$24         ; jr $+$2c         | 040633 040626 || 040633 18 22       1481     JR      FPPN
ld a,$1f         ; ld a,$17         | 040635 040628 || 040635 3E 1F       1486  TAN:   LD      A,31
jr $+$20         ; jr $+$28         | 040637 04062A || 040637 18 1E       1487     JR      FPPN
ld a,$14         ; ld a,$1e         | 040639 04062C || 040639 3E 14       1492  COS:   LD      A,20
jr $+$1c         ; jr $+$24         | 04063B 04062E || 04063B 18 1A       1493     JR      FPPN
ld a,$1d         ; ld a,$1f         | 04063D 040630 || 04063D 3E 1D       1498  SIN:   LD      A,29
jr $+$18         ; jr $+$18         | 04063F 04063A || 04063F 18 16       1499     JR      FPPN
ld a,$16         ; ld a,$16         | 040641 04063C || 040641 3E 16       1504  EXP:   LD      A,22
jr $+$14         ; jr $+$14         | 040643 04063E || 040643 18 12       1505     JR      FPPN
ld a,$18         ; ld a,$18         | 040645 040640 || 040645 3E 18       1510  LN:   LD      A,24
jr $+$10         ; jr $+$10         | 040647 040642 || 040647 18 0E       1511     JR      FPPN
ld a,$19         ; ld a,$19         | 040649 040644 || 040649 3E 19       1516  LOG:   LD      A,25
jr $+$0c         ; jr $+$0c         | 04064B 040646 || 04064B 18 0A       1517     JR      FPPN
ld a,$12         ; ld a,$12         | 04064D 040648 || 04064D 3E 12       1522  ASN:   LD      A,18
jr $+$08         ; jr $+$08         | 04064F 04064A || 04064F 18 06       1523     JR      FPPN
ld a,$13         ; ld a,$13         | 040651 04064C || 040651 3E 13       1528  ATN:   LD      A,19
jr $+$04         ; jr $+$04         | 040653 04064E || 040653 18 02       1529     JR      FPPN
ld a,$11         ; ld a,$11         | 040655 040650 || 040655 3E 11       1534  ACS:   LD      A,17
push af          ; push af          | 040657 040652 || 040657 F5          1535  FPPN:   PUSH    AF
call $040322     ; call $04031d     | 040658 040653 || 040658 CD 22 03 04 1536     CALL    ITEMN
pop af           ; pop af           | 04065C 040657 || 04065C F1          1537     POP     AF
call $0420a2     ; call $04206a     | 04065D 040658 || 04065D CD A2 20 04 1538  FPP1:   CALL    FPP
jp c,$043798     ; jp c,$043760     | 040661 04065C || 040661 DA 98 37 04 1539     JP      C,ERROR_
xor a            ; xor a            | 040665 040660 || 040665 AF          1540     XOR     A
ret              ; ret              | 040666 040661 || 040666 C9          1541     RET
ld a,$26         ; ld a,$26         | 040667 040662 || 040667 3E 26       1545  SFIX:   LD      A,38
jr $-$0c         ; jr $-$0c         | 040669 040664 || 040669 18 F2       1546     JR      FPP1
ld a,$27         ; ld a,$27         | 04066B 040666 || 04066B 3E 27       1550  SFLOAT:   LD      A,39
jr $-$10         ; jr $-$10         | 04066D 040668 || 04066D 18 EE       1551     JR      FPP1
call $040335     ; call $040330     | 04066F 04066A || 04066F CD 35 03 04 1556  VAL:   CALL    ITEMS
xor a            ; xor a            | 040673 04066E || 040673 AF          1557  VAL0:   XOR     A
ld (de),a        ; ld (de),a        | 040674 04066F || 040674 12          1558     LD      (DE),A
ld ix,$044a00    ; ld ix,$044a00    | 040675 040670 || 040675 DD 21 00 4A 1559     LD      IX,ACCS
ld a,$24         ; ld a,$24         | 04067A 040675 || 04067A 3E 24       1560     LD      A,36
jr $-$1f         ; jr $-$1f         | 04067C 040677 || 04067C 18 DF       1561     JR      FPP1
call $040335     ; call $040330     | 04067E 040679 || 04067E CD 35 03 04 1566  EVAL_:   CALL    ITEMS
ld a,$0d         ; ld a,$0d         | 040682 04067D || 040682 3E 0D       1567     LD      A,CR
ld (de),a        ; ld (de),a        | 040684 04067F || 040684 12          1568     LD      (DE),A
push iy          ; push iy          | 040685 040680 || 040685 FD E5       1569     PUSH    IY
ld de,$044a00    ; ld de,$044a00    | 040687 040682 || 040687 11 00 4A 04 1570     LD      DE,ACCS
ld iy,$044a00    ; ld iy,$044a00    | 04068B 040686 || 04068B FD 21 00 4A 1571     LD      IY,ACCS
ld c,$00         ; ld c,$00         | 040690 04068B || 040690 0E 00       1572     LD      C,0
call $043cd7     ; call $043c9f     | 040692 04068D || 040692 CD D7 3C 04 1573     CALL    LEXAN2          ;TOKENISE
ld (de),a        ; ld (de),a        | 040696 040691 || 040696 12          1574     LD      (DE),A
inc de           ; inc de           | 040697 040692 || 040697 13          1575     INC     DE
xor a            ; xor a            | 040698 040693 || 040698 AF          1576     XOR     A
call $0409b9     ; call $0409b4     | 040699 040694 || 040699 CD B9 09 04 1577     CALL    PUSHS           ;PUT ON STACK
ld iy,$000003    ; ld iy,$000003    | 04069D 040698 || 04069D FD 21 03 00 1578     LD      IY,SIZEW ;WAS 2
add iy,sp        ; add iy,sp        | 0406A2 04069D || 0406A2 FD 39       1579     ADD     IY,SP
call $0401c7     ; call $0401c7     | 0406A4 04069F || 0406A4 CD C7 01 04 1580     CALL    EXPR
pop iy           ; pop iy           | 0406A8 0406A3 || 0406A8 FD E1       1581     POP     IY
add iy,sp        ; add iy,sp        | 0406AA 0406A5 || 0406AA FD 39       1582     ADD     IY,SP
ld sp,iy         ; ld sp,iy         | 0406AC 0406A7 || 0406AC FD F9       1583     LD      SP,IY           ;ADJUST STACK POINTER
pop iy           ; pop iy           | 0406AE 0406A9 || 0406AE FD E1       1584     POP     IY
ex af,af'        ; ex af,af'        | 0406B0 0406AB || 0406B0 08          1585     EX      AF,AF'
ret              ; ret              | 0406B1 0406AC || 0406B1 C9          1586     RET
ld ix,$044d38    ; ld ix,$044d38    | 0406B2 0406AD || 0406B2 DD 21 38 4D 1595  RND:   LD      IX,RANDOM
call $040a78     ; call $040a70     | 0406B7 0406B2 || 0406B7 CD 78 0A 04 1596     CALL    NXT
cp $28           ; cp $28           | 0406BB 0406B6 || 0406BB FE 28       1597     CP      '('
jr z,$+$22       ; jr z,$+$22       | 0406BD 0406B8 || 0406BD 28 20       1598     JR      Z,RND5          ;ARGUMENT FOLLOWS
call $040424     ; call $04041f     | 0406BF 0406BA || 0406BF CD 24 04 04 1599     CALL    LOAD5
rr c             ; rr c             | 0406C3 0406BE || 0406C3 CB 19       1600  RND1:   RR      C
ld b,$20         ; ld b,$20         | 0406C5 0406C0 || 0406C5 06 20       1601     LD      B,32
exx              ; exx              | 0406C7 0406C2 || 0406C7 D9          1602  RND2:   EXX                     ;CALCULATE NEXT
adc.sil hl,hl    ; adc.sil hl,hl    | 0406C8 0406C3 || 0406C8 52 ED 6A    1603     ADC.S   HL,HL
exx              ; exx              | 0406CB 0406C6 || 0406CB D9          1604     EXX
adc.sil hl,hl    ; adc.sil hl,hl    | 0406CC 0406C7 || 0406CC 52 ED 6A    1605     ADC.S   HL,HL
bit 3,l          ; bit 3,l          | 0406CF 0406CA || 0406CF CB 5D       1606     BIT     3,L
jr z,$+$03       ; jr z,$+$03       | 0406D1 0406CC || 0406D1 28 01       1607     JR      Z,RND3
ccf              ; ccf              | 0406D3 0406CE || 0406D3 3F          1608     CCF
djnz $-$0d       ; djnz $-$0d       | 0406D4 0406CF || 0406D4 10 F1       1609  RND3:   DJNZ    RND2
rl c             ; rl c             | 0406D6 0406D1 || 0406D6 CB 11       1610  RND4:   RL      C               ;SAVE CARRY
call $04160d     ; call $0415db     | 0406D8 0406D3 || 0406D8 CD 0D 16 04 1611     CALL    STORE5          ;STORE NEW NUMBER
xor a            ; xor a            | 0406DC 0406D7 || 0406DC AF          1612     XOR     A
ld c,a           ; ld c,a           | 0406DD 0406D8 || 0406DD 4F          1613     LD      C,A
ret              ; ret              | 0406DE 0406D9 || 0406DE C9          1614     RET
call $04032a     ; call $040325     | 0406DF 0406DA || 0406DF CD 2A 03 04 1615  RND5:   CALL    ITEMI
ld ix,$044d38    ; ld ix,$044d38    | 0406E3 0406DE || 0406E3 DD 21 38 4D 1616     LD      IX,RANDOM
bit 7,h          ; bit 7,h          | 0406E8 0406E3 || 0406E8 CB 7C       1617     BIT     7,H             ;NEGATIVE?
scf              ; scf              | 0406EA 0406E5 || 0406EA 37          1618     SCF
jr nz,$-$15      ; jr nz,$-$15      | 0406EB 0406E6 || 0406EB 20 E9       1619     JR      NZ,RND4         ;SEED
call $0408e4     ; call $0408df     | 0406ED 0406E8 || 0406ED CD E4 08 04 1620     CALL    TEST
push af          ; push af          | 0406F1 0406EC || 0406F1 F5          1621     PUSH    AF
call $0408dc     ; call $0408d7     | 0406F2 0406ED || 0406F2 CD DC 08 04 1622     CALL    SWAP
exx              ; exx              | 0406F6 0406F1 || 0406F6 D9          1623     EXX
call $040424     ; call $04041f     | 0406F7 0406F2 || 0406F7 CD 24 04 04 1624     CALL    LOAD5
call nz,$0406c3  ; call nz,$0406be  | 0406FB 0406F6 || 0406FB C4 C3 06 04 1625     CALL    NZ,RND1         ;NEXT IF NON-ZERO
exx              ; exx              | 0406FF 0406FA || 0406FF D9          1626     EXX                     ;SCRAMBLE (CARE!)
ld c,$7f         ; ld c,$7f         | 040700 0406FB || 040700 0E 7F       1627     LD      C,7FH
bit 7,h          ; bit 7,h          | 040702 0406FD || 040702 CB 7C       1628  RND6:   BIT     7,H             ;FLOAT
jr nz,$+$0c      ; jr nz,$+$0c      | 040704 0406FF || 040704 20 0A       1629     JR      NZ,RND7
exx              ; exx              | 040706 040701 || 040706 D9          1630     EXX
add.sil hl,hl    ; add.sil hl,hl    | 040707 040702 || 040707 52 29       1631     ADD.S   HL,HL
exx              ; exx              | 040709 040704 || 040709 D9          1632     EXX
adc.sil hl,hl    ; adc.sil hl,hl    | 04070A 040705 || 04070A 52 ED 6A    1633     ADC.S   HL,HL
dec c            ; dec c            | 04070D 040708 || 04070D 0D          1634     DEC     C
jr nz,$-$0c      ; jr nz,$-$0c      | 04070E 040709 || 04070E 20 F2       1635     JR      NZ,RND6
res 7,h          ; res 7,h          | 040710 04070B || 040710 CB BC       1636  RND7:   RES     7,H             ;POSITIVE 0-0.999999
pop af           ; pop af           | 040712 04070D || 040712 F1          1637     POP     AF
ret z            ; ret z            | 040713 04070E || 040713 C8          1638     RET     Z               ;ZERO ARGUMENT
exx              ; exx              | 040714 04070F || 040714 D9          1639     EXX
ld a,e           ; ld a,e           | 040715 040710 || 040715 7B          1640     LD      A,E
dec a            ; dec a            | 040716 040711 || 040716 3D          1641     DEC     A
or d             ; or d             | 040717 040712 || 040717 B2          1642     OR      D
exx              ; exx              | 040718 040713 || 040718 D9          1643     EXX
or e             ; or e             | 040719 040714 || 040719 B3          1644     OR      E
or d             ; or d             | 04071A 040715 || 04071A B2          1645     OR      D
ret z            ; ret z            | 04071B 040716 || 04071B C8          1646     RET     Z               ;ARGUMENT=1
ld b,$00         ; ld b,$00         | 04071C 040717 || 04071C 06 00       1647     LD      B,0             ;INTEGER MARKER
ld a,$0a         ; ld a,$0a         | 04071E 040719 || 04071E 3E 0A       1648     LD      A,10
call $0420a2     ; call $04206a     | 040720 04071B || 040720 CD A2 20 04 1649     CALL    FPP             ;MULTIPLY
jp c,$043798     ; jp c,$043760     | 040724 04071F || 040724 DA 98 37 04 1650     JP      C,ERROR_
call $040667     ; call $040662     | 040728 040723 || 040728 CD 67 06 04 1651     CALL    SFIX
jp $0403c0       ; jp $0403bb       | 04072C 040727 || 04072C C3 C0 03 04 1652     JP      ADD1
call $040a26     ; call $040a1e     | 040730 04072B || 040730 CD 26 0A 04 1657  INSTR:   CALL    EXPRSC   ; Get the first string expression
call $0409b9     ; call $0409b4     | 040734 04072F || 040734 CD B9 09 04 1658     CALL    PUSHS            ; Push the string onto the stack
call $04031a     ; call $040315     | 040738 040733 || 040738 CD 1A 03 04 1659     CALL    EXPRS            ; Get the second string expression
pop bc           ; pop bc           | 04073C 040737 || 04073C C1          1660     POP     BC   ;  C: String length, B: Value of A before PUSHS was called
ld hl,$000000    ; ld hl,$000000    | 04073D 040738 || 04073D 21 00 00 00 1661     LD      HL,0
add hl,sp        ; add hl,sp        | 040741 04073C || 040741 39          1662     ADD     HL,SP            ; HL: Pointer to main string
push bc          ; push bc          | 040742 04073D || 040742 C5          1663     PUSH    BC               ;  C: Main string length
ld b,e           ; ld b,e           | 040743 04073E || 040743 43          1664     LD      B,E              ;  B: Sub-string length
call $040a78     ; call $040a70     | 040744 04073F || 040744 CD 78 0A 04 1665     CALL    NXT   ; Skip whitespace
cp $2c           ; cp $2c           | 040748 040743 || 040748 FE 2C       1666     CP      ','   ; Check if there is a comma for the third parameter
ld a,$00         ; ld a,$00         | 04074A 040745 || 04074A 3E 00       1667     LD      A,0   ;  A: Default start position in string
jr nz,$+$1c      ; jr nz,$+$1c      | 04074C 040747 || 04074C 20 1A       1668     JR      NZ,INSTR1  ; No, so skip the next bit
inc iy           ; inc iy           | 04074E 040749 || 04074E FD 23       1669     INC     IY               ; Skip the comma
push bc          ; push bc          | 040750 04074B || 040750 C5          1670     PUSH    BC               ; Save the lengths
push hl          ; push hl          | 040751 04074C || 040751 E5          1671     PUSH    HL               ; Save the pointer to the main string
call $0409b9     ; call $0409b4     | 040752 04074D || 040752 CD B9 09 04 1672     CALL    PUSHS   ; Push the string onto the stack
call $04030f     ; call $04030a     | 040756 040751 || 040756 CD 0F 03 04 1673     CALL    EXPRI   ; Get the third (numeric) parameter - the starting position
pop bc           ; pop bc           | 04075A 040755 || 04075A C1          1674     POP     BC   ;  C: String length, B: Value of A before PUSHS was called (discarded)
call $0409e6     ; call $0409de     | 04075B 040756 || 04075B CD E6 09 04 1675     CALL    POPS   ; Pop the string off the stack
pop hl           ; pop hl           | 04075F 04075A || 04075F E1          1676     POP     HL               ; Restore the pointer to the main string
pop bc           ; pop bc           | 040760 04075B || 040760 C1          1677     POP     BC               ; Restore the lengths
exx              ; exx              | 040761 04075C || 040761 D9          1678     EXX
ld a,l           ; ld a,l           | 040762 04075D || 040762 7D          1679     LD      A,L   ; A: The start position in the  string
exx              ; exx              | 040763 04075E || 040763 D9          1680     EXX
or a             ; or a             | 040764 04075F || 040764 B7          1681     OR      A   ; Set the flags
jr z,$+$03       ; jr z,$+$03       | 040765 040760 || 040765 28 01       1682     JR      Z,INSTR1  ; If it is zero, then skip
dec a            ; dec a            | 040767 040762 || 040767 3D          1683     DEC     A
ld de,$044a00    ; ld de,$044a00    | 040768 040763 || 040768 11 00 4A 04 1684  INSTR1:   LD      DE,ACCS          ; DE: Pointer to the sub string
call $04078a     ; call $040785     | 04076C 040767 || 04076C CD 8A 07 04 1685     CALL    SEARCH   ; Do the search
pop de           ; pop de           | 040770 04076B || 040770 D1          1686     POP     DE
jr z,$+$05       ; jr z,$+$05       | 040771 04076C || 040771 28 03       1687     JR      Z,INSTR2         ; NB: Carry cleared
sbc hl,hl        ; sbc hl,hl        | 040773 04076E || 040773 ED 62       1688     SBC     HL,HL
add hl,sp        ; add hl,sp        | 040775 040770 || 040775 39          1689     ADD     HL,SP
sbc hl,sp        ; sbc hl,sp        | 040776 040771 || 040776 ED 72       1690  INSTR2:   SBC     HL,SP
ex de,hl         ; ex de,hl         | 040778 040773 || 040778 EB          1691     EX      DE,HL
ld a,l           ; ld a,l           | 040779 040774 || 040779 7D          1692     LD A,L
ld hl,$000000    ; ld hl,$000000    | 04077A 040775 || 04077A 21 00 00 00 1693     LD      HL,0
ld l,a           ; ld l,a           | 04077E 040779 || 04077E 6F          1694     LD L,A
add hl,sp        ; add hl,sp        | 04077F 04077A || 04077F 39          1695     ADD     HL,SP
ld sp,hl         ; ld sp,hl         | 040780 04077B || 040780 F9          1696     LD      SP,HL
ex de,hl         ; ex de,hl         | 040781 04077C || 040781 EB          1697     EX      DE,HL
call $040a37     ; call $040a2f     | 040782 04077D || 040782 CD 37 0A 04 1698     CALL    BRAKET   ; Check for closing bracket
jp $040586       ; jp $040581       | 040786 040781 || 040786 C3 86 05 04 1699     JP      COUNT1   ; Return a numeric integer
push bc          ; push bc          | 04078A 040785 || 04078A C5          1709  SEARCH:   PUSH    BC   ; Add the starting offset to HL
ld bc,$000000    ; ld bc,$000000    | 04078B 040786 || 04078B 01 00 00 00 1710     LD      BC,0
ld c,a           ; ld c,a           | 04078F 04078A || 04078F 4F          1711     LD      C,A
add hl,bc        ; add hl,bc        | 040790 04078B || 040790 09          1712     ADD     HL,BC            ; New start address
pop bc           ; pop bc           | 040791 04078C || 040791 C1          1713     POP     BC
sub c            ; sub c            | 040792 04078D || 040792 91          1714     SUB     C   ; If the starting offset > main string length, then do nothing
jr nc,$+$2e      ; jr nc,$+$2e      | 040793 04078E || 040793 30 2C       1715     JR      NC,SRCH4
neg              ; neg              | 040795 040790 || 040795 ED 44       1716     NEG
ld c,a           ; ld c,a           | 040797 040792 || 040797 4F          1717     LD      C,A              ; Remaining length
push bc          ; push bc          | 040798 040793 || 040798 C5          1719  SRCH1:   PUSH    BC
ld a,c           ; ld a,c           | 040799 040794 || 040799 79          1720     LD A,C
ld bc,$000000    ; ld bc,$000000    | 04079A 040795 || 04079A 01 00 00 00 1721     LD BC,0
ld c,a           ; ld c,a           | 04079E 040799 || 04079E 4F          1722     LD C,A
ld a,(de)        ; ld a,(de)        | 04079F 04079A || 04079F 1A          1723     LD      A,(DE)
cpir             ; cpir             | 0407A0 04079B || 0407A0 ED B1       1724     CPIR                     ; Find the first character
ld a,c           ; ld a,c           | 0407A2 04079D || 0407A2 79          1725     LD      A,C
pop bc           ; pop bc           | 0407A3 04079E || 0407A3 C1          1726     POP     BC
jr nz,$+$1d      ; jr nz,$+$1d      | 0407A4 04079F || 0407A4 20 1B       1727     JR      NZ,SRCH4
ld c,a           ; ld c,a           | 0407A6 0407A1 || 0407A6 4F          1728     LD      C,A
dec b            ; dec b            | 0407A7 0407A2 || 0407A7 05          1732     DEC     B   ; Bug fix
cp b             ; cp b             | 0407A8 0407A3 || 0407A8 B8          1733     CP      B   ; Bug fix
inc b            ; inc b            | 0407A9 0407A4 || 0407A9 04          1734     INC     B   ; Bug fix
jr c,$+$17       ; jr c,$+$17       | 0407AA 0407A5 || 0407AA 38 15       1735     JR      C,SRCH4   ; Bug fix
push bc          ; push bc          | 0407AC 0407A7 || 0407AC C5          1737     PUSH    BC
push de          ; push de          | 0407AD 0407A8 || 0407AD D5          1738     PUSH    DE
push hl          ; push hl          | 0407AE 0407A9 || 0407AE E5          1739     PUSH    HL
dec b            ; dec b            | 0407AF 0407AA || 0407AF 05          1740     DEC     B
jr z,$+$0a       ; jr z,$+$0a       | 0407B0 0407AB || 0407B0 28 08       1741     JR      Z,SRCH3          ; Found!
inc de           ; inc de           | 0407B2 0407AD || 0407B2 13          1742  SRCH2:   INC     DE
ld a,(de)        ; ld a,(de)        | 0407B3 0407AE || 0407B3 1A          1743     LD      A,(DE)
cp (hl)          ; cp (hl)          | 0407B4 0407AF || 0407B4 BE          1744     CP      (HL)
jr nz,$+$05      ; jr nz,$+$05      | 0407B5 0407B0 || 0407B5 20 03       1745     JR      NZ,SRCH3
inc hl           ; inc hl           | 0407B7 0407B2 || 0407B7 23          1746     INC     HL
djnz $-$06       ; djnz $-$06       | 0407B8 0407B3 || 0407B8 10 F8       1747     DJNZ    SRCH2
pop hl           ; pop hl           | 0407BA 0407B5 || 0407BA E1          1748  SRCH3:   POP     HL
pop de           ; pop de           | 0407BB 0407B6 || 0407BB D1          1749     POP     DE
pop bc           ; pop bc           | 0407BC 0407B7 || 0407BC C1          1750     POP     BC
jr nz,$-$25      ; jr nz,$-$25      | 0407BD 0407B8 || 0407BD 20 D9       1751     JR      NZ,SRCH1
xor a            ; xor a            | 0407BF 0407BA || 0407BF AF          1752     XOR     A                ; Flags: Z, NC
ret              ; ret              | 0407C0 0407BB || 0407C0 C9          1753     RET                      ; Found
or $ff           ; or $ff           | 0407C1 0407BC || 0407C1 F6 FF       1755  SRCH4:   OR      0FFH             ; Flags: NZ, NC
ret              ; ret              | 0407C3 0407BE || 0407C3 C9          1756     RET                      ; Not found
call $04032a     ; call $040325     | 0407C4 0407BF || 0407C4 CD 2A 03 04 1761  CHRS:   CALL    ITEMI
exx              ; exx              | 0407C8 0407C3 || 0407C8 D9          1762     EXX
ld a,l           ; ld a,l           | 0407C9 0407C4 || 0407C9 7D          1763     LD      A,L
jr $+$10         ; jr $+$10         | 0407CA 0407C5 || 0407CA 18 0E       1764     JR      GET1
call $040a78     ; call $040a70     | 0407CC 0407C7 || 0407CC CD 78 0A 04 1769  GETS:   CALL NXT  ;NEW CODE FOR GET$(X,Y)
cp $28           ; cp $28           | 0407D0 0407CB || 0407D0 FE 28       1770     CP '('
jp z,$04443a     ; jp z,$0443fc     | 0407D2 0407CD || 0407D2 CA 3A 44 04 1771     JP Z, GETSCHR ;CALL FUNCTION IN PATCH.Z80
call $043f61     ; call $043f29     | 0407D6 0407D1 || 0407D6 CD 61 3F 04 1772     CALL    OSRDCH
scf              ; scf              | 0407DA 0407D5 || 0407DA 37          1773  GET1:   SCF
jr $+$0b         ; jr $+$0b         | 0407DB 0407D6 || 0407DB 18 09       1774     JR      INKEY1
call $04032a     ; call $040325     | 0407DD 0407D8 || 0407DD CD 2A 03 04 1781  INKEYS:   CALL    ITEMI   ; Fetch the argument
exx              ; exx              | 0407E1 0407DC || 0407E1 D9          1782     EXX
call $043f6a     ; call $043f32     | 0407E2 0407DD || 0407E2 CD 6A 3F 04 1783  INKEY0:   CALL    OSKEY   ; This is the entry point for INKEY(n)
ld de,$044a00    ; ld de,$044a00    | 0407E6 0407E1 || 0407E6 11 00 4A 04 1784  INKEY1:   LD      DE,ACCS   ; Store the result in the string accumulator
ld (de),a        ; ld (de),a        | 0407EA 0407E5 || 0407EA 12          1785     LD      (DE),A
ld a,$80         ; ld a,$80         | 0407EB 0407E6 || 0407EB 3E 80       1786     LD      A,80H
ret nc           ; ret nc           | 0407ED 0407E8 || 0407ED D0          1787     RET     NC
inc e            ; inc e            | 0407EE 0407E9 || 0407EE 1C          1788     INC     E
ret              ; ret              | 0407EF 0407EA || 0407EF C9          1789     RET
ld a,$1e         ; ld a,$1e         | 0407F0 0407EB || 0407F0 3E 1E       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 0407F2 0407ED || 0407F2 49 CF       0002M    RST.LIS 08h
inc hl           ; inc hl           | 0407F4 0407EF || 0407F4 23          1795     INC HL   ; Index from 0
ld a,l           ; ld a,l           | 0407F5 0407F0 || 0407F5 7D          1796     LD A, L   ; Negate the LSB of the answer
neg              ; neg              | 0407F6 0407F1 || 0407F6 ED 44       1797     NEG
ld c,a           ; ld c,a           | 0407F8 0407F3 || 0407F8 4F          1798     LD C, A   ;  E: The positive keycode value
ld a,$01         ; ld a,$01         | 0407F9 0407F4 || 0407F9 3E 01       1799     LD A, 1   ; Throw an "Out of range" error
jp m,$043798     ; jp m,$043760     | 0407FB 0407F6 || 0407FB FA 98 37 04 1800     JP M, ERROR_  ; if the argument < - 128
ld hl,$040822    ; ld hl,$04081d    | 0407FF 0407FA || 0407FF 21 22 08 04 1802     LD HL, BITLOOKUP  ; HL: The bit lookup table
ld de,$000000    ; ld de,$000000    | 040803 0407FE || 040803 11 00 00 00 1803     LD DE, 0
ld a,c           ; ld a,c           | 040807 040802 || 040807 79          1804     LD A, C
and $07          ; and $07          | 040808 040803 || 040808 E6 07       1805     AND 00000111b  ; Just need the first three bits
ld e,a           ; ld e,a           | 04080A 040805 || 04080A 5F          1806     LD E, A   ; DE: The bit number
add hl,de        ; add hl,de        | 04080B 040806 || 04080B 19          1807     ADD HL, DE
ld b,(hl)        ; ld b,(hl)        | 04080C 040807 || 04080C 46          1808     LD B, (HL)   ;  B: The mask
ld a,c           ; ld a,c           | 04080D 040808 || 04080D 79          1810     LD A, C   ; Fetch the keycode again
and $78          ; and $78          | 04080E 040809 || 04080E E6 78       1811     AND 01111000b  ; And divide by 8
rrca             ; rrca             | 040810 04080B || 040810 0F          1812     RRCA
rrca             ; rrca             | 040811 04080C || 040811 0F          1813     RRCA
rrca             ; rrca             | 040812 04080D || 040812 0F          1814     RRCA
ld e,a           ; ld e,a           | 040813 04080E || 040813 5F          1815     LD E, A   ; DE: The offset (the MSW has already been cleared previously)
add ix,de        ; add ix,de        | 040814 04080F || 040814 DD 19       1816     ADD IX, DE   ; IX: The address
ld a,b           ; ld a,b           | 040816 040811 || 040816 78          1817     LD A, B   ;  B: The mask
and (ix)         ; and (ix)         | 040817 040812 || 040817 DD A6 00    1818     AND (IX+0)   ; Check whether the bit is set
jp z,$040998     ; jp z,$040993     | 04081A 040815 || 04081A CA 98 09 04 1819     JP Z, ZERO   ; No, so return 0
jp $04060a       ; jp $040605       | 04081E 040819 || 04081E C3 0A 06 04 1820     JP TRUE   ; Otherwise return -1
ld bc,$080402    ; ld bc,$080402    | 040822 04081D || 040822 01 02 04 08 1824  BITLOOKUP:  DB 01h, 02h, 04h, 08h
djnz $+$22       ; djnz $+$22       | 040826 040821 || 040826 10 20 40 80 1825     DB 10h, 20h, 40h, 80h
add.sis a,b      ;                  | 040828        || add.sis a,b                    ; 040823
call $040a26     ; call $040a1e     | 04082A 040825 || 04082A CD 26 0A 04 1830  MIDS:   CALL    EXPRSC   ; Get the first string expression
call $0409b9     ; call $0409b4     | 04082E 040829 || 04082E CD B9 09 04 1831     CALL    PUSHS            ; Push the string onto the stack from the string accumulator (ACCS)
call $04030f     ; call $04030a     | 040832 04082D || 040832 CD 0F 03 04 1832     CALL    EXPRI   ; Get the second expression
pop bc           ; pop bc           | 040836 040831 || 040836 C1          1833     POP     BC   ; C: String length, B: Value of A before PUSHS was called
call $0409e6     ; call $0409de     | 040837 040832 || 040837 CD E6 09 04 1834     CALL    POPS   ; Pop the string back off the stack to the string accumulator
exx              ; exx              | 04083B 040836 || 04083B D9          1835     EXX
ld a,l           ; ld a,l           | 04083C 040837 || 04083C 7D          1836     LD      A,L   ; A: The start index
exx              ; exx              | 04083D 040838 || 04083D D9          1837     EXX
or a             ; or a             | 04083E 040839 || 04083E B7          1838     OR      A   ; If the start index is 0, then we don't need to do the next bit
jr z,$+$10       ; jr z,$+$10       | 04083F 04083A || 04083F 28 0E       1839     JR      Z,MIDS1
dec a            ; dec a            | 040841 04083C || 040841 3D          1840     DEC     A
ld l,a           ; ld l,a           | 040842 04083D || 040842 6F          1841     LD      L,A   ; L: The start index - 1
sub e            ; sub e            | 040843 04083E || 040843 93          1842     SUB     E   ; Subtract from the string length
ld e,$00         ; ld e,$00         | 040844 04083F || 040844 1E 00       1843     LD      E,0   ; Preemptively set the string length to 0
jr nc,$+$09      ; jr nc,$+$09      | 040846 040841 || 040846 30 07       1844     JR      NC,MIDS1  ; If the first parameter is greater than the string length, then do nothing
neg              ; neg              | 040848 040843 || 040848 ED 44       1845     NEG    ; Negate the answer and
ld c,a           ; ld c,a           | 04084A 040845 || 04084A 4F          1846     LD      C,A   ; C: Number of bytes to copy
call $04088e     ; call $040889     | 04084B 040846 || 04084B CD 8E 08 04 1847     CALL    RIGHT1   ; We can do a RIGHT$ at this point with the result
call $040a78     ; call $040a70     | 04084F 04084A || 04084F CD 78 0A 04 1848  MIDS1:   CALL    NXT   ; Skip whitespace
cp $2c           ; cp $2c           | 040853 04084E || 040853 FE 2C       1849     CP      ','   ; Check for a comma
inc iy           ; inc iy           | 040855 040850 || 040855 FD 23       1850     INC     IY   ; Advance to the next character in the BASIC line
jr z,$+$0f       ; jr z,$+$0f       | 040857 040852 || 040857 28 0D       1851     JR      Z,LEFT1   ; If there is a comma then we do a LEFT$ on the remainder
dec iy           ; dec iy           | 040859 040854 || 040859 FD 2B       1852     DEC     IY   ; Restore the BASIC program pointer
call $040a37     ; call $040a2f     | 04085B 040856 || 04085B CD 37 0A 04 1853     CALL    BRAKET   ; Check for a bracket
ld a,$80         ; ld a,$80         | 04085F 04085A || 04085F 3E 80       1854     LD      A,80H   ; String marker
ret              ; ret              | 040861 04085C || 040861 C9          1855     RET
call $040a26     ; call $040a1e     | 040862 04085D || 040862 CD 26 0A 04 1861  LEFTS:   CALL    EXPRSC   ; Get the first string expression
call $0409b9     ; call $0409b4     | 040866 040861 || 040866 CD B9 09 04 1862  LEFT1:   CALL    PUSHS            ; Push the string onto the stack from the string accumulator (ACCS)
call $04030f     ; call $04030a     | 04086A 040865 || 04086A CD 0F 03 04 1863     CALL    EXPRI   ; Get the second expression
pop bc           ; pop bc           | 04086E 040869 || 04086E C1          1864     POP     BC   ; C: String length, B: Value of A before PUSHS was called
call $0409e6     ; call $0409de     | 04086F 04086A || 04086F CD E6 09 04 1865     CALL    POPS   ; Pop the string back off the stack to the string accumulator (ACCS)
call $040a37     ; call $040a2f     | 040873 04086E || 040873 CD 37 0A 04 1866     CALL    BRAKET   ; Check for closing bracket
exx              ; exx              | 040877 040872 || 040877 D9          1867     EXX
ld a,l           ; ld a,l           | 040878 040873 || 040878 7D          1868     LD      A,L   ; L: The second parameter
exx              ; exx              | 040879 040874 || 040879 D9          1869     EXX
cp e             ; cp e             | 04087A 040875 || 04087A BB          1870     CP      E   ; Compare with the string length
jr nc,$+$04      ; jr nc,$+$04      | 04087B 040876 || 04087B 30 02       1871     JR      NC,LEFT3  ; If it is greater than or equal then do nothing
ld l,e           ; ld l,e           | 04087D 040878 || 04087D 6B          1872     LD      L,E              ; For RIGHTS, no effect in LEFTS
ld e,a           ; ld e,a           | 04087E 040879 || 04087E 5F          1873  LEFT2:   LD      E,A   ; E: The new length of string
ld a,$80         ; ld a,$80         | 04087F 04087A || 04087F 3E 80       1874  LEFT3:   LD      A,80H            ; String marker
ret              ; ret              | 040881 04087C || 040881 C9          1875     RET
call $040862     ; call $04085d     | 040882 04087D || 040882 CD 62 08 04 1880  RIGHTS:   CALL    LEFTS   ; Call LEFTS to get the string
ret nc           ; ret nc           | 040886 040881 || 040886 D0          1881     RET     NC   ; Do nothing if the second parameter is >= string length
inc e            ; inc e            | 040887 040882 || 040887 1C          1882     INC     E   ; Check for a zero length string
dec e            ; dec e            | 040888 040883 || 040888 1D          1883     DEC     E
ret z            ; ret z            | 040889 040884 || 040889 C8          1884     RET     Z   ; Yes, so do nothing
ld c,e           ; ld c,e           | 04088A 040885 || 04088A 4B          1885     LD      C,E   ;  C: Number of bytes to copy
ld a,l           ; ld a,l           | 04088B 040886 || 04088B 7D          1886     LD      A,L
sub e            ; sub e            | 04088C 040887 || 04088C 93          1887     SUB     E
ld l,a           ; ld l,a           | 04088D 040888 || 04088D 6F          1888     LD      L,A   ;  L: Index into the string
ld a,c           ; ld a,c           | 04088E 040889 || 04088E 79          1889  RIGHT1:   LD A,C
ld bc,$000000    ; ld bc,$000000    | 04088F 04088A || 04088F 01 00 00 00 1890     LD BC,0
ld c,a           ; ld c,a           | 040893 04088E || 040893 4F          1891     LD C,A   ; BC: Number of bytes to copy (with top word cleared)
ld a,l           ; ld a,l           | 040894 04088F || 040894 7D          1892     LD A,L
ld hl,$044a00    ; ld hl,$044a00    | 040895 040890 || 040895 21 00 4A 04 1893     LD HL,ACCS
ld l,a           ; ld l,a           | 040899 040894 || 040899 6F          1894     LD L,A   ; HL: Source (in ACCS)
ld de,$044a00    ; ld de,$044a00    | 04089A 040895 || 04089A 11 00 4A 04 1895     LD      DE,ACCS   ; DE: Destination (start of ACCS)
ldir             ; ldir             | 04089E 040899 || 04089E ED B0       1896     LDIR                     ; Copy
ld a,$80         ; ld a,$80         | 0408A0 04089B || 0408A0 3E 80       1897     LD      A,80H   ; String marker
ret              ; ret              | 0408A2 04089D || 0408A2 C9          1898     RET
call $04030f     ; call $04030a     | 0408A3 04089E || 0408A3 CD 0F 03 04 1903  STRING_:  CALL    EXPRI   ; Get number of times to replicate
call $040a2a     ; call $040a22     | 0408A7 0408A2 || 0408A7 CD 2A 0A 04 1904     CALL    COMMA   ; Check for comma
exx              ; exx              | 0408AB 0408A6 || 0408AB D9          1905     EXX
ld a,l           ; ld a,l           | 0408AC 0408A7 || 0408AC 7D          1906     LD      A,L   ; L: Number of iterations of string
exx              ; exx              | 0408AD 0408A8 || 0408AD D9          1907     EXX
push af          ; push af          | 0408AE 0408A9 || 0408AE F5          1908     PUSH    AF
call $04031a     ; call $040315     | 0408AF 0408AA || 0408AF CD 1A 03 04 1909     CALL    EXPRS   ; Get the string
call $040a37     ; call $040a2f     | 0408B3 0408AE || 0408B3 CD 37 0A 04 1910     CALL    BRAKET   ; Check for closing bracket
pop af           ; pop af           | 0408B7 0408B2 || 0408B7 F1          1911     POP     AF   ; A: Number of iterations of string
or a             ; or a             | 0408B8 0408B3 || 0408B8 B7          1912     OR      A   ; Set flags
jr z,$-$3b       ; jr z,$-$3b       | 0408B9 0408B4 || 0408B9 28 C3       1913     JR      Z,LEFT2          ; If iterations is 0, then this will return an empty string
dec a            ; dec a            | 0408BB 0408B6 || 0408BB 3D          1914     DEC     A
ld c,a           ; ld c,a           | 0408BC 0408B7 || 0408BC 4F          1915     LD      C,A   ; C: Loop counter
ld a,$80         ; ld a,$80         | 0408BD 0408B8 || 0408BD 3E 80       1916     LD      A,80H   ; String marker
ret z            ; ret z            | 0408BF 0408BA || 0408BF C8          1917     RET     Z
inc e            ; inc e            | 0408C0 0408BB || 0408C0 1C          1918     INC     E   ; Check for empty string
dec e            ; dec e            | 0408C1 0408BC || 0408C1 1D          1919     DEC     E
ret z            ; ret z            | 0408C2 0408BD || 0408C2 C8          1920     RET     Z                ; And return
ld b,e           ; ld b,e           | 0408C3 0408BE || 0408C3 43          1921     LD      B,E   ; B: String length tally
ld hl,$044a00    ; ld hl,$044a00    | 0408C4 0408BF || 0408C4 21 00 4A 04 1922     LD HL,ACCS
push bc          ; push bc          | 0408C8 0408C3 || 0408C8 C5          1923  STRIN1:   PUSH    BC
ld a,(hl)        ; ld a,(hl)        | 0408C9 0408C4 || 0408C9 7E          1924  STRIN2:   LD      A,(HL)
inc hl           ; inc hl           | 0408CA 0408C5 || 0408CA 23          1925     INC     HL
ld (de),a        ; ld (de),a        | 0408CB 0408C6 || 0408CB 12          1926     LD      (DE),A
inc e            ; inc e            | 0408CC 0408C7 || 0408CC 1C          1927     INC     E
ld a,$13         ; ld a,$13         | 0408CD 0408C8 || 0408CD 3E 13       1928     LD      A,19
jp z,$043798     ; jp z,$043760     | 0408CF 0408CA || 0408CF CA 98 37 04 1929     JP      Z,ERROR_          ; Throw a "String too long" error
djnz $-$0a       ; djnz $-$0a       | 0408D3 0408CE || 0408D3 10 F4       1930     DJNZ    STRIN2
pop bc           ; pop bc           | 0408D5 0408D0 || 0408D5 C1          1931     POP     BC
dec c            ; dec c            | 0408D6 0408D1 || 0408D6 0D          1932     DEC     C
jr nz,$-$0f      ; jr nz,$-$0f      | 0408D7 0408D2 || 0408D7 20 EF       1933     JR      NZ,STRIN1
ld a,$80         ; ld a,$80         | 0408D9 0408D4 || 0408D9 3E 80       1934     LD      A,80H
ret              ; ret              | 0408DB 0408D6 || 0408DB C9          1935     RET
ld a,c           ; ld a,c           | 0408DC 0408D7 || 0408DC 79          1943  SWAP:   LD      A,C
ld c,b           ; ld c,b           | 0408DD 0408D8 || 0408DD 48          1944     LD      C,B
ld b,a           ; ld b,a           | 0408DE 0408D9 || 0408DE 47          1945     LD      B,A
ex de,hl         ; ex de,hl         | 0408DF 0408DA || 0408DF EB          1946     EX      DE,HL
exx              ; exx              | 0408E0 0408DB || 0408E0 D9          1947     EXX
ex de,hl         ; ex de,hl         | 0408E1 0408DC || 0408E1 EB          1948     EX      DE,HL
exx              ; exx              | 0408E2 0408DD || 0408E2 D9          1949     EXX
ret              ; ret              | 0408E3 0408DE || 0408E3 C9          1950     RET
ld a,h           ; ld a,h           | 0408E4 0408DF || 0408E4 7C          1956  TEST:   LD      A,H
or l             ; or l             | 0408E5 0408E0 || 0408E5 B5          1957     OR      L
exx              ; exx              | 0408E6 0408E1 || 0408E6 D9          1958     EXX
or h             ; or h             | 0408E7 0408E2 || 0408E7 B4          1959     OR      H
or l             ; or l             | 0408E8 0408E3 || 0408E8 B5          1960     OR      L
exx              ; exx              | 0408E9 0408E4 || 0408E9 D9          1961     EXX
ret              ; ret              | 0408EA 0408E5 || 0408EA C9          1962     RET
exx              ; exx              | 0408EB 0408E6 || 0408EB D9          1969  DECODE:   EXX
ld hl,$000000    ; ld hl,$000000    | 0408EC 0408E7 || 0408EC 21 00 00 00 1970     LD HL, 0
ld a,(iy)        ; ld a,(iy)        | 0408F0 0408EB || 0408F0 FD 7E 00    1971     LD      A,(IY)
inc iy           ; inc iy           | 0408F3 0408EE || 0408F3 FD 23       1972     INC     IY
rla              ; rla              | 0408F5 0408F0 || 0408F5 17          1973     RLA
rla              ; rla              | 0408F6 0408F1 || 0408F6 17          1974     RLA
ld h,a           ; ld h,a           | 0408F7 0408F2 || 0408F7 67          1975     LD      H,A
and $c0          ; and $c0          | 0408F8 0408F3 || 0408F8 E6 C0       1976     AND     0C0H
xor (iy)         ; xor (iy)         | 0408FA 0408F5 || 0408FA FD AE 00    1977     XOR     (IY)
inc iy           ; inc iy           | 0408FD 0408F8 || 0408FD FD 23       1978     INC     IY
ld l,a           ; ld l,a           | 0408FF 0408FA || 0408FF 6F          1979     LD      L,A
ld a,h           ; ld a,h           | 040900 0408FB || 040900 7C          1980     LD      A,H
rla              ; rla              | 040901 0408FC || 040901 17          1981     RLA
rla              ; rla              | 040902 0408FD || 040902 17          1982     RLA
and $c0          ; and $c0          | 040903 0408FE || 040903 E6 C0       1983     AND     0C0H
xor (iy)         ; xor (iy)         | 040905 040900 || 040905 FD AE 00    1984     XOR     (IY)
inc iy           ; inc iy           | 040908 040903 || 040908 FD 23       1985     INC     IY
ld h,a           ; ld h,a           | 04090A 040905 || 04090A 67          1986     LD      H,A
exx              ; exx              | 04090B 040906 || 04090B D9          1987     EXX
ld hl,$000000    ; ld hl,$000000    | 04090C 040907 || 04090C 21 00 00 00 1992     LD HL, 0
ld c,l           ; ld c,l           | 040910 04090B || 040910 4D          1993     LD C, L
ret              ; ret              | 040911 04090C || 040911 C9          1994     RET
inc iy           ; inc iy           | 040912 04090D || 040912 FD 23       2001  HEXSTS:   INC     IY              ;SKIP TILDE
call $040322     ; call $04031d     | 040914 04090F || 040914 CD 22 03 04 2002     CALL    ITEMN
call $04091f     ; call $04091a     | 040918 040913 || 040918 CD 1F 09 04 2003     CALL    HEXSTR
ld a,$80         ; ld a,$80         | 04091C 040917 || 04091C 3E 80       2004     LD      A,80H
ret              ; ret              | 04091E 040919 || 04091E C9          2005     RET
call $040667     ; call $040662     | 04091F 04091A || 04091F CD 67 06 04 2007  HEXSTR:   CALL    SFIX
ld bc,$000008    ; ld bc,$000008    | 040923 04091E || 040923 01 08 00 00 2008     LD      BC,8
ld de,$044a00    ; ld de,$044a00    | 040927 040922 || 040927 11 00 4A 04 2009     LD      DE,ACCS
push bc          ; push bc          | 04092B 040926 || 04092B C5          2010  HEXST1:   PUSH    BC
ld b,$04         ; ld b,$04         | 04092C 040927 || 04092C 06 04       2011     LD      B,4
xor a            ; xor a            | 04092E 040929 || 04092E AF          2012     XOR     A
exx              ; exx              | 04092F 04092A || 04092F D9          2013  HEXST2:   EXX
add.sil hl,hl    ; add.sil hl,hl    | 040930 04092B || 040930 52 29       2014     ADD.S HL,HL
exx              ; exx              | 040932 04092D || 040932 D9          2015     EXX
adc.sil hl,hl    ; adc.sil hl,hl    | 040933 04092E || 040933 52 ED 6A    2016     ADC.S HL,HL
rla              ; rla              | 040936 040931 || 040936 17          2017     RLA
djnz $-$08       ; djnz $-$08       | 040937 040932 || 040937 10 F6       2018     DJNZ    HEXST2
pop bc           ; pop bc           | 040939 040934 || 040939 C1          2019     POP     BC
dec c            ; dec c            | 04093A 040935 || 04093A 0D          2020     DEC     C
ret m            ; ret m            | 04093B 040936 || 04093B F8          2021     RET     M
jr z,$+$08       ; jr z,$+$08       | 04093C 040937 || 04093C 28 06       2022     JR      Z,HEXST3
or a             ; or a             | 04093E 040939 || 04093E B7          2023     OR      A
jr nz,$+$05      ; jr nz,$+$05      | 04093F 04093A || 04093F 20 03       2024     JR      NZ,HEXST3
cp b             ; cp b             | 040941 04093C || 040941 B8          2025     CP      B
jr z,$-$17       ; jr z,$-$17       | 040942 04093D || 040942 28 E7       2026     JR      Z,HEXST1
add a,$90        ; add a,$90        | 040944 04093F || 040944 C6 90       2027  HEXST3:   ADD     A,90H
daa              ; daa              | 040946 040941 || 040946 27          2028     DAA
adc a,$40        ; adc a,$40        | 040947 040942 || 040947 CE 40       2029     ADC     A,40H
daa              ; daa              | 040949 040944 || 040949 27          2030     DAA
ld (de),a        ; ld (de),a        | 04094A 040945 || 04094A 12          2031     LD      (DE),A
inc de           ; inc de           | 04094B 040946 || 04094B 13          2032     INC     DE
ld b,a           ; ld b,a           | 04094C 040947 || 04094C 47          2033     LD      B,A
jr $-$22         ; jr $-$22         | 04094D 040948 || 04094D 18 DC       2034     JR      HEXST1
call $040a78     ; call $040a70     | 04094F 04094A || 04094F CD 78 0A 04 2044  STRS:   CALL    NXT
cp $7e           ; cp $7e           | 040953 04094E || 040953 FE 7E       2045     CP      '~'
jr z,$-$43       ; jr z,$-$43       | 040955 040950 || 040955 28 BB       2046     JR      Z,HEXSTS
call $040322     ; call $04031d     | 040957 040952 || 040957 CD 22 03 04 2047     CALL    ITEMN
ld ix,$044c00    ; ld ix,$044c00    | 04095B 040956 || 04095B DD 21 00 4C 2048     LD      IX,STAVAR
ld a,(ix+$03)    ; ld a,(ix+$03)    | 040960 04095B || 040960 DD 7E 03    2049     LD      A,(IX+3)
or a             ; or a             | 040963 04095E || 040963 B7          2050     OR      A
ld ix,$040991    ; ld ix,$04098c    | 040964 04095F || 040964 DD 21 91 09 2051     LD      IX,G9-1         ;G9 FORMAT
jr z,$+$07       ; jr z,$+$07       | 040969 040964 || 040969 28 05       2052     JR      Z,STR0
ld ix,$044c00    ; ld ix,$044c00    | 04096B 040966 || 04096B DD 21 00 4C 2053  STR:   LD      IX,STAVAR
ld de,$044a00    ; ld de,$044a00    | 040970 04096B || 040970 11 00 4A 04 2054  STR0:   LD      DE,ACCS
ld a,$25         ; ld a,$25         | 040974 04096F || 040974 3E 25       2055     LD      A,37
call $0420a2     ; call $04206a     | 040976 040971 || 040976 CD A2 20 04 2056     CALL    FPP
jp c,$043798     ; jp c,$043760     | 04097A 040975 || 04097A DA 98 37 04 2057     JP      C,ERROR_
bit 0,(ix+$02)   ; bit 0,(ix+$02)   | 04097E 040979 || 04097E DD CB 02 46 2058     BIT     0,(IX+2)
ld a,$80         ; ld a,$80         | 040982 04097D || 040982 3E 80       2059  STR1:   LD      A,80H           ;STRING MARKER
ret z            ; ret z            | 040984 04097F || 040984 C8          2060     RET     Z
ld a,c           ; ld a,c           | 040985 040980 || 040985 79          2061     LD      A,C
add a,$04        ; add a,$04        | 040986 040981 || 040986 C6 04       2062     ADD     A,4
cp e             ; cp e             | 040988 040983 || 040988 BB          2063  STR2:   CP      E
jr z,$-$07       ; jr z,$-$07       | 040989 040984 || 040989 28 F7       2064     JR      Z,STR1
ex de,hl         ; ex de,hl         | 04098B 040986 || 04098B EB          2065     EX      DE,HL
ld (hl),$20      ; ld (hl),$20      | 04098C 040987 || 04098C 36 20       2066     LD      (HL),' '        ;TRAILING SPACE
inc hl           ; inc hl           | 04098E 040989 || 04098E 23          2067     INC     HL
ex de,hl         ; ex de,hl         | 04098F 04098A || 04098F EB          2068     EX      DE,HL
jr $-$08         ; jr $-$08         | 040990 04098B || 040990 18 F6       2069     JR      STR2
add hl,bc        ; add hl,bc        | 040992 04098D || 040992 09 00       2071  G9:   DW    9
nop              ;                  | 040993        || nop                            ; 04098E
call $0409a2     ; call $04099d     | 040994 04098F || 040994 CD A2 09 04 2077  SCP:   CALL SCP0
ld a,$00         ; ld a,$00         | 040998 040993 || 040998 3E 00       2079  ZERO:   LD      A,0
exx              ; exx              | 04099A 040995 || 04099A D9          2080     EXX
ld h,a           ; ld h,a           | 04099B 040996 || 04099B 67          2081     LD      H,A
ld l,a           ; ld l,a           | 04099C 040997 || 04099C 6F          2082     LD      L,A
exx              ; exx              | 04099D 040998 || 04099D D9          2083     EXX
ld h,a           ; ld h,a           | 04099E 040999 || 04099E 67          2084     LD      H,A
ld l,a           ; ld l,a           | 04099F 04099A || 04099F 6F          2085     LD      L,A
ld c,a           ; ld c,a           | 0409A0 04099B || 0409A0 4F          2086     LD      C,A
ret              ; ret              | 0409A1 04099C || 0409A1 C9          2087     RET
inc b            ; inc b            | 0409A2 04099D || 0409A2 04          2089  SCP0:   INC     B
inc c            ; inc c            | 0409A3 04099E || 0409A3 0C          2090     INC     C
dec b            ; dec b            | 0409A4 04099F || 0409A4 05          2091  SCP1:   DEC     B
jr z,$+$0c       ; jr z,$+$0c       | 0409A5 0409A0 || 0409A5 28 0A       2092     JR      Z,SCP2
dec c            ; dec c            | 0409A7 0409A2 || 0409A7 0D          2093     DEC     C
jr z,$+$0e       ; jr z,$+$0e       | 0409A8 0409A3 || 0409A8 28 0C       2094     JR      Z,SCP3
ld a,(de)        ; ld a,(de)        | 0409AA 0409A5 || 0409AA 1A          2095     LD      A,(DE)
cp (hl)          ; cp (hl)          | 0409AB 0409A6 || 0409AB BE          2096     CP      (HL)
ret nz           ; ret nz           | 0409AC 0409A7 || 0409AC C0          2097     RET     NZ
inc de           ; inc de           | 0409AD 0409A8 || 0409AD 13          2098     INC     DE
inc hl           ; inc hl           | 0409AE 0409A9 || 0409AE 23          2099     INC     HL
jr $-$0b         ; jr $-$0b         | 0409AF 0409AA || 0409AF 18 F3       2100     JR      SCP1
or a             ; or a             | 0409B1 0409AC || 0409B1 B7          2101  SCP2:   OR      A
dec c            ; dec c            | 0409B2 0409AD || 0409B2 0D          2102     DEC     C
ret z            ; ret z            | 0409B3 0409AE || 0409B3 C8          2103     RET     Z
scf              ; scf              | 0409B4 0409AF || 0409B4 37          2104     SCF
ret              ; ret              | 0409B5 0409B0 || 0409B5 C9          2105     RET
or a             ; or a             | 0409B6 0409B1 || 0409B6 B7          2106  SCP3:   OR      A
inc c            ; inc c            | 0409B7 0409B2 || 0409B7 0C          2107     INC     C
ret              ; ret              | 0409B8 0409B3 || 0409B8 C9          2108     RET
call $041681     ; call $04164f     | 0409B9 0409B4 || 0409B9 CD 81 16 04 2116  PUSHS:   CALL    CHECK   ; Check if there is sufficient space on the stack
pop ix           ; pop ix           | 0409BD 0409B8 || 0409BD DD E1       2117     POP     IX               ; IX: Return address
or a             ; or a             | 0409BF 0409BA || 0409BF B7          2118     OR      A                ; Clear the carry flag
ld bc,$000000    ; ld bc,$000000    | 0409C0 0409BB || 0409C0 01 00 00 00 2119     LD BC,0   ; BC: Length of the string
ld c,e           ; ld c,e           | 0409C4 0409BF || 0409C4 4B          2120     LD C,E
ld hl,$044a00    ; ld hl,$044a00    | 0409C5 0409C0 || 0409C5 21 00 4A 04 2121     LD      HL,ACCS   ; HL: Pointer to the string accumulator
ld de,$044a00    ; ld de,$044a00    | 0409C9 0409C4 || 0409C9 11 00 4A 04 2122     LD DE,ACCS
ld e,c           ; ld e,c           | 0409CD 0409C8 || 0409CD 59          2123     LD E,C    ; DE: Pointer to the end of the string in the accumulator
sbc hl,de        ; sbc hl,de        | 0409CE 0409C9 || 0409CE ED 52       2124     SBC     HL,DE   ; HL: Number of bytes to reserve on the stack (a negative number)
add hl,sp        ; add hl,sp        | 0409D0 0409CB || 0409D0 39          2125     ADD     HL,SP   ; Grow the stack
ld sp,hl         ; ld sp,hl         | 0409D1 0409CC || 0409D1 F9          2126     LD      SP,HL
ld d,a           ; ld d,a           | 0409D2 0409CD || 0409D2 57          2127     LD      D,A   ;  D: This needs to be set to A for some functions
ld b,a           ;                  | 0409D3        || 0409D3 47          2128     LD B,A   ; Stack A and C (the string length)
push bc          ;                  | 0409D4        || 0409D4 C5          2129     PUSH    BC   ; Note that this stacks 3 bytes, not 2; the MSB is irrelevant
ld b,$00         ;                  | 0409D5        || 0409D5 06 00       2130     LD B,0   ; Reset B to 0 for the LDIR in this function
jr z,$+$0d       ;                  | 0409D7        || 0409D7 28 0B       2131     JR      Z,PUSHS1         ; Is it zero length?
ld de,$044a00    ;                  | 0409D9        || 0409D9 11 00 4A 04 2132     LD      DE,ACCS   ; DE: Destination
ex de,hl         ;                  | 0409DD        || 0409DD EB          2133     EX      DE,HL   ; HL: Destination, DE: Address on stack
ldir             ; ldir             | 0409DE 0409D6 || 0409DE ED B0       2134     LDIR                      ; Copy to stack
call $041681     ; call $04164f     | 0409E0 0409D8 || 0409E0 CD 81 16 04 2135     CALL    CHECK   ; Final check to see if there is sufficient space on the stack
jp (ix)          ; jp (ix)          | 0409E4 0409DC || 0409E4 DD E9       2136  PUSHS1:   JP      (IX)             ; Effectively "RET" (IX contains the return address)
pop ix           ; pop ix           | 0409E6 0409DE || 0409E6 DD E1       2144  POPS:   POP     IX               ; IX: Return address
ld l,c           ; ld l,c           | 0409E8 0409E0 || 0409E8 69          2145     LD L,C   ; Temporarily store string length in L
ld bc,$000000    ; ld bc,$000000    | 0409E9 0409E1 || 0409E9 01 00 00 00 2146     LD BC,0
ld c,l           ; ld c,l           | 0409ED 0409E5 || 0409ED 4D          2147     LD C,L   ; BC: Number of bytes to copy
ld hl,$000000    ; ld hl,$000000    | 0409EE 0409E6 || 0409EE 21 00 00 00 2148     LD      HL,0   ; HL: 0
add hl,sp        ; add hl,sp        | 0409F2 0409EA || 0409F2 39          2149     ADD     HL,SP   ; HL: Stack address
ld de,$044a00    ; ld de,$044a00    | 0409F3 0409EB || 0409F3 11 00 4A 04 2150     LD      DE,ACCS   ; DE: Destination
inc c            ; inc c            | 0409F7 0409EF || 0409F7 0C          2151     INC     C   ; Quick check to see if this is a zero length string
dec c            ; dec c            | 0409F8 0409F0 || 0409F8 0D          2152     DEC     C
jr z,$+$04       ; jr z,$+$04       | 0409F9 0409F1 || 0409F9 28 02       2153     JR      Z,POPS1          ; Yes it is, so skip
ldir             ; ldir             | 0409FB 0409F3 || 0409FB ED B0       2154     LDIR                     ; No, so copy from the stack
ld sp,hl         ; ld sp,hl         | 0409FD 0409F5 || 0409FD F9          2155  POPS1:   LD      SP,HL   ; Shrink the stack
jp (ix)          ; jp (ix)          | 0409FE 0409F6 || 0409FE DD E9       2156     JP      (IX)             ; Effectively "RET" (IX contains the return address)
ld a,(iy)        ; ld a,(iy)        | 040A00 0409F8 || 040A00 FD 7E 00    2158  HEXDIG:   LD      A,(IY)
cp $30           ; cp $30           | 040A03 0409FB || 040A03 FE 30       2159     CP      '0'
ret c            ; ret c            | 040A05 0409FD || 040A05 D8          2160     RET     C
cp $3a           ; cp $3a           | 040A06 0409FE || 040A06 FE 3A       2161     CP      '9'+1
ccf              ; ccf              | 040A08 040A00 || 040A08 3F          2162     CCF
ret nc           ; ret nc           | 040A09 040A01 || 040A09 D0          2163     RET     NC
cp $41           ; cp $41           | 040A0A 040A02 || 040A0A FE 41       2164     CP      'A'
ret c            ; ret c            | 040A0C 040A04 || 040A0C D8          2165     RET     C
sub $37          ; sub $37          | 040A0D 040A05 || 040A0D D6 37       2166     SUB     'A'-10
cp $10           ; cp $10           | 040A0F 040A07 || 040A0F FE 10       2167     CP      16
ccf              ; ccf              | 040A11 040A09 || 040A11 3F          2168     CCF
ret              ; ret              | 040A12 040A0A || 040A12 C9          2169     RET
ld a,(iy)        ; ld a,(iy)        | 040A13 040A0B || 040A13 FD 7E 00    2171  BINDIG:   LD A,(IY)
cp $30           ; cp $30           | 040A16 040A0E || 040A16 FE 30       2172     CP '0'
ret c            ; ret c            | 040A18 040A10 || 040A18 D8          2173     RET C
cp $32           ; cp $32           | 040A19 040A11 || 040A19 FE 32       2174     CP '1'+1
ccf              ; ccf              | 040A1B 040A13 || 040A1B 3F          2175     CCF
ret              ; ret              | 040A1C 040A14 || 040A1C C9          2176     RET
cp $3e           ; cp $3e           | 040A1D 040A15 || 040A1D FE 3E       2178  RELOP?:   CP      '>'
ret nc           ; ret nc           | 040A1F 040A17 || 040A1F D0          2179     RET     NC
cp $3d           ; cp $3d           | 040A20 040A18 || 040A20 FE 3D       2180     CP      '='
ret nc           ; ret nc           | 040A22 040A1A || 040A22 D0          2181     RET     NC
cp $3c           ; cp $3c           | 040A23 040A1B || 040A23 FE 3C       2182     CP      '<'
ret              ; ret              | 040A25 040A1D || 040A25 C9          2183     RET
call $04031a     ; call $040315     | 040A26 040A1E || 040A26 CD 1A 03 04 2185  EXPRSC:   CALL    EXPRS
call $040a78     ; call $040a70     | 040A2A 040A22 || 040A2A CD 78 0A 04 2186  COMMA:   CALL    NXT
inc iy           ; inc iy           | 040A2E 040A26 || 040A2E FD 23       2187     INC     IY
cp $2c           ; cp $2c           | 040A30 040A28 || 040A30 FE 2C       2188     CP      ','
ret z            ; ret z            | 040A32 040A2A || 040A32 C8          2189     RET     Z
ld a,$05         ; ld a,$05         | 040A33 040A2B || 040A33 3E 05       2190     LD      A,5
jr $+$0d         ; jr $+$0d         | 040A35 040A2D || 040A35 18 0B       2191     JR      ERROR1_EV          ;"Missing ,"
call $040a78     ; call $040a70     | 040A37 040A2F || 040A37 CD 78 0A 04 2193  BRAKET:   CALL    NXT
inc iy           ; inc iy           | 040A3B 040A33 || 040A3B FD 23       2194     INC     IY
cp $29           ; cp $29           | 040A3D 040A35 || 040A3D FE 29       2195     CP      ')'
ret z            ; ret z            | 040A3F 040A37 || 040A3F C8          2196     RET     Z
ld a,$1b         ; ld a,$1b         | 040A40 040A38 || 040A40 3E 1B       2197     LD      A,27
jp $043798       ; jp $043760       | 040A42 040A3A || 040A42 C3 98 37 04 2198  ERROR1_EV:   JP      ERROR_           ;"Missing )"
inc iy           ; inc iy           | 040A46 040A3E || 040A46 FD 23       2200  SAVE_EV:   INC     IY
ex af,af'        ; ex af,af'        | 040A48 040A40 || 040A48 08          2201  SAVE1:   EX      AF,AF'
jp m,$04033b     ; jp m,$040336     | 040A49 040A41 || 040A49 FA 3B 03 04 2202     JP      M,TYPE_EV_
ex af,af'        ; ex af,af'        | 040A4D 040A45 || 040A4D 08          2203     EX      AF,AF'
ex (sp),hl       ; ex (sp),hl       | 040A4E 040A46 || 040A4E E3          2204     EX      (SP),HL
exx              ; exx              | 040A4F 040A47 || 040A4F D9          2205     EXX
push hl          ; push hl          | 040A50 040A48 || 040A50 E5          2206     PUSH    HL
exx              ; exx              | 040A51 040A49 || 040A51 D9          2207     EXX
push af          ; push af          | 040A52 040A4A || 040A52 F5          2208     PUSH    AF
push bc          ; push bc          | 040A53 040A4B || 040A53 C5          2209     PUSH    BC
jp (hl)          ; jp (hl)          | 040A54 040A4C || 040A54 E9          2210     JP      (HL)
ex af,af'        ; ex af,af'        | 040A55 040A4D || 040A55 08          2212  DOIT:   EX      AF,AF'
jp m,$04033b     ; jp m,$040336     | 040A56 040A4E || 040A56 FA 3B 03 04 2213     JP      M,TYPE_EV_
exx              ; exx              | 040A5A 040A52 || 040A5A D9          2214     EXX
pop bc           ; pop bc           | 040A5B 040A53 || 040A5B C1          2215     POP     BC              ;RETURN ADDRESS
exx              ; exx              | 040A5C 040A54 || 040A5C D9          2216     EXX
ld a,c           ; ld a,c           | 040A5D 040A55 || 040A5D 79          2217     LD      A,C
pop bc           ; pop bc           | 040A5E 040A56 || 040A5E C1          2218     POP     BC
ld b,a           ; ld b,a           | 040A5F 040A57 || 040A5F 47          2219     LD      B,A
pop af           ; pop af           | 040A60 040A58 || 040A60 F1          2220     POP     AF              ;OPERATOR
exx              ; exx              | 040A61 040A59 || 040A61 D9          2221     EXX
ex de,hl         ; ex de,hl         | 040A62 040A5A || 040A62 EB          2222     EX      DE,HL
pop hl           ; pop hl           | 040A63 040A5B || 040A63 E1          2223     POP     HL
exx              ; exx              | 040A64 040A5C || 040A64 D9          2224     EXX
ex de,hl         ; ex de,hl         | 040A65 040A5D || 040A65 EB          2225     EX      DE,HL
pop hl           ; pop hl           | 040A66 040A5E || 040A66 E1          2226     POP     HL
exx              ; exx              | 040A67 040A5F || 040A67 D9          2227     EXX
push bc          ; push bc          | 040A68 040A60 || 040A68 C5          2228     PUSH    BC
exx              ; exx              | 040A69 040A61 || 040A69 D9          2229     EXX
and $0f          ; and $0f          | 040A6A 040A62 || 040A6A E6 0F       2230     AND     0FH
call $0420a2     ; call $04206a     | 040A6C 040A64 || 040A6C CD A2 20 04 2231     CALL    FPP
jr c,$-$2e       ; jr c,$-$2e       | 040A70 040A68 || 040A70 38 D0       2232     JR      C,ERROR1_EV
xor a            ; xor a            | 040A72 040A6A || 040A72 AF          2233     XOR     A
ex af,af'        ; ex af,af'        | 040A73 040A6B || 040A73 08          2234     EX      AF,AF'          ;TYPE
ld a,(iy)        ; ld a,(iy)        | 040A74 040A6C || 040A74 FD 7E 00    2235     LD      A,(IY)
ret              ; ret              | 040A77 040A6F || 040A77 C9          2236     RET
ld a,(iy)        ; ld a,(iy)        | 040A78 040A70 || 040A78 FD 7E 00    2244  NXT:   LD      A,(IY)   ; Fetch the character
cp $20           ; cp $20           | 040A7B 040A73 || 040A7B FE 20       2245     CP      ' '   ; If it is space, then return
ret nz           ; ret nz           | 040A7D 040A75 || 040A7D C0          2246     RET     NZ
inc iy           ; inc iy           | 040A7E 040A76 || 040A7E FD 23       2247     INC     IY   ; Increment the pointer and
jp $040a78       ; jp $040a70       | 040A80 040A78 || 040A80 C3 78 0A 04 2248     JP      NXT   ; Loop
push hl          ; push hl          | 040A84 040A7C || 040A84 E5          2250  DISPT2:   PUSH    HL
ld hl,$0401b5    ; ld hl,$0401b5    | 040A85 040A7D || 040A85 21 B5 01 04 2251     LD      HL,SOPTBL
jr $+$09         ; jr $+$09         | 040A89 040A81 || 040A89 18 07       2252     JR      DISPT0
push hl          ; push hl          | 040A8B 040A83 || 040A8B E5          2254  DISPAT:   PUSH    HL
sub $8d          ; sub $8d          | 040A8C 040A84 || 040A8C D6 8D       2255     SUB     FUNTOK
ld hl,$04010a    ; ld hl,$04010a    | 040A8E 040A86 || 040A8E 21 0A 01 04 2256     LD      HL,FUNTBL
push bc          ; push bc          | 040A92 040A8A || 040A92 C5          2257  DISPT0:   PUSH    BC
ld bc,$000003    ; ld bc,$000003    | 040A93 040A8B || 040A93 01 03 00 00 2259     LD BC, 3
ld b,a           ; ld b,a           | 040A97 040A8F || 040A97 47          2260     LD B, A
mlt bc           ; mlt bc           | 040A98 040A90 || 040A98 ED 4C       2261     MLT BC
add hl,bc        ; add hl,bc        | 040A9A 040A92 || 040A9A 09          2262     ADD HL, BC
ld hl,(hl)       ; ld hl,(hl)       | 040A9B 040A93 || 040A9B ED 27       2263     LD HL, (HL)
pop bc           ; pop bc           | 040A9D 040A95 || 040A9D C1          2274     POP     BC
ex (sp),hl       ; ex (sp),hl       | 040A9E 040A96 || 040A9E E3          2275     EX      (SP),HL
ret              ; ret              | 040A9F 040A97 || 040A9F C9          2276     RET                     ;OFF TO ROUTINE
ld hl,$840437    ;                  | 040AA0        || 040AA0 21 37 04    2437  CMDTAB:   DW24  AUTO   ; C6H
dec (hl)         ;                  | 040AA4        || 
inc b            ;                  | 040AA5        || 
ld h,d           ;                  | 040AA6        || 040AA6 62 37 04    2439     DW24  LOAD   ; C8H
scf              ;                  | 040AA7        || 
inc b            ;                  | 040AA8        || 
cp a             ;                  | 040AA9        || 040AA9 BF 35 04    2440     DW24  LIST_   ; C9H
dec (hl)         ;                  | 040AAA        || 
inc b            ;                  | 040AAB        || 
ccf              ;                  | 040AAC        || 040AAC 3F 37 04    2441     DW24  NEW   ; CAH
scf              ;                  | 040AAD        || 
inc b            ;                  | 040AAE        || 
ld b,l           ;                  | 040AAF        || 040AAF 45 37 04    2442     DW24  OLD   ; CBH
scf              ;                  | 040AB0        || 
inc b            ;                  | 040AB1        || 
ld c,(hl)        ;                  | 040AB2        || 040AB2 4E 36 04    2443     DW24  RENUM   ; CCH
ld (hl),$04      ;                  | 040AB3        || 
ld (hl),e        ;                  | 040AB5        || 040AB5 73 37 04    2444     DW24  SAVE   ; CDH
scf              ;                  | 040AB6        || 
inc b            ;                  | 040AB7        || 
jp c,$d00415     ;                  | 040AB8        || 040AB8 DA 15 04    2445     DW24  PUT   ; CEH
inc de           ;                  | 040ABC        || 
inc b            ;                  | 040ABD        || 
jp pe,$fd0413    ;                  | 040ABE        || 040ABE EA 13 04    2447     DW24  PAGEV_EX   ; D0H
inc de           ;                  | 040AC2        || 
inc b            ;                  | 040AC3        || 
ld h,$14         ;                  | 040AC4        || 040AC4 26 14 04    2449     DW24  LOMEMV_EX   ; D2H
inc b            ;                  | 040AC6        || 
ccf              ;                  | 040AC7        || 040AC7 3F 14 04    2450     DW24  HIMEMV_EX   ; D3H
inc d            ;                  | 040AC8        || 
inc b            ;                  | 040AC9        || 
ld h,h           ;                  | 040ACA        || 040ACA 64 46 04    2451     DW24  SOUND   ; D4H
ld b,(hl)        ;                  | 040ACB        || 
inc b            ;                  | 040ACC        || 
call p,$0c0414   ;                  | 040ACD        || 040ACD F4 14 04    2452     DW24  BPUT   ; D5H
dec d            ;                  | 040AD1        || 
inc b            ;                  | 040AD2        || 
ld d,h           ;                  | 040AD3        || 040AD3 54 0B 04    2454     DW24  CHAIN   ; D7H
dec bc           ;                  | 040AD4        || 
inc b            ;                  | 040AD5        || 
sbc a,a          ;                  | 040AD6        || 040AD6 9F 13 04    2455     DW24  CLR   ; D8H
inc de           ;                  | 040AD7        || 
inc b            ;                  | 040AD8        || 
ret pe           ;                  | 040AD9        || 040AD9 E8 14 04    2456     DW24  CLOSE   ; D9H
inc d            ;                  | 040ADA        || 
inc b            ;                  | 040ADB        || 
nop              ;                  | 040ADC        || 040ADC 00 44 04    2457     DW24  CLG   ; DAH
ld b,h           ;                  | 040ADD        || 
inc b            ;                  | 040ADE        || 
ld (hl),d        ;                  | 040ADF        || 040ADF 72 13 04    2458     DW24  CLS   ; DBH
inc de           ;                  | 040AE0        || 
inc b            ;                  | 040AE1        || inc b                          ; 040AD9
inc sp           ;                  | 040AE2        || 040AE2 33 0C 04    2459     DW24  REM_EX               ; DCH: DATA
inc c            ;                  | 040AE3        || inc c                          ; 040ADB
inc b            ;                  | 040AE4        || inc b                          ; 040ADC
inc sp           ;                  | 040AE5        || 040AE5 33 0C 04    2460     DW24  REM_EX               ; DDH: DEF
inc c            ;                  | 040AE6        || inc c                          ; 040ADE
inc b            ;                  | 040AE7        || inc b                          ; 040ADF
ld sp,hl         ;                  | 040AE8        || 040AE8 F9 0C 04    2461     DW24  DIM_EX   ; DEH
inc c            ;                  | 040AE9        || inc c                          ; 040AE1
inc b            ;                  | 040AEA        || inc b                          ; 040AE2
ld hl,($ce0446)  ;                  | 040AEB        || 040AEB 2A 46 04    2462     DW24  DRAW   ; DFH
dec bc           ;                  | 040AEF        || dec bc                         ; 040AE7
inc b            ;                  | 040AF0        || inc b                          ; 040AE8
adc a,d          ;                  | 040AF1        || 040AF1 8A 11 04    2464     DW24  ENDPRO   ; E1H
ld de,$498404    ;                  | 040AF2        || ld de,$43b704                  ; 040AEA
inc b            ;                  | 040AF6        || inc b                          ; 040AEE
sbc a,a          ;                  | 040AF7        || 040AF7 9F 0F 04    2466     DW24  FOR_EX   ; E3H
rrca             ;                  | 040AF8        || rrca                           ; 040AF0
inc b            ;                  | 040AF9        || inc b                          ; 040AF1
ld c,a           ;                  | 040AFA        || 040AFA 4F 0F 04    2467     DW24  GOSUB_EX   ; E4H
rrca             ;                  | 040AFB        || rrca                           ; 040AF3
inc b            ;                  | 040AFC        || inc b                          ; 040AF4
inc sp           ;                  | 040AFD        || 040AFD 33 0F 04    2468     DW24  GOTO_EX   ; E5H
rrca             ;                  | 040AFE        || rrca                           ; 040AF6
inc b            ;                  | 040AFF        || inc b                          ; 040AF7
cp (hl)          ;                  | 040B00        || 040B00 BE 45 04    2469     DW24  GCOL   ; E6H
ld b,l           ;                  | 040B01        || ld b,l                         ; 040AF9
inc b            ;                  | 040B02        || inc b                          ; 040AFA
ld a,$13         ;                  | 040B03        || 040B03 3E 13 04    2470     DW24  IF_   ; E7H
inc b            ;                  | 040B05        || inc b                          ; 040AFD
inc l            ;                  | 040B06        || 040B06 2C 12 04    2471     DW24  INPUT   ; E8H
ld (de),a        ;                  | 040B07        || ld (de),a                      ; 040AFF
inc b            ;                  | 040B08        || 
ld d,h           ;                  | 040B09        || 040B09 54 0C 04    2472     DW24  LET   ; E9H
inc c            ;                  | 040B0A        || 
inc b            ;                  | 040B0B        || 
cpl              ;                  | 040B0C        || 040B0C 2F 11 04    2473     DW24  LOCAL_EX_   ; EAH
ld de,$441004    ;                  | 040B0D        || 
inc b            ;                  | 040B11        || 
ld ($ed0446),hl  ;                  | 040B12        || 040B12 22 46 04    2475     DW24  MOVE   ; ECH
rrca             ;                  | 040B16        || 
inc b            ;                  | 040B17        || 
add a,$0e        ;                  | 040B18        || 040B18 C6 0E 04    2477     DW24  ON_EX_   ; EEH
inc b            ;                  | 040B1A        || 
xor c            ;                  | 040B1B        || 040B1B A9 14 04    2478     DW24  VDU   ; EFH
inc d            ;                  | 040B1C        || 
inc b            ;                  | 040B1D        || 
ret p            ;                  | 040B1E        || 040B1E F0 45 04    2479     DW24  PLOT   ; F0H
ld b,l           ;                  | 040B1F        || ld b,l                         ; 040B17
inc b            ;                  | 040B20        || inc b                          ; 040B18
rst $08          ; rst $00          | 040B21 040B19 || 040B21 CF 0D 04    2480     DW24  PRINT_   ; F1H
dec c            ;                  | 040B22        || dec c                          ; 040B1A
inc b            ;                  | 040B23        || inc b                          ; 040B1B
adc a,h          ;                  | 040B24        || 040B24 8C 10 04    2481     DW24  PROC_EX   ; F2H
djnz $+$06       ;                  | 040B25        || djnz $+$06                     ; 040B1D
sbc a,$12        ;                  | 040B27        || 040B27 DE 12 04    2482     DW24  READ   ; F3H
inc b            ;                  | 040B29        || inc b                          ; 040B21
inc sp           ;                  | 040B2A        || 040B2A 33 0C 04    2483     DW24  REM_EX   ; F4H
inc c            ;                  | 040B2B        || inc c                          ; 040B23
inc b            ;                  | 040B2C        || inc b                          ; 040B24
ld l,a           ;                  | 040B2D        || 040B2D 6F 0F 04    2484     DW24  REPEAT_EX   ; F5H
rrca             ;                  | 040B2E        || rrca                           ; 040B26
inc b            ;                  | 040B2F        || inc b                          ; 040B27
sub a            ;                  | 040B30        || 040B30 97 13 04    2485     DW24  REPOR   ; F6H
inc de           ;                  | 040B31        || inc de                         ; 040B29
inc b            ;                  | 040B32        || inc b                          ; 040B2A
xor c            ;                  | 040B33        || 040B33 A9 13 04    2486     DW24  RESTOR_EX   ; F7H
inc de           ;                  | 040B34        || inc de                         ; 040B2C
inc b            ;                  | 040B35        || inc b                          ; 040B2D
ld e,l           ;                  | 040B36        || 040B36 5D 0F 04    2487     DW24  RETURN   ; F8H
rrca             ;                  | 040B37        || rrca                           ; 040B2F
inc b            ;                  | 040B38        || inc b                          ; 040B30
ld c,(hl)        ;                  | 040B39        || 040B39 4E 0B 04    2488     DW24  RUN   ; F9H
dec bc           ;                  | 040B3A        || dec bc                         ; 040B32
inc b            ;                  | 040B3B        || inc b                          ; 040B33
ld a,a           ;                  | 040B3C        || 040B3C 7F 13 04    2489     DW24  STOP   ; FAH
inc de           ;                  | 040B3D        || inc de                         ; 040B35
inc b            ;                  | 040B3E        || inc b                          ; 040B36
inc c            ;                  | 040B3F        || 040B3F 0C 45 04    2490     DW24  COLOUR   ; FBH
ld b,l           ;                  | 040B40        || 
inc b            ;                  | 040B41        || 
adc a,e          ;                  | 040B42        || 040B42 8B 14 04    2491     DW24  TRACE_EX   ; FCH
inc d            ;                  | 040B43        || 
inc b            ;                  | 040B44        || 
ld a,c           ;                  | 040B45        || 040B45 79 0F 04    2492     DW24  UNTIL_EX   ; FDH
rrca             ;                  | 040B46        || 
inc b            ;                  | 040B47        || 
ld a,l           ;                  | 040B48        || 040B48 7D 14 04    2493     DW24  WIDTHV   ; FEH
inc d            ;                  | 040B49        || 
inc b            ;                  | 040B4A        || 
add hl,de        ;                  | 040B4B        || 040B4B 19 0C 04    2494     DW24  CLI               ; FFH: OSCLI
inc c            ;                  | 040B4C        || 
inc b            ;                  | 040B4D        || 
call $0417ac     ;                  | 040B4E        || 040B4E CD AC 17 04 2499  RUN:   CALL    TERMQ   ; Standalone RUN command?
jr z,$+$12       ;                  | 040B52        || 040B52 28 10       2500     JR      Z,RUN0   ; Yes, so just RUN the code
call $04031a     ;                  | 040B54        || 040B54 CD 1A 03 04 2504  CHAIN:   CALL    EXPRS   ; Get the filename
ld a,$0d         ; ld a,$0d         | 040B58 040B50 || 040B58 3E 0D       2505     LD      A,CR   ; Terminate it with a CR
ld (de),a        ; ld (de),a        | 040B5A 040B52 || 040B5A 12          2506     LD      (DE),A
ld sp,($044d20)  ; ld sp,($044d20)  | 040B5B 040B53 || 040B5B ED 7B 20 4D 2507  CHAIN0:   LD      SP,(HIMEM)  ; Reset SP
call $043857     ; call $04381f     | 040B60 040B58 || 040B60 CD 57 38 04 2508     CALL    LOAD0   ; And load the file in
ld sp,($044d20)  ; ld sp,($044d20)  | 040B64 040B5C || 040B64 ED 7B 20 4D 2510  RUN0:   LD      SP,(HIMEM)       ; Prepare for RUN
ld ix,$044d38    ; ld ix,$044d38    | 040B69 040B61 || 040B69 DD 21 38 4D 2511     LD      IX,RANDOM  ; Pointer to the RANDOM sysvar
ld a,r           ; ld a,r           | 040B6E 040B66 || 040B6E ED 5F       2512  @@:   LD      A, R   ; Use the R register to seed the random number generator
jr z,$-$02       ; jr z,$-$02       | 040B70 040B68 || 040B70 28 FC       2513     JR      Z, @B   ; Loop unti we get a non-zero value in A
rlca             ; rlca             | 040B72 040B6A || 040B72 07          2514     RLCA    ; Rotate it
rlca             ; rlca             | 040B73 040B6B || 040B73 07          2515     RLCA
ld (ix+$03),a    ; ld (ix+$03),a    | 040B74 040B6C || 040B74 DD 77 03    2516     LD      (IX+3),A  ; And store
sbc a,a          ; sbc a,a          | 040B77 040B6F || 040B77 9F          2517     SBC     A,A   ; Depending upon the C flag, this will either be 00h or FFh
ld (ix+$04),a    ; ld (ix+$04),a    | 040B78 040B70 || 040B78 DD 77 04    2518     LD      (IX+4),A  ; And store
call $0438ae     ; call $043876     | 040B7B 040B73 || 040B7B CD AE 38 04 2519     CALL    CLEAR
ld hl,$000000    ; ld hl,$000000    | 040B7F 040B77 || 040B7F 21 00 00 00 2520     LD      HL,0   ; Clear the error trap sysvar
ld ($044d2c),hl  ; ld ($044d2c),hl  | 040B83 040B7B || 040B83 22 2C 4D 04 2521     LD      (ERRTRP),HL
ld hl,($044d14)  ; ld hl,($044d14)  | 040B87 040B7F || 040B87 2A 14 4D 04 2522     LD      HL,(PAGE_)  ; Load HL with the start of program memory (PAGE)
ld a,$dc         ; ld a,$dc         | 040B8B 040B83 || 040B8B 3E DC       2523     LD      A,DATA_EX_   ; The DATA token value
call $041880     ; call $04184e     | 040B8D 040B85 || 040B8D CD 80 18 04 2524     CALL    SEARCH_EX           ; Search for the first DATA token in the tokenised listing
ld ($044d31),hl  ; ld ($044d31),hl  | 040B91 040B89 || 040B91 22 31 4D 04 2525     LD      (DATPTR),HL      ; Set data pointer
ld iy,($044d14)  ; ld iy,($044d14)  | 040B95 040B8D || 040B95 FD 2A 14 4D 2526     LD      IY,(PAGE_)  ; Load IY with the start of program memory
call $040be2     ; call $040bda     | 040B9A 040B92 || 040B9A CD E2 0B 04 2528  XEQ0:   CALL    NEWLIN
ld ($044d35),iy  ; ld ($044d35),iy  | 040B9E 040B96 || 040B9E FD 22 35 4D 2529  XEQ:   LD      (ERRLIN),IY      ; Error pointer
call $043fa5     ; call $043f6d     | 040BA3 040B9B || 040BA3 CD A5 3F 04 2530     CALL    TRAP             ; Check keyboard
call $040a78     ; call $040a70     | 040BA7 040B9F || 040BA7 CD 78 0A 04 2531  XEQ1:   CALL    NXT
inc iy           ; inc iy           | 040BAB 040BA3 || 040BAB FD 23       2532     INC     IY
cp $3a           ; cp $3a           | 040BAD 040BA5 || 040BAD FE 3A       2533     CP      ':'              ; Seperator
jr z,$-$08       ; jr z,$-$08       | 040BAF 040BA7 || 040BAF 28 F6       2534     JR      Z,XEQ1
cp $0d           ; cp $0d           | 040BB1 040BA9 || 040BB1 FE 0D       2535     CP      CR
jr z,$-$19       ; jr z,$-$19       | 040BB3 040BAB || 040BB3 28 E5       2536     JR      Z,XEQ0           ; New program line
sub $c6          ; sub $c6          | 040BB5 040BAD || 040BB5 D6 C6       2537     SUB     TCMD_EX
jp c,$040c42     ; jp c,$040c3a     | 040BB7 040BAF || 040BB7 DA 42 0C 04 2538     JP      C,LET0           ; Implied "LET"
ld bc,$000003    ; ld bc,$000003    | 040BBB 040BB3 || 040BBB 01 03 00 00 2540     LD BC, 3
ld b,a           ; ld b,a           | 040BBF 040BB7 || 040BBF 47          2541     LD B, A
mlt bc           ; mlt bc           | 040BC0 040BB8 || 040BC0 ED 4C       2542     MLT BC
ld hl,$040aa0    ; ld hl,$040a98    | 040BC2 040BBA || 040BC2 21 A0 0A 04 2543     LD HL,CMDTAB
add hl,bc        ; add hl,bc        | 040BC6 040BBE || 040BC6 09          2544     ADD HL, BC
ld hl,(hl)       ; ld hl,(hl)       | 040BC7 040BBF || 040BC7 ED 27       2545     LD HL, (HL)  ; Table entry
call $040a78     ; call $040a70     | 040BC9 040BC1 || 040BC9 CD 78 0A 04 2557     CALL    NXT
jp (hl)          ; jp (hl)          | 040BCD 040BC5 || 040BCD E9          2558     JP      (HL)             ; Execute the statement
call $0439e6     ; call $0439ae     | 040BCE 040BC6 || 040BCE CD E6 39 04 2562  END_:   CALL    SETLIN          ;FIND CURRENT LINE
ld a,h           ; ld a,h           | 040BD2 040BCA || 040BD2 7C          2563     LD      A,H
or l             ; or l             | 040BD3 040BCB || 040BD3 B5          2564     OR      L               ;DIRECT?
jp z,$0430b8     ; jp z,$043080     | 040BD4 040BCC || 040BD4 CA B8 30 04 2565     JP      Z,CLOOP
ld e,$00         ; ld e,$00         | 040BD8 040BD0 || 040BD8 1E 00       2566     LD      E,0
call $044374     ; call $04432b     | 040BDA 040BD2 || 040BDA CD 74 43 04 2567     CALL    OSSHUT          ;CLOSE ALL FILES
jp $0430b7       ; jp $04307f       | 040BDE 040BD6 || 040BDE C3 B7 30 04 2568     JP      WARM            ;"Ready"
ld a,(iy)        ; ld a,(iy)        | 040BE2 040BDA || 040BE2 FD 7E 00    2570  NEWLIN:   LD      A,(IY+0)        ;A=LINE LENGTH
ld bc,$000003    ; ld bc,$000003    | 040BE5 040BDD || 040BE5 01 03 00 00 2571     LD      BC,3
add iy,bc        ; add iy,bc        | 040BE9 040BE1 || 040BE9 FD 09       2572     ADD     IY,BC
or a             ; or a             | 040BEB 040BE3 || 040BEB B7          2573     OR      A
jr z,$-$1e       ; jr z,$-$1e       | 040BEC 040BE4 || 040BEC 28 E0       2574     JR      Z,END_           ;LENGTH=0, EXIT
ld hl,($044d26)  ; ld hl,($044d26)  | 040BEE 040BE6 || 040BEE 2A 26 4D 04 2575     LD      HL,(TRACEN)
ld a,h           ; ld a,h           | 040BF2 040BEA || 040BF2 7C          2576     LD      A,H
or l             ; or l             | 040BF3 040BEB || 040BF3 B5          2577     OR      L
ret z            ; ret z            | 040BF4 040BEC || 040BF4 C8          2578     RET     Z
ld de,$000000    ; ld de,$000000    | 040BF5 040BED || 040BF5 11 00 00 00 2579     LD DE, 0  ;Clear DE
ld d,(iy-$01)    ; ld d,(iy-$01)    | 040BF9 040BF1 || 040BF9 FD 56 FF    2580     LD      D,(IY-1)        ;DE = LINE NUMBER
ld e,(iy-$02)    ; ld e,(iy-$02)    | 040BFC 040BF4 || 040BFC FD 5E FE    2581     LD      E,(IY-2)
sbc hl,de        ; sbc hl,de        | 040BFF 040BF7 || 040BFF ED 52       2582     SBC     HL,DE
ret c            ; ret c            | 040C01 040BF9 || 040C01 D8          2583     RET     C
ex de,hl         ; ex de,hl         | 040C02 040BFA || 040C02 EB          2584     EX      DE,HL
ld a,$5b         ; ld a,$5b         | 040C03 040BFB || 040C03 3E 5B       2585     LD      A,'['           ;TRACE
call $043987     ; call $04394f     | 040C05 040BFD || 040C05 CD 87 39 04 2586     CALL    OUTCHR
call $043a2f     ; call $0439f7     | 040C09 040C01 || 040C09 CD 2F 3A 04 2587     CALL    PBCDL
ld a,$5d         ; ld a,$5d         | 040C0D 040C05 || 040C0D 3E 5D       2588     LD      A,']'
call $043987     ; call $04394f     | 040C0F 040C07 || 040C0F CD 87 39 04 2589     CALL    OUTCHR
ld a,$20         ; ld a,$20         | 040C13 040C0B || 040C13 3E 20       2590     LD      A,' '
jp $043987       ; jp $04394f       | 040C15 040C0D || 040C15 C3 87 39 04 2591     JP      OUTCHR
call $04031a     ; call $040315     | 040C19 040C11 || 040C19 CD 1A 03 04 2597  CLI:   CALL    EXPRS
ld a,$0d         ; ld a,$0d         | 040C1D 040C15 || 040C1D 3E 0D       2598     LD      A,CR
ld (de),a        ; ld (de),a        | 040C1F 040C17 || 040C1F 12          2599     LD      (DE),A
ld hl,$044a00    ; ld hl,$044a00    | 040C20 040C18 || 040C20 21 00 4A 04 2600     LD      HL,ACCS
call $043fc8     ; call $043f90     | 040C24 040C1C || 040C24 CD C8 3F 04 2601     CALL    OSCLI
jp $040b9e       ; jp $040b96       | 040C28 040C20 || 040C28 C3 9E 0B 04 2602     JP      XEQ
push iy          ; push iy          | 040C2C 040C24 || 040C2C FD E5       2606  EXT_EX:   PUSH    IY
pop hl           ; pop hl           | 040C2E 040C26 || 040C2E E1          2607     POP     HL
call $043fc8     ; call $043f90     | 040C2F 040C27 || 040C2F CD C8 3F 04 2608     CALL    OSCLI
push iy          ; push iy          | 040C33 040C2B || 040C33 FD E5       2609  REM_EX:   PUSH    IY
pop hl           ; pop hl           | 040C35 040C2D || 040C35 E1          2610     POP     HL
ld a,$0d         ; ld a,$0d         | 040C36 040C2E || 040C36 3E 0D       2611     LD      A,CR
ld b,a           ; ld b,a           | 040C38 040C30 || 040C38 47          2612     LD      B,A
cpir             ; cpir             | 040C39 040C31 || 040C39 ED B1       2613     CPIR                    ;FIND LINE END
push hl          ; push hl          | 040C3B 040C33 || 040C3B E5          2614     PUSH    HL
pop iy           ; pop iy           | 040C3C 040C34 || 040C3C FD E1       2615     POP     IY
jp $040b9a       ; jp $040b92       | 040C3E 040C36 || 040C3E C3 9A 0B 04 2616     JP      XEQ0
cp $c5           ; cp $c5           | 040C42 040C3A || 040C42 FE C5       2620  LET0:   CP      ELSE_EX_-TCMD_EX
jr z,$-$11       ; jr z,$-$11       | 040C44 040C3C || 040C44 28 ED       2621     JR      Z,REM_EX
cp $64           ; cp $64           | 040C46 040C3E || 040C46 FE 64       2628     CP      '*'-TCMD_EX & 0FFH
jr z,$-$1c       ; jr z,$-$1c       | 040C48 040C40 || 040C48 28 E2       2629     JR      Z,EXT_EX
cp $77           ; cp $77           | 040C4A 040C42 || 040C4A FE 77       2630     CP      '='-TCMD_EX & 0FFH
jr z,$+$5d       ; jr z,$+$5d       | 040C4C 040C44 || 040C4C 28 5B       2631     JR      Z,FNEND
cp $95           ; cp $95           | 040C4E 040C46 || 040C4E FE 95       2632     CP      '['-TCMD_EX & 0FFH
jr z,$+$27       ; jr z,$+$27       | 040C50 040C48 || 040C50 28 25       2633     JR      Z,ASM
dec iy           ; dec iy           | 040C52 040C4A || 040C52 FD 2B       2634     DEC     IY
call $0415f0     ; call $0415be     | 040C54 040C4C || 040C54 CD F0 15 04 2635  LET:   CALL    ASSIGN   ; Assign the variable
jp z,$040b9e     ; jp z,$040b96     | 040C58 040C50 || 040C58 CA 9E 0B 04 2636     JP      Z,XEQ   ; Return if Z as it is a numeric variable that has been assigned in ASSIGN
jr c,$+$43       ; jr c,$+$43       | 040C5C 040C54 || 040C5C 38 41       2637     JR      C,SYNTAX         ; Return if C as it is an illegal variable
push af          ; push af          | 040C5E 040C56 || 040C5E F5          2639     PUSH    AF               ; At this point we're dealing with a string type (A=81h)
call $0417c2     ; call $041790     | 040C5F 040C57 || 040C5F CD C2 17 04 2640     CALL    EQUALS   ; Check if the variable is followed by an '=' symbol; this will throw a 'Mistake' error if not
push hl          ; push hl          | 040C63 040C5B || 040C63 E5          2641     PUSH    HL   ; HL: Address of the variable
call $04031a     ; call $040315     | 040C64 040C5C || 040C64 CD 1A 03 04 2642     CALL    EXPRS
pop ix           ; pop ix           | 040C68 040C60 || 040C68 DD E1       2643     POP     IX   ; IX: Address of the variable
pop af           ; pop af           | 040C6A 040C62 || 040C6A F1          2644     POP     AF   ; AF: The variable type
call $041632     ; call $041600     | 040C6B 040C63 || 040C6B CD 32 16 04 2645     CALL    STACCS   ; Copy the string from ACCS to the variable area
jp $040b9e       ; jp $040b96       | 040C6F 040C67 || 040C6F C3 9E 0B 04 2646  XEQR:   JP      XEQ
call $040be2     ; call $040bda     | 040C73 040C6B || 040C73 CD E2 0B 04 2648  ASM0:   CALL    NEWLIN
ld ($044d35),iy  ; ld ($044d35),iy  | 040C77 040C6F || 040C77 FD 22 35 4D 2649  ASM:   LD      (ERRLIN),IY
call $043fa5     ; call $043f6d     | 040C7C 040C74 || 040C7C CD A5 3F 04 2650     CALL    TRAP
call $0418cd     ; call $04189b     | 040C80 040C78 || 040C80 CD CD 18 04 2651     CALL    ASSEM
jr c,$+$1b       ; jr c,$+$1b       | 040C84 040C7C || 040C84 38 19       2652     JR      C,SYNTAX
cp $0d           ; cp $0d           | 040C86 040C7E || 040C86 FE 0D       2653     CP      CR
jr z,$-$15       ; jr z,$-$15       | 040C88 040C80 || 040C88 28 E9       2654     JR      Z,ASM0
ld hl,$044d40    ; ld hl,$044d40    | 040C8A 040C82 || 040C8A 21 40 4D 04 2655     LD      HL,LISTON
ld a,(hl)        ; ld a,(hl)        | 040C8E 040C86 || 040C8E 7E          2656     LD      A,(HL)
and $0f          ; and $0f          | 040C8F 040C87 || 040C8F E6 0F       2657     AND     0FH
or $b0           ; or $b0           | 040C91 040C89 || 040C91 F6 B0       2658     OR      B0H
ld (hl),a        ; ld (hl),a        | 040C93 040C8B || 040C93 77          2659     LD      (HL),A
jr $-$25         ; jr $-$25         | 040C94 040C8C || 040C94 18 D9       2660     JR      XEQR
call $043a72     ; call $043a3a     | 040C96 040C8E || 040C96 CD 72 3A 04 2662  VAR_:   CALL    GETVAR
ret z            ; ret z            | 040C9A 040C92 || 040C9A C8          2663     RET     Z
jp nc,$043a61    ; jp nc,$043a29    | 040C9B 040C93 || 040C9B D2 61 3A 04 2664     JP      NC,PUTVAR
ld a,$10         ; ld a,$10         | 040C9F 040C97 || 040C9F 3E 10       2665  SYNTAX:   LD      A,16            ;"Syntax error"
jr $+$04         ; jr $+$04         | 040CA1 040C99 || 040CA1 18 02       2666     JR ERROR0_EX
ld a,$11         ; ld a,$11         | 040CA3 040C9B || 040CA3 3E 11       2667  ESCAPE:   LD      A,17            ;"Escape"
jp $043798       ; jp $043760       | 040CA5 040C9D || 040CA5 C3 98 37 04 2668  ERROR0_EX:   JP      ERROR_
call $0401c7     ; call $0401c7     | 040CA9 040CA1 || 040CA9 CD C7 01 04 2672  FNEND:   CALL    EXPR            ;FUNCTION RESULT
ld b,e           ; ld b,e           | 040CAD 040CA5 || 040CAD 43          2673     LD      B,E
ex de,hl         ; ex de,hl         | 040CAE 040CA6 || 040CAE EB          2674     EX      DE,HL
exx              ; exx              | 040CAF 040CA7 || 040CAF D9          2675     EXX                     ;SAVE RESULT
ex de,hl         ; ex de,hl         | 040CB0 040CA8 || 040CB0 EB          2676     EX      DE,HL           ; IN DEB'C'D'E'
pop bc           ; pop bc           | 040CB1 040CA9 || 040CB1 C1          2677  FNEND5:   POP     BC
ld hl,$04178a    ; ld hl,$041758    | 040CB2 040CAA || 040CB2 21 8A 17 04 2678     LD      HL,LOCCHK
or a             ; or a             | 040CB6 040CAE || 040CB6 B7          2679     OR      A
sbc hl,bc        ; sbc hl,bc        | 040CB7 040CAF || 040CB7 ED 42       2680     SBC     HL,BC
jr z,$+$1e       ; jr z,$+$1e       | 040CB9 040CB1 || 040CB9 28 1C       2681     JR      Z,FNEND0        ;LOCAL VARIABLE
ld hl,$04108c    ; ld hl,$041084    | 040CBB 040CB3 || 040CBB 21 8C 10 04 2682     LD      HL,FNCHK
or a             ; or a             | 040CBF 040CB7 || 040CBF B7          2683     OR      A
sbc hl,bc        ; sbc hl,bc        | 040CC0 040CB8 || 040CC0 ED 42       2684     SBC     HL,BC
ld a,$07         ; ld a,$07         | 040CC2 040CBA || 040CC2 3E 07       2685     LD      A,7
jr nz,$-$1f      ; jr nz,$-$1f      | 040CC4 040CBC || 040CC4 20 DF       2686     JR      NZ,ERROR0_EX       ;"No FN"
pop iy           ; pop iy           | 040CC6 040CBE || 040CC6 FD E1       2687     POP     IY
ld ($044d35),iy  ; ld ($044d35),iy  | 040CC8 040CC0 || 040CC8 FD 22 35 4D 2688     LD      (ERRLIN),IY     ;IN CASE OF ERROR
ex de,hl         ; ex de,hl         | 040CCD 040CC5 || 040CCD EB          2689     EX      DE,HL
exx              ; exx              | 040CCE 040CC6 || 040CCE D9          2690     EXX
ex de,hl         ; ex de,hl         | 040CCF 040CC7 || 040CCF EB          2691     EX      DE,HL
ld de,$044a00    ; ld de,$044a00    | 040CD0 040CC8 || 040CD0 11 00 4A 04 2692     LD      DE,ACCS
ld e,b           ; ld e,b           | 040CD4 040CCC || 040CD4 58          2693     LD      E,B
ex af,af'        ; ex af,af'        | 040CD5 040CCD || 040CD5 08          2694     EX      AF,AF'
ret              ; ret              | 040CD6 040CCE || 040CD6 C9          2695     RET
pop ix           ; pop ix           | 040CD7 040CCF || 040CD7 DD E1       2697  FNEND0:   POP     IX
pop bc           ; pop bc           | 040CD9 040CD1 || 040CD9 C1          2698     POP     BC
ld a,b           ; ld a,b           | 040CDA 040CD2 || 040CDA 78          2699     LD      A,B
or a             ; or a             | 040CDB 040CD3 || 040CDB B7          2700     OR      A
jp m,$040cea     ; jp m,$040ce2     | 040CDC 040CD4 || 040CDC FA EA 0C 04 2701     JP      M,FNEND1        ;STRING
pop hl           ; pop hl           | 040CE0 040CD8 || 040CE0 E1          2702     POP     HL
exx              ; exx              | 040CE1 040CD9 || 040CE1 D9          2703     EXX
pop hl           ; pop hl           | 040CE2 040CDA || 040CE2 E1          2704     POP     HL
exx              ; exx              | 040CE3 040CDB || 040CE3 D9          2705     EXX
call $041608     ; call $0415d6     | 040CE4 040CDC || 040CE4 CD 08 16 04 2706     CALL    STORE
jr $-$37         ; jr $-$37         | 040CE8 040CE0 || 040CE8 18 C7       2707     JR      FNEND5
ld hl,$000000    ; ld hl,$000000    | 040CEA 040CE2 || 040CEA 21 00 00 00 2708  FNEND1:   LD      HL,0
add hl,sp        ; add hl,sp        | 040CEE 040CE6 || 040CEE 39          2709     ADD     HL,SP
push de          ; push de          | 040CEF 040CE7 || 040CEF D5          2710     PUSH    DE
ld e,c           ; ld e,c           | 040CF0 040CE8 || 040CF0 59          2711     LD      E,C
call $041636     ; call $041604     | 040CF1 040CE9 || 040CF1 CD 36 16 04 2712     CALL    STORES
pop de           ; pop de           | 040CF5 040CED || 040CF5 D1          2713     POP     DE
ld sp,hl         ; ld sp,hl         | 040CF6 040CEE || 040CF6 F9          2714     LD      SP,HL
jr $-$46         ; jr $-$46         | 040CF7 040CEF || 040CF7 18 B8       2715     JR      FNEND5
call $043a72     ; call $043a3a     | 040CF9 040CF1 || 040CF9 CD 72 3A 04 2720  DIM_EX:   CALL    GETVAR           ; Get the variable
jp c,$040d89     ; jp c,$040d81     | 040CFD 040CF5 || 040CFD DA 89 0D 04 2721     JP      C,BADDIM  ; Throw a "Bad Dim" error
jp z,$040d93     ; jp z,$040d8b     | 040D01 040CF9 || 040D01 CA 93 0D 04 2722     JP      Z,DIM4   ; If Z then the command is DIM var% expr, so don't need to create an entity
call $043be6     ; call $043bae     | 040D05 040CFD || 040D05 CD E6 3B 04 2723     CALL    CREATE   ; Create a new entity
push hl          ; push hl          | 040D09 040D01 || 040D09 E5          2724     PUSH    HL   ; HL: Address of the entity
pop ix           ; pop ix           | 040D0A 040D02 || 040D0A DD E1       2725     POP     IX   ; IX: Address of the entity
ld a,(iy)        ; ld a,(iy)        | 040D0C 040D04 || 040D0C FD 7E 00    2726     LD      A,(IY)   ; Fetch the next character from the tokenised string
cp $28           ; cp $28           | 040D0F 040D07 || 040D0F FE 28       2727     CP      '('   ; Check for opening brackets
ld a,d           ; ld a,d           | 040D11 040D09 || 040D11 7A          2728     LD      A,D   ;  A: The dimension variable type (04h = Integer, 05h = Float, 81h = String)
jr nz,$+$81      ; jr nz,$+$81      | 040D12 040D0A || 040D12 20 7F       2729     JR      NZ,DIM4   ; It is not a bracket; the command is DIM var expr
push hl          ; push hl          | 040D14 040D0C || 040D14 E5          2733     PUSH    HL   ; HL: Address of the entity
push af          ; push af          | 040D15 040D0D || 040D15 F5          2734     PUSH    AF                ;  A: Entity type (04h = Integer, 05h = Float, 81h = String)
ld de,$000001    ; ld de,$000001    | 040D16 040D0E || 040D16 11 01 00 00 2735     LD      DE,1   ; DE: Total size of array accumulator (important for multi-dimensioned arrays)
ld b,d           ; ld b,d           | 040D1A 040D12 || 040D1A 42          2736     LD      B,D   ;  B: The number of dimensions in the array
inc iy           ; inc iy           | 040D1B 040D13 || 040D1B FD 23       2738  DIM1:   INC     IY   ; Skip to the next token
push bc          ; push bc          | 040D1D 040D15 || 040D1D C5          2739     PUSH    BC   ; Stack the dimension counter
push de          ; push de          | 040D1E 040D16 || 040D1E D5          2740     PUSH    DE   ; Stack the total size of array accumulator
push ix          ; push ix          | 040D1F 040D17 || 040D1F DD E5       2741     PUSH    IX   ; Stack the entity address
call $04030f     ; call $04030a     | 040D21 040D19 || 040D21 CD 0F 03 04 2742     CALL    EXPRI            ; Fetch the size of this dimension
bit 7,h          ; bit 7,h          | 040D25 040D1D || 040D25 CB 7C       2743     BIT     7,H   ; If it is negative then
jr nz,$+$62      ; jr nz,$+$62      | 040D27 040D1F || 040D27 20 60       2744     JR      NZ,BADDIM  ; Throw a "Bad Dim" error
exx              ; exx              | 040D29 040D21 || 040D29 D9          2745     EXX
inc hl           ; inc hl           | 040D2A 040D22 || 040D2A 23          2746     INC     HL   ; HL: Size of this dimension; increment (BBC BASIC DIMs are always one bigger)
pop ix           ; pop ix           | 040D2B 040D23 || 040D2B DD E1       2747     POP     IX   ; IX: The entity address
inc ix           ; inc ix           | 040D2D 040D25 || 040D2D DD 23       2748     INC     IX
ld (ix),l        ; ld (ix),l        | 040D2F 040D27 || 040D2F DD 75 00    2749     LD      (IX),L           ; Save the size of this dimension in the entity
inc ix           ; inc ix           | 040D32 040D2A || 040D32 DD 23       2750     INC     IX
ld (ix),h        ; ld (ix),h        | 040D34 040D2C || 040D34 DD 74 00    2751     LD      (IX),H
pop bc           ; pop bc           | 040D37 040D2F || 040D37 C1          2752     POP     BC
call $0418a4     ; call $041872     | 040D38 040D30 || 040D38 CD A4 18 04 2753     CALL    MUL16            ; HL = HL * BC (Number of Dimensions * Total size of array accumulator)
jr c,$+$51       ; jr c,$+$51       | 040D3C 040D34 || 040D3C 38 4F       2754     JR      C,NOROOM         ; Throw a "No Room" error if overflow
ex de,hl         ; ex de,hl         | 040D3E 040D36 || 040D3E EB          2755     EX      DE,HL            ; DE: The new total size of array accumulator
pop bc           ; pop bc           | 040D3F 040D37 || 040D3F C1          2756     POP     BC
inc b            ; inc b            | 040D40 040D38 || 040D40 04          2757     INC     B                ;  B: The dimension counter; increment
ld a,(iy)        ; ld a,(iy)        | 040D41 040D39 || 040D41 FD 7E 00    2758     LD      A,(IY)   ; Fetch the nex token
cp $2c           ; cp $2c           | 040D44 040D3C || 040D44 FE 2C       2759     CP      ','              ; Check for another dimension in the array
jr z,$-$2b       ; jr z,$-$2b       | 040D46 040D3E || 040D46 28 D3       2760     JR      Z,DIM1   ; And loop
call $040a37     ; call $040a2f     | 040D48 040D40 || 040D48 CD 37 0A 04 2762     CALL    BRAKET           ; Check for closing bracket
pop af           ; pop af           | 040D4C 040D44 || 040D4C F1          2763     POP     AF               ; Restore the type
inc ix           ; inc ix           | 040D4D 040D45 || 040D4D DD 23       2764     INC     IX
ex (sp),ix       ; ex (sp),ix       | 040D4F 040D47 || 040D4F DD E3       2765     EX      (SP),IX
ld (ix),b        ; ld (ix),b        | 040D51 040D49 || 040D51 DD 70 00    2766     LD      (IX),B           ; Number of dimensions
call $041897     ; call $041865     | 040D54 040D4C || 040D54 CD 97 18 04 2767     CALL    X4OR5            ; Dimension Accumulator Value * 4 or * 5 depending on type
pop hl           ; pop hl           | 040D58 040D50 || 040D58 E1          2768     POP     HL   ; Restore the entity address
jr c,$+$34       ; jr c,$+$34       | 040D59 040D51 || 040D59 38 32       2769     JR      C,NOROOM  ; Throw a "No Room" error if there is an overflow
add hl,de        ; add hl,de        | 040D5B 040D53 || 040D5B 19          2773  DIM3:   ADD     HL,DE
jr c,$+$31       ; jr c,$+$31       | 040D5C 040D54 || 040D5C 38 2F       2774     JR      C,NOROOM
push hl          ; push hl          | 040D5E 040D56 || 040D5E E5          2775     PUSH    HL
inc h            ; inc h            | 040D5F 040D57 || 040D5F 24          2776     INC     H
jr z,$+$2d       ; jr z,$+$2d       | 040D60 040D58 || 040D60 28 2B       2777     JR      Z,NOROOM
sbc hl,sp        ; sbc hl,sp        | 040D62 040D5A || 040D62 ED 72       2778     SBC     HL,SP
jr nc,$+$29      ; jr nc,$+$29      | 040D64 040D5C || 040D64 30 27       2779     JR      NC,NOROOM        ; Throw an "Out of Space" error
pop hl           ; pop hl           | 040D66 040D5E || 040D66 E1          2780     POP     HL
ld ($044d1d),hl  ; ld ($044d1d),hl  | 040D67 040D5F || 040D67 22 1D 4D 04 2781     LD      (FREE),HL
ld a,d           ; ld a,d           | 040D6B 040D63 || 040D6B 7A          2782  DIM2:   LD      A,D
or e             ; or e             | 040D6C 040D64 || 040D6C B3          2783     OR      E
jr z,$+$08       ; jr z,$+$08       | 040D6D 040D65 || 040D6D 28 06       2784     JR      Z,DIM5
dec hl           ; dec hl           | 040D6F 040D67 || 040D6F 2B          2785     DEC     HL
ld (hl),$00      ; ld (hl),$00      | 040D70 040D68 || 040D70 36 00       2786     LD      (HL),0           ; Initialise the array
dec de           ; dec de           | 040D72 040D6A || 040D72 1B          2787     DEC     DE
jr $-$08         ; jr $-$08         | 040D73 040D6B || 040D73 18 F6       2788     JR      DIM2
call $040a78     ; call $040a70     | 040D75 040D6D || 040D75 CD 78 0A 04 2789  DIM5:   CALL    NXT
cp $2c           ; cp $2c           | 040D79 040D71 || 040D79 FE 2C       2790     CP      ','              ; Another variable?
jp nz,$040b9e    ; jp nz,$040b96    | 040D7B 040D73 || 040D7B C2 9E 0B 04 2791     JP      NZ,XEQ
inc iy           ; inc iy           | 040D7F 040D77 || 040D7F FD 23       2792     INC     IY
call $040a78     ; call $040a70     | 040D81 040D79 || 040D81 CD 78 0A 04 2793     CALL    NXT
jp $040cf9       ; jp $040cf1       | 040D85 040D7D || 040D85 C3 F9 0C 04 2794     JP      DIM_EX
ld a,$0a         ; ld a,$0a         | 040D89 040D81 || 040D89 3E 0A       2798  BADDIM:   LD      A,10             ; Throw a "Bad DIM" error
jr $+$04         ; jr $+$04         | 040D8B 040D83 || 040D8B 18 02       2799     JR ERROR1_EX
ld a,$0b         ; ld a,$0b         | 040D8D 040D85 || 040D8D 3E 0B       2800  NOROOM:   LD      A,11             ; Throw a "DIM space" error
jp $043798       ; jp $043760       | 040D8F 040D87 || 040D8F C3 98 37 04 2801  ERROR1_EX:   JP      ERROR_
or a             ; or a             | 040D93 040D8B || 040D93 B7          2806  DIM4:   OR      A   ;  A: The dimension variable type
jr z,$-$0b       ; jr z,$-$0b       | 040D94 040D8C || 040D94 28 F3       2807     JR      Z,BADDIM  ; Throw "Bad Dim" if variable is an 8-bit indirection
jp m,$040d89     ; jp m,$040d81     | 040D96 040D8E || 040D96 FA 89 0D 04 2808     JP      M,BADDIM         ; or a string
ld b,a           ; ld b,a           | 040D9A 040D92 || 040D9A 47          2809     LD      B,A   ; Temporarily store the dimension variable type in B
ld a,(iy-$01)    ; ld a,(iy-$01)    | 040D9B 040D93 || 040D9B FD 7E FF    2810     LD      A,(IY-1)  ; Get the last character but one
cp $29           ; cp $29           | 040D9E 040D96 || 040D9E FE 29       2811     CP      ')'   ; Check if it is a trailing bracket
jr z,$-$17       ; jr z,$-$17       | 040DA0 040D98 || 040DA0 28 E7       2812     JR      Z,BADDIM  ; And throw a "Bad Dim" error if there is a trailing bracket
ld hl,$000000    ; ld hl,$000000    | 040DA2 040D9A || 040DA2 21 00 00 00 2814     LD HL,0   ; Clear HL
ld a,($044d1d)   ; ld a,($044d1d)   | 040DA6 040D9E || 040DA6 3A 1D 4D 04 2815     LD A,(FREE+0)  ; HL: Lower 16 bits of FREE
ld l,a           ; ld l,a           | 040DAA 040DA2 || 040DAA 6F          2816     LD L,A
ld a,($044d1e)   ; ld a,($044d1e)   | 040DAB 040DA3 || 040DAB 3A 1E 4D 04 2817     LD A,(FREE+1)
ld h,a           ; ld h,a           | 040DAF 040DA7 || 040DAF 67          2818     LD H,A
ld a,b           ; ld a,b           | 040DB0 040DA8 || 040DB0 78          2819     LD A,B   ; Restore the dimension variable type
exx              ; exx              | 040DB1 040DA9 || 040DB1 D9          2820     EXX
ld hl,$000000    ; ld hl,$000000    | 040DB2 040DAA || 040DB2 21 00 00 00 2821     LD HL,0   ; Clear HL
ld b,a           ; ld b,a           | 040DB6 040DAE || 040DB6 47          2822     LD B,A   ; Temporarily store the dimension variable type in B
ld a,($044d1f)   ; ld a,($044d1f)   | 040DB7 040DAF || 040DB7 3A 1F 4D 04 2823     LD A,(FREE+2)  ; HL: Upper 8 bits of FREE (bits 16-23)
ld l,a           ; ld l,a           | 040DBB 040DB3 || 040DBB 6F          2824     LD L,A
ld a,b           ; ld a,b           | 040DBC 040DB4 || 040DBC 78          2825     LD A,B   ; Restore the dimension variable type
ld c,h           ; ld c,h           | 040DBD 040DB5 || 040DBD 4C          2826     LD C,H
call $041608     ; call $0415d6     | 040DBE 040DB6 || 040DBE CD 08 16 04 2827     CALL    STORE            ; Store the address
call $04030f     ; call $04030a     | 040DC2 040DBA || 040DC2 CD 0F 03 04 2828     CALL    EXPRI   ; Get the number of bytes to store
exx              ; exx              | 040DC6 040DBE || 040DC6 D9          2829     EXX
inc hl           ; inc hl           | 040DC7 040DBF || 040DC7 23          2830     INC     HL   ; Add one to it
ex de,hl         ; ex de,hl         | 040DC8 040DC0 || 040DC8 EB          2831     EX      DE,HL
ld hl,($044d1d)  ; ld hl,($044d1d)  | 040DC9 040DC1 || 040DC9 2A 1D 4D 04 2832     LD      HL,(FREE)
jr $-$72         ; jr $-$72         | 040DCD 040DC5 || 040DCD 18 8C       2833     JR      DIM3   ; Continue with the DIM
cp $23           ; cp $23           | 040DCF 040DC7 || 040DCF FE 23       2838  PRINT_:   CP      '#'
jr nz,$+$7e      ; jr nz,$+$7e      | 040DD1 040DC9 || 040DD1 20 7C       2839     JR      NZ,PRINT0
call $0418c4     ; call $041892     | 040DD3 040DCB || 040DD3 CD C4 18 04 2840     CALL    CHNL            ;CHANNEL NO. = E
call $040a78     ; call $040a70     | 040DD7 040DCF || 040DD7 CD 78 0A 04 2841  PRNTN1:   CALL    NXT
cp $2c           ; cp $2c           | 040DDB 040DD3 || 040DDB FE 2C       2842     CP      ','
jp nz,$040b9e    ; jp nz,$040b96    | 040DDD 040DD5 || 040DDD C2 9E 0B 04 2843     JP      NZ,XEQ
inc iy           ; inc iy           | 040DE1 040DD9 || 040DE1 FD 23       2844     INC     IY
push de          ; push de          | 040DE3 040DDB || 040DE3 D5          2845     PUSH    DE
call $0401c7     ; call $0401c7     | 040DE4 040DDC || 040DE4 CD C7 01 04 2846     CALL    EXPR            ;ITEM TO PRINT
ex af,af'        ; ex af,af'        | 040DE8 040DE0 || 040DE8 08          2847     EX      AF,AF'
jp m,$040e0f     ; jp m,$040e07     | 040DE9 040DE1 || 040DE9 FA 0F 0E 04 2848     JP      M,PRNTN2        ;STRING
pop de           ; pop de           | 040DED 040DE5 || 040DED D1          2849     POP     DE
push bc          ; push bc          | 040DEE 040DE6 || 040DEE C5          2850     PUSH    BC
exx              ; exx              | 040DEF 040DE7 || 040DEF D9          2851     EXX
ld a,l           ; ld a,l           | 040DF0 040DE8 || 040DF0 7D          2852     LD      A,L
exx              ; exx              | 040DF1 040DE9 || 040DF1 D9          2853     EXX
call $044384     ; call $04433b     | 040DF2 040DEA || 040DF2 CD 84 43 04 2854     CALL    OSBPUT
exx              ; exx              | 040DF6 040DEE || 040DF6 D9          2855     EXX
ld a,h           ; ld a,h           | 040DF7 040DEF || 040DF7 7C          2856     LD      A,H
exx              ; exx              | 040DF8 040DF0 || 040DF8 D9          2857     EXX
call $044384     ; call $04433b     | 040DF9 040DF1 || 040DF9 CD 84 43 04 2858     CALL    OSBPUT
ld a,l           ; ld a,l           | 040DFD 040DF5 || 040DFD 7D          2859     LD      A,L
call $044384     ; call $04433b     | 040DFE 040DF6 || 040DFE CD 84 43 04 2860     CALL    OSBPUT
ld a,h           ; ld a,h           | 040E02 040DFA || 040E02 7C          2861     LD      A,H
call $044384     ; call $04433b     | 040E03 040DFB || 040E03 CD 84 43 04 2862     CALL    OSBPUT
pop bc           ; pop bc           | 040E07 040DFF || 040E07 C1          2863     POP     BC
ld a,c           ; ld a,c           | 040E08 040E00 || 040E08 79          2864     LD      A,C
call $044384     ; call $04433b     | 040E09 040E01 || 040E09 CD 84 43 04 2865     CALL    OSBPUT
jr $-$36         ; jr $-$36         | 040E0D 040E05 || 040E0D 18 C8       2866     JR      PRNTN1
ld c,e           ; ld c,e           | 040E0F 040E07 || 040E0F 4B          2867  PRNTN2:   LD      C,E
pop de           ; pop de           | 040E10 040E08 || 040E10 D1          2868     POP     DE
ld hl,$044a00    ; ld hl,$044a00    | 040E11 040E09 || 040E11 21 00 4A 04 2869     LD      HL,ACCS
inc c            ; inc c            | 040E15 040E0D || 040E15 0C          2870     INC     C
dec c            ; dec c            | 040E16 040E0E || 040E16 0D          2871  PRNTN3:   DEC     C
jr z,$+$0c       ; jr z,$+$0c       | 040E17 040E0F || 040E17 28 0A       2872     JR      Z,PRNTN4
ld a,(hl)        ; ld a,(hl)        | 040E19 040E11 || 040E19 7E          2873     LD      A,(HL)
inc hl           ; inc hl           | 040E1A 040E12 || 040E1A 23          2874     INC     HL
push bc          ; push bc          | 040E1B 040E13 || 040E1B C5          2875     PUSH    BC
call $044384     ; call $04433b     | 040E1C 040E14 || 040E1C CD 84 43 04 2876     CALL    OSBPUT
pop bc           ; pop bc           | 040E20 040E18 || 040E20 C1          2877     POP     BC
jr $-$0b         ; jr $-$0b         | 040E21 040E19 || 040E21 18 F3       2878     JR      PRNTN3
ld a,$0d         ; ld a,$0d         | 040E23 040E1B || 040E23 3E 0D       2879  PRNTN4:   LD      A,CR
call $044384     ; call $04433b     | 040E25 040E1D || 040E25 CD 84 43 04 2880     CALL    OSBPUT
jr $-$52         ; jr $-$52         | 040E29 040E21 || 040E29 18 AC       2881     JR      PRNTN1
ld b,$02         ; ld b,$02         | 040E2B 040E23 || 040E2B 06 02       2883  PRINT6:   LD      B,2
jr $+$29         ; jr $+$29         | 040E2D 040E25 || 040E2D 18 27       2884     JR      PRINTC
ld bc,$000100    ; ld bc,$000100    | 040E2F 040E27 || 040E2F 01 00 01 00 2885  PRINT8:   LD      BC,100H
jr $+$23         ; jr $+$23         | 040E33 040E2B || 040E33 18 21       2886     JR      PRINTC
ld hl,$044c00    ; ld hl,$044c00    | 040E35 040E2D || 040E35 21 00 4C 04 2887  PRINT9:   LD      HL,STAVAR
xor a            ; xor a            | 040E39 040E31 || 040E39 AF          2888     XOR     A
cp (hl)          ; cp (hl)          | 040E3A 040E32 || 040E3A BE          2889     CP      (HL)
jr z,$+$14       ; jr z,$+$14       | 040E3B 040E33 || 040E3B 28 12       2890     JR      Z,PRINT0
ld a,($044d3d)   ; ld a,($044d3d)   | 040E3D 040E35 || 040E3D 3A 3D 4D 04 2891     LD      A,(COUNT)
or a             ; or a             | 040E41 040E39 || 040E41 B7          2892     OR      A
jr z,$+$0d       ; jr z,$+$0d       | 040E42 040E3A || 040E42 28 0B       2893     JR      Z,PRINT0
sub (hl)         ; sub (hl)         | 040E44 040E3C || 040E44 96          2894  PRINTA:   SUB     (HL)
jr z,$+$0a       ; jr z,$+$0a       | 040E45 040E3D || 040E45 28 08       2895     JR      Z,PRINT0
jr nc,$-$03      ; jr nc,$-$03      | 040E47 040E3F || 040E47 30 FB       2896     JR      NC,PRINTA
neg              ; neg              | 040E49 040E41 || 040E49 ED 44       2897     NEG
call $041821     ; call $0417ef     | 040E4B 040E43 || 040E4B CD 21 18 04 2898     CALL    FILL
ld a,($044c00)   ; ld a,($044c00)   | 040E4F 040E47 || 040E4F 3A 00 4C 04 2899  PRINT0:   LD      A,(STAVAR)
ld c,a           ; ld c,a           | 040E53 040E4B || 040E53 4F          2900     LD      C,A             ;PRINTS
ld b,$00         ; ld b,$00         | 040E54 040E4C || 040E54 06 00       2901     LD      B,0             ;PRINTF
call $0417ac     ; call $04177a     | 040E56 040E4E || 040E56 CD AC 17 04 2902  PRINTC:   CALL    TERMQ
jr z,$+$41       ; jr z,$+$41       | 040E5A 040E52 || 040E5A 28 3F       2903     JR      Z,PRINT4
res 0,b          ; res 0,b          | 040E5C 040E54 || 040E5C CB 80       2904     RES     0,B
inc iy           ; inc iy           | 040E5E 040E56 || 040E5E FD 23       2905     INC     IY
cp $7e           ; cp $7e           | 040E60 040E58 || 040E60 FE 7E       2906     CP      '~'
jr z,$-$37       ; jr z,$-$37       | 040E62 040E5A || 040E62 28 C7       2907     JR      Z,PRINT6
cp $3b           ; cp $3b           | 040E64 040E5C || 040E64 FE 3B       2908     CP      ';'
jr z,$-$37       ; jr z,$-$37       | 040E66 040E5E || 040E66 28 C7       2909     JR      Z,PRINT8
cp $2c           ; cp $2c           | 040E68 040E60 || 040E68 FE 2C       2910     CP      ','
jr z,$-$35       ; jr z,$-$35       | 040E6A 040E62 || 040E6A 28 C9       2911     JR      Z,PRINT9
call $0417d1     ; call $04179f     | 040E6C 040E64 || 040E6C CD D1 17 04 2912     CALL    FORMAT          ;SPC, TAB, '
jr z,$-$1a       ; jr z,$-$1a       | 040E70 040E68 || 040E70 28 E4       2913     JR      Z,PRINTC
dec iy           ; dec iy           | 040E72 040E6A || 040E72 FD 2B       2914     DEC     IY
push bc          ; push bc          | 040E74 040E6C || 040E74 C5          2915     PUSH    BC
call $0401c7     ; call $0401c7     | 040E75 040E6D || 040E75 CD C7 01 04 2916     CALL    EXPR            ;VARIABLE TYPE
ex af,af'        ; ex af,af'        | 040E79 040E71 || 040E79 08          2917     EX      AF,AF'
jp m,$040e94     ; jp m,$040e8c     | 040E7A 040E72 || 040E7A FA 94 0E 04 2918     JP      M,PRINT3        ;STRING
pop de           ; pop de           | 040E7E 040E76 || 040E7E D1          2919     POP     DE
push de          ; push de          | 040E7F 040E77 || 040E7F D5          2920     PUSH    DE
bit 1,d          ; bit 1,d          | 040E80 040E78 || 040E80 CB 4A       2921     BIT     1,D
push af          ; push af          | 040E82 040E7A || 040E82 F5          2922     PUSH    AF
call z,$04096b   ; call z,$040966   | 040E83 040E7B || 040E83 CC 6B 09 04 2923     CALL    Z,STR           ;DECIMAL
pop af           ; pop af           | 040E87 040E7F || 040E87 F1          2924     POP     AF
call nz,$04091f  ; call nz,$04091a  | 040E88 040E80 || 040E88 C4 1F 09 04 2925     CALL    NZ,HEXSTR       ;HEX
pop bc           ; pop bc           | 040E8C 040E84 || 040E8C C1          2926     POP     BC
push bc          ; push bc          | 040E8D 040E85 || 040E8D C5          2927     PUSH    BC
ld a,c           ; ld a,c           | 040E8E 040E86 || 040E8E 79          2928     LD      A,C
sub e            ; sub e            | 040E8F 040E87 || 040E8F 93          2929     SUB     E
call nc,$041821  ; call nc,$0417ef  | 040E90 040E88 || 040E90 D4 21 18 04 2930     CALL    NC,FILL         ;RIGHT JUSTIFY
pop bc           ; pop bc           | 040E94 040E8C || 040E94 C1          2931  PRINT3:   POP     BC
call $041830     ; call $0417fe     | 040E95 040E8D || 040E95 CD 30 18 04 2932     CALL    PTEXT           ;PRINT
jr $-$43         ; jr $-$43         | 040E99 040E91 || 040E99 18 BB       2933     JR      PRINTC
bit 0,b          ; bit 0,b          | 040E9B 040E93 || 040E9B CB 40       2934  PRINT4:   BIT     0,B
call z,$04397f   ; call z,$043947   | 040E9D 040E95 || 040E9D CC 7F 39 04 2935     CALL    Z,CRLF
jp $040b9e       ; jp $040b96       | 040EA1 040E99 || 040EA1 C3 9E 0B 04 2936     JP      XEQ
inc iy           ; inc iy           | 040EA5 040E9D || 040EA5 FD 23       2941  ONERR:   INC     IY              ;SKIP "ERROR"
ld hl,$000000    ; ld hl,$000000    | 040EA7 040E9F || 040EA7 21 00 00 00 2942     LD      HL,0
ld ($044d2c),hl  ; ld ($044d2c),hl  | 040EAB 040EA3 || 040EAB 22 2C 4D 04 2943     LD      (ERRTRP),HL
call $040a78     ; call $040a70     | 040EAF 040EA7 || 040EAF CD 78 0A 04 2944     CALL    NXT
cp $87           ; cp $87           | 040EB3 040EAB || 040EB3 FE 87       2945     CP      OFF_
inc iy           ; inc iy           | 040EB5 040EAD || 040EB5 FD 23       2946     INC     IY
jp z,$040b9e     ; jp z,$040b96     | 040EB7 040EAF || 040EB7 CA 9E 0B 04 2947     JP      Z,XEQ
dec iy           ; dec iy           | 040EBB 040EB3 || 040EBB FD 2B       2948     DEC     IY
ld ($044d2c),iy  ; ld ($044d2c),iy  | 040EBD 040EB5 || 040EBD FD 22 2C 4D 2949     LD      (ERRTRP),IY
jp $040c33       ; jp $040c2b       | 040EC2 040EBA || 040EC2 C3 33 0C 04 2950     JP      REM_EX
cp $85           ; cp $85           | 040EC6 040EBE || 040EC6 FE 85       2958  ON_EX_:   CP      TERROR_EX
jr z,$-$23       ; jr z,$-$23       | 040EC8 040EC0 || 040EC8 28 DB       2959     JR      Z,ONERR         ;"ON ERROR"
call $04030f     ; call $04030a     | 040ECA 040EC2 || 040ECA CD 0F 03 04 2960     CALL    EXPRI
ld a,(iy)        ; ld a,(iy)        | 040ECE 040EC6 || 040ECE FD 7E 00    2961     LD      A,(IY)
inc iy           ; inc iy           | 040ED1 040EC9 || 040ED1 FD 23       2962     INC     IY
ld e,$2c         ; ld e,$2c         | 040ED3 040ECB || 040ED3 1E 2C       2963     LD      E,','           ;SEPARATOR
cp $e5           ; cp $e5           | 040ED5 040ECD || 040ED5 FE E5       2964     CP      TGOTO
jr z,$+$0d       ; jr z,$+$0d       | 040ED7 040ECF || 040ED7 28 0B       2965     JR      Z,ON1
cp $e4           ; cp $e4           | 040ED9 040ED1 || 040ED9 FE E4       2966     CP      TGOSUB
jr z,$+$09       ; jr z,$+$09       | 040EDB 040ED3 || 040EDB 28 07       2967     JR      Z,ON1
ld e,$f2         ; ld e,$f2         | 040EDD 040ED5 || 040EDD 1E F2       2968     LD      E,TPROC
cp e             ; cp e             | 040EDF 040ED7 || 040EDF BB          2969     CP      E
ld a,$27         ; ld a,$27         | 040EE0 040ED8 || 040EE0 3E 27       2970     LD      A,39
jr nz,$+$47      ; jr nz,$+$47      | 040EE2 040EDA || 040EE2 20 45       2971     JR      NZ,ERROR2_EX       ;"ON syntax"
ld d,a           ; ld d,a           | 040EE4 040EDC || 040EE4 57          2972  ON1:   LD      D,A
exx              ; exx              | 040EE5 040EDD || 040EE5 D9          2973     EXX
push hl          ; push hl          | 040EE6 040EDE || 040EE6 E5          2974     PUSH    HL
exx              ; exx              | 040EE7 040EDF || 040EE7 D9          2975     EXX
pop bc           ; pop bc           | 040EE8 040EE0 || 040EE8 C1          2976     POP     BC              ;ON INDEX
ld a,b           ; ld a,b           | 040EE9 040EE1 || 040EE9 78          2977     LD      A,B
or h             ; or h             | 040EEA 040EE2 || 040EEA B4          2978     OR      H
or l             ; or l             | 040EEB 040EE3 || 040EEB B5          2979     OR      L
jr nz,$+$2c      ; jr nz,$+$2c      | 040EEC 040EE4 || 040EEC 20 2A       2980     JR      NZ,ON4          ;OUT OF RANGE
or c             ; or c             | 040EEE 040EE6 || 040EEE B1          2981     OR      C
jr z,$+$29       ; jr z,$+$29       | 040EEF 040EE7 || 040EEF 28 27       2982     JR      Z,ON4
dec c            ; dec c            | 040EF1 040EE9 || 040EF1 0D          2983     DEC     C
jr z,$+$10       ; jr z,$+$10       | 040EF2 040EEA || 040EF2 28 0E       2984     JR      Z,ON3           ;INDEX=1
call $0417ac     ; call $04177a     | 040EF4 040EEC || 040EF4 CD AC 17 04 2985  ON2:   CALL    TERMQ
jr z,$+$20       ; jr z,$+$20       | 040EF8 040EF0 || 040EF8 28 1E       2986     JR      Z,ON4           ;OUT OF RANGE
inc iy           ; inc iy           | 040EFA 040EF2 || 040EFA FD 23       2987     INC     IY              ;SKIP DELIMITER
cp e             ; cp e             | 040EFC 040EF4 || 040EFC BB          2988     CP      E
jr nz,$-$09      ; jr nz,$-$09      | 040EFD 040EF5 || 040EFD 20 F5       2989     JR      NZ,ON2
dec c            ; dec c            | 040EFF 040EF7 || 040EFF 0D          2990     DEC     C
jr nz,$-$0c      ; jr nz,$-$0c      | 040F00 040EF8 || 040F00 20 F2       2991     JR      NZ,ON2
ld a,e           ; ld a,e           | 040F02 040EFA || 040F02 7B          2992  ON3:   LD      A,E
cp $f2           ; cp $f2           | 040F03 040EFB || 040F03 FE F2       2993     CP      TPROC
jr z,$+$28       ; jr z,$+$28       | 040F05 040EFD || 040F05 28 26       2994     JR      Z,ONPROC
push de          ; push de          | 040F07 040EFF || 040F07 D5          2995     PUSH    DE
call $04032a     ; call $040325     | 040F08 040F00 || 040F08 CD 2A 03 04 2996     CALL    ITEMI           ;LINE NUMBER
pop de           ; pop de           | 040F0C 040F04 || 040F0C D1          2997     POP     DE
ld a,d           ; ld a,d           | 040F0D 040F05 || 040F0D 7A          2998     LD      A,D
cp $e5           ; cp $e5           | 040F0E 040F06 || 040F0E FE E5       2999     CP      TGOTO
jr z,$+$2f       ; jr z,$+$2f       | 040F10 040F08 || 040F10 28 2D       3000     JR      Z,GOTO2
call $0417b9     ; call $041787     | 040F12 040F0A || 040F12 CD B9 17 04 3001     CALL    SPAN            ;SKIP REST OF LIST
jr $+$3d         ; jr $+$3d         | 040F16 040F0E || 040F16 18 3B       3002     JR      GOSUB1
ld a,(iy)        ; ld a,(iy)        | 040F18 040F10 || 040F18 FD 7E 00    3004  ON4:   LD      A,(IY)
inc iy           ; inc iy           | 040F1B 040F13 || 040F1B FD 23       3005     INC     IY
cp $8b           ; cp $8b           | 040F1D 040F15 || 040F1D FE 8B       3006     CP      ELSE_EX_
jp z,$041353     ; jp z,$04134b     | 040F1F 040F17 || 040F1F CA 53 13 04 3007     JP      Z,IF1           ;ELSE CLAUSE
cp $0d           ; cp $0d           | 040F23 040F1B || 040F23 FE 0D       3008     CP      CR
jr nz,$-$0d      ; jr nz,$-$0d      | 040F25 040F1D || 040F25 20 F1       3009     JR      NZ,ON4
ld a,$28         ; ld a,$28         | 040F27 040F1F || 040F27 3E 28       3010     LD      A,40
jp $043798       ; jp $043760       | 040F29 040F21 || 040F29 C3 98 37 04 3011  ERROR2_EX:   JP      ERROR_           ;"ON range"
ld a,$ee         ; ld a,$ee         | 040F2D 040F25 || 040F2D 3E EE       3013  ONPROC:   LD      A,TON
jp $04108c       ; jp $041084       | 040F2F 040F27 || 040F2F C3 8C 10 04 3014     JP      PROC_EX
call $04032a     ; call $040325     | 040F33 040F2B || 040F33 CD 2A 03 04 3018  GOTO_EX:   CALL    ITEMI            ; Fetch the line number
call $0417ac     ; call $04177a     | 040F37 040F2F || 040F37 CD AC 17 04 3019  GOTO1:   CALL    TERMQ   ; Check for terminator
jp nz,$040c9f    ; jp nz,$040c97    | 040F3B 040F33 || 040F3B C2 9F 0C 04 3020     JP      NZ,SYNTAX  ; Throw a "Syntax Error" if not found
exx              ; exx              | 040F3F 040F37 || 040F3F D9          3021  GOTO2:   EXX
call $0439c7     ; call $04398f     | 040F40 040F38 || 040F40 CD C7 39 04 3022     CALL    FINDL   ; HL: Line number - Find the line
push hl          ; push hl          | 040F44 040F3C || 040F44 E5          3023     PUSH    HL   ; HL: Address of the line
pop iy           ; pop iy           | 040F45 040F3D || 040F45 FD E1       3024     POP     IY   ; IY = HL
jp z,$040b9a     ; jp z,$040b92     | 040F47 040F3F || 040F47 CA 9A 0B 04 3025     JP      Z,XEQ0   ; If the line is found, then continue execution at that point
ld a,$29         ; ld a,$29         | 040F4B 040F43 || 040F4B 3E 29       3026     LD      A,41   ; Otherwise throw a "No such line" error
jr $-$24         ; jr $-$24         | 040F4D 040F45 || 040F4D 18 DA       3027     JR      ERROR2_EX
call $04032a     ; call $040325     | 040F4F 040F47 || 040F4F CD 2A 03 04 3034  GOSUB_EX:   CALL    ITEMI   ; Fetch the line number
push iy          ; push iy          | 040F53 040F4B || 040F53 FD E5       3035  GOSUB1:   PUSH    IY               ; Push the current execution address onto the execution stack
call $041681     ; call $04164f     | 040F55 040F4D || 040F55 CD 81 16 04 3036     CALL    CHECK            ; Check there is enough room
call $040f37     ; call $040f2f     | 040F59 040F51 || 040F59 CD 37 0F 04 3037     CALL    GOTO1            ; Push the marker (address of GOSCHK) onto the execution stack and GOTO the line number
pop de           ; pop de           | 040F5D 040F55 || 040F5D D1          3045  RETURN:   POP     DE   ; Pop the marker off the execution stack
ld hl,$040f5d    ; ld hl,$040f55    | 040F5E 040F56 || 040F5E 21 5D 0F 04 3046     LD      HL,GOSCHK  ; Compare with GOSCHK
or a             ; or a             | 040F62 040F5A || 040F62 B7          3047     OR      A
sbc hl,de        ; sbc hl,de        | 040F63 040F5B || 040F63 ED 52       3048     SBC     HL,DE
pop iy           ; pop iy           | 040F65 040F5D || 040F65 FD E1       3049     POP     IY   ; Pop the return address off the execution stack
jp z,$040b9e     ; jp z,$040b96     | 040F67 040F5F || 040F67 CA 9E 0B 04 3050     JP      Z,XEQ   ; Provided this has been called by a GOSUB then continue execution at the return address
ld a,$26         ; ld a,$26         | 040F6B 040F63 || 040F6B 3E 26       3051     LD      A,38   ; Otherwise throw a "No GOSUB" error
jr $-$44         ; jr $-$44         | 040F6D 040F65 || 040F6D 18 BA       3052     JR      ERROR2_EX
push iy          ; push iy          | 040F6F 040F67 || 040F6F FD E5       3059  REPEAT_EX:   PUSH    IY   ; Push the current execution address onto the execution stack
call $041681     ; call $04164f     | 040F71 040F69 || 040F71 CD 81 16 04 3060     CALL    CHECK   ; Check if there is enough room
call $040b9e     ; call $040b96     | 040F75 040F6D || 040F75 CD 9E 0B 04 3061     CALL    XEQ   ; Push the marker (address of REPCHK) onto the execution stack and continue execution
pop bc           ; pop bc           | 040F79 040F71 || 040F79 C1          3070  UNTIL_EX:   POP     BC   ; Fetch the marker
push bc          ; push bc          | 040F7A 040F72 || 040F7A C5          3071     PUSH    BC   ; And push it back onto the execution stack
ld hl,$040f79    ; ld hl,$040f71    | 040F7B 040F73 || 040F7B 21 79 0F 04 3072     LD      HL,REPCHK  ; Compare with REPCHK
or a             ; or a             | 040F7F 040F77 || 040F7F B7          3073     OR      A
sbc hl,bc        ; sbc hl,bc        | 040F80 040F78 || 040F80 ED 42       3074     SBC     HL,BC
ld a,$2b         ; ld a,$2b         | 040F82 040F7A || 040F82 3E 2B       3075     LD      A,43
jr nz,$-$5b      ; jr nz,$-$5b      | 040F84 040F7C || 040F84 20 A3       3076     JR      NZ,ERROR2_EX  ; Throw a "No REPEAT" if this value does not match
call $04030f     ; call $04030a     | 040F86 040F7E || 040F86 CD 0F 03 04 3077     CALL    EXPRI   ; Fetch the expression
call $0408e4     ; call $0408df     | 040F8A 040F82 || 040F8A CD E4 08 04 3078     CALL    TEST   ; Test if the expression evaluates to zero
pop bc           ; pop bc           | 040F8E 040F86 || 040F8E C1          3079     POP     BC   ; Pop the marker
pop de           ; pop de           | 040F8F 040F87 || 040F8F D1          3080     POP     DE   ; Pop the address of the REPEAT instruction
jr nz,$+$07      ; jr nz,$+$07      | 040F90 040F88 || 040F90 20 05       3081     JR      NZ,XEQ2          ; If it is TRUE, then continue execution after the UNTIL instruction (we're done looping)
push de          ; push de          | 040F92 040F8A || 040F92 D5          3082     PUSH    DE   ; Push the address of the REPEAT instruction back on the stack
push bc          ; push bc          | 040F93 040F8B || 040F93 C5          3083     PUSH    BC   ; Push the marker back on the stack
push de          ; push de          | 040F94 040F8C || 040F94 D5          3084     PUSH    DE   ; IY = DE
pop iy           ; pop iy           | 040F95 040F8D || 040F95 FD E1       3085     POP     IY   ; This sets the execution address back to the REPEAT instruction
jp $040b9e       ; jp $040b96       | 040F97 040F8F || 040F97 C3 9E 0B 04 3086  XEQ2:   JP      XEQ   ; Continue execution
ld a,$22         ; ld a,$22         | 040F9B 040F93 || 040F9B 3E 22       3096  FORVAR:   LD      A,34
jr $-$74         ; jr $-$74         | 040F9D 040F95 || 040F9D 18 8A       3097     JR      ERROR2_EX           ; Throw "FOR variable" error
call $0415f0     ; call $0415be     | 040F9F 040F97 || 040F9F CD F0 15 04 3099  FOR_EX:   CALL    ASSIGN   ; Assign the START expression value to a variable
jr nz,$-$08      ; jr nz,$-$08      | 040FA3 040F9B || 040FA3 20 F6       3100     JR      NZ,FORVAR        ; If the variable is a string, or invalid, then throw a "FOR variable" error
push af          ; push af          | 040FA5 040F9D || 040FA5 F5          3101     PUSH    AF               ; Save the variable type
ld a,(iy)        ; ld a,(iy)        | 040FA6 040F9E || 040FA6 FD 7E 00    3102     LD      A,(IY)   ; Check the next token
cp $b8           ; cp $b8           | 040FA9 040FA1 || 040FA9 FE B8       3103     CP      TO_EX   ; Compare with the token value for "TO"
ld a,$24         ; ld a,$24         | 040FAB 040FA3 || 040FAB 3E 24       3104     LD      A,36   ; Set the error code to 36 ("No TO")
jp nz,$040f29    ; jp nz,$040f21    | 040FAD 040FA5 || 040FAD C2 29 0F 04 3105     JP      NZ,ERROR2_EX        ; And throw the error if that token is missing
inc iy           ; inc iy           | 040FB1 040FA9 || 040FB1 FD 23       3106     INC     IY   ; Skip to the next token
push ix          ; push ix          | 040FB3 040FAB || 040FB3 DD E5       3108     PUSH    IX
call $040307     ; call $040302     | 040FB5 040FAD || 040FB5 CD 07 03 04 3109     CALL    EXPRN            ; Fetch the LIMIT expression value
pop ix           ; pop ix           | 040FB9 040FB1 || 040FB9 DD E1       3110     POP     IX
pop af           ; pop af           | 040FBB 040FB3 || 040FBB F1          3111     POP     AF
ld b,a           ; ld b,a           | 040FBC 040FB4 || 040FBC 47          3112     LD      B,A              ; B: LIMIT value type (04h = Integer, 05h = Float)
push bc          ; push bc          | 040FBD 040FB5 || 040FBD C5          3113     PUSH    BC               ; Stack the LIMIT value
push hl          ; push hl          | 040FBE 040FB6 || 040FBE E5          3114     PUSH    HL
ld hl,$000000    ; ld hl,$000000    | 040FBF 040FB7 || 040FBF 21 00 00 00 3115     LD      HL,0
ld c,h           ; ld c,h           | 040FC3 040FBB || 040FC3 4C          3116     LD      C,H
exx              ; exx              | 040FC4 040FBC || 040FC4 D9          3117     EXX
push hl          ; push hl          | 040FC5 040FBD || 040FC5 E5          3118     PUSH    HL
ld hl,$000001    ; ld hl,$000001    | 040FC6 040FBE || 040FC6 21 01 00 00 3120     LD      HL,1             ; The preset STEP value is 1
exx              ; exx              | 040FCA 040FC2 || 040FCA D9          3121     EXX
ld a,(iy)        ; ld a,(iy)        | 040FCB 040FC3 || 040FCB FD 7E 00    3122     LD      A,(IY)   ; Fetch the next token
cp $88           ; cp $88           | 040FCE 040FC6 || 040FCE FE 88       3123     CP      STEP   ; Compare with the token value for "STEP"
jr nz,$+$0c      ; jr nz,$+$0c      | 040FD0 040FC8 || 040FD0 20 0A       3124     JR      NZ,FOR1   ; If there is no STEP token, then skip the next bit
inc iy           ; inc iy           | 040FD2 040FCA || 040FD2 FD 23       3126     INC     IY   ; Skip past the STEP token
push ix          ; push ix          | 040FD4 040FCC || 040FD4 DD E5       3127     PUSH    IX
call $040307     ; call $040302     | 040FD6 040FCE || 040FD6 CD 07 03 04 3128     CALL    EXPRN            ; Fetch the STEP expression value
pop ix           ; pop ix           | 040FDA 040FD2 || 040FDA DD E1       3129     POP     IX
push bc          ; push bc          | 040FDC 040FD4 || 040FDC C5          3131  FOR1:   PUSH    BC   ; Stack the STEP value
push hl          ; push hl          | 040FDD 040FD5 || 040FDD E5          3132     PUSH    HL
exx              ; exx              | 040FDE 040FD6 || 040FDE D9          3133     EXX
push hl          ; push hl          | 040FDF 040FD7 || 040FDF E5          3134     PUSH    HL
exx              ; exx              | 040FE0 040FD8 || 040FE0 D9          3135     EXX
push iy          ; push iy          | 040FE1 040FD9 || 040FE1 FD E5       3137     PUSH    IY               ; Stack the current execution address
push ix          ; push ix          | 040FE3 040FDB || 040FE3 DD E5       3138     PUSH    IX               ; Stack the loop variable
call $041681     ; call $04164f     | 040FE5 040FDD || 040FE5 CD 81 16 04 3139     CALL    CHECK
call $040b9e     ; call $040b96     | 040FE9 040FE1 || 040FE9 CD 9E 0B 04 3140     CALL    XEQ
pop bc           ; pop bc           | 040FED 040FE5 || 040FED C1          3152  NEXT_EX:   POP     BC               ; Pop the marker off the execution stack
ld hl,$040fed    ; ld hl,$040fe5    | 040FEE 040FE6 || 040FEE 21 ED 0F 04 3153     LD      HL,FORCHK  ; Compare with FORCHK
or a             ; or a             | 040FF2 040FEA || 040FF2 B7          3154     OR      A
sbc hl,bc        ; sbc hl,bc        | 040FF3 040FEB || 040FF3 ED 42       3155     SBC     HL,BC
ld a,$20         ; ld a,$20         | 040FF5 040FED || 040FF5 3E 20       3156     LD      A,32
jp nz,$041083    ; jp nz,$04107b    | 040FF7 040FEF || 040FF7 C2 83 10 04 3157     JP      NZ,ERROR3_EX        ; If this does not match, throw a "No FOR" error
call $0417ac     ; call $04177a     | 040FFB 040FF3 || 040FFB CD AC 17 04 3158     CALL    TERMQ   ; Check for terminator (a NEXT without a variable)
pop hl           ; pop hl           | 040FFF 040FF7 || 040FFF E1          3159     POP     HL   ; Pop the address of the loop variable off the execution stack
push hl          ; push hl          | 041000 040FF8 || 041000 E5          3160     PUSH    HL   ; Push it back onto the execution stack
push bc          ; push bc          | 041001 040FF9 || 041001 C5          3161     PUSH    BC   ; Push the marker back onto the execution stack
push hl          ; push hl          | 041002 040FFA || 041002 E5          3162     PUSH    HL   ; HL: Address of the loop variable off the stack
call nz,$043a72  ; call nz,$043a3a  | 041003 040FFB || 041003 C4 72 3A 04 3163     CALL    NZ,GETVAR        ; If there is no terminator, get the variable from the args
pop de           ; pop de           | 041007 040FFF || 041007 D1          3164     POP     DE   ; DE: Address of the loop variable off the stack
ex de,hl         ; ex de,hl         | 041008 041000 || 041008 EB          3165     EX      DE,HL   ; HL: Address of the loop variable off the stack, DE: Address of the variable from args
or a             ; or a             | 041009 041001 || 041009 B7          3166     OR      A
sbc hl,de        ; sbc hl,de        | 04100A 041002 || 04100A ED 52       3167  NEXT0:   SBC     HL,DE   ; Compare to make sure that the variables match
jr nz,$+$63      ; jr nz,$+$63      | 04100C 041004 || 04100C 20 61       3168     JR      NZ,NEXT1  ; They don't, so jump to NEXT1
push de          ; push de          | 04100E 041006 || 04100E D5          3169     PUSH    DE
ld ix,$00000c    ; ld ix,$00000c    | 04100F 041007 || 04100F DD 21 0C 00 3170     LD      IX,9+3   ; IX: Address of the STEP value on the execution stack
add ix,sp        ; add ix,sp        | 041014 04100C || 041014 DD 39       3171     ADD     IX,SP
call $042a19     ; call $0429e1     | 041016 04100E || 041016 CD 19 2A 04 3172     CALL    DLOAD5_SPL       ; Load the STEP value
ld a,(ix+$10)    ; ld a,(ix+$10)    | 04101A 041012 || 04101A DD 7E 10    3173     LD      A,(IX+16)        ; Get the STEP type
pop ix           ; pop ix           | 04101D 041015 || 04101D DD E1       3174     POP     IX
call $04041b     ; call $040416     | 04101F 041017 || 04101F CD 1B 04 04 3175     CALL    LOADN            ; Load the LOOP variable
bit 7,d          ; bit 7,d          | 041023 04101B || 041023 CB 7A       3176     BIT     7,D              ; Check the sign
push af          ; push af          | 041025 04101D || 041025 F5          3177     PUSH    AF
ld a,$0b         ; ld a,$0b         | 041026 04101E || 041026 3E 0B       3178     LD      A,'+' & 0FH
call $0420a2     ; call $04206a     | 041028 041020 || 041028 CD A2 20 04 3179     CALL    FPP              ; Add the STEP
jr c,$+$57       ; jr c,$+$57       | 04102C 041024 || 04102C 38 55       3180     JR      C,ERROR3_EX
pop af           ; pop af           | 04102E 041026 || 04102E F1          3181     POP     AF               ; Restore TYPE
push af          ; push af          | 04102F 041027 || 04102F F5          3182     PUSH    AF
call $041608     ; call $0415d6     | 041030 041028 || 041030 CD 08 16 04 3183     CALL    STORE            ; Update the variable
ld ix,$000015    ; ld ix,$000015    | 041034 04102C || 041034 DD 21 15 00 3184     LD      IX,18+3   ; IX: Address of the LIMIT value on the execution stack
add ix,sp        ; add ix,sp        | 041039 041031 || 041039 DD 39       3185     ADD     IX,SP
call $042a19     ; call $0429e1     | 04103B 041033 || 04103B CD 19 2A 04 3186     CALL    DLOAD5_SPL       ; Load the LIMIT value
pop af           ; pop af           | 04103F 041037 || 04103F F1          3187     POP     AF
call z,$0408dc   ; call z,$0408d7   | 041040 041038 || 041040 CC DC 08 04 3188     CALL    Z,SWAP   ; Swap the arguments if the sign is ?
ld a,$08         ; ld a,$08         | 041044 04103C || 041044 3E 08       3190     LD      A,0+'<'-4 & 0FH ; ez80asm doesn't do () in expressions
call $0420a2     ; call $04206a     | 041046 04103E || 041046 CD A2 20 04 3191     CALL    FPP              ; Test against the limit
jr c,$+$39       ; jr c,$+$39       | 04104A 041042 || 04104A 38 37       3192     JR      C,ERROR3_EX  ; Throw an error if FPP returns bad
inc h            ; inc h            | 04104C 041044 || 04104C 24          3193     INC     H
jr nz,$+$16      ; jr nz,$+$16      | 04104D 041045 || 04104D 20 14       3194     JR      NZ,LOOP_         ; Keep looping
ld hl,$00001b    ; ld hl,$00001b    | 04104F 041047 || 04104F 21 1B 00 00 3195     LD      HL,27   ; Adjust the stack
add hl,sp        ; add hl,sp        | 041053 04104B || 041053 39          3196     ADD     HL,SP
ld sp,hl         ; ld sp,hl         | 041054 04104C || 041054 F9          3197     LD      SP,HL
call $040a78     ; call $040a70     | 041055 04104D || 041055 CD 78 0A 04 3198     CALL    NXT
cp $2c           ; cp $2c           | 041059 041051 || 041059 FE 2C       3199     CP      ','   ; Check for multiple variables
jp nz,$040b9e    ; jp nz,$040b96    | 04105B 041053 || 04105B C2 9E 0B 04 3200     JP      NZ,XEQ   ; No, so we are done at ths point
inc iy           ; inc iy           | 04105F 041057 || 04105F FD 23       3201     INC     IY   ; Increment to the next variable
jr $-$74         ; jr $-$74         | 041061 041059 || 041061 18 8A       3202     JR      NEXT_EX   ; And continue
pop bc           ; pop bc           | 041063 04105B || 041063 C1          3204  LOOP_:   POP     BC
pop de           ; pop de           | 041064 04105C || 041064 D1          3205     POP     DE
pop iy           ; pop iy           | 041065 04105D || 041065 FD E1       3206     POP     IY
push iy          ; push iy          | 041067 04105F || 041067 FD E5       3207     PUSH    IY
push de          ; push de          | 041069 041061 || 041069 D5          3208     PUSH    DE
push bc          ; push bc          | 04106A 041062 || 04106A C5          3209     PUSH    BC
jp $040b9e       ; jp $040b96       | 04106B 041063 || 04106B C3 9E 0B 04 3210     JP      XEQ
ld hl,$00001b    ; ld hl,$00001b    | 04106F 041067 || 04106F 21 1B 00 00 3212  NEXT1:   LD      HL,27   ; TODO: What does this do?
add hl,sp        ; add hl,sp        | 041073 04106B || 041073 39          3213     ADD     HL,SP
ld sp,hl         ; ld sp,hl         | 041074 04106C || 041074 F9          3214     LD      SP,HL   ; Adjust the stack
pop bc           ; pop bc           | 041075 04106D || 041075 C1          3215     POP     BC
ld hl,$040fed    ; ld hl,$040fe5    | 041076 04106E || 041076 21 ED 0F 04 3216     LD      HL,FORCHK
sbc hl,bc        ; sbc hl,bc        | 04107A 041072 || 04107A ED 42       3217     SBC     HL,BC
pop hl           ; pop hl           | 04107C 041074 || 04107C E1          3218     POP     HL               ; Variable pointer
push hl          ; push hl          | 04107D 041075 || 04107D E5          3219     PUSH    HL
push bc          ; push bc          | 04107E 041076 || 04107E C5          3220     PUSH    BC
jr z,$-$75       ; jr z,$-$75       | 04107F 041077 || 04107F 28 89       3221     JR      Z,NEXT0
ld a,$21         ; ld a,$21         | 041081 041079 || 041081 3E 21       3223     LD      A,33
jp $043798       ; jp $043760       | 041083 04107B || 041083 C3 98 37 04 3224  ERROR3_EX:   JP      ERROR_            ; Throw the error "Can't match FOR"
push af          ; push af          | 041087 04107F || 041087 F5          3229  FN_EX:   PUSH    AF               ; Push A onto the stack; this'll be checked for the token ON (TON) in PROC5
call $041091     ; call $041089     | 041088 041080 || 041088 CD 91 10 04 3230     CALL    PROC1
push af          ; push af          | 04108C 041084 || 04108C F5          3239  PROC_EX:   PUSH    AF   ; Push A onto the stack; this'll be checked for the token ON (TON) in PROC5,
call $041091     ; call $041089     | 04108D 041085 || 04108D CD 91 10 04 3240     CALL    PROC1   ; and is also space reserved on the stack for the return address
call $041681     ; call $04164f     | 041091 041089 || 041091 CD 81 16 04 3243  PROC1:   CALL    CHECK   ; Check there is space for this
dec iy           ; dec iy           | 041095 04108D || 041095 FD 2B       3244     DEC     IY   ; Decrement IY to the PROC token
push iy          ; push iy          | 041097 04108F || 041097 FD E5       3245     PUSH    IY   ; Stack the pointer
call $043b33     ; call $043afb     | 041099 041091 || 041099 CD 33 3B 04 3246     CALL    GETDEF   ; Search for this PROC/FN entry in the dynamic area
pop bc           ; pop bc           | 04109D 041095 || 04109D C1          3247     POP     BC   ; BC = IY
jr z,$+$43       ; jr z,$+$43       | 04109E 041096 || 04109E 28 41       3248     JR      Z,PROC4   ; If found in the dynamic area then skip to PROC4
ld a,$1e         ; ld a,$1e         | 0410A0 041098 || 0410A0 3E 1E       3249     LD      A,30
jr c,$-$1f       ; jr c,$-$1f       | 0410A2 04109A || 0410A2 38 DF       3250     JR      C,ERROR3_EX         ; Throw error "Bad call" if invalid PROC/FN call
push bc          ; push bc          | 0410A4 04109C || 0410A4 C5          3255     PUSH    BC   ; BC: Still pointing to the PROC token in the tokenised line
ld hl,($044d14)  ; ld hl,($044d14)  | 0410A5 04109D || 0410A5 2A 14 4D 04 3256     LD      HL,(PAGE_)  ; HL: Start of program memory
ld a,$dd         ; ld a,$dd         | 0410A9 0410A1 || 0410A9 3E DD       3258  PROC2:   LD      A,DEF_   ;  A: The token to search for
call $041880     ; call $04184e     | 0410AB 0410A3 || 0410AB CD 80 18 04 3259     CALL    SEARCH_EX           ; Look for "DEF" as the first token in a program line
jr c,$+$28       ; jr c,$+$28       | 0410AF 0410A7 || 0410AF 38 26       3260     JR      C,PROC3   ; Not found, so jump to PROC3
push hl          ; push hl          | 0410B1 0410A9 || 0410B1 E5          3261     PUSH    HL   ; HL: Points to the DEF token in the DEFPROC
pop iy           ; pop iy           | 0410B2 0410AA || 0410B2 FD E1       3262     POP     IY   ; IY = HL
inc iy           ; inc iy           | 0410B4 0410AC || 0410B4 FD 23       3263     INC     IY               ; Skip the DEF token
call $040a78     ; call $040a70     | 0410B6 0410AE || 0410B6 CD 78 0A 04 3264     CALL    NXT   ; And any whitespace
call $043b33     ; call $043afb     | 0410BA 0410B2 || 0410BA CD 33 3B 04 3265     CALL    GETDEF   ; Search for this PROC/FN entry in the dynamic area
push iy          ; push iy          | 0410BE 0410B6 || 0410BE FD E5       3266     PUSH    IY
pop de           ; pop de           | 0410C0 0410B8 || 0410C0 D1          3267     POP     DE   ; DE: Points to the PROC/FN token in tokenised line of the DEFPROC
jr c,$+$0b       ; jr c,$+$0b       | 0410C1 0410B9 || 0410C1 38 09       3268     JR      C,PROC6   ; Skip if there is an error (neither FN or PROC first)
call nz,$043be6  ; call nz,$043bae  | 0410C3 0410BB || 0410C3 C4 E6 3B 04 3269     CALL    NZ,CREATE  ; Create an entity in the dynamic area
push iy          ; push iy          | 0410C7 0410BF || 0410C7 FD E5       3270     PUSH    IY   ; IY: Pointer to the DEFPROC/FN arguments
pop de           ; pop de           | 0410C9 0410C1 || 0410C9 D1          3271     POP     DE   ; DE = IY
ld (hl),de       ; ld (hl),de       | 0410CA 0410C2 || 0410CA ED 1F       3272     LD (HL),DE   ; Save address
ex de,hl         ; ex de,hl         | 0410CC 0410C4 || 0410CC EB          3274  PROC6:   EX      DE,HL   ; HL: Address of the procedure
ld a,$0d         ; ld a,$0d         | 0410CD 0410C5 || 0410CD 3E 0D       3275     LD      A,CR   ; The character to search for
ld bc,$000100    ; ld bc,$000100    | 0410CF 0410C7 || 0410CF 01 00 01 00 3276     LD BC,100h   ; Only need to search 256 bytes or so ahead; maximum line length
cpir             ; cpir             | 0410D3 0410CB || 0410D3 ED B1       3277     CPIR                     ; Skip to next line
jr $-$2c         ; jr $-$2c         | 0410D5 0410CD || 0410D5 18 D2       3278     JR      PROC2   ; Rinse, lather and repeat
pop iy           ; pop iy           | 0410D7 0410CF || 0410D7 FD E1       3282  PROC3:   POP     IY               ; Restore the execution address
call $043b33     ; call $043afb     | 0410D9 0410D1 || 0410D9 CD 33 3B 04 3283     CALL    GETDEF   ; Search for this PROC/FN entry in the dynamic area
ld a,$1d         ; ld a,$1d         | 0410DD 0410D5 || 0410DD 3E 1D       3284     LD      A,29
jr nz,$-$5c      ; jr nz,$-$5c      | 0410DF 0410D7 || 0410DF 20 A2       3285     JR      NZ,ERROR3_EX        ; Throw error "No such FN/PROC" if not found
ld de,(hl)       ; ld de,(hl)       | 0410E1 0410D9 || 0410E1 ED 17       3289  PROC4:   LD DE,(HL)   ; HL: Address of pointer; fetch entity address in DE
ld hl,$000003    ; ld hl,$000003    | 0410E3 0410DB || 0410E3 21 03 00 00 3290     LD HL,3
add hl,sp        ; add hl,sp        | 0410E7 0410DF || 0410E7 39          3291     ADD     HL,SP
call $040a78     ; call $040a70     | 0410E8 0410E0 || 0410E8 CD 78 0A 04 3292     CALL    NXT              ; Allow space before "("
push de          ; push de          | 0410EC 0410E4 || 0410EC D5          3293     PUSH    DE               ; Exchange DE and IY
ex (sp),iy       ; ex (sp),iy       | 0410ED 0410E5 || 0410ED FD E3       3294     EX      (SP),IY
cp $28           ; cp $28           | 0410EF 0410E7 || 0410EF FE 28       3295     CP      '('              ; Arguments?
pop de           ; pop de           | 0410F1 0410E9 || 0410F1 D1          3296     POP     DE   ; NB: This has been moved after the compare otherwise DE gets corrupted later? IDK why!?!
jr nz,$+$22      ; jr nz,$+$22      | 0410F2 0410EA || 0410F2 20 20       3297     JR      NZ,PROC5
call $040a78     ; call $040a70     | 0410F4 0410EC || 0410F4 CD 78 0A 04 3298     CALL    NXT              ; Allow space before "("
cp $28           ; cp $28           | 0410F8 0410F0 || 0410F8 FE 28       3299     CP      '('
jp nz,$040c9f    ; jp nz,$040c97    | 0410FA 0410F2 || 0410FA C2 9F 0C 04 3300     JP      NZ,SYNTAX        ; Throw "Syntax error"
push iy          ; push iy          | 0410FE 0410F6 || 0410FE FD E5       3301     PUSH    IY
pop bc           ; pop bc           | 041100 0410F8 || 041100 C1          3302     POP     BC               ; Save IY in BC
exx              ; exx              | 041101 0410F9 || 041101 D9          3303     EXX
call $04172c     ; call $0416fa     | 041102 0410FA || 041102 CD 2C 17 04 3304     CALL    SAVLOC           ; Save local parameters
call $040a37     ; call $040a2f     | 041106 0410FE || 041106 CD 37 0A 04 3305     CALL    BRAKET           ; Closing bracket
exx              ; exx              | 04110A 041102 || 04110A D9          3306     EXX
push bc          ; push bc          | 04110B 041103 || 04110B C5          3307     PUSH    BC
pop iy           ; pop iy           | 04110C 041104 || 04110C FD E1       3308     POP     IY               ; Restore IY
push hl          ; push hl          | 04110E 041106 || 04110E E5          3309     PUSH    HL
call $0416a8     ; call $041676     | 04110F 041107 || 04110F CD A8 16 04 3310     CALL    ARGUE            ; Transfer arguments
pop hl           ; pop hl           | 041113 04110B || 041113 E1          3311     POP     HL
inc hl           ; inc hl           | 041114 04110C || 041114 23          3313  PROC5:   INC HL   ; Increment to the ON PROC flag address
ld a,(hl)        ; ld a,(hl)        | 041115 04110D || 041115 7E          3314     LD A, (HL)   ; And fetch the value
dec hl           ; dec hl           | 041116 04110E || 041116 2B          3315     DEC  HL
ld (hl),de       ; ld (hl),de       | 041117 04110F || 041117 ED 1F       3316     LD (HL), DE  ; Save the ENDPROC return address pointer in the BASIC listing
cp $ee           ; cp $ee           | 041119 041111 || 041119 FE EE       3317     CP TON   ; Was it "ON PROC"?
jp nz,$040b9e    ; jp nz,$040b96    | 04111B 041113 || 04111B C2 9E 0B 04 3318     JP NZ, XEQ   ; No, so back to XEQ
push de          ; push de          | 04111F 041117 || 04111F D5          3319     PUSH    DE   ; Exchange DE and IY
ex (sp),iy       ; ex (sp),iy       | 041120 041118 || 041120 FD E3       3320     EX      (SP),IY
call $0417b9     ; call $041787     | 041122 04111A || 041122 CD B9 17 04 3321     CALL    SPAN             ; Skip rest of ON list
ex (sp),iy       ; ex (sp),iy       | 041126 04111E || 041126 FD E3       3322     EX      (SP),IY   ; Exchange DE and IY
pop de           ; pop de           | 041128 041120 || 041128 D1          3323     POP     DE
ld (hl),de       ; ld (hl),de       | 041129 041121 || 041129 ED 1F       3324     LD (HL), DE  ; Save the return address
jp $040b9e       ; jp $040b96       | 04112B 041123 || 04112B C3 9E 0B 04 3325     JP      XEQ
pop bc           ; pop bc           | 04112F 041127 || 04112F C1          3329  LOCAL_EX_:   POP     BC   ; BC: The current check marker (on the stack)
push bc          ; push bc          | 041130 041128 || 041130 C5          3330     PUSH    BC
ld hl,$04108c    ; ld hl,$041084    | 041131 041129 || 041131 21 8C 10 04 3331     LD      HL,FNCHK  ; Check if we are in a FN
or a             ; or a             | 041135 04112D || 041135 B7          3332     OR      A
sbc hl,bc        ; sbc hl,bc        | 041136 04112E || 041136 ED 42       3333     SBC     HL,BC
jr z,$+$18       ; jr z,$+$18       | 041138 041130 || 041138 28 16       3334     JR      Z,LOCAL1  ; Yes, so all good, we can use local
ld hl,$041091    ; ld hl,$041089    | 04113A 041132 || 04113A 21 91 10 04 3335     LD      HL,PROCHK  ; Now check if we are in a PROC
or a             ; or a             | 04113E 041136 || 04113E B7          3336     OR      A
sbc hl,bc        ; sbc hl,bc        | 04113F 041137 || 04113F ED 42       3337     SBC     HL,BC
jr z,$+$0f       ; jr z,$+$0f       | 041141 041139 || 041141 28 0D       3338     JR      Z,LOCAL1  ; Again, all good, we can use local
ld hl,$04178a    ; ld hl,$041758    | 041143 04113B || 041143 21 8A 17 04 3339     LD      HL,LOCCHK  ; Finally check for the local parameters marker
or a             ; or a             | 041147 04113F || 041147 B7          3340     OR      A
sbc hl,bc        ; sbc hl,bc        | 041148 041140 || 041148 ED 42       3341     SBC     HL,BC   ; If it is not present, then
ld a,$0c         ; ld a,$0c         | 04114A 041142 || 04114A 3E 0C       3342     LD      A,12
jp nz,$043798    ; jp nz,$043760    | 04114C 041144 || 04114C C2 98 37 04 3343     JP      NZ,ERROR_         ; Then throw a "Not LOCAL" errr
push iy          ; push iy          | 041150 041148 || 041150 FD E5       3347  LOCAL1:   PUSH    IY   ; IY: BASIC pointer
pop bc           ; pop bc           | 041152 04114A || 041152 C1          3348     POP     BC   ; BC: Copy of the BASIC pointer
exx              ; exx              | 041153 04114B || 041153 D9          3349     EXX
dec iy           ; dec iy           | 041154 04114C || 041154 FD 2B       3350     DEC     IY
call $04172c     ; call $0416fa     | 041156 04114E || 041156 CD 2C 17 04 3351     CALL    SAVLOC
exx              ; exx              | 04115A 041152 || 04115A D9          3352     EXX
push bc          ; push bc          | 04115B 041153 || 04115B C5          3353     PUSH    BC
pop iy           ; pop iy           | 04115C 041154 || 04115C FD E1       3354     POP     IY
call $043a72     ; call $043a3a     | 04115E 041156 || 04115E CD 72 3A 04 3356  LOCAL2:   CALL    GETVAR   ; Get the variable location
jp nz,$040c9f    ; jp nz,$040c97    | 041162 04115A || 041162 C2 9F 0C 04 3357     JP      NZ,SYNTAX
or a             ; or a             | 041166 04115E || 041166 B7          3358     OR      A                ; Check the variable type (80h = string)
ex af,af'        ; ex af,af'        | 041167 04115F || 041167 08          3359     EX      AF,AF'
call $040998     ; call $040993     | 041168 041160 || 041168 CD 98 09 04 3360     CALL    ZERO   ; Zero the variable anyway
ex af,af'        ; ex af,af'        | 04116C 041164 || 04116C 08          3361     EX      AF,AF'
push af          ; push af          | 04116D 041165 || 04116D F5          3362     PUSH    AF
call p,$041608   ; call p,$0415d6   | 04116E 041166 || 04116E F4 08 16 04 3363     CALL    P,STORE          ; Call STORE if it is not a string
pop af           ; pop af           | 041172 04116A || 041172 F1          3364     POP     AF
ld e,c           ; ld e,c           | 041173 04116B || 041173 59          3365     LD      E,C
call m,$041636   ; call m,$041604   | 041174 04116C || 041174 FC 36 16 04 3366     CALL    M,STORES  ; Call STORES if it is a string
call $040a78     ; call $040a70     | 041178 041170 || 041178 CD 78 0A 04 3367     CALL    NXT   ; Skip to the next character in the expression
cp $2c           ; cp $2c           | 04117C 041174 || 04117C FE 2C       3368     CP      ','   ; Is it a comma?
jp nz,$040b9e    ; jp nz,$040b96    | 04117E 041176 || 04117E C2 9E 0B 04 3369     JP      NZ,XEQ   ; No, so we're done, carry on executing
inc iy           ; inc iy           | 041182 04117A || 041182 FD 23       3370     INC     IY   ; Yes, so skip the comma
call $040a78     ; call $040a70     | 041184 04117C || 041184 CD 78 0A 04 3371     CALL    NXT   ; And any whitespace
jr $-$2a         ; jr $-$2a         | 041188 041180 || 041188 18 D4       3372     JR      LOCAL2   ; Then loop back and handle any further local variables
pop bc           ; pop bc           | 04118A 041182 || 04118A C1          3376  ENDPRO:   POP     BC   ; Pop the check value off the stack
ld hl,$04178a    ; ld hl,$041758    | 04118B 041183 || 04118B 21 8A 17 04 3377     LD      HL,LOCCHK  ; Check if it is the LOCAL Marker
or a             ; or a             | 04118F 041187 || 04118F B7          3378     OR      A
sbc hl,bc        ; sbc hl,bc        | 041190 041188 || 041190 ED 42       3379     SBC     HL,BC
jr z,$+$15       ; jr z,$+$15       | 041192 04118A || 041192 28 13       3380     JR      Z,UNSTK          ; Yes, it is, so first need to unstack the local variables
ld hl,$041091    ; ld hl,$041089    | 041194 04118C || 041194 21 91 10 04 3382     LD      HL,PROCHK        ; Check if it is the PROC marker
or a             ; or a             | 041198 041190 || 041198 B7          3383     OR      A
sbc hl,bc        ; sbc hl,bc        | 041199 041191 || 041199 ED 42       3384     SBC     HL,BC
pop iy           ; pop iy           | 04119B 041193 || 04119B FD E1       3385     POP     IY
jp z,$040b9e     ; jp z,$040b96     | 04119D 041195 || 04119D CA 9E 0B 04 3386     JP      Z,XEQ   ; Yes, it is, so carry on, all is good
ld a,$0d         ; ld a,$0d         | 0411A1 041199 || 0411A1 3E 0D       3387     LD      A,13   ; Otherwise throw the "No PROC" error
jp $043798       ; jp $043760       | 0411A3 04119B || 0411A3 C3 98 37 04 3388     JP      ERROR_
pop ix           ; pop ix           | 0411A7 04119F || 0411A7 DD E1       3390  UNSTK:   POP     IX   ; Unstack a single local variable
pop bc           ; pop bc           | 0411A9 0411A1 || 0411A9 C1          3391     POP     BC
ld a,b           ; ld a,b           | 0411AA 0411A2 || 0411AA 78          3392     LD      A,B
or a             ; or a             | 0411AB 0411A3 || 0411AB B7          3393     OR      A
jp m,$0411ba     ; jp m,$0411b2     | 0411AC 0411A4 || 0411AC FA BA 11 04 3394     JP      M,UNSTK1         ; Jump here if it is a string? (80h)
pop hl           ; pop hl           | 0411B0 0411A8 || 0411B0 E1          3395     POP     HL   ; Unstack a normal variable
exx              ; exx              | 0411B1 0411A9 || 0411B1 D9          3396     EXX
pop hl           ; pop hl           | 0411B2 0411AA || 0411B2 E1          3397     POP     HL
exx              ; exx              | 0411B3 0411AB || 0411B3 D9          3398     EXX
call $041608     ; call $0415d6     | 0411B4 0411AC || 0411B4 CD 08 16 04 3399     CALL    STORE   ; TODO: Not sure why or where it is being stored at this point
jr $-$2e         ; jr $-$2e         | 0411B8 0411B0 || 0411B8 18 D0       3400     JR      ENDPRO   ; And loop back to ENDPRO
ld hl,$000000    ; ld hl,$000000    | 0411BA 0411B2 || 0411BA 21 00 00 00 3402  UNSTK1:   LD      HL,0   ; Unstack a string
add hl,sp        ; add hl,sp        | 0411BE 0411B6 || 0411BE 39          3403     ADD     HL,SP
ld e,c           ; ld e,c           | 0411BF 0411B7 || 0411BF 59          3404     LD      E,C
call $041636     ; call $041604     | 0411C0 0411B8 || 0411C0 CD 36 16 04 3405     CALL    STORES   ; TODO: Not sure why or where it is being stored at this point
ld sp,hl         ; ld sp,hl         | 0411C4 0411BC || 0411C4 F9          3406     LD      SP,HL
jr $-$3b         ; jr $-$3b         | 0411C5 0411BD || 0411C5 18 C3       3407     JR      ENDPRO
call $0418c4     ; call $041892     | 0411C7 0411BF || 0411C7 CD C4 18 04 3411  INPUTN:   CALL    CHNL            ;E = CHANNEL NUMBER
call $040a78     ; call $040a70     | 0411CB 0411C3 || 0411CB CD 78 0A 04 3412  INPN1:   CALL    NXT
cp $2c           ; cp $2c           | 0411CF 0411C7 || 0411CF FE 2C       3413     CP      ','
jp nz,$040b9e    ; jp nz,$040b96    | 0411D1 0411C9 || 0411D1 C2 9E 0B 04 3414     JP      NZ,XEQ
inc iy           ; inc iy           | 0411D5 0411CD || 0411D5 FD 23       3415     INC     IY
call $040a78     ; call $040a70     | 0411D7 0411CF || 0411D7 CD 78 0A 04 3416     CALL    NXT
push de          ; push de          | 0411DB 0411D3 || 0411DB D5          3417     PUSH    DE
call $040c96     ; call $040c8e     | 0411DC 0411D4 || 0411DC CD 96 0C 04 3418     CALL    VAR_
pop de           ; pop de           | 0411E0 0411D8 || 0411E0 D1          3419     POP     DE
push af          ; push af          | 0411E1 0411D9 || 0411E1 F5          3420     PUSH    AF              ;SAVE TYPE
push hl          ; push hl          | 0411E2 0411DA || 0411E2 E5          3421     PUSH    HL              ;VARPTR
or a             ; or a             | 0411E3 0411DB || 0411E3 B7          3422     OR      A
jp m,$041210     ; jp m,$041208     | 0411E4 0411DC || 0411E4 FA 10 12 04 3423     JP      M,INPN2         ;STRING
call $04437c     ; call $044333     | 0411E8 0411E0 || 0411E8 CD 7C 43 04 3424     CALL    OSBGET
exx              ; exx              | 0411EC 0411E4 || 0411EC D9          3425     EXX
ld l,a           ; ld l,a           | 0411ED 0411E5 || 0411ED 6F          3426     LD      L,A
exx              ; exx              | 0411EE 0411E6 || 0411EE D9          3427     EXX
call $04437c     ; call $044333     | 0411EF 0411E7 || 0411EF CD 7C 43 04 3428     CALL    OSBGET
exx              ; exx              | 0411F3 0411EB || 0411F3 D9          3429     EXX
ld h,a           ; ld h,a           | 0411F4 0411EC || 0411F4 67          3430     LD      H,A
exx              ; exx              | 0411F5 0411ED || 0411F5 D9          3431     EXX
call $04437c     ; call $044333     | 0411F6 0411EE || 0411F6 CD 7C 43 04 3432     CALL    OSBGET
ld l,a           ; ld l,a           | 0411FA 0411F2 || 0411FA 6F          3433     LD      L,A
call $04437c     ; call $044333     | 0411FB 0411F3 || 0411FB CD 7C 43 04 3434     CALL    OSBGET
ld h,a           ; ld h,a           | 0411FF 0411F7 || 0411FF 67          3435     LD      H,A
call $04437c     ; call $044333     | 041200 0411F8 || 041200 CD 7C 43 04 3436     CALL    OSBGET
ld c,a           ; ld c,a           | 041204 0411FC || 041204 4F          3437     LD      C,A
pop ix           ; pop ix           | 041205 0411FD || 041205 DD E1       3438     POP     IX
pop af           ; pop af           | 041207 0411FF || 041207 F1          3439     POP     AF              ;RESTORE TYPE
push de          ; push de          | 041208 041200 || 041208 D5          3440     PUSH    DE              ;SAVE CHANNEL
call $041608     ; call $0415d6     | 041209 041201 || 041209 CD 08 16 04 3441     CALL    STORE
pop de           ; pop de           | 04120D 041205 || 04120D D1          3442     POP     DE
jr $-$43         ; jr $-$43         | 04120E 041206 || 04120E 18 BB       3443     JR      INPN1
ld hl,$044a00    ; ld hl,$044a00    | 041210 041208 || 041210 21 00 4A 04 3444  INPN2:   LD      HL,ACCS
call $04437c     ; call $044333     | 041214 04120C || 041214 CD 7C 43 04 3445  INPN3:   CALL    OSBGET
cp $0d           ; cp $0d           | 041218 041210 || 041218 FE 0D       3446     CP      CR
jr z,$+$06       ; jr z,$+$06       | 04121A 041212 || 04121A 28 04       3447     JR      Z,INPN4
ld (hl),a        ; ld (hl),a        | 04121C 041214 || 04121C 77          3448     LD      (HL),A
inc l            ; inc l            | 04121D 041215 || 04121D 2C          3449     INC     L
jr nz,$-$0a      ; jr nz,$-$0a      | 04121E 041216 || 04121E 20 F4       3450     JR      NZ,INPN3
pop ix           ; pop ix           | 041220 041218 || 041220 DD E1       3451  INPN4:   POP     IX
pop af           ; pop af           | 041222 04121A || 041222 F1          3452     POP     AF
push de          ; push de          | 041223 04121B || 041223 D5          3453     PUSH    DE
ex de,hl         ; ex de,hl         | 041224 04121C || 041224 EB          3454     EX      DE,HL
call $041632     ; call $041600     | 041225 04121D || 041225 CD 32 16 04 3455     CALL    STACCS
pop de           ; pop de           | 041229 041221 || 041229 D1          3456     POP     DE
jr $-$5f         ; jr $-$5f         | 04122A 041222 || 04122A 18 9F       3457     JR      INPN1
cp $23           ; cp $23           | 04122C 041224 || 04122C FE 23       3462  INPUT:   CP      '#'
jr z,$-$67       ; jr z,$-$67       | 04122E 041226 || 04122E 28 97       3463     JR      Z,INPUTN
ld c,$00         ; ld c,$00         | 041230 041228 || 041230 0E 00       3464     LD      C,0             ;FLAG PROMPT
cp $86           ; cp $86           | 041232 04122A || 041232 FE 86       3465     CP      LINE_EX_
jr nz,$+$06      ; jr nz,$+$06      | 041234 04122C || 041234 20 04       3466     JR      NZ,INPUT0
inc iy           ; inc iy           | 041236 04122E || 041236 FD 23       3467     INC     IY              ;SKIP "LINE"
ld c,$80         ; ld c,$80         | 041238 041230 || 041238 0E 80       3468     LD      C,80H
ld hl,$044b00    ; ld hl,$044b00    | 04123A 041232 || 04123A 21 00 4B 04 3469  INPUT0:   LD      HL,BUFFER
ld (hl),$0d      ; ld (hl),$0d      | 04123E 041236 || 04123E 36 0D       3470     LD      (HL),CR         ;INITIALISE EMPTY
call $0417ac     ; call $04177a     | 041240 041238 || 041240 CD AC 17 04 3471  INPUT1:   CALL    TERMQ
jp z,$040b9e     ; jp z,$040b96     | 041244 04123C || 041244 CA 9E 0B 04 3472     JP      Z,XEQ           ;DONE
inc iy           ; inc iy           | 041248 041240 || 041248 FD 23       3473     INC     IY
cp $2c           ; cp $2c           | 04124A 041242 || 04124A FE 2C       3474     CP      ','
jr z,$+$5e       ; jr z,$+$5e       | 04124C 041244 || 04124C 28 5C       3475     JR      Z,INPUT3        ;SKIP COMMA
cp $3b           ; cp $3b           | 04124E 041246 || 04124E FE 3B       3476     CP      ';'
jr z,$+$5a       ; jr z,$+$5a       | 041250 041248 || 041250 28 58       3477     JR      Z,INPUT3
push hl          ; push hl          | 041252 04124A || 041252 E5          3478     PUSH    HL              ;SAVE BUFFER POINTER
cp $22           ; cp $22           | 041253 04124B || 041253 FE 22       3479     CP      34  ;ASCII ""
jr nz,$+$0e      ; jr nz,$+$0e      | 041255 04124D || 041255 20 0C       3480     JR      NZ,INPUT6
push bc          ; push bc          | 041257 04124F || 041257 C5          3481     PUSH    BC
call $04046c     ; call $040467     | 041258 041250 || 041258 CD 6C 04 04 3482     CALL    CONS
pop bc           ; pop bc           | 04125C 041254 || 04125C C1          3483     POP     BC
call $041830     ; call $0417fe     | 04125D 041255 || 04125D CD 30 18 04 3484     CALL    PTEXT           ;PRINT PROMPT
jr $+$08         ; jr $+$08         | 041261 041259 || 041261 18 06       3485     JR      INPUT9
call $0417d1     ; call $04179f     | 041263 04125B || 041263 CD D1 17 04 3486  INPUT6:   CALL    FORMAT          ;SPC, TAB, '
jr nz,$+$07      ; jr nz,$+$07      | 041267 04125F || 041267 20 05       3487     JR      NZ,INPUT2
pop hl           ; pop hl           | 041269 041261 || 041269 E1          3488  INPUT9:   POP     HL
set 0,c          ; set 0,c          | 04126A 041262 || 04126A CB C1       3489     SET     0,C             ;FLAG NO PROMPT
jr $-$32         ; jr $-$32         | 04126C 041264 || 04126C 18 CC       3490     JR      INPUT0
dec iy           ; dec iy           | 04126E 041266 || 04126E FD 2B       3491  INPUT2:   DEC     IY
push bc          ; push bc          | 041270 041268 || 041270 C5          3492     PUSH    BC
call $040c96     ; call $040c8e     | 041271 041269 || 041271 CD 96 0C 04 3493     CALL    VAR_
pop bc           ; pop bc           | 041275 04126D || 041275 C1          3494     POP     BC
pop hl           ; pop hl           | 041276 04126E || 041276 E1          3495     POP     HL
push af          ; push af          | 041277 04126F || 041277 F5          3496     PUSH    AF              ;SAVE TYPE
ld a,(hl)        ; ld a,(hl)        | 041278 041270 || 041278 7E          3497     LD      A,(HL)
inc hl           ; inc hl           | 041279 041271 || 041279 23          3498     INC     HL
cp $0d           ; cp $0d           | 04127A 041272 || 04127A FE 0D       3499     CP      CR              ;BUFFER EMPTY?
call z,$0412ae   ; call z,$0412a6   | 04127C 041274 || 04127C CC AE 12 04 3500     CALL    Z,REFILL
bit 7,c          ; bit 7,c          | 041280 041278 || 041280 CB 79       3501     BIT     7,C
push af          ; push af          | 041282 04127A || 041282 F5          3502     PUSH    AF
call nz,$041852  ; call nz,$041820  | 041283 04127B || 041283 C4 52 18 04 3503     CALL    NZ,LINES
pop af           ; pop af           | 041287 04127F || 041287 F1          3504     POP     AF
call z,$04183f   ; call z,$04180d   | 041288 041280 || 041288 CC 3F 18 04 3505     CALL    Z,FETCHS
pop af           ; pop af           | 04128C 041284 || 04128C F1          3506     POP     AF              ;RESTORE TYPE
push bc          ; push bc          | 04128D 041285 || 04128D C5          3507     PUSH    BC
push hl          ; push hl          | 04128E 041286 || 04128E E5          3508     PUSH    HL
or a             ; or a             | 04128F 041287 || 04128F B7          3509     OR      A
jp m,$0412a4     ; jp m,$04129c     | 041290 041288 || 041290 FA A4 12 04 3510     JP      M,INPUT4        ;STRING
push af          ; push af          | 041294 04128C || 041294 F5          3511     PUSH    AF
push ix          ; push ix          | 041295 04128D || 041295 DD E5       3512     PUSH    IX
call $040673     ; call $04066e     | 041297 04128F || 041297 CD 73 06 04 3513     CALL    VAL0
pop ix           ; pop ix           | 04129B 041293 || 04129B DD E1       3514     POP     IX
pop af           ; pop af           | 04129D 041295 || 04129D F1          3515     POP     AF
call $041608     ; call $0415d6     | 04129E 041296 || 04129E CD 08 16 04 3516     CALL    STORE
jr $+$06         ; jr $+$06         | 0412A2 04129A || 0412A2 18 04       3517     JR      INPUT5
call $041632     ; call $041600     | 0412A4 04129C || 0412A4 CD 32 16 04 3518  INPUT4:   CALL    STACCS
pop hl           ; pop hl           | 0412A8 0412A0 || 0412A8 E1          3519  INPUT5:   POP     HL
pop bc           ; pop bc           | 0412A9 0412A1 || 0412A9 C1          3520     POP     BC
res 0,c          ; res 0,c          | 0412AA 0412A2 || 0412AA CB 81       3521  INPUT3:   RES     0,C
jr $-$6c         ; jr $-$6c         | 0412AC 0412A4 || 0412AC 18 92       3522     JR      INPUT1
bit 0,c          ; bit 0,c          | 0412AE 0412A6 || 0412AE CB 41       3524  REFILL:   BIT     0,C
jr nz,$+$0e      ; jr nz,$+$0e      | 0412B0 0412A8 || 0412B0 20 0C       3525     JR      NZ,REFIL0       ;NO PROMPT
ld a,$3f         ; ld a,$3f         | 0412B2 0412AA || 0412B2 3E 3F       3526     LD      A,'?'
call $043987     ; call $04394f     | 0412B4 0412AC || 0412B4 CD 87 39 04 3527     CALL    OUTCHR          ;PROMPT
ld a,$20         ; ld a,$20         | 0412B8 0412B0 || 0412B8 3E 20       3528     LD      A,' '
call $043987     ; call $04394f     | 0412BA 0412B2 || 0412BA CD 87 39 04 3529     CALL    OUTCHR
ld hl,$044b00    ; ld hl,$044b00    | 0412BE 0412B6 || 0412BE 21 00 4B 04 3530  REFIL0:   LD      HL,BUFFER
push bc          ; push bc          | 0412C2 0412BA || 0412C2 C5          3531     PUSH    BC
push hl          ; push hl          | 0412C3 0412BB || 0412C3 E5          3532     PUSH    HL
push ix          ; push ix          | 0412C4 0412BC || 0412C4 DD E5       3533     PUSH    IX
call $043e97     ; call $043e5f     | 0412C6 0412BE || 0412C6 CD 97 3E 04 3534     CALL    OSLINE
pop ix           ; pop ix           | 0412CA 0412C2 || 0412CA DD E1       3535     POP     IX
pop hl           ; pop hl           | 0412CC 0412C4 || 0412CC E1          3536     POP     HL
pop bc           ; pop bc           | 0412CD 0412C5 || 0412CD C1          3537     POP     BC
ld b,a           ; ld b,a           | 0412CE 0412C6 || 0412CE 47          3538     LD      B,A             ;POS AT ENTRY
xor a            ; xor a            | 0412CF 0412C7 || 0412CF AF          3539     XOR     A
ld ($044d3d),a   ; ld ($044d3d),a   | 0412D0 0412C8 || 0412D0 32 3D 4D 04 3540     LD      (COUNT),A
cp b             ; cp b             | 0412D4 0412CC || 0412D4 B8          3541     CP      B
ret z            ; ret z            | 0412D5 0412CD || 0412D5 C8          3542     RET     Z
ld a,(hl)        ; ld a,(hl)        | 0412D6 0412CE || 0412D6 7E          3543  REFIL1:   LD      A,(HL)
cp $0d           ; cp $0d           | 0412D7 0412CF || 0412D7 FE 0D       3544     CP      CR
ret z            ; ret z            | 0412D9 0412D1 || 0412D9 C8          3545     RET     Z
inc hl           ; inc hl           | 0412DA 0412D2 || 0412DA 23          3546     INC     HL
djnz $-$05       ; djnz $-$05       | 0412DB 0412D3 || 0412DB 10 F9       3547     DJNZ    REFIL1
ret              ; ret              | 0412DD 0412D5 || 0412DD C9          3548     RET
cp $23           ; cp $23           | 0412DE 0412D6 || 0412DE FE 23       3552  READ:   CP      '#'
jp z,$0411c7     ; jp z,$0411bf     | 0412E0 0412D8 || 0412E0 CA C7 11 04 3553     JP      Z,INPUTN
ld hl,($044d31)  ; ld hl,($044d31)  | 0412E4 0412DC || 0412E4 2A 31 4D 04 3554     LD      HL,(DATPTR)
ld a,(hl)        ; ld a,(hl)        | 0412E8 0412E0 || 0412E8 7E          3555  READ0:   LD      A,(HL)
inc hl           ; inc hl           | 0412E9 0412E1 || 0412E9 23          3556     INC     HL              ;SKIP COMMA OR "DATA"
cp $0d           ; cp $0d           | 0412EA 0412E2 || 0412EA FE 0D       3557     CP      CR              ;END OF DATA STMT?
call z,$041330   ; call z,$041328   | 0412EC 0412E4 || 0412EC CC 30 13 04 3558     CALL    Z,GETDAT
push hl          ; push hl          | 0412F0 0412E8 || 0412F0 E5          3559     PUSH    HL
call $040c96     ; call $040c8e     | 0412F1 0412E9 || 0412F1 CD 96 0C 04 3560     CALL    VAR_
pop hl           ; pop hl           | 0412F5 0412ED || 0412F5 E1          3561     POP     HL
or a             ; or a             | 0412F6 0412EE || 0412F6 B7          3562     OR      A
jp m,$041310     ; jp m,$041308     | 0412F7 0412EF || 0412F7 FA 10 13 04 3563     JP      M,READ1         ;STRING
push hl          ; push hl          | 0412FB 0412F3 || 0412FB E5          3564     PUSH    HL
ex (sp),iy       ; ex (sp),iy       | 0412FC 0412F4 || 0412FC FD E3       3565     EX      (SP),IY
push af          ; push af          | 0412FE 0412F6 || 0412FE F5          3566     PUSH    AF              ;SAVE TYPE
push ix          ; push ix          | 0412FF 0412F7 || 0412FF DD E5       3567     PUSH    IX
call $040307     ; call $040302     | 041301 0412F9 || 041301 CD 07 03 04 3568     CALL    EXPRN
pop ix           ; pop ix           | 041305 0412FD || 041305 DD E1       3569     POP     IX
pop af           ; pop af           | 041307 0412FF || 041307 F1          3570     POP     AF
call $041608     ; call $0415d6     | 041308 041300 || 041308 CD 08 16 04 3571     CALL    STORE
ex (sp),iy       ; ex (sp),iy       | 04130C 041304 || 04130C FD E3       3572     EX      (SP),IY
jr $+$0b         ; jr $+$0b         | 04130E 041306 || 04130E 18 09       3573     JR      READ2
call $04183f     ; call $04180d     | 041310 041308 || 041310 CD 3F 18 04 3574  READ1:   CALL    FETCHS
push hl          ; push hl          | 041314 04130C || 041314 E5          3575     PUSH    HL
call $041632     ; call $041600     | 041315 04130D || 041315 CD 32 16 04 3576     CALL    STACCS
pop hl           ; pop hl           | 041319 041311 || 041319 E1          3577  READ2:   POP     HL
ld ($044d31),hl  ; ld ($044d31),hl  | 04131A 041312 || 04131A 22 31 4D 04 3578     LD      (DATPTR),HL
call $040a78     ; call $040a70     | 04131E 041316 || 04131E CD 78 0A 04 3579     CALL    NXT
cp $2c           ; cp $2c           | 041322 04131A || 041322 FE 2C       3580     CP      ','
jp nz,$040b9e    ; jp nz,$040b96    | 041324 04131C || 041324 C2 9E 0B 04 3581     JP      NZ,XEQ
inc iy           ; inc iy           | 041328 041320 || 041328 FD 23       3582     INC     IY
call $040a78     ; call $040a70     | 04132A 041322 || 04132A CD 78 0A 04 3583     CALL    NXT
jr $-$46         ; jr $-$46         | 04132E 041326 || 04132E 18 B8       3584     JR      READ0
ld a,$dc         ; ld a,$dc         | 041330 041328 || 041330 3E DC       3586  GETDAT:   LD      A,DATA_EX_
call $041880     ; call $04184e     | 041332 04132A || 041332 CD 80 18 04 3587     CALL    SEARCH_EX
inc hl           ; inc hl           | 041336 04132E || 041336 23          3588     INC     HL
ret nc           ; ret nc           | 041337 04132F || 041337 D0          3589     RET     NC
ld a,$2a         ; ld a,$2a         | 041338 041330 || 041338 3E 2A       3590     LD      A,42
jp $043798       ; jp $043760       | 04133A 041332 || 04133A C3 98 37 04 3591  ERROR4:   JP      ERROR_           ;"Out of DATA"
call $04030f     ; call $04030a     | 04133E 041336 || 04133E CD 0F 03 04 3597  IF_:   CALL    EXPRI
call $0408e4     ; call $0408df     | 041342 04133A || 041342 CD E4 08 04 3598     CALL    TEST
jr z,$+$1b       ; jr z,$+$1b       | 041346 04133E || 041346 28 19       3599     JR      Z,IFNOT         ;FALSE
ld a,(iy)        ; ld a,(iy)        | 041348 041340 || 041348 FD 7E 00    3600     LD      A,(IY)
cp $8c           ; cp $8c           | 04134B 041343 || 04134B FE 8C       3601     CP      THEN_EX_
jp nz,$040b9e    ; jp nz,$040b96    | 04134D 041345 || 04134D C2 9E 0B 04 3602     JP      NZ,XEQ
inc iy           ; inc iy           | 041351 041349 || 041351 FD 23       3603     INC     IY              ;SKIP "THEN"
call $040a78     ; call $040a70     | 041353 04134B || 041353 CD 78 0A 04 3604  IF1:   CALL    NXT
cp $8d           ; cp $8d           | 041357 04134F || 041357 FE 8D       3605     CP      LINO_EX
jp nz,$040b9e    ; jp nz,$040b96    | 041359 041351 || 041359 C2 9E 0B 04 3606     JP      NZ,XEQ          ;STATEMENT FOLLOWS
jp $040f33       ; jp $040f2b       | 04135D 041355 || 04135D C3 33 0F 04 3607     JP      GOTO_EX            ;LINE NO. FOLLOWS
ld a,(iy)        ; ld a,(iy)        | 041361 041359 || 041361 FD 7E 00    3608  IFNOT:   LD      A,(IY)
cp $0d           ; cp $0d           | 041364 04135C || 041364 FE 0D       3609     CP      CR
inc iy           ; inc iy           | 041366 04135E || 041366 FD 23       3610     INC     IY
jp z,$040b9a     ; jp z,$040b92     | 041368 041360 || 041368 CA 9A 0B 04 3611     JP      Z,XEQ0          ;END OF LINE
cp $8b           ; cp $8b           | 04136C 041364 || 04136C FE 8B       3612     CP      ELSE_EX_
jr nz,$-$0d      ; jr nz,$-$0d      | 04136E 041366 || 04136E 20 F1       3613     JR      NZ,IFNOT
jr $-$1d         ; jr $-$1d         | 041370 041368 || 041370 18 E1       3614     JR      IF1
call $04440a     ; call $0443cc     | 041372 04136A || 041372 CD 0A 44 04 3618  CLS:  CALL    CLRSCN
xor a            ; xor a            | 041376 04136E || 041376 AF          3619     XOR     A
ld ($044d3d),a   ; ld ($044d3d),a   | 041377 04136F || 041377 32 3D 4D 04 3620     LD      (COUNT),A
jp $040b9e       ; jp $040b96       | 04137B 041373 || 04137B C3 9E 0B 04 3621     JP      XEQ
call $043dc8     ; call $043d90     | 04137F 041377 || 04137F CD C8 3D 04 3625  STOP:   CALL    TELL
dec c            ; dec c            | 041383 04137B || 041383 0D          3626     DB CR
ld a,(bc)        ; ld a,(bc)        | 041384 04137C || 041384 0A          3627     DB LF
jp m,$e6cd00     ; jp m,$aecd00     | 041385 04137D || 041385 FA          3628     DB TSTOP
add hl,sp        ;                  | 041389        || add hl,sp                      ; 041381
inc b            ;                  | 04138A        || inc b                          ; 041382
call $043a1a     ; call $0439e2     | 04138B 041383 || 04138B CD 1A 3A 04 3631     CALL    SAYLN
call $04397f     ; call $043947     | 04138F 041387 || 04138F CD 7F 39 04 3632     CALL    CRLF
jp $0430b8       ; jp $043080       | 041393 04138B || 041393 C3 B8 30 04 3633     JP      CLOOP
call $043dba     ; call $043d82     | 041397 04138F || 041397 CD BA 3D 04 3637  REPOR:   CALL    REPORT
jp $040b9e       ; jp $040b96       | 04139B 041393 || 04139B C3 9E 0B 04 3638     JP      XEQ
call $0438ae     ; call $043876     | 04139F 041397 || 04139F CD AE 38 04 3642  CLR:   CALL    CLEAR
ld hl,($044d14)  ; ld hl,($044d14)  | 0413A3 04139B || 0413A3 2A 14 4D 04 3643     LD      HL,(PAGE_)
jr $+$1b         ; jr $+$1b         | 0413A7 04139F || 0413A7 18 19       3644     JR      RESTR1
ld hl,($044d14)  ; ld hl,($044d14)  | 0413A9 0413A1 || 0413A9 2A 14 4D 04 3648  RESTOR_EX:   LD      HL,(PAGE_)
call $0417ac     ; call $04177a     | 0413AD 0413A5 || 0413AD CD AC 17 04 3649     CALL    TERMQ
jr z,$+$11       ; jr z,$+$11       | 0413B1 0413A9 || 0413B1 28 0F       3650     JR      Z,RESTR1
call $04032a     ; call $040325     | 0413B3 0413AB || 0413B3 CD 2A 03 04 3651     CALL    ITEMI
exx              ; exx              | 0413B7 0413AF || 0413B7 D9          3652     EXX
call $0439c7     ; call $04398f     | 0413B8 0413B0 || 0413B8 CD C7 39 04 3653     CALL    FINDL           ;SEARCH FOR LINE
ld a,$29         ; ld a,$29         | 0413BC 0413B4 || 0413BC 3E 29       3654     LD      A,41
jp nz,$04133a    ; jp nz,$041332    | 0413BE 0413B6 || 0413BE C2 3A 13 04 3655     JP      NZ,ERROR4       ;"No such line"
ld a,$dc         ; ld a,$dc         | 0413C2 0413BA || 0413C2 3E DC       3656  RESTR1:   LD      A,DATA_EX_
call $041880     ; call $04184e     | 0413C4 0413BC || 0413C4 CD 80 18 04 3657     CALL    SEARCH_EX
ld ($044d31),hl  ; ld ($044d31),hl  | 0413C8 0413C0 || 0413C8 22 31 4D 04 3658     LD      (DATPTR),HL
jp $040b9e       ; jp $040b96       | 0413CC 0413C4 || 0413CC C3 9E 0B 04 3659     JP      XEQ
call $0418b8     ; call $041886     | 0413D0 0413C8 || 0413D0 CD B8 18 04 3667  PTR_EX:   CALL    CHANEL
call $0417c2     ; call $041790     | 0413D4 0413CC || 0413D4 CD C2 17 04 3668     CALL    EQUALS
ld a,e           ; ld a,e           | 0413D8 0413D0 || 0413D8 7B          3669     LD      A,E
push af          ; push af          | 0413D9 0413D1 || 0413D9 F5          3670     PUSH    AF
call $04030f     ; call $04030a     | 0413DA 0413D2 || 0413DA CD 0F 03 04 3671     CALL    EXPRI
push hl          ; push hl          | 0413DE 0413D6 || 0413DE E5          3672     PUSH    HL
exx              ; exx              | 0413DF 0413D7 || 0413DF D9          3673     EXX
pop de           ; pop de           | 0413E0 0413D8 || 0413E0 D1          3674     POP     DE
pop af           ; pop af           | 0413E1 0413D9 || 0413E1 F1          3675     POP     AF
call $0443b0     ; call $044367     | 0413E2 0413DA || 0413E2 CD B0 43 04 3676     CALL    PUTPTR
jp $040b9e       ; jp $040b96       | 0413E6 0413DE || 0413E6 C3 9E 0B 04 3677     JP      XEQ
call $0417c2     ; call $041790     | 0413EA 0413E2 || 0413EA CD C2 17 04 3679  PAGEV_EX:   CALL    EQUALS
call $04030f     ; call $04030a     | 0413EE 0413E6 || 0413EE CD 0F 03 04 3680     CALL    EXPRI
exx              ; exx              | 0413F2 0413EA || 0413F2 D9          3681     EXX
ld l,$00         ; ld l,$00         | 0413F3 0413EB || 0413F3 2E 00       3682     LD      L,0
ld ($044d14),hl  ; ld ($044d14),hl  | 0413F5 0413ED || 0413F5 22 14 4D 04 3683     LD      (PAGE_),HL
jp $040b9e       ; jp $040b96       | 0413F9 0413F1 || 0413F9 C3 9E 0B 04 3684     JP      XEQ
cp $24           ; cp $24           | 0413FD 0413F5 || 0413FD FE 24       3686  TIMEV_EX:   CP      '$'
jr z,$+$15       ; jr z,$+$15       | 0413FF 0413F7 || 0413FF 28 13       3687     JR      Z,TIMEVS_EX
call $0417c2     ; call $041790     | 041401 0413F9 || 041401 CD C2 17 04 3688     CALL    EQUALS
call $04030f     ; call $04030a     | 041405 0413FD || 041405 CD 0F 03 04 3689     CALL    EXPRI
push hl          ; push hl          | 041409 041401 || 041409 E5          3690     PUSH    HL
exx              ; exx              | 04140A 041402 || 04140A D9          3691     EXX
pop de           ; pop de           | 04140B 041403 || 04140B D1          3692     POP     DE
call $043ecf     ; call $043e97     | 04140C 041404 || 04140C CD CF 3E 04 3693     CALL    PUTIME
jp $040b9e       ; jp $040b96       | 041410 041408 || 041410 C3 9E 0B 04 3694     JP      XEQ
inc iy           ; inc iy           | 041414 04140C || 041414 FD 23       3696  TIMEVS_EX:   INC     IY              ;SKIP '$'
call $0417c2     ; call $041790     | 041416 04140E || 041416 CD C2 17 04 3697     CALL    EQUALS
call $04031a     ; call $040315     | 04141A 041412 || 04141A CD 1A 03 04 3698     CALL    EXPRS
call $044984     ; call $0443b7     | 04141E 041416 || 04141E CD 84 49 04 3699     CALL    PUTIMS
jp $040b9e       ; jp $040b96       | 041422 04141A || 041422 C3 9E 0B 04 3700     JP      XEQ
call $0417c2     ; call $041790     | 041426 04141E || 041426 CD C2 17 04 3702  LOMEMV_EX:   CALL    EQUALS
call $04030f     ; call $04030a     | 04142A 041422 || 04142A CD 0F 03 04 3703     CALL    EXPRI
call $0438ae     ;                  | 04142E        || 04142E CD AE 38 04 3704     CALL    CLEAR
exx              ;                  | 041432        || 041432 D9          3705     EXX
ld ($044d1a),hl  ;                  | 041433        || 041433 22 1A 4D 04 3706     LD      (LOMEM),HL
ld ($044d1d),hl  ;                  | 041437        || 041437 22 1D 4D 04 3707     LD      (FREE),HL
jp $040b9e       ;                  | 04143B        || 04143B C3 9E 0B 04 3708     JP      XEQ
call $0417c2     ;                  | 04143F        || 04143F CD C2 17 04 3710  HIMEMV_EX:   CALL    EQUALS   ; Check for '=' and throw an error if not found
call $04030f     ;                  | 041443        || 041443 CD 0F 03 04 3711     CALL    EXPRI   ; Load the expression into registers
ld a,l           ;                  | 041447        || 041447 7D          3712     LD A,L   ;  A: The MSB of the 24-bit value
exx              ;                  | 041448        || 041448 D9          3713     EXX    ; HL: The LSW of the 24-bit value
ld ($044d4a),hl  ;                  | 041449        || 041449 22 4A 4D 04 3714     LD (R0),HL
ld ($044d4c),a   ;                  | 04144D        || 04144D 32 4C 4D 04 3715     LD (R0+2),A
ld hl,($044d1d)  ;                  | 041451        || 041451 2A 1D 4D 04 3716     LD HL,(FREE)
ld de,$000100    ;                  | 041455        || 041455 11 00 01 00 3717     LD      DE,256
add hl,de        ;                  | 041459        || 041459 19          3718     ADD HL,DE
ex de,hl         ;                  | 04145A        || 04145A EB          3719     EX DE,HL   ; DE: FREE + 256
ld hl,($044d4a)  ;                  | 04145B        || 04145B 2A 4A 4D 04 3720     LD HL,(R0)   ; HL: The passed expression
xor a            ; xor a            | 04145F 041446 || 04145F AF          3721     XOR     A
sbc hl,de        ; sbc hl,de        | 041460 041447 || 041460 ED 52       3722     SBC     HL,DE
add hl,de        ; add hl,de        | 041462 041449 || 041462 19          3723     ADD     HL,DE   ; Do a bounds check
jp c,$043798     ; jp c,$043760     | 041463 04144A || 041463 DA 98 37 04 3724     JP      C,ERROR_          ; Throw the error: "No room"
ld de,($044d20)  ; ld de,($044d20)  | 041467 04144E || 041467 ED 5B 20 4D 3725     LD      DE,(HIMEM)
ld ($044d20),hl  ; ld ($044d20),hl  | 04146C 041453 || 04146C 22 20 4D 04 3726     LD      (HIMEM),HL
ex de,hl         ; ex de,hl         | 041470 041457 || 041470 EB          3727     EX      DE,HL
sbc hl,sp        ; sbc hl,sp        | 041471 041458 || 041471 ED 72       3728     SBC     HL,SP   ; Adjust the stack
jp nz,$040b9e    ; jp nz,$040b96    | 041473 04145A || 041473 C2 9E 0B 04 3729     JP      NZ,XEQ
ex de,hl         ; ex de,hl         | 041477 04145E || 041477 EB          3730     EX      DE,HL
ld sp,hl         ; ld sp,hl         | 041478 04145F || 041478 F9          3731     LD      SP,HL            ; Load the SP
jp $040b9e       ; jp $040b96       | 041479 041460 || 041479 C3 9E 0B 04 3732     JP      XEQ
call $04030f     ; call $04030a     | 04147D 041464 || 04147D CD 0F 03 04 3736  WIDTHV:   CALL    EXPRI
exx              ; exx              | 041481 041468 || 041481 D9          3737     EXX
ld a,l           ; ld a,l           | 041482 041469 || 041482 7D          3738     LD      A,L
ld ($044d3e),a   ; ld ($044d3e),a   | 041483 04146A || 041483 32 3E 4D 04 3739     LD      (WIDTH),A
jp $040b9e       ; jp $040b96       | 041487 04146E || 041487 C3 9E 0B 04 3740     JP      XEQ
inc iy           ; inc iy           | 04148B 041472 || 04148B FD 23       3746  TRACE_EX:   INC     IY
ld hl,$000000    ; ld hl,$000000    | 04148D 041474 || 04148D 21 00 00 00 3747     LD      HL,0
cp $ee           ; cp $ee           | 041491 041478 || 041491 FE EE       3748     CP      TON
jr z,$+$0d       ; jr z,$+$0d       | 041493 04147A || 041493 28 0B       3749     JR      Z,TRACE0
cp $87           ; cp $87           | 041495 04147C || 041495 FE 87       3750     CP      OFF_
jr z,$+$0a       ; jr z,$+$0a       | 041497 04147E || 041497 28 08       3751     JR      Z,TRACE1
dec iy           ; dec iy           | 041499 041480 || 041499 FD 2B       3752     DEC     IY
call $04030f     ; call $04030a     | 04149B 041482 || 04149B CD 0F 03 04 3753     CALL    EXPRI
exx              ; exx              | 04149F 041486 || 04149F D9          3754     EXX
dec hl           ; dec hl           | 0414A0 041487 || 0414A0 2B          3755  TRACE0:   DEC     HL
ld ($044d26),hl  ; ld ($044d26),hl  | 0414A1 041488 || 0414A1 22 26 4D 04 3756  TRACE1:   LD      (TRACEN),HL
jp $040b9e       ; jp $040b96       | 0414A5 04148C || 0414A5 C3 9E 0B 04 3757     JP      XEQ
ld ix,$044b00    ;                  | 0414A9        || 0414A9 DD 21 00 4B 3761  VDU:   LD IX,BUFFER  ; Storage for the VDU stream
push ix          ;                  | 0414AE        || 0414AE DD E5       3762  VDU1:   PUSH IX
call $04030f     ;                  | 0414B0        || 0414B0 CD 0F 03 04 3763     CALL    EXPRI   ; Fetch the VDU character
pop ix           ;                  | 0414B4        || 0414B4 DD E1       3764     POP IX
exx              ;                  | 0414B6        || 0414B6 D9          3765     EXX
ld (ix),l        ;                  | 0414B7        || 0414B7 DD 75 00    3766     LD (IX+0),L  ; Write out the character to the buffer
inc ix           ;                  | 0414BA        || 0414BA DD 23       3767     INC IX
ld a,(iy)        ;                  | 0414BC        || 0414BC FD 7E 00    3768     LD      A,(IY)   ;  A: The separator character
cp $2c           ;                  | 0414BF        || 0414BF FE 2C       3769     CP      ','   ; Is it a comma?
jr z,$+$0b       ;                  | 0414C1        || 0414C1 28 09       3770     JR      Z,VDU2   ; Yes, so it's a byte value - skip to next expression
cp $3b           ;                  | 0414C3        || 0414C3 FE 3B       3771     CP      ';'   ; Is it a semicolon?
jr nz,$+$09      ;                  | 0414C5        || 0414C5 20 07       3772     JR      NZ,VDU3   ; No, so skip to the next expression
ld (ix),h        ;                  | 0414C7        || 0414C7 DD 74 00    3773     LD (IX+0),H  ; Write out the high byte to the buffer
inc ix           ;                  | 0414CA        || 0414CA DD 23       3774     INC IX
inc iy           ;                  | 0414CC        || 0414CC FD 23       3775  VDU2:   INC     IY   ; Skip to the next character
call $0417ac     ;                  | 0414CE        || 0414CE CD AC 17 04 3776  VDU3:   CALL    TERMQ   ; Skip past white space
jr nz,$-$24      ;                  | 0414D2        || 0414D2 20 DA       3777     JR      NZ,VDU1   ; Loop unti reached end of the VDU command
ld a,ixl         ;                  | 0414D4        || 0414D4 DD 7D       3778     LD A,IXL   ;  A: Number of bytes to write out
or a             ;                  | 0414D6        || 0414D6 B7          3779     OR A
jr z,$+$0d       ;                  | 0414D7        || 0414D7 28 0B       3780     JR  Z,VDU4   ; No bytes to write, so skip the next bit
ld hl,$044b00    ;                  | 0414D9        || 0414D9 21 00 4B 04 3781     LD HL,BUFFER  ; HL: Start of stream
ld bc,$000000    ;                  | 0414DD        || 0414DD 01 00 00 00 3782     LD BC,0
ld c,a           ;                  | 0414E1        || 0414E1 4F          3783     LD C,A   ; BC: Number of bytes to write out
rst.lil $18      ;                  | 0414E2        || 0414E2 5B DF       3784     RST.LIL 18h   ; Output the buffer to MOS
jp $040b9e       ; jp $040b96       | 0414E4 0414B2 || 0414E4 C3 9E 0B 04 3785  VDU4:   JP      XEQ
call $0418b8     ; call $041886     | 0414E8 0414B6 || 0414E8 CD B8 18 04 3789  CLOSE:   CALL    CHANEL   ; Fetch the channel number
call $044374     ; call $04432b     | 0414EC 0414BA || 0414EC CD 74 43 04 3790     CALL    OSSHUT   ; Close the channel
jp $040b9e       ; jp $040b96       | 0414F0 0414BE || 0414F0 C3 9E 0B 04 3791     JP      XEQ
call $0418b8     ; call $041886     | 0414F4 0414C2 || 0414F4 CD B8 18 04 3795  BPUT:   CALL    CHANEL           ; Fetch the channel number
push de          ; push de          | 0414F8 0414C6 || 0414F8 D5          3796     PUSH    DE   ; DE: Channel number
call $040a2a     ; call $040a22     | 0414F9 0414C7 || 0414F9 CD 2A 0A 04 3797     CALL    COMMA   ; Skip to the next expression
call $04030f     ; call $04030a     | 0414FD 0414CB || 0414FD CD 0F 03 04 3798     CALL    EXPRI            ; Feth the data
exx              ; exx              | 041501 0414CF || 041501 D9          3799     EXX
ld a,l           ; ld a,l           | 041502 0414D0 || 041502 7D          3800     LD      A,L   ; A: The byte to write
pop de           ; pop de           | 041503 0414D1 || 041503 D1          3801     POP     DE
call $044384     ; call $04433b     | 041504 0414D2 || 041504 CD 84 43 04 3802     CALL    OSBPUT   ; Write the byte out
jp $040b9e       ; jp $040b96       | 041508 0414D6 || 041508 C3 9E 0B 04 3803     JP      XEQ
call $04030f     ; call $04030a     | 04150C 0414DA || 04150C CD 0F 03 04 3816  CALL_:   CALL    EXPRI            ; Fetch the address
ld a,l           ; ld a,l           | 041510 0414DE || 041510 7D          3817     LD A,L   ;  A: MSB of address
exx              ; exx              | 041511 0414DF || 041511 D9          3818     EXX
ld ($044d4a),hl  ; ld ($044d4a),hl  | 041512 0414E0 || 041512 22 4A 4D 04 3819     LD (R0+0),HL  ; HL: LSW of address
ld ($044d4c),a   ; ld ($044d4c),a   | 041516 0414E4 || 041516 32 4C 4D 04 3820     LD (R0+2),A
ld b,$00         ; ld b,$00         | 04151A 0414E8 || 04151A 06 00       3821     LD      B,0              ;  B: The parameter counter
ld de,$044b00    ; ld de,$044b00    | 04151C 0414EA || 04151C 11 00 4B 04 3822     LD      DE,BUFFER        ; DE: Vector
call $040a78     ; call $040a70     | 041520 0414EE || 041520 CD 78 0A 04 3824  CALL1:   CALL    NXT   ; Skip whitespace
cp $2c           ; cp $2c           | 041524 0414F2 || 041524 FE 2C       3825     CP      ','   ; Check for comma
jr nz,$+$1d      ; jr nz,$+$1d      | 041526 0414F4 || 041526 20 1B       3826     JR      NZ,CALL2  ; If no more parameters, then jump here
inc iy           ; inc iy           | 041528 0414F6 || 041528 FD 23       3827     INC     IY   ; Skip to the next character
inc b            ; inc b            | 04152A 0414F8 || 04152A 04          3828     INC     B   ; Increment the parameter count
call $040a78     ; call $040a70     | 04152B 0414F9 || 04152B CD 78 0A 04 3829     CALL    NXT   ; Skip whitespace
push bc          ; push bc          | 04152F 0414FD || 04152F C5          3830     PUSH    BC
push de          ; push de          | 041530 0414FE || 041530 D5          3831     PUSH    DE
call $040c96     ; call $040c8e     | 041531 0414FF || 041531 CD 96 0C 04 3832     CALL    VAR_
pop de           ; pop de           | 041535 041503 || 041535 D1          3833     POP     DE
pop bc           ; pop bc           | 041536 041504 || 041536 C1          3834     POP     BC
inc de           ; inc de           | 041537 041505 || 041537 13          3835     INC     DE
ld (de),a        ; ld (de),a        | 041538 041506 || 041538 12          3836     LD      (DE),A   ; Save the parameter type
inc de           ; inc de           | 041539 041507 || 041539 13          3837     INC     DE
ex de,hl         ; ex de,hl         | 04153A 041508 || 04153A EB          3838     EX      DE,HL
ld (hl),de       ; ld (hl),de       | 04153B 041509 || 04153B ED 1F       3839     LD (HL),DE   ; Save the parameter address (3 bytes)
inc hl           ; inc hl           | 04153D 04150B || 04153D 23          3840     INC HL
inc hl           ; inc hl           | 04153E 04150C || 04153E 23          3841     INC HL
inc hl           ; inc hl           | 04153F 04150D || 04153F 23          3842     INC HL
ex de,hl         ; ex de,hl         | 041540 04150E || 041540 EB          3843     EX      DE,HL
jr $-$21         ; jr $-$21         | 041541 04150F || 041541 18 DD       3844     JR      CALL1
ld a,b           ; ld a,b           | 041543 041511 || 041543 78          3846  CALL2:   LD      A,B
ld ($044b00),a   ; ld ($044b00),a   | 041544 041512 || 041544 32 00 4B 04 3847     LD      (BUFFER),A       ; Save the parameter count
ld hl,($044d4a)  ; ld hl,($044d4a)  | 041548 041516 || 041548 2A 4A 4D 04 3848     LD HL,(R0)   ; HL: Address of the code
call $041566     ; call $041534     | 04154C 04151A || 04154C CD 66 15 04 3849     CALL    USR1   ; And call it
jp $040b9e       ; jp $040b96       | 041550 04151E || 041550 C3 9E 0B 04 3850     JP      XEQ
call $04032a     ; call $040325     | 041554 041522 || 041554 CD 2A 03 04 3854  USR:   CALL    ITEMI   ; Evaluate the expression
ld a,l           ; ld a,l           | 041558 041526 || 041558 7D          3855     LD A,L   ;  A: MSB of address
exx              ; exx              | 041559 041527 || 041559 D9          3856     EXX
ld ($044d4a),hl  ; ld ($044d4a),hl  | 04155A 041528 || 04155A 22 4A 4D 04 3857     LD (R0+0),HL  ; HL: LSW of address
ld ($044d4c),a   ; ld ($044d4c),a   | 04155E 04152C || 04155E 32 4C 4D 04 3858     LD (R0+2),A
ld hl,($044d4a)  ; ld hl,($044d4a)  | 041562 041530 || 041562 2A 4A 4D 04 3859     LD HL,(R0)   ; Get the 24-bit address in HL
push hl          ; push hl          | 041566 041534 || 041566 E5          3861  USR1:   PUSH    HL               ; Address on stack
ex (sp),iy       ; ex (sp),iy       | 041567 041535 || 041567 FD E3       3862     EX      (SP),IY
inc h            ; inc h            | 041569 041537 || 041569 24          3863     INC     H                ; Check for PAGE &00FFxx
or h             ; or h             | 04156A 041538 || 04156A B4          3864     OR H
ld hl,$0415d5    ; ld hl,$0415a3    | 04156B 041539 || 04156B 21 D5 15 04 3865     LD      HL,USR2          ; Return address
push hl          ; push hl          | 04156F 04153D || 04156F E5          3866     PUSH    HL
ld ix,$044c00    ; ld ix,$044c00    | 041570 04153E || 041570 DD 21 00 4C 3867     LD      IX,STAVAR
call z,$04433a   ; call z,$0442f1   | 041575 041543 || 041575 CC 3A 43 04 3868     CALL    Z,OSCALL         ; Intercept &00FFxx
ld c,(ix+$18)    ; ld c,(ix+$18)    | 041579 041547 || 041579 DD 4E 18    3870     LD      C, (IX+24)  ; F%
push bc          ; push bc          | 04157C 04154A || 04157C C5          3871     PUSH    BC
ld a,(ix+$08)    ; ld a,(ix+$08)    | 04157D 04154B || 04157D DD 7E 08    3873     LD A, (IX+8)  ; B% -> MSW
ld ($044d4b),a   ; ld ($044d4b),a   | 041580 04154E || 041580 32 4B 4D 04 3874     LD (R0+1), A
ld a,(ix+$09)    ; ld a,(ix+$09)    | 041584 041552 || 041584 DD 7E 09    3875     LD A, (IX+9)
ld ($044d4c),a   ; ld ($044d4c),a   | 041587 041555 || 041587 32 4C 4D 04 3876     LD (R0+2), A
ld a,(ix+$0c)    ; ld a,(ix+$0c)    | 04158B 041559 || 04158B DD 7E 0C    3877     LD A, (IX+12)  ; C% -> LSB
ld ($044d4a),a   ; ld ($044d4a),a   | 04158E 04155C || 04158E 32 4A 4D 04 3878     LD (R0+0), A
ld bc,($044d4a)  ; ld bc,($044d4a)  | 041592 041560 || 041592 ED 4B 4A 4D 3879     LD BC, (R0)
ld a,(ix+$10)    ; ld a,(ix+$10)    | 041597 041565 || 041597 DD 7E 10    3881     LD A, (IX+16)  ; D% -> MSW
ld ($044d4b),a   ; ld ($044d4b),a   | 04159A 041568 || 04159A 32 4B 4D 04 3882     LD (R0+1), A
ld a,(ix+$11)    ; ld a,(ix+$11)    | 04159E 04156C || 04159E DD 7E 11    3883     LD A, (IX+17)
ld ($044d4c),a   ; ld ($044d4c),a   | 0415A1 04156F || 0415A1 32 4C 4D 04 3884     LD (R0+2), A
ld a,(ix+$14)    ; ld a,(ix+$14)    | 0415A5 041573 || 0415A5 DD 7E 14    3885     LD A, (IX+20)  ; E% -> LSB
ld ($044d4a),a   ; ld ($044d4a),a   | 0415A8 041576 || 0415A8 32 4A 4D 04 3886     LD (R0+0), A
ld de,($044d4a)  ; ld de,($044d4a)  | 0415AC 04157A || 0415AC ED 5B 4A 4D 3887     LD DE, (R0)
ld a,(ix+$20)    ; ld a,(ix+$20)    | 0415B1 04157F || 0415B1 DD 7E 20    3889     LD A, (IX+32)  ; H% -> MSW
ld ($044d4b),a   ; ld ($044d4b),a   | 0415B4 041582 || 0415B4 32 4B 4D 04 3890     LD (R0+1), A
ld a,(ix+$21)    ; ld a,(ix+$21)    | 0415B8 041586 || 0415B8 DD 7E 21    3891     LD A, (IX+33)
ld ($044d4c),a   ; ld ($044d4c),a   | 0415BB 041589 || 0415BB 32 4C 4D 04 3892     LD (R0+2), A
ld a,(ix+$30)    ; ld a,(ix+$30)    | 0415BF 04158D || 0415BF DD 7E 30    3893     LD A, (IX+48)  ; L% -> LSB
ld ($044d4a),a   ; ld ($044d4a),a   | 0415C2 041590 || 0415C2 32 4A 4D 04 3894     LD (R0+0), A
ld hl,($044d4a)  ; ld hl,($044d4a)  | 0415C6 041594 || 0415C6 2A 4A 4D 04 3895     LD HL, (R0)
pop af           ; pop af           | 0415CA 041598 || 0415CA F1          3897     POP     AF   ; F%
ld a,(ix+$04)    ; ld a,(ix+$04)    | 0415CB 041599 || 0415CB DD 7E 04    3898     LD      A, (IX+4)         ; A%
ld ix,$044b00    ; ld ix,$044b00    | 0415CE 04159C || 0415CE DD 21 00 4B 3900     LD      IX,BUFFER
jp (iy)          ; jp (iy)          | 0415D3 0415A1 || 0415D3 FD E9       3901     JP      (IY)             ; Off to user routine
pop iy           ; pop iy           | 0415D5 0415A3 || 0415D5 FD E1       3903  USR2:   POP     IY
xor a            ; xor a            | 0415D7 0415A5 || 0415D7 AF          3904     XOR     A
ld c,a           ; ld c,a           | 0415D8 0415A6 || 0415D8 4F          3905     LD      C,A
ret              ; ret              | 0415D9 0415A7 || 0415D9 C9          3906     RET
call $04030f     ; call $04030a     | 0415DA 0415A8 || 0415DA CD 0F 03 04 3910  PUT:   CALL    EXPRI           ;PORT ADDRESS
exx              ; exx              | 0415DE 0415AC || 0415DE D9          3911     EXX
push hl          ; push hl          | 0415DF 0415AD || 0415DF E5          3912     PUSH    HL
call $040a2a     ; call $040a22     | 0415E0 0415AE || 0415E0 CD 2A 0A 04 3913     CALL    COMMA
call $04030f     ; call $04030a     | 0415E4 0415B2 || 0415E4 CD 0F 03 04 3914     CALL    EXPRI           ;DATA
exx              ; exx              | 0415E8 0415B6 || 0415E8 D9          3915     EXX
pop bc           ; pop bc           | 0415E9 0415B7 || 0415E9 C1          3916     POP     BC
out (bc),l       ; out (bc),l       | 0415EA 0415B8 || 0415EA ED 69       3917     OUT     (C),L           ;OUTPUT TO PORT BC
jp $040b9e       ; jp $040b96       | 0415EC 0415BA || 0415EC C3 9E 0B 04 3918     JP      XEQ
call $043a72     ; call $043a3a     | 0415F0 0415BE || 0415F0 CD 72 3A 04 3927  ASSIGN:   CALL    GETVAR           ; Try to get the variable
ret c            ; ret c            | 0415F4 0415C2 || 0415F4 D8          3928     RET     C                ; Return with C if it is an illegal variable
call nz,$043a61  ; call nz,$043a29  | 0415F5 0415C3 || 0415F5 C4 61 3A 04 3929     CALL    NZ,PUTVAR  ; If it does not exist, then create the variable
or a             ; or a             | 0415F9 0415C7 || 0415F9 B7          3930     OR      A
ret m            ; ret m            | 0415FA 0415C8 || 0415FA F8          3931     RET     M                ; Return if type is string (81h)
push af          ; push af          | 0415FB 0415C9 || 0415FB F5          3932     PUSH    AF               ; It's a numeric type from this point on
call $0417c2     ; call $041790     | 0415FC 0415CA || 0415FC CD C2 17 04 3933     CALL    EQUALS   ; Check if the variable is followed by an '=' symbol; this will throw a 'Mistake' error if not
push hl          ; push hl          | 041600 0415CE || 041600 E5          3934     PUSH    HL
call $040307     ; call $040302     | 041601 0415CF || 041601 CD 07 03 04 3935     CALL    EXPRN
pop ix           ; pop ix           | 041605 0415D3 || 041605 DD E1       3936     POP     IX
pop af           ; pop af           | 041607 0415D5 || 041607 F1          3937     POP     AF
bit 0,a          ; bit 0,a          | 041608 0415D6 || 041608 CB 47       3938  STORE:   BIT     0,A
jr z,$+$15       ; jr z,$+$15       | 04160A 0415D8 || 04160A 28 13       3939     JR      Z,STOREI
cp a             ; cp a             | 04160C 0415DA || 04160C BF          3940     CP      A                ; Set the variable to 0
ld (ix+$04),c    ; ld (ix+$04),c    | 04160D 0415DB || 04160D DD 71 04    3941  STORE5:   LD      (IX+4),C
exx              ; exx              | 041610 0415DE || 041610 D9          3942  STORE4:   EXX
ld (ix),l        ; ld (ix),l        | 041611 0415DF || 041611 DD 75 00    3943     LD      (IX+0),L
ld (ix+$01),h    ; ld (ix+$01),h    | 041614 0415E2 || 041614 DD 74 01    3944     LD      (IX+1),H
exx              ; exx              | 041617 0415E5 || 041617 D9          3945     EXX
ld (ix+$02),l    ; ld (ix+$02),l    | 041618 0415E6 || 041618 DD 75 02    3946     LD      (IX+2),L
ld (ix+$03),h    ; ld (ix+$03),h    | 04161B 0415E9 || 04161B DD 74 03    3947     LD      (IX+3),H
ret              ; ret              | 04161E 0415EC || 04161E C9          3948     RET
push af          ; push af          | 04161F 0415ED || 04161F F5          3949  STOREI:   PUSH    AF
inc c            ; inc c            | 041620 0415EE || 041620 0C          3950     INC     C               ;SPEED - & PRESERVE F'
dec c            ; dec c            | 041621 0415EF || 041621 0D          3951     DEC     C               ; WHEN CALLED BY FNEND0
call nz,$040667  ; call nz,$040662  | 041622 0415F0 || 041622 C4 67 06 04 3952     CALL    NZ,SFIX         ;CONVERT TO INTEGER
pop af           ; pop af           | 041626 0415F4 || 041626 F1          3953     POP     AF
cp $04           ; cp $04           | 041627 0415F5 || 041627 FE 04       3954     CP      4
jr z,$-$19       ; jr z,$-$19       | 041629 0415F7 || 041629 28 E5       3955     JR      Z,STORE4
cp a             ; cp a             | 04162B 0415F9 || 04162B BF          3956     CP      A               ;SET ZERO
exx              ; exx              | 04162C 0415FA || 04162C D9          3957  STORE1:   EXX
ld (ix),l        ; ld (ix),l        | 04162D 0415FB || 04162D DD 75 00    3958     LD      (IX+0),L
exx              ; exx              | 041630 0415FE || 041630 D9          3959     EXX
ret              ; ret              | 041631 0415FF || 041631 C9          3960     RET
ld hl,$044a00    ; ld hl,$044a00    | 041632 041600 || 041632 21 00 4A 04 3967  STACCS:   LD      HL,ACCS   ; HL: Pointer to the string accumulator
rra              ; rra              | 041636 041604 || 041636 1F          3983  STORES:   RRA    ; Rotate right to shift bit 0 into carry
jr nc,$+$5f      ; jr nc,$+$5f      | 041637 041605 || 041637 30 5D       3984     JR      NC,STORS3  ; It's a fixed/static string, so skip the next bit
push hl          ; push hl          | 041639 041607 || 041639 E5          3985     PUSH    HL   ; Stack ACCS
exx              ; exx              | 04163A 041608 || 04163A D9          3989     EXX    ; This block was a call to LOAD4
ld l,(ix)        ; ld l,(ix)        | 04163B 041609 || 04163B DD 6E 00    3990     LD      L,(IX+0)  ; The length of the string currently stored in the allocated space
ld h,(ix+$01)    ; ld h,(ix+$01)    | 04163E 04160C || 04163E DD 66 01    3991     LD      H,(IX+1)  ; The maximum original string length
exx              ; exx              | 041641 04160F || 041641 D9          3992     EXX
ld hl,(ix+$02)   ; ld hl,(ix+$02)   | 041642 041610 || 041642 DD 27 02    3993     LD HL,(IX+2)  ; Address of the string (24-bit)
ld a,e           ; ld a,e           | 041645 041613 || 041645 7B          3995     LD      A,E              ; E : Length of string in ACCS (as passed to the function)
exx              ; exx              | 041646 041614 || 041646 D9          3996     EXX
ld l,a           ; ld l,a           | 041647 041615 || 041647 6F          3997     LD      L,A   ; L': Length of string currently stored on the stack
ld a,h           ; ld a,h           | 041648 041616 || 041648 7C          3998     LD      A,H              ; H': The maximum (original) string length
exx              ; exx              | 041649 041617 || 041649 D9          3999     EXX
cp e             ; cp e             | 04164A 041618 || 04164A BB          4000     CP      E   ; Check whether there is enough room for the string in ACCS in the allocated space
jr nc,$+$19      ; jr nc,$+$19      | 04164B 041619 || 04164B 30 17       4001     JR      NC,STORS1        ; Yes there is, so skip the next bit
exx              ; exx              | 04164D 04161B || 04164D D9          4007     EXX
ld h,l           ; ld h,l           | 04164E 04161C || 04164E 65          4008     LD      H,L   ; H: Set the maximum string length to the string length
exx              ; exx              | 04164F 04161D || 04164F D9          4009     EXX
push hl          ; push hl          | 041650 04161E || 041650 E5          4010     PUSH    HL
ld bc,$000000    ; ld bc,$000000    | 041651 04161F || 041651 01 00 00 00 4011     LD BC, 0
ld c,a           ; ld c,a           | 041655 041623 || 041655 4F          4012     LD      C,A   ; BC: The maximum (original) string length
add hl,bc        ; add hl,bc        | 041656 041624 || 041656 09          4013     ADD     HL,BC   ; Work out whether this is the last string in memory
ld bc,($044d1d)  ; ld bc,($044d1d)  | 041657 041625 || 041657 ED 4B 1D 4D 4014     LD      BC,(FREE)
sbc hl,bc        ; sbc hl,bc        | 04165C 04162A || 04165C ED 42       4015     SBC     HL,BC   ; Is string last?
pop hl           ; pop hl           | 04165E 04162C || 04165E E1          4016     POP     HL
scf              ; scf              | 04165F 04162D || 04165F 37          4017     SCF
jr z,$+$04       ; jr z,$+$04       | 041660 04162E || 041660 28 02       4018     JR      Z,STORS1
push bc          ; push bc          | 041662 041630 || 041662 C5          4020     push bc
pop hl           ; pop hl           | 041663 041631 || 041663 E1          4021     pop hl
exx              ; exx              | 041664 041632 || 041664 D9          4028  STORS1:   EXX    ; This block was a call to STORE4
ld (ix),l        ; ld (ix),l        | 041665 041633 || 041665 DD 75 00    4029     LD      (IX+0),L  ; The actual string length (must be less then H')
ld (ix+$01),h    ; ld (ix+$01),h    | 041668 041636 || 041668 DD 74 01    4030     LD      (IX+1),H  ; The maximum (original) string length
exx              ; exx              | 04166B 041639 || 04166B D9          4031     EXX
ld (ix+$02),hl   ; ld (ix+$02),hl   | 04166C 04163A || 04166C DD 2F 02    4032     LD (IX+2),HL  ; The pointer to the original string
ld bc,$000000    ; ld bc,$000000    | 04166F 04163D || 04166F 01 00 00 00 4034     LD BC, 0
ld c,e           ; ld c,e           | 041673 041641 || 041673 4B          4035     LD      C,E   ; BC: The new string length
ex de,hl         ; ex de,hl         | 041674 041642 || 041674 EB          4036     EX      DE,HL
pop hl           ; pop hl           | 041675 041643 || 041675 E1          4037     POP     HL
dec c            ; dec c            | 041676 041644 || 041676 0D          4038     DEC     C   ; Strings can only be 255 bytes long, so this is a quick way to
inc c            ; inc c            | 041677 041645 || 041677 0C          4039     INC     C   ; check whether BC is 0 without affecting the carry flag
ret z            ; ret z            | 041678 041646 || 041678 C8          4040     RET     Z                ; It is, so it's a NULL string, don't need to do anything else here
ldir             ; ldir             | 041679 041647 || 041679 ED B0       4041     LDIR    ; Replace the string in memory
ret nc           ; ret nc           | 04167B 041649 || 04167B D0          4042     RET     NC
ld ($044d1d),de  ; ld ($044d1d),de  | 04167C 04164A || 04167C ED 53 1D 4D 4043     LD      (FREE),DE  ; Set the new value of FREE and fall through to CHECK
push hl          ; push hl          | 041681 04164F || 041681 E5          4047  CHECK:   PUSH    HL
push bc          ; push bc          | 041682 041650 || 041682 C5          4048     PUSH BC
ld hl,($044d1d)  ; ld hl,($044d1d)  | 041683 041651 || 041683 2A 1D 4D 04 4049     LD      HL,(FREE)  ; HL: Address of first free space byte
ld bc,$000100    ; ld bc,$000100    | 041687 041655 || 041687 01 00 01 00 4050     LD BC,100h   ; BC: One page of memory
add hl,bc        ; add hl,bc        | 04168B 041659 || 04168B 09          4051     ADD HL,BC   ; Add a page to FREE
sbc hl,sp        ; sbc hl,sp        | 04168C 04165A || 04168C ED 72       4052     SBC     HL,SP   ; And subtract the current SP
pop bc           ; pop bc           | 04168E 04165C || 04168E C1          4053     POP BC
pop hl           ; pop hl           | 04168F 04165D || 04168F E1          4054     POP     HL
ret c            ; ret c            | 041690 04165E || 041690 D8          4055     RET     C   ; The SP is not in the same page, so just return
xor a            ; xor a            | 041691 04165F || 041691 AF          4056     XOR     A   ; Otherwise
jp $043798       ; jp $043760       | 041692 041660 || 041692 C3 98 37 04 4057     JP      ERROR_   ; Throw error "No room"
ld bc,$000000    ; ld bc,$000000    | 041696 041664 || 041696 01 00 00 00 4059  STORS3:   LD BC,0
ld c,e           ; ld c,e           | 04169A 041668 || 04169A 4B          4060     LD      C,E   ; BC: String length
push ix          ; push ix          | 04169B 041669 || 04169B DD E5       4061     PUSH    IX
pop de           ; pop de           | 04169D 04166B || 04169D D1          4062     POP     DE   ; DE: Destination
xor a            ; xor a            | 04169E 04166C || 04169E AF          4063     XOR     A   ; Check if string length is 0
cp c             ; cp c             | 04169F 04166D || 04169F B9          4064     CP      C
jr z,$+$04       ; jr z,$+$04       | 0416A0 04166E || 0416A0 28 02       4065     JR      Z,STORS5  ; Yes, so don't copy
ldir             ; ldir             | 0416A2 041670 || 0416A2 ED B0       4066     LDIR
ld a,$0d         ; ld a,$0d         | 0416A4 041672 || 0416A4 3E 0D       4067  STORS5:   LD      A,CR   ; Finally add the terminator
ld (de),a        ; ld (de),a        | 0416A6 041674 || 0416A6 12          4068     LD      (DE),A
ret              ; ret              | 0416A7 041675 || 0416A7 C9          4069     RET
ld a,$ff         ; ld a,$ff         | 0416A8 041676 || 0416A8 3E FF       4080  ARGUE:   LD      A,-1
push af          ; push af          | 0416AA 041678 || 0416AA F5          4081     PUSH    AF               ; Put marker on the stack
inc iy           ; inc iy           | 0416AB 041679 || 0416AB FD 23       4082  ARGUE1:   INC     IY               ; Bump past '(' or ',''
inc de           ; inc de           | 0416AD 04167B || 0416AD 13          4083     INC     DE
push de          ; push de          | 0416AE 04167C || 0416AE D5          4084     PUSH    DE
call $040a78     ; call $040a70     | 0416AF 04167D || 0416AF CD 78 0A 04 4085     CALL    NXT   ; Skip any whitespace
call $043a72     ; call $043a3a     | 0416B3 041681 || 0416B3 CD 72 3A 04 4086     CALL    GETVAR   ; Get the location of the variable in HL/IX
jr c,$+$41       ; jr c,$+$41       | 0416B7 041685 || 0416B7 38 3F       4087     JR      C,ARGERR  ; If the parameter contains an illegal character then throw an error
call nz,$043a61  ; call nz,$043a29  | 0416B9 041687 || 0416B9 C4 61 3A 04 4088     CALL    NZ,PUTVAR
pop de           ; pop de           | 0416BD 04168B || 0416BD D1          4089     POP     DE
push hl          ; push hl          | 0416BE 04168C || 0416BE E5          4090     PUSH    HL               ; VARPTR
or a             ; or a             | 0416BF 04168D || 0416BF B7          4091     OR      A                ; Check the variable type
push af          ; push af          | 0416C0 04168E || 0416C0 F5          4092     PUSH    AF
push de          ; push de          | 0416C1 04168F || 0416C1 D5          4093     PUSH    DE
ex (sp),iy       ; ex (sp),iy       | 0416C2 041690 || 0416C2 FD E3       4094     EX      (SP),IY
jp m,$0416dc     ; jp m,$0416aa     | 0416C4 041692 || 0416C4 FA DC 16 04 4095     JP      M,ARGUE2         ; Jump here if it is a string
call $040307     ; call $040302     | 0416C8 041696 || 0416C8 CD 07 03 04 4097     CALL    EXPRN            ; At this point it is numeric, so get the numeric expression value
ex (sp),iy       ; ex (sp),iy       | 0416CC 04169A || 0416CC FD E3       4098     EX      (SP),IY
pop de           ; pop de           | 0416CE 04169C || 0416CE D1          4099     POP     DE
pop af           ; pop af           | 0416CF 04169D || 0416CF F1          4100     POP     AF
exx              ; exx              | 0416D0 04169E || 0416D0 D9          4101     EXX
push hl          ; push hl          | 0416D1 04169F || 0416D1 E5          4102     PUSH    HL
exx              ; exx              | 0416D2 0416A0 || 0416D2 D9          4103     EXX
push hl          ; push hl          | 0416D3 0416A1 || 0416D3 E5          4104     PUSH    HL
ld b,a           ; ld b,a           | 0416D4 0416A2 || 0416D4 47          4105     LD      B,A
push bc          ; push bc          | 0416D5 0416A3 || 0416D5 C5          4106     PUSH    BC
call $041681     ; call $04164f     | 0416D6 0416A4 || 0416D6 CD 81 16 04 4107     CALL    CHECK            ; Check room
jr $+$11         ; jr $+$11         | 0416DA 0416A8 || 0416DA 18 0F       4108     JR      ARGUE4
call $04031a     ; call $040315     | 0416DC 0416AA || 0416DC CD 1A 03 04 4110  ARGUE2:   CALL    EXPRS   ; At this point it is a string variable, so get the string expression value
ex (sp),iy       ; ex (sp),iy       | 0416E0 0416AE || 0416E0 FD E3       4111     EX      (SP),IY
exx              ; exx              | 0416E2 0416B0 || 0416E2 D9          4112     EXX
pop de           ; pop de           | 0416E3 0416B1 || 0416E3 D1          4113     POP     DE
exx              ; exx              | 0416E4 0416B2 || 0416E4 D9          4114     EXX
pop af           ; pop af           | 0416E5 0416B3 || 0416E5 F1          4115     POP     AF
call $0409b9     ; call $0409b4     | 0416E6 0416B4 || 0416E6 CD B9 09 04 4116     CALL    PUSHS
exx              ; exx              | 0416EA 0416B8 || 0416EA D9          4117     EXX
call $040a78     ; call $040a70     | 0416EB 0416B9 || 0416EB CD 78 0A 04 4119  ARGUE4:   CALL    NXT   ; Skip whitespace
cp $2c           ; cp $2c           | 0416EF 0416BD || 0416EF FE 2C       4120     CP      ','   ; Check to see if the next value is a comma
jr nz,$+$0d      ; jr nz,$+$0d      | 0416F1 0416BF || 0416F1 20 0B       4121     JR      NZ,ARGUE5  ; No, so jump here
ld a,(de)        ; ld a,(de)        | 0416F3 0416C1 || 0416F3 1A          4122     LD      A,(DE)
cp $2c           ; cp $2c           | 0416F4 0416C2 || 0416F4 FE 2C       4123     CP      ','   ; Are there any more arguments?
jr z,$-$4b       ; jr z,$-$4b       | 0416F6 0416C4 || 0416F6 28 B3       4124     JR      Z,ARGUE1         ; Yes, so loop
ld a,$1f         ; ld a,$1f         | 0416F8 0416C6 || 0416F8 3E 1F       4126  ARGERR:   LD      A,31
jp $043798       ; jp $043760       | 0416FA 0416C8 || 0416FA C3 98 37 04 4127     JP      ERROR_            ; Throw error "Arguments"
call $040a37     ; call $040a2f     | 0416FE 0416CC || 0416FE CD 37 0A 04 4129  ARGUE5:   CALL    BRAKET   ; Check for end bracket (throws an error if missing)
ld a,(de)        ; ld a,(de)        | 041702 0416D0 || 041702 1A          4130     LD      A,(DE)
cp $29           ; cp $29           | 041703 0416D1 || 041703 FE 29       4131     CP      ')'
jr nz,$-$0d      ; jr nz,$-$0d      | 041705 0416D3 || 041705 20 F1       4132     JR      NZ,ARGERR
inc de           ; inc de           | 041707 0416D5 || 041707 13          4133     INC     DE
exx              ; exx              | 041708 0416D6 || 041708 D9          4134     EXX
pop bc           ; pop bc           | 041709 0416D7 || 041709 C1          4135  ARGUE6:   POP     BC
ld a,b           ; ld a,b           | 04170A 0416D8 || 04170A 78          4136     LD      A,B
inc a            ; inc a            | 04170B 0416D9 || 04170B 3C          4137     INC     A
exx              ; exx              | 04170C 0416DA || 04170C D9          4138     EXX
ret z            ; ret z            | 04170D 0416DB || 04170D C8          4139     RET     Z                ; Marker popped
exx              ; exx              | 04170E 0416DC || 04170E D9          4140     EXX
dec a            ; dec a            | 04170F 0416DD || 04170F 3D          4141     DEC     A
jp m,$041720     ; jp m,$0416ee     | 041710 0416DE || 041710 FA 20 17 04 4142     JP      M,ARGUE7         ; If it is a string, then jump here
pop hl           ; pop hl           | 041714 0416E2 || 041714 E1          4143     POP     HL
exx              ; exx              | 041715 0416E3 || 041715 D9          4144     EXX
pop hl           ; pop hl           | 041716 0416E4 || 041716 E1          4145     POP     HL
exx              ; exx              | 041717 0416E5 || 041717 D9          4146     EXX
pop ix           ; pop ix           | 041718 0416E6 || 041718 DD E1       4147     POP     IX
call $041608     ; call $0415d6     | 04171A 0416E8 || 04171A CD 08 16 04 4148     CALL    STORE             ; Write to dummy variable
jr $-$15         ; jr $-$15         | 04171E 0416EC || 04171E 18 E9       4149     JR      ARGUE6
call $0409e6     ; call $0409de     | 041720 0416EE || 041720 CD E6 09 04 4151  ARGUE7:   CALL    POPS
pop ix           ; pop ix           | 041724 0416F2 || 041724 DD E1       4152     POP     IX
call $041632     ; call $041600     | 041726 0416F4 || 041726 CD 32 16 04 4153     CALL    STACCS
jr $-$21         ; jr $-$21         | 04172A 0416F8 || 04172A 18 DD       4154     JR      ARGUE6
pop de           ; pop de           | 04172C 0416FA || 04172C D1          4163  SAVLOC:   POP     DE               ; DE: Return address (from the CALL)
inc iy           ; inc iy           | 04172D 0416FB || 04172D FD 23       4165  SAVLO1:   INC     IY               ; Bump past '(' or ','
call $040a78     ; call $040a70     | 04172F 0416FD || 04172F CD 78 0A 04 4166     CALL    NXT   ; And also any whitespace
push de          ; push de          | 041733 041701 || 041733 D5          4167     PUSH    DE   ; Push the return address back onto the stack
exx              ; exx              | 041734 041702 || 041734 D9          4168     EXX
push bc          ; push bc          | 041735 041703 || 041735 C5          4169     PUSH    BC
push de          ; push de          | 041736 041704 || 041736 D5          4170     PUSH    DE
push hl          ; push hl          | 041737 041705 || 041737 E5          4171     PUSH    HL
exx              ; exx              | 041738 041706 || 041738 D9          4172     EXX
call $040c96     ; call $040c8e     | 041739 041707 || 041739 CD 96 0C 04 4173     CALL    VAR_              ; Dummy variable
exx              ; exx              | 04173D 04170B || 04173D D9          4174     EXX
pop hl           ; pop hl           | 04173E 04170C || 04173E E1          4175     POP     HL
pop de           ; pop de           | 04173F 04170D || 04173F D1          4176     POP     DE
pop bc           ; pop bc           | 041740 04170E || 041740 C1          4177     POP     BC
exx              ; exx              | 041741 04170F || 041741 D9          4178     EXX
pop de           ; pop de           | 041742 041710 || 041742 D1          4179     POP     DE
or a             ; or a             | 041743 041711 || 041743 B7          4180     OR      A                ; Check the variable type
jp m,$041757     ; jp m,$041725     | 041744 041712 || 041744 FA 57 17 04 4181     JP      M,SAVLO2         ; 80h = string, so jump to save a local string
exx              ; exx              | 041748 041716 || 041748 D9          4182     EXX
push hl          ; push hl          | 041749 041717 || 041749 E5          4183     PUSH    HL               ; Save H'L'
exx              ; exx              | 04174A 041718 || 04174A D9          4184     EXX
ld b,a           ; ld b,a           | 04174B 041719 || 04174B 47          4185     LD      B,A              ;  B: Variable type
call $04041b     ; call $040416     | 04174C 04171A || 04174C CD 1B 04 04 4186     CALL    LOADN
exx              ; exx              | 041750 04171E || 041750 D9          4187     EXX
ex (sp),hl       ; ex (sp),hl       | 041751 04171F || 041751 E3          4188     EX      (SP),HL
exx              ; exx              | 041752 041720 || 041752 D9          4189     EXX
push hl          ; push hl          | 041753 041721 || 041753 E5          4190     PUSH    HL
push bc          ; push bc          | 041754 041722 || 041754 C5          4191     PUSH    BC
jr $+$2f         ; jr $+$2f         | 041755 041723 || 041755 18 2D       4192     JR      SAVLO4
push af          ; push af          | 041757 041725 || 041757 F5          4194  SAVLO2:   PUSH    AF               ; Save the type (string)
push de          ; push de          | 041758 041726 || 041758 D5          4195     PUSH    DE
exx              ; exx              | 041759 041727 || 041759 D9          4196     EXX
push hl          ; push hl          | 04175A 041728 || 04175A E5          4197     PUSH    HL
exx              ; exx              | 04175B 041729 || 04175B D9          4198     EXX
call $0404a5     ; call $0404a0     | 04175C 04172A || 04175C CD A5 04 04 4199     CALL    LOADS
exx              ; exx              | 041760 04172E || 041760 D9          4200     EXX
pop hl           ; pop hl           | 041761 04172F || 041761 E1          4201     POP     HL
exx              ; exx              | 041762 041730 || 041762 D9          4202     EXX
ld bc,$000000    ; ld bc,$000000    | 041763 041731 || 041763 01 00 00 00 4203     LD BC,0
ld c,e           ; ld c,e           | 041767 041735 || 041767 4B          4204     LD      C,E   ; BC: String length
pop de           ; pop de           | 041768 041736 || 041768 D1          4205     POP     DE
call $041681     ; call $04164f     | 041769 041737 || 041769 CD 81 16 04 4206     CALL    CHECK   ; Check if there is space on the stack
pop af           ; pop af           | 04176D 04173B || 04176D F1          4207     POP     AF               ; Level stack
ld hl,$000000    ; ld hl,$000000    | 04176E 04173C || 04176E 21 00 00 00 4208     LD      HL,0
sbc hl,bc        ; sbc hl,bc        | 041772 041740 || 041772 ED 42       4209     SBC     HL,BC   ; HL: Number of bytes required on the stack for the string
add hl,sp        ; add hl,sp        | 041774 041742 || 041774 39          4210     ADD     HL,SP   ; Make space for the string on the stack
ld sp,hl         ; ld sp,hl         | 041775 041743 || 041775 F9          4211     LD      SP,HL
ld b,a           ; ld b,a           | 041776 041744 || 041776 47          4212     LD      B,A              ;  B: Variable type
push bc          ; push bc          | 041777 041745 || 041777 C5          4213     PUSH    BC
jr z,$+$0c       ; jr z,$+$0c       | 041778 041746 || 041778 28 0A       4214     JR      Z,SAVLO4
push de          ; push de          | 04177A 041748 || 04177A D5          4215     PUSH    DE
ld de,$044a00    ; ld de,$044a00    | 04177B 041749 || 04177B 11 00 4A 04 4216     LD      DE,ACCS
ex de,hl         ; ex de,hl         | 04177F 04174D || 04177F EB          4217     EX      DE,HL
ld b,l           ; ld b,l           | 041780 04174E || 041780 45          4218     LD      B,L
ldir             ; ldir             | 041781 04174F || 041781 ED B0       4219     LDIR                     ; Save the string onto the stack
pop de           ; pop de           | 041783 041751 || 041783 D1          4220     POP     DE
push ix          ; push ix          | 041784 041752 || 041784 DD E5       4222  SAVLO4:   PUSH    IX   ; VARPTR
call $04178a     ; call $041758     | 041786 041754 || 041786 CD 8A 17 04 4223     CALL    SAVLO5
call $041681     ; call $04164f     | 04178A 041758 || 04178A CD 81 16 04 4225  SAVLO5:   CALL    CHECK
call $040a78     ; call $040a70     | 04178E 04175C || 04178E CD 78 0A 04 4226     CALL    NXT
cp $2c           ; cp $2c           | 041792 041760 || 041792 FE 2C       4227     CP      ','              ; Are there any more local variables?
jr z,$-$67       ; jr z,$-$67       | 041794 041762 || 041794 28 97       4228     JR      Z,SAVLO1  ; Yes, so loop
ex de,hl         ; ex de,hl         | 041796 041764 || 041796 EB          4229     EX      DE,HL   ; DE -> HL: The return address
jp (hl)          ; jp (hl)          | 041797 041765 || 041797 E9          4230     JP      (HL)             ; And effectvely return
ld a,(iy)        ; ld a,(iy)        | 041798 041766 || 041798 FD 7E 00    4232  DELIM:   LD      A,(IY)           ; Assembler delimiter
cp $20           ; cp $20           | 04179B 041769 || 04179B FE 20       4233     CP      ' '
ret z            ; ret z            | 04179D 04176B || 04179D C8          4234     RET     Z
cp $2c           ; cp $2c           | 04179E 04176C || 04179E FE 2C       4235     CP      ','
ret z            ; ret z            | 0417A0 04176E || 0417A0 C8          4236     RET     Z
cp $29           ; cp $29           | 0417A1 04176F || 0417A1 FE 29       4237     CP      ')'
ret z            ; ret z            | 0417A3 041771 || 0417A3 C8          4238     RET     Z
cp $3b           ; cp $3b           | 0417A4 041772 || 0417A4 FE 3B       4239  TERM:   CP      ';'              ; Assembler terminator
ret z            ; ret z            | 0417A6 041774 || 0417A6 C8          4240     RET     Z
cp $5c           ; cp $5c           | 0417A7 041775 || 0417A7 FE 5C       4241     CP      '\'
ret z            ; ret z            | 0417A9 041777 || 0417A9 C8          4242     RET     Z
jr $+$09         ; jr $+$09         | 0417AA 041778 || 0417AA 18 07       4243     JR      TERM0
call $040a78     ; call $040a70     | 0417AC 04177A || 0417AC CD 78 0A 04 4245  TERMQ:   CALL    NXT
cp $8b           ; cp $8b           | 0417B0 04177E || 0417B0 FE 8B       4246     CP      ELSE_EX_
ret nc           ; ret nc           | 0417B2 041780 || 0417B2 D0          4247     RET     NC
cp $3a           ; cp $3a           | 0417B3 041781 || 0417B3 FE 3A       4248  TERM0:   CP      ':'              ; Assembler seperator
ret nc           ; ret nc           | 0417B5 041783 || 0417B5 D0          4249     RET     NC
cp $0d           ; cp $0d           | 0417B6 041784 || 0417B6 FE 0D       4250     CP      CR
ret              ; ret              | 0417B8 041786 || 0417B8 C9          4251     RET
call $0417ac     ; call $04177a     | 0417B9 041787 || 0417B9 CD AC 17 04 4253  SPAN:   CALL    TERMQ
ret z            ; ret z            | 0417BD 04178B || 0417BD C8          4254     RET     Z
inc iy           ; inc iy           | 0417BE 04178C || 0417BE FD 23       4255     INC     IY
jr $-$07         ; jr $-$07         | 0417C0 04178E || 0417C0 18 F7       4256     JR      SPAN
call $040a78     ; call $040a70     | 0417C2 041790 || 0417C2 CD 78 0A 04 4260  EQUALS:   CALL    NXT   ; Skip whitespace
inc iy           ; inc iy           | 0417C6 041794 || 0417C6 FD 23       4261     INC     IY   ; Skip past the character in question
cp $3d           ; cp $3d           | 0417C8 041796 || 0417C8 FE 3D       4262     CP      '='   ; Is it '='
ret z            ; ret z            | 0417CA 041798 || 0417CA C8          4263     RET     Z   ; Yes, so return
ld a,$04         ; ld a,$04         | 0417CB 041799 || 0417CB 3E 04       4264     LD      A,4   ; Otherwise
jp $043798       ; jp $043760       | 0417CD 04179B || 0417CD C3 98 37 04 4265     JP      ERROR_            ; Throw error "Mistake"
cp $8a           ; cp $8a           | 0417D1 04179F || 0417D1 FE 8A       4267  FORMAT:   CP      TAB
jr z,$+$0f       ; jr z,$+$0f       | 0417D3 0417A1 || 0417D3 28 0D       4268     JR      Z,DOTAB
cp $89           ; cp $89           | 0417D5 0417A3 || 0417D5 FE 89       4269     CP      SPC
jr z,$+$42       ; jr z,$+$42       | 0417D7 0417A5 || 0417D7 28 40       4270     JR      Z,DOSPC
cp $27           ; cp $27           | 0417D9 0417A7 || 0417D9 FE 27       4271     CP      '''
ret nz           ; ret nz           | 0417DB 0417A9 || 0417DB C0          4272     RET     NZ
call $04397f     ; call $043947     | 0417DC 0417AA || 0417DC CD 7F 39 04 4273     CALL    CRLF
xor a            ; xor a            | 0417E0 0417AE || 0417E0 AF          4274     XOR     A
ret              ; ret              | 0417E1 0417AF || 0417E1 C9          4275     RET
push bc          ; push bc          | 0417E2 0417B0 || 0417E2 C5          4277  DOTAB:   PUSH    BC
call $04030f     ; call $04030a     | 0417E3 0417B1 || 0417E3 CD 0F 03 04 4278     CALL    EXPRI
exx              ; exx              | 0417E7 0417B5 || 0417E7 D9          4279     EXX
pop bc           ; pop bc           | 0417E8 0417B6 || 0417E8 C1          4280     POP     BC
ld a,(iy)        ; ld a,(iy)        | 0417E9 0417B7 || 0417E9 FD 7E 00    4281     LD      A,(IY)
cp $2c           ; cp $2c           | 0417EC 0417BA || 0417EC FE 2C       4282     CP      ','
jr z,$+$16       ; jr z,$+$16       | 0417EE 0417BC || 0417EE 28 14       4283     JR      Z,DOTAB1
call $040a37     ; call $040a2f     | 0417F0 0417BE || 0417F0 CD 37 0A 04 4284     CALL    BRAKET
ld a,l           ; ld a,l           | 0417F4 0417C2 || 0417F4 7D          4285     LD      A,L
ld hl,$044d3d    ; ld hl,$044d3d    | 0417F5 0417C3 || 0417F5 21 3D 4D 04 4286  TABIT:   LD      HL,COUNT
cp (hl)          ; cp (hl)          | 0417F9 0417C7 || 0417F9 BE          4287     CP      (HL)
ret z            ; ret z            | 0417FA 0417C8 || 0417FA C8          4288     RET     Z
push af          ; push af          | 0417FB 0417C9 || 0417FB F5          4289     PUSH    AF
call c,$04397f   ; call c,$043947   | 0417FC 0417CA || 0417FC DC 7F 39 04 4290     CALL    C,CRLF
pop af           ; pop af           | 041800 0417CE || 041800 F1          4291     POP     AF
sub (hl)         ; sub (hl)         | 041801 0417CF || 041801 96          4292     SUB     (HL)
jr $+$1f         ; jr $+$1f         | 041802 0417D0 || 041802 18 1D       4293     JR      FILL
inc iy           ; inc iy           | 041804 0417D2 || 041804 FD 23       4294  DOTAB1:   INC     IY
push bc          ; push bc          | 041806 0417D4 || 041806 C5          4295     PUSH    BC
push hl          ; push hl          | 041807 0417D5 || 041807 E5          4296     PUSH    HL
call $04030f     ; call $04030a     | 041808 0417D6 || 041808 CD 0F 03 04 4297     CALL    EXPRI
exx              ; exx              | 04180C 0417DA || 04180C D9          4298     EXX
pop de           ; pop de           | 04180D 0417DB || 04180D D1          4299     POP     DE
pop bc           ; pop bc           | 04180E 0417DC || 04180E C1          4300     POP     BC
call $040a37     ; call $040a2f     | 04180F 0417DD || 04180F CD 37 0A 04 4301     CALL    BRAKET
call $043ef9     ; call $043ec1     | 041813 0417E1 || 041813 CD F9 3E 04 4302     CALL    PUTCSR
xor a            ; xor a            | 041817 0417E5 || 041817 AF          4303     XOR     A
ret              ; ret              | 041818 0417E6 || 041818 C9          4304     RET
push bc          ; push bc          | 041819 0417E7 || 041819 C5          4306  DOSPC:   PUSH    BC
call $04032a     ; call $040325     | 04181A 0417E8 || 04181A CD 2A 03 04 4307     CALL    ITEMI
exx              ; exx              | 04181E 0417EC || 04181E D9          4308     EXX
ld a,l           ; ld a,l           | 04181F 0417ED || 04181F 7D          4309     LD      A,L
pop bc           ; pop bc           | 041820 0417EE || 041820 C1          4310     POP     BC
or a             ; or a             | 041821 0417EF || 041821 B7          4311  FILL:   OR      A
ret z            ; ret z            | 041822 0417F0 || 041822 C8          4312     RET     Z
push bc          ; push bc          | 041823 0417F1 || 041823 C5          4313     PUSH    BC
ld b,a           ; ld b,a           | 041824 0417F2 || 041824 47          4314     LD      B,A
ld a,$20         ; ld a,$20         | 041825 0417F3 || 041825 3E 20       4315  FILL1:   LD      A,' '
call $043987     ; call $04394f     | 041827 0417F5 || 041827 CD 87 39 04 4316     CALL    OUTCHR
djnz $-$06       ; djnz $-$06       | 04182B 0417F9 || 04182B 10 F8       4317     DJNZ    FILL1
pop bc           ; pop bc           | 04182D 0417FB || 04182D C1          4318     POP     BC
xor a            ; xor a            | 04182E 0417FC || 04182E AF          4319     XOR     A
ret              ; ret              | 04182F 0417FD || 04182F C9          4320     RET
ld hl,$044a00    ; ld hl,$044a00    | 041830 0417FE || 041830 21 00 4A 04 4322  PTEXT:   LD      HL,ACCS
inc e            ; inc e            | 041834 041802 || 041834 1C          4323     INC     E
dec e            ; dec e            | 041835 041803 || 041835 1D          4324  PTEXT1:   DEC     E
ret z            ; ret z            | 041836 041804 || 041836 C8          4325     RET     Z
ld a,(hl)        ; ld a,(hl)        | 041837 041805 || 041837 7E          4326     LD      A,(HL)
inc hl           ; inc hl           | 041838 041806 || 041838 23          4327     INC     HL
call $043987     ; call $04394f     | 041839 041807 || 041839 CD 87 39 04 4328     CALL    OUTCHR
jr $-$08         ; jr $-$08         | 04183D 04180B || 04183D 18 F6       4329     JR      PTEXT1
push af          ; push af          | 04183F 04180D || 04183F F5          4331  FETCHS:   PUSH    AF
push bc          ; push bc          | 041840 04180E || 041840 C5          4332     PUSH    BC
push hl          ; push hl          | 041841 04180F || 041841 E5          4333     PUSH    HL
ex (sp),iy       ; ex (sp),iy       | 041842 041810 || 041842 FD E3       4334     EX      (SP),IY
call $04185f     ; call $04182d     | 041844 041812 || 041844 CD 5F 18 04 4335     CALL    XTRACT
call $040a78     ; call $040a70     | 041848 041816 || 041848 CD 78 0A 04 4336     CALL    NXT
ex (sp),iy       ; ex (sp),iy       | 04184C 04181A || 04184C FD E3       4337     EX      (SP),IY
pop hl           ; pop hl           | 04184E 04181C || 04184E E1          4338     POP     HL
pop bc           ; pop bc           | 04184F 04181D || 04184F C1          4339     POP     BC
pop af           ; pop af           | 041850 04181E || 041850 F1          4340     POP     AF
ret              ; ret              | 041851 04181F || 041851 C9          4341     RET
ld de,$044a00    ; ld de,$044a00    | 041852 041820 || 041852 11 00 4A 04 4343  LINES:   LD      DE,ACCS
ld a,(hl)        ; ld a,(hl)        | 041856 041824 || 041856 7E          4344  LINE1S:   LD      A,(HL)
ld (de),a        ; ld (de),a        | 041857 041825 || 041857 12          4345     LD      (DE),A
cp $0d           ; cp $0d           | 041858 041826 || 041858 FE 0D       4346     CP      CR
ret z            ; ret z            | 04185A 041828 || 04185A C8          4347     RET     Z
inc hl           ; inc hl           | 04185B 041829 || 04185B 23          4348     INC     HL
inc e            ; inc e            | 04185C 04182A || 04185C 1C          4349     INC     E
jr $-$07         ; jr $-$07         | 04185D 04182B || 04185D 18 F7       4350     JR      LINE1S
call $040a78     ; call $040a70     | 04185F 04182D || 04185F CD 78 0A 04 4352  XTRACT:   CALL    NXT
cp $22           ; cp $22           | 041863 041831 || 041863 FE 22       4353     CP      '"'
inc iy           ; inc iy           | 041865 041833 || 041865 FD 23       4354     INC     IY
jp z,$04046c     ; jp z,$040467     | 041867 041835 || 041867 CA 6C 04 04 4355     JP      Z,CONS
dec iy           ; dec iy           | 04186B 041839 || 04186B FD 2B       4356     DEC     IY
ld de,$044a00    ; ld de,$044a00    | 04186D 04183B || 04186D 11 00 4A 04 4357     LD      DE,ACCS
ld a,(iy)        ; ld a,(iy)        | 041871 04183F || 041871 FD 7E 00    4358  XTRAC1:   LD      A,(IY)
ld (de),a        ; ld (de),a        | 041874 041842 || 041874 12          4359     LD      (DE),A
cp $2c           ; cp $2c           | 041875 041843 || 041875 FE 2C       4360     CP      ','
ret z            ; ret z            | 041877 041845 || 041877 C8          4361     RET     Z
cp $0d           ; cp $0d           | 041878 041846 || 041878 FE 0D       4362     CP      CR
ret z            ; ret z            | 04187A 041848 || 04187A C8          4363     RET     Z
inc iy           ; inc iy           | 04187B 041849 || 04187B FD 23       4364     INC     IY
inc e            ; inc e            | 04187D 04184B || 04187D 1C          4365     INC     E
jr $-$0d         ; jr $-$0d         | 04187E 04184C || 04187E 18 F1       4366     JR      XTRAC1
ld bc,$000000    ; ld bc,$000000    | 041880 04184E || 041880 01 00 00 00 4376  SEARCH_EX:   LD      BC,0   ; Clear BC
ld c,(hl)        ; ld c,(hl)        | 041884 041852 || 041884 4E          4378  SRCH1_EX:   LD      C,(HL)   ;  C: Fetch the line length
inc c            ; inc c            | 041885 041853 || 041885 0C          4379     INC     C   ; Check for 0, i.e. end of program marker
dec c            ; dec c            | 041886 041854 || 041886 0D          4380     DEC     C
jr z,$+$0d       ; jr z,$+$0d       | 041887 041855 || 041887 28 0B       4381     JR      Z,SRCH2_EX          ; Not found the token, so end
inc hl           ; inc hl           | 041889 041857 || 041889 23          4382     INC     HL   ; Skip the line length and line number
inc hl           ; inc hl           | 04188A 041858 || 04188A 23          4383     INC     HL
inc hl           ; inc hl           | 04188B 041859 || 04188B 23          4384     INC     HL
cp (hl)          ; cp (hl)          | 04188C 04185A || 04188C BE          4385     CP      (HL)   ; Compare with the token
ret z            ; ret z            | 04188D 04185B || 04188D C8          4386     RET     Z   ; Found it, so return with carry not set
dec c            ; dec c            | 04188E 04185C || 04188E 0D          4387     DEC     C   ; Skip to the next line
dec c            ; dec c            | 04188F 04185D || 04188F 0D          4388     DEC     C
dec c            ; dec c            | 041890 04185E || 041890 0D          4389     DEC     C
add hl,bc        ; add hl,bc        | 041891 04185F || 041891 09          4390     ADD     HL,BC
jr $-$0e         ; jr $-$0e         | 041892 041860 || 041892 18 F0       4391     JR      SRCH1_EX   ; Rinse, lather and repeat
dec hl           ; dec hl           | 041894 041862 || 041894 2B          4393  SRCH2_EX:   DEC     HL               ; Token not found, so back up to the CR at the end of the last line
scf              ; scf              | 041895 041863 || 041895 37          4394     SCF    ; And set the carry flag
ret              ; ret              | 041896 041864 || 041896 C9          4395     RET
cp $04           ; cp $04           | 041897 041865 || 041897 FE 04       4409  X4OR5:   CP      4   ; Check A = 4 (Z flag is used later)
push de          ; push de          | 041899 041867 || 041899 D5          4411     push de
pop hl           ; pop hl           | 04189A 041868 || 04189A E1          4412     pop hl
add hl,hl        ; add hl,hl        | 04189B 041869 || 04189B 29          4413     ADD     HL,HL   ; Multiply by 2 (note this operation preserves the zero flag)
ret c            ; ret c            | 04189C 04186A || 04189C D8          4414     RET     C   ; Exit if overflow
add hl,hl        ; add hl,hl        | 04189D 04186B || 04189D 29          4415     ADD     HL,HL   ; Multiply by 2 again
ret c            ; ret c            | 04189E 04186C || 04189E D8          4416     RET     C   ; Exit if overflow
ex de,hl         ; ex de,hl         | 04189F 04186D || 04189F EB          4417     EX      DE,HL   ; DE: Product
ret z            ; ret z            | 0418A0 04186E || 0418A0 C8          4418     RET     Z   ; Exit if A = 4
add hl,de        ; add hl,de        | 0418A1 04186F || 0418A1 19          4419     ADD     HL,DE   ; Add original value to HL (effectively multiplying by 5)
ex de,hl         ; ex de,hl         | 0418A2 041870 || 0418A2 EB          4420     EX      DE,HL   ; DE: Product
ret              ; ret              | 0418A3 041871 || 0418A3 C9          4421     RET
push bc          ; push bc          | 0418A4 041872 || 0418A4 C5          4430  MUL16:   PUSH BC
ld d,c           ; ld d,c           | 0418A5 041873 || 0418A5 51          4431     LD D, C   ; Set up the registers for the multiplies
ld e,l           ; ld e,l           | 0418A6 041874 || 0418A6 5D          4432     LD E, L
ld l,c           ; ld l,c           | 0418A7 041875 || 0418A7 69          4433     LD L, C
ld c,e           ; ld c,e           | 0418A8 041876 || 0418A8 4B          4434     LD C, E
mlt hl           ; mlt hl           | 0418A9 041877 || 0418A9 ED 6C       4435     MLT HL   ; HL = H * C (*256)
mlt de           ; mlt de           | 0418AB 041879 || 0418AB ED 5C       4436     MLT DE   ; DE = L * C
mlt bc           ; mlt bc           | 0418AD 04187B || 0418AD ED 4C       4437     MLT BC   ; BC = B * L (*256)
add hl,bc        ; add hl,bc        | 0418AF 04187D || 0418AF 09          4438     ADD HL, BC   ; HL = The sum of the two most significant multiplications
pop bc           ; pop bc           | 0418B0 04187E || 0418B0 C1          4439     POP BC
xor a            ; xor a            | 0418B1 04187F || 0418B1 AF          4440     XOR A
sbc a,h          ; sbc a,h          | 0418B2 041880 || 0418B2 9C          4441     SBC H   ; If H is not zero then it's an overflow
ret c            ; ret c            | 0418B3 041881 || 0418B3 D8          4442     RET C
ld h,l           ; ld h,l           | 0418B4 041882 || 0418B4 65          4443     LD H, L   ; HL = ((H * C) + (B * L) * 256) + (L * C)
ld l,a           ; ld l,a           | 0418B5 041883 || 0418B5 6F          4444     LD L, A
add hl,de        ; add hl,de        | 0418B6 041884 || 0418B6 19          4445     ADD HL, DE
ret              ; ret              | 0418B7 041885 || 0418B7 C9          4446     RET
call $040a78     ; call $040a70     | 0418B8 041886 || 0418B8 CD 78 0A 04 4448  CHANEL:   CALL    NXT   ; Skip whitespace
cp $23           ; cp $23           | 0418BC 04188A || 0418BC FE 23       4449     CP      '#'   ; Check for the '#' symbol
ld a,$2d         ; ld a,$2d         | 0418BE 04188C || 0418BE 3E 2D       4450     LD      A,45
jp nz,$043798    ; jp nz,$043760    | 0418C0 04188E || 0418C0 C2 98 37 04 4451     JP      NZ,ERROR_         ; If it is missing, then throw a "Missing #" error
inc iy           ; inc iy           | 0418C4 041892 || 0418C4 FD 23       4452  CHNL:   INC     IY               ; Bump past the '#'
call $04032a     ; call $040325     | 0418C6 041894 || 0418C6 CD 2A 03 04 4453     CALL    ITEMI   ; Get the channel number
exx              ; exx              | 0418CA 041898 || 0418CA D9          4454     EXX
ex de,hl         ; ex de,hl         | 0418CB 041899 || 0418CB EB          4455     EX      DE,HL   ; DE: The channel number
ret              ; ret              | 0418CC 04189A || 0418CC C9          4456     RET
call $041ded     ; call $041db5     | 0418CD 04189B || 0418CD CD ED 1D 04 4463  ASSEM:   CALL    SKIP
inc iy           ; inc iy           | 0418D1 04189F || 0418D1 FD 23       4464     INC     IY
cp $3a           ; cp $3a           | 0418D3 0418A1 || 0418D3 FE 3A       4465     CP      ':'
jr z,$-$08       ; jr z,$-$08       | 0418D5 0418A3 || 0418D5 28 F6       4466     JR      Z,ASSEM
cp $5d           ; cp $5d           | 0418D7 0418A5 || 0418D7 FE 5D       4467     CP      ']'
ret z            ; ret z            | 0418D9 0418A7 || 0418D9 C8          4468     RET     Z
cp $0d           ; cp $0d           | 0418DA 0418A8 || 0418DA FE 0D       4469     CP      CR
ret z            ; ret z            | 0418DC 0418AA || 0418DC C8          4470     RET     Z
dec iy           ; dec iy           | 0418DD 0418AB || 0418DD FD 2B       4471     DEC     IY
ld ix,($113040)  ; ld ix,($044c40)  | 0418DF 0418AD || 0418DF DD 2A 40 30 4472     LD      IX,(PC)          ; Program counter (P% - defined in equs.inc)
ld hl,$044d40    ; ld hl,$044d40    | 0418E4 0418B2 || 0418E4 21 40 4D 04 4473     LD      HL,LISTON
bit 6,(hl)       ; bit 6,(hl)       | 0418E8 0418B6 || 0418E8 CB 76       4474     BIT     6,(HL)
jr z,$+$07       ; jr z,$+$07       | 0418EA 0418B8 || 0418EA 28 05       4475     JR      Z,ASSEM0
ld ix,($11303c)  ; ld ix,($044c3c)  | 0418EC 0418BA || 0418EC DD 2A 3C 30 4476     LD      IX,(OC)          ; Code origin (O% - defined in equs.inc)
push ix          ; push ix          | 0418F1 0418BF || 0418F1 DD E5       4477  ASSEM0:   PUSH    IX
push iy          ; push iy          | 0418F3 0418C1 || 0418F3 FD E5       4478     PUSH    IY
call $0419a5     ; call $041973     | 0418F5 0418C3 || 0418F5 CD A5 19 04 4479     CALL    ASMB
pop bc           ; pop bc           | 0418F9 0418C7 || 0418F9 C1          4480     POP     BC
pop de           ; pop de           | 0418FA 0418C8 || 0418FA D1          4481     POP     DE
ret c            ; ret c            | 0418FB 0418C9 || 0418FB D8          4482     RET     C
call $041ded     ; call $041db5     | 0418FC 0418CA || 0418FC CD ED 1D 04 4483     CALL    SKIP
scf              ; scf              | 041900 0418CE || 041900 37          4484     SCF
ret nz           ; ret nz           | 041901 0418CF || 041901 C0          4485     RET     NZ
dec iy           ; dec iy           | 041902 0418D0 || 041902 FD 2B       4486     DEC     IY
inc iy           ; inc iy           | 041904 0418D2 || 041904 FD 23       4487  ASSEM3:   INC     IY
ld a,(iy)        ; ld a,(iy)        | 041906 0418D4 || 041906 FD 7E 00    4488     LD      A,(IY)
call $0417b3     ; call $041781     | 041909 0418D7 || 041909 CD B3 17 04 4489     CALL    TERM0
jr nz,$-$09      ; jr nz,$-$09      | 04190D 0418DB || 04190D 20 F5       4490     JR      NZ,ASSEM3
ld a,($044d40)   ; ld a,($044d40)   | 04190F 0418DD || 04190F 3A 40 4D 04 4491     LD      A,(LISTON)
push ix          ; push ix          | 041913 0418E1 || 041913 DD E5       4492     PUSH    IX
pop hl           ; pop hl           | 041915 0418E3 || 041915 E1          4493     POP     HL
or a             ; or a             | 041916 0418E4 || 041916 B7          4494     OR      A
sbc hl,de        ; sbc hl,de        | 041917 0418E5 || 041917 ED 52       4495     SBC     HL,DE
ex de,hl         ; ex de,hl         | 041919 0418E7 || 041919 EB          4496     EX      DE,HL            ; DE: Number of bytes
push hl          ; push hl          | 04191A 0418E8 || 04191A E5          4497     PUSH    HL
ld hl,($113040)  ; ld hl,($044c40)  | 04191B 0418E9 || 04191B 2A 40 30 11 4498     LD      HL,(PC)
push hl          ; push hl          | 04191F 0418ED || 04191F E5          4499     PUSH    HL
add hl,de        ; add hl,de        | 041920 0418EE || 041920 19          4500     ADD     HL,DE
ld ($113040),hl  ; ld ($044c40),hl  | 041921 0418EF || 041921 22 40 30 11 4501     LD      (PC),HL          ; Update PC
bit 6,a          ; bit 6,a          | 041925 0418F3 || 041925 CB 77       4502     BIT     6,A
jr z,$+$0b       ; jr z,$+$0b       | 041927 0418F5 || 041927 28 09       4503     JR      Z,ASSEM5
ld hl,($11303c)  ; ld hl,($044c3c)  | 041929 0418F7 || 041929 2A 3C 30 11 4504     LD      HL,(OC)
add hl,de        ; add hl,de        | 04192D 0418FB || 04192D 19          4505     ADD     HL,DE
ld ($11303c),hl  ; ld ($044c3c),hl  | 04192E 0418FC || 04192E 22 3C 30 11 4506     LD      (OC),HL          ; Update OC
pop hl           ; pop hl           | 041932 041900 || 041932 E1          4507  ASSEM5:   POP     HL               ; Old PC
pop ix           ; pop ix           | 041933 041901 || 041933 DD E1       4508     POP     IX               ; Code here
bit 4,a          ; bit 4,a          | 041935 041903 || 041935 CB 67       4509     BIT     4,A
jr z,$-$6a       ; jr z,$-$6a       | 041937 041905 || 041937 28 94       4510     JR      Z,ASSEM
ld ($044d4a),hl  ; ld ($044d4a),hl  | 041939 041907 || 041939 22 4A 4D 04 4511     LD (R0),HL   ; Store HL in R0 so we can access the MSB
ld a,($044d4c)   ; ld a,($044d4c)   | 04193D 04190B || 04193D 3A 4C 4D 04 4512     LD A,(R0+2)  ; Print out the address
call $04198f     ; call $04195d     | 041941 04190F || 041941 CD 8F 19 04 4513     CALL HEX_EX
ld a,h           ; ld a,h           | 041945 041913 || 041945 7C          4514     LD      A,H
call $04198f     ; call $04195d     | 041946 041914 || 041946 CD 8F 19 04 4515     CALL    HEX_EX
ld a,l           ; ld a,l           | 04194A 041918 || 04194A 7D          4516     LD      A,L
call $041987     ; call $041955     | 04194B 041919 || 04194B CD 87 19 04 4517     CALL    HEXSP
xor a            ; xor a            | 04194F 04191D || 04194F AF          4518     XOR     A
cp e             ; cp e             | 041950 04191E || 041950 BB          4519     CP      E
jr z,$+$1a       ; jr z,$+$1a       | 041951 04191F || 041951 28 18       4520     JR      Z,ASSEM2
ld a,($044d3d)   ; ld a,($044d3d)   | 041953 041921 || 041953 3A 3D 4D 04 4522  ASSEM1:   LD      A,(COUNT)
cp $14           ; cp $14           | 041957 041925 || 041957 FE 14       4523     CP      20
ld a,$07         ; ld a,$07         | 041959 041927 || 041959 3E 07       4524     LD      A,7
call nc,$0417f5  ; call nc,$0417c3  | 04195B 041929 || 04195B D4 F5 17 04 4525     CALL    NC,TABIT         ; Next line
ld a,(ix)        ; ld a,(ix)        | 04195F 04192D || 04195F DD 7E 00    4526     LD      A,(IX)
call $041987     ; call $041955     | 041962 041930 || 041962 CD 87 19 04 4527     CALL    HEXSP
inc ix           ; inc ix           | 041966 041934 || 041966 DD 23       4528     INC     IX
dec e            ; dec e            | 041968 041936 || 041968 1D          4529     DEC     E
jr nz,$-$16      ; jr nz,$-$16      | 041969 041937 || 041969 20 E8       4530     JR      NZ,ASSEM1
ld a,$16         ; ld a,$16         | 04196B 041939 || 04196B 3E 16       4532  ASSEM2:   LD      A,22   ; Tab to the disassembly field
call $0417f5     ; call $0417c3     | 04196D 04193B || 04196D CD F5 17 04 4533     CALL    TABIT
push iy          ; push iy          | 041971 04193F || 041971 FD E5       4534     PUSH    IY
pop hl           ; pop hl           | 041973 041941 || 041973 E1          4535     POP     HL
sbc hl,bc        ; sbc hl,bc        | 041974 041942 || 041974 ED 42       4536     SBC     HL,BC
ld a,(bc)        ; ld a,(bc)        | 041976 041944 || 041976 0A          4537  ASSEM4:   LD      A,(BC)
call $0439a4     ; call $04396c     | 041977 041945 || 041977 CD A4 39 04 4538     CALL    OUT_
inc bc           ; inc bc           | 04197B 041949 || 04197B 03          4539     INC     BC
dec l            ; dec l            | 04197C 04194A || 04197C 2D          4540     DEC     L
jr nz,$-$07      ; jr nz,$-$07      | 04197D 04194B || 04197D 20 F7       4541     JR      NZ,ASSEM4
call $04397f     ; call $043947     | 04197F 04194D || 04197F CD 7F 39 04 4542     CALL    CRLF
jp $0418cd       ; jp $04189b       | 041983 041951 || 041983 C3 CD 18 04 4543     JP      ASSEM
call $04198f     ; call $04195d     | 041987 041955 || 041987 CD 8F 19 04 4545  HEXSP:   CALL    HEX_EX
ld a,$20         ; ld a,$20         | 04198B 041959 || 04198B 3E 20       4546     LD      A,' '
jr $+$14         ; jr $+$14         | 04198D 04195B || 04198D 18 12       4547     JR      OUTCH1
push af          ; push af          | 04198F 04195D || 04198F F5          4548  HEX_EX:   PUSH    AF
rrca             ; rrca             | 041990 04195E || 041990 0F          4549     RRCA
rrca             ; rrca             | 041991 04195F || 041991 0F          4550     RRCA
rrca             ; rrca             | 041992 041960 || 041992 0F          4551     RRCA
rrca             ; rrca             | 041993 041961 || 041993 0F          4552     RRCA
call $041999     ; call $041967     | 041994 041962 || 041994 CD 99 19 04 4553     CALL    HEXOUT
pop af           ; pop af           | 041998 041966 || 041998 F1          4554     POP     AF
and $0f          ; and $0f          | 041999 041967 || 041999 E6 0F       4555  HEXOUT:   AND     0FH
add a,$90        ; add a,$90        | 04199B 041969 || 04199B C6 90       4556     ADD     A,90H
daa              ; daa              | 04199D 04196B || 04199D 27          4557     DAA
adc a,$40        ; adc a,$40        | 04199E 04196C || 04199E CE 40       4558     ADC     A,40H
daa              ; daa              | 0419A0 04196E || 0419A0 27          4559     DAA
jp $0439a4       ; jp $04396c       | 0419A1 04196F || 0419A1 C3 A4 39 04 4560  OUTCH1:   JP      OUT_
cp $2e           ; cp $2e           | 0419A5 041973 || 0419A5 FE 2E       4576  ASMB:   CP      '.'   ; Check for a dot; this indicates a label
jr nz,$+$21      ; jr nz,$+$21      | 0419A7 041975 || 0419A7 20 1F       4577     JR      NZ,ASMB1  ; No, so just process the instruction
inc iy           ; inc iy           | 0419A9 041977 || 0419A9 FD 23       4578     INC     IY   ; Skip past the dot to the label name
push ix          ; push ix          | 0419AB 041979 || 0419AB DD E5       4579     PUSH    IX   ; Store the code destination pointer
call $040c96     ; call $040c8e     | 0419AD 04197B || 0419AD CD 96 0C 04 4580     CALL    VAR_   ; Create a variable
push af          ; push af          | 0419B1 04197F || 0419B1 F5          4581     PUSH    AF
call $040998     ; call $040993     | 0419B2 041980 || 0419B2 CD 98 09 04 4582     CALL    ZERO   ; Zero it
ld a,($113042)   ; ld a,($044c42)   | 0419B6 041984 || 0419B6 3A 42 30 11 4583     LD A,(PC+2)
ld l,a           ; ld l,a           | 0419BA 041988 || 0419BA 6F          4584     LD L,A   ; The MSB of the 24-bit address
exx              ; exx              | 0419BB 041989 || 0419BB D9          4585     EXX
ld hl,($113040)  ; ld hl,($044c40)  | 0419BC 04198A || 0419BC 2A 40 30 11 4586     LD      HL,(PC)   ; The LSW of the 24-bit address (only 16-bits used)
exx              ; exx              | 0419C0 04198E || 0419C0 D9          4587     EXX
pop af           ; pop af           | 0419C1 04198F || 0419C1 F1          4588     POP     AF
call $041608     ; call $0415d6     | 0419C2 041990 || 0419C2 CD 08 16 04 4589     CALL    STORE   ; Store the program counter
pop ix           ; pop ix           | 0419C6 041994 || 0419C6 DD E1       4590     POP     IX   ; Restore the code destination pointer
ld a,($044d40)   ; ld a,($044d40)   | 0419C8 041996 || 0419C8 3A 40 4D 04 4592  ASMB1:   LD A,(LISTON)  ; Get the OPT flags
and $80          ; and $80          | 0419CC 04199A || 0419CC E6 80       4593     AND 80H
ld d,a           ; ld d,a           | 0419CE 04199C || 0419CE 57          4594     LD      D,A       ;  D: Clear the flags and set the initial ADL mode (copied from bit 7 of LISTON)
call $041ded     ; call $041db5     | 0419CF 04199D || 0419CF CD ED 1D 04 4595     CALL    SKIP   ; Skip any whitespace
ret z            ; ret z            | 0419D3 0419A1 || 0419D3 C8          4596     RET     Z   ; And return if there is nothing further to process
cp $d6           ; cp $d6           | 0419D4 0419A2 || 0419D4 FE D6       4597     CP      TCALL   ; Check if it is the token CALL (it will have been tokenised by BASIC)
ld c,$c4         ; ld c,$c4         | 0419D6 0419A4 || 0419D6 0E C4       4598     LD      C,0C4H   ;  A: The base operand
inc iy           ; inc iy           | 0419D8 0419A6 || 0419D8 FD 23       4599     INC     IY   ; Skip past the token
jp z,$041b22     ; jp z,$041aea     | 0419DA 0419A8 || 0419DA CA 22 1B 04 4600     JP      Z,GROUP13_1  ; And jump to GROUP13, which handles CALL
dec iy           ; dec iy           | 0419DE 0419AC || 0419DE FD 2B       4601     DEC     IY   ; Skip back, as we're not doing the above at this point
ld hl,$041e04    ; ld hl,$041dcc    | 0419E0 0419AE || 0419E0 21 04 1E 04 4602     LD      HL,OPCODS  ; HL: Pointer to the eZ80 opcodes table
call $041d9c     ; call $041d64     | 0419E4 0419B2 || 0419E4 CD 9C 1D 04 4603     CALL    FIND   ; Find the opcode
ret c            ; ret c            | 0419E8 0419B6 || 0419E8 D8          4604     RET     C   ; If not found, then return; carry indicates an error condition
ld c,b           ; ld c,b           | 0419E9 0419B7 || 0419E9 48          4605     LD      C,B       ;  C: A copy of the opcode
sub $44          ; sub $44          | 0419EA 0419B8 || 0419EA D6 44       4610     SUB     68   ; The number of opcodes in GROUP0 and GROUP1
jr nc,$+$0a      ; jr nc,$+$0a      | 0419EC 0419BA || 0419EC 30 08       4611     JR      NC,GROUP02  ; If not in that range, then check GROUP2
cp $cb           ; cp $cb           | 0419EE 0419BC || 0419EE FE CB       4612     CP      15-68   ; Anything between 15 and 68 (neat compare trick here)
call nc,$041cf5  ; call nc,$041cbd  | 0419F0 0419BE || 0419F0 D4 F5 1C 04 4613     CALL    NC,ED   ; Needs to be prefixed with ED
jr $+$78         ; jr $+$78         | 0419F4 0419C2 || 0419F4 18 76       4614     JR      BYTE0   ; Then write the opcode byte
sub $0a          ; sub $0a          | 0419F6 0419C4 || 0419F6 D6 0A       4619  GROUP02:  SUB     10   ; The number of opcodes in GROUP2 and GROUP3
jr nc,$+$14      ; jr nc,$+$14      | 0419F8 0419C6 || 0419F8 30 12       4620     JR      NC,GROUP04  ; If not in that range, then check GROUP4
cp $f9           ; cp $f9           | 0419FA 0419C8 || 0419FA FE F9       4621     CP      3-10   ;
call c,$041d8a   ; call c,$041d52   | 0419FC 0419CA || 0419FC DC 8A 1D 04 4622     CALL    C,BIT_
ret c            ; ret c            | 041A00 0419CE || 041A00 D8          4623     RET     C
call $041d5b     ; call $041d23     | 041A01 0419CF || 041A01 CD 5B 1D 04 4624     CALL    REGLO
ret c            ; ret c            | 041A05 0419D3 || 041A05 D8          4625     RET     C
call $041cf9     ; call $041cc1     | 041A06 0419D4 || 041A06 CD F9 1C 04 4626     CALL    CB
jr $+$62         ; jr $+$62         | 041A0A 0419D8 || 041A0A 18 60       4627     JR      BYTE0
sub $03          ; sub $03          | 041A0C 0419DA || 041A0C D6 03       4631  GROUP04:  SUB     3   ; The number of opcodes in GROUP4
jr nc,$+$09      ; jr nc,$+$09      | 041A0E 0419DC || 041A0E 30 07       4632     JR      NC,GROUP05  ; If not in that range, then check GROUP5
call $041d7d     ; call $041d45     | 041A10 0419DE || 041A10 CD 7D 1D 04 4633  GROUP04_1:  CALL    PAIR_EX
ret c            ; ret c            | 041A14 0419E2 || 041A14 D8          4634     RET     C
jr $+$57         ; jr $+$57         | 041A15 0419E3 || 041A15 18 55       4635     JR      BYTE0
sub $0a          ; sub $0a          | 041A17 0419E5 || 041A17 D6 0A       4640  GROUP05:  SUB     8+2   ; The number of opcodes in GROUP5 and GROUP6
jr nc,$+$3b      ; jr nc,$+$3b      | 041A19 0419E7 || 041A19 30 39       4641     JR      NC,GROUP07
cp $fd           ; cp $fd           | 041A1B 0419E9 || 041A1B FE FD       4642     CP      5-8
ld b,$07         ; ld b,$07         | 041A1D 0419EB || 041A1D 06 07       4643     LD      B,7
call nc,$041d09  ; call nc,$041cd1  | 041A1F 0419ED || 041A1F D4 09 1D 04 4644     CALL    NC,OPND   ; Get the first operand
ld a,b           ; ld a,b           | 041A23 0419F1 || 041A23 78          4645     LD      A,B
cp $07           ; cp $07           | 041A24 0419F2 || 041A24 FE 07       4646     CP      7   ; Is the operand 'A'?
jr nz,$+$17      ; jr nz,$+$17      | 041A26 0419F4 || 041A26 20 15       4647     JR      NZ,GROUP05_HL  ; No, so check for HL, IX or IY
call $041d5b     ; call $041d23     | 041A28 0419F6 || 041A28 CD 5B 1D 04 4649  GROUP05_1:  CALL    REGLO   ; Handle ADD A,?
ld a,c           ; ld a,c           | 041A2C 0419FA || 041A2C 79          4650     LD      A,C
jr nc,$+$30      ; jr nc,$+$30      | 041A2D 0419FB || 041A2D 30 2E       4651     JR      NC,BIND1  ; If it is a register, then write that out
xor $46          ; xor $46          | 041A2F 0419FD || 041A2F EE 46       4652     XOR     46H   ; Handle ADD A,n
call $041cfb     ; call $041cc3     | 041A31 0419FF || 041A31 CD FB 1C 04 4653     CALL    BIND
call $041d3b     ; call $041d03     | 041A35 041A03 || 041A35 CD 3B 1D 04 4654  DB_:   CALL    NUMBER
jp $041af4       ; jp $041abc       | 041A39 041A07 || 041A39 C3 F4 1A 04 4655     JP      VAL8
and $3f          ; and $3f          | 041A3D 041A0B || 041A3D E6 3F       4657  GROUP05_HL:  AND     3FH
cp $0c           ; cp $0c           | 041A3F 041A0D || 041A3F FE 0C       4658     CP      12
scf              ; scf              | 041A41 041A0F || 041A41 37          4659     SCF
ret nz           ; ret nz           | 041A42 041A10 || 041A42 C0          4660     RET     NZ
ld a,c           ; ld a,c           | 041A43 041A11 || 041A43 79          4661     LD      A,C
cp $80           ; cp $80           | 041A44 041A12 || 041A44 FE 80       4662     CP      80H
ld c,$09         ; ld c,$09         | 041A46 041A14 || 041A46 0E 09       4663     LD      C,9
jr z,$-$38       ; jr z,$-$38       | 041A48 041A16 || 041A48 28 C6       4664     JR      Z,GROUP04_1
xor $1c          ; xor $1c          | 041A4A 041A18 || 041A4A EE 1C       4665     XOR     1CH
rrca             ; rrca             | 041A4C 041A1A || 041A4C 0F          4666     RRCA
ld c,a           ; ld c,a           | 041A4D 041A1B || 041A4D 4F          4667     LD      C,A
call $041cf5     ; call $041cbd     | 041A4E 041A1C || 041A4E CD F5 1C 04 4668     CALL    ED
jr $-$42         ; jr $-$42         | 041A52 041A20 || 041A52 18 BC       4669     JR      GROUP04_1
sub $02          ; sub $02          | 041A54 041A22 || 041A54 D6 02       4673  GROUP07:  SUB     2   ; The number of opcodes in GROUP7
jr nc,$+$1b      ; jr nc,$+$1b      | 041A56 041A24 || 041A56 30 19       4674     JR      NC,GROUP08
call $041d62     ; call $041d2a     | 041A58 041A26 || 041A58 CD 62 1D 04 4675     CALL    REGHI
ld a,c           ; ld a,c           | 041A5C 041A2A || 041A5C 79          4676     LD      A,C
jp nc,$041cfb    ; jp nc,$041cc3    | 041A5D 041A2B || 041A5D D2 FB 1C 04 4677  BIND1:   JP      NC,BIND
xor $64          ; xor $64          | 041A61 041A2F || 041A61 EE 64       4678     XOR     64H
rlca             ; rlca             | 041A63 041A31 || 041A63 07          4679     RLCA
rlca             ; rlca             | 041A64 041A32 || 041A64 07          4680     RLCA
rlca             ; rlca             | 041A65 041A33 || 041A65 07          4681     RLCA
ld c,a           ; ld c,a           | 041A66 041A34 || 041A66 4F          4682     LD      C,A
call $041d82     ; call $041d4a     | 041A67 041A35 || 041A67 CD 82 1D 04 4683     CALL    PAIR1_EX
ret c            ; ret c            | 041A6B 041A39 || 041A6B D8          4684     RET     C
ld a,c           ; ld a,c           | 041A6C 041A3A || 041A6C 79          4685  BYTE0:   LD      A,C
jp $041d2a       ; jp $041cf2       | 041A6D 041A3B || 041A6D C3 2A 1D 04 4686     JP      BYTE_
sub $02          ; sub $02          | 041A71 041A3F || 041A71 D6 02       4690  GROUP08:  SUB 2   ; The number of opcodes in GROUP8
jr nc,$+$2e      ; jr nc,$+$28      | 041A73 041A41 || 041A73 30 2C       4691     JR NC,GROUP09
cp $ff           ; cp $ff           | 041A75 041A43 || 041A75 FE FF       4692     CP 1-2
call z,$041d3b   ; call z,$041d03   | 041A77 041A45 || 041A77 CC 3B 1D 04 4693     CALL    Z,NUMBER  ; Fetch number first if OUT
ex af,af'        ; ex af,af'        | 041A7B 041A49 || 041A7B 08          4694     EX      AF,AF'   ; Save flags
call $041d4f     ; call $041d17     | 041A7C 041A4A || 041A7C CD 4F 1D 04 4695     CALL    REG   ; Get the register value regardless
ret c            ; ret c            | 041A80 041A4E || 041A80 D8          4696     RET     C   ; Return if not a register
ex af,af'        ; ex af,af'        | 041A81 041A4F || 041A81 08          4697     EX      AF,AF'   ; Restore the flags
call c,$041d3b   ; call c,$041d03   | 041A82 041A50 || 041A82 DC 3B 1D 04 4698     CALL    C,NUMBER  ; Fetch number last if IN
ld a,b           ; ld a,b           | 041A86 041A54 || 041A86 78          4699     LD A,B   ; Get the register number
cp $06           ; cp $06           | 041A87 041A55 || 041A87 FE 06       4700     CP 6   ; Fail on (HL)
scf              ; scf              | 041A89 041A57 || 041A89 37          4701     SCF
ret z            ; ret z            | 041A8A 041A58 || 041A8A C8          4702     RET Z
cp $08           ; cp $08           | 041A8B 041A59 || 041A8B FE 08       4703     CP 8   ; Check it is just single pairs only
ccf              ; ccf              | 041A8D 041A5B || 041A8D 3F          4704     CCF
ret c            ; ret c            | 041A8E 041A5C || 041A8E D8          4705     RET C   ; And return if it is an invalid register
rlca             ; rlca             | 041A8F 041A5D || 041A8F 07          4706     RLCA    ; Bind with the operand
rlca             ; rlca             | 041A90 041A31 || 041A90 07          4707     RLCA
rlca             ; rlca             | 041A91 041A32 || 041A91 07          4708     RLCA
add a,c          ;                  | 041A92        || 041A92 81          4709     ADD A,C
ld c,a           ; ld c,a           | 041A93 041A34 || 041A93 4F          4710     LD C,A
call $041cf5     ; call $041d4a     | 041A94 041A35 || 041A94 CD F5 1C 04 4711     CALL ED   ; Prefix with ED
ld a,c           ;                  | 041A98        || 041A98 79          4712     LD A,C
call $041d2a     ;                  | 041A99        || 041A99 CD 2A 1D 04 4713     CALL BYTE_   ; Write out the operand
jp $041af4       ; jp $041cf2       | 041A9D 041A3B || 041A9D C3 F4 1A 04 4714     JP VAL8   ; Write out the value
sub $02          ; sub $02          | 041AA1 041A3F || 041AA1 D6 02       4719  GROUP09:  SUB     2   ; The number of opcodes in GROUP09 amd GROUP10
jr nc,$+$27      ; jr nc,$+$28      | 041AA3 041A41 || 041AA3 30 25       4720     JR      NC,GROUP11
cp $ff           ; cp $ff           | 041AA5 041A43 || 041AA5 FE FF       4721     CP      1-2   ; Check if Group 9 or Group 1
call z,$041ce9   ; call z,$041d03   | 041AA7 041A45 || 041AA7 CC E9 1C 04 4722     CALL    Z,CORN   ; Call CORN if Group 10 (OUT)
ex af,af'        ; ex af,af'        | 041AAB 041A49 || 041AAB 08          4723     EX      AF,AF'   ; Save flags
call $041d62     ; call $041d17     | 041AAC 041A4A || 041AAC CD 62 1D 04 4724     CALL    REGHI   ; Get the register value regardless
ret c            ; ret c            | 041AB0 041A4E || 041AB0 D8          4725     RET     C   ; Return if not a register
ex af,af'        ; ex af,af'        | 041AB1 041A4F || 041AB1 08          4726     EX      AF,AF'   ; Restore the flags
call c,$041ce9   ; call c,$041cb1   | 041AB2 041A7A || 041AB2 DC E9 1C 04 4727     CALL    C,CORN   ; Call CORN if Group 9 (IN)
inc h            ; inc h            | 041AB6 041A7E || 041AB6 24          4728     INC     H   ; If it is IN r,(C) or OUT (C),r then
jr z,$-$4b       ; jr z,$-$45       | 041AB7 041A7F || 041AB7 28 B3       4729     JR      Z,BYTE0   ; Just write the operand out
ld a,b           ; ld a,b           | 041AB9 041A81 || 041AB9 78          4731     LD      A,B   ; Check the register
cp $07           ; cp $07           | 041ABA 041A82 || 041ABA FE 07       4732     CP      7
scf              ; scf              | 041ABC 041A84 || 041ABC 37          4733     SCF
ret nz           ; ret nz           | 041ABD 041A85 || 041ABD C0          4734     RET     NZ   ; If it is not A, then return
ld a,c           ; ld a,c           | 041ABE 041A86 || 041ABE 79          4736     LD      A,C   ; Bind the register with the operand
xor $03          ; xor $03          | 041ABF 041A87 || 041ABF EE 03       4737     XOR     3
rlca             ; rlca             | 041AC1 041A89 || 041AC1 07          4738     RLCA
rlca             ; rlca             | 041AC2 041A8A || 041AC2 07          4739     RLCA
rlca             ; rlca             | 041AC3 041A8B || 041AC3 07          4740     RLCA
call $041d2a     ; call $041cf2     | 041AC4 041A8C || 041AC4 CD 2A 1D 04 4741     CALL    BYTE_   ; Write out the operand
jr $+$2c         ; jr $+$2c         | 041AC8 041A90 || 041AC8 18 2A       4742     JR      VAL8   ; And the value
sub $02          ; sub $02          | 041ACA 041A92 || 041ACA D6 02       4746  GROUP11:  SUB     2   ; The number of opcodes in GROUP11
jr nc,$+$2d      ; jr nc,$+$2d      | 041ACC 041A94 || 041ACC 30 2B       4747     JR      NC,GROUP12
cp $ff           ; cp $ff           | 041ACE 041A96 || 041ACE FE FF       4748     CP      1-2
call nz,$041d69  ; call nz,$041d31  | 041AD0 041A98 || 041AD0 C4 69 1D 04 4749     CALL    NZ,COND_
ld a,c           ; ld a,c           | 041AD4 041A9C || 041AD4 79          4750     LD      A,C
jr nc,$+$04      ; jr nc,$+$04      | 041AD5 041A9D || 041AD5 30 02       4751     JR      NC,@F
ld a,$18         ; ld a,$18         | 041AD7 041A9F || 041AD7 3E 18       4752     LD      A,18H
call $041d2a     ; call $041cf2     | 041AD9 041AA1 || 041AD9 CD 2A 1D 04 4753  @@:   CALL    BYTE_
call $041d3b     ; call $041d03     | 041ADD 041AA5 || 041ADD CD 3B 1D 04 4754     CALL    NUMBER
ld de,($113040)  ; ld de,($044c40)  | 041AE1 041AA9 || 041AE1 ED 5B 40 30 4755     LD      DE,(PC)
inc de           ; inc de           | 041AE6 041AAE || 041AE6 13          4756     INC     DE
scf              ; scf              | 041AE7 041AAF || 041AE7 37          4757     SCF
sbc hl,de        ; sbc hl,de        | 041AE8 041AB0 || 041AE8 ED 52       4758     SBC     HL,DE
ld a,l           ; ld a,l           | 041AEA 041AB2 || 041AEA 7D          4759     LD      A,L
rla              ; rla              | 041AEB 041AB3 || 041AEB 17          4760     RLA
sbc a,a          ; sbc a,a          | 041AEC 041AB4 || 041AEC 9F          4761     SBC     A,A
cp h             ; cp h             | 041AED 041AB5 || 041AED BC          4762     CP      H
ld a,$01         ; ld a,$01         | 041AEE 041AB6 || 041AEE 3E 01       4763  TOOFAR:   LD      A,1
jp nz,$043798    ; jp nz,$043760    | 041AF0 041AB8 || 041AF0 C2 98 37 04 4764     JP      NZ,ERROR_  ; Throw an "Out of range" error
ld a,l           ; ld a,l           | 041AF4 041ABC || 041AF4 7D          4765  VAL8:   LD      A,L
jp $041d2a       ; jp $041cf2       | 041AF5 041ABD || 041AF5 C3 2A 1D 04 4766     JP      BYTE_
sub $01          ; sub $01          | 041AF9 041AC1 || 041AF9 D6 01       4770  GROUP12:  SUB 1   ; The number of opcodes in GROUP12
jr nc,$+$23      ; jr nc,$+$23      | 041AFB 041AC3 || 041AFB 30 21       4771     JR NC,GROUP13
call $041c4f     ; call $041c17     | 041AFD 041AC5 || 041AFD CD 4F 1C 04 4772     CALL EZ80SF_PART  ; Evaluate the suffix (just LIL and SIS)
ret c            ; ret c            | 041B01 041AC9 || 041B01 D8          4773     RET C   ; Exit if an invalid suffix is provided
call $041d69     ; call $041d31     | 041B02 041ACA || 041B02 CD 69 1D 04 4774     CALL    COND_   ; Evaluate the conditions
ld a,c           ; ld a,c           | 041B06 041ACE || 041B06 79          4775     LD      A,C
jr nc,$+$0f      ; jr nc,$+$0f      | 041B07 041ACF || 041B07 30 0D       4776     JR      NC,GROUP12_1
ld a,b           ; ld a,b           | 041B09 041AD1 || 041B09 78          4777     LD      A,B
and $3f          ; and $3f          | 041B0A 041AD2 || 041B0A E6 3F       4778     AND     3FH
cp $06           ; cp $06           | 041B0C 041AD4 || 041B0C FE 06       4779     CP      6
ld a,$e9         ; ld a,$e9         | 041B0E 041AD6 || 041B0E 3E E9       4780     LD      A,0E9H
jp z,$041d2a     ; jp z,$041cf2     | 041B10 041AD8 || 041B10 CA 2A 1D 04 4781     JP      Z,BYTE_
ld a,$c3         ; ld a,$c3         | 041B14 041ADC || 041B14 3E C3       4782     LD      A,0C3H
call $041d2a     ; call $041cf2     | 041B16 041ADE || 041B16 CD 2A 1D 04 4783  GROUP12_1:  CALL    BYTE_   ; Output the opcode (with conditions)
jp $041ca4       ; jp $041c6c       | 041B1A 041AE2 || 041B1A C3 A4 1C 04 4784     JP ADDR_   ; Output the address
sub $01          ; sub $01          | 041B1E 041AE6 || 041B1E D6 01       4788  GROUP13:  SUB 1   ; The number of opcodes in GROUP13
jr nc,$+$0e      ; jr nc,$+$0e      | 041B20 041AE8 || 041B20 30 0C       4789     JR NC,GROUP14
call $041c67     ; call $041c2f     | 041B22 041AEA || 041B22 CD 67 1C 04 4790  GROUP13_1:  CALL EZ80SF_FULL  ; Evaluate the suffix
call $041b49     ; call $041b11     | 041B26 041AEE || 041B26 CD 49 1B 04 4791     CALL    GROUP15_1  ; Output the opcode (with conditions)
jp $041ca4       ; jp $041c6c       | 041B2A 041AF2 || 041B2A C3 A4 1C 04 4792     JP ADDR_   ; Output the address
sub $01          ; sub $01          | 041B2E 041AF6 || 041B2E D6 01       4796  GROUP14:  SUB 1   ; The number of opcodes in GROUP14
jr nc,$+$15      ; jr nc,$+$15      | 041B30 041AF8 || 041B30 30 13       4797     JR NC,GROUP15
call $041c67     ; call $041c2f     | 041B32 041AFA || 041B32 CD 67 1C 04 4798     CALL EZ80SF_FULL  ; Evaluate the suffix
ret c            ; ret c            | 041B36 041AFE || 041B36 D8          4799     RET C   ; Exit if an invalid suffix provided
call $041d3b     ; call $041d03     | 041B37 041AFF || 041B37 CD 3B 1D 04 4800     CALL    NUMBER
and c            ; and c            | 041B3B 041B03 || 041B3B A1          4801     AND     C
or h             ; or h             | 041B3C 041B04 || 041B3C B4          4802     OR      H
jr nz,$-$4f      ; jr nz,$-$4f      | 041B3D 041B05 || 041B3D 20 AF       4803     JR      NZ,TOOFAR
ld a,l           ; ld a,l           | 041B3F 041B07 || 041B3F 7D          4804     LD      A,L
or c             ; or c             | 041B40 041B08 || 041B40 B1          4805     OR      C
jp $041d2a       ; jp $041cf2       | 041B41 041B09 || 041B41 C3 2A 1D 04 4806       JP      BYTE_
sub $01          ; sub $01          | 041B45 041B0D || 041B45 D6 01       4810  GROUP15:  SUB 1   ; The number of opcodes in GROUP15
jr nc,$+$11      ; jr nc,$+$11      | 041B47 041B0F || 041B47 30 0F       4811     JR NC,GROUP16
call $041d69     ; call $041d31     | 041B49 041B11 || 041B49 CD 69 1D 04 4812  GROUP15_1:  CALL    COND_
ld a,c           ; ld a,c           | 041B4D 041B15 || 041B4D 79          4813     LD      A,C
jp nc,$041d2a    ; jp nc,$041cf2    | 041B4E 041B16 || 041B4E D2 2A 1D 04 4814     JP      NC,BYTE_
or $09           ; or $09           | 041B52 041B1A || 041B52 F6 09       4815     OR      9
jp $041d2a       ; jp $041cf2       | 041B54 041B1C || 041B54 C3 2A 1D 04 4816     JP      BYTE_
sub $01          ; sub $01          | 041B58 041B20 || 041B58 D6 01       4820  GROUP16:  SUB 1   ; The number of opcodes in GROUP16
jr nc,$+$76      ; jr nc,$+$76      | 041B5A 041B22 || 041B5A 30 74       4821     JR NC,GROUP17
call $041c67     ; call $041c2f     | 041B5C 041B24 || 041B5C CD 67 1C 04 4822     CALL EZ80SF_FULL  ; Evaluate the suffix
call $041d98     ; call $041d60     | 041B60 041B28 || 041B60 CD 98 1D 04 4823     CALL    LDOP   ; Check for accumulator loads
jp nc,$041cc4    ; jp nc,$041c8c    | 041B64 041B2C || 041B64 D2 C4 1C 04 4824     JP      NC,LDA   ; Yes, so jump here
call $041d62     ; call $041d2a     | 041B68 041B30 || 041B68 CD 62 1D 04 4825     CALL    REGHI
ex af,af'        ; ex af,af'        | 041B6C 041B34 || 041B6C 08          4826     EX      AF,AF'
call $041ded     ; call $041db5     | 041B6D 041B35 || 041B6D CD ED 1D 04 4827     CALL    SKIP
cp $28           ; cp $28           | 041B71 041B39 || 041B71 FE 28       4828     CP      '('   ; Check for bracket
jr z,$+$26       ; jr z,$+$26       | 041B73 041B3B || 041B73 28 24       4829     JR      Z,LDIN   ; Yes, so we're doing an indirect load from memory
ex af,af'        ; ex af,af'        | 041B75 041B3D || 041B75 08          4830     EX      AF,AF'
jp nc,$041a28    ; jp nc,$0419f6    | 041B76 041B3E || 041B76 D2 28 1A 04 4831     JP      NC,GROUP05_1  ; Load single register direct; go here
ld c,$01         ; ld c,$01         | 041B7A 041B42 || 041B7A 0E 01       4832     LD      C,1
call $041d82     ; call $041d4a     | 041B7C 041B44 || 041B7C CD 82 1D 04 4833     CALL    PAIR1_EX
ret c            ; ret c            | 041B80 041B48 || 041B80 D8          4834     RET     C
ld a,$0e         ; ld a,$0e         | 041B81 041B49 || 041B81 3E 0E       4835     LD      A,14
cp b             ; cp b             | 041B83 041B4B || 041B83 B8          4836     CP      B
ld b,a           ; ld b,a           | 041B84 041B4C || 041B84 47          4837     LD      B,A
call z,$041d7d   ; call z,$041d45   | 041B85 041B4D || 041B85 CC 7D 1D 04 4838     CALL    Z,PAIR_EX
ld a,b           ; ld a,b           | 041B89 041B51 || 041B89 78          4839     LD      A,B
and $3f          ; and $3f          | 041B8A 041B52 || 041B8A E6 3F       4840     AND     3FH
cp $0c           ; cp $0c           | 041B8C 041B54 || 041B8C FE 0C       4841     CP      12
ld a,c           ; ld a,c           | 041B8E 041B56 || 041B8E 79          4842     LD      A,C
jp nz,$041b16    ; jp nz,$041ade    | 041B8F 041B57 || 041B8F C2 16 1B 04 4843     JP      NZ,GROUP12_1  ; Load register pair direct; go here
ld a,$f9         ; ld a,$f9         | 041B93 041B5B || 041B93 3E F9       4844     LD      A,0F9H
jp $041d2a       ; jp $041cf2       | 041B95 041B5D || 041B95 C3 2A 1D 04 4845     JP      BYTE_
ex af,af'        ; ex af,af'        | 041B99 041B61 || 041B99 08          4847  LDIN:   EX      AF,AF'
push bc          ; push bc          | 041B9A 041B62 || 041B9A C5          4848     PUSH    BC
call nc,$041d5b  ; call nc,$041d23  | 041B9B 041B63 || 041B9B D4 5B 1D 04 4849     CALL    NC,REGLO
ld a,c           ; ld a,c           | 041B9F 041B67 || 041B9F 79          4850     LD      A,C
pop bc           ; pop bc           | 041BA0 041B68 || 041BA0 C1          4851     POP     BC
jp nc,$041cfb    ; jp nc,$041cc3    | 041BA1 041B69 || 041BA1 D2 FB 1C 04 4852     JP      NC,BIND
ld c,$0a         ; ld c,$0a         | 041BA5 041B6D || 041BA5 0E 0A       4853     LD      C,0AH
call $041d82     ; call $041d4a     | 041BA7 041B6F || 041BA7 CD 82 1D 04 4854     CALL    PAIR1_EX
call $041ccf     ; call $041c97     | 041BAB 041B73 || 041BAB CD CF 1C 04 4855     CALL    LD16
jp nc,$041b16    ; jp nc,$041ade    | 041BAF 041B77 || 041BAF D2 16 1B 04 4856     JP      NC,GROUP12_1
call $041d3b     ; call $041d03     | 041BB3 041B7B || 041BB3 CD 3B 1D 04 4857     CALL    NUMBER
ld c,$02         ; ld c,$02         | 041BB7 041B7F || 041BB7 0E 02       4858     LD      C,2
call $041d7d     ; call $041d45     | 041BB9 041B81 || 041BB9 CD 7D 1D 04 4859     CALL    PAIR_EX
call $041ccf     ; call $041c97     | 041BBD 041B85 || 041BBD CD CF 1C 04 4860     CALL    LD16
ret c            ; ret c            | 041BC1 041B89 || 041BC1 D8          4861     RET     C
call $041d2a     ; call $041cf2     | 041BC2 041B8A || 041BC2 CD 2A 1D 04 4862     CALL    BYTE_
bit 7,d          ; bit 7,d          | 041BC6 041B8E || 041BC6 CB 7A       4863     BIT 7,D   ; Check the ADL flag
jp nz,$041cb9    ; jp nz,$041c81    | 041BC8 041B90 || 041BC8 C2 B9 1C 04 4864     JP NZ,VAL24   ; If it is set, then use 24-bit addresses
jp $041cac       ; jp $041c74       | 041BCC 041B94 || 041BCC C3 AC 1C 04 4865     JP      VAL16   ; Otherwise use 16-bit addresses
sub $01          ; sub $01          | 041BD0 041B98 || 041BD0 D6 01       4869  GROUP17:  SUB 1   ; The number of opcodes in GROUP17
jr nc,$+$27      ; jr nc,$+$27      | 041BD2 041B9A || 041BD2 30 25       4870     JR NC,OPTS
call $041cf5     ; call $041cbd     | 041BD4 041B9C || 041BD4 CD F5 1C 04 4871     CALL ED   ; Needs to be prefixed with ED
call $041d4f     ; call $041d17     | 041BD8 041BA0 || 041BD8 CD 4F 1D 04 4872     CALL REG   ; Fetch the register
jr nc,$+$10      ; jr nc,$+$10      | 041BDC 041BA4 || 041BDC 30 0E       4873     JR NC,GROUP17_1  ; It's just a register
ld a,$64         ; ld a,$64         | 041BDE 041BA6 || 041BDE 3E 64       4875     LD A,64H   ; Opcode for TST n
call $041d2a     ; call $041cf2     | 041BE0 041BA8 || 041BE0 CD 2A 1D 04 4876     CALL BYTE_   ; Write out the opcode
call $041d3b     ; call $041d03     | 041BE4 041BAC || 041BE4 CD 3B 1D 04 4877     CALL NUMBER   ; Get the number
jp $041af4       ; jp $041abc       | 041BE8 041BB0 || 041BE8 C3 F4 1A 04 4878     JP VAL8   ; And write that out
ld a,b           ; ld a,b           | 041BEC 041BB4 || 041BEC 78          4880  GROUP17_1:  LD A,B   ; Check the register rangs
cp $08           ; cp $08           | 041BED 041BB5 || 041BED FE 08       4881     CP 8
ccf              ; ccf              | 041BEF 041BB7 || 041BEF 3F          4882     CCF
ret c            ; ret c            | 041BF0 041BB8 || 041BF0 D8          4883     RET C   ; Ret with carry flag set for error if out of range
rlca             ; rlca             | 041BF1 041BB9 || 041BF1 07          4884     RLCA    ; Get the opcode value
rlca             ; rlca             | 041BF2 041BBA || 041BF2 07          4885     RLCA
rlca             ; rlca             | 041BF3 041BBB || 041BF3 07          4886     RLCA
add a,c          ; add a,c          | 041BF4 041BBC || 041BF4 81          4887     ADD A,C   ; Add the opcode base in
jp $041d2a       ; jp $041cf2       | 041BF5 041BBD || 041BF5 C3 2A 1D 04 4888     JP BYTE_
sub $02          ; sub $02          | 041BF9 041BC1 || 041BF9 D6 02       4893  OPTS:   SUB 2
jr nc,$+$2d      ; jr nc,$+$2d      | 041BFB 041BC3 || 041BFB 30 2B       4894     JR NC, DEFS
cp $ff           ; cp $ff           | 041BFD 041BC5 || 041BFD FE FF       4895     CP 1-2   ; Check for ADL opcode
jr z,$+$15       ; jr z,$+$15       | 041BFF 041BC7 || 041BFF 28 13       4896     JR Z, ADL_
call $041d3b     ; call $041d03     | 041C01 041BC9 || 041C01 CD 3B 1D 04 4898  OPT:   CALL    NUMBER   ; Fetch the OPT value
ld hl,$044d40    ; ld hl,$044d40    | 041C05 041BCD || 041C05 21 40 4D 04 4899     LD      HL,LISTON  ; Address of the LISTON/OPT flag
and $07          ; and $07          | 041C09 041BD1 || 041C09 E6 07       4900     AND 7   ; Only interested in the first three bits
ld c,a           ; ld c,a           | 041C0B 041BD3 || 041C0B 4F          4901     LD      C,A   ; Store the new OPT value in C
rld              ; rld              | 041C0C 041BD4 || 041C0C ED 6F       4902     RLD    ; Shift the top nibble of LISTON (OPT) into A
and $08          ; and $08          | 041C0E 041BD6 || 041C0E E6 08       4903     AND 8   ; Clear the bottom three bits, preserving the ADL bit
or c             ; or c             | 041C10 041BD8 || 041C10 B1          4904     OR C   ; OR in the new value
rrd              ; rrd              | 041C11 041BD9 || 041C11 ED 67       4905     RRD    ; And shift the nibble back in
ret              ; ret              | 041C13 041BDB || 041C13 C9          4906     RET
call $041d3b     ; call $041d03     | 041C14 041BDC || 041C14 CD 3B 1D 04 4908  ADL_:   CALL NUMBER   ; Fetch the ADL value
and $01          ; and $01          | 041C18 041BE0 || 041C18 E6 01       4909     AND 1   ; Only interested if it is 0 or 1
rrca             ; rrca             | 041C1A 041BE2 || 041C1A 0F          4910     RRCA    ; Rotate to bit 7
ld c,a           ; ld c,a           | 041C1B 041BE3 || 041C1B 4F          4911     LD C,A   ; Store in C
ld a,($044d40)   ; ld a,($044d40)   | 041C1C 041BE4 || 041C1C 3A 40 4D 04 4912     LD A,(LISTON)  ; Get the LISTON system variable
and $7f          ; and $7f          | 041C20 041BE8 || 041C20 E6 7F       4913     AND 7Fh   ; Clear bit 7
or c             ; or c             | 041C22 041BEA || 041C22 B1          4914     OR C   ; OR in the ADL value
ld ($044d40),a   ; ld ($044d40),a   | 041C23 041BEB || 041C23 32 40 4D 04 4915     LD (LISTON),A  ; Store
ret              ; ret              | 041C27 041BEF || 041C27 C9          4916     RET
or a             ; or a             | 041C28 041BF0 || 041C28 B7          4920  DEFS:   OR A   ; Handle DEFB
jp z,$041a35     ; jp z,$041a03     | 041C29 041BF1 || 041C29 CA 35 1A 04 4921     JP Z, DB_
dec a            ; dec a            | 041C2D 041BF5 || 041C2D 3D          4922     DEC A   ; Handle DEFW
jp z,$041ca8     ; jp z,$041c70     | 041C2E 041BF6 || 041C2E CA A8 1C 04 4923     JP Z, ADDR16
dec a            ; dec a            | 041C32 041BFA || 041C32 3D          4924     DEC A   ; Handle DEFL
jp z,$041cb5     ; jp z,$041c7d     | 041C33 041BFB || 041C33 CA B5 1C 04 4925     JP Z, ADDR24
push ix          ; push ix          | 041C37 041BFF || 041C37 DD E5       4927     PUSH    IX   ; Handle DEFM
call $04031a     ; call $040315     | 041C39 041C01 || 041C39 CD 1A 03 04 4928     CALL    EXPRS
pop ix           ; pop ix           | 041C3D 041C05 || 041C3D DD E1       4929     POP     IX
ld hl,$044a00    ; ld hl,$044a00    | 041C3F 041C07 || 041C3F 21 00 4A 04 4930     LD      HL,ACCS
xor a            ; xor a            | 041C43 041C0B || 041C43 AF          4931  @@:   XOR     A
cp e             ; cp e             | 041C44 041C0C || 041C44 BB          4932     CP      E
ret z            ; ret z            | 041C45 041C0D || 041C45 C8          4933     RET     Z
ld a,(hl)        ; ld a,(hl)        | 041C46 041C0E || 041C46 7E          4934     LD      A,(HL)
inc hl           ; inc hl           | 041C47 041C0F || 041C47 23          4935     INC     HL
call $041d2a     ; call $041cf2     | 041C48 041C10 || 041C48 CD 2A 1D 04 4936     CALL    BYTE_
dec e            ; dec e            | 041C4C 041C14 || 041C4C 1D          4937     DEC     E
jr $-$0a         ; jr $-$0a         | 041C4D 041C15 || 041C4D 18 F4       4938     JR      @B
ld a,(iy)        ; ld a,(iy)        | 041C4F 041C17 || 041C4F FD 7E 00    4943  EZ80SF_PART:  LD A,(IY)   ; Check for a dot
cp $2e           ; cp $2e           | 041C52 041C1A || 041C52 FE 2E       4944     CP '.'
jr z,$+$04       ; jr z,$+$04       | 041C54 041C1C || 041C54 28 02       4945     JR Z, @F   ; If present, then carry on processing the eZ80 suffix
or a             ; or a             | 041C56 041C1E || 041C56 B7          4946     OR A   ; Reset the carry flag (no error)
ret              ; ret              | 041C57 041C1F || 041C57 C9          4947     RET    ; And return
inc iy           ; inc iy           | 041C58 041C20 || 041C58 FD 23       4948  @@:   INC IY   ; Skip the dot
push bc          ; push bc          | 041C5A 041C22 || 041C5A C5          4949     PUSH BC   ; Push the operand
ld hl,$042083    ; ld hl,$04204b    | 041C5B 041C23 || 041C5B 21 83 20 04 4950     LD HL,EZ80SFS_2  ; Check the shorter fully qualified table (just LIL and SIS)
call $041d9c     ; call $041d64     | 041C5F 041C27 || 041C5F CD 9C 1D 04 4951     CALL FIND   ; Look up the operand
jr nc,$+$26      ; jr nc,$+$26      | 041C63 041C2B || 041C63 30 24       4952     JR NC,EZ80SF_OK
pop bc           ; pop bc           | 041C65 041C2D || 041C65 C1          4953     POP BC   ; Not found at this point, so will return with a C (error)
ret              ; ret              | 041C66 041C2E || 041C66 C9          4954     RET
ld a,(iy)        ; ld a,(iy)        | 041C67 041C2F || 041C67 FD 7E 00    4956  EZ80SF_FULL:  LD A,(IY)   ; Check for a dot
cp $2e           ; cp $2e           | 041C6A 041C32 || 041C6A FE 2E       4957     CP '.'
jr z,$+$04       ; jr z,$+$04       | 041C6C 041C34 || 041C6C 28 02       4958     JR Z,@F   ; If present, then carry on processing the eZ80 suffix
or a             ; or a             | 041C6E 041C36 || 041C6E B7          4959     OR A   ; Reset the carry flag (no error)
ret              ; ret              | 041C6F 041C37 || 041C6F C9          4960     RET    ; And return
inc iy           ; inc iy           | 041C70 041C38 || 041C70 FD 23       4961  @@:   INC IY    ; Skip the dot
push bc          ; push bc          | 041C72 041C3A || 041C72 C5          4962     PUSH BC   ; Push the operand
ld hl,$04207b    ; ld hl,$042043    | 041C73 041C3B || 041C73 21 7B 20 04 4963     LD HL,EZ80SFS_1  ; First check the fully qualified table
call $041d9c     ; call $041d64     | 041C77 041C3F || 041C77 CD 9C 1D 04 4964     CALL FIND    ; Look up the operand
jr nc,$+$0e      ; jr nc,$+$0e      | 041C7B 041C43 || 041C7B 30 0C       4965     JR NC,EZ80SF_OK  ; Yes, we've found it, so go write it out
call $041c98     ; call $041c60     | 041C7D 041C45 || 041C7D CD 98 1C 04 4966     CALL EZ80SF_TABLE  ; Get the correct shortcut table in HL based upon the ADL mode
call $041d9c     ; call $041d64     | 041C81 041C49 || 041C81 CD 9C 1D 04 4967     CALL FIND
jr nc,$+$04      ; jr nc,$+$04      | 041C85 041C4D || 041C85 30 02       4968     JR NC,EZ80SF_OK
pop bc           ; pop bc           | 041C87 041C4F || 041C87 C1          4969     POP BC   ; Not found at this point, so will return with a C (error)
ret              ; ret              | 041C88 041C50 || 041C88 C9          4970     RET
ld a,b           ; ld a,b           | 041C89 041C51 || 041C89 78          4972  EZ80SF_OK:  LD A,B   ; The operand value
call nc,$041d2a  ; call nc,$041cf2  | 041C8A 041C52 || 041C8A D4 2A 1D 04 4973     CALL NC,BYTE_   ; Write it out if found
res 7,d          ; res 7,d          | 041C8E 041C56 || 041C8E CB BA       4974     RES 7,D   ; Clear the default ADL mode from the flags
and $02          ; and $02          | 041C90 041C58 || 041C90 E6 02       4975     AND 2   ; Check the second half of the suffix (.xxL)
rrca             ; rrca             | 041C92 041C5A || 041C92 0F          4976     RRCA    ; Shift into bit 7
rrca             ; rrca             | 041C93 041C5B || 041C93 0F          4977     RRCA
or d             ; or d             | 041C94 041C5C || 041C94 B2          4978     OR D   ; Or into bit 7 of D
ld d,a           ; ld d,a           | 041C95 041C5D || 041C95 57          4979     LD D,A
pop bc           ; pop bc           | 041C96 041C5E || 041C96 C1          4980     POP BC    ; Restore the operand
ret              ; ret              | 041C97 041C5F || 041C97 C9          4981     RET
ld hl,$04208c    ; ld hl,$042054    | 041C98 041C60 || 041C98 21 8C 20 04 4983  EZ80SF_TABLE:  LD HL,EZ80SFS_ADL0  ; Return with the ADL0 lookup table
bit 7,d          ; bit 7,d          | 041C9C 041C64 || 041C9C CB 7A       4984     BIT  7,D   ; if bit 7 of D is 0
ret z            ; ret z            | 041C9E 041C66 || 041C9E C8          4985     RET Z
ld hl,$042097    ; ld hl,$04205f    | 041C9F 041C67 || 041C9F 21 97 20 04 4986     LD HL,EZ80SFS_ADL1  ; Otherwise return with the ADL1 lookup table
ret              ; ret              | 041CA3 041C6B || 041CA3 C9          4987     RET
bit 7,d          ; bit 7,d          | 041CA4 041C6C || 041CA4 CB 7A       4989  ADDR_:   BIT 7,D   ; Check the ADL flag
jr nz,$+$0f      ; jr nz,$+$0f      | 041CA6 041C6E || 041CA6 20 0D       4990     JR NZ,ADDR24   ; If it is set, then use 24-bit addresses
call $041d3b     ; call $041d03     | 041CA8 041C70 || 041CA8 CD 3B 1D 04 4992  ADDR16:   CALL NUMBER   ; Fetch an address (16-bit) and fall through to VAL16
call $041af4     ; call $041abc     | 041CAC 041C74 || 041CAC CD F4 1A 04 4993  VAL16:   CALL    VAL8   ; Write out a 16-bit value (HL)
ld a,h           ; ld a,h           | 041CB0 041C78 || 041CB0 7C          4994     LD      A,H
jp $041d2a       ; jp $041cf2       | 041CB1 041C79 || 041CB1 C3 2A 1D 04 4995     JP      BYTE_
call $041d3b     ; call $041d03     | 041CB5 041C7D || 041CB5 CD 3B 1D 04 4997  ADDR24:   CALL    NUMBER   ; Fetch an address (24-bit) and fall through to VAL24
call $041cac     ; call $041c74     | 041CB9 041C81 || 041CB9 CD AC 1C 04 4998  VAL24:   CALL VAL16   ; Lower 16-bits are in HL
exx              ; exx              | 041CBD 041C85 || 041CBD D9          4999     EXX
ld a,l           ; ld a,l           | 041CBE 041C86 || 041CBE 7D          5000     LD A,L   ; Upper 16-bits are in HL', just need L' to make up 24-bit value
exx              ; exx              | 041CBF 041C87 || 041CBF D9          5001     EXX
jp $041d2a       ; jp $041cf2       | 041CC0 041C88 || 041CC0 C3 2A 1D 04 5002     JP BYTE_
cp $04           ; cp $04           | 041CC4 041C8C || 041CC4 FE 04       5004  LDA:   CP      4
call c,$041cf5   ; call c,$041cbd   | 041CC6 041C8E || 041CC6 DC F5 1C 04 5005     CALL    C,ED
ld a,b           ; ld a,b           | 041CCA 041C92 || 041CCA 78          5006     LD      A,B
jp $041d2a       ; jp $041cf2       | 041CCB 041C93 || 041CCB C3 2A 1D 04 5007     JP      BYTE_
ld a,b           ; ld a,b           | 041CCF 041C97 || 041CCF 78          5009  LD16:   LD      A,B
jr c,$+$11       ; jr c,$+$11       | 041CD0 041C98 || 041CD0 38 0F       5010     JR      C,LD8
ld a,b           ; ld a,b           | 041CD2 041C9A || 041CD2 78          5011     LD      A,B
and $3f          ; and $3f          | 041CD3 041C9B || 041CD3 E6 3F       5012     AND     3FH
cp $0c           ; cp $0c           | 041CD5 041C9D || 041CD5 FE 0C       5013     CP      12
ld a,c           ; ld a,c           | 041CD7 041C9F || 041CD7 79          5014     LD      A,C
ret z            ; ret z            | 041CD8 041CA0 || 041CD8 C8          5015     RET     Z
call $041cf5     ; call $041cbd     | 041CD9 041CA1 || 041CD9 CD F5 1C 04 5016     CALL    ED
ld a,c           ; ld a,c           | 041CDD 041CA5 || 041CDD 79          5017     LD      A,C
or $43           ; or $43           | 041CDE 041CA6 || 041CDE F6 43       5018     OR      43H
ret              ; ret              | 041CE0 041CA8 || 041CE0 C9          5019     RET
cp $07           ; cp $07           | 041CE1 041CA9 || 041CE1 FE 07       5021  LD8:   CP      7
scf              ; scf              | 041CE3 041CAB || 041CE3 37          5022     SCF
ret nz           ; ret nz           | 041CE4 041CAC || 041CE4 C0          5023     RET     NZ
ld a,c           ; ld a,c           | 041CE5 041CAD || 041CE5 79          5024     LD      A,C
or $30           ; or $30           | 041CE6 041CAE || 041CE6 F6 30       5025     OR      30H
ret              ; ret              | 041CE8 041CB0 || 041CE8 C9          5026     RET
push bc          ; push bc          | 041CE9 041CB1 || 041CE9 C5          5030  CORN:   PUSH    BC
call $041d09     ; call $041cd1     | 041CEA 041CB2 || 041CEA CD 09 1D 04 5031     CALL    OPND   ; Get the operand
bit 5,b          ; bit 5,b          | 041CEE 041CB6 || 041CEE CB 68       5032     BIT     5,B
pop bc           ; pop bc           | 041CF0 041CB8 || 041CF0 C1          5033     POP     BC
jr z,$+$4a       ; jr z,$+$4a       | 041CF1 041CB9 || 041CF1 28 48       5034     JR      Z,NUMBER  ; If bit 5 is clear, then it's IN A,(N) or OUT (N),A, so fetch the port number
ld h,$ff         ; ld h,$ff         | 041CF3 041CBB || 041CF3 26 FF       5035     LD      H,-1   ; At this point it's IN r,(C) or OUT (C),r, so flag by setting H to &FF
ld a,$ed         ; ld a,$ed         | 041CF5 041CBD || 041CF5 3E ED       5037  ED:   LD      A,0EDH   ; Write an ED prefix out
jr $+$33         ; jr $+$33         | 041CF7 041CBF || 041CF7 18 31       5038     JR      BYTE_
ld a,$cb         ; ld a,$cb         | 041CF9 041CC1 || 041CF9 3E CB       5040  CB:   LD      A,0CBH
cp $76           ; cp $76           | 041CFB 041CC3 || 041CFB FE 76       5041  BIND:   CP      76H
scf              ; scf              | 041CFD 041CC5 || 041CFD 37          5042     SCF
ret z            ; ret z            | 041CFE 041CC6 || 041CFE C8          5043     RET     Z                ; Reject LD (HL),(HL)
call $041d2a     ; call $041cf2     | 041CFF 041CC7 || 041CFF CD 2A 1D 04 5044     CALL    BYTE_
bit 6,d          ; bit 6,d          | 041D03 041CCB || 041D03 CB 72       5045     BIT 6,D   ; Check the index bit in flags
ret z            ; ret z            | 041D05 041CCD || 041D05 C8          5046     RET     Z
ld a,e           ; ld a,e           | 041D06 041CCE || 041D06 7B          5047     LD      A,E   ; If there is an index, output the offset
jr $+$23         ; jr $+$23         | 041D07 041CCF || 041D07 18 21       5048     JR      BYTE_
push hl          ; push hl          | 041D09 041CD1 || 041D09 E5          5057  OPND:   PUSH    HL   ; Preserve HL
ld hl,$04200d    ; ld hl,$041fd5    | 041D0A 041CD2 || 041D0A 21 0D 20 04 5058     LD      HL,OPRNDS  ; The operands table
call $041d9c     ; call $041d64     | 041D0E 041CD6 || 041D0E CD 9C 1D 04 5059     CALL    FIND   ; Find the operand
pop hl           ; pop hl           | 041D12 041CDA || 041D12 E1          5060     POP     HL
ret c            ; ret c            | 041D13 041CDB || 041D13 D8          5061     RET     C   ; Return if not found
bit 7,b          ; bit 7,b          | 041D14 041CDC || 041D14 CB 78       5062     BIT     7,B   ; Check if it is an index register (IX, IY)
ret z            ; ret z            | 041D16 041CDE || 041D16 C8          5063     RET     Z   ; Return if it isn't
set 6,d          ; set 6,d          | 041D17 041CDF || 041D17 CB F2       5064     SET 6,D   ; Set flag to indicate we've got an index
bit 3,b          ; bit 3,b          | 041D19 041CE1 || 041D19 CB 58       5065     BIT     3,B   ; Check if an offset is required
push hl          ; push hl          | 041D1B 041CE3 || 041D1B E5          5066     PUSH    HL
call z,$041d31   ; call z,$041cf9   | 041D1C 041CE4 || 041D1C CC 31 1D 04 5067     CALL    Z,OFFSET_EX  ; If bit 3 of B is zero, then get the offset
ld e,l           ; ld e,l           | 041D20 041CE8 || 041D20 5D          5068     LD      E,L   ; E: The offset
pop hl           ; pop hl           | 041D21 041CE9 || 041D21 E1          5069     POP     HL
ld a,$dd         ; ld a,$dd         | 041D22 041CEA || 041D22 3E DD       5070     LD A,DDH   ; IX prefix
bit 6,b          ; bit 6,b          | 041D24 041CEC || 041D24 CB 70       5071     BIT     6,B   ; If bit 6 is reset then
jr z,$+$04       ; jr z,$+$04       | 041D26 041CEE || 041D26 28 02       5072     JR      Z,BYTE_   ; It's an IX instruction, otherwise set
ld a,$fd         ; ld a,$fd         | 041D28 041CF0 || 041D28 3E FD       5073     LD A,FDH   ; IY prefix
ld (ix),a        ; ld (ix),a        | 041D2A 041CF2 || 041D2A DD 77 00    5075  BYTE_:   LD      (IX),A   ; Write a byte out
inc ix           ; inc ix           | 041D2D 041CF5 || 041D2D DD 23       5076     INC     IX
or a             ; or a             | 041D2F 041CF7 || 041D2F B7          5077     OR      A
ret              ; ret              | 041D30 041CF8 || 041D30 C9          5078     RET
ld a,(iy)        ; ld a,(iy)        | 041D31 041CF9 || 041D31 FD 7E 00    5080  OFFSET_EX:   LD      A,(IY)
cp $29           ; cp $29           | 041D34 041CFC || 041D34 FE 29       5081     CP      ')'
ld hl,$000000    ; ld hl,$000000    | 041D36 041CFE || 041D36 21 00 00 00 5082     LD      HL,0
ret z            ; ret z            | 041D3A 041D02 || 041D3A C8          5083     RET     Z
call $041ded     ; call $041db5     | 041D3B 041D03 || 041D3B CD ED 1D 04 5084  NUMBER:   CALL    SKIP
push bc          ; push bc          | 041D3F 041D07 || 041D3F C5          5085     PUSH    BC
push de          ; push de          | 041D40 041D08 || 041D40 D5          5086     PUSH    DE
push ix          ; push ix          | 041D41 041D09 || 041D41 DD E5       5087     PUSH    IX
call $04030f     ; call $04030a     | 041D43 041D0B || 041D43 CD 0F 03 04 5088     CALL    EXPRI
pop ix           ; pop ix           | 041D47 041D0F || 041D47 DD E1       5089     POP     IX
exx              ; exx              | 041D49 041D11 || 041D49 D9          5090     EXX
pop de           ; pop de           | 041D4A 041D12 || 041D4A D1          5091     POP     DE
pop bc           ; pop bc           | 041D4B 041D13 || 041D4B C1          5092     POP     BC
ld a,l           ; ld a,l           | 041D4C 041D14 || 041D4C 7D          5093     LD      A,L
or a             ; or a             | 041D4D 041D15 || 041D4D B7          5094     OR      A
ret              ; ret              | 041D4E 041D16 || 041D4E C9          5095     RET
call $041d09     ; call $041cd1     | 041D4F 041D17 || 041D4F CD 09 1D 04 5097  REG:   CALL    OPND
ret c            ; ret c            | 041D53 041D1B || 041D53 D8          5098     RET     C
ld a,b           ; ld a,b           | 041D54 041D1C || 041D54 78          5099     LD      A,B
and $3f          ; and $3f          | 041D55 041D1D || 041D55 E6 3F       5100     AND     3FH
cp $08           ; cp $08           | 041D57 041D1F || 041D57 FE 08       5101     CP      8
ccf              ; ccf              | 041D59 041D21 || 041D59 3F          5102     CCF
ret              ; ret              | 041D5A 041D22 || 041D5A C9          5103     RET
call $041d4f     ; call $041d17     | 041D5B 041D23 || 041D5B CD 4F 1D 04 5105  REGLO:   CALL    REG
ret c            ; ret c            | 041D5F 041D27 || 041D5F D8          5106     RET     C
jr $+$35         ; jr $+$35         | 041D60 041D28 || 041D60 18 33       5107     JR      ORC
call $041d4f     ; call $041d17     | 041D62 041D2A || 041D62 CD 4F 1D 04 5109  REGHI:   CALL    REG
ret c            ; ret c            | 041D66 041D2E || 041D66 D8          5110     RET     C
jr $+$2b         ; jr $+$2b         | 041D67 041D2F || 041D67 18 29       5111     JR      SHL3
call $041d09     ; call $041cd1     | 041D69 041D31 || 041D69 CD 09 1D 04 5113  COND_:   CALL    OPND
ret c            ; ret c            | 041D6D 041D35 || 041D6D D8          5114     RET     C
ld a,b           ; ld a,b           | 041D6E 041D36 || 041D6E 78          5115     LD      A,B
and $1f          ; and $1f          | 041D6F 041D37 || 041D6F E6 1F       5116     AND     1FH
sub $10          ; sub $10          | 041D71 041D39 || 041D71 D6 10       5117     SUB     16
jr nc,$+$1f      ; jr nc,$+$1f      | 041D73 041D3B || 041D73 30 1D       5118     JR      NC,SHL3
cp $f1           ; cp $f1           | 041D75 041D3D || 041D75 FE F1       5119     CP      -15
scf              ; scf              | 041D77 041D3F || 041D77 37          5120     SCF
ret nz           ; ret nz           | 041D78 041D40 || 041D78 C0          5121     RET     NZ
ld a,$03         ; ld a,$03         | 041D79 041D41 || 041D79 3E 03       5122     LD      A,3
jr $+$17         ; jr $+$17         | 041D7B 041D43 || 041D7B 18 15       5123     JR      SHL3
call $041d09     ; call $041cd1     | 041D7D 041D45 || 041D7D CD 09 1D 04 5125  PAIR_EX:   CALL    OPND
ret c            ; ret c            | 041D81 041D49 || 041D81 D8          5126     RET     C
ld a,b           ; ld a,b           | 041D82 041D4A || 041D82 78          5127  PAIR1_EX:   LD      A,B
and $0f          ; and $0f          | 041D83 041D4B || 041D83 E6 0F       5128     AND     0FH
sub $08          ; sub $08          | 041D85 041D4D || 041D85 D6 08       5129     SUB     8
ret c            ; ret c            | 041D87 041D4F || 041D87 D8          5130     RET     C
jr $+$0a         ; jr $+$0a         | 041D88 041D50 || 041D88 18 08       5131     JR      SHL3
call $041d3b     ; call $041d03     | 041D8A 041D52 || 041D8A CD 3B 1D 04 5133  BIT_:   CALL    NUMBER
cp $08           ; cp $08           | 041D8E 041D56 || 041D8E FE 08       5134     CP      8
ccf              ; ccf              | 041D90 041D58 || 041D90 3F          5135     CCF
ret c            ; ret c            | 041D91 041D59 || 041D91 D8          5136     RET     C
rlca             ; rlca             | 041D92 041D5A || 041D92 07          5137  SHL3:   RLCA
rlca             ; rlca             | 041D93 041D5B || 041D93 07          5138     RLCA
rlca             ; rlca             | 041D94 041D5C || 041D94 07          5139     RLCA
or c             ; or c             | 041D95 041D5D || 041D95 B1          5140  ORC:   OR      C
ld c,a           ; ld c,a           | 041D96 041D5E || 041D96 4F          5141     LD      C,A
ret              ; ret              | 041D97 041D5F || 041D97 C9          5142     RET
ld hl,$042052    ; ld hl,$04201a    | 041D98 041D60 || 041D98 21 52 20 04 5144  LDOP:   LD      HL,LDOPS
call $041ded     ; call $041db5     | 041D9C 041D64 || 041D9C CD ED 1D 04 5155  FIND:   CALL    SKIP   ; Skip delimiters
ld b,$00         ; ld b,$00         | 041DA0 041D68 || 041DA0 06 00       5157  EXIT_:   LD      B,0   ; Set B to 0
scf              ; scf              | 041DA2 041D6A || 041DA2 37          5158     SCF    ; Set the carry flag
ret z            ; ret z            | 041DA3 041D6B || 041DA3 C8          5159     RET     Z   ; Returns if Z
cp $dd           ; cp $dd           | 041DA4 041D6C || 041DA4 FE DD       5161     CP      DEF_   ; Special case for token DEF (used in DEFB, DEFW, DEFL, DEFM)
jr z,$+$06       ; jr z,$+$06       | 041DA6 041D6E || 041DA6 28 04       5162     JR      Z,FIND0
cp $85           ; cp $85           | 041DA8 041D70 || 041DA8 FE 85       5163     CP      TOR+1   ; Special case for tokens AND and OR
ccf              ; ccf              | 041DAA 041D72 || 041DAA 3F          5164     CCF
ret c            ; ret c            | 041DAB 041D73 || 041DAB D8          5165     RET     C
ld a,(hl)        ; ld a,(hl)        | 041DAC 041D74 || 041DAC 7E          5166  FIND0:   LD      A,(HL)   ; Check for the end of the table (0 byte marker)
or a             ; or a             | 041DAD 041D75 || 041DAD B7          5167     OR      A
jr z,$-$0e       ; jr z,$-$0e       | 041DAE 041D76 || 041DAE 28 F0       5168     JR      Z,EXIT_   ; Exit
xor (iy)         ; xor (iy)         | 041DB0 041D78 || 041DB0 FD AE 00    5169     XOR     (IY)
and $5f          ; and $5f          | 041DB3 041D7B || 041DB3 E6 5F       5170     AND     01011111B
jr z,$+$0b       ; jr z,$+$0b       | 041DB5 041D7D || 041DB5 28 09       5171     JR      Z,FIND2
bit 7,(hl)       ; bit 7,(hl)       | 041DB7 041D7F || 041DB7 CB 7E       5172  FIND1:   BIT     7,(HL)
inc hl           ; inc hl           | 041DB9 041D81 || 041DB9 23          5173     INC     HL
jr z,$-$03       ; jr z,$-$03       | 041DBA 041D82 || 041DBA 28 FB       5174     JR      Z,FIND1
inc hl           ; inc hl           | 041DBC 041D84 || 041DBC 23          5175     INC     HL
inc b            ; inc b            | 041DBD 041D85 || 041DBD 04          5176     INC     B
jr $-$12         ; jr $-$12         | 041DBE 041D86 || 041DBE 18 EC       5177     JR      FIND0
push iy          ; push iy          | 041DC0 041D88 || 041DC0 FD E5       5179  FIND2:   PUSH    IY
bit 7,(hl)       ; bit 7,(hl)       | 041DC2 041D8A || 041DC2 CB 7E       5180  FIND3:   BIT     7,(HL)   ; Is this the end of token marker?
inc iy           ; inc iy           | 041DC4 041D8C || 041DC4 FD 23       5181     INC     IY
inc hl           ; inc hl           | 041DC6 041D8E || 041DC6 23          5182     INC     HL
jr nz,$+$13      ; jr nz,$+$13      | 041DC7 041D8F || 041DC7 20 11       5183     JR      NZ,FIND5  ; Yes
cp (hl)          ; cp (hl)          | 041DC9 041D91 || 041DC9 BE          5184     CP      (HL)
call z,$041dec   ; call z,$041db4   | 041DCA 041D92 || 041DCA CC EC 1D 04 5185     CALL    Z,SKIP0
ld a,(hl)        ; ld a,(hl)        | 041DCE 041D96 || 041DCE 7E          5186     LD      A,(HL)
xor (iy)         ; xor (iy)         | 041DCF 041D97 || 041DCF FD AE 00    5187     XOR     (IY)
and $5f          ; and $5f          | 041DD2 041D9A || 041DD2 E6 5F       5188     AND     01011111B
jr z,$-$12       ; jr z,$-$12       | 041DD4 041D9C || 041DD4 28 EC       5189     JR      Z,FIND3
pop iy           ; pop iy           | 041DD6 041D9E || 041DD6 FD E1       5190  FIND4:   POP     IY
jr $-$21         ; jr $-$21         | 041DD8 041DA0 || 041DD8 18 DD       5191     JR      FIND1
call $041798     ; call $041766     | 041DDA 041DA2 || 041DDA CD 98 17 04 5193  FIND5:   CALL    DELIM   ; Is it a delimiter?
call nz,$041e01  ; call nz,$041dc9  | 041DDE 041DA6 || 041DDE C4 01 1E 04 5194     CALL NZ,DOT    ; No, so also check whether it is a dot character (for suffixes)
call nz,$041dfb  ; call nz,$041dc3  | 041DE2 041DAA || 041DE2 C4 FB 1D 04 5195     CALL    NZ,SIGN   ; No, so also check whether it is a SIGN character ('+' or '-')
jr nz,$-$10      ; jr nz,$-$10      | 041DE6 041DAE || 041DE6 20 EE       5196     JR      NZ,FIND4  ; If it is not a sign or a delimiter, then loop
ld a,b           ; ld a,b           | 041DE8 041DB0 || 041DE8 78          5198  FIND6:   LD      A,B   ; At this point we have a token
ld b,(hl)        ; ld b,(hl)        | 041DE9 041DB1 || 041DE9 46          5199     LD      B,(HL)   ; Fetch the token type code
pop hl           ; pop hl           | 041DEA 041DB2 || 041DEA E1          5200     POP     HL   ; Restore the stack
ret              ; ret              | 041DEB 041DB3 || 041DEB C9          5201     RET
inc hl           ; inc hl           | 041DEC 041DB4 || 041DEC 23          5203  SKIP0:   INC     HL
call $041798     ; call $041766     | 041DED 041DB5 || 041DED CD 98 17 04 5204  SKIP:   CALL    DELIM   ; Is it a delimiter?
ret nz           ; ret nz           | 041DF1 041DB9 || 041DF1 C0          5205     RET     NZ   ; No, so return
call $0417a4     ; call $041772     | 041DF2 041DBA || 041DF2 CD A4 17 04 5206     CALL    TERM   ; Is it a terminator?
ret z            ; ret z            | 041DF6 041DBE || 041DF6 C8          5207     RET     Z   ; Yes, so return
inc iy           ; inc iy           | 041DF7 041DBF || 041DF7 FD 23       5208     INC     IY   ; Increment the basic program counter
jr $-$0c         ; jr $-$0c         | 041DF9 041DC1 || 041DF9 18 F2       5209     JR      SKIP   ; And loop
cp $2b           ; cp $2b           | 041DFB 041DC3 || 041DFB FE 2B       5211  SIGN:   CP      '+'   ; Check whether the character is a sign symbol
ret z            ; ret z            | 041DFD 041DC5 || 041DFD C8          5212     RET     Z
cp $2d           ; cp $2d           | 041DFE 041DC6 || 041DFE FE 2D       5213     CP      '-'
ret              ; ret              | 041E00 041DC8 || 041E00 C9          5214     RET
cp $2e           ; cp $2e           | 041E01 041DC9 || 041E01 FE 2E       5216  DOT:   CP '.'   ; Check if it is a dot character
ret              ; ret              | 041E03 041DCB || 041E03 C9          5217     RET
ld c,(hl)        ; ld c,(hl)        | 041E04 041DCC || 041E04 4E 4F 50 00 5223  OPCODS:   DB "NO","P"+80H,00h ; # 00h
ld c,a           ;                  | 041E05        || ld c,a                         ; 041DCD
ld d,b           ;                  | 041E06        || 
nop              ;                  | 041E07        || nop                            ; 041DCF
ld.sil c,h       ; ld.sil c,h       | 041E08 041DD0 || 041E08 52 4C 43 41 5224     DB "RLC","A"+80H,07h
ld b,e           ;                  | 041E0A        || ld b,e                         ; 041DD2
ld b,c           ;                  | 041E0B        || 
rlca             ;                  | 041E0C        || rlca                           ; 041DD4
ld b,l           ; ld b,l           | 041E0D 041DD5 || 041E0D 45 58 00 41 5225     DB "EX",0,"AF",0,"AF","'"+80H,08h
ld e,b           ;                  | 041E0E        || ld e,b                         ; 041DD6
nop              ;                  | 041E0F        || nop                            ; 041DD7
ld b,c           ;                  | 041E10        || ld b,c                         ; 041DD8
ld b,(hl)        ;                  | 041E11        || ld b,(hl)                      ; 041DD9
nop              ;                  | 041E12        || nop                            ; 041DDA
ld b,c           ;                  | 041E13        || ld b,c                         ; 041DDB
ld b,(hl)        ;                  | 041E14        || ld b,(hl)                      ; 041DDC
daa              ;                  | 041E15        || 
ex af,af'        ;                  | 041E16        || ex af,af'                      ; 041DDE
noni.sil         ; noni.sil         | 041E17 041DDF || 041E17 52 52 43 41 5226     DB "RRC","A"+80H,0FH
ld.sil b,e       ;                  | 041E18        || ld.sil b,e                     ; 041DE0
ld b,c           ;                  | 041E1A        || 
rrca             ;                  | 041E1B        || rrca                           ; 041DE3
ld.sil c,h       ; ld.sil c,h       | 041E1C 041DE4 || 041E1C 52 4C 41 17 5227     DB "RL","A"+80H,17H
ld b,c           ;                  | 041E1E        || 
rla              ;                  | 041E1F        || rla                            ; 041DE7
noni.sil         ; noni.sil         | 041E20 041DE8 || 041E20 52 52 41 1F 5228     DB "RR","A"+80H,1FH
ld.sil b,c       ;                  | 041E21        || 
rra              ;                  | 041E23        || rra                            ; 041DEB
ld b,h           ; ld b,h           | 041E24 041DEC || 041E24 44 41 41 27 5229     DB "DA","A"+80H,27H
ld b,c           ;                  | 041E25        || ld b,c                         ; 041DED
ld b,c           ;                  | 041E26        || 
daa              ;                  | 041E27        || 
ld b,e           ;                  | 041E28        || 041E28 43 50 4C 2F 5230     DB "CP","L"+80H,2FH
ld d,b           ;                  | 041E29        || 
ld c,h           ;                  | 041E2A        || 
cpl              ;                  | 041E2B        || 
ld d,e           ;                  | 041E2C        || 041E2C 53 43 46 37 5231     DB "SC","F"+80H,37H
ld b,e           ;                  | 041E2D        || 
ld b,(hl)        ;                  | 041E2E        || 
scf              ;                  | 041E2F        || 
ld b,e           ;                  | 041E30        || 041E30 43 43 46 3F 5232     DB "CC","F"+80H,3FH
ld b,e           ;                  | 041E31        || 
ld b,(hl)        ;                  | 041E32        || 
ccf              ;                  | 041E33        || 
ld c,b           ;                  | 041E34        || 041E34 48 41 4C 54 5233     DB "HAL","T"+80H,76H
ld b,c           ;                  | 041E35        || 
ld c,h           ;                  | 041E36        || 
ld d,h           ;                  | 041E37        || 
halt             ;                  | 041E38        || 
ld b,l           ;                  | 041E39        || 041E39 45 58 58 D9 5234     DB "EX","X"+80H,D9H
ld e,b           ;                  | 041E3A        || 
ld e,b           ;                  | 041E3B        || 
exx              ;                  | 041E3C        || 
ld b,l           ;                  | 041E3D        || 041E3D 45 58 00 44 5235     DB "EX",0,"DE",0,"H","L"+80H,EBH
ld e,b           ;                  | 041E3E        || 
nop              ;                  | 041E3F        || 
ld b,h           ;                  | 041E40        || 
ld b,l           ;                  | 041E41        || 
nop              ;                  | 041E42        || 
ld c,b           ;                  | 041E43        || 
ld c,h           ;                  | 041E44        || 
ex de,hl         ;                  | 041E45        || 
ld b,h           ;                  | 041E46        || 041E46 44 49 F3    5236     DB "D","I"+80H,F3H
di.lis           ;                  | 041E47        || 
ld b,l           ;                  | 041E49        || 041E49 45 49 FB    5237     DB "E","I"+80H,FBH
ei.lis           ;                  | 041E4A        || 
ld c,(hl)        ;                  | 041E4C        || 041E4C 4E 45 47 44 5242     DB "NE","G"+80H,44H ; 0Fh
ld b,l           ;                  | 041E4D        || 
ld b,a           ;                  | 041E4E        || 
ld b,h           ;                  | 041E4F        || 
ld.lis c,l       ;                  | 041E50        || 041E50 49 4D 00 30 5243     DB "IM",0,"0"+80H,46H
nop              ;                  | 041E52        || 
jr nc,$+$48      ;                  | 041E53        || 
ld.sil b,l       ;                  | 041E55        || 041E55 52 45 54 4E 5244     DB "RET","N"+80H,45H
ld d,h           ;                  | 041E57        || 
ld c,(hl)        ;                  | 041E58        || 
ld b,l           ;                  | 041E59        || 
ld c,l           ;                  | 041E5A        || 041E5A 4D 4C 54 00 5245     DB "MLT",0,"B","C"+80H,4CH
ld c,h           ;                  | 041E5B        || 
ld d,h           ;                  | 041E5C        || 
nop              ;                  | 041E5D        || 
ld b,d           ;                  | 041E5E        || 
ld b,e           ;                  | 041E5F        || 
ld c,h           ;                  | 041E60        || 
ld.sil b,l       ;                  | 041E61        || 041E61 52 45 54 49 5246     DB "RET","I"+80H,4DH
ld d,h           ;                  | 041E63        || 
ld.lis c,l       ;                  | 041E64        || 
ld.lis c,l       ;                  | 041E66        || 041E66 49 4D 00 31 5247     DB "IM",0,"1"+80H,56H
nop              ;                  | 041E68        || 
ld sp,$4c4d56    ;                  | 041E69        || 
ld d,h           ;                  | 041E6D        || 
nop              ;                  | 041E6E        || 
ld b,h           ;                  | 041E6F        || 
ld b,l           ;                  | 041E70        || 
ld e,h           ;                  | 041E71        || 
ld.lis c,l       ;                  | 041E72        || 041E72 49 4D 00 32 5249     DB "IM",0,"2"+80H,5EH
nop              ;                  | 041E74        || 
ld ($52525e),a   ;                  | 041E75        || 
ld b,h           ;                  | 041E79        || 
ld h,a           ;                  | 041E7A        || 
ld c,l           ;                  | 041E7B        || 041E7B 4D 4C 54 00 5251     DB "MLT",0,"H","L"+80H,6CH
ld c,h           ;                  | 041E7C        || 
ld d,h           ;                  | 041E7D        || 
nop              ;                  | 041E7E        || 
ld c,b           ;                  | 041E7F        || 
ld c,h           ;                  | 041E80        || 
ld l,h           ;                  | 041E81        || 
ld c,h           ;                  | 041E82        || 041E82 4C 44 00 4D 5252     DB "LD",0,"MB",0,"A"+80H,6DH
ld b,h           ;                  | 041E83        || 
nop              ;                  | 041E84        || 
ld c,l           ;                  | 041E85        || ld c,l                         ; 041E4D
ld b,d           ;                  | 041E86        || ld b,d                         ; 041E4E
nop              ;                  | 041E87        || nop                            ; 041E4F
ld b,c           ;                  | 041E88        || 
ld l,l           ;                  | 041E89        || ld l,l                         ; 041E51
ld c,h           ; ld c,h           | 041E8A 041E52 || 041E8A 4C 44 00 41 5253     DB "LD",0,"A",0,"M","B"+80H,6EH
ld b,h           ;                  | 041E8B        || ld b,h                         ; 041E53
nop              ;                  | 041E8C        || nop                            ; 041E54
ld b,c           ;                  | 041E8D        || ld b,c                         ; 041E55
nop              ;                  | 041E8E        || nop                            ; 041E56
ld c,l           ;                  | 041E8F        || ld c,l                         ; 041E57
ld b,d           ;                  | 041E90        || 
ld l,(hl)        ;                  | 041E91        || 
ld.sil c,h       ;                  | 041E92        || 041E92 52 4C 44 6F 5254     DB "RL","D"+80H,6FH
ld b,h           ;                  | 041E94        || 
ld l,a           ;                  | 041E95        || 
ld d,e           ;                  | 041E96        || 041E96 53 4C 50 76 5255     DB "SL","P"+80H,76H
ld c,h           ;                  | 041E97        || 
ld d,b           ;                  | 041E98        || 
halt             ;                  | 041E99        || halt                           ; 041E61
ld c,l           ; ld c,l           | 041E9A 041E62 || 041E9A 4D 4C 54 00 5256     DB "MLT",0,"S","P"+80H,7CH
ld c,h           ;                  | 041E9B        || ld c,h                         ; 041E63
ld d,h           ;                  | 041E9C        || ld d,h                         ; 041E64
nop              ;                  | 041E9D        || nop                            ; 041E65
ld d,e           ;                  | 041E9E        || ld d,e                         ; 041E66
ld d,b           ;                  | 041E9F        || 
ld a,h           ;                  | 041EA0        || ld a,h                         ; 041E68
ld d,e           ; ld d,e           | 041EA1 041E69 || 041EA1 53 54 4D 49 5257     DB "STMI","X"+80H,7DH
ld d,h           ;                  | 041EA2        || ld d,h                         ; 041E6A
ld c,l           ;                  | 041EA3        || ld c,l                         ; 041E6B
ld.lis e,b       ;                  | 041EA4        || 
ld a,l           ;                  | 041EA6        || ld a,l                         ; 041E6E
ld.sil d,e       ;                  | 041EA7        || 041EA7 52 53 4D 49 5258     DB "RSMI","X"+80H,7EH
ld c,l           ;                  | 041EA9        || 
ld.lis e,b       ;                  | 041EAA        || 
ld a,(hl)        ;                  | 041EAC        || 
ld.lis c,(hl)    ;                  | 041EAD        || 041EAD 49 4E 49 4D 5259     DB "INI","M"+80H,82H
ld.lis c,l       ;                  | 041EAF        || 
add a,d          ;                  | 041EB1        || 
ld c,a           ;                  | 041EB2        || 041EB2 4F 54 49 4D 5260     DB "OTI","M"+80H,83H
ld d,h           ;                  | 041EB3        || 
ld.lis c,l       ;                  | 041EB4        || 
add a,e          ;                  | 041EB6        || 
ld.lis c,(hl)    ;                  | 041EB7        || 041EB7 49 4E 49 32 5261     DB "INI","2"+80H,84H
ld.lis ($4984),a ;                  | 041EB9        || 
ld c,(hl)        ;                  | 041EBD        || 
ld b,h           ;                  | 041EBE        || 
ld c,l           ;                  | 041EBF        || 
adc a,d          ;                  | 041EC0        || 
ld c,a           ;                  | 041EC1        || 041EC1 4F 54 44 4D 5263     DB "OTD","M"+80H,8BH
ld d,h           ;                  | 041EC2        || 
ld b,h           ;                  | 041EC3        || 
ld c,l           ;                  | 041EC4        || 
adc a,e          ;                  | 041EC5        || 
ld.lis c,(hl)    ;                  | 041EC6        || 041EC6 49 4E 44 32 5264     DB "IND","2"+80H,8CH
ld b,h           ;                  | 041EC8        || 
ld ($4e498c),a   ;                  | 041EC9        || 
ld.lis c,l       ;                  | 041ECD        || 
sub.sil d        ;                  | 041ECF        || 
ld c,a           ;                  | 041ED1        || 041ED1 4F 54 49 4D 5266     DB "OTIM","R"+80H,93H
ld d,h           ;                  | 041ED2        || 
ld.lis c,l       ;                  | 041ED3        || 
sub.sil e        ;                  | 041ED5        || 
ld.lis c,(hl)    ;                  | 041ED7        || 041ED7 49 4E 49 32 5267     DB "INI2","R"+80H,94H
ld.lis ($9452),a ;                  | 041ED9        || 
ld.lis c,(hl)    ;                  | 041EDD        || 041EDD 49 4E 44 4D 5268     DB "INDM","R"+80H,9AH
ld b,h           ;                  | 041EDF        || 
ld c,l           ;                  | 041EE0        || 
sbc.sil a,d      ;                  | 041EE1        || 
ld c,a           ;                  | 041EE3        || 041EE3 4F 54 44 4D 5269     DB "OTDM","R"+80H,9BH
ld d,h           ;                  | 041EE4        || 
ld b,h           ;                  | 041EE5        || 
ld c,l           ;                  | 041EE6        || 
sbc.sil a,e      ;                  | 041EE7        || 
ld.lis c,(hl)    ;                  | 041EE9        || 041EE9 49 4E 44 32 5270     DB "IND2","R"+80H,9CH
ld b,h           ;                  | 041EEB        || 
ld ($4c9c52),a   ;                  | 041EEC        || 
ld b,h           ;                  | 041EF0        || 
and.lis b        ;                  | 041EF1        || 
ld b,e           ;                  | 041EF3        || 041EF3 43 50 49 A1 5272     DB "CP","I"+80H,A1H
ld d,b           ;                  | 041EF4        || 
and.lis c        ;                  | 041EF5        || 
ld.lis c,(hl)    ;                  | 041EF7        || 041EF7 49 4E 49 A2 5273     DB "IN","I"+80H,A2H
and.lis d        ;                  | 041EF9        || 
ld c,a           ;                  | 041EFB        || 041EFB 4F 55 54 49 5274     DB "OUTI","2"+80H,A4H ; These are swapped round so that FIND will find
ld d,l           ;                  | 041EFC        || 
ld d,h           ;                  | 041EFD        || 
ld.lis ($4fa4),a ;                  | 041EFE        || 
ld d,l           ;                  | 041F02        || 
ld d,h           ;                  | 041F03        || 
and.lis e        ;                  | 041F04        || 
ld c,h           ;                  | 041F06        || 041F06 4C 44 44 A8 5276     DB "LD","D"+80H,A8H
ld b,h           ;                  | 041F07        || 
ld b,h           ;                  | 041F08        || 
xor b            ;                  | 041F09        || 
ld b,e           ;                  | 041F0A        || 041F0A 43 50 44 A9 5277     DB "CP","D"+80H,A9H
ld d,b           ;                  | 041F0B        || 
ld b,h           ;                  | 041F0C        || 
xor c            ;                  | 041F0D        || 
ld.lis c,(hl)    ;                  | 041F0E        || 041F0E 49 4E 44 AA 5278     DB "IN","D"+80H,AAH
ld b,h           ;                  | 041F10        || 
xor d            ;                  | 041F11        || 
ld c,a           ;                  | 041F12        || 041F12 4F 55 54 44 5279     DB "OUTD","2"+80H,ACH ; Similarly these are swapped round so that FIND
ld d,l           ;                  | 041F13        || 
ld d,h           ;                  | 041F14        || 
ld b,h           ;                  | 041F15        || 
ld ($554fac),a   ;                  | 041F16        || 
ld d,h           ;                  | 041F1A        || 
ld b,h           ;                  | 041F1B        || 
xor e            ;                  | 041F1C        || 
ld c,h           ;                  | 041F1D        || 041F1D 4C 44 49 52 5281     DB "LDI","R"+80H,B0H
ld b,h           ;                  | 041F1E        || 
noni.lis         ;                  | 041F1F        || 
or.sil b         ;                  | 041F20        || 
ld b,e           ;                  | 041F22        || 041F22 43 50 49 52 5282     DB "CPI","R"+80H,B1H
ld d,b           ;                  | 041F23        || 
noni.lis         ;                  | 041F24        || 
or.sil c         ;                  | 041F25        || 
ld.lis c,(hl)    ;                  | 041F27        || 041F27 49 4E 49 52 5283     DB "INI","R"+80H,B2H
noni.lis         ;                  | 041F29        || 
or.sil d         ;                  | 041F2A        || 
ld c,a           ;                  | 041F2C        || 041F2C 4F 54 49 52 5284     DB "OTI","R"+80H,B3H
ld d,h           ;                  | 041F2D        || 
noni.lis         ;                  | 041F2E        || 
or.sil e         ;                  | 041F2F        || 
ld c,a           ;                  | 041F31        || 041F31 4F 54 49 32 5285     DB "OTI2","R"+80H,B4H
ld d,h           ;                  | 041F32        || 
ld.lis ($b452),a ;                  | 041F33        || 
ld c,h           ;                  | 041F37        || 041F37 4C 44 44 52 5286     DB "LDD","R"+80H,B8H
ld b,h           ;                  | 041F38        || 
ld b,h           ;                  | 041F39        || 
cp.sil b         ;                  | 041F3A        || 
ld b,e           ;                  | 041F3C        || 041F3C 43 50 44 52 5287     DB "CPD","R"+80H,B9H
ld d,b           ;                  | 041F3D        || 
ld b,h           ;                  | 041F3E        || 
cp.sil c         ;                  | 041F3F        || 
ld.lis c,(hl)    ;                  | 041F41        || 041F41 49 4E 44 52 5288     DB "IND","R"+80H,BAH
ld b,h           ;                  | 041F43        || 
cp.sil d         ;                  | 041F44        || 
ld c,a           ;                  | 041F46        || 041F46 4F 54 44 52 5289     DB "OTD","R"+80H,BBH
ld d,h           ;                  | 041F47        || 
ld b,h           ;                  | 041F48        || 
cp.sil e         ;                  | 041F49        || 
ld c,a           ;                  | 041F4B        || 041F4B 4F 54 44 32 5290     DB "OTD2","R"+80H,BCH
ld d,h           ;                  | 041F4C        || 
ld b,h           ;                  | 041F4D        || 
ld ($49bc52),a   ;                  | 041F4E        || 
ld c,(hl)        ;                  | 041F52        || 
noni.lis         ;                  | 041F53        || 
ld.sil e,b       ;                  | 041F54        || 
jp nz,$49544f    ;                  | 041F56        || 
ld.sil e,b       ;                  | 041F5A        || 
jp $444e49       ;                  | 041F5C        || 
ld.sil e,b       ;                  | 041F60        || 
jp z,$44544f     ;                  | 041F62        || 
ld.sil e,b       ;                  | 041F66        || 
bit 0,d          ;                  | 041F68        || 
ld.lis d,h       ;                  | 041F6A        || 
noni.sis         ;                  | 041F6C        || 
ld.sil b,l       ;                  | 041F6D        || 041F6D 52 45 53 80 5299     DB "RE","S"+80H,80H
ld d,e           ;                  | 041F6F        || 
add a,b          ;                  | 041F70        || 
ld d,e           ;                  | 041F71        || 041F71 53 45 54 C0 5300     DB "SE","T"+80H,C0H
ld b,l           ;                  | 041F72        || 
ld d,h           ;                  | 041F73        || 
ret nz           ;                  | 041F74        || 
ld.sil c,h       ;                  | 041F75        || 041F75 52 4C 43 00 5304     DB "RL","C"+80H,00H ; 47h
ld b,e           ;                  | 041F77        || 
nop              ;                  | 041F78        || 
noni.sil         ;                  | 041F79        || 041F79 52 52 43 08 5305     DB "RR","C"+80H,08H
ld.sil b,e       ;                  | 041F7A        || 
ex af,af'        ;                  | 041F7C        || 
ld.sil c,h       ;                  | 041F7D        || 041F7D 52 4C 10    5306     DB "R","L"+80H,10H
djnz $+$54       ;                  | 041F7F        || 
jr.sil $+$56     ;                  | 041F81        || 
ld c,h           ;                  | 041F84        || 
ld b,c           ;                  | 041F85        || 
jr nz,$+$55      ;                  | 041F86        || 
ld.sil b,c       ;                  | 041F88        || 
jr z,$+$55       ;                  | 041F8A        || 
ld.sil c,h       ;                  | 041F8C        || 
jr c,$+$52       ;                  | 041F8E        || 
ld c,a           ;                  | 041F90        || 
ld d,b           ;                  | 041F91        || 
pop bc           ;                  | 041F92        || 
ld d,b           ;                  | 041F93        || 041F93 50 55 53 48 5315     DB "PUS","H"+80H,C5H
ld d,l           ;                  | 041F94        || 
ld d,e           ;                  | 041F95        || 
ld c,b           ;                  | 041F96        || 
push bc          ;                  | 041F97        || 
ld b,l           ;                  | 041F98        || 041F98 45 58 00 28 5316     DB "EX",0,"(S","P"+80H,E3H
ld e,b           ;                  | 041F99        || 
nop              ;                  | 041F9A        || 
jr z,$+$55       ;                  | 041F9B        || 
ld d,b           ;                  | 041F9D        || 
ex (sp),hl       ;                  | 041F9E        || 
ld d,e           ;                  | 041F9F        || 041F9F 53 55 42 90 5320     DB "SU","B"+80H,90H ; 51h
ld d,l           ;                  | 041FA0        || 
ld b,d           ;                  | 041FA1        || 
sub b            ;                  | 041FA2        || 
ld b,c           ;                  | 041FA3        || 041FA3 41 4E 44 A0 5321     DB "AN","D"+80H,A0H
ld c,(hl)        ;                  | 041FA4        || 
ld b,h           ;                  | 041FA5        || 
and b            ;                  | 041FA6        || 
ld e,b           ;                  | 041FA7        || 041FA7 58 4F 52 A8 5322     DB "XO","R"+80H,A8H
ld c,a           ;                  | 041FA8        || 
xor.sil b        ;                  | 041FA9        || 
ld c,a           ;                  | 041FAB        || 041FAB 4F 52 B0    5323     DB "O","R"+80H,B0H
or.sil b         ;                  | 041FAC        || 
ld b,e           ;                  | 041FAE        || 041FAE 43 50 B8    5324     DB "C","P"+80H,B8H
ld d,b           ;                  | 041FAF        || 
cp b             ;                  | 041FB0        || 
add a,b          ;                  | 041FB1        || 041FB1 80 A0       5325     DB TAND,A0H  ; 56h TAND: Tokenised AND
and b            ;                  | 041FB2        || 
add a,h          ;                  | 041FB3        || 041FB3 84 B0       5326     DB TOR,B0H   ; 57h TOR: Tokenised OR
or b             ;                  | 041FB4        || 
ld b,c           ;                  | 041FB5        || 041FB5 41 44 44 80 5330     DB "AD","D"+80H,80H ; 58h
ld b,h           ;                  | 041FB6        || 
ld b,h           ;                  | 041FB7        || 
add a,b          ;                  | 041FB8        || 
ld b,c           ;                  | 041FB9        || 041FB9 41 44 43 88 5331     DB "AD","C"+80H,88H
ld b,h           ;                  | 041FBA        || 
ld b,e           ;                  | 041FBB        || 
adc a,b          ;                  | 041FBC        || 
ld d,e           ;                  | 041FBD        || 041FBD 53 42 43 98 5332     DB "SB","C"+80H,98H
ld b,d           ;                  | 041FBE        || 
ld b,e           ;                  | 041FBF        || 
sbc a,b          ;                  | 041FC0        || 
ld.lis c,(hl)    ;                  | 041FC1        || 041FC1 49 4E 43 04 5336     DB "IN","C"+80H,04H ; 5Bh
ld b,e           ;                  | 041FC3        || 
inc b            ;                  | 041FC4        || 
ld b,h           ;                  | 041FC5        || 041FC5 44 45 43 05 5337     DB "DE","C"+80H,05H
ld b,l           ;                  | 041FC6        || 
ld b,e           ;                  | 041FC7        || 
dec b            ;                  | 041FC8        || 
ld.lis c,(hl)    ;                  | 041FC9        || 041FC9 49 4E 30 00 5341     DB "IN","0"+80H,00H ; 5Dh
jr nc,$+$02      ;                  | 041FCB        || 
ld c,a           ;                  | 041FCD        || 041FCD 4F 55 54 30 5342     DB "OUT","0"+80H,01H
ld d,l           ;                  | 041FCE        || 
ld d,h           ;                  | 041FCF        || 
jr nc,$+$03      ;                  | 041FD0        || 
ld.lis c,(hl)    ;                  | 041FD2        || 041FD2 49 4E 40    5346     DB "I","N"+80H,40H  ; 5Fh
ld.sis c,a       ;                  | 041FD4        || 
ld d,l           ;                  | 041FD6        || 
ld d,h           ;                  | 041FD7        || 
ld b,c           ;                  | 041FD8        || 
ld c,d           ;                  | 041FD9        || 041FD9 4A 52 20    5354     DB "J","R"+80H,20H  ; 61h
jr.sil nz,$+$47  ;                  | 041FDA        || 
ld c,d           ;                  | 041FDD        || 
ld c,(hl)        ;                  | 041FDE        || 
ld e,d           ;                  | 041FDF        || 
djnz $+$4c       ;                  | 041FE0        || 
ld d,b           ;                  | 041FE2        || 
jp nz,$4c4143    ;                  | 041FE3        || 
ld c,h           ;                  | 041FE7        || 
call nz,$545352  ;                  | 041FE8        || 
rst $00          ;                  | 041FEC        || 
ld.sil b,l       ;                  | 041FED        || 041FED 52 45 54 C0 5371     DB "RE","T"+80H,C0H ; 66h
ld d,h           ;                  | 041FEF        || 
ret nz           ;                  | 041FF0        || 
ld c,h           ;                  | 041FF1        || 041FF1 4C 44 40    5375     DB "L","D"+80H,40H  ; 67h
ld b,h           ;                  | 041FF2        || 
ld.sis d,h       ;                  | 041FF3        || 
ld d,e           ;                  | 041FF5        || 
ld d,h           ;                  | 041FF6        || 
inc b            ;                  | 041FF7        || 
ld c,a           ;                  | 041FF8        || 041FF8 4F 50 54 00 5384     DB "OP","T"+80H,00H ; 69h OPT
ld d,b           ;                  | 041FF9        || 
ld d,h           ;                  | 041FFA        || 
nop              ;                  | 041FFB        || 
ld b,c           ;                  | 041FFC        || 041FFC 41 44 4C 00 5385     DB "AD","L"+80H,00H ; 6Ah ADL
ld b,h           ;                  | 041FFD        || 
ld c,h           ;                  | 041FFE        || 
nop              ;                  | 041FFF        || 
ld e,l           ;                  | 042000        || 042000 5D 42 00    5387     DB DEF_ & 7FH,"B"+80H,00H ; 6Bh Tokenised DEF + B
ld b,d           ;                  | 042001        || 
nop              ;                  | 042002        || 
ld e,l           ;                  | 042003        || 042003 5D 57 00    5388     DB DEF_ & 7FH,"W"+80H,00H ; 6Ch Tokenised DEF + W
ld d,a           ;                  | 042004        || 
nop              ;                  | 042005        || 
ld e,l           ;                  | 042006        || 042006 5D 4C 00    5389     DB DEF_ & 7FH,"L"+80H,00H ; 6Dh Tokenised DEF + L
ld c,h           ;                  | 042007        || 
nop              ;                  | 042008        || 
ld e,l           ;                  | 042009        || 042009 5D 4D 00    5390     DB  DEF_ & 7FH,"M"+80H,00H ; 6Eh Tokenised DEF + M
ld c,l           ;                  | 04200A        || 
nop              ;                  | 04200B        || 
nop              ;                  | 04200C        || 04200C 00          5392     DB 0
ld b,d           ;                  | 04200D        || 04200D 42 00       5396  OPRNDS:   DB "B"+80H, 00H
nop              ;                  | 04200E        || 
ld b,e           ;                  | 04200F        || 04200F 43 01       5397     DB "C"+80H, 01H
ld bc,$450244    ;                  | 042010        || 
inc bc           ;                  | 042014        || 
ld c,b           ;                  | 042015        || 042015 48 04       5400     DB "H"+80H, 04H
inc b            ;                  | 042016        || 
ld c,h           ;                  | 042017        || 042017 4C 05       5401     DB "L"+80H, 05H
dec b            ;                  | 042018        || 
jr z,$+$4a       ;                  | 042019        || 042019 28 48 4C 06 5402     DB "(H","L"+80H,06H
ld c,h           ;                  | 04201B        || 
ld b,$41         ;                  | 04201C        || 
rlca             ;                  | 04201E        || 
jr z,$+$4b       ;                  | 04201F        || 04201F 28 49 58 86 5404     DB "(I","X"+80H,86H
ld e,b           ;                  | 042021        || 
add a,(hl)       ;                  | 042022        || 
jr z,$+$4b       ;                  | 042023        || 042023 28 49 59 C6 5405     DB "(I","Y"+80H,C6H
ld e,c           ;                  | 042025        || 
add a,$42        ;                  | 042026        || 
ld b,e           ;                  | 042028        || 
ex af,af'        ;                  | 042029        || 
ld b,h           ;                  | 04202A        || 04202A 44 45 0A    5408     DB "D","E"+80H,0AH
ld b,l           ;                  | 04202B        || 
ld a,(bc)        ;                  | 04202C        || 
ld c,b           ;                  | 04202D        || 04202D 48 4C 0C    5409     DB "H","L"+80H,0CH
ld c,h           ;                  | 04202E        || 
inc c            ;                  | 04202F        || 
ld.lis e,b       ;                  | 042030        || 042030 49 58 8C    5410     DB "I","X"+80H,8CH
adc a,h          ;                  | 042032        || 
ld.lis e,c       ;                  | 042033        || 042033 49 59 CC    5411     DB "I","Y"+80H,CCH
call z,$0e4641   ;                  | 042035        || 
ld d,e           ;                  | 042039        || 042039 53 50 0E    5413     DB "S","P"+80H,0EH
ld d,b           ;                  | 04203A        || 
ld c,$4e         ;                  | 04203B        || 
ld e,d           ;                  | 04203D        || 
djnz $+$5c       ;                  | 04203E        || 
ld de,$12434e    ;                  | 042040        || 
ld d,b           ;                  | 042044        || 042044 50 4F 14    5418     DB "P","O"+80H,14H
ld c,a           ;                  | 042045        || 
inc d            ;                  | 042046        || 
ld d,b           ;                  | 042047        || 042047 50 45 15    5419     DB "P","E"+80H,15H
ld b,l           ;                  | 042048        || 
dec d            ;                  | 042049        || 
ld d,b           ;                  | 04204A        || 04204A 50 16       5420     DB "P"+80H,16H
ld d,$4d         ;                  | 04204B        || 
rla              ;                  | 04204D        || 
jr z,$+$45       ;                  | 04204E        || 04204E 28 43 20    5423     DB "(","C"+80H,20H
jr nz,$+$02      ;                  | 042050        || 
nop.lis          ;                  | 042052        || 042052 49 00 41 47 5429  LDOPS:   DB "I",0,"A"+80H,47H
ld b,c           ;                  | 042054        || 
ld b,a           ;                  | 042055        || 
nop.sil          ;                  | 042056        || 042056 52 00 41 4F 5430     DB "R",0,"A"+80H,4FH
ld b,c           ;                  | 042058        || 
ld c,a           ;                  | 042059        || 
ld b,c           ;                  | 04205A        || 04205A 41 00 49 57 5431     DB "A",0,"I"+80H,57H
nop              ;                  | 04205B        || 
ld.lis d,a       ;                  | 04205C        || 
ld b,c           ;                  | 04205E        || 04205E 41 00 52 5F 5432     DB "A",0,"R"+80H,5FH
nop              ;                  | 04205F        || 
ld.sil e,a       ;                  | 042060        || 
jr z,$+$44       ;                  | 042062        || 042062 28 42 43 00 5433     DB "(BC",0,"A"+80H,02h
ld b,e           ;                  | 042064        || 
nop              ;                  | 042065        || 
ld b,c           ;                  | 042066        || 
ld (bc),a        ;                  | 042067        || 
jr z,$+$46       ;                  | 042068        || 042068 28 44 45 00 5434     DB "(DE",0,"A"+80H,12H
ld b,l           ;                  | 04206A        || 
nop              ;                  | 04206B        || 
ld b,c           ;                  | 04206C        || 
ld (de),a        ;                  | 04206D        || 
ld b,c           ;                  | 04206E        || 04206E 41 00 28 42 5435     DB "A",0,"(B","C"+80H,0AH
nop              ;                  | 04206F        || 
jr z,$+$44       ;                  | 042070        || 
ld b,e           ;                  | 042072        || 
ld a,(bc)        ;                  | 042073        || 
ld b,c           ;                  | 042074        || 042074 41 00 28 44 5436     DB "A",0,"(D","E"+80H,1AH
nop              ;                  | 042075        || 
jr z,$+$46       ;                  | 042076        || 
ld b,l           ;                  | 042078        || 
ld a,(de)        ;                  | 042079        || 
nop              ;                  | 04207A        || 04207A 00          5438     DB 0
ld c,h           ;                  | 04207B        || 04207B 4C 49 53 49 5444  EZ80SFS_1:  DB "LI","S"+80H,49H
ld.lis d,e       ;                  | 04207C        || 
ld.lis d,e       ;                  | 04207E        || 
ld.lis c,h       ;                  | 042080        || 
ld.sil d,e       ;                  | 042082        || 
ld.lis d,e       ;                  | 042084        || 
ld.sis c,h       ;                  | 042086        || 
ld.lis c,h       ;                  | 042088        || 
nop.lil          ;                  | 04208A        || 
ld d,e           ;                  | 04208C        || 04208C 53 40       5453  EZ80SFS_ADL0:  DB "S"+80H,40H  ; Equivalent to .SIS
ld.sis c,h       ;                  | 04208D        || 
noni.lis         ;                  | 04208F        || 
ld.lis d,e       ;                  | 042090        || 042090 49 53 40    5455     DB "I","S"+80H,40H  ; Equivalent to .SIS
noni.sis         ;                  | 042092        || 
ld.lis c,h       ;                  | 042093        || 042093 49 4C 52    5456     DB "I","L"+80H,52H  ; Equivalent to .SIL
nop.sil          ;                  | 042095        || 
ld d,e           ;                  | 042097        || 042097 53 52       5462  EZ80SFS_ADL1:  DB "S"+80H,52H  ; Equivalent to .SIL
ld.sil c,h       ;                  | 042098        || 
noni.lil         ;                  | 04209A        || 
ld.lis d,e       ;                  | 04209B        || 04209B 49 53 49    5464     DB "I","S"+80H,49H  ; Equivalent to .LIS
noni.lis         ;                  | 04209D        || 
ld.lis c,h       ;                  | 04209E        || 04209E 49 4C 5B    5465     DB "I","L"+80H,5BH  ; Equivalent to .LIL
nop.lil          ;                  | 0420A0        || 
push iy          ;                  | 0420A2        || 0420A2 FD E5       5527  FPP:   PUSH    IY              ;Save IY
ld iy,$000000    ;                  | 0420A4        || 0420A4 FD 21 00 00 5528            LD      IY,0
add iy,sp        ;                  | 0420A9        || 0420A9 FD 39       5529            ADD     IY,SP           ;Save SP in IY
call $0420bb     ;                  | 0420AB        || 0420AB CD BB 20 04 5530            CALL    OP              ;Perform operation
cp a             ;                  | 0420AF        || 0420AF BF          5531            CP      A               ;Good return (Z, NC)
pop iy           ;                  | 0420B0        || 0420B0 FD E1       5532  EXIT_FP_:   POP     IY              ;Restore IY
ret              ;                  | 0420B2        || 0420B2 C9          5533            RET                     ;Return to caller
ld a,$01         ;                  | 0420B3        || 0420B3 3E 01       5537  BAD_FP:   LD      A,BADOP         ;"Bad operation code"
ld sp,iy         ;                  | 0420B5        || 0420B5 FD F9       5538  ERROR_FP_:   LD      SP,IY           ;Restore SP from IY
or a             ; or a             | 0420B7 04207F || 0420B7 B7          5539            OR      A               ;Set NZ
scf              ; scf              | 0420B8 042080 || 0420B8 37          5540            SCF                     ;Set C
jr $-$09         ; jr $-$09         | 0420B9 042081 || 0420B9 18 F5       5541            JR      EXIT_FP_
cp $2a           ; cp $2a           | 0420BB 042083 || 0420BB FE 2A       5546  OP:    CP      RTABLE-DTABLE/3 ; ez80asm doesn't do nested expressions
jr nc,$-$0a      ; jr nc,$-$0a      | 0420BD 042085 || 0420BD 30 F4       5548            JR      NC,BAD_FP
cp $10           ; cp $10           | 0420BF 042087 || 0420BF FE 10       5550      CP      FTABLE-DTABLE/3 ; ditto
jr nc,$+$0a      ; jr nc,$+$0a      | 0420C1 042089 || 0420C1 30 08       5551            JR      NC,DISPAT_FP
ex af,af'        ; ex af,af'        | 0420C3 04208B || 0420C3 08          5552            EX      AF,AF'
ld a,b           ; ld a,b           | 0420C4 04208C || 0420C4 78          5553            LD      A,B
or c             ; or c             | 0420C5 04208D || 0420C5 B1          5554            OR      C               ;Both integer?
call nz,$042bce  ; call nz,$042b96  | 0420C6 04208E || 0420C6 C4 CE 2B 04 5555            CALL    NZ,FLOATA       ;No, so float both
ex af,af'        ; ex af,af'        | 0420CA 042092 || 0420CA 08          5556            EX      AF,AF'
push hl          ; push hl          | 0420CB 042093 || 0420CB E5          5557  DISPAT_FP:   PUSH    HL
ld hl,$0420de    ; ld hl,$0420a6    | 0420CC 042094 || 0420CC 21 DE 20 04 5558            LD      HL,DTABLE
push bc          ; push bc          | 0420D0 042098 || 0420D0 C5          5559            PUSH    BC
ld bc,$000003    ; ld bc,$000003    | 0420D1 042099 || 0420D1 01 03 00 00 5560     LD BC, 3  ; C = 3
ld b,a           ; ld b,a           | 0420D5 04209D || 0420D5 47          5561     LD B, A   ; B = op-code
mlt bc           ; mlt bc           | 0420D6 04209E || 0420D6 ED 4C       5562     MLT  BC   ;BC = op-code * 3
add hl,bc        ; add hl,bc        | 0420D8 0420A0 || 0420D8 09          5563     ADD HL, BC   ;Add to table base
ld hl,(hl)       ; ld hl,(hl)       | 0420D9 0420A1 || 0420D9 ED 27       5564     LD HL, (HL) ;Get the routine address (24-bit)
pop bc           ; pop bc           | 0420DB 0420A3 || 0420DB C1          5575            POP     BC
ex (sp),hl       ; ex (sp),hl       | 0420DC 0420A4 || 0420DC E3          5576            EX      (SP),HL
ret              ; ret              | 0420DD 0420A5 || 0420DD C9          5577            RET                     ;Off to routine
sub b            ;                  | 0420DE        || 0420DE 90 21 04    5581  DTABLE:   DW24  IAND            ;AND (INTEGER)
ld hl,$21fe04    ;                  | 0420DF        || ld hl,$21c604                  ; 0420A7
inc b            ;                  | 0420E3        || inc b                          ; 0420AB
and e            ;                  | 0420E4        || 0420E4 A3 21 04    5583            DW24  IEOR            ;EOR
ld hl,$21c904    ;                  | 0420E5        || ld hl,$219104                  ; 0420AD
inc b            ;                  | 0420E9        || inc b                          ; 0420B1
or (hl)          ;                  | 0420EA        || 0420EA B6 21 04    5585            DW24  IOR             ;OR
ld hl,$248404    ;                  | 0420EB        || ld hl,$244c04                  ; 0420B3
inc b            ;                  | 0420EF        || inc b                          ; 0420B7
sub e            ;                  | 0420F0        || 0420F0 93 24 04    5587            DW24  INE             ;<>
inc h            ;                  | 0420F1        || 
inc b            ;                  | 0420F2        || 
ld (hl),a        ;                  | 0420F3        || 0420F3 77 24 04    5588            DW24  IGE             ;>=
inc h            ;                  | 0420F4        || 
inc b            ;                  | 0420F5        || 
ld e,h           ;                  | 0420F6        || 0420F6 5C 24 04    5589            DW24  ILT             ;<
inc h            ;                  | 0420F7        || 
inc b            ;                  | 0420F8        || 
and b            ;                  | 0420F9        || 0420F9 A0 24 04    5590            DW24  IEQ             ;=
inc h            ;                  | 0420FA        || 
inc b            ;                  | 0420FB        || 
call pe,$270422  ;                  | 0420FC        || 0420FC EC 22 04    5591            DW24  IMUL            ;*
ld ($246904),hl  ;                  | 042100        || 
inc b            ;                  | 042104        || 
ld c,$22         ;                  | 042105        || 042105 0E 22 04    5594            DW24  ISUB            ;-
inc b            ;                  | 042107        || 
and e            ;                  | 042108        || 042108 A3 23 04    5595            DW24  IPOW            ;^
inc hl           ;                  | 042109        || 
inc b            ;                  | 04210A        || 
sbc a,c          ;                  | 04210B        || 04210B 99 22 04    5596            DW24  IDIV            ;/
ld ($24b204),hl  ;                  | 04210C        || 
inc b            ;                  | 042110        || 
sbc a,b          ;                  | 042111        || 042111 98 28 04    5600            DW24  ACS_FP             ;ACS
jr z,$+$06       ;                  | 042112        || 
sub $27          ;                  | 042114        || 042114 D6 27 04    5601            DW24  ASN_FP             ;ASN
inc b            ;                  | 042116        || 
ld b,$28         ;                  | 042117        || 042117 06 28 04    5602            DW24  ATN_FP             ;ATN
inc b            ;                  | 042119        || 
pop de           ;                  | 04211A        || 04211A D1 25 04    5603            DW24  COS_FP             ;COS
dec h            ;                  | 04211B        || 
inc b            ;                  | 04211C        || 
ret po           ;                  | 04211D        || 04211D E0 24 04    5604            DW24  DEG_FP             ;DEG
inc h            ;                  | 04211E        || 
inc b            ;                  | 04211F        || 
adc a,l          ;                  | 042120        || 042120 8D 26 04    5605            DW24  EXP_FP             ;EXP
ld h,$04         ;                  | 042121        || 
inc (hl)         ;                  | 042123        || 042123 34 25 04    5606            DW24  INT_FP_            ;INT
dec h            ;                  | 042124        || 
inc b            ;                  | 042125        || 
dec hl           ;                  | 042126        || 042126 2B 27 04    5607            DW24  LN_FP              ;LN
daa              ;                  | 042127        || 
inc b            ;                  | 042128        || 
ret nz           ;                  | 042129        || 042129 C0 27 04    5608            DW24  LOG_FP             ;LOG
daa              ;                  | 04212A        || 
inc b            ;                  | 04212B        || 
cp (hl)          ;                  | 04212C        || 04212C BE 24 04    5609            DW24  NOTK_FP            ;NOT
inc h            ;                  | 04212D        || 
inc b            ;                  | 04212E        || 
jp pe,$050424    ;                  | 04212F        || 04212F EA 24 04    5610            DW24  RAD_FP             ;RAD
dec h            ;                  | 042133        || 
inc b            ;                  | 042134        || 
sbc a,$25        ;                  | 042135        || 042135 DE 25 04    5612            DW24  SIN_FP             ;SIN
inc b            ;                  | 042137        || 
ld c,l           ;                  | 042138        || 042138 4D 25 04    5613            DW24  SQR_FP             ;SQR
dec h            ;                  | 042139        || 
inc b            ;                  | 04213A        || 
xor e            ;                  | 04213B        || 04213B AB 25 04    5614            DW24  TAN_FP             ;TAN
dec h            ;                  | 04213C        || 
inc b            ;                  | 04213D        || 
inc.lil l        ;                  | 04213E        || 04213E 5B 2C 04    5616            DW24  ZERO_FP            ;ZERO
inc b            ;                  | 042140        || 
ld h,(hl)        ;                  | 042141        || 042141 66 26 04    5617            DW24  FONE_FP            ;FONE
ld h,$04         ;                  | 042142        || 
and l            ;                  | 042144        || 042144 A5 24 04    5618            DW24  TRUE_FP            ;TRUE
inc h            ;                  | 042145        || 
inc b            ;                  | 042146        || 
jp nc,$190424    ;                  | 042147        || 042147 D2 24 04    5619            DW24  PI_FP              ;PI
dec h            ;                  | 04214B        || 
inc b            ;                  | 04214C        || 
and c            ;                  | 04214D        || 04214D A1 28 04    5622            DW24  STR_FP             ;STR$
jr z,$+$06       ;                  | 04214E        || 
ld (bc),a        ;                  | 042150        || 042150 02 2B 04    5624            DW24  SFIX_FP            ;FIX
dec hl           ;                  | 042151        || 
inc b            ;                  | 042152        || 
sbc a,$2b        ;                  | 042153        || 042153 DE 2B 04    5625            DW24  SFLOAT_FP          ;FLOAT
inc b            ;                  | 042155        || 
inc l            ;                  | 042156        || 042156 2C 2C 04    5627            DW24  FTEST_FP           ;TEST
inc l            ;                  | 042157        || 
inc b            ;                  | 042158        || 
ld a,$2c         ;                  | 042159        || 042159 3E 2C 04    5628            DW24  FCOMP_FP           ;COMPARE
inc b            ;                  | 04215B        || inc b                          ; 042123
adc a,h          ;                  | 04215C        || 04215C 8C 21 04    5630  RTABLE:   DW24  FAND            ;AND (FLOATING-POINT)
ld hl,$21fa04    ;                  | 04215D        || ld hl,$21c204                  ; 042125
inc b            ;                  | 042161        || inc b                          ; 042129
sbc a,a          ;                  | 042162        || 042162 9F 21 04    5632            DW24  FEOR            ;EOR
ld hl,$21c504    ;                  | 042163        || ld hl,$218d04                  ; 04212B
inc b            ;                  | 042167        || inc b                          ; 04212F
or d             ;                  | 042168        || 042168 B2 21 04    5634            DW24  FFOR             ;OR
ld hl,$247e04    ;                  | 042169        || ld hl,$244604                  ; 042131
inc b            ;                  | 04216D        || inc b                          ; 042135
adc a,l          ;                  | 04216E        || 04216E 8D 24 04    5636            DW24  FNE             ;<>
inc h            ;                  | 04216F        || inc h                          ; 042137
inc b            ;                  | 042170        || inc b                          ; 042138
ld (hl),c        ;                  | 042171        || 042171 71 24 04    5637            DW24  FGE             ;>=
inc h            ;                  | 042172        || inc h                          ; 04213A
inc b            ;                  | 042173        || 
ld d,(hl)        ;                  | 042174        || 042174 56 24 04    5638            DW24  FLT             ;<
inc h            ;                  | 042175        || 
inc b            ;                  | 042176        || 
sbc a,d          ;                  | 042177        || 042177 9A 24 04    5639            DW24  FEQ             ;=
inc h            ;                  | 042178        || 
inc b            ;                  | 042179        || 
ld b,(hl)        ;                  | 04217A        || 04217A 46 23 04    5640            DW24  FMUL            ;*
inc hl           ;                  | 04217B        || 
inc b            ;                  | 04217C        || 
inc (hl)         ;                  | 04217D        || 04217D 34 22 04    5641            DW24  FADD            ;+
ld ($246304),hl  ;                  | 04217E        || 
inc b            ;                  | 042182        || 
dec de           ;                  | 042183        || 042183 1B 22 04    5643            DW24  FSUB            ;-
ld ($242304),hl  ;                  | 042184        || 
inc b            ;                  | 042188        || 
sbc a,l          ;                  | 042189        || 042189 9D 22 04    5645            DW24  FDIV            ;/
ld ($f6cd04),hl  ;                  | 04218A        || ld ($becd04),hl                ; 042152
ld hl,($a27c04)  ;                  | 04218E        || ld hl,($a27c04)                ; 042156
ld h,a           ; ld h,a           | 042192 04215A || 042192 67          5661            LD      H,A
ld a,l           ; ld a,l           | 042193 04215B || 042193 7D          5662            LD      A,L
and e            ; and e            | 042194 04215C || 042194 A3          5663            AND     E
ld l,a           ; ld l,a           | 042195 04215D || 042195 6F          5664            LD      L,A
exx              ; exx              | 042196 04215E || 042196 D9          5665            EXX
ld a,h           ; ld a,h           | 042197 04215F || 042197 7C          5666            LD      A,H
and d            ; and d            | 042198 042160 || 042198 A2          5667            AND     D
ld h,a           ; ld h,a           | 042199 042161 || 042199 67          5668            LD      H,A
ld a,l           ; ld a,l           | 04219A 042162 || 04219A 7D          5669            LD      A,L
and e            ; and e            | 04219B 042163 || 04219B A3          5670            AND     E
ld l,a           ; ld l,a           | 04219C 042164 || 04219C 6F          5671            LD      L,A
exx              ; exx              | 04219D 042165 || 04219D D9          5672            EXX
ret              ; ret              | 04219E 042166 || 04219E C9          5673            RET
call $042af6     ; call $042abe     | 04219F 042167 || 04219F CD F6 2A 04 5678  FEOR:   CALL    FIX2
ld a,h           ; ld a,h           | 0421A3 04216B || 0421A3 7C          5679  IEOR:   LD      A,H
xor d            ; xor d            | 0421A4 04216C || 0421A4 AA          5680            XOR     D
ld h,a           ; ld h,a           | 0421A5 04216D || 0421A5 67          5681            LD      H,A
ld a,l           ; ld a,l           | 0421A6 04216E || 0421A6 7D          5682            LD      A,L
xor e            ; xor e            | 0421A7 04216F || 0421A7 AB          5683            XOR     E
ld l,a           ; ld l,a           | 0421A8 042170 || 0421A8 6F          5684            LD      L,A
exx              ; exx              | 0421A9 042171 || 0421A9 D9          5685            EXX
ld a,h           ; ld a,h           | 0421AA 042172 || 0421AA 7C          5686            LD      A,H
xor d            ; xor d            | 0421AB 042173 || 0421AB AA          5687            XOR     D
ld h,a           ; ld h,a           | 0421AC 042174 || 0421AC 67          5688            LD      H,A
ld a,l           ; ld a,l           | 0421AD 042175 || 0421AD 7D          5689            LD      A,L
xor e            ; xor e            | 0421AE 042176 || 0421AE AB          5690            XOR     E
ld l,a           ; ld l,a           | 0421AF 042177 || 0421AF 6F          5691            LD      L,A
exx              ; exx              | 0421B0 042178 || 0421B0 D9          5692            EXX
ret              ; ret              | 0421B1 042179 || 0421B1 C9          5693            RET
call $042af6     ; call $042abe     | 0421B2 04217A || 0421B2 CD F6 2A 04 5698  FFOR:   CALL    FIX2
ld a,h           ; ld a,h           | 0421B6 04217E || 0421B6 7C          5699  IOR:   LD      A,H
or d             ; or d             | 0421B7 04217F || 0421B7 B2          5700            OR      D
ld h,a           ; ld h,a           | 0421B8 042180 || 0421B8 67          5701            LD      H,A
ld a,l           ; ld a,l           | 0421B9 042181 || 0421B9 7D          5702            LD      A,L
or e             ; or e             | 0421BA 042182 || 0421BA B3          5703            OR      E
ld l,a           ; ld l,a           | 0421BB 042183 || 0421BB 6F          5704            LD      L,A
exx              ; exx              | 0421BC 042184 || 0421BC D9          5705            EXX
ld a,h           ; ld a,h           | 0421BD 042185 || 0421BD 7C          5706            LD      A,H
or d             ; or d             | 0421BE 042186 || 0421BE B2          5707            OR      D
ld h,a           ; ld h,a           | 0421BF 042187 || 0421BF 67          5708            LD      H,A
ld a,l           ; ld a,l           | 0421C0 042188 || 0421C0 7D          5709            LD      A,L
or e             ; or e             | 0421C1 042189 || 0421C1 B3          5710            OR      E
ld l,a           ; ld l,a           | 0421C2 04218A || 0421C2 6F          5711            LD      L,A
exx              ; exx              | 0421C3 04218B || 0421C3 D9          5712            EXX
ret              ; ret              | 0421C4 04218C || 0421C4 C9          5713            RET
call $042af6     ; call $042abe     | 0421C5 04218D || 0421C5 CD F6 2A 04 5718  FMOD:   CALL    FIX2
ld a,h           ; ld a,h           | 0421C9 042191 || 0421C9 7C          5719  IMOD:   LD      A,H
xor d            ; xor d            | 0421CA 042192 || 0421CA AA          5720            XOR     D               ;DIV RESULT SIGN
bit 7,h          ; bit 7,h          | 0421CB 042193 || 0421CB CB 7C       5721            BIT     7,H
ex af,af'        ; ex af,af'        | 0421CD 042195 || 0421CD 08          5722            EX      AF,AF'
bit 7,h          ; bit 7,h          | 0421CE 042196 || 0421CE CB 7C       5723            BIT     7,H
call nz,$042b12  ; call nz,$042ada  | 0421D0 042198 || 0421D0 C4 12 2B 04 5724            CALL    NZ,NEGATE       ;MAKE ARGUMENTS +VE
call $042c0f     ; call $042bd7     | 0421D4 04219C || 0421D4 CD 0F 2C 04 5725            CALL    SWAP_FP
bit 7,h          ; bit 7,h          | 0421D8 0421A0 || 0421D8 CB 7C       5726            BIT     7,H
call nz,$042b12  ; call nz,$042ada  | 0421DA 0421A2 || 0421DA C4 12 2B 04 5727            CALL    NZ,NEGATE
ld b,h           ; ld b,h           | 0421DE 0421A6 || 0421DE 44          5728            LD      B,H
ld c,l           ; ld c,l           | 0421DF 0421A7 || 0421DF 4D          5729            LD      C,L
ld hl,$000000    ; ld hl,$000000    | 0421E0 0421A8 || 0421E0 21 00 00 00 5730            LD      HL,0
exx              ; exx              | 0421E4 0421AC || 0421E4 D9          5731            EXX
ld b,h           ; ld b,h           | 0421E5 0421AD || 0421E5 44          5732            LD      B,H
ld c,l           ; ld c,l           | 0421E6 0421AE || 0421E6 4D          5733            LD      C,L
ld hl,$000000    ; ld hl,$000000    | 0421E7 0421AF || 0421E7 21 00 00 00 5734            LD      HL,0
ld a,$df         ; ld a,$df         | 0421EB 0421B3 || 0421EB 3E DF       5735            LD      A,-33
call $042d9c     ; call $042d64     | 0421ED 0421B5 || 0421ED CD 9C 2D 04 5736            CALL    DIVA            ;DIVIDE
exx              ; exx              | 0421F1 0421B9 || 0421F1 D9          5737            EXX
ld c,$00         ; ld c,$00         | 0421F2 0421BA || 0421F2 0E 00       5738            LD      C,0             ;INTEGER MARKER
ex af,af'        ; ex af,af'        | 0421F4 0421BC || 0421F4 08          5739            EX      AF,AF'
ret z            ; ret z            | 0421F5 0421BD || 0421F5 C8          5740            RET     Z
jp $042b12       ; jp $042ada       | 0421F6 0421BE || 0421F6 C3 12 2B 04 5741            JP      NEGATE
call $042af6     ; call $042abe     | 0421FA 0421C2 || 0421FA CD F6 2A 04 5745  FBDIV:   CALL    FIX2
call $0421c9     ; call $042191     | 0421FE 0421C6 || 0421FE CD C9 21 04 5746  IBDIV:   CALL    IMOD
or a             ; or a             | 042202 0421CA || 042202 B7          5747            OR      A
call $042c0f     ; call $042bd7     | 042203 0421CB || 042203 CD 0F 2C 04 5748            CALL    SWAP_FP
ld c,$00         ; ld c,$00         | 042207 0421CF || 042207 0E 00       5749            LD      C,0
ret p            ; ret p            | 042209 0421D1 || 042209 F0          5750            RET     P
jp $042b12       ; jp $042ada       | 04220A 0421D2 || 04220A C3 12 2B 04 5751            JP      NEGATE
call $042caa     ; call $042c72     | 04220E 0421D6 || 04220E CD AA 2C 04 5756  ISUB:   CALL    SUB_
ret po           ; ret po           | 042212 0421DA || 042212 E0          5757            RET     PO
call $042ca2     ; call $042c6a     | 042213 0421DB || 042213 CD A2 2C 04 5758            CALL    ADD_
call $042bd2     ; call $042b9a     | 042217 0421DF || 042217 CD D2 2B 04 5759            CALL    FLOAT2
ld a,d           ; ld a,d           | 04221B 0421E3 || 04221B 7A          5760  FSUB:   LD      A,D
xor $80          ; xor $80          | 04221C 0421E4 || 04221C EE 80       5761            XOR     80H             ;CHANGE SIGN THEN ADD
ld d,a           ; ld d,a           | 04221E 0421E6 || 04221E 57          5762            LD      D,A
jr $+$15         ; jr $+$15         | 04221F 0421E7 || 04221F 18 13       5763            JR      FADD
ld a,h           ; ld a,h           | 042221 0421E9 || 042221 7C          5767  RSUB:   LD      A,H
xor $80          ; xor $80          | 042222 0421EA || 042222 EE 80       5768            XOR     80H
ld h,a           ; ld h,a           | 042224 0421EC || 042224 67          5769            LD      H,A
jr $+$0f         ; jr $+$0f         | 042225 0421ED || 042225 18 0D       5770            JR      FADD
call $042ca2     ; call $042c6a     | 042227 0421EF || 042227 CD A2 2C 04 5775  IADD:   CALL    ADD_
ret po           ; ret po           | 04222B 0421F3 || 04222B E0          5776            RET     PO
call $042caa     ; call $042c72     | 04222C 0421F4 || 04222C CD AA 2C 04 5777            CALL    SUB_
call $042bd2     ; call $042b9a     | 042230 0421F8 || 042230 CD D2 2B 04 5778            CALL    FLOAT2
dec b            ; dec b            | 042234 0421FC || 042234 05          5779  FADD:   DEC     B
inc b            ; inc b            | 042235 0421FD || 042235 04          5780            INC     B
ret z            ; ret z            | 042236 0421FE || 042236 C8          5781            RET     Z               ;ARG 2 ZERO
dec c            ; dec c            | 042237 0421FF || 042237 0D          5782            DEC     C
inc c            ; inc c            | 042238 042200 || 042238 0C          5783            INC     C
jp z,$042c0f     ; jp z,$042bd7     | 042239 042201 || 042239 CA 0F 2C 04 5784            JP      Z,SWAP_FP          ;ARG 1 ZERO
exx              ; exx              | 04223D 042205 || 04223D D9          5785            EXX
ld bc,$000000    ; ld bc,$000000    | 04223E 042206 || 04223E 01 00 00 00 5786            LD      BC,0            ;INITIALISE
exx              ; exx              | 042242 04220A || 042242 D9          5787            EXX
ld a,h           ; ld a,h           | 042243 04220B || 042243 7C          5788            LD      A,H
xor d            ; xor d            | 042244 04220C || 042244 AA          5789            XOR     D               ;XOR SIGNS
push af          ; push af          | 042245 04220D || 042245 F5          5790            PUSH    AF
ld a,b           ; ld a,b           | 042246 04220E || 042246 78          5791            LD      A,B
cp c             ; cp c             | 042247 04220F || 042247 B9          5792            CP      C               ;COMPARE EXPONENTS
call c,$042c0f   ; call c,$042bd7   | 042248 042210 || 042248 DC 0F 2C 04 5793            CALL    C,SWAP_FP          ;MAKE DED'E'B LARGEST
ld a,b           ; ld a,b           | 04224C 042214 || 04224C 78          5794            LD      A,B
set 7,h          ; set 7,h          | 04224D 042215 || 04224D CB FC       5795            SET     7,H             ;IMPLIED 1
call nz,$042ae3  ; call nz,$042aab  | 04224F 042217 || 04224F C4 E3 2A 04 5796            CALL    NZ,FIX          ;ALIGN
pop af           ; pop af           | 042253 04221B || 042253 F1          5797            POP     AF
ld a,d           ; ld a,d           | 042254 04221C || 042254 7A          5798            LD      A,D             ;SIGN OF LARGER
set 7,d          ; set 7,d          | 042255 04221D || 042255 CB FA       5799            SET     7,D             ;IMPLIED 1
jp m,$042267     ; jp m,$04222f     | 042257 04221F || 042257 FA 67 22 04 5800            JP      M,FADD3         ;SIGNS DIFFERENT
call $042ca2     ; call $042c6a     | 04225B 042223 || 04225B CD A2 2C 04 5801            CALL    ADD_             ;HLH'L'=HLH'L'+DED'E'
call c,$042c17   ; call c,$042bdf   | 04225F 042227 || 04225F DC 17 2C 04 5802            CALL    C,DIV2          ;NORMALISE
set 7,h          ; set 7,h          | 042263 04222B || 042263 CB FC       5803            SET     7,H
jr $+$0f         ; jr $+$0f         | 042265 04222D || 042265 18 0D       5804            JR      FADD4
call $042caa     ; call $042c72     | 042267 04222F || 042267 CD AA 2C 04 5806  FADD3:   CALL    SUB_             ;HLH'L'=HLH'L'-DED'E'
call c,$042b2a   ; call c,$042af2   | 04226B 042233 || 04226B DC 2A 2B 04 5807            CALL    C,NEG_           ;NEGATE HLH'L'B'C'
call $042ba9     ; call $042b71     | 04226F 042237 || 04226F CD A9 2B 04 5808            CALL    FLO48
cpl              ; cpl              | 042273 04223B || 042273 2F          5809            CPL                     ;CHANGE RESULT SIGN
exx              ; exx              | 042274 04223C || 042274 D9          5810  FADD4:   EXX
ex de,hl         ; ex de,hl         | 042275 04223D || 042275 EB          5811            EX      DE,HL
ld hl,$008000    ; ld hl,$008000    | 042276 04223E || 042276 21 00 80 00 5812            LD      HL,8000H
or a             ; or a             | 04227A 042242 || 04227A B7          5813            OR      A               ;CLEAR CARRY
sbc.sil hl,bc    ; sbc.sil hl,bc    | 04227B 042243 || 04227B 52 ED 42    5814            SBC.S   HL,BC
ex de,hl         ; ex de,hl         | 04227E 042246 || 04227E EB          5815            EX      DE,HL
exx              ; exx              | 04227F 042247 || 04227F D9          5816            EXX
call z,$042c09   ; call z,$042bd1   | 042280 042248 || 042280 CC 09 2C 04 5817            CALL    Z,ODD           ;ROUND UNBIASSED
call c,$042bf7   ; call c,$042bbf   | 042284 04224C || 042284 DC F7 2B 04 5818            CALL    C,ADD1_FP          ;ROUND UP
call c,$042c24   ; call c,$042bec   | 042288 042250 || 042288 DC 24 2C 04 5819            CALL    C,INCC
res 7,h          ; res 7,h          | 04228C 042254 || 04228C CB BC       5820            RES     7,H
dec c            ; dec c            | 04228E 042256 || 04228E 0D          5821            DEC     C
inc c            ; inc c            | 04228F 042257 || 04228F 0C          5822            INC     C
jp z,$042c5b     ; jp z,$042c23     | 042290 042258 || 042290 CA 5B 2C 04 5823            JP      Z,ZERO_FP
or a             ; or a             | 042294 04225C || 042294 B7          5824            OR      A               ;RESULT SIGNQ
ret p            ; ret p            | 042295 04225D || 042295 F0          5825            RET     P               ;POSITIVE
set 7,h          ; set 7,h          | 042296 04225E || 042296 CB FC       5826            SET     7,H             ;NEGATIVE
ret              ; ret              | 042298 042260 || 042298 C9          5827            RET
call $042bd2     ; call $042b9a     | 042299 042261 || 042299 CD D2 2B 04 5832  IDIV:   CALL    FLOAT2
dec b            ; dec b            | 04229D 042265 || 04229D 05          5833  FDIV:   DEC     B               ;TEST FOR ZERO
inc b            ; inc b            | 04229E 042266 || 04229E 04          5834            INC     B
ld a,$12         ; ld a,$12         | 04229F 042267 || 04229F 3E 12       5835            LD      A,DIVBY0
jp z,$0420b5     ; jp z,$04207d     | 0422A1 042269 || 0422A1 CA B5 20 04 5836            JP      Z,ERROR_FP_         ;"Division by zero"
dec c            ; dec c            | 0422A5 04226D || 0422A5 0D          5837            DEC     C               ;TEST FOR ZERO
inc c            ; inc c            | 0422A6 04226E || 0422A6 0C          5838            INC     C
ret z            ; ret z            | 0422A7 04226F || 0422A7 C8          5839            RET     Z
ld a,h           ; ld a,h           | 0422A8 042270 || 0422A8 7C          5840            LD      A,H
xor d            ; xor d            | 0422A9 042271 || 0422A9 AA          5841            XOR     D               ;CALC. RESULT SIGN
ex af,af'        ; ex af,af'        | 0422AA 042272 || 0422AA 08          5842            EX      AF,AF'          ;SAVE SIGN
set 7,d          ; set 7,d          | 0422AB 042273 || 0422AB CB FA       5843            SET     7,D             ;REPLACE IMPLIED 1's
set 7,h          ; set 7,h          | 0422AD 042275 || 0422AD CB FC       5844            SET     7,H
push bc          ; push bc          | 0422AF 042277 || 0422AF C5          5845            PUSH    BC              ;SAVE EXPONENTS
ld b,d           ; ld b,d           | 0422B0 042278 || 0422B0 42          5846            LD      B,D             ;LOAD REGISTERS
ld c,e           ; ld c,e           | 0422B1 042279 || 0422B1 4B          5847            LD      C,E
ld de,$000000    ; ld de,$000000    | 0422B2 04227A || 0422B2 11 00 00 00 5848            LD      DE,0
exx              ; exx              | 0422B6 04227E || 0422B6 D9          5849            EXX
ld b,d           ; ld b,d           | 0422B7 04227F || 0422B7 42          5850            LD      B,D
ld c,e           ; ld c,e           | 0422B8 042280 || 0422B8 4B          5851            LD      C,E
ld de,$000000    ; ld de,$000000    | 0422B9 042281 || 0422B9 11 00 00 00 5852            LD      DE,0
ld a,$e0         ; ld a,$e0         | 0422BD 042285 || 0422BD 3E E0       5853            LD      A,-32           ;LOOP COUNTER
call $042d9c     ; call $042d64     | 0422BF 042287 || 0422BF CD 9C 2D 04 5854            CALL    DIVA            ;DIVIDE
exx              ; exx              | 0422C3 04228B || 0422C3 D9          5855            EXX
bit 7,d          ; bit 7,d          | 0422C4 04228C || 0422C4 CB 7A       5856            BIT     7,D
exx              ; exx              | 0422C6 04228E || 0422C6 D9          5857            EXX
call z,$042dbb   ; call z,$042d83   | 0422C7 04228F || 0422C7 CC BB 2D 04 5858            CALL    Z,DIVB          ;NORMALISE & INC A
ex de,hl         ; ex de,hl         | 0422CB 042293 || 0422CB EB          5859            EX      DE,HL
exx              ; exx              | 0422CC 042294 || 0422CC D9          5860            EXX
srl b            ; srl b            | 0422CD 042295 || 0422CD CB 38       5861            SRL     B               ;DIVISOR/2
rr c             ; rr c             | 0422CF 042297 || 0422CF CB 19       5862            RR      C
or a             ; or a             | 0422D1 042299 || 0422D1 B7          5863            OR      A               ;CLEAR CARRY
sbc.sil hl,bc    ; sbc.sil hl,bc    | 0422D2 04229A || 0422D2 52 ED 42    5864            SBC.S   HL,BC           ;REMAINDER-DIVISOR/2
ccf              ; ccf              | 0422D5 04229D || 0422D5 3F          5865            CCF
ex de,hl         ; ex de,hl         | 0422D6 04229E || 0422D6 EB          5866            EX      DE,HL           ;RESULT IN HLH'L'
call z,$042c09   ; call z,$042bd1   | 0422D7 04229F || 0422D7 CC 09 2C 04 5867            CALL    Z,ODD           ;ROUND UNBIASSED
call c,$042bf7   ; call c,$042bbf   | 0422DB 0422A3 || 0422DB DC F7 2B 04 5868            CALL    C,ADD1_FP          ;ROUND UP
pop bc           ; pop bc           | 0422DF 0422A7 || 0422DF C1          5869            POP     BC              ;RESTORE EXPONENTS
call c,$042c24   ; call c,$042bec   | 0422E0 0422A8 || 0422E0 DC 24 2C 04 5870            CALL    C,INCC
rra              ; rra              | 0422E4 0422AC || 0422E4 1F          5871            RRA                     ;LSB OF A TO CARRY
ld a,c           ; ld a,c           | 0422E5 0422AD || 0422E5 79          5872            LD      A,C             ;COMPUTE NEW EXPONENT
sbc a,b          ; sbc a,b          | 0422E6 0422AE || 0422E6 98          5873            SBC     A,B
ccf              ; ccf              | 0422E7 0422AF || 0422E7 3F          5874            CCF
jp $042389       ; jp $042351       | 0422E8 0422B0 || 0422E8 C3 89 23 04 5875            JP      CHKOVF
ld a,h           ; ld a,h           | 0422EC 0422B4 || 0422EC 7C          5879  IMUL:   LD      A,H
xor d            ; xor d            | 0422ED 0422B5 || 0422ED AA          5880            XOR     D
ex af,af'        ; ex af,af'        | 0422EE 0422B6 || 0422EE 08          5881            EX      AF,AF'          ;SAVE RESULT SIGN
bit 7,h          ; bit 7,h          | 0422EF 0422B7 || 0422EF CB 7C       5882            BIT     7,H
call nz,$042b12  ; call nz,$042ada  | 0422F1 0422B9 || 0422F1 C4 12 2B 04 5883            CALL    NZ,NEGATE
call $042c0f     ; call $042bd7     | 0422F5 0422BD || 0422F5 CD 0F 2C 04 5884            CALL    SWAP_FP
bit 7,h          ; bit 7,h          | 0422F9 0422C1 || 0422F9 CB 7C       5885            BIT     7,H
call nz,$042b12  ; call nz,$042ada  | 0422FB 0422C3 || 0422FB C4 12 2B 04 5886            CALL    NZ,NEGATE
ld b,h           ; ld b,h           | 0422FF 0422C7 || 0422FF 44          5887            LD      B,H
ld c,l           ; ld c,l           | 042300 0422C8 || 042300 4D          5888            LD      C,L
ld hl,$000000    ; ld hl,$000000    | 042301 0422C9 || 042301 21 00 00 00 5889            LD      HL,0
exx              ; exx              | 042305 0422CD || 042305 D9          5890            EXX
ld b,h           ; ld b,h           | 042306 0422CE || 042306 44          5891            LD      B,H
ld c,l           ; ld c,l           | 042307 0422CF || 042307 4D          5892            LD      C,L
ld hl,$000000    ; ld hl,$000000    | 042308 0422D0 || 042308 21 00 00 00 5893            LD      HL,0
ld a,$df         ; ld a,$df         | 04230C 0422D4 || 04230C 3E DF       5894            LD      A,-33
call $042dd3     ; call $042d9b     | 04230E 0422D6 || 04230E CD D3 2D 04 5895            CALL    MULA            ;MULTIPLY
exx              ; exx              | 042312 0422DA || 042312 D9          5896            EXX
ld c,$bf         ; ld c,$bf         | 042313 0422DB || 042313 0E BF       5897            LD      C,191           ;PRESET EXPONENT
call $042c37     ; call $042bff     | 042315 0422DD || 042315 CD 37 2C 04 5898            CALL    TEST_FP            ;TEST RANGE
jr nz,$+$11      ; jr nz,$+$11      | 042319 0422E1 || 042319 20 0F       5899            JR      NZ,IMUL1        ;TOO BIG
bit 7,d          ; bit 7,d          | 04231B 0422E3 || 04231B CB 7A       5900            BIT     7,D
jr nz,$+$0d      ; jr nz,$+$0d      | 04231D 0422E5 || 04231D 20 0B       5901            JR      NZ,IMUL1
call $042c0f     ; call $042bd7     | 04231F 0422E7 || 04231F CD 0F 2C 04 5902            CALL    SWAP_FP
ld c,d           ; ld c,d           | 042323 0422EB || 042323 4A          5903            LD      C,D             ;INTEGER MARKER
ex af,af'        ; ex af,af'        | 042324 0422EC || 042324 08          5904            EX      AF,AF'
ret p            ; ret p            | 042325 0422ED || 042325 F0          5905            RET     P
jp $042b12       ; jp $042ada       | 042326 0422EE || 042326 C3 12 2B 04 5906            JP      NEGATE
dec c            ; dec c            | 04232A 0422F2 || 04232A 0D          5908  IMUL1:   DEC     C
exx              ; exx              | 04232B 0422F3 || 04232B D9          5909            EXX
sla e            ; sla e            | 04232C 0422F4 || 04232C CB 23       5910            SLA     E
rl d             ; rl d             | 04232E 0422F6 || 04232E CB 12       5911            RL      D
exx              ; exx              | 042330 0422F8 || 042330 D9          5912            EXX
rl e             ; rl e             | 042331 0422F9 || 042331 CB 13       5913            RL      E
rl d             ; rl d             | 042333 0422FB || 042333 CB 12       5914            RL      D
exx              ; exx              | 042335 0422FD || 042335 D9          5915            EXX
adc.sil hl,hl    ; adc.sil hl,hl    | 042336 0422FE || 042336 52 ED 6A    5916            ADC.S   HL,HL
exx              ; exx              | 042339 042301 || 042339 D9          5917            EXX
adc.sil hl,hl    ; adc.sil hl,hl    | 04233A 042302 || 04233A 52 ED 6A    5918            ADC.S   HL,HL
jp p,$04232a     ; jp p,$0422f2     | 04233D 042305 || 04233D F2 2A 23 04 5919            JP      P,IMUL1         ;NORMALISE
ex af,af'        ; ex af,af'        | 042341 042309 || 042341 08          5920            EX      AF,AF'
ret m            ; ret m            | 042342 04230A || 042342 F8          5921            RET     M
res 7,h          ; res 7,h          | 042343 04230B || 042343 CB BC       5922            RES     7,H             ;POSITIVE
ret              ; ret              | 042345 04230D || 042345 C9          5923            RET
dec b            ; dec b            | 042346 04230E || 042346 05          5927  FMUL:   DEC     B               ;TEST FOR ZERO
inc b            ; inc b            | 042347 04230F || 042347 04          5928            INC     B
jp z,$042c5b     ; jp z,$042c23     | 042348 042310 || 042348 CA 5B 2C 04 5929            JP      Z,ZERO_FP
dec c            ; dec c            | 04234C 042314 || 04234C 0D          5930            DEC     C               ;TEST FOR ZERO
inc c            ; inc c            | 04234D 042315 || 04234D 0C          5931            INC     C
ret z            ; ret z            | 04234E 042316 || 04234E C8          5932            RET     Z
ld a,h           ; ld a,h           | 04234F 042317 || 04234F 7C          5933            LD      A,H
xor d            ; xor d            | 042350 042318 || 042350 AA          5934            XOR     D               ;CALC. RESULT SIGN
ex af,af'        ; ex af,af'        | 042351 042319 || 042351 08          5935            EX      AF,AF'
set 7,d          ; set 7,d          | 042352 04231A || 042352 CB FA       5936            SET     7,D             ;REPLACE IMPLIED 1's
set 7,h          ; set 7,h          | 042354 04231C || 042354 CB FC       5937            SET     7,H
push bc          ; push bc          | 042356 04231E || 042356 C5          5938            PUSH    BC              ;SAVE EXPONENTS
ld b,h           ; ld b,h           | 042357 04231F || 042357 44          5939            LD      B,H             ;LOAD REGISTERS
ld c,l           ; ld c,l           | 042358 042320 || 042358 4D          5940            LD      C,L
ld hl,$000000    ; ld hl,$000000    | 042359 042321 || 042359 21 00 00 00 5941            LD      HL,0
exx              ; exx              | 04235D 042325 || 04235D D9          5942            EXX
ld b,h           ; ld b,h           | 04235E 042326 || 04235E 44          5943            LD      B,H
ld c,l           ; ld c,l           | 04235F 042327 || 04235F 4D          5944            LD      C,L
ld hl,$000000    ; ld hl,$000000    | 042360 042328 || 042360 21 00 00 00 5945            LD      HL,0
ld a,$e0         ; ld a,$e0         | 042364 04232C || 042364 3E E0       5946            LD      A,-32           ;LOOP COUNTER
call $042dd3     ; call $042d9b     | 042366 04232E || 042366 CD D3 2D 04 5947            CALL    MULA            ;MULTIPLY
call c,$042de9   ; call c,$042db1   | 04236A 042332 || 04236A DC E9 2D 04 5948            CALL    C,MULB          ;NORMALISE & INC A
exx              ; exx              | 04236E 042336 || 04236E D9          5949            EXX
push hl          ; push hl          | 04236F 042337 || 04236F E5          5950            PUSH    HL
ld hl,$008000    ; ld hl,$008000    | 042370 042338 || 042370 21 00 80 00 5951            LD      HL,8000H
or a             ; or a             | 042374 04233C || 042374 B7          5952            OR      A               ;CLEAR CARRY
sbc.sil hl,de    ; sbc.sil hl,de    | 042375 04233D || 042375 52 ED 52    5953            SBC.S   HL,DE
pop hl           ; pop hl           | 042378 042340 || 042378 E1          5954            POP     HL
call z,$042c09   ; call z,$042bd1   | 042379 042341 || 042379 CC 09 2C 04 5955            CALL    Z,ODD           ;ROUND UNBIASSED
call c,$042bf7   ; call c,$042bbf   | 04237D 042345 || 04237D DC F7 2B 04 5956            CALL    C,ADD1_FP          ;ROUND UP
pop bc           ; pop bc           | 042381 042349 || 042381 C1          5957            POP     BC              ;RESTORE EXPONENTS
call c,$042c24   ; call c,$042bec   | 042382 04234A || 042382 DC 24 2C 04 5958            CALL    C,INCC
rra              ; rra              | 042386 04234E || 042386 1F          5959            RRA                     ;LSB OF A TO CARRY
ld a,c           ; ld a,c           | 042387 04234F || 042387 79          5960            LD      A,C             ;COMPUTE NEW EXPONENT
adc a,b          ; adc a,b          | 042388 042350 || 042388 88          5961            ADC     A,B
jr c,$+$08       ; jr c,$+$08       | 042389 042351 || 042389 38 06       5962  CHKOVF:   JR      C,CHKO1
jp p,$042c5b     ; jp p,$042c23     | 04238B 042353 || 04238B F2 5B 2C 04 5963            JP      P,ZERO_FP          ;UNDERFLOW
jr $+$06         ; jr $+$06         | 04238F 042357 || 04238F 18 04       5964            JR      CHKO2
jp m,$042c26     ; jp m,$042bee     | 042391 042359 || 042391 FA 26 2C 04 5965  CHKO1:   JP      M,OFLOW         ;OVERFLOW
add a,$80        ; add a,$80        | 042395 04235D || 042395 C6 80       5966  CHKO2:   ADD     A,80H
ld c,a           ; ld c,a           | 042397 04235F || 042397 4F          5967            LD      C,A
jp z,$042c5b     ; jp z,$042c23     | 042398 042360 || 042398 CA 5B 2C 04 5968            JP      Z,ZERO_FP
ex af,af'        ; ex af,af'        | 04239C 042364 || 04239C 08          5969            EX      AF,AF'          ;RESTORE SIGN BIT
res 7,h          ; res 7,h          | 04239D 042365 || 04239D CB BC       5970            RES     7,H
ret p            ; ret p            | 04239F 042367 || 04239F F0          5971            RET     P
set 7,h          ; set 7,h          | 0423A0 042368 || 0423A0 CB FC       5972            SET     7,H
ret              ; ret              | 0423A2 04236A || 0423A2 C9          5973            RET
call $042c0f     ; call $042bd7     | 0423A3 04236B || 0423A3 CD 0F 2C 04 5977  IPOW:   CALL    SWAP_FP
bit 7,h          ; bit 7,h          | 0423A7 04236F || 0423A7 CB 7C       5978            BIT     7,H
push af          ; push af          | 0423A9 042371 || 0423A9 F5          5979            PUSH    AF              ;SAVE SIGN
call nz,$042b12  ; call nz,$042ada  | 0423AA 042372 || 0423AA C4 12 2B 04 5980            CALL    NZ,NEGATE
ld c,b           ; ld c,b           | 0423AE 042376 || 0423AE 48          5981  IPOW0:   LD      C,B
ld b,$20         ; ld b,$20         | 0423AF 042377 || 0423AF 06 20       5982            LD      B,32            ;LOOP COUNTER
call $042cc7     ; call $042c8f     | 0423B1 042379 || 0423B1 CD C7 2C 04 5983  IPOW1:   CALL    X2
jr c,$+$0a       ; jr c,$+$0a       | 0423B5 04237D || 0423B5 38 08       5984            JR      C,IPOW2
djnz $-$06       ; djnz $-$06       | 0423B7 04237F || 0423B7 10 F8       5985            DJNZ    IPOW1
pop af           ; pop af           | 0423B9 042381 || 0423B9 F1          5986            POP     AF
exx              ; exx              | 0423BA 042382 || 0423BA D9          5987            EXX
inc l            ; inc l            | 0423BB 042383 || 0423BB 2C          5988            INC     L               ;RESULT=1
exx              ; exx              | 0423BC 042384 || 0423BC D9          5989            EXX
ld c,h           ; ld c,h           | 0423BD 042385 || 0423BD 4C          5990            LD      C,H
ret              ; ret              | 0423BE 042386 || 0423BE C9          5991            RET
pop af           ; pop af           | 0423BF 042387 || 0423BF F1          5993  IPOW2:   POP     AF
push bc          ; push bc          | 0423C0 042388 || 0423C0 C5          5994            PUSH    BC
ex de,hl         ; ex de,hl         | 0423C1 042389 || 0423C1 EB          5995            EX      DE,HL
push hl          ; push hl          | 0423C2 04238A || 0423C2 E5          5996            PUSH    HL
exx              ; exx              | 0423C3 04238B || 0423C3 D9          5997            EXX
ex de,hl         ; ex de,hl         | 0423C4 04238C || 0423C4 EB          5998            EX      DE,HL
push hl          ; push hl          | 0423C5 04238D || 0423C5 E5          5999            PUSH    HL
exx              ; exx              | 0423C6 04238E || 0423C6 D9          6000            EXX
ld ix,$000000    ; ld ix,$000000    | 0423C7 04238F || 0423C7 DD 21 00 00 6001            LD      IX,0
add ix,sp        ; add ix,sp        | 0423CC 042394 || 0423CC DD 39       6002            ADD     IX,SP
jr z,$+$4a       ; jr z,$+$4a       | 0423CE 042396 || 0423CE 28 48       6003            JR      Z,IPOW4
push bc          ; push bc          | 0423D0 042398 || 0423D0 C5          6004            PUSH    BC
exx              ; exx              | 0423D1 042399 || 0423D1 D9          6005            EXX
push de          ; push de          | 0423D2 04239A || 0423D2 D5          6006            PUSH    DE
exx              ; exx              | 0423D3 04239B || 0423D3 D9          6007            EXX
push de          ; push de          | 0423D4 04239C || 0423D4 D5          6008            PUSH    DE
call $042bde     ; call $042ba6     | 0423D5 04239D || 0423D5 CD DE 2B 04 6009            CALL    SFLOAT_FP
call $042712     ; call $0426da     | 0423D9 0423A1 || 0423D9 CD 12 27 04 6010            CALL    RECIP
ld (ix+$04),c    ; ld (ix+$04),c    | 0423DD 0423A5 || 0423DD DD 71 04    6011            LD      (IX+4),C
exx              ; exx              | 0423E0 0423A8 || 0423E0 D9          6012            EXX
ld (ix),l        ; ld (ix),l        | 0423E1 0423A9 || 0423E1 DD 75 00    6013            LD      (IX+0),L
ld (ix+$01),h    ; ld (ix+$01),h    | 0423E4 0423AC || 0423E4 DD 74 01    6014            LD      (IX+1),H
exx              ; exx              | 0423E7 0423AF || 0423E7 D9          6015            EXX
ld (ix+$02),l    ; ld (ix+$02),l    | 0423E8 0423B0 || 0423E8 DD 75 02    6016            LD      (IX+2),L
ld (ix+$03),h    ; ld (ix+$03),h    | 0423EB 0423B3 || 0423EB DD 74 03    6017            LD      (IX+3),H
jr $+$23         ; jr $+$23         | 0423EE 0423B6 || 0423EE 18 21       6018            JR      IPOW5
push bc          ; push bc          | 0423F0 0423B8 || 0423F0 C5          6020  IPOW3:   PUSH    BC
exx              ; exx              | 0423F1 0423B9 || 0423F1 D9          6021            EXX
sla e            ; sla e            | 0423F2 0423BA || 0423F2 CB 23       6022            SLA     E
rl d             ; rl d             | 0423F4 0423BC || 0423F4 CB 12       6023            RL      D
push de          ; push de          | 0423F6 0423BE || 0423F6 D5          6024            PUSH    DE
exx              ; exx              | 0423F7 0423BF || 0423F7 D9          6025            EXX
rl e             ; rl e             | 0423F8 0423C0 || 0423F8 CB 13       6026            RL      E
rl d             ; rl d             | 0423FA 0423C2 || 0423FA CB 12       6027            RL      D
push de          ; push de          | 0423FC 0423C4 || 0423FC D5          6028            PUSH    DE
ld a,$0a         ; ld a,$0a         | 0423FD 0423C5 || 0423FD 3E 0A       6029            LD      A,'*' & 0FH
push af          ; push af          | 0423FF 0423C7 || 0423FF F5          6030            PUSH    AF
call $042cdb     ; call $042ca3     | 042400 0423C8 || 042400 CD DB 2C 04 6031            CALL    COPY_
call $0420bb     ; call $042083     | 042404 0423CC || 042404 CD BB 20 04 6032            CALL    OP              ;SQUARE
pop af           ; pop af           | 042408 0423D0 || 042408 F1          6033            POP     AF
call $042a07     ; call $0429cf     | 042409 0423D1 || 042409 CD 07 2A 04 6034            CALL    DLOAD5
call c,$0420bb   ; call c,$042083   | 04240D 0423D5 || 04240D DC BB 20 04 6035            CALL    C,OP            ;MULTIPLY BY X
pop de           ; pop de           | 042411 0423D9 || 042411 D1          6036  IPOW5:   POP     DE
exx              ; exx              | 042412 0423DA || 042412 D9          6037            EXX
pop de           ; pop de           | 042413 0423DB || 042413 D1          6038            POP     DE
exx              ; exx              | 042414 0423DC || 042414 D9          6039            EXX
ld a,c           ; ld a,c           | 042415 0423DD || 042415 79          6040            LD      A,C
pop bc           ; pop bc           | 042416 0423DE || 042416 C1          6041            POP     BC
ld c,a           ; ld c,a           | 042417 0423DF || 042417 4F          6042            LD      C,A
djnz $-$28       ; djnz $-$28       | 042418 0423E0 || 042418 10 D6       6043  IPOW4:   DJNZ    IPOW3
pop af           ; pop af           | 04241A 0423E2 || 04241A F1          6044            POP     AF
pop af           ; pop af           | 04241B 0423E3 || 04241B F1          6045            POP     AF
pop af           ; pop af           | 04241C 0423E4 || 04241C F1          6046            POP     AF
ret              ; ret              | 04241D 0423E5 || 04241D C9          6047            RET
pop af           ; pop af           | 04241E 0423E6 || 04241E F1          6049  FPOW0:   POP     AF
pop af           ; pop af           | 04241F 0423E7 || 04241F F1          6050            POP     AF
pop af           ; pop af           | 042420 0423E8 || 042420 F1          6051            POP     AF
jr $-$73         ; jr $-$73         | 042421 0423E9 || 042421 18 8B       6052            JR      IPOW0
bit 7,d          ; bit 7,d          | 042423 0423EB || 042423 CB 7A       6056  FPOW:   BIT     7,D
push af          ; push af          | 042425 0423ED || 042425 F5          6057            PUSH    AF
call $042c0f     ; call $042bd7     | 042426 0423EE || 042426 CD 0F 2C 04 6058            CALL    SWAP_FP
call $042ceb     ; call $042cb3     | 04242A 0423F2 || 04242A CD EB 2C 04 6059            CALL    PUSH5
dec c            ; dec c            | 04242E 0423F6 || 04242E 0D          6060            DEC     C
inc c            ; inc c            | 04242F 0423F7 || 04242F 0C          6061            INC     C
jr z,$-$12       ; jr z,$-$12       | 042430 0423F8 || 042430 28 EC       6062            JR      Z,FPOW0
ld a,$9e         ; ld a,$9e         | 042432 0423FA || 042432 3E 9E       6063            LD      A,158
cp c             ; cp c             | 042434 0423FC || 042434 B9          6064            CP      C
jr c,$+$0c       ; jr c,$+$0c       | 042435 0423FD || 042435 38 0A       6065            JR      C,FPOW1
inc a            ; inc a            | 042437 0423FF || 042437 3C          6066            INC     A
call $042ae3     ; call $042aab     | 042438 042400 || 042438 CD E3 2A 04 6067            CALL    FIX
ex af,af'        ; ex af,af'        | 04243C 042404 || 04243C 08          6068            EX      AF,AF'
jp p,$04241e     ; jp p,$0423e6     | 04243D 042405 || 04243D F2 1E 24 04 6069            JP      P,FPOW0
call $042c0f     ; call $042bd7     | 042441 042409 || 042441 CD 0F 2C 04 6070  FPOW1:   CALL    SWAP_FP
call $04272f     ; call $0426f7     | 042445 04240D || 042445 CD 2F 27 04 6071            CALL    LN0
call $042cf4     ; call $042cbc     | 042449 042411 || 042449 CD F4 2C 04 6072            CALL    POP5
pop af           ; pop af           | 04244D 042415 || 04244D F1          6073            POP     AF
call $042346     ; call $04230e     | 04244E 042416 || 04244E CD 46 23 04 6074            CALL    FMUL
jp $042691       ; jp $042659       | 042452 04241A || 042452 C3 91 26 04 6075            JP      EXP0
call $042c65     ; call $042c2d     | 042456 04241E || 042456 CD 65 2C 04 6080  FLT:   CALL    FCP
jr $+$06         ; jr $+$06         | 04245A 042422 || 04245A 18 04       6081            JR      ILT1
call $042c57     ; call $042c1f     | 04245C 042424 || 04245C CD 57 2C 04 6082  ILT:   CALL    ICP
ret nc           ; ret nc           | 042460 042428 || 042460 D0          6083  ILT1:   RET     NC
jr $+$44         ; jr $+$44         | 042461 042429 || 042461 18 42       6084            JR      TRUE_FP
call $042c65     ; call $042c2d     | 042463 04242B || 042463 CD 65 2C 04 6086  FGT:   CALL    FCP
jr $+$06         ; jr $+$06         | 042467 04242F || 042467 18 04       6087            JR      IGT1
call $042c57     ; call $042c1f     | 042469 042431 || 042469 CD 57 2C 04 6088  IGT:   CALL    ICP
ret z            ; ret z            | 04246D 042435 || 04246D C8          6089  IGT1:   RET     Z
ret c            ; ret c            | 04246E 042436 || 04246E D8          6090            RET     C
jr $+$36         ; jr $+$36         | 04246F 042437 || 04246F 18 34       6091            JR      TRUE_FP
call $042c65     ; call $042c2d     | 042471 042439 || 042471 CD 65 2C 04 6093  FGE:   CALL    FCP
jr $+$06         ; jr $+$06         | 042475 04243D || 042475 18 04       6094            JR      IGE1
call $042c57     ; call $042c1f     | 042477 04243F || 042477 CD 57 2C 04 6095  IGE:   CALL    ICP
ret c            ; ret c            | 04247B 042443 || 04247B D8          6096  IGE1:   RET     C
jr $+$29         ; jr $+$29         | 04247C 042444 || 04247C 18 27       6097            JR      TRUE_FP
call $042c65     ; call $042c2d     | 04247E 042446 || 04247E CD 65 2C 04 6099  FLE:   CALL    FCP
jr $+$06         ; jr $+$06         | 042482 04244A || 042482 18 04       6100            JR      ILE1
call $042c57     ; call $042c1f     | 042484 04244C || 042484 CD 57 2C 04 6101  ILE:   CALL    ICP
jr z,$+$1d       ; jr z,$+$1d       | 042488 042450 || 042488 28 1B       6102  ILE1:   JR      Z,TRUE_FP
ret nc           ; ret nc           | 04248A 042452 || 04248A D0          6103            RET     NC
jr $+$1a         ; jr $+$1a         | 04248B 042453 || 04248B 18 18       6104            JR      TRUE_FP
call $042c65     ; call $042c2d     | 04248D 042455 || 04248D CD 65 2C 04 6106  FNE:   CALL    FCP
jr $+$06         ; jr $+$06         | 042491 042459 || 042491 18 04       6107            JR      INE1
call $042c57     ; call $042c1f     | 042493 04245B || 042493 CD 57 2C 04 6108  INE:   CALL    ICP
ret z            ; ret z            | 042497 04245F || 042497 C8          6109  INE1:   RET     Z
jr $+$0d         ; jr $+$0d         | 042498 042460 || 042498 18 0B       6110            JR      TRUE_FP
call $042c65     ; call $042c2d     | 04249A 042462 || 04249A CD 65 2C 04 6112  FEQ:   CALL    FCP
jr $+$06         ; jr $+$06         | 04249E 042466 || 04249E 18 04       6113            JR      IEQ1
call $042c57     ; call $042c1f     | 0424A0 042468 || 0424A0 CD 57 2C 04 6114  IEQ:   CALL    ICP
ret nz           ; ret nz           | 0424A4 04246C || 0424A4 C0          6115  IEQ1:   RET     NZ
ld hl,$ffffff    ; ld hl,$ffffff    | 0424A5 04246D || 0424A5 21 FF FF FF 6116  TRUE_FP:   LD      HL,-1
exx              ; exx              | 0424A9 042471 || 0424A9 D9          6117            EXX
ld hl,$ffffff    ; ld hl,$ffffff    | 0424AA 042472 || 0424AA 21 FF FF FF 6118            LD      HL,-1
exx              ; exx              | 0424AE 042476 || 0424AE D9          6119            EXX
xor a            ; xor a            | 0424AF 042477 || 0424AF AF          6120            XOR     A
ld c,a           ; ld c,a           | 0424B0 042478 || 0424B0 4F          6121            LD      C,A
ret              ; ret              | 0424B1 042479 || 0424B1 C9          6122            RET
bit 7,h          ; bit 7,h          | 0424B2 04247A || 0424B2 CB 7C       6133  ABSV_FP:   BIT     7,H
ret z            ; ret z            | 0424B4 04247C || 0424B4 C8          6134            RET     Z               ;POSITIVE/ZERO
dec c            ; dec c            | 0424B5 04247D || 0424B5 0D          6135            DEC     C
inc c            ; inc c            | 0424B6 04247E || 0424B6 0C          6136            INC     C
jp z,$042b12     ; jp z,$042ada     | 0424B7 04247F || 0424B7 CA 12 2B 04 6137            JP      Z,NEGATE        ;INTEGER
res 7,h          ; res 7,h          | 0424BB 042483 || 0424BB CB BC       6138            RES     7,H
ret              ; ret              | 0424BD 042485 || 0424BD C9          6139            RET
call $042b02     ; call $042aca     | 0424BE 042486 || 0424BE CD 02 2B 04 6144  NOTK_FP:   CALL    SFIX_FP
ld a,h           ; ld a,h           | 0424C2 04248A || 0424C2 7C          6145            LD      A,H
cpl              ; cpl              | 0424C3 04248B || 0424C3 2F          6146            CPL
ld h,a           ; ld h,a           | 0424C4 04248C || 0424C4 67          6147            LD      H,A
ld a,l           ; ld a,l           | 0424C5 04248D || 0424C5 7D          6148            LD      A,L
cpl              ; cpl              | 0424C6 04248E || 0424C6 2F          6149            CPL
ld l,a           ; ld l,a           | 0424C7 04248F || 0424C7 6F          6150            LD      L,A
exx              ; exx              | 0424C8 042490 || 0424C8 D9          6151            EXX
ld a,h           ; ld a,h           | 0424C9 042491 || 0424C9 7C          6152            LD      A,H
cpl              ; cpl              | 0424CA 042492 || 0424CA 2F          6153            CPL
ld h,a           ; ld h,a           | 0424CB 042493 || 0424CB 67          6154            LD      H,A
ld a,l           ; ld a,l           | 0424CC 042494 || 0424CC 7D          6155            LD      A,L
cpl              ; cpl              | 0424CD 042495 || 0424CD 2F          6156            CPL
ld l,a           ; ld l,a           | 0424CE 042496 || 0424CE 6F          6157            LD      L,A
exx              ; exx              | 0424CF 042497 || 0424CF D9          6158            EXX
xor a            ; xor a            | 0424D0 042498 || 0424D0 AF          6159            XOR     A               ;NUMERIC MARKER
ret              ; ret              | 0424D1 042499 || 0424D1 C9          6160            RET
ld hl,$00490f    ; ld hl,$00490f    | 0424D2 04249A || 0424D2 21 0F 49 00 6165  PI_FP:   LD      HL,490FH
exx              ; exx              | 0424D6 04249E || 0424D6 D9          6166            EXX
ld hl,$00daa2    ; ld hl,$00daa2    | 0424D7 04249F || 0424D7 21 A2 DA 00 6167            LD      HL,0DAA2H
exx              ; exx              | 0424DB 0424A3 || 0424DB D9          6168            EXX
ld c,$81         ; ld c,$81         | 0424DC 0424A4 || 0424DC 0E 81       6169            LD      C,81H
xor a            ; xor a            | 0424DE 0424A6 || 0424DE AF          6170            XOR     A               ;NUMERIC MARKER
ret              ; ret              | 0424DF 0424A7 || 0424DF C9          6171            RET
call $0424f4     ; call $0424bc     | 0424E0 0424A8 || 0424E0 CD F4 24 04 6176  DEG_FP:   CALL    FPI180
call $042346     ; call $04230e     | 0424E4 0424AC || 0424E4 CD 46 23 04 6177            CALL    FMUL
xor a            ; xor a            | 0424E8 0424B0 || 0424E8 AF          6178            XOR     A
ret              ; ret              | 0424E9 0424B1 || 0424E9 C9          6179            RET
call $0424f4     ; call $0424bc     | 0424EA 0424B2 || 0424EA CD F4 24 04 6184  RAD_FP:   CALL    FPI180
call $04229d     ; call $042265     | 0424EE 0424B6 || 0424EE CD 9D 22 04 6185            CALL    FDIV
xor a            ; xor a            | 0424F2 0424BA || 0424F2 AF          6186            XOR     A
ret              ; ret              | 0424F3 0424BB || 0424F3 C9          6187            RET
call $042bde     ; call $042ba6     | 0424F4 0424BC || 0424F4 CD DE 2B 04 6191  FPI180:   CALL    SFLOAT_FP
ld de,$00652e    ; ld de,$00652e    | 0424F8 0424C0 || 0424F8 11 2E 65 00 6192            LD      DE,652EH
exx              ; exx              | 0424FC 0424C4 || 0424FC D9          6193            EXX
ld de,$00e0d3    ; ld de,$00e0d3    | 0424FD 0424C5 || 0424FD 11 D3 E0 00 6194            LD      DE,0E0D3H
exx              ; exx              | 042501 0424C9 || 042501 D9          6195            EXX
ld b,$85         ; ld b,$85         | 042502 0424CA || 042502 06 85       6196            LD      B,85H
ret              ; ret              | 042504 0424CC || 042504 C9          6197            RET
call $042c37     ; call $042bff     | 042505 0424CD || 042505 CD 37 2C 04 6202  SGN_FP:   CALL    TEST_FP
or c             ; or c             | 042509 0424D1 || 042509 B1          6203            OR      C
ret z            ; ret z            | 04250A 0424D2 || 04250A C8          6204            RET     Z               ;ZERO
bit 7,h          ; bit 7,h          | 04250B 0424D3 || 04250B CB 7C       6205            BIT     7,H
jp nz,$0424a5    ; jp nz,$04246d    | 04250D 0424D5 || 04250D C2 A5 24 04 6206            JP      NZ,TRUE_FP         ;-1
call $042c5b     ; call $042c23     | 042511 0424D9 || 042511 CD 5B 2C 04 6207            CALL    ZERO_FP
jp $042bf7       ; jp $042bbf       | 042515 0424DD || 042515 C3 F7 2B 04 6208            JP      ADD1_FP            ;1
call $042e75     ; call $042e3d     | 042519 0424E1 || 042519 CD 75 2E 04 6214  VAL_FP:   CALL    SIGNQ
push af          ; push af          | 04251D 0424E5 || 04251D F5          6215            PUSH    AF
call $042a25     ; call $0429ed     | 04251E 0424E6 || 04251E CD 25 2A 04 6216            CALL    CON_FP
pop af           ; pop af           | 042522 0424EA || 042522 F1          6217            POP     AF
cp $2d           ; cp $2d           | 042523 0424EB || 042523 FE 2D       6218            CP      '-'
ld a,$00         ; ld a,$00         | 042525 0424ED || 042525 3E 00       6219            LD      A,0             ;NUMERIC MARKER
ret nz           ; ret nz           | 042527 0424EF || 042527 C0          6220            RET     NZ
dec c            ; dec c            | 042528 0424F0 || 042528 0D          6221            DEC     C
inc c            ; inc c            | 042529 0424F1 || 042529 0C          6222            INC     C
jp z,$042b12     ; jp z,$042ada     | 04252A 0424F2 || 04252A CA 12 2B 04 6223            JP      Z,NEGATE        ;ZERO/INTEGER
ld a,h           ; ld a,h           | 04252E 0424F6 || 04252E 7C          6224            LD      A,H
xor $80          ; xor $80          | 04252F 0424F7 || 04252F EE 80       6225            XOR     80H             ;CHANGE SIGN (FP)
ld h,a           ; ld h,a           | 042531 0424F9 || 042531 67          6226            LD      H,A
xor a            ; xor a            | 042532 0424FA || 042532 AF          6227            XOR     A
ret              ; ret              | 042533 0424FB || 042533 C9          6228            RET
dec c            ; dec c            | 042534 0424FC || 042534 0D          6233  INT_FP_:   DEC     C
inc c            ; inc c            | 042535 0424FD || 042535 0C          6234            INC     C
ret z            ; ret z            | 042536 0424FE || 042536 C8          6235            RET     Z               ;ZERO/INTEGER
ld a,$9f         ; ld a,$9f         | 042537 0424FF || 042537 3E 9F       6236            LD      A,159
ld b,h           ; ld b,h           | 042539 042501 || 042539 44          6237            LD      B,H             ;B7=SIGN BIT
call $042ae3     ; call $042aab     | 04253A 042502 || 04253A CD E3 2A 04 6238            CALL    FIX
ex af,af'        ; ex af,af'        | 04253E 042506 || 04253E 08          6239            EX      AF,AF'
and b            ; and b            | 04253F 042507 || 04253F A0          6240            AND     B
call m,$042bf7   ; call m,$042bbf   | 042540 042508 || 042540 FC F7 2B 04 6241            CALL    M,ADD1_FP          ;NEGATIVE NON-INTEGER
ld a,b           ; ld a,b           | 042544 04250C || 042544 78          6242            LD      A,B
or a             ; or a             | 042545 04250D || 042545 B7          6243            OR      A
call m,$042b12   ; call m,$042ada   | 042546 04250E || 042546 FC 12 2B 04 6244            CALL    M,NEGATE
xor a            ; xor a            | 04254A 042512 || 04254A AF          6245            XOR     A
ld c,a           ; ld c,a           | 04254B 042513 || 04254B 4F          6246            LD      C,A
ret              ; ret              | 04254C 042514 || 04254C C9          6247            RET
call $042bde     ; call $042ba6     | 04254D 042515 || 04254D CD DE 2B 04 6252  SQR_FP:   CALL    SFLOAT_FP
bit 7,h          ; bit 7,h          | 042551 042519 || 042551 CB 7C       6253  SQR0:   BIT     7,H
ld a,$15         ; ld a,$15         | 042553 04251B || 042553 3E 15       6254            LD      A,NGROOT
jp nz,$0420b5    ; jp nz,$04207d    | 042555 04251D || 042555 C2 B5 20 04 6255            JP      NZ,ERROR_FP_        ;"-ve root"
dec c            ; dec c            | 042559 042521 || 042559 0D          6256            DEC     C
inc c            ; inc c            | 04255A 042522 || 04255A 0C          6257            INC     C
ret z            ; ret z            | 04255B 042523 || 04255B C8          6258            RET     Z               ;ZERO
set 7,h          ; set 7,h          | 04255C 042524 || 04255C CB FC       6259            SET     7,H             ;IMPLIED 1
bit 0,c          ; bit 0,c          | 04255E 042526 || 04255E CB 41       6260            BIT     0,C
call z,$042c17   ; call z,$042bdf   | 042560 042528 || 042560 CC 17 2C 04 6261            CALL    Z,DIV2          ;MAKE EXPONENT ODD
ld a,c           ; ld a,c           | 042564 04252C || 042564 79          6262            LD      A,C
sub $80          ; sub $80          | 042565 04252D || 042565 D6 80       6263            SUB     80H
sra a            ; sra a            | 042567 04252F || 042567 CB 2F       6264            SRA     A               ;HALVE EXPONENT
add a,$80        ; add a,$80        | 042569 042531 || 042569 C6 80       6265            ADD     A,80H
ld c,a           ; ld c,a           | 04256B 042533 || 04256B 4F          6266            LD      C,A
push bc          ; push bc          | 04256C 042534 || 04256C C5          6267            PUSH    BC              ;SAVE EXPONENT
ex de,hl         ; ex de,hl         | 04256D 042535 || 04256D EB          6268            EX      DE,HL
ld hl,$000000    ; ld hl,$000000    | 04256E 042536 || 04256E 21 00 00 00 6269            LD      HL,0
ld b,h           ; ld b,h           | 042572 04253A || 042572 44          6270            LD      B,H
ld c,l           ; ld c,l           | 042573 04253B || 042573 4D          6271            LD      C,L
exx              ; exx              | 042574 04253C || 042574 D9          6272            EXX
ex de,hl         ; ex de,hl         | 042575 04253D || 042575 EB          6273            EX      DE,HL
ld hl,$000000    ; ld hl,$000000    | 042576 04253E || 042576 21 00 00 00 6274            LD      HL,0
ld b,h           ; ld b,h           | 04257A 042542 || 04257A 44          6275            LD      B,H
ld c,l           ; ld c,l           | 04257B 042543 || 04257B 4D          6276            LD      C,L
ld a,$e1         ; ld a,$e1         | 04257C 042544 || 04257C 3E E1       6277            LD      A,-31
call $042e0d     ; call $042dd5     | 04257E 042546 || 04257E CD 0D 2E 04 6278            CALL    SQRA            ;ROOT
exx              ; exx              | 042582 04254A || 042582 D9          6279            EXX
bit 7,b          ; bit 7,b          | 042583 04254B || 042583 CB 78       6280            BIT     7,B
exx              ; exx              | 042585 04254D || 042585 D9          6281            EXX
call z,$042e0d   ; call z,$042dd5   | 042586 04254E || 042586 CC 0D 2E 04 6282            CALL    Z,SQRA          ;NORMALISE & INC A
call $042e4e     ; call $042e16     | 04258A 042552 || 04258A CD 4E 2E 04 6283            CALL    SQRB
or a             ; or a             | 04258E 042556 || 04258E B7          6284            OR      A               ;CLEAR CARRY
call $042dbb     ; call $042d83     | 04258F 042557 || 04258F CD BB 2D 04 6285            CALL    DIVB
rr e             ; rr e             | 042593 04255B || 042593 CB 1B       6286            RR      E               ;LSB TO CARRY
ld h,b           ; ld h,b           | 042595 04255D || 042595 60          6287            LD      H,B
ld l,c           ; ld l,c           | 042596 04255E || 042596 69          6288            LD      L,C
exx              ; exx              | 042597 04255F || 042597 D9          6289            EXX
ld h,b           ; ld h,b           | 042598 042560 || 042598 60          6290            LD      H,B
ld l,c           ; ld l,c           | 042599 042561 || 042599 69          6291            LD      L,C
call c,$042bf7   ; call c,$042bbf   | 04259A 042562 || 04259A DC F7 2B 04 6292            CALL    C,ADD1_FP          ;ROUND UP
pop bc           ; pop bc           | 04259E 042566 || 04259E C1          6293            POP     BC              ;RESTORE EXPONENT
call c,$042c24   ; call c,$042bec   | 04259F 042567 || 04259F DC 24 2C 04 6294            CALL    C,INCC
rra              ; rra              | 0425A3 04256B || 0425A3 1F          6295            RRA
sbc a,a          ; sbc a,a          | 0425A4 04256C || 0425A4 9F          6296            SBC     A,A
add a,c          ; add a,c          | 0425A5 04256D || 0425A5 81          6297            ADD     A,C
ld c,a           ; ld c,a           | 0425A6 04256E || 0425A6 4F          6298            LD      C,A
res 7,h          ; res 7,h          | 0425A7 04256F || 0425A7 CB BC       6299            RES     7,H             ;POSITIVE
xor a            ; xor a            | 0425A9 042571 || 0425A9 AF          6300            XOR     A
ret              ; ret              | 0425AA 042572 || 0425AA C9          6301            RET
call $042bde     ; call $042ba6     | 0425AB 042573 || 0425AB CD DE 2B 04 6306  TAN_FP:   CALL    SFLOAT_FP
call $042ceb     ; call $042cb3     | 0425AF 042577 || 0425AF CD EB 2C 04 6307            CALL    PUSH5
call $0425d5     ; call $04259d     | 0425B3 04257B || 0425B3 CD D5 25 04 6308            CALL    COS0
call $042cf4     ; call $042cbc     | 0425B7 04257F || 0425B7 CD F4 2C 04 6309            CALL    POP5
call $042ceb     ; call $042cb3     | 0425BB 042583 || 0425BB CD EB 2C 04 6310            CALL    PUSH5
call $042c0f     ; call $042bd7     | 0425BF 042587 || 0425BF CD 0F 2C 04 6311            CALL    SWAP_FP
call $0425e2     ; call $0425aa     | 0425C3 04258B || 0425C3 CD E2 25 04 6312            CALL    SIN0
call $042cf4     ; call $042cbc     | 0425C7 04258F || 0425C7 CD F4 2C 04 6313            CALL    POP5
call $04229d     ; call $042265     | 0425CB 042593 || 0425CB CD 9D 22 04 6314            CALL    FDIV
xor a            ; xor a            | 0425CF 042597 || 0425CF AF          6315            XOR     A               ;NUMERIC MARKER
ret              ; ret              | 0425D0 042598 || 0425D0 C9          6316            RET
call $042bde     ; call $042ba6     | 0425D1 042599 || 0425D1 CD DE 2B 04 6321  COS_FP:   CALL    SFLOAT_FP
call $042b3a     ; call $042b02     | 0425D5 04259D || 0425D5 CD 3A 2B 04 6322  COS0:   CALL    SCALE
inc e            ; inc e            | 0425D9 0425A1 || 0425D9 1C          6323            INC     E
inc e            ; inc e            | 0425DA 0425A2 || 0425DA 1C          6324            INC     E
ld a,e           ; ld a,e           | 0425DB 0425A3 || 0425DB 7B          6325            LD      A,E
jr $+$12         ; jr $+$12         | 0425DC 0425A4 || 0425DC 18 10       6326            JR      SIN1
call $042bde     ; call $042ba6     | 0425DE 0425A6 || 0425DE CD DE 2B 04 6331  SIN_FP:   CALL    SFLOAT_FP
push hl          ; push hl          | 0425E2 0425AA || 0425E2 E5          6332  SIN0:   PUSH    HL              ;H7=SIGN
call $042b3a     ; call $042b02     | 0425E3 0425AB || 0425E3 CD 3A 2B 04 6333            CALL    SCALE
pop af           ; pop af           | 0425E7 0425AF || 0425E7 F1          6334            POP     AF
rlca             ; rlca             | 0425E8 0425B0 || 0425E8 07          6335            RLCA
rlca             ; rlca             | 0425E9 0425B1 || 0425E9 07          6336            RLCA
rlca             ; rlca             | 0425EA 0425B2 || 0425EA 07          6337            RLCA
and $04          ; and $04          | 0425EB 0425B3 || 0425EB E6 04       6338            AND     4
xor e            ; xor e            | 0425ED 0425B5 || 0425ED AB          6339            XOR     E
push af          ; push af          | 0425EE 0425B6 || 0425EE F5          6340  SIN1:   PUSH    AF              ;OCTANT
res 7,h          ; res 7,h          | 0425EF 0425B7 || 0425EF CB BC       6341            RES     7,H
rra              ; rra              | 0425F1 0425B9 || 0425F1 1F          6342            RRA
call $042680     ; call $042648     | 0425F2 0425BA || 0425F2 CD 80 26 04 6343            CALL    PIBY4
call c,$042221   ; call c,$0421e9   | 0425F6 0425BE || 0425F6 DC 21 22 04 6344            CALL    C,RSUB          ;X=(PI/4)-X
pop af           ; pop af           | 0425FA 0425C2 || 0425FA F1          6345            POP     AF
push af          ; push af          | 0425FB 0425C3 || 0425FB F5          6346            PUSH    AF
and $03          ; and $03          | 0425FC 0425C4 || 0425FC E6 03       6347            AND     3
jp po,$042637    ; jp po,$0425ff    | 0425FE 0425C6 || 0425FE E2 37 26 04 6348            JP      PO,SIN2         ;USE COSINE APPROX.
call $042ceb     ; call $042cb3     | 042602 0425CA || 042602 CD EB 2C 04 6349            CALL    PUSH5           ;SAVE X
call $042ce3     ; call $042cab     | 042606 0425CE || 042606 CD E3 2C 04 6350            CALL    SQUARE          ;PUSH X*X
call $042d28     ; call $042cf0     | 04260A 0425D2 || 04260A CD 28 2D 04 6351            CALL    POLY
or a             ; or a             | 04260E 0425D6 || 04260E B7 A8       6352            DW 0A8B7H          ;a(8)
xor b            ;                  | 04260F        || xor b                          ; 0425D7
ld de,$266d36    ; ld de,$266d36    | 042610 0425D8 || 042610 11 36       6353            DW 3611H
sbc a,$05        ;                  | 042614        || sbc a,$05                      ; 0425DC
ret nc           ;                  | 042616        || ret nc                         ; 0425DE
ld (hl),e        ; ld (hl),e        | 042617 0425DF || 042617 73          6357            DB 73H
ret nz           ; ret nz           | 042618 0425E0 || 042618 C0 80       6358            DW 80C0H           ;a(4)
add a,b          ;                  | 042619        || add a,b                        ; 0425E1
adc a,b          ; adc a,b          | 04261A 0425E2 || 04261A 88 08       6359            DW 888H
ex af,af'        ;                  | 04261B        || ex af,af'                      ; 0425E3
ld a,c           ; ld a,c           | 04261C 0425E4 || 04261C 79          6360            DB 79H
sbc a,l          ; sbc a,l          | 04261D 0425E5 || 04261D 9D AA       6361            DW 0AA9DH          ;a(2)
xor d            ;                  | 04261E        || xor d                          ; 0425E6
xor d            ; xor d            | 04261F 0425E7 || 04261F AA AA       6362            DW 0AAAAH
xor d            ;                  | 042620        || xor d                          ; 0425E8
ld a,l           ; ld a,l           | 042621 0425E9 || 042621 7D          6363            DB 7DH
nop              ; nop              | 042622 0425EA || 042622 00 00       6364            DW 0               ;a(0)
nop              ;                  | 042623        || nop                            ; 0425EB
nop              ; nop              | 042624 0425EC || 042624 00 00       6365            DW 0
nop              ;                  | 042625        || nop                            ; 0425ED
add a,b          ; add a,b          | 042626 0425EE || 042626 80          6366            DB 80H
call $042cf4     ; call $042cbc     | 042627 0425EF || 042627 CD F4 2C 04 6367            CALL    POP5
call $042cf4     ; call $042cbc     | 04262B 0425F3 || 04262B CD F4 2C 04 6368            CALL    POP5
call $042346     ; call $04230e     | 04262F 0425F7 || 04262F CD 46 23 04 6369            CALL    FMUL
jp $04265c       ; jp $042624       | 042633 0425FB || 042633 C3 5C 26 04 6370            JP      SIN3
call $042ce3     ; call $042cab     | 042637 0425FF || 042637 CD E3 2C 04 6372  SIN2:   CALL    SQUARE          ;PUSH X*X
call $042d28     ; call $042cf0     | 04263B 042603 || 04263B CD 28 2D 04 6373            CALL    POLY
ld (hl),c        ; ld (hl),c        | 04263F 042607 || 04263F 71 D5       6374            DW 0D571H          ;b(8)
push de          ;                  | 042640        || push de                        ; 042608
ld a,b           ; ld a,b           | 042641 042609 || 042641 78 4C       6375            DW 4C78H
ld c,h           ;                  | 042642        || ld c,h                         ; 04260A
ld (hl),b        ; ld (hl),b        | 042643 04260B || 042643 70          6376            DB 70H
xor a            ; xor a            | 042644 04260C || 042644 AF 94       6377            DW 94AFH           ;b(6)
sub h            ;                  | 042645        || sub h                          ; 04260D
inc bc           ; inc bc           | 042646 04260E || 042646 03 B6       6378            DW 0B603H
or (hl)          ;                  | 042647        || or (hl)                        ; 04260F
halt             ; halt             | 042648 042610 || 042648 76          6379            DB 76H
ret z            ; ret z            | 042649 042611 || 042649 C8 9C       6380            DW 9CC8H           ;b(4)
sbc a,h          ;                  | 04264A        || sbc a,h                        ; 042612
xor d            ; xor d            | 04264B 042613 || 04264B AA 2A       6381            DW 2AAAH
ld hl,($ffdd7b)  ;                  | 04264C        || ld hl,($ffdd7b)                ; 042614
rst $38          ; rst $38          | 042650 042618 || 042650 FF FF       6384            DW 0FFFFH
rst $38          ;                  | 042651        || rst $38                        ; 042619
ld a,(hl)        ; ld a,(hl)        | 042652 04261A || 042652 7E          6385            DB 7EH
nop              ; nop              | 042653 04261B || 042653 00 00       6386            DW 0               ;b(0)
nop              ;                  | 042654        || nop                            ; 04261C
nop              ; nop              | 042655 04261D || 042655 00 00       6387            DW 0
nop              ;                  | 042656        || nop                            ; 04261E
add a,b          ; add a,b          | 042657 04261F || 042657 80          6388            DB 80H
call $042cf4     ; call $042cbc     | 042658 042620 || 042658 CD F4 2C 04 6389            CALL    POP5
pop af           ; pop af           | 04265C 042624 || 04265C F1          6390  SIN3:   POP     AF
and $04          ; and $04          | 04265D 042625 || 04265D E6 04       6391            AND     4
ret z            ; ret z            | 04265F 042627 || 04265F C8          6392            RET     Z
dec c            ; dec c            | 042660 042628 || 042660 0D          6393            DEC     C
inc c            ; inc c            | 042661 042629 || 042661 0C          6394            INC     C
ret z            ; ret z            | 042662 04262A || 042662 C8          6395            RET     Z               ;ZERO
set 7,h          ; set 7,h          | 042663 04262B || 042663 CB FC       6396            SET     7,H             ;MAKE NEGATIVE
ret              ; ret              | 042665 04262D || 042665 C9          6397            RET
ld hl,$000000    ; ld hl,$000000    | 042666 04262E || 042666 21 00 00 00 6401  FONE_FP:   LD      HL,0
exx              ; exx              | 04266A 042632 || 04266A D9          6402            EXX
ld hl,$000000    ; ld hl,$000000    | 04266B 042633 || 04266B 21 00 00 00 6403            LD      HL,0
exx              ; exx              | 04266F 042637 || 04266F D9          6404            EXX
ld c,$80         ; ld c,$80         | 042670 042638 || 042670 0E 80       6405            LD      C,80H
ret              ; ret              | 042672 04263A || 042672 C9          6406            RET
ld de,$000000    ; ld de,$000000    | 042673 04263B || 042673 11 00 00 00 6408  DONE:   LD      DE,0
exx              ; exx              | 042677 04263F || 042677 D9          6409            EXX
ld de,$000000    ; ld de,$000000    | 042678 042640 || 042678 11 00 00 00 6410            LD      DE,0
exx              ; exx              | 04267C 042644 || 04267C D9          6411            EXX
ld b,$80         ; ld b,$80         | 04267D 042645 || 04267D 06 80       6412            LD      B,80H
ret              ; ret              | 04267F 042647 || 04267F C9          6413            RET
ld de,$00490f    ; ld de,$00490f    | 042680 042648 || 042680 11 0F 49 00 6415  PIBY4:   LD      DE,490FH
exx              ; exx              | 042684 04264C || 042684 D9          6416            EXX
ld de,$00daa2    ; ld de,$00daa2    | 042685 04264D || 042685 11 A2 DA 00 6417            LD      DE,0DAA2H
exx              ; exx              | 042689 042651 || 042689 D9          6418            EXX
ld b,$7f         ; ld b,$7f         | 04268A 042652 || 04268A 06 7F       6419            LD      B,7FH
ret              ; ret              | 04268C 042654 || 04268C C9          6420            RET
call $042bde     ; call $042ba6     | 04268D 042655 || 04268D CD DE 2B 04 6425  EXP_FP:   CALL    SFLOAT_FP
call $04271e     ; call $0426e6     | 042691 042659 || 042691 CD 1E 27 04 6426  EXP0:   CALL    LN2             ;LN(2)
exx              ; exx              | 042695 04265D || 042695 D9          6427            EXX
dec e            ; dec e            | 042696 04265E || 042696 1D          6428            DEC     E
ld bc,$00d1cf    ; ld bc,$00d1cf    | 042697 04265F || 042697 01 CF D1 00 6429            LD      BC,0D1CFH       ;0.6931471805599453
exx              ; exx              | 04269B 042663 || 04269B D9          6430            EXX
push hl          ; push hl          | 04269C 042664 || 04269C E5          6431            PUSH    HL              ;H7=SIGN
call $042b4d     ; call $042b15     | 04269D 042665 || 04269D CD 4D 2B 04 6432            CALL    MOD48           ;"MODULUS"
pop af           ; pop af           | 0426A1 042669 || 0426A1 F1          6433            POP     AF
bit 7,e          ; bit 7,e          | 0426A2 04266A || 0426A2 CB 7B       6434            BIT     7,E
jr z,$+$0d       ; jr z,$+$0d       | 0426A4 04266C || 0426A4 28 0B       6435            JR      Z,EXP1
rla              ; rla              | 0426A6 04266E || 0426A6 17          6436            RLA
jp c,$042c5b     ; jp c,$042c23     | 0426A7 04266F || 0426A7 DA 5B 2C 04 6437            JP      C,ZERO_FP
ld a,$18         ; ld a,$18         | 0426AB 042673 || 0426AB 3E 18       6438            LD      A,EXPRNG
jp $0420b5       ; jp $04207d       | 0426AD 042675 || 0426AD C3 B5 20 04 6439            JP      ERROR_FP_           ;"Exp range"
and $80          ; and $80          | 0426B1 042679 || 0426B1 E6 80       6441  EXP1:   AND     80H
or e             ; or e             | 0426B3 04267B || 0426B3 B3          6442            OR      E
push af          ; push af          | 0426B4 04267C || 0426B4 F5          6443            PUSH    AF              ;INTEGER PART
res 7,h          ; res 7,h          | 0426B5 04267D || 0426B5 CB BC       6444            RES     7,H
call $042ceb     ; call $042cb3     | 0426B7 04267F || 0426B7 CD EB 2C 04 6445            CALL    PUSH5           ;PUSH X*LN(2)
call $042d28     ; call $042cf0     | 0426BB 042683 || 0426BB CD 28 2D 04 6446            CALL    POLY
ld (hl),d        ; ld (hl),d        | 0426BF 042687 || 0426BF 72 40       6447            DW 4072H           ;a(7)
ld.sis l,$94     ;                  | 0426C0        || ld.sis l,$94                   ; 042688
ld (hl),e        ; ld (hl),e        | 0426C3 04268B || 0426C3 73          6449            DB 73H
ld h,l           ; ld h,l           | 0426C4 04268C || 0426C4 65 6F       6450            DW 6F65H           ;a(6)
ld l,a           ;                  | 0426C5        || ld l,a                         ; 04268D
ld c,a           ; ld c,a           | 0426C6 04268E || 0426C6 4F 2E       6451            DW 2E4FH
ld l,$76         ;                  | 0426C7        || ld l,$76                       ; 04268F
scf              ; scf              | 0426C9 042691 || 0426C9 37 6D       6453            DW 6D37H           ;a(5)
ld l,l           ;                  | 0426CA        || ld l,l                         ; 042692
ld (bc),a        ; ld (bc),a        | 0426CB 042693 || 0426CB 02 88       6454            DW 8802H
adc a,b          ;                  | 0426CC        || adc a,b                        ; 042694
ld a,c           ; ld a,c           | 0426CD 042695 || 0426CD 79          6455            DB 79H
ld (de),a        ; ld (de),a        | 0426CE 042696 || 0426CE 12 E5       6456            DW 0E512H          ;a(4)
push hl          ;                  | 0426CF        || push hl                        ; 042697
and b            ; and b            | 0426D0 042698 || 0426D0 A0 2A       6457            DW 2AA0H
ld hl,($4f147b)  ;                  | 0426D1        || ld hl,($4f147b)                ; 042699
xor d            ; xor d            | 0426D5 04269D || 0426D5 AA AA       6460            DW 0AAAAH
xor d            ;                  | 0426D6        || xor d                          ; 04269E
ld a,l           ; ld a,l           | 0426D7 04269F || 0426D7 7D          6461            DB 7DH
ld d,(hl)        ; ld d,(hl)        | 0426D8 0426A0 || 0426D8 56 FD       6462            DW 0FD56H          ;a(2)
trap             ;                  | 0426D9        || trap                           ; 0426A1
ld a,a           ;                  | 0426DB        || ld a,a                         ; 0426A3
ld a,(hl)        ; ld a,(hl)        | 0426DC 0426A4 || 0426DC 7E          6464            DB 7EH
cp $ff           ; cp $ff           | 0426DD 0426A5 || 0426DD FE FF       6465            DW 0FFFEH          ;a(1)
rst $38          ; rst $38          | 0426DF 0426A7 || 0426DF FF FF       6466            DW 0FFFFH
rst $38          ;                  | 0426E0        || rst $38                        ; 0426A8
ld a,a           ; ld a,a           | 0426E1 0426A9 || 0426E1 7F          6467            DB 7FH
nop              ; nop              | 0426E2 0426AA || 0426E2 00 00       6468            DW 0               ;a(0)
nop              ;                  | 0426E3        || nop                            ; 0426AB
nop              ; nop              | 0426E4 0426AC || 0426E4 00 00       6469            DW 0
nop              ;                  | 0426E5        || nop                            ; 0426AD
add a,b          ; add a,b          | 0426E6 0426AE || 0426E6 80          6470            DB 80H
call $042cf4     ; call $042cbc     | 0426E7 0426AF || 0426E7 CD F4 2C 04 6471            CALL    POP5
pop af           ; pop af           | 0426EB 0426B3 || 0426EB F1          6472            POP     AF
push af          ; push af          | 0426EC 0426B4 || 0426EC F5          6473            PUSH    AF
call p,$042712   ; call p,$0426da   | 0426ED 0426B5 || 0426ED F4 12 27 04 6474            CALL    P,RECIP         ;X=1/X
pop af           ; pop af           | 0426F1 0426B9 || 0426F1 F1          6475            POP     AF
jp p,$0426fa     ; jp p,$0426c2     | 0426F2 0426BA || 0426F2 F2 FA 26 04 6476            JP      P,EXP4
and $7f          ; and $7f          | 0426F6 0426BE || 0426F6 E6 7F       6477            AND     7FH
neg              ; neg              | 0426F8 0426C0 || 0426F8 ED 44       6478            NEG
add a,$80        ; add a,$80        | 0426FA 0426C2 || 0426FA C6 80       6479  EXP4:   ADD     A,80H
add a,c          ; add a,c          | 0426FC 0426C4 || 0426FC 81          6480            ADD     A,C
jr c,$+$08       ; jr c,$+$08       | 0426FD 0426C5 || 0426FD 38 06       6481            JR      C,EXP2
jp p,$042c5b     ; jp p,$042c23     | 0426FF 0426C7 || 0426FF F2 5B 2C 04 6482            JP      P,ZERO_FP          ;UNDERFLOW
jr $+$06         ; jr $+$06         | 042703 0426CB || 042703 18 04       6483            JR      EXP3
jp m,$042c26     ; jp m,$042bee     | 042705 0426CD || 042705 FA 26 2C 04 6484  EXP2:   JP      M,OFLOW         ;OVERFLOW
add a,$80        ; add a,$80        | 042709 0426D1 || 042709 C6 80       6485  EXP3:   ADD     A,80H
jp z,$042c5b     ; jp z,$042c23     | 04270B 0426D3 || 04270B CA 5B 2C 04 6486            JP      Z,ZERO_FP
ld c,a           ; ld c,a           | 04270F 0426D7 || 04270F 4F          6487            LD      C,A
xor a            ; xor a            | 042710 0426D8 || 042710 AF          6488            XOR     A               ;NUMERIC MARKER
ret              ; ret              | 042711 0426D9 || 042711 C9          6489            RET
call $042673     ; call $04263b     | 042712 0426DA || 042712 CD 73 26 04 6491  RECIP:   CALL    DONE
call $042c0f     ; call $042bd7     | 042716 0426DE || 042716 CD 0F 2C 04 6492  RDIV:   CALL    SWAP_FP
jp $04229d       ; jp $042265       | 04271A 0426E2 || 04271A C3 9D 22 04 6493            JP      FDIV            ;RECIPROCAL
ld de,$003172    ; ld de,$003172    | 04271E 0426E6 || 04271E 11 72 31 00 6495  LN2:   LD      DE,3172H        ;LN(2)
exx              ; exx              | 042722 0426EA || 042722 D9          6496            EXX
ld de,$0017f8    ; ld de,$0017f8    | 042723 0426EB || 042723 11 F8 17 00 6497            LD      DE,17F8H
exx              ; exx              | 042727 0426EF || 042727 D9          6498            EXX
ld b,$7f         ; ld b,$7f         | 042728 0426F0 || 042728 06 7F       6499            LD      B,7FH
ret              ; ret              | 04272A 0426F2 || 04272A C9          6500            RET
call $042bde     ; call $042ba6     | 04272B 0426F3 || 04272B CD DE 2B 04 6505  LN_FP:   CALL    SFLOAT_FP
ld a,$16         ; ld a,$16         | 04272F 0426F7 || 04272F 3E 16       6506  LN0:   LD      A,LOGRNG
bit 7,h          ; bit 7,h          | 042731 0426F9 || 042731 CB 7C       6507            BIT     7,H
jp nz,$0420b5    ; jp nz,$04207d    | 042733 0426FB || 042733 C2 B5 20 04 6508            JP      NZ,ERROR_FP_        ;"Log range"
inc c            ; inc c            | 042737 0426FF || 042737 0C          6509            INC     C
dec c            ; dec c            | 042738 042700 || 042738 0D          6510            DEC     C
jp z,$0420b5     ; jp z,$04207d     | 042739 042701 || 042739 CA B5 20 04 6511            JP      Z,ERROR_FP_
ld de,$003504    ; ld de,$003504    | 04273D 042705 || 04273D 11 04 35 00 6512            LD      DE,3504H        ;SQR(2)
exx              ; exx              | 042741 042709 || 042741 D9          6513            EXX
ld de,$00f333    ; ld de,$00f333    | 042742 04270A || 042742 11 33 F3 00 6514            LD      DE,0F333H       ;1.41421356237
exx              ; exx              | 042746 04270E || 042746 D9          6515            EXX
call $042c6e     ; call $042c36     | 042747 04270F || 042747 CD 6E 2C 04 6516            CALL    ICP0            ;MANTISSA>SQR(2)?
ld a,c           ; ld a,c           | 04274B 042713 || 04274B 79          6517            LD      A,C             ;EXPONENT
ld c,$80         ; ld c,$80         | 04274C 042714 || 04274C 0E 80       6518            LD      C,80H           ;1 <= X < 2
jr c,$+$04       ; jr c,$+$04       | 04274E 042716 || 04274E 38 02       6519            JR      C,LN4
dec c            ; dec c            | 042750 042718 || 042750 0D          6520            DEC     C
inc a            ; inc a            | 042751 042719 || 042751 3C          6521            INC     A
push af          ; push af          | 042752 04271A || 042752 F5          6522  LN4:   PUSH    AF              ;SAVE EXPONENT
call $042d00     ; call $042cc8     | 042753 04271B || 042753 CD 00 2D 04 6523            CALL    RATIO           ;X=(X-1)/(X+1)
call $042ceb     ; call $042cb3     | 042757 04271F || 042757 CD EB 2C 04 6524            CALL    PUSH5
call $042ce3     ; call $042cab     | 04275B 042723 || 04275B CD E3 2C 04 6525            CALL    SQUARE          ;PUSH X*X
call $042d28     ; call $042cf0     | 04275F 042727 || 04275F CD 28 2D 04 6526            CALL    POLY
ld c,b           ; ld c,b           | 042763 04272B || 042763 48 CC       6527            DW 0CC48H          ;a(9)
call z,$7d74fb   ;                  | 042764        || call z,$7d74fb                 ; 04272C
xor a            ; xor a            | 042768 042730 || 042768 AF AE       6530            DW 0AEAFH          ;a(7)
xor (hl)         ;                  | 042769        || xor (hl)                       ; 042731
rst $38          ; rst $38          | 04276A 042732 || 04276A FF 11       6531            DW 11FFH
ld de,$d98c7e    ;                  | 04276B        || ld de,$d98c7e                  ; 042733
call $e37e4c     ; call $e37e4c     | 04276F 042737 || 04276F CD 4C       6534            DW 4CCDH
xor c            ;                  | 042773        || xor c                          ; 04273B
xor d            ; xor d            | 042774 04273C || 042774 AA 2A       6537            DW 2AAAH
ld hl,($00007f)  ;                  | 042775        || ld hl,($00007f)                ; 04273D
nop              ; nop              | 042779 042741 || 042779 00 00       6540            DW 0
nop              ;                  | 04277A        || nop                            ; 042742
add a,c          ; add a,c          | 04277B 042743 || 04277B 81          6541            DB 81H
call $042cf4     ; call $042cbc     | 04277C 042744 || 04277C CD F4 2C 04 6542            CALL    POP5
call $042cf4     ; call $042cbc     | 042780 042748 || 042780 CD F4 2C 04 6543            CALL    POP5
call $042346     ; call $04230e     | 042784 04274C || 042784 CD 46 23 04 6544            CALL    FMUL
pop af           ; pop af           | 042788 042750 || 042788 F1          6545            POP     AF              ;EXPONENT
call $042ceb     ; call $042cb3     | 042789 042751 || 042789 CD EB 2C 04 6546            CALL    PUSH5
ex af,af'        ; ex af,af'        | 04278D 042755 || 04278D 08          6547            EX      AF,AF'
call $042c5b     ; call $042c23     | 04278E 042756 || 04278E CD 5B 2C 04 6548            CALL    ZERO_FP
ex af,af'        ; ex af,af'        | 042792 04275A || 042792 08          6549            EX      AF,AF'
sub $80          ; sub $80          | 042793 04275B || 042793 D6 80       6550            SUB     80H
jr z,$+$21       ; jr z,$+$21       | 042795 04275D || 042795 28 1F       6551            JR      Z,LN3
jr nc,$+$04      ; jr nc,$+$04      | 042797 04275F || 042797 30 02       6552            JR      NC,LN1
cpl              ; cpl              | 042799 042761 || 042799 2F          6553            CPL
inc a            ; inc a            | 04279A 042762 || 04279A 3C          6554            INC     A
ld h,a           ; ld h,a           | 04279B 042763 || 04279B 67          6555  LN1:   LD      H,A
ld c,$87         ; ld c,$87         | 04279C 042764 || 04279C 0E 87       6556            LD      C,87H
push af          ; push af          | 04279E 042766 || 04279E F5          6557            PUSH    AF
call $042bbe     ; call $042b86     | 04279F 042767 || 04279F CD BE 2B 04 6558            CALL    FLOAT_
res 7,h          ; res 7,h          | 0427A3 04276B || 0427A3 CB BC       6559            RES     7,H
call $04271e     ; call $0426e6     | 0427A5 04276D || 0427A5 CD 1E 27 04 6560            CALL    LN2
call $042346     ; call $04230e     | 0427A9 042771 || 0427A9 CD 46 23 04 6561            CALL    FMUL
pop af           ; pop af           | 0427AD 042775 || 0427AD F1          6562            POP     AF
jr nc,$+$08      ; jr nc,$+$08      | 0427AE 042776 || 0427AE 30 06       6563            JR      NC,LN3
jp m,$0427b6     ; jp m,$04277e     | 0427B0 042778 || 0427B0 FA B6 27 04 6564            JP      M,LN3
set 7,h          ; set 7,h          | 0427B4 04277C || 0427B4 CB FC       6565            SET     7,H
call $042cf4     ; call $042cbc     | 0427B6 04277E || 0427B6 CD F4 2C 04 6566  LN3:   CALL    POP5
call $042234     ; call $0421fc     | 0427BA 042782 || 0427BA CD 34 22 04 6567            CALL    FADD
xor a            ; xor a            | 0427BE 042786 || 0427BE AF          6568            XOR     A
ret              ; ret              | 0427BF 042787 || 0427BF C9          6569            RET
call $04272b     ; call $0426f3     | 0427C0 042788 || 0427C0 CD 2B 27 04 6574  LOG_FP:   CALL    LN_FP
ld de,$005e5b    ; ld de,$005e5b    | 0427C4 04278C || 0427C4 11 5B 5E 00 6575            LD      DE,5E5BH        ;LOG(e)
exx              ; exx              | 0427C8 042790 || 0427C8 D9          6576            EXX
ld de,$00d8a9    ; ld de,$00d8a9    | 0427C9 042791 || 0427C9 11 A9 D8 00 6577            LD      DE,0D8A9H
exx              ; exx              | 0427CD 042795 || 0427CD D9          6578            EXX
ld b,$7e         ; ld b,$7e         | 0427CE 042796 || 0427CE 06 7E       6579            LD      B,7EH
call $042346     ; call $04230e     | 0427D0 042798 || 0427D0 CD 46 23 04 6580            CALL    FMUL
xor a            ; xor a            | 0427D4 04279C || 0427D4 AF          6581            XOR     A
ret              ; ret              | 0427D5 04279D || 0427D5 C9          6582            RET
call $042bde     ; call $042ba6     | 0427D6 04279E || 0427D6 CD DE 2B 04 6587  ASN_FP:   CALL    SFLOAT_FP
call $042ceb     ; call $042cb3     | 0427DA 0427A2 || 0427DA CD EB 2C 04 6588            CALL    PUSH5
call $042cdb     ; call $042ca3     | 0427DE 0427A6 || 0427DE CD DB 2C 04 6589            CALL    COPY_
call $042346     ; call $04230e     | 0427E2 0427AA || 0427E2 CD 46 23 04 6590            CALL    FMUL
call $042673     ; call $04263b     | 0427E6 0427AE || 0427E6 CD 73 26 04 6591            CALL    DONE
call $042221     ; call $0421e9     | 0427EA 0427B2 || 0427EA CD 21 22 04 6592            CALL    RSUB
call $042551     ; call $042519     | 0427EE 0427B6 || 0427EE CD 51 25 04 6593            CALL    SQR0
call $042cf4     ; call $042cbc     | 0427F2 0427BA || 0427F2 CD F4 2C 04 6594            CALL    POP5
inc c            ; inc c            | 0427F6 0427BE || 0427F6 0C          6595            INC     C
dec c            ; dec c            | 0427F7 0427BF || 0427F7 0D          6596            DEC     C
ld a,$02         ; ld a,$02         | 0427F8 0427C0 || 0427F8 3E 02       6597            LD      A,2
push de          ; push de          | 0427FA 0427C2 || 0427FA D5          6598            PUSH    DE
jp z,$042880     ; jp z,$042848     | 0427FB 0427C3 || 0427FB CA 80 28 04 6599            JP      Z,ACS1
pop de           ; pop de           | 0427FF 0427C7 || 0427FF D1          6600            POP     DE
call $042716     ; call $0426de     | 042800 0427C8 || 042800 CD 16 27 04 6601            CALL    RDIV
jr $+$06         ; jr $+$06         | 042804 0427CC || 042804 18 04       6602            JR      ATN0
call $042bde     ; call $042ba6     | 042806 0427CE || 042806 CD DE 2B 04 6607  ATN_FP:   CALL    SFLOAT_FP
push hl          ; push hl          | 04280A 0427D2 || 04280A E5          6608  ATN0:   PUSH    HL              ;SAVE SIGN
res 7,h          ; res 7,h          | 04280B 0427D3 || 04280B CB BC       6609            RES     7,H
ld de,$005413    ; ld de,$005413    | 04280D 0427D5 || 04280D 11 13 54 00 6610            LD      DE,5413H        ;TAN(PI/8)=SQR(2)-1
exx              ; exx              | 042811 0427D9 || 042811 D9          6611            EXX
ld de,$00ccd0    ; ld de,$00ccd0    | 042812 0427DA || 042812 11 D0 CC 00 6612            LD      DE,0CCD0H
exx              ; exx              | 042816 0427DE || 042816 D9          6613            EXX
ld b,$7e         ; ld b,$7e         | 042817 0427DF || 042817 06 7E       6614            LD      B,7EH
call $042c6b     ; call $042c33     | 042819 0427E1 || 042819 CD 6B 2C 04 6615            CALL    FCP0            ;COMPARE
ld b,$00         ; ld b,$00         | 04281D 0427E5 || 04281D 06 00       6616            LD      B,0
jr c,$+$24       ; jr c,$+$24       | 04281F 0427E7 || 04281F 38 22       6617            JR      C,ATN2
ld de,$001a82    ; ld de,$001a82    | 042821 0427E9 || 042821 11 82 1A 00 6618            LD      DE,1A82H        ;TAN(3*PI/8)=SQR(2)+1
exx              ; exx              | 042825 0427ED || 042825 D9          6619            EXX
ld de,$00799a    ; ld de,$00799a    | 042826 0427EE || 042826 11 9A 79 00 6620            LD      DE,799AH
exx              ; exx              | 04282A 0427F2 || 04282A D9          6621            EXX
ld b,$81         ; ld b,$81         | 04282B 0427F3 || 04282B 06 81       6622            LD      B,81H
call $042c6b     ; call $042c33     | 04282D 0427F5 || 04282D CD 6B 2C 04 6623            CALL    FCP0            ;COMPARE
jr c,$+$0c       ; jr c,$+$0c       | 042831 0427F9 || 042831 38 0A       6624            JR      C,ATN1
call $042712     ; call $0426da     | 042833 0427FB || 042833 CD 12 27 04 6625            CALL    RECIP           ;X=1/X
ld b,$02         ; ld b,$02         | 042837 0427FF || 042837 06 02       6626            LD      B,2
jp $042843       ; jp $04280b       | 042839 042801 || 042839 C3 43 28 04 6627            JP      ATN2
call $042d00     ; call $042cc8     | 04283D 042805 || 04283D CD 00 2D 04 6628  ATN1:   CALL    RATIO           ;X=(X-1)/(X+1)
ld b,$01         ; ld b,$01         | 042841 042809 || 042841 06 01       6629            LD      B,1
push bc          ; push bc          | 042843 04280B || 042843 C5          6630  ATN2:   PUSH    BC              ;SAVE FLAG
call $042ceb     ; call $042cb3     | 042844 04280C || 042844 CD EB 2C 04 6631            CALL    PUSH5
call $042ce3     ; call $042cab     | 042848 042810 || 042848 CD E3 2C 04 6632            CALL    SQUARE          ;PUSH X*X
call $042d28     ; call $042cf0     | 04284C 042814 || 04284C CD 28 2D 04 6633            CALL    POLY
dec (hl)         ; dec (hl)         | 042850 042818 || 042850 35 F3       6634            DW 0F335H          ;a(13)
di               ;                  | 042851        || di                             ; 042819
ret c            ; ret c            | 042852 04281A || 042852 D8 37       6635            DW 37D8H
scf              ;                  | 042853        || scf                            ; 04281B
ld a,e           ; ld a,e           | 042854 04281C || 042854 7B          6636            DB 7BH
sub c            ; sub c            | 042855 04281D || 042855 91 6B       6637            DW 6B91H           ;a(11)
ld l,e           ;                  | 042856        || ld l,e                         ; 04281E
cp c             ; cp c             | 042857 04281F || 042857 B9 AA       6638            DW 0AAB9H
xor d            ;                  | 042858        || xor d                          ; 042820
ld a,h           ; ld a,h           | 042859 042821 || 042859 7C          6639            DB 7CH
sbc a,$41        ; sbc a,$41        | 04285A 042822 || 04285A DE 41       6640            DW 41DEH           ;a(9)
sub a            ; sub a            | 04285C 042824 || 04285C 97 61       6641            DW 6197H
ld h,c           ;                  | 04285D        || ld h,c                         ; 042825
ld a,h           ; ld a,h           | 04285E 042826 || 04285E 7C          6642            DB 7CH
ld a,e           ; ld a,e           | 04285F 042827 || 04285F 7B 9D       6643            DW 9D7BH           ;a(7)
sbc a,l          ;                  | 042860        || sbc a,l                        ; 042828
scf              ; scf              | 042861 042829 || 042861 37 92       6644            DW 9237H
sub d            ;                  | 042862        || sub d                          ; 04282A
ld a,l           ; ld a,l           | 042863 04282B || 042863 7D          6645            DB 7DH
ld e,d           ; ld e,d           | 042864 04282C || 042864 5A 2A       6646            DW 2A5AH           ;a(5)
ld hl,($7d4ccc)  ;                  | 042865        || ld hl,($7d4ccc)                ; 04282D
ld e,h           ; ld e,h           | 042869 042831 || 042869 5C A9       6649            DW 0A95CH          ;a(3)
xor c            ;                  | 04286A        || xor c                          ; 042832
xor d            ; xor d            | 04286B 042833 || 04286B AA AA       6650            DW 0AAAAH
xor d            ;                  | 04286C        || xor d                          ; 042834
ld a,(hl)        ; ld a,(hl)        | 04286D 042835 || 04286D 7E          6651            DB 7EH
nop              ; nop              | 04286E 042836 || 04286E 00 00       6652            DW 0               ;a(1)
nop              ;                  | 04286F        || nop                            ; 042837
nop              ; nop              | 042870 042838 || 042870 00 00       6653            DW 0
nop              ;                  | 042871        || nop                            ; 042839
add a,b          ; add a,b          | 042872 04283A || 042872 80          6654            DB 80H
call $042cf4     ; call $042cbc     | 042873 04283B || 042873 CD F4 2C 04 6655            CALL    POP5
call $042cf4     ; call $042cbc     | 042877 04283F || 042877 CD F4 2C 04 6656            CALL    POP5
call $042346     ; call $04230e     | 04287B 042843 || 04287B CD 46 23 04 6657            CALL    FMUL
pop af           ; pop af           | 04287F 042847 || 04287F F1          6658            POP     AF
call $042680     ; call $042648     | 042880 042848 || 042880 CD 80 26 04 6659  ACS1:   CALL    PIBY4           ;PI/4
rra              ; rra              | 042884 04284C || 042884 1F          6660            RRA
push af          ; push af          | 042885 04284D || 042885 F5          6661            PUSH    AF
call c,$042234   ; call c,$0421fc   | 042886 04284E || 042886 DC 34 22 04 6662            CALL    C,FADD
pop af           ; pop af           | 04288A 042852 || 04288A F1          6663            POP     AF
inc b            ; inc b            | 04288B 042853 || 04288B 04          6664            INC     B
rra              ; rra              | 04288C 042854 || 04288C 1F          6665            RRA
call c,$042221   ; call c,$0421e9   | 04288D 042855 || 04288D DC 21 22 04 6666            CALL    C,RSUB
pop af           ; pop af           | 042891 042859 || 042891 F1          6667            POP     AF
or a             ; or a             | 042892 04285A || 042892 B7          6668            OR      A
ret p            ; ret p            | 042893 04285B || 042893 F0          6669            RET     P
set 7,h          ; set 7,h          | 042894 04285C || 042894 CB FC       6670            SET     7,H             ;MAKE NEGATIVE
xor a            ; xor a            | 042896 04285E || 042896 AF          6671            XOR     A
ret              ; ret              | 042897 04285F || 042897 C9          6672            RET
call $0427d6     ; call $04279e     | 042898 042860 || 042898 CD D6 27 04 6677  ACS_FP:   CALL    ASN_FP
ld a,$02         ; ld a,$02         | 04289C 042864 || 04289C 3E 02       6678            LD      A,2
push af          ; push af          | 04289E 042866 || 04289E F5          6679            PUSH    AF
jr $-$1f         ; jr $-$1f         | 04289F 042867 || 04289F 18 DF       6680            JR      ACS1
call $042bde     ; call $042ba6     | 0428A1 042869 || 0428A1 CD DE 2B 04 6690  STR_FP:   CALL    SFLOAT_FP
ld b,$00         ; ld b,$00         | 0428A5 04286D || 0428A5 06 00       6691            LD      B,0             ;DEFAULT PT. POSITION
bit 7,h          ; bit 7,h          | 0428A7 04286F || 0428A7 CB 7C       6692            BIT     7,H             ;NEGATIVE?
jr z,$+$08       ; jr z,$+$08       | 0428A9 042871 || 0428A9 28 06       6693            JR      Z,STR10
res 7,h          ; res 7,h          | 0428AB 042873 || 0428AB CB BC       6694            RES     7,H
ld a,$2d         ; ld a,$2d         | 0428AD 042875 || 0428AD 3E 2D       6695            LD      A,'-'
ld (de),a        ; ld (de),a        | 0428AF 042877 || 0428AF 12          6696            LD      (DE),A          ;STORE SIGN
inc de           ; inc de           | 0428B0 042878 || 0428B0 13          6697            INC     DE
xor a            ; xor a            | 0428B1 042879 || 0428B1 AF          6698  STR10:   XOR     A               ;CLEAR A
cp c             ; cp c             | 0428B2 04287A || 0428B2 B9          6699            CP      C
jr z,$+$50       ; jr z,$+$50       | 0428B3 04287B || 0428B3 28 4E       6700            JR      Z,STR02          ;ZERO
push de          ; push de          | 0428B5 04287D || 0428B5 D5          6701            PUSH    DE              ;SAVE TEXT POINTER
ld a,b           ; ld a,b           | 0428B6 04287E || 0428B6 78          6702            LD      A,B
push af          ; push af          | 0428B7 04287F || 0428B7 F5          6703  STR11:   PUSH    AF              ;SAVE DECIMAL COUNTER
ld a,c           ; ld a,c           | 0428B8 042880 || 0428B8 79          6704            LD      A,C             ;BINARY EXPONENT
cp $a1           ; cp $a1           | 0428B9 042881 || 0428B9 FE A1       6705            CP      161
jr nc,$+$1e      ; jr nc,$+$1e      | 0428BB 042883 || 0428BB 30 1C       6706            JR      NC,STR14
cp $9b           ; cp $9b           | 0428BD 042885 || 0428BD FE 9B       6707            CP      155
jr nc,$+$2b      ; jr nc,$+$2b      | 0428BF 042887 || 0428BF 30 29       6708            JR      NC,STR15
cpl              ; cpl              | 0428C1 042889 || 0428C1 2F          6709            CPL
cp $e1           ; cp $e1           | 0428C2 04288A || 0428C2 FE E1       6710            CP      225
jr c,$+$04       ; jr c,$+$04       | 0428C4 04288C || 0428C4 38 02       6711            JR      C,STR13
ld a,$f8         ; ld a,$f8         | 0428C6 04288E || 0428C6 3E F8       6712            LD      A,-8
add a,$1c        ; add a,$1c        | 0428C8 042890 || 0428C8 C6 1C       6713  STR13:   ADD     A,28
call $042d57     ; call $042d1f     | 0428CA 042892 || 0428CA CD 57 2D 04 6714            CALL    POWR10
push af          ; push af          | 0428CE 042896 || 0428CE F5          6715            PUSH    AF
call $042346     ; call $04230e     | 0428CF 042897 || 0428CF CD 46 23 04 6716            CALL    FMUL
pop af           ; pop af           | 0428D3 04289B || 0428D3 F1          6717            POP     AF
ld b,a           ; ld b,a           | 0428D4 04289C || 0428D4 47          6718            LD      B,A
pop af           ; pop af           | 0428D5 04289D || 0428D5 F1          6719            POP     AF
sub b            ; sub b            | 0428D6 04289E || 0428D6 90          6720            SUB     B
jr $-$20         ; jr $-$20         | 0428D7 04289F || 0428D7 18 DE       6721            JR      STR11
sub $20          ; sub $20          | 0428D9 0428A1 || 0428D9 D6 20       6722  STR14:   SUB     32
call $042d57     ; call $042d1f     | 0428DB 0428A3 || 0428DB CD 57 2D 04 6723            CALL    POWR10
push af          ; push af          | 0428DF 0428A7 || 0428DF F5          6724            PUSH    AF
call $04229d     ; call $042265     | 0428E0 0428A8 || 0428E0 CD 9D 22 04 6725            CALL    FDIV
pop af           ; pop af           | 0428E4 0428AC || 0428E4 F1          6726            POP     AF
ld b,a           ; ld b,a           | 0428E5 0428AD || 0428E5 47          6727            LD      B,A
pop af           ; pop af           | 0428E6 0428AE || 0428E6 F1          6728            POP     AF
add a,b          ; add a,b          | 0428E7 0428AF || 0428E7 80          6729            ADD     A,B
jr $-$31         ; jr $-$31         | 0428E8 0428B0 || 0428E8 18 CD       6730            JR      STR11
ld a,$09         ; ld a,$09         | 0428EA 0428B2 || 0428EA 3E 09       6731  STR15:   LD      A,9
call $042d57     ; call $042d1f     | 0428EC 0428B4 || 0428EC CD 57 2D 04 6732            CALL    POWR10          ;10^9
call $042c6b     ; call $042c33     | 0428F0 0428B8 || 0428F0 CD 6B 2C 04 6733            CALL    FCP0
ld a,c           ; ld a,c           | 0428F4 0428BC || 0428F4 79          6734            LD      A,C
pop bc           ; pop bc           | 0428F5 0428BD || 0428F5 C1          6735            POP     BC
ld c,a           ; ld c,a           | 0428F6 0428BE || 0428F6 4F          6736            LD      C,A
set 7,h          ; set 7,h          | 0428F7 0428BF || 0428F7 CB FC       6737            SET     7,H             ;IMPLIED 1
call c,$042c93   ; call c,$042c5b   | 0428F9 0428C1 || 0428F9 DC 93 2C 04 6738            CALL    C,X10B          ;X10, DEC B
pop de           ; pop de           | 0428FD 0428C5 || 0428FD D1          6739            POP     DE              ;RESTORE TEXT POINTER
res 7,c          ; res 7,c          | 0428FE 0428C6 || 0428FE CB B9       6740            RES     7,C
ld a,$00         ; ld a,$00         | 042900 0428C8 || 042900 3E 00       6741            LD      A,0
rla              ; rla              | 042902 0428CA || 042902 17          6742            RLA                     ;PUT CARRY IN LSB
inc c            ; inc c            | 042903 0428CB || 042903 0C          6750  STR02:   INC     C
ex af,af'        ; ex af,af'        | 042904 0428CC || 042904 08          6751            EX      AF,AF'          ;SAVE A
ld a,b           ; ld a,b           | 042905 0428CD || 042905 78          6752            LD      A,B
bit 1,(ix+$02)   ; bit 1,(ix+$02)   | 042906 0428CE || 042906 DD CB 02 4E 6753            BIT     1,(IX+2)
jr nz,$+$0a      ; jr nz,$+$0a      | 04290A 0428D2 || 04290A 20 08       6754            JR      NZ,STR20
xor a            ; xor a            | 04290C 0428D4 || 04290C AF          6755            XOR     A
cp (ix+$01)      ; cp (ix+$01)      | 04290D 0428D5 || 04290D DD BE 01    6756            CP      (IX+1)
jr z,$+$0d       ; jr z,$+$0d       | 042910 0428D8 || 042910 28 0B       6757            JR      Z,STR21
ld a,$f6         ; ld a,$f6         | 042912 0428DA || 042912 3E F6       6758            LD      A,-10
add a,(ix+$01)   ; add a,(ix+$01)   | 042914 0428DC || 042914 DD 86 01    6759  STR20:   ADD     A,(IX+1)        ;SIG. FIG. COUNT
or a             ; or a             | 042917 0428DF || 042917 B7          6760            OR      A               ;CLEAR CARRY
jp m,$04291d     ; jp m,$0428e5     | 042918 0428E0 || 042918 FA 1D 29 04 6761            JP      M,STR21
xor a            ; xor a            | 04291C 0428E4 || 04291C AF          6762            XOR     A
push af          ; push af          | 04291D 0428E5 || 04291D F5          6763  STR21:   PUSH    AF
ex af,af'        ; ex af,af'        | 04291E 0428E6 || 04291E 08          6764            EX      AF,AF'          ;RESTORE A
call $042cc7     ; call $042c8f     | 04291F 0428E7 || 04291F CD C7 2C 04 6765  STR22:   CALL    X2              ;RL AHLH'L'
adc a,a          ; adc a,a          | 042923 0428EB || 042923 8F          6766            ADC     A,A
cp $0a           ; cp $0a           | 042924 0428EC || 042924 FE 0A       6767            CP      10
jr c,$+$07       ; jr c,$+$07       | 042926 0428EE || 042926 38 05       6768            JR      C,STR23
sub $0a          ; sub $0a          | 042928 0428F0 || 042928 D6 0A       6769            SUB     10
exx              ; exx              | 04292A 0428F2 || 04292A D9          6770            EXX
inc l            ; inc l            | 04292B 0428F3 || 04292B 2C          6771            INC     L               ;SET RESULT BIT
exx              ; exx              | 04292C 0428F4 || 04292C D9          6772            EXX
dec c            ; dec c            | 04292D 0428F5 || 04292D 0D          6773  STR23:   DEC     C
jr nz,$-$0f      ; jr nz,$-$0f      | 04292E 0428F6 || 04292E 20 EF       6774            JR      NZ,STR22        ;32 TIMES
ld c,a           ; ld c,a           | 042930 0428F8 || 042930 4F          6775            LD      C,A             ;REMAINDER
ld a,h           ; ld a,h           | 042931 0428F9 || 042931 7C          6776            LD      A,H
and $3f          ; and $3f          | 042932 0428FA || 042932 E6 3F       6777            AND     3FH             ;CLEAR OUT JUNK
ld h,a           ; ld h,a           | 042934 0428FC || 042934 67          6778            LD      H,A
pop af           ; pop af           | 042935 0428FD || 042935 F1          6779            POP     AF
jp p,$042944     ; jp p,$04290c     | 042936 0428FE || 042936 F2 44 29 04 6780            JP      P,STR24
inc a            ; inc a            | 04293A 042902 || 04293A 3C          6781            INC     A
jr nz,$+$1e      ; jr nz,$+$1e      | 04293B 042903 || 04293B 20 1C       6782            JR      NZ,STR26
ld a,$04         ; ld a,$04         | 04293D 042905 || 04293D 3E 04       6783            LD      A,4
cp c             ; cp c             | 04293F 042907 || 04293F B9          6784            CP      C               ;ROUND UP?
ld a,$00         ; ld a,$00         | 042940 042908 || 042940 3E 00       6785            LD      A,0
jr $+$17         ; jr $+$17         | 042942 04290A || 042942 18 15       6786            JR      STR26
push af          ; push af          | 042944 04290C || 042944 F5          6787  STR24:   PUSH    AF
ld a,c           ; ld a,c           | 042945 04290D || 042945 79          6788            LD      A,C
adc a,$30        ; adc a,$30        | 042946 04290E || 042946 CE 30       6789            ADC     A,'0'           ;ADD CARRY
cp $30           ; cp $30           | 042948 042910 || 042948 FE 30       6790            CP      '0'
jr z,$+$07       ; jr z,$+$07       | 04294A 042912 || 04294A 28 05       6791            JR      Z,STR25         ;SUPPRESS ZERO
cp $3a           ; cp $3a           | 04294C 042914 || 04294C FE 3A       6792            CP      '9'+1
ccf              ; ccf              | 04294E 042916 || 04294E 3F          6793            CCF
jr nc,$+$0a      ; jr nc,$+$0a      | 04294F 042917 || 04294F 30 08       6794            JR      NC,STR26
ex (sp),hl       ; ex (sp),hl       | 042951 042919 || 042951 E3          6795  STR25:   EX      (SP),HL
bit 6,l          ; bit 6,l          | 042952 04291A || 042952 CB 75       6796            BIT     6,L             ;ZERO FLAG
ex (sp),hl       ; ex (sp),hl       | 042954 04291C || 042954 E3          6797            EX      (SP),HL
jr nz,$+$07      ; jr nz,$+$07      | 042955 04291D || 042955 20 05       6798            JR      NZ,STR27
ld a,$30         ; ld a,$30         | 042957 04291F || 042957 3E 30       6799            LD      A,'0'
inc a            ; inc a            | 042959 042921 || 042959 3C          6800  STR26:   INC     A               ;SET +VE
dec a            ; dec a            | 04295A 042922 || 04295A 3D          6801            DEC     A
push af          ; push af          | 04295B 042923 || 04295B F5          6802            PUSH    AF              ;PUT ON STACK + CARRY
inc b            ; inc b            | 04295C 042924 || 04295C 04          6803  STR27:   INC     B
call $042c37     ; call $042bff     | 04295D 042925 || 04295D CD 37 2C 04 6804            CALL    TEST_FP            ;IS HLH'L' ZERO?
ld c,$20         ; ld c,$20         | 042961 042929 || 042961 0E 20       6805            LD      C,32
ld a,$00         ; ld a,$00         | 042963 04292B || 042963 3E 00       6806            LD      A,0
jr nz,$-$46      ; jr nz,$-$46      | 042965 04292D || 042965 20 B8       6807            JR      NZ,STR22
pop af           ; pop af           | 042967 04292F || 042967 F1          6808            POP     AF
push af          ; push af          | 042968 042930 || 042968 F5          6809            PUSH    AF
ld a,$00         ; ld a,$00         | 042969 042931 || 042969 3E 00       6810            LD      A,0
jr c,$-$4c       ; jr c,$-$4c       | 04296B 042933 || 04296B 38 B2       6811            JR      C,STR22
ex de,hl         ; ex de,hl         | 04296D 042935 || 04296D EB          6819  STR3:   EX      DE,HL           ;STRING POINTER
ld c,$ff         ; ld c,$ff         | 04296E 042936 || 04296E 0E FF       6820            LD      C,-1            ;FLAG "E"
ld d,$01         ; ld d,$01         | 042970 042938 || 042970 16 01       6821            LD      D,1
ld e,(ix+$01)    ; ld e,(ix+$01)    | 042972 04293A || 042972 DD 5E 01    6822            LD      E,(IX+1)        ;f2
bit 0,(ix+$02)   ; bit 0,(ix+$02)   | 042975 04293D || 042975 DD CB 02 46 6823            BIT     0,(IX+2)
jr nz,$+$37      ; jr nz,$+$37      | 042979 042941 || 042979 20 35       6824            JR      NZ,STR34        ;E MODE
bit 1,(ix+$02)   ; bit 1,(ix+$02)   | 04297B 042943 || 04297B DD CB 02 4E 6825            BIT     1,(IX+2)
jr z,$+$14       ; jr z,$+$14       | 04297F 042947 || 04297F 28 12       6826            JR      Z,STR31
ld a,b           ; ld a,b           | 042981 042949 || 042981 78          6827            LD      A,B             ;F MODE
or a             ; or a             | 042982 04294A || 042982 B7          6828            OR      A
jr z,$+$07       ; jr z,$+$07       | 042983 04294B || 042983 28 05       6829            JR      Z,STR30
jp m,$04298a     ; jp m,$042952     | 042985 04294D || 042985 FA 8A 29 04 6830            JP      M,STR30
ld d,b           ; ld d,b           | 042989 042951 || 042989 50          6831            LD      D,B
ld a,d           ; ld a,d           | 04298A 042952 || 04298A 7A          6832  STR30:   LD      A,D
add a,(ix+$01)   ; add a,(ix+$01)   | 04298B 042953 || 04298B DD 86 01    6833            ADD     A,(IX+1)
ld e,a           ; ld e,a           | 04298E 042956 || 04298E 5F          6834            LD      E,A
cp $0b           ; cp $0b           | 04298F 042957 || 04298F FE 0B       6835            CP      11
jr c,$+$1b       ; jr c,$+$1b       | 042991 042959 || 042991 38 19       6836            JR      C,STR32
ld a,b           ; ld a,b           | 042993 04295B || 042993 78          6837  STR31:   LD      A,B             ;G MODE
ld de,$000101    ; ld de,$000101    | 042994 04295C || 042994 11 01 01 00 6838            LD      DE,101H
or a             ; or a             | 042998 042960 || 042998 B7          6839            OR      A
jp m,$0429b0     ; jp m,$042978     | 042999 042961 || 042999 FA B0 29 04 6840            JP      M,STR34
jr z,$+$0f       ; jr z,$+$0f       | 04299D 042965 || 04299D 28 0D       6841            JR      Z,STR32
ld a,(ix+$01)    ; ld a,(ix+$01)    | 04299F 042967 || 04299F DD 7E 01    6842            LD      A,(IX+1)
or a             ; or a             | 0429A2 04296A || 0429A2 B7          6843            OR      A
jr nz,$+$04      ; jr nz,$+$04      | 0429A3 04296B || 0429A3 20 02       6844            JR      NZ,STR3A
ld a,$0a         ; ld a,$0a         | 0429A5 04296D || 0429A5 3E 0A       6845            LD      A,10
cp b             ; cp b             | 0429A7 04296F || 0429A7 B8          6846  STR3A:   CP      B
jr c,$+$08       ; jr c,$+$08       | 0429A8 042970 || 0429A8 38 06       6847            JR      C,STR34
ld d,b           ; ld d,b           | 0429AA 042972 || 0429AA 50          6848            LD      D,B
ld e,b           ; ld e,b           | 0429AB 042973 || 0429AB 58          6849            LD      E,B
ld a,b           ; ld a,b           | 0429AC 042974 || 0429AC 78          6850  STR32:   LD      A,B
add a,$81        ; add a,$81        | 0429AD 042975 || 0429AD C6 81       6851            ADD     A,129
ld c,a           ; ld c,a           | 0429AF 042977 || 0429AF 4F          6852            LD      C,A
set 7,d          ; set 7,d          | 0429B0 042978 || 0429B0 CB FA       6853  STR34:   SET     7,D
dec e            ; dec e            | 0429B2 04297A || 0429B2 1D          6854            DEC     E
ld a,d           ; ld a,d           | 0429B3 04297B || 0429B3 7A          6855  STR35:   LD      A,D
cp c             ; cp c             | 0429B4 04297C || 0429B4 B9          6856            CP      C
jr nc,$+$10      ; jr nc,$+$10      | 0429B5 04297D || 0429B5 30 0E       6857            JR      NC,STR33
pop af           ; pop af           | 0429B7 04297F || 0429B7 F1          6858  STR36:   POP     AF
jr z,$+$06       ; jr z,$+$06       | 0429B8 042980 || 0429B8 28 04       6859            JR      Z,STR37
jp p,$0429c7     ; jp p,$04298f     | 0429BA 042982 || 0429BA F2 C7 29 04 6860            JP      P,STR38
push af          ; push af          | 0429BE 042986 || 0429BE F5          6861  STR37:   PUSH    AF
inc e            ; inc e            | 0429BF 042987 || 0429BF 1C          6862            INC     E
dec e            ; dec e            | 0429C0 042988 || 0429C0 1D          6863            DEC     E
jp m,$0429d8     ; jp m,$0429a0     | 0429C1 042989 || 0429C1 FA D8 29 04 6864            JP      M,STR4
ld a,$30         ; ld a,$30         | 0429C5 04298D || 0429C5 3E 30       6865  STR33:   LD      A,'0'
dec d            ; dec d            | 0429C7 04298F || 0429C7 15          6866  STR38:   DEC     D
jp po,$0429cf    ; jp po,$042997    | 0429C8 042990 || 0429C8 E2 CF 29 04 6867            JP      PO,STR39
ld (hl),$2e      ; ld (hl),$2e      | 0429CC 042994 || 0429CC 36 2E       6868            LD      (HL),'.'
inc hl           ; inc hl           | 0429CE 042996 || 0429CE 23          6869            INC     HL
ld (hl),a        ; ld (hl),a        | 0429CF 042997 || 0429CF 77          6870  STR39:   LD      (HL),A
inc hl           ; inc hl           | 0429D0 042998 || 0429D0 23          6871            INC     HL
dec e            ; dec e            | 0429D1 042999 || 0429D1 1D          6872            DEC     E
jp p,$0429b3     ; jp p,$04297b     | 0429D2 04299A || 0429D2 F2 B3 29 04 6873            JP      P,STR35
jr $-$1f         ; jr $-$1f         | 0429D6 04299E || 0429D6 18 DF       6874            JR      STR36
pop af           ; pop af           | 0429D8 0429A0 || 0429D8 F1          6876  STR4:   POP     AF
inc c            ; inc c            | 0429D9 0429A1 || 0429D9 0C          6877  STR40:   INC     C
ld c,l           ; ld c,l           | 0429DA 0429A2 || 0429DA 4D          6878            LD      C,L
jr nz,$+$2a      ; jr nz,$+$2a      | 0429DB 0429A3 || 0429DB 20 28       6879            JR      NZ,STR44
ld (hl),$45      ; ld (hl),$45      | 0429DD 0429A5 || 0429DD 36 45       6880            LD      (HL),'E'        ;EXPONENT
inc hl           ; inc hl           | 0429DF 0429A7 || 0429DF 23          6881            INC     HL
ld a,b           ; ld a,b           | 0429E0 0429A8 || 0429E0 78          6882            LD      A,B
dec a            ; dec a            | 0429E1 0429A9 || 0429E1 3D          6883            DEC     A
jp p,$0429eb     ; jp p,$0429b3     | 0429E2 0429AA || 0429E2 F2 EB 29 04 6884            JP      P,STR41
ld (hl),$2d      ; ld (hl),$2d      | 0429E6 0429AE || 0429E6 36 2D       6885            LD      (HL),'-'
inc hl           ; inc hl           | 0429E8 0429B0 || 0429E8 23          6886            INC     HL
neg              ; neg              | 0429E9 0429B1 || 0429E9 ED 44       6887            NEG
ld (hl),$30      ; ld (hl),$30      | 0429EB 0429B3 || 0429EB 36 30       6888  STR41:   LD      (HL),'0'
jr z,$+$17       ; jr z,$+$17       | 0429ED 0429B5 || 0429ED 28 15       6889            JR      Z,STR47
cp $0a           ; cp $0a           | 0429EF 0429B7 || 0429EF FE 0A       6890            CP      10
ld b,a           ; ld b,a           | 0429F1 0429B9 || 0429F1 47          6891            LD      B,A
ld a,$3a         ; ld a,$3a         | 0429F2 0429BA || 0429F2 3E 3A       6892            LD      A,':'
jr c,$+$05       ; jr c,$+$05       | 0429F4 0429BC || 0429F4 38 03       6893            JR      C,STR42
inc hl           ; inc hl           | 0429F6 0429BE || 0429F6 23          6894            INC     HL
ld (hl),$30      ; ld (hl),$30      | 0429F7 0429BF || 0429F7 36 30       6895            LD      (HL),'0'
inc (hl)         ; inc (hl)         | 0429F9 0429C1 || 0429F9 34          6896  STR42:   INC     (HL)
cp (hl)          ; cp (hl)          | 0429FA 0429C2 || 0429FA BE          6897            CP      (HL)
jr nz,$+$07      ; jr nz,$+$07      | 0429FB 0429C3 || 0429FB 20 05       6898            JR      NZ,STR43
ld (hl),$30      ; ld (hl),$30      | 0429FD 0429C5 || 0429FD 36 30       6899            LD      (HL),'0'
dec hl           ; dec hl           | 0429FF 0429C7 || 0429FF 2B          6900            DEC     HL
inc (hl)         ; inc (hl)         | 042A00 0429C8 || 042A00 34          6901            INC     (HL)
inc hl           ; inc hl           | 042A01 0429C9 || 042A01 23          6902            INC     HL
djnz $-$09       ; djnz $-$09       | 042A02 0429CA || 042A02 10 F5       6903  STR43:   DJNZ    STR42
inc hl           ; inc hl           | 042A04 0429CC || 042A04 23          6904  STR47:   INC     HL
ex de,hl         ; ex de,hl         | 042A05 0429CD || 042A05 EB          6905  STR44:   EX      DE,HL
ret              ; ret              | 042A06 0429CE || 042A06 C9          6906           RET
ld b,(ix+$04)    ; ld b,(ix+$04)    | 042A07 0429CF || 042A07 DD 46 04    6910  DLOAD5:   LD      B,(IX+4)
exx              ; exx              | 042A0A 0429D2 || 042A0A D9          6911            EXX
ld e,(ix)        ; ld e,(ix)        | 042A0B 0429D3 || 042A0B DD 5E 00    6912            LD      E,(IX+0)
ld d,(ix+$01)    ; ld d,(ix+$01)    | 042A0E 0429D6 || 042A0E DD 56 01    6913            LD      D,(IX+1)
exx              ; exx              | 042A11 0429D9 || 042A11 D9          6914            EXX
ld e,(ix+$02)    ; ld e,(ix+$02)    | 042A12 0429DA || 042A12 DD 5E 02    6915            LD      E,(IX+2)
ld d,(ix+$03)    ; ld d,(ix+$03)    | 042A15 0429DD || 042A15 DD 56 03    6916            LD      D,(IX+3)
ret              ; ret              | 042A18 0429E0 || 042A18 C9          6917            RET
ld b,(ix+$06)    ; ld b,(ix+$06)    | 042A19 0429E1 || 042A19 DD 46 06    6919  DLOAD5_SPL:  LD      B,(IX+6)
exx              ; exx              | 042A1C 0429E4 || 042A1C D9          6920     EXX
ld de,(ix)       ; ld de,(ix)       | 042A1D 0429E5 || 042A1D DD 17 00    6921     LD DE, (IX+0)
exx              ; exx              | 042A20 0429E8 || 042A20 D9          6922     EXX
ld de,(ix+$03)   ; ld de,(ix+$03)   | 042A21 0429E9 || 042A21 DD 17 03    6923     LD DE, (IX+3)
ret              ; ret              | 042A24 0429EC || 042A24 C9          6924     RET
call $042c5b     ; call $042c23     | 042A25 0429ED || 042A25 CD 5B 2C 04 6932  CON_FP:   CALL    ZERO_FP            ;INITIALISE TO ZERO
ld c,$00         ; ld c,$00         | 042A29 0429F1 || 042A29 0E 00       6933            LD      C,0             ;TRUNCATION COUNTER
call $042ab9     ; call $042a81     | 042A2B 0429F3 || 042A2B CD B9 2A 04 6934            CALL    UINT          ;GET INTEGER PART
cp $2e           ; cp $2e           | 042A2F 0429F7 || 042A2F FE 2E       6935            CP      '.'
ld b,$00         ; ld b,$00         | 042A31 0429F9 || 042A31 06 00       6936            LD      B,0             ;DECL. PLACE COUNTER
call z,$042ab7   ; call z,$042a7f   | 042A33 0429FB || 042A33 CC B7 2A 04 6937            CALL    Z,NUMBIX        ;GET FRACTION PART
cp $45           ; cp $45           | 042A37 0429FF || 042A37 FE 45       6938            CP      'E'
ld a,$00         ; ld a,$00         | 042A39 042A01 || 042A39 3E 00       6939            LD      A,0             ;INITIALISE EXPONENT
call z,$042a85   ; call z,$042a4d   | 042A3B 042A03 || 042A3B CC 85 2A 04 6940            CALL    Z,GETEXP        ;GET EXPONENT
bit 7,h          ; bit 7,h          | 042A3F 042A07 || 042A3F CB 7C       6941            BIT     7,H
jr nz,$+$0a      ; jr nz,$+$0a      | 042A41 042A09 || 042A41 20 08       6942            JR      NZ,CON0         ;INTEGER OVERFLOW
or a             ; or a             | 042A43 042A0B || 042A43 B7          6943            OR      A
jr nz,$+$07      ; jr nz,$+$07      | 042A44 042A0C || 042A44 20 05       6944            JR      NZ,CON0         ;EXPONENT NON-ZERO
cp b             ; cp b             | 042A46 042A0E || 042A46 B8          6945            CP      B
jr nz,$+$04      ; jr nz,$+$04      | 042A47 042A0F || 042A47 20 02       6946            JR      NZ,CON0         ;DECIMAL POINT
cp c             ; cp c             | 042A49 042A11 || 042A49 B9          6947            CP      C
ret z            ; ret z            | 042A4A 042A12 || 042A4A C8          6948            RET     Z               ;INTEGER
sub b            ; sub b            | 042A4B 042A13 || 042A4B 90          6949  CON0:   SUB     B
add a,c          ; add a,c          | 042A4C 042A14 || 042A4C 81          6950            ADD     A,C
ld c,$9f         ; ld c,$9f         | 042A4D 042A15 || 042A4D 0E 9F       6951            LD      C,159
call $042bbe     ; call $042b86     | 042A4F 042A17 || 042A4F CD BE 2B 04 6952            CALL    FLOAT_
res 7,h          ; res 7,h          | 042A53 042A1B || 042A53 CB BC       6953            RES     7,H             ;DITCH IMPLIED 1
or a             ; or a             | 042A55 042A1D || 042A55 B7          6954            OR      A
ret z            ; ret z            | 042A56 042A1E || 042A56 C8          6955            RET     Z               ;DONE
jp m,$042a65     ; jp m,$042a2d     | 042A57 042A1F || 042A57 FA 65 2A 04 6956            JP      M,CON2          ;NEGATIVE EXPONENT
call $042d57     ; call $042d1f     | 042A5B 042A23 || 042A5B CD 57 2D 04 6957            CALL    POWR10
call $042346     ; call $04230e     | 042A5F 042A27 || 042A5F CD 46 23 04 6958            CALL    FMUL            ;SCALE
xor a            ; xor a            | 042A63 042A2B || 042A63 AF          6959            XOR     A
ret              ; ret              | 042A64 042A2C || 042A64 C9          6960            RET
cp $da           ; cp $da           | 042A65 042A2D || 042A65 FE DA       6961  CON2:   CP      -38
jr c,$+$0e       ; jr c,$+$0e       | 042A67 042A2F || 042A67 38 0C       6962            JR      C,CON3          ;CAN'T SCALE IN ONE GO
neg              ; neg              | 042A69 042A31 || 042A69 ED 44       6963            NEG
call $042d57     ; call $042d1f     | 042A6B 042A33 || 042A6B CD 57 2D 04 6964            CALL    POWR10
call $04229d     ; call $042265     | 042A6F 042A37 || 042A6F CD 9D 22 04 6965            CALL    FDIV            ;SCALE
xor a            ; xor a            | 042A73 042A3B || 042A73 AF          6966            XOR     A
ret              ; ret              | 042A74 042A3C || 042A74 C9          6967            RET
push af          ; push af          | 042A75 042A3D || 042A75 F5          6968  CON3:   PUSH    AF
ld a,$26         ; ld a,$26         | 042A76 042A3E || 042A76 3E 26       6969            LD      A,38
call $042d57     ; call $042d1f     | 042A78 042A40 || 042A78 CD 57 2D 04 6970            CALL    POWR10
call $04229d     ; call $042265     | 042A7C 042A44 || 042A7C CD 9D 22 04 6971            CALL    FDIV
pop af           ; pop af           | 042A80 042A48 || 042A80 F1          6972            POP     AF
add a,$26        ; add a,$26        | 042A81 042A49 || 042A81 C6 26       6973            ADD     A,38
jr $-$1e         ; jr $-$1e         | 042A83 042A4B || 042A83 18 E0       6974            JR      CON2
push bc          ; push bc          | 042A85 042A4D || 042A85 C5          6984  GETEXP:   PUSH    BC              ;SAVE REGISTERS
ld b,a           ; ld b,a           | 042A86 042A4E || 042A86 47          6985            LD      B,A             ;INITIAL VALUE
ld c,$02         ; ld c,$02         | 042A87 042A4F || 042A87 0E 02       6986            LD      C,2             ;2 DIGITS MAX
inc ix           ; inc ix           | 042A89 042A51 || 042A89 DD 23       6987            INC     IX              ;BUMP PAST 'E'
call $042e75     ; call $042e3d     | 042A8B 042A53 || 042A8B CD 75 2E 04 6988            CALL    SIGNQ
ex af,af'        ; ex af,af'        | 042A8F 042A57 || 042A8F 08          6989            EX      AF,AF'          ;SAVE EXPONENT SIGN
call $042e6b     ; call $042e33     | 042A90 042A58 || 042A90 CD 6B 2E 04 6990  GETEX1:   CALL    DIGITQ
jr c,$+$1a       ; jr c,$+$1a       | 042A94 042A5C || 042A94 38 18       6991            JR      C,GETEX2
ld a,b           ; ld a,b           | 042A96 042A5E || 042A96 78          6992            LD      A,B             ;B=B*10
add a,a          ; add a,a          | 042A97 042A5F || 042A97 87          6993            ADD     A,A
add a,a          ; add a,a          | 042A98 042A60 || 042A98 87          6994            ADD     A,A
add a,b          ; add a,b          | 042A99 042A61 || 042A99 80          6995            ADD     A,B
add a,a          ; add a,a          | 042A9A 042A62 || 042A9A 87          6996            ADD     A,A
ld b,a           ; ld b,a           | 042A9B 042A63 || 042A9B 47          6997            LD      B,A
ld a,(ix)        ; ld a,(ix)        | 042A9C 042A64 || 042A9C DD 7E 00    6998            LD      A,(IX)          ;GET BACK DIGIT
inc ix           ; inc ix           | 042A9F 042A67 || 042A9F DD 23       6999            INC     IX
and $0f          ; and $0f          | 042AA1 042A69 || 042AA1 E6 0F       7000            AND     0FH             ;MASK UNWANTED BITS
add a,b          ; add a,b          | 042AA3 042A6B || 042AA3 80          7001            ADD     A,B             ;ADD IN DIGIT
ld b,a           ; ld b,a           | 042AA4 042A6C || 042AA4 47          7002            LD      B,A
dec c            ; dec c            | 042AA5 042A6D || 042AA5 0D          7003            DEC     C
jp p,$042a90     ; jp p,$042a58     | 042AA6 042A6E || 042AA6 F2 90 2A 04 7004            JP      P,GETEX1
ld b,$64         ; ld b,$64         | 042AAA 042A72 || 042AAA 06 64       7005            LD      B,100           ;FORCE OVERFLOW
jr $-$1c         ; jr $-$1c         | 042AAC 042A74 || 042AAC 18 E2       7006            JR      GETEX1
ex af,af'        ; ex af,af'        | 042AAE 042A76 || 042AAE 08          7007  GETEX2:   EX      AF,AF'          ;RESTORE SIGN
cp $2d           ; cp $2d           | 042AAF 042A77 || 042AAF FE 2D       7008            CP      '-'
ld a,b           ; ld a,b           | 042AB1 042A79 || 042AB1 78          7009            LD      A,B
pop bc           ; pop bc           | 042AB2 042A7A || 042AB2 C1          7010            POP     BC              ;RESTORE
ret nz           ; ret nz           | 042AB3 042A7B || 042AB3 C0          7011            RET     NZ
neg              ; neg              | 042AB4 042A7C || 042AB4 ED 44       7012            NEG                     ;NEGATE EXPONENT
ret              ; ret              | 042AB6 042A7E || 042AB6 C9          7013            RET
inc ix           ; inc ix           | 042AB7 042A7F || 042AB7 DD 23       7026  NUMBIX:   INC     IX
call $042e6b     ; call $042e33     | 042AB9 042A81 || 042AB9 CD 6B 2E 04 7027  UINT:   CALL    DIGITQ
ret c            ; ret c            | 042ABD 042A85 || 042ABD D8          7028            RET     C
inc b            ; inc b            | 042ABE 042A86 || 042ABE 04          7029            INC     B               ;INCREMENT DIGIT COUNT
inc ix           ; inc ix           | 042ABF 042A87 || 042ABF DD 23       7030            INC     IX
call $042cb4     ; call $042c7c     | 042AC1 042A89 || 042AC1 CD B4 2C 04 7031            CALL    X10             ;*10 & COPY OLD VALUE
jr c,$+$17       ; jr c,$+$17       | 042AC5 042A8D || 042AC5 38 15       7032            JR      C,NUMB1         ;OVERFLOW
dec c            ; dec c            | 042AC7 042A8F || 042AC7 0D          7033            DEC     C               ;SEE IF TRUNCATED
inc c            ; inc c            | 042AC8 042A90 || 042AC8 0C          7034            INC     C
jr nz,$+$13      ; jr nz,$+$13      | 042AC9 042A91 || 042AC9 20 11       7035            JR      NZ,NUMB1        ;IMPORTANT!
and $0f          ; and $0f          | 042ACB 042A93 || 042ACB E6 0F       7036            AND     0FH
exx              ; exx              | 042ACD 042A95 || 042ACD D9          7037            EXX
ld b,$00         ; ld b,$00         | 042ACE 042A96 || 042ACE 06 00       7038            LD      B,0
ld c,a           ; ld c,a           | 042AD0 042A98 || 042AD0 4F          7039            LD      C,A
add.sil hl,bc    ; add.sil hl,bc    | 042AD1 042A99 || 042AD1 52 09       7040            ADD.S   HL,BC           ;ADD IN DIGIT
exx              ; exx              | 042AD3 042A9B || 042AD3 D9          7041            EXX
jr nc,$-$1b      ; jr nc,$-$1b      | 042AD4 042A9C || 042AD4 30 E3       7042            JR      NC,UINT
inc.sil hl       ; inc.sil hl       | 042AD6 042A9E || 042AD6 52 23       7043            INC.S   HL              ;CARRY
ld a,h           ; ld a,h           | 042AD8 042AA0 || 042AD8 7C          7044            LD      A,H
or l             ; or l             | 042AD9 042AA1 || 042AD9 B5          7045            OR      L
jr nz,$-$21      ; jr nz,$-$21      | 042ADA 042AA2 || 042ADA 20 DD       7046            JR      NZ,UINT
inc c            ; inc c            | 042ADC 042AA4 || 042ADC 0C          7047  NUMB1:   INC     C               ;TRUNCATION COUNTER
call $042c12     ; call $042bda     | 042ADD 042AA5 || 042ADD CD 12 2C 04 7048            CALL    SWAP1           ;RESTORE PREVIOUS VALUE
jr $-$28         ; jr $-$28         | 042AE1 042AA9 || 042AE1 18 D6       7049            JR      UINT
ex af,af'        ; ex af,af'        | 042AE3 042AAB || 042AE3 08          7059  FIX:   EX      AF,AF'
xor a            ; xor a            | 042AE4 042AAC || 042AE4 AF          7060            XOR     A
ex af,af'        ; ex af,af'        | 042AE5 042AAD || 042AE5 08          7061            EX      AF,AF'
set 7,h          ; set 7,h          | 042AE6 042AAE || 042AE6 CB FC       7062            SET     7,H             ;IMPLIED 1
call $042c17     ; call $042bdf     | 042AE8 042AB0 || 042AE8 CD 17 2C 04 7063  FIX1:   CALL    DIV2
cp c             ; cp c             | 042AEC 042AB4 || 042AEC B9          7064            CP      C
ret z            ; ret z            | 042AED 042AB5 || 042AED C8          7065            RET     Z
jp nc,$042ae8    ; jp nc,$042ab0    | 042AEE 042AB6 || 042AEE D2 E8 2A 04 7066            JP      NC,FIX1
jp $042c26       ; jp $042bee       | 042AF2 042ABA || 042AF2 C3 26 2C 04 7067            JP      OFLOW
call $042c0f     ; call $042bd7     | 042AF6 042ABE || 042AF6 CD 0F 2C 04 7077  FIX2:   CALL    SWAP_FP
call $042b02     ; call $042aca     | 042AFA 042AC2 || 042AFA CD 02 2B 04 7078            CALL    SFIX_FP
call $042c0f     ; call $042bd7     | 042AFE 042AC6 || 042AFE CD 0F 2C 04 7079            CALL    SWAP_FP
dec c            ; dec c            | 042B02 042ACA || 042B02 0D          7080  SFIX_FP:   DEC     C
inc c            ; inc c            | 042B03 042ACB || 042B03 0C          7081            INC     C
ret z            ; ret z            | 042B04 042ACC || 042B04 C8          7082            RET     Z               ;INTEGER/ZERO
bit 7,h          ; bit 7,h          | 042B05 042ACD || 042B05 CB 7C       7083            BIT     7,H             ;SIGN
push af          ; push af          | 042B07 042ACF || 042B07 F5          7084            PUSH    AF
ld a,$9f         ; ld a,$9f         | 042B08 042AD0 || 042B08 3E 9F       7085            LD      A,159
call $042ae3     ; call $042aab     | 042B0A 042AD2 || 042B0A CD E3 2A 04 7086            CALL    FIX
pop af           ; pop af           | 042B0E 042AD6 || 042B0E F1          7087            POP     AF
ld c,$00         ; ld c,$00         | 042B0F 042AD7 || 042B0F 0E 00       7088            LD      C,0
ret z            ; ret z            | 042B11 042AD9 || 042B11 C8          7089            RET     Z
or a             ; or a             | 042B12 042ADA || 042B12 B7          7090  NEGATE:   OR      A               ;CLEAR CARRY
exx              ; exx              | 042B13 042ADB || 042B13 D9          7091            EXX
push de          ; push de          | 042B14 042ADC || 042B14 D5          7092  NEG0:   PUSH    DE
ex de,hl         ; ex de,hl         | 042B15 042ADD || 042B15 EB          7093            EX      DE,HL
ld hl,$000000    ; ld hl,$000000    | 042B16 042ADE || 042B16 21 00 00 00 7094            LD      HL,0
sbc.sil hl,de    ; sbc.sil hl,de    | 042B1A 042AE2 || 042B1A 52 ED 52    7095            SBC.S   HL,DE
pop de           ; pop de           | 042B1D 042AE5 || 042B1D D1          7096            POP     DE
exx              ; exx              | 042B1E 042AE6 || 042B1E D9          7097            EXX
push de          ; push de          | 042B1F 042AE7 || 042B1F D5          7098            PUSH    DE
ex de,hl         ; ex de,hl         | 042B20 042AE8 || 042B20 EB          7099            EX      DE,HL
ld hl,$000000    ; ld hl,$000000    | 042B21 042AE9 || 042B21 21 00 00 00 7100            LD      HL,0
sbc.sil hl,de    ; sbc.sil hl,de    | 042B25 042AED || 042B25 52 ED 52    7101            SBC.S   HL,DE
pop de           ; pop de           | 042B28 042AF0 || 042B28 D1          7102            POP     DE
ret              ; ret              | 042B29 042AF1 || 042B29 C9          7103            RET
exx              ; exx              | 042B2A 042AF2 || 042B2A D9          7109  NEG_:   EXX
cpl              ; cpl              | 042B2B 042AF3 || 042B2B 2F          7110            CPL
push hl          ; push hl          | 042B2C 042AF4 || 042B2C E5          7111            PUSH    HL
or a             ; or a             | 042B2D 042AF5 || 042B2D B7          7112            OR      A               ;CLEAR CARRY
ld hl,$000000    ; ld hl,$000000    | 042B2E 042AF6 || 042B2E 21 00 00 00 7113            LD      HL,0
sbc.sil hl,bc    ; sbc.sil hl,bc    | 042B32 042AFA || 042B32 52 ED 42    7114            SBC.S   HL,BC
ld b,h           ; ld b,h           | 042B35 042AFD || 042B35 44          7115            LD      B,H
ld c,l           ; ld c,l           | 042B36 042AFE || 042B36 4D          7116            LD      C,L
pop hl           ; pop hl           | 042B37 042AFF || 042B37 E1          7117            POP     HL
jr $-$24         ; jr $-$24         | 042B38 042B00 || 042B38 18 DA       7118            JR      NEG0
ld a,$96         ; ld a,$96         | 042B3A 042B02 || 042B3A 3E 96       7131  SCALE:   LD      A,150
cp c             ; cp c             | 042B3C 042B04 || 042B3C B9          7132            CP      C
ld a,$17         ; ld a,$17         | 042B3D 042B05 || 042B3D 3E 17       7133            LD      A,ACLOST
jp c,$0420b5     ; jp c,$04207d     | 042B3F 042B07 || 042B3F DA B5 20 04 7134            JP      C,ERROR_FP_         ;"Accuracy lost"
call $042680     ; call $042648     | 042B43 042B0B || 042B43 CD 80 26 04 7135            CALL    PIBY4
exx              ; exx              | 042B47 042B0F || 042B47 D9          7136            EXX
ld bc,$002169    ; ld bc,$002169    | 042B48 042B10 || 042B48 01 69 21 00 7137            LD      BC,2169H        ;3.141592653589793238
exx              ; exx              | 042B4C 042B14 || 042B4C D9          7138            EXX
set 7,d          ; set 7,d          | 042B4D 042B15 || 042B4D CB FA       7139  MOD48:   SET     7,D             ;IMPLIED 1
set 7,h          ; set 7,h          | 042B4F 042B17 || 042B4F CB FC       7140            SET     7,H
ld a,c           ; ld a,c           | 042B51 042B19 || 042B51 79          7141            LD      A,C
ld c,$00         ; ld c,$00         | 042B52 042B1A || 042B52 0E 00       7142            LD      C,0             ;INIT QUOTIENT
ld ix,$000000    ; ld ix,$000000    | 042B54 042B1C || 042B54 DD 21 00 00 7143            LD      IX,0
push ix          ; push ix          | 042B59 042B21 || 042B59 DD E5       7144            PUSH    IX              ;PUT ZERO ON STACK
cp b             ; cp b             | 042B5B 042B23 || 042B5B B8          7145            CP      B
jr c,$+$48       ; jr c,$+$48       | 042B5C 042B24 || 042B5C 38 46       7146            JR      C,MOD485        ;DIVIDEND<DIVISOR
exx              ; exx              | 042B5E 042B26 || 042B5E D9          7147  MOD481:   EXX                     ;CARRY=0 HERE
ex (sp),hl       ; ex (sp),hl       | 042B5F 042B27 || 042B5F E3          7148            EX      (SP),HL
sbc.sil hl,bc    ; sbc.sil hl,bc    | 042B60 042B28 || 042B60 52 ED 42    7149            SBC.S   HL,BC
ex (sp),hl       ; ex (sp),hl       | 042B63 042B2B || 042B63 E3          7150            EX      (SP),HL
sbc.sil hl,de    ; sbc.sil hl,de    | 042B64 042B2C || 042B64 52 ED 52    7151            SBC.S   HL,DE
exx              ; exx              | 042B67 042B2F || 042B67 D9          7152            EXX
sbc.sil hl,de    ; sbc.sil hl,de    | 042B68 042B30 || 042B68 52 ED 52    7153            SBC.S   HL,DE
jr nc,$+$0e      ; jr nc,$+$0e      | 042B6B 042B33 || 042B6B 30 0C       7154            JR      NC,MOD482       ;DIVIDEND>=DIVISOR
exx              ; exx              | 042B6D 042B35 || 042B6D D9          7155            EXX
ex (sp),hl       ; ex (sp),hl       | 042B6E 042B36 || 042B6E E3          7156            EX      (SP),HL
add.sil hl,bc    ; add.sil hl,bc    | 042B6F 042B37 || 042B6F 52 09       7157            ADD.S   HL,BC
ex (sp),hl       ; ex (sp),hl       | 042B71 042B39 || 042B71 E3          7158            EX      (SP),HL
adc.sil hl,de    ; adc.sil hl,de    | 042B72 042B3A || 042B72 52 ED 5A    7159            ADC.S   HL,DE
exx              ; exx              | 042B75 042B3D || 042B75 D9          7160            EXX
adc.sil hl,de    ; adc.sil hl,de    | 042B76 042B3E || 042B76 52 ED 5A    7161            ADC.S   HL,DE
ccf              ; ccf              | 042B79 042B41 || 042B79 3F          7162  MOD482:   CCF
rl c             ; rl c             | 042B7A 042B42 || 042B7A CB 11       7163            RL      C               ;QUOTIENT
jr nc,$+$04      ; jr nc,$+$04      | 042B7C 042B44 || 042B7C 30 02       7164            JR      NC,MOD483
set 7,c          ; set 7,c          | 042B7E 042B46 || 042B7E CB F9       7165            SET     7,C             ;STICKY BIT
dec a            ; dec a            | 042B80 042B48 || 042B80 3D          7166  MOD483:   DEC     A
cp b             ; cp b             | 042B81 042B49 || 042B81 B8          7167            CP      B
jr c,$+$21       ; jr c,$+$21       | 042B82 042B4A || 042B82 38 1F       7168            JR      C,MOD484        ;DIVIDEND<DIVISOR
ex (sp),hl       ; ex (sp),hl       | 042B84 042B4C || 042B84 E3          7169            EX      (SP),HL
add.sil hl,hl    ; add.sil hl,hl    | 042B85 042B4D || 042B85 52 29       7170            ADD.S   HL,HL           ;DIVIDEND * 2
ex (sp),hl       ; ex (sp),hl       | 042B87 042B4F || 042B87 E3          7171            EX      (SP),HL
exx              ; exx              | 042B88 042B50 || 042B88 D9          7172            EXX
adc.sil hl,hl    ; adc.sil hl,hl    | 042B89 042B51 || 042B89 52 ED 6A    7173            ADC.S   HL,HL
exx              ; exx              | 042B8C 042B54 || 042B8C D9          7174            EXX
adc.sil hl,hl    ; adc.sil hl,hl    | 042B8D 042B55 || 042B8D 52 ED 6A    7175            ADC.S   HL,HL
jr nc,$-$32      ; jr nc,$-$32      | 042B90 042B58 || 042B90 30 CC       7176            JR      NC,MOD481       ;AGAIN
or a             ; or a             | 042B92 042B5A || 042B92 B7          7177            OR      A
exx              ; exx              | 042B93 042B5B || 042B93 D9          7178            EXX
ex (sp),hl       ; ex (sp),hl       | 042B94 042B5C || 042B94 E3          7179            EX      (SP),HL
sbc.sil hl,bc    ; sbc.sil hl,bc    | 042B95 042B5D || 042B95 52 ED 42    7180            SBC.S   HL,BC           ;OVERFLOW, SO SUBTRACT
ex (sp),hl       ; ex (sp),hl       | 042B98 042B60 || 042B98 E3          7181            EX      (SP),HL
sbc.sil hl,de    ; sbc.sil hl,de    | 042B99 042B61 || 042B99 52 ED 52    7182            SBC.S   HL,DE
exx              ; exx              | 042B9C 042B64 || 042B9C D9          7183            EXX
sbc.sil hl,de    ; sbc.sil hl,de    | 042B9D 042B65 || 042B9D 52 ED 52    7184            SBC.S   HL,DE
or a             ; or a             | 042BA0 042B68 || 042BA0 B7          7185            OR      A
jr $-$28         ; jr $-$28         | 042BA1 042B69 || 042BA1 18 D6       7186            JR      MOD482
inc a            ; inc a            | 042BA3 042B6B || 042BA3 3C          7188  MOD484:   INC     A
ld e,c           ; ld e,c           | 042BA4 042B6C || 042BA4 59          7189  MOD485:   LD      E,C             ;QUOTIENT
ld c,a           ; ld c,a           | 042BA5 042B6D || 042BA5 4F          7190            LD      C,A             ;REMAINDER EXPONENT
exx              ; exx              | 042BA6 042B6E || 042BA6 D9          7191            EXX
pop bc           ; pop bc           | 042BA7 042B6F || 042BA7 C1          7192            POP     BC
exx              ; exx              | 042BA8 042B70 || 042BA8 D9          7193            EXX
bit 7,h          ; bit 7,h          | 042BA9 042B71 || 042BA9 CB 7C       7194  FLO48:   BIT     7,H
ret nz           ; ret nz           | 042BAB 042B73 || 042BAB C0          7195            RET     NZ
exx              ; exx              | 042BAC 042B74 || 042BAC D9          7196            EXX
sla c            ; sla c            | 042BAD 042B75 || 042BAD CB 21       7197            SLA     C
rl b             ; rl b             | 042BAF 042B77 || 042BAF CB 10       7198            RL      B
adc.sil hl,hl    ; adc.sil hl,hl    | 042BB1 042B79 || 042BB1 52 ED 6A    7199            ADC.S   HL,HL
exx              ; exx              | 042BB4 042B7C || 042BB4 D9          7200            EXX
adc.sil hl,hl    ; adc.sil hl,hl    | 042BB5 042B7D || 042BB5 52 ED 6A    7201            ADC.S   HL,HL
dec c            ; dec c            | 042BB8 042B80 || 042BB8 0D          7202            DEC     C
jp nz,$042ba9    ; jp nz,$042b71    | 042BB9 042B81 || 042BB9 C2 A9 2B 04 7203            JP      NZ,FLO48
ret              ; ret              | 042BBD 042B85 || 042BBD C9          7204            RET
bit 7,h          ; bit 7,h          | 042BBE 042B86 || 042BBE CB 7C       7210  FLOAT_:   BIT     7,H
ret nz           ; ret nz           | 042BC0 042B88 || 042BC0 C0          7211            RET     NZ
exx              ; exx              | 042BC1 042B89 || 042BC1 D9          7212            EXX                     ;SAME AS "X2"
add.sil hl,hl    ; add.sil hl,hl    | 042BC2 042B8A || 042BC2 52 29       7213            ADD.S   HL,HL           ;TIME-CRITICAL
exx              ; exx              | 042BC4 042B8C || 042BC4 D9          7214            EXX                     ;REGION
adc.sil hl,hl    ; adc.sil hl,hl    | 042BC5 042B8D || 042BC5 52 ED 6A    7215            ADC.S   HL,HL           ;(BENCHMARKS)
dec c            ; dec c            | 042BC8 042B90 || 042BC8 0D          7216            DEC     C
jp nz,$042bbe    ; jp nz,$042b86    | 042BC9 042B91 || 042BC9 C2 BE 2B 04 7217            JP      NZ,FLOAT_
ret              ; ret              | 042BCD 042B95 || 042BCD C9          7218            RET
ex af,af'        ; ex af,af'        | 042BCE 042B96 || 042BCE 08          7225  FLOATA:   EX      AF,AF'
add a,$2a        ; add a,$2a        | 042BCF 042B97 || 042BCF C6 2A       7227            ADD     A,RTABLE-DTABLE/3 ; ez80asm doesn't do nested expressions
ex af,af'        ; ex af,af'        | 042BD1 042B99 || 042BD1 08          7228            EX      AF,AF'
call $042c0f     ; call $042bd7     | 042BD2 042B9A || 042BD2 CD 0F 2C 04 7229  FLOAT2:   CALL    SWAP_FP
call $042bde     ; call $042ba6     | 042BD6 042B9E || 042BD6 CD DE 2B 04 7230            CALL    SFLOAT_FP
call $042c0f     ; call $042bd7     | 042BDA 042BA2 || 042BDA CD 0F 2C 04 7231            CALL    SWAP_FP
dec c            ; dec c            | 042BDE 042BA6 || 042BDE 0D          7232  SFLOAT_FP:   DEC     C
inc c            ; inc c            | 042BDF 042BA7 || 042BDF 0C          7233            INC     C
ret nz           ; ret nz           | 042BE0 042BA8 || 042BE0 C0          7234            RET     NZ              ;ALREADY FLOATING-POINT
call $042c37     ; call $042bff     | 042BE1 042BA9 || 042BE1 CD 37 2C 04 7235            CALL    TEST_FP
ret z            ; ret z            | 042BE5 042BAD || 042BE5 C8          7236            RET     Z               ;ZERO
ld a,h           ; ld a,h           | 042BE6 042BAE || 042BE6 7C          7237            LD      A,H
or a             ; or a             | 042BE7 042BAF || 042BE7 B7          7238            OR      A
call m,$042b12   ; call m,$042ada   | 042BE8 042BB0 || 042BE8 FC 12 2B 04 7239            CALL    M,NEGATE
ld c,$9f         ; ld c,$9f         | 042BEC 042BB4 || 042BEC 0E 9F       7240            LD      C,159
call $042bbe     ; call $042b86     | 042BEE 042BB6 || 042BEE CD BE 2B 04 7241            CALL    FLOAT_
or a             ; or a             | 042BF2 042BBA || 042BF2 B7          7242            OR      A
ret m            ; ret m            | 042BF3 042BBB || 042BF3 F8          7243            RET     M               ;NEGATIVE
res 7,h          ; res 7,h          | 042BF4 042BBC || 042BF4 CB BC       7244            RES     7,H
ret              ; ret              | 042BF6 042BBE || 042BF6 C9          7245            RET
exx              ; exx              | 042BF7 042BBF || 042BF7 D9          7251  ADD1_FP:   EXX
ld bc,$000001    ; ld bc,$000001    | 042BF8 042BC0 || 042BF8 01 01 00 00 7252            LD      BC,1
add.sil hl,bc    ; add.sil hl,bc    | 042BFC 042BC4 || 042BFC 52 09       7253            ADD.S   HL,BC
exx              ; exx              | 042BFE 042BC6 || 042BFE D9          7254            EXX
ret nc           ; ret nc           | 042BFF 042BC7 || 042BFF D0          7255            RET     NC
push bc          ; push bc          | 042C00 042BC8 || 042C00 C5          7256            PUSH    BC
ld bc,$000001    ; ld bc,$000001    | 042C01 042BC9 || 042C01 01 01 00 00 7257            LD      BC,1
add.sil hl,bc    ; add.sil hl,bc    | 042C05 042BCD || 042C05 52 09       7258            ADD.S   HL,BC
pop bc           ; pop bc           | 042C07 042BCF || 042C07 C1          7259            POP     BC
ret              ; ret              | 042C08 042BD0 || 042C08 C9          7260            RET
or a             ; or a             | 042C09 042BD1 || 042C09 B7          7267  ODD:   OR      A               ;CLEAR CARRY
exx              ; exx              | 042C0A 042BD2 || 042C0A D9          7268            EXX
set 0,l          ; set 0,l          | 042C0B 042BD3 || 042C0B CB C5       7269            SET     0,L             ;MAKE ODD
exx              ; exx              | 042C0D 042BD5 || 042C0D D9          7270            EXX
ret              ; ret              | 042C0E 042BD6 || 042C0E C9          7271            RET
ld a,c           ; ld a,c           | 042C0F 042BD7 || 042C0F 79          7279  SWAP_FP:   LD      A,C
ld c,b           ; ld c,b           | 042C10 042BD8 || 042C10 48          7280            LD      C,B
ld b,a           ; ld b,a           | 042C11 042BD9 || 042C11 47          7281            LD      B,A
ex de,hl         ; ex de,hl         | 042C12 042BDA || 042C12 EB          7282  SWAP1:   EX      DE,HL
exx              ; exx              | 042C13 042BDB || 042C13 D9          7283            EXX
ex de,hl         ; ex de,hl         | 042C14 042BDC || 042C14 EB          7284            EX      DE,HL
exx              ; exx              | 042C15 042BDD || 042C15 D9          7285            EXX
ret              ; ret              | 042C16 042BDE || 042C16 C9          7286            RET
call $042cd0     ; call $042c98     | 042C17 042BDF || 042C17 CD D0 2C 04 7292  DIV2:   CALL    D2
exx              ; exx              | 042C1B 042BE3 || 042C1B D9          7293            EXX
rr b             ; rr b             | 042C1C 042BE4 || 042C1C CB 18       7294            RR      B
rr c             ; rr c             | 042C1E 042BE6 || 042C1E CB 19       7295            RR      C
ex af,af'        ; ex af,af'        | 042C20 042BE8 || 042C20 08          7296            EX      AF,AF'
or b             ; or b             | 042C21 042BE9 || 042C21 B0          7297            OR      B
ex af,af'        ; ex af,af'        | 042C22 042BEA || 042C22 08          7298            EX      AF,AF'
exx              ; exx              | 042C23 042BEB || 042C23 D9          7299            EXX
inc c            ; inc c            | 042C24 042BEC || 042C24 0C          7300  INCC:   INC     C
ret nz           ; ret nz           | 042C25 042BED || 042C25 C0          7301            RET     NZ
ld a,$14         ; ld a,$14         | 042C26 042BEE || 042C26 3E 14       7302  OFLOW:   LD      A,TOOBIG_FP
jp $0420b5       ; jp $04207d       | 042C28 042BF0 || 042C28 C3 B5 20 04 7303            JP      ERROR_FP_           ;"Too big"
call $042c37     ; call $042bff     | 042C2C 042BF4 || 042C2C CD 37 2C 04 7308  FTEST_FP:   CALL    TEST_FP
ret z            ; ret z            | 042C30 042BF8 || 042C30 C8          7309            RET     Z
ld a,h           ; ld a,h           | 042C31 042BF9 || 042C31 7C          7310            LD      A,H
and $80          ; and $80          | 042C32 042BFA || 042C32 E6 80       7311            AND     10000000B
or $40           ; or $40           | 042C34 042BFC || 042C34 F6 40       7312            OR      01000000B
ret              ; ret              | 042C36 042BFE || 042C36 C9          7313            RET
ld a,h           ; ld a,h           | 042C37 042BFF || 042C37 7C          7319  TEST_FP:   LD      A,H
or l             ; or l             | 042C38 042C00 || 042C38 B5          7320            OR      L
exx              ; exx              | 042C39 042C01 || 042C39 D9          7321            EXX
or h             ; or h             | 042C3A 042C02 || 042C3A B4          7322            OR      H
or l             ; or l             | 042C3B 042C03 || 042C3B B5          7323            OR      L
exx              ; exx              | 042C3C 042C04 || 042C3C D9          7324            EXX
ret              ; ret              | 042C3D 042C05 || 042C3D C9          7325            RET
ld a,b           ; ld a,b           | 042C3E 042C06 || 042C3E 78          7330  FCOMP_FP:   LD      A,B
or c             ; or c             | 042C3F 042C07 || 042C3F B1          7331            OR      C               ;Both integer?
jr nz,$+$0d      ; jr nz,$+$0d      | 042C40 042C08 || 042C40 20 0B       7332            JR      NZ,FCOMP1
call $042c57     ; call $042c1f     | 042C42 042C0A || 042C42 CD 57 2C 04 7333            CALL    ICP
ld a,$00         ; ld a,$00         | 042C46 042C0E || 042C46 3E 00       7334  FCOMP0:   LD      A,0
ret z            ; ret z            | 042C48 042C10 || 042C48 C8          7335            RET     Z               ;Equal
ld a,$80         ; ld a,$80         | 042C49 042C11 || 042C49 3E 80       7336            LD      A,80H
rra              ; rra              | 042C4B 042C13 || 042C4B 1F          7337            RRA
ret              ; ret              | 042C4C 042C14 || 042C4C C9          7338            RET
call $042bd2     ; call $042b9a     | 042C4D 042C15 || 042C4D CD D2 2B 04 7340  FCOMP1:   CALL    FLOAT2          ;Float both
call $042c65     ; call $042c2d     | 042C51 042C19 || 042C51 CD 65 2C 04 7341            CALL    FCP
jr $-$0f         ; jr $-$0f         | 042C55 042C1D || 042C55 18 EF       7342            JR      FCOMP0
call $042c8a     ; call $042c52     | 042C57 042C1F || 042C57 CD 8A 2C 04 7352  ICP:   CALL    ICP1
ld a,$00         ; ld a,$00         | 042C5B 042C23 || 042C5B 3E 00       7353  ZERO_FP:   LD      A,0
exx              ; exx              | 042C5D 042C25 || 042C5D D9          7354            EXX
ld h,a           ; ld h,a           | 042C5E 042C26 || 042C5E 67          7355            LD      H,A
ld l,a           ; ld l,a           | 042C5F 042C27 || 042C5F 6F          7356            LD      L,A
exx              ; exx              | 042C60 042C28 || 042C60 D9          7357            EXX
ld h,a           ; ld h,a           | 042C61 042C29 || 042C61 67          7358           LD      H,A
ld l,a           ; ld l,a           | 042C62 042C2A || 042C62 6F          7359          LD      L,A
ld c,a           ; ld c,a           | 042C63 042C2B || 042C63 4F          7360         LD      C,A
ret              ; ret              | 042C64 042C2C || 042C64 C9          7361            RET
call $042c7c     ; call $042c44     | 042C65 042C2D || 042C65 CD 7C 2C 04 7363  FCP:   CALL    FCP1
jr $-$0e         ; jr $-$0e         | 042C69 042C31 || 042C69 18 F0       7364            JR      ZERO_FP            ;PRESET FALSE
ld a,c           ; ld a,c           | 042C6B 042C33 || 042C6B 79          7366  FCP0:   LD      A,C
cp b             ; cp b             | 042C6C 042C34 || 042C6C B8          7367            CP      B               ;COMPARE EXPONENTS
ret nz           ; ret nz           | 042C6D 042C35 || 042C6D C0          7368            RET     NZ
sbc.sil hl,de    ; sbc.sil hl,de    | 042C6E 042C36 || 042C6E 52 ED 52    7370     SBC.S   HL,DE           ;COMP MANTISSA MSB
add.sil hl,de    ; add.sil hl,de    | 042C71 042C39 || 042C71 52 19       7371            ADD.S   HL,DE
ret nz           ; ret nz           | 042C73 042C3B || 042C73 C0          7372            RET     NZ
exx              ; exx              | 042C74 042C3C || 042C74 D9          7373            EXX
sbc.sil hl,de    ; sbc.sil hl,de    | 042C75 042C3D || 042C75 52 ED 52    7374            SBC.S   HL,DE           ;COMP MANTISSA LSB
add.sil hl,de    ; add.sil hl,de    | 042C78 042C40 || 042C78 52 19       7375            ADD.S   HL,DE
exx              ; exx              | 042C7A 042C42 || 042C7A D9          7376            EXX
ret              ; ret              | 042C7B 042C43 || 042C7B C9          7377            RET
ld a,h           ; ld a,h           | 042C7C 042C44 || 042C7C 7C          7379  FCP1:   LD      A,H
xor d            ; xor d            | 042C7D 042C45 || 042C7D AA          7380            XOR     D
ld a,h           ; ld a,h           | 042C7E 042C46 || 042C7E 7C          7381            LD      A,H
rla              ; rla              | 042C7F 042C47 || 042C7F 17          7382            RLA
ret m            ; ret m            | 042C80 042C48 || 042C80 F8          7383            RET     M
jr nc,$-$16      ; jr nc,$-$16      | 042C81 042C49 || 042C81 30 E8       7384            JR      NC,FCP0
call $042c6b     ; call $042c33     | 042C83 042C4B || 042C83 CD 6B 2C 04 7385            CALL    FCP0
ret z            ; ret z            | 042C87 042C4F || 042C87 C8          7386            RET     Z               ;** V0.1 BUG FIX
ccf              ; ccf              | 042C88 042C50 || 042C88 3F          7387            CCF
ret              ; ret              | 042C89 042C51 || 042C89 C9          7388            RET
ld a,h           ; ld a,h           | 042C8A 042C52 || 042C8A 7C          7390  ICP1:   LD      A,H
xor d            ; xor d            | 042C8B 042C53 || 042C8B AA          7391            XOR     D
jp p,$042c6e     ; jp p,$042c36     | 042C8C 042C54 || 042C8C F2 6E 2C 04 7392            JP      P,ICP0
ld a,h           ; ld a,h           | 042C90 042C58 || 042C90 7C          7393            LD      A,H
rla              ; rla              | 042C91 042C59 || 042C91 17          7394            RLA
ret              ; ret              | 042C92 042C5A || 042C92 C9          7395            RET
dec b            ; dec b            | 042C93 042C5B || 042C93 05          7401  X10B:   DEC     B
inc c            ; inc c            | 042C94 042C5C || 042C94 0C          7402            INC     C
call $042cdc     ; call $042ca4     | 042C95 042C5D || 042C95 CD DC 2C 04 7403  X5:   CALL    COPY0
call $042ccf     ; call $042c97     | 042C99 042C61 || 042C99 CD CF 2C 04 7404            CALL    D2C
call $042ccf     ; call $042c97     | 042C9D 042C65 || 042C9D CD CF 2C 04 7405            CALL    D2C
ex af,af'        ; ex af,af'        | 042CA1 042C69 || 042CA1 08          7406            EX      AF,AF'          ;SAVE CARRY
exx              ; exx              | 042CA2 042C6A || 042CA2 D9          7407  ADD_:   EXX
add.sil hl,de    ; add.sil hl,de    | 042CA3 042C6B || 042CA3 52 19       7408            ADD.S   HL,DE
exx              ; exx              | 042CA5 042C6D || 042CA5 D9          7409            EXX
adc.sil hl,de    ; adc.sil hl,de    | 042CA6 042C6E || 042CA6 52 ED 5A    7410            ADC.S   HL,DE
ret              ; ret              | 042CA9 042C71 || 042CA9 C9          7411            RET
exx              ; exx              | 042CAA 042C72 || 042CAA D9          7417  SUB_:   EXX
or a             ; or a             | 042CAB 042C73 || 042CAB B7          7418            OR      A
sbc.sil hl,de    ; sbc.sil hl,de    | 042CAC 042C74 || 042CAC 52 ED 52    7419            SBC.S   HL,DE
exx              ; exx              | 042CAF 042C77 || 042CAF D9          7420            EXX
sbc.sil hl,de    ; sbc.sil hl,de    | 042CB0 042C78 || 042CB0 52 ED 52    7421            SBC.S   HL,DE
ret              ; ret              | 042CB3 042C7B || 042CB3 C9          7422            RET
call $042cdc     ; call $042ca4     | 042CB4 042C7C || 042CB4 CD DC 2C 04 7435  X10:   CALL    COPY0           ;DED'E'=HLH'L'
call $042cc7     ; call $042c8f     | 042CB8 042C80 || 042CB8 CD C7 2C 04 7436            CALL    X2
ret c            ; ret c            | 042CBC 042C84 || 042CBC D8          7437            RET     C               ;TOO BIG
call $042cc7     ; call $042c8f     | 042CBD 042C85 || 042CBD CD C7 2C 04 7438            CALL    X2
ret c            ; ret c            | 042CC1 042C89 || 042CC1 D8          7439            RET     C
call $042ca2     ; call $042c6a     | 042CC2 042C8A || 042CC2 CD A2 2C 04 7440            CALL    ADD_
ret c            ; ret c            | 042CC6 042C8E || 042CC6 D8          7441            RET     C
exx              ; exx              | 042CC7 042C8F || 042CC7 D9          7442  X2:   EXX
add.sil hl,hl    ; add.sil hl,hl    | 042CC8 042C90 || 042CC8 52 29       7443            ADD.S   HL,HL
exx              ; exx              | 042CCA 042C92 || 042CCA D9          7444            EXX
adc.sil hl,hl    ; adc.sil hl,hl    | 042CCB 042C93 || 042CCB 52 ED 6A    7445            ADC.S   HL,HL
ret              ; ret              | 042CCE 042C96 || 042CCE C9          7446            RET
inc c            ; inc c            | 042CCF 042C97 || 042CCF 0C          7452  D2C:   INC     C
srl h            ; srl h            | 042CD0 042C98 || 042CD0 CB 3C       7453  D2:   SRL     H
rr l             ; rr l             | 042CD2 042C9A || 042CD2 CB 1D       7454            RR      L
exx              ; exx              | 042CD4 042C9C || 042CD4 D9          7455            EXX
rr h             ; rr h             | 042CD5 042C9D || 042CD5 CB 1C       7456            RR      H
rr l             ; rr l             | 042CD7 042C9F || 042CD7 CB 1D       7457            RR      L
exx              ; exx              | 042CD9 042CA1 || 042CD9 D9          7458            EXX
ret              ; ret              | 042CDA 042CA2 || 042CDA C9          7459            RET
ld b,c           ; ld b,c           | 042CDB 042CA3 || 042CDB 41          7464  COPY_:   LD      B,C
ld d,h           ; ld d,h           | 042CDC 042CA4 || 042CDC 54          7465  COPY0:   LD      D,H
ld e,l           ; ld e,l           | 042CDD 042CA5 || 042CDD 5D          7466            LD      E,L
exx              ; exx              | 042CDE 042CA6 || 042CDE D9          7467            EXX
ld d,h           ; ld d,h           | 042CDF 042CA7 || 042CDF 54          7468            LD      D,H
ld e,l           ; ld e,l           | 042CE0 042CA8 || 042CE0 5D          7469            LD      E,L
exx              ; exx              | 042CE1 042CA9 || 042CE1 D9          7470            EXX
ret              ; ret              | 042CE2 042CAA || 042CE2 C9          7471            RET
call $042cdb     ; call $042ca3     | 042CE3 042CAB || 042CE3 CD DB 2C 04 7477  SQUARE:   CALL    COPY_
call $042346     ; call $04230e     | 042CE7 042CAF || 042CE7 CD 46 23 04 7478            CALL    FMUL
pop ix           ; pop ix           | 042CEB 042CB3 || 042CEB DD E1       7479  PUSH5:   POP     IX              ;RETURN ADDRESS
push bc          ; push bc          | 042CED 042CB5 || 042CED C5          7480            PUSH    BC
push hl          ; push hl          | 042CEE 042CB6 || 042CEE E5          7481            PUSH    HL
exx              ; exx              | 042CEF 042CB7 || 042CEF D9          7482            EXX
push hl          ; push hl          | 042CF0 042CB8 || 042CF0 E5          7483            PUSH    HL
exx              ; exx              | 042CF1 042CB9 || 042CF1 D9          7484            EXX
jp (ix)          ; jp (ix)          | 042CF2 042CBA || 042CF2 DD E9       7485            JP      (IX)            ;"RETURN"
pop ix           ; pop ix           | 042CF4 042CBC || 042CF4 DD E1       7490  POP5:   POP     IX              ;RETURN ADDRESS
exx              ; exx              | 042CF6 042CBE || 042CF6 D9          7491            EXX
pop de           ; pop de           | 042CF7 042CBF || 042CF7 D1          7492            POP     DE
exx              ; exx              | 042CF8 042CC0 || 042CF8 D9          7493            EXX
pop de           ; pop de           | 042CF9 042CC1 || 042CF9 D1          7494            POP     DE
ld a,c           ; ld a,c           | 042CFA 042CC2 || 042CFA 79          7495            LD      A,C
pop bc           ; pop bc           | 042CFB 042CC3 || 042CFB C1          7496            POP     BC
ld b,c           ; ld b,c           | 042CFC 042CC4 || 042CFC 41          7497            LD      B,C
ld c,a           ; ld c,a           | 042CFD 042CC5 || 042CFD 4F          7498            LD      C,A
jp (ix)          ; jp (ix)          | 042CFE 042CC6 || 042CFE DD E9       7499            JP      (IX)            ;"RETURN"
call $042ceb     ; call $042cb3     | 042D00 042CC8 || 042D00 CD EB 2C 04 7506  RATIO:   CALL    PUSH5           ;SAVE X
call $042673     ; call $04263b     | 042D04 042CCC || 042D04 CD 73 26 04 7507            CALL    DONE
call $042234     ; call $0421fc     | 042D08 042CD0 || 042D08 CD 34 22 04 7508            CALL    FADD
call $042cf4     ; call $042cbc     | 042D0C 042CD4 || 042D0C CD F4 2C 04 7509            CALL    POP5            ;RESTORE X
call $042ceb     ; call $042cb3     | 042D10 042CD8 || 042D10 CD EB 2C 04 7510            CALL    PUSH5           ;SAVE X+1
call $042c0f     ; call $042bd7     | 042D14 042CDC || 042D14 CD 0F 2C 04 7511            CALL    SWAP_FP
call $042673     ; call $04263b     | 042D18 042CE0 || 042D18 CD 73 26 04 7512            CALL    DONE
call $04221b     ; call $0421e3     | 042D1C 042CE4 || 042D1C CD 1B 22 04 7513            CALL    FSUB
call $042cf4     ; call $042cbc     | 042D20 042CE8 || 042D20 CD F4 2C 04 7514            CALL    POP5            ;RESTORE X+1
jp $04229d       ; jp $042265       | 042D24 042CEC || 042D24 C3 9D 22 04 7515            JP      FDIV
ld ix,$000003    ; ld ix,$000003    | 042D28 042CF0 || 042D28 DD 21 03 00 7526  POLY:   LD      IX, 3    ; Advance the SP to the return address
add ix,sp        ; add ix,sp        | 042D2D 042CF5 || 042D2D DD 39       7527            ADD     IX, SP
ex (sp),ix       ; ex (sp),ix       | 042D2F 042CF7 || 042D2F DD E3       7528            EX      (SP), IX   ; IX: Points to the inline list of coefficients
call $042a07     ; call $0429cf     | 042D31 042CF9 || 042D31 CD 07 2A 04 7530            CALL    DLOAD5            ; Load the first coefficient from (IX)
call $042346     ; call $04230e     | 042D35 042CFD || 042D35 CD 46 23 04 7531  POLY1:   CALL    FMUL
ld de,$000005    ; ld de,$000005    | 042D39 042D01 || 042D39 11 05 00 00 7532            LD      DE, 5    ; Skip to the next coefficient
add ix,de        ; add ix,de        | 042D3D 042D05 || 042D3D DD 19       7533            ADD     IX, DE
call $042a07     ; call $0429cf     | 042D3F 042D07 || 042D3F CD 07 2A 04 7534            CALL    DLOAD5            ; Load the second coefficient from (IX)
ex (sp),ix       ; ex (sp),ix       | 042D43 042D0B || 042D43 DD E3       7535            EX      (SP), IX   ; Restore the SP just in case we need to return
inc b            ; inc b            | 042D45 042D0D || 042D45 04          7536            INC     B
dec b            ; dec b            | 042D46 042D0E || 042D46 05          7537            DEC     B                 ; Test B for end byte (80h)
jp m,$042234     ; jp m,$0421fc     | 042D47 042D0F || 042D47 FA 34 22 04 7538            JP      M,FADD    ; Yes, so add and return
call $042234     ; call $0421fc     | 042D4B 042D13 || 042D4B CD 34 22 04 7539            CALL    FADD    ; No, so add
call $042a19     ; call $0429e1     | 042D4F 042D17 || 042D4F CD 19 2A 04 7540            CALL    DLOAD5_SPL   ; Load X from SP
ex (sp),ix       ; ex (sp),ix       | 042D53 042D1B || 042D53 DD E3       7541            EX      (SP), IX   ; IX: Points to the inline list of coefficients
jr $-$20         ; jr $-$20         | 042D55 042D1D || 042D55 18 DE       7542            JR      POLY1    ; And loop
inc a            ; inc a            | 042D57 042D1F || 042D57 3C          7551  POWR10:   INC     A
ex af,af'        ; ex af,af'        | 042D58 042D20 || 042D58 08          7552            EX      AF,AF'
push hl          ; push hl          | 042D59 042D21 || 042D59 E5          7553            PUSH    HL
exx              ; exx              | 042D5A 042D22 || 042D5A D9          7554            EXX
push hl          ; push hl          | 042D5B 042D23 || 042D5B E5          7555            PUSH    HL
exx              ; exx              | 042D5C 042D24 || 042D5C D9          7556            EXX
call $042673     ; call $04263b     | 042D5D 042D25 || 042D5D CD 73 26 04 7557            CALL    DONE
call $042c0f     ; call $042bd7     | 042D61 042D29 || 042D61 CD 0F 2C 04 7558            CALL    SWAP_FP
xor a            ; xor a            | 042D65 042D2D || 042D65 AF          7559            XOR     A
ex af,af'        ; ex af,af'        | 042D66 042D2E || 042D66 08          7560  POWR11:   EX      AF,AF'
dec a            ; dec a            | 042D67 042D2F || 042D67 3D          7561            DEC     A
jr z,$+$28       ; jr z,$+$28       | 042D68 042D30 || 042D68 28 26       7562            JR      Z,POWR14        ;EXIT TYPE 1
jp p,$042d72     ; jp p,$042d3a     | 042D6A 042D32 || 042D6A F2 72 2D 04 7563            JP      P,POWR13
cp c             ; cp c             | 042D6E 042D36 || 042D6E B9          7564            CP      C
jr c,$+$21       ; jr c,$+$21       | 042D6F 042D37 || 042D6F 38 1F       7565            JR      C,POWR14        ;EXIT TYPE 2
inc a            ; inc a            | 042D71 042D39 || 042D71 3C          7566            INC     A
ex af,af'        ; ex af,af'        | 042D72 042D3A || 042D72 08          7567  POWR13:   EX      AF,AF'
inc a            ; inc a            | 042D73 042D3B || 042D73 3C          7568            INC     A
set 7,h          ; set 7,h          | 042D74 042D3C || 042D74 CB FC       7569            SET     7,H
call $042c95     ; call $042c5d     | 042D76 042D3E || 042D76 CD 95 2C 04 7570            CALL    X5
jr nc,$+$08      ; jr nc,$+$08      | 042D7A 042D42 || 042D7A 30 06       7571            JR      NC,POWR12
ex af,af'        ; ex af,af'        | 042D7C 042D44 || 042D7C 08          7572            EX      AF,AF'
call $042ccf     ; call $042c97     | 042D7D 042D45 || 042D7D CD CF 2C 04 7573            CALL    D2C
ex af,af'        ; ex af,af'        | 042D81 042D49 || 042D81 08          7574            EX      AF,AF'
ex af,af'        ; ex af,af'        | 042D82 042D4A || 042D82 08          7575  POWR12:   EX      AF,AF'
call c,$042bf7   ; call c,$042bbf   | 042D83 042D4B || 042D83 DC F7 2B 04 7576            CALL    C,ADD1_FP          ;ROUND UP
inc c            ; inc c            | 042D87 042D4F || 042D87 0C          7577            INC     C
jp m,$042d66     ; jp m,$042d2e     | 042D88 042D50 || 042D88 FA 66 2D 04 7578            JP      M,POWR11
jp $042c26       ; jp $042bee       | 042D8C 042D54 || 042D8C C3 26 2C 04 7579            JP      OFLOW
call $042c0f     ; call $042bd7     | 042D90 042D58 || 042D90 CD 0F 2C 04 7580  POWR14:   CALL    SWAP_FP
res 7,d          ; res 7,d          | 042D94 042D5C || 042D94 CB BA       7581            RES     7,D
exx              ; exx              | 042D96 042D5E || 042D96 D9          7582            EXX
pop hl           ; pop hl           | 042D97 042D5F || 042D97 E1          7583            POP     HL
exx              ; exx              | 042D98 042D60 || 042D98 D9          7584            EXX
pop hl           ; pop hl           | 042D99 042D61 || 042D99 E1          7585            POP     HL
ex af,af'        ; ex af,af'        | 042D9A 042D62 || 042D9A 08          7586            EX      AF,AF'
ret              ; ret              | 042D9B 042D63 || 042D9B C9          7587            RET
or a             ; or a             | 042D9C 042D64 || 042D9C B7          7595  DIVA:   OR      A               ;CLEAR CARRY
sbc.sil hl,bc    ; sbc.sil hl,bc    | 042D9D 042D65 || 042D9D 52 ED 42    7597     SBC.S   HL,BC           ;DIVIDEND-DIVISOR
exx              ; exx              | 042DA0 042D68 || 042DA0 D9          7598            EXX
sbc.sil hl,bc    ; sbc.sil hl,bc    | 042DA1 042D69 || 042DA1 52 ED 42    7599            SBC.S   HL,BC
exx              ; exx              | 042DA4 042D6C || 042DA4 D9          7600            EXX
jr nc,$+$09      ; jr nc,$+$09      | 042DA5 042D6D || 042DA5 30 07       7601            JR      NC,DIV1
add.sil hl,bc    ; add.sil hl,bc    | 042DA7 042D6F || 042DA7 52 09       7602            ADD.S   HL,BC           ;DIVIDEND+DIVISOR
exx              ; exx              | 042DA9 042D71 || 042DA9 D9          7603            EXX
adc.sil hl,bc    ; adc.sil hl,bc    | 042DAA 042D72 || 042DAA 52 ED 4A    7604            ADC.S   HL,BC
exx              ; exx              | 042DAD 042D75 || 042DAD D9          7605            EXX
ccf              ; ccf              | 042DAE 042D76 || 042DAE 3F          7606  DIV1:   CCF
rl e             ; rl e             | 042DAF 042D77 || 042DAF CB 13       7607  DIVC:   RL      E               ;SHIFT RESULT INTO DE
rl d             ; rl d             | 042DB1 042D79 || 042DB1 CB 12       7608            RL      D
exx              ; exx              | 042DB3 042D7B || 042DB3 D9          7609            EXX
rl e             ; rl e             | 042DB4 042D7C || 042DB4 CB 13       7610            RL      E
rl d             ; rl d             | 042DB6 042D7E || 042DB6 CB 12       7611            RL      D
exx              ; exx              | 042DB8 042D80 || 042DB8 D9          7612            EXX
inc a            ; inc a            | 042DB9 042D81 || 042DB9 3C          7613            INC     A
ret p            ; ret p            | 042DBA 042D82 || 042DBA F0          7614            RET     P
adc.sil hl,hl    ; adc.sil hl,hl    | 042DBB 042D83 || 042DBB 52 ED 6A    7616     ADC.S   HL,HL           ;DIVIDEND*2
exx              ; exx              | 042DBE 042D86 || 042DBE D9          7617            EXX
adc.sil hl,hl    ; adc.sil hl,hl    | 042DBF 042D87 || 042DBF 52 ED 6A    7618            ADC.S   HL,HL
exx              ; exx              | 042DC2 042D8A || 042DC2 D9          7619            EXX
jr nc,$-$26      ; jr nc,$-$26      | 042DC3 042D8B || 042DC3 30 D8       7620            JR      NC,DIV0
or a             ; or a             | 042DC5 042D8D || 042DC5 B7          7621            OR      A
sbc.sil hl,bc    ; sbc.sil hl,bc    | 042DC6 042D8E || 042DC6 52 ED 42    7622            SBC.S   HL,BC           ;DIVIDEND-DIVISOR
exx              ; exx              | 042DC9 042D91 || 042DC9 D9          7623            EXX
sbc.sil hl,bc    ; sbc.sil hl,bc    | 042DCA 042D92 || 042DCA 52 ED 42    7624            SBC.S   HL,BC
exx              ; exx              | 042DCD 042D95 || 042DCD D9          7625            EXX
scf              ; scf              | 042DCE 042D96 || 042DCE 37          7626            SCF
jp $042daf       ; jp $042d77       | 042DCF 042D97 || 042DCF C3 AF 2D 04 7627            JP      DIVC
or a             ; or a             | 042DD3 042D9B || 042DD3 B7          7635  MULA:   OR      A               ;CLEAR CARRY
exx              ; exx              | 042DD4 042D9C || 042DD4 D9          7636  MUL0:   EXX
rr d             ; rr d             | 042DD5 042D9D || 042DD5 CB 1A       7637            RR      D               ;MULTIPLIER/2
rr e             ; rr e             | 042DD7 042D9F || 042DD7 CB 1B       7638            RR      E
exx              ; exx              | 042DD9 042DA1 || 042DD9 D9          7639            EXX
rr d             ; rr d             | 042DDA 042DA2 || 042DDA CB 1A       7640            RR      D
rr e             ; rr e             | 042DDC 042DA4 || 042DDC CB 1B       7641            RR      E
jr nc,$+$09      ; jr nc,$+$09      | 042DDE 042DA6 || 042DDE 30 07       7642            JR      NC,MUL1
add.sil hl,bc    ; add.sil hl,bc    | 042DE0 042DA8 || 042DE0 52 09       7643            ADD.S   HL,BC           ;ADD IN MULTIPLICAND
exx              ; exx              | 042DE2 042DAA || 042DE2 D9          7644            EXX
adc.sil hl,bc    ; adc.sil hl,bc    | 042DE3 042DAB || 042DE3 52 ED 4A    7645            ADC.S   HL,BC
exx              ; exx              | 042DE6 042DAE || 042DE6 D9          7646            EXX
inc a            ; inc a            | 042DE7 042DAF || 042DE7 3C          7647  MUL1:   INC     A
ret p            ; ret p            | 042DE8 042DB0 || 042DE8 F0          7648            RET     P
exx              ; exx              | 042DE9 042DB1 || 042DE9 D9          7649  MULB:   EXX
rr h             ; rr h             | 042DEA 042DB2 || 042DEA CB 1C       7650            RR      H               ;PRODUCT/2
rr l             ; rr l             | 042DEC 042DB4 || 042DEC CB 1D       7651            RR      L
exx              ; exx              | 042DEE 042DB6 || 042DEE D9          7652            EXX
rr h             ; rr h             | 042DEF 042DB7 || 042DEF CB 1C       7653            RR      H
rr l             ; rr l             | 042DF1 042DB9 || 042DF1 CB 1D       7654            RR      L
jp $042dd4       ; jp $042d9c       | 042DF3 042DBB || 042DF3 C3 D4 2D 04 7655            JP      MUL0
sbc.sil hl,bc    ; sbc.sil hl,bc    | 042DF7 042DBF || 042DF7 52 ED 42    7664     SBC.S   HL,BC
exx              ; exx              | 042DFA 042DC2 || 042DFA D9          7665            EXX
sbc.sil hl,bc    ; sbc.sil hl,bc    | 042DFB 042DC3 || 042DFB 52 ED 42    7666            SBC.S   HL,BC
exx              ; exx              | 042DFE 042DC6 || 042DFE D9          7667            EXX
inc c            ; inc c            | 042DFF 042DC7 || 042DFF 0C          7668            INC     C
jr nc,$+$0b      ; jr nc,$+$0b      | 042E00 042DC8 || 042E00 30 09       7669            JR      NC,SQR2
dec c            ; dec c            | 042E02 042DCA || 042E02 0D          7670            DEC     C
add.sil hl,bc    ; add.sil hl,bc    | 042E03 042DCB || 042E03 52 09       7671            ADD.S   HL,BC
exx              ; exx              | 042E05 042DCD || 042E05 D9          7672            EXX
adc.sil hl,bc    ; adc.sil hl,bc    | 042E06 042DCE || 042E06 52 ED 4A    7673            ADC.S   HL,BC
exx              ; exx              | 042E09 042DD1 || 042E09 D9          7674            EXX
dec c            ; dec c            | 042E0A 042DD2 || 042E0A 0D          7675            DEC     C
inc a            ; inc a            | 042E0B 042DD3 || 042E0B 3C          7676  SQR2:   INC     A
ret p            ; ret p            | 042E0C 042DD4 || 042E0C F0          7677            RET     P
sla c            ; sla c            | 042E0D 042DD5 || 042E0D CB 21       7678  SQRA:   SLA     C
rl b             ; rl b             | 042E0F 042DD7 || 042E0F CB 10       7679            RL      B
exx              ; exx              | 042E11 042DD9 || 042E11 D9          7680            EXX
rl c             ; rl c             | 042E12 042DDA || 042E12 CB 11       7681            RL      C
rl b             ; rl b             | 042E14 042DDC || 042E14 CB 10       7682            RL      B
exx              ; exx              | 042E16 042DDE || 042E16 D9          7683            EXX
inc c            ; inc c            | 042E17 042DDF || 042E17 0C          7684            INC     C
sla e            ; sla e            | 042E18 042DE0 || 042E18 CB 23       7685            SLA     E
rl d             ; rl d             | 042E1A 042DE2 || 042E1A CB 12       7686            RL      D
exx              ; exx              | 042E1C 042DE4 || 042E1C D9          7687            EXX
rl e             ; rl e             | 042E1D 042DE5 || 042E1D CB 13       7688            RL      E
rl d             ; rl d             | 042E1F 042DE7 || 042E1F CB 12       7689            RL      D
exx              ; exx              | 042E21 042DE9 || 042E21 D9          7690            EXX
adc.sil hl,hl    ; adc.sil hl,hl    | 042E22 042DEA || 042E22 52 ED 6A    7691            ADC.S   HL,HL
exx              ; exx              | 042E25 042DED || 042E25 D9          7692            EXX
adc.sil hl,hl    ; adc.sil hl,hl    | 042E26 042DEE || 042E26 52 ED 6A    7693            ADC.S   HL,HL
exx              ; exx              | 042E29 042DF1 || 042E29 D9          7694            EXX
sla e            ; sla e            | 042E2A 042DF2 || 042E2A CB 23       7695            SLA     E
rl d             ; rl d             | 042E2C 042DF4 || 042E2C CB 12       7696            RL      D
exx              ; exx              | 042E2E 042DF6 || 042E2E D9          7697            EXX
rl e             ; rl e             | 042E2F 042DF7 || 042E2F CB 13       7698            RL      E
rl d             ; rl d             | 042E31 042DF9 || 042E31 CB 12       7699            RL      D
exx              ; exx              | 042E33 042DFB || 042E33 D9          7700            EXX
adc.sil hl,hl    ; adc.sil hl,hl    | 042E34 042DFC || 042E34 52 ED 6A    7701            ADC.S   HL,HL
exx              ; exx              | 042E37 042DFF || 042E37 D9          7702            EXX
adc.sil hl,hl    ; adc.sil hl,hl    | 042E38 042E00 || 042E38 52 ED 6A    7703            ADC.S   HL,HL
exx              ; exx              | 042E3B 042E03 || 042E3B D9          7704            EXX
jp nc,$042df7    ; jp nc,$042dbf    | 042E3C 042E04 || 042E3C D2 F7 2D 04 7705            JP      NC,SQR1
or a             ; or a             | 042E40 042E08 || 042E40 B7          7706  SQR3:   OR      A
sbc.sil hl,bc    ; sbc.sil hl,bc    | 042E41 042E09 || 042E41 52 ED 42    7707            SBC.S   HL,BC
exx              ; exx              | 042E44 042E0C || 042E44 D9          7708            EXX
sbc.sil hl,bc    ; sbc.sil hl,bc    | 042E45 042E0D || 042E45 52 ED 42    7709            SBC.S   HL,BC
exx              ; exx              | 042E48 042E10 || 042E48 D9          7710            EXX
inc c            ; inc c            | 042E49 042E11 || 042E49 0C          7711            INC     C
jp $042e0b       ; jp $042dd3       | 042E4A 042E12 || 042E4A C3 0B 2E 04 7712            JP      SQR2
add.sil hl,hl    ; add.sil hl,hl    | 042E4E 042E16 || 042E4E 52 29       7715     ADD.S   HL,HL
exx              ; exx              | 042E50 042E18 || 042E50 D9          7716            EXX
adc.sil hl,hl    ; adc.sil hl,hl    | 042E51 042E19 || 042E51 52 ED 6A    7717            ADC.S   HL,HL
exx              ; exx              | 042E54 042E1C || 042E54 D9          7718            EXX
jr c,$-$15       ; jr c,$-$15       | 042E55 042E1D || 042E55 38 E9       7719            JR      C,SQR3
inc a            ; inc a            | 042E57 042E1F || 042E57 3C          7720            INC     A
inc c            ; inc c            | 042E58 042E20 || 042E58 0C          7721            INC     C
sbc.sil hl,bc    ; sbc.sil hl,bc    | 042E59 042E21 || 042E59 52 ED 42    7722            SBC.S   HL,BC
exx              ; exx              | 042E5C 042E24 || 042E5C D9          7723            EXX
sbc.sil hl,bc    ; sbc.sil hl,bc    | 042E5D 042E25 || 042E5D 52 ED 42    7724            SBC.S   HL,BC
exx              ; exx              | 042E60 042E28 || 042E60 D9          7725            EXX
ret nc           ; ret nc           | 042E61 042E29 || 042E61 D0          7726            RET     NC
add.sil hl,bc    ; add.sil hl,bc    | 042E62 042E2A || 042E62 52 09       7727            ADD.S   HL,BC
exx              ; exx              | 042E64 042E2C || 042E64 D9          7728            EXX
adc.sil hl,bc    ; adc.sil hl,bc    | 042E65 042E2D || 042E65 52 ED 4A    7729            ADC.S   HL,BC
exx              ; exx              | 042E68 042E30 || 042E68 D9          7730            EXX
dec c            ; dec c            | 042E69 042E31 || 042E69 0D          7731            DEC     C
ret              ; ret              | 042E6A 042E32 || 042E6A C9          7732            RET
ld a,(ix)        ; ld a,(ix)        | 042E6B 042E33 || 042E6B DD 7E 00    7734  DIGITQ:   LD      A,(IX)
cp $3a           ; cp $3a           | 042E6E 042E36 || 042E6E FE 3A       7735            CP      '9'+1
ccf              ; ccf              | 042E70 042E38 || 042E70 3F          7736            CCF
ret c            ; ret c            | 042E71 042E39 || 042E71 D8          7737            RET     C
cp $30           ; cp $30           | 042E72 042E3A || 042E72 FE 30       7738            CP      '0'
ret              ; ret              | 042E74 042E3C || 042E74 C9          7739            RET
ld a,(ix)        ; ld a,(ix)        | 042E75 042E3D || 042E75 DD 7E 00    7741  SIGNQ:   LD      A,(IX)
inc ix           ; inc ix           | 042E78 042E40 || 042E78 DD 23       7742            INC     IX
cp $20           ; cp $20           | 042E7A 042E42 || 042E7A FE 20       7743            CP      ' '
jr z,$-$07       ; jr z,$-$07       | 042E7C 042E44 || 042E7C 28 F7       7744            JR      Z,SIGNQ
cp $2b           ; cp $2b           | 042E7E 042E46 || 042E7E FE 2B       7745            CP      '+'
ret z            ; ret z            | 042E80 042E48 || 042E80 C8          7746            RET     Z
cp $2d           ; cp $2d           | 042E81 042E49 || 042E81 FE 2D       7747            CP      '-'
ret z            ; ret z            | 042E83 042E4B || 042E83 C8          7748            RET     Z
dec ix           ; dec ix           | 042E84 042E4C || 042E84 DD 2B       7749            DEC     IX
ret              ; ret              | 042E86 042E4E || 042E86 C9          7750            RET; --- End fpp.asm ---
call $043e2c     ; call $043df4     | 042E87 042E4F || 042E87 CD 2C 3E 04 7775  GPIOB_SETMODE:  CALL SWITCH_A
sbc a,a          ;                  | 042E8B        || 042E8B 9F 2E       7776     DW GPIOB_M0 ; Output
ld l,$c4         ;                  | 042E8C        || 
ld l,$e4         ;                  | 042E8E        || 
ld l,$04         ;                  | 042E90        || 
cpl              ;                  | 042E92        || 
rra              ;                  | 042E93        || 042E93 1F 2F       7780     DW GPIOB_M4 ; Interrupt, Dual Edge
cpl              ;                  | 042E94        || 
ld c,e           ;                  | 042E95        || 042E95 4B 2F       7781     DW GPIOB_M5 ; Alt Function
cpl              ;                  | 042E96        || 
ld h,(hl)        ;                  | 042E97        || 042E97 66 2F       7782     DW GPIOB_M6 ; Interrupt, Active Low
cpl              ;                  | 042E98        || 
adc a,l          ;                  | 042E99        || 042E99 8D 2F       7783     DW GPIOB_M7 ; Interrupt, Active High
cpl              ;                  | 042E9A        || 
xor a            ;                  | 042E9B        || 042E9B AF 2F       7784     DW GPIOB_M8 ; Interrupt, Falling Edge
cpl              ;                  | 042E9C        || 
pop de           ;                  | 042E9D        || 042E9D D1 2F       7785     DW GPIOB_M9 ; Interrupt, Rising Edge
cpl              ;                  | 042E9E        || cpl                            ; 042E66
push bc          ; push bc          | 042E9F 042E67 || 042E9F C5          0001M   PUSH BC
ld a,b           ; ld a,b           | 042EA0 042E68 || 042EA0 78          0002M   LD A, val
cpl              ; cpl              | 042EA1 042E69 || 042EA1 2F          0003M   CPL
ld c,a           ; ld c,a           | 042EA2 042E6A || 042EA2 4F          0004M   LD C, A
in0 a,($9b)      ; in0 a,($9b)      | 042EA3 042E6B || 042EA3 ED 38 9B    0005M   IN0 A, (reg)
and c            ; and c            | 042EA6 042E6E || 042EA6 A1          0006M   AND C
out0 ($9b),a     ; out0 ($9b),a     | 042EA7 042E6F || 042EA7 ED 39 9B    0007M   OUT0 (reg), A
pop bc           ; pop bc           | 042EAA 042E72 || 042EAA C1          0008M   POP BC
push bc          ; push bc          | 042EAB 042E73 || 042EAB C5          0001M   PUSH BC
ld a,b           ; ld a,b           | 042EAC 042E74 || 042EAC 78          0002M   LD A, val
cpl              ; cpl              | 042EAD 042E75 || 042EAD 2F          0003M   CPL
ld c,a           ; ld c,a           | 042EAE 042E76 || 042EAE 4F          0004M   LD C, A
in0 a,($9c)      ; in0 a,($9c)      | 042EAF 042E77 || 042EAF ED 38 9C    0005M   IN0 A, (reg)
and c            ; and c            | 042EB2 042E7A || 042EB2 A1          0006M   AND C
out0 ($9c),a     ; out0 ($9c),a     | 042EB3 042E7B || 042EB3 ED 39 9C    0007M   OUT0 (reg), A
pop bc           ; pop bc           | 042EB6 042E7E || 042EB6 C1          0008M   POP BC
push bc          ; push bc          | 042EB7 042E7F || 042EB7 C5          0001M   PUSH BC
ld a,b           ; ld a,b           | 042EB8 042E80 || 042EB8 78          0002M   LD A, val
cpl              ; cpl              | 042EB9 042E81 || 042EB9 2F          0003M   CPL
ld c,a           ; ld c,a           | 042EBA 042E82 || 042EBA 4F          0004M   LD C, A
in0 a,($9d)      ; in0 a,($9d)      | 042EBB 042E83 || 042EBB ED 38 9D    0005M   IN0 A, (reg)
and c            ; and c            | 042EBE 042E86 || 042EBE A1          0006M   AND C
out0 ($9d),a     ; out0 ($9d),a     | 042EBF 042E87 || 042EBF ED 39 9D    0007M   OUT0 (reg), A
pop bc           ; pop bc           | 042EC2 042E8A || 042EC2 C1          0008M   POP BC
ret              ; ret              | 042EC3 042E8B || 042EC3 C9          7792     RET
in0 a,($9b)      ; in0 a,($9b)      | 042EC4 042E8C || 042EC4 ED 38 9B    0001M   IN0 A, (reg)
or b             ; or b             | 042EC7 042E8F || 042EC7 B0          0002M   OR val
out0 ($9b),a     ; out0 ($9b),a     | 042EC8 042E90 || 042EC8 ED 39 9B    0003M   OUT0 (reg), A
push bc          ; push bc          | 042ECB 042E93 || 042ECB C5          0001M   PUSH BC
ld a,b           ; ld a,b           | 042ECC 042E94 || 042ECC 78          0002M   LD A, val
cpl              ; cpl              | 042ECD 042E95 || 042ECD 2F          0003M   CPL
ld c,a           ; ld c,a           | 042ECE 042E96 || 042ECE 4F          0004M   LD C, A
in0 a,($9c)      ; in0 a,($9c)      | 042ECF 042E97 || 042ECF ED 38 9C    0005M   IN0 A, (reg)
and c            ; and c            | 042ED2 042E9A || 042ED2 A1          0006M   AND C
out0 ($9c),a     ; out0 ($9c),a     | 042ED3 042E9B || 042ED3 ED 39 9C    0007M   OUT0 (reg), A
pop bc           ; pop bc           | 042ED6 042E9E || 042ED6 C1          0008M   POP BC
push bc          ; push bc          | 042ED7 042E9F || 042ED7 C5          0001M   PUSH BC
ld a,b           ; ld a,b           | 042ED8 042EA0 || 042ED8 78          0002M   LD A, val
cpl              ; cpl              | 042ED9 042EA1 || 042ED9 2F          0003M   CPL
ld c,a           ; ld c,a           | 042EDA 042EA2 || 042EDA 4F          0004M   LD C, A
in0 a,($9d)      ; in0 a,($9d)      | 042EDB 042EA3 || 042EDB ED 38 9D    0005M   IN0 A, (reg)
and c            ; and c            | 042EDE 042EA6 || 042EDE A1          0006M   AND C
out0 ($9d),a     ; out0 ($9d),a     | 042EDF 042EA7 || 042EDF ED 39 9D    0007M   OUT0 (reg), A
pop bc           ; pop bc           | 042EE2 042EAA || 042EE2 C1          0008M   POP BC
ret              ; ret              | 042EE3 042EAB || 042EE3 C9          7799     RET
push bc          ; push bc          | 042EE4 042EAC || 042EE4 C5          0001M   PUSH BC
ld a,b           ; ld a,b           | 042EE5 042EAD || 042EE5 78          0002M   LD A, val
cpl              ; cpl              | 042EE6 042EAE || 042EE6 2F          0003M   CPL
ld c,a           ; ld c,a           | 042EE7 042EAF || 042EE7 4F          0004M   LD C, A
in0 a,($9b)      ; in0 a,($9b)      | 042EE8 042EB0 || 042EE8 ED 38 9B    0005M   IN0 A, (reg)
and c            ; and c            | 042EEB 042EB3 || 042EEB A1          0006M   AND C
out0 ($9b),a     ; out0 ($9b),a     | 042EEC 042EB4 || 042EEC ED 39 9B    0007M   OUT0 (reg), A
pop bc           ; pop bc           | 042EEF 042EB7 || 042EEF C1          0008M   POP BC
in0 a,($9c)      ; in0 a,($9c)      | 042EF0 042EB8 || 042EF0 ED 38 9C    0001M   IN0 A, (reg)
or b             ; or b             | 042EF3 042EBB || 042EF3 B0          0002M   OR val
out0 ($9c),a     ; out0 ($9c),a     | 042EF4 042EBC || 042EF4 ED 39 9C    0003M   OUT0 (reg), A
push bc          ; push bc          | 042EF7 042EBF || 042EF7 C5          0001M   PUSH BC
ld a,b           ; ld a,b           | 042EF8 042EC0 || 042EF8 78          0002M   LD A, val
cpl              ; cpl              | 042EF9 042EC1 || 042EF9 2F          0003M   CPL
ld c,a           ; ld c,a           | 042EFA 042EC2 || 042EFA 4F          0004M   LD C, A
in0 a,($9d)      ; in0 a,($9d)      | 042EFB 042EC3 || 042EFB ED 38 9D    0005M   IN0 A, (reg)
and c            ; and c            | 042EFE 042EC6 || 042EFE A1          0006M   AND C
out0 ($9d),a     ; out0 ($9d),a     | 042EFF 042EC7 || 042EFF ED 39 9D    0007M   OUT0 (reg), A
pop bc           ; pop bc           | 042F02 042ECA || 042F02 C1          0008M   POP BC
ret              ; ret              | 042F03 042ECB || 042F03 C9          7806     RET
in0 a,($9b)      ; in0 a,($9b)      | 042F04 042ECC || 042F04 ED 38 9B    0001M   IN0 A, (reg)
or b             ; or b             | 042F07 042ECF || 042F07 B0          0002M   OR val
out0 ($9b),a     ; out0 ($9b),a     | 042F08 042ED0 || 042F08 ED 39 9B    0003M   OUT0 (reg), A
in0 a,($9c)      ; in0 a,($9c)      | 042F0B 042ED3 || 042F0B ED 38 9C    0001M   IN0 A, (reg)
or b             ; or b             | 042F0E 042ED6 || 042F0E B0          0002M   OR val
out0 ($9c),a     ; out0 ($9c),a     | 042F0F 042ED7 || 042F0F ED 39 9C    0003M   OUT0 (reg), A
push bc          ; push bc          | 042F12 042EDA || 042F12 C5          0001M   PUSH BC
ld a,b           ; ld a,b           | 042F13 042EDB || 042F13 78          0002M   LD A, val
cpl              ; cpl              | 042F14 042EDC || 042F14 2F          0003M   CPL
ld c,a           ; ld c,a           | 042F15 042EDD || 042F15 4F          0004M   LD C, A
in0 a,($9d)      ; in0 a,($9d)      | 042F16 042EDE || 042F16 ED 38 9D    0005M   IN0 A, (reg)
and c            ; and c            | 042F19 042EE1 || 042F19 A1          0006M   AND C
out0 ($9d),a     ; out0 ($9d),a     | 042F1A 042EE2 || 042F1A ED 39 9D    0007M   OUT0 (reg), A
pop bc           ; pop bc           | 042F1D 042EE5 || 042F1D C1          0008M   POP BC
ret              ; ret              | 042F1E 042E8B || 042F1E C9          7813     RET
in0 a,($9a)      ; in0 a,($9b)      | 042F1F 042E8C || 042F1F ED 38 9A    0001M   IN0 A, (reg)
or b             ; or b             | 042F22 042E8F || 042F22 B0          0002M   OR val
out0 ($9a),a     ; out0 ($9b),a     | 042F23 042E90 || 042F23 ED 39 9A    0003M   OUT0 (reg), A
push bc          ; push bc          | 042F26 042E93 || 042F26 C5          0001M   PUSH BC
ld a,b           ; ld a,b           | 042F27 042E94 || 042F27 78          0002M   LD A, val
cpl              ; cpl              | 042F28 042E95 || 042F28 2F          0003M   CPL
ld c,a           ; ld c,a           | 042F29 042E96 || 042F29 4F          0004M   LD C, A
in0 a,($9b)      ; in0 a,($9c)      | 042F2A 042E97 || 042F2A ED 38 9B    0005M   IN0 A, (reg)
and c            ; and c            | 042F2D 042E9A || 042F2D A1          0006M   AND C
out0 ($9b),a     ; out0 ($9c),a     | 042F2E 042E9B || 042F2E ED 39 9B    0007M   OUT0 (reg), A
pop bc           ; pop bc           | 042F31 042E9E || 042F31 C1          0008M   POP BC
push bc          ; push bc          | 042F32 042E9F || 042F32 C5          0001M   PUSH BC
ld a,b           ; ld a,b           | 042F33 042EA0 || 042F33 78          0002M   LD A, val
cpl              ; cpl              | 042F34 042EA1 || 042F34 2F          0003M   CPL
ld c,a           ; ld c,a           | 042F35 042EA2 || 042F35 4F          0004M   LD C, A
in0 a,($9c)      ; in0 a,($9c)      | 042F36 042E77 || 042F36 ED 38 9C    0005M   IN0 A, (reg)
and c            ; and c            | 042F39 042E7A || 042F39 A1          0006M   AND C
out0 ($9c),a     ; out0 ($9c),a     | 042F3A 042E7B || 042F3A ED 39 9C    0007M   OUT0 (reg), A
pop bc           ; pop bc           | 042F3D 042E7E || 042F3D C1          0008M   POP BC
push bc          ; push bc          | 042F3E 042E7F || 042F3E C5          0001M   PUSH BC
ld a,b           ; ld a,b           | 042F3F 042E80 || 042F3F 78          0002M   LD A, val
cpl              ; cpl              | 042F40 042E81 || 042F40 2F          0003M   CPL
ld c,a           ; ld c,a           | 042F41 042E82 || 042F41 4F          0004M   LD C, A
in0 a,($9d)      ; in0 a,($9d)      | 042F42 042E83 || 042F42 ED 38 9D    0005M   IN0 A, (reg)
and c            ; and c            | 042F45 042E86 || 042F45 A1          0006M   AND C
out0 ($9d),a     ; out0 ($9d),a     | 042F46 042E87 || 042F46 ED 39 9D    0007M   OUT0 (reg), A
pop bc           ; pop bc           | 042F49 042E8A || 042F49 C1          0008M   POP BC
ret              ; ret              | 042F4A 042E8B || 042F4A C9          7821     RET
in0 a,($9b)      ; in0 a,($9b)      | 042F4B 042E8C || 042F4B ED 38 9B    0001M   IN0 A, (reg)
or b             ; or b             | 042F4E 042E8F || 042F4E B0          0002M   OR val
out0 ($9b),a     ; out0 ($9b),a     | 042F4F 042E90 || 042F4F ED 39 9B    0003M   OUT0 (reg), A
push bc          ; push bc          | 042F52 042F1A || 042F52 C5          0001M   PUSH BC
ld a,b           ; ld a,b           | 042F53 042F1B || 042F53 78          0002M   LD A, val
cpl              ; cpl              | 042F54 042F1C || 042F54 2F          0003M   CPL
ld c,a           ; ld c,a           | 042F55 042F1D || 042F55 4F          0004M   LD C, A
in0 a,($9c)      ; in0 a,($9c)      | 042F56 042F1E || 042F56 ED 38 9C    0005M   IN0 A, (reg)
and c            ; and c            | 042F59 042F21 || 042F59 A1          0006M   AND C
out0 ($9c),a     ; out0 ($9c),a     | 042F5A 042F22 || 042F5A ED 39 9C    0007M   OUT0 (reg), A
pop bc           ; pop bc           | 042F5D 042F25 || 042F5D C1          0008M   POP BC
in0 a,($9d)      ; in0 a,($9d)      | 042F5E 042F26 || 042F5E ED 38 9D    0001M   IN0 A, (reg)
or b             ; or b             | 042F61 042F29 || 042F61 B0          0002M   OR val
out0 ($9d),a     ; out0 ($9d),a     | 042F62 042F2A || 042F62 ED 39 9D    0003M   OUT0 (reg), A
ret              ; ret              | 042F65 042F2D || 042F65 C9          7828     RET
push bc          ; push bc          | 042F66 042F2E || 042F66 C5          0001M   PUSH BC
ld a,b           ; ld a,b           | 042F67 042F2F || 042F67 78          0002M   LD A, val
cpl              ; cpl              | 042F68 042F30 || 042F68 2F          0003M   CPL
ld c,a           ; ld c,a           | 042F69 042F31 || 042F69 4F          0004M   LD C, A
in0 a,($9a)      ; in0 a,($9a)      | 042F6A 042F32 || 042F6A ED 38 9A    0005M   IN0 A, (reg)
and c            ; and c            | 042F6D 042F35 || 042F6D A1          0006M   AND C
out0 ($9a),a     ; out0 ($9a),a     | 042F6E 042F36 || 042F6E ED 39 9A    0007M   OUT0 (reg), A
pop bc           ; pop bc           | 042F71 042F39 || 042F71 C1          0008M   POP BC
push bc          ; push bc          | 042F72 042F3A || 042F72 C5          0001M   PUSH BC
ld a,b           ; ld a,b           | 042F73 042F3B || 042F73 78          0002M   LD A, val
cpl              ; cpl              | 042F74 042F3C || 042F74 2F          0003M   CPL
ld c,a           ; ld c,a           | 042F75 042F3D || 042F75 4F          0004M   LD C, A
in0 a,($9b)      ; in0 a,($9b)      | 042F76 042F3E || 042F76 ED 38 9B    0005M   IN0 A, (reg)
and c            ; and c            | 042F79 042F41 || 042F79 A1          0006M   AND C
out0 ($9b),a     ; out0 ($9b),a     | 042F7A 042F42 || 042F7A ED 39 9B    0007M   OUT0 (reg), A
pop bc           ; pop bc           | 042F7D 042F45 || 042F7D C1          0008M   POP BC
in0 a,($9c)      ; in0 a,($9c)      | 042F7E 042F46 || 042F7E ED 38 9C    0001M   IN0 A, (reg)
or b             ; or b             | 042F81 042F49 || 042F81 B0          0002M   OR val
out0 ($9c),a     ; out0 ($9c),a     | 042F82 042F4A || 042F82 ED 39 9C    0003M   OUT0 (reg), A
in0 a,($9d)      ; in0 a,($9d)      | 042F85 042F4D || 042F85 ED 38 9D    0001M   IN0 A, (reg)
or b             ; or b             | 042F88 042F50 || 042F88 B0          0002M   OR val
out0 ($9d),a     ; out0 ($9d),a     | 042F89 042F51 || 042F89 ED 39 9D    0003M   OUT0 (reg), A
ret              ; ret              | 042F8C 042F54 || 042F8C C9          7836     RET
in0 a,($9a)      ; in0 a,($9a)      | 042F8D 042F55 || 042F8D ED 38 9A    0001M   IN0 A, (reg)
or b             ; or b             | 042F90 042F58 || 042F90 B0          0002M   OR val
out0 ($9a),a     ; out0 ($9a),a     | 042F91 042F59 || 042F91 ED 39 9A    0003M   OUT0 (reg), A
push bc          ; push bc          | 042F94 042F5C || 042F94 C5          0001M   PUSH BC
ld a,b           ; ld a,b           | 042F95 042F5D || 042F95 78          0002M   LD A, val
cpl              ; cpl              | 042F96 042F5E || 042F96 2F          0003M   CPL
ld c,a           ; ld c,a           | 042F97 042F5F || 042F97 4F          0004M   LD C, A
in0 a,($9b)      ; in0 a,($9b)      | 042F98 042F60 || 042F98 ED 38 9B    0005M   IN0 A, (reg)
and c            ; and c            | 042F9B 042F63 || 042F9B A1          0006M   AND C
out0 ($9b),a     ; out0 ($9b),a     | 042F9C 042F64 || 042F9C ED 39 9B    0007M   OUT0 (reg), A
pop bc           ; pop bc           | 042F9F 042F67 || 042F9F C1          0008M   POP BC
in0 a,($9c)      ; in0 a,($9c)      | 042FA0 042F68 || 042FA0 ED 38 9C    0001M   IN0 A, (reg)
or b             ; or b             | 042FA3 042F6B || 042FA3 B0          0002M   OR val
out0 ($9c),a     ; out0 ($9c),a     | 042FA4 042F6C || 042FA4 ED 39 9C    0003M   OUT0 (reg), A
in0 a,($9d)      ; in0 a,($9d)      | 042FA7 042F6F || 042FA7 ED 38 9D    0001M   IN0 A, (reg)
or b             ; or b             | 042FAA 042F72 || 042FAA B0          0002M   OR val
out0 ($9d),a     ; out0 ($9d),a     | 042FAB 042F73 || 042FAB ED 39 9D    0003M   OUT0 (reg), A
ret              ; ret              | 042FAE 042F76 || 042FAE C9          7845     RET
push bc          ; push bc          | 042FAF 042F77 || 042FAF C5          0001M   PUSH BC
ld a,b           ; ld a,b           | 042FB0 042F78 || 042FB0 78          0002M   LD A, val
cpl              ; cpl              | 042FB1 042F79 || 042FB1 2F          0003M   CPL
ld c,a           ; ld c,a           | 042FB2 042F7A || 042FB2 4F          0004M   LD C, A
in0 a,($9a)      ; in0 a,($9a)      | 042FB3 042F7B || 042FB3 ED 38 9A    0005M   IN0 A, (reg)
and c            ; and c            | 042FB6 042F7E || 042FB6 A1          0006M   AND C
out0 ($9a),a     ; out0 ($9a),a     | 042FB7 042F7F || 042FB7 ED 39 9A    0007M   OUT0 (reg), A
pop bc           ; pop bc           | 042FBA 042F82 || 042FBA C1          0008M   POP BC
in0 a,($9b)      ; in0 a,($9b)      | 042FBB 042F83 || 042FBB ED 38 9B    0001M   IN0 A, (reg)
or b             ; or b             | 042FBE 042F86 || 042FBE B0          0002M   OR val
out0 ($9b),a     ; out0 ($9b),a     | 042FBF 042F87 || 042FBF ED 39 9B    0003M   OUT0 (reg), A
in0 a,($9c)      ; in0 a,($9c)      | 042FC2 042F8A || 042FC2 ED 38 9C    0001M   IN0 A, (reg)
or b             ; or b             | 042FC5 042F8D || 042FC5 B0          0002M   OR val
out0 ($9c),a     ; out0 ($9c),a     | 042FC6 042F8E || 042FC6 ED 39 9C    0003M   OUT0 (reg), A
in0 a,($9d)      ; in0 a,($9d)      | 042FC9 042F91 || 042FC9 ED 38 9D    0001M   IN0 A, (reg)
or b             ; or b             | 042FCC 042F94 || 042FCC B0          0002M   OR val
out0 ($9d),a     ; out0 ($9d),a     | 042FCD 042F95 || 042FCD ED 39 9D    0003M   OUT0 (reg), A
ret              ; ret              | 042FD0 042F98 || 042FD0 C9          7854     RET
in0 a,($9a)      ; in0 a,($9a)      | 042FD1 042F99 || 042FD1 ED 38 9A    0001M   IN0 A, (reg)
or b             ; or b             | 042FD4 042F9C || 042FD4 B0          0002M   OR val
out0 ($9a),a     ; out0 ($9a),a     | 042FD5 042F9D || 042FD5 ED 39 9A    0003M   OUT0 (reg), A
in0 a,($9b)      ; in0 a,($9b)      | 042FD8 042FA0 || 042FD8 ED 38 9B    0001M   IN0 A, (reg)
or b             ; or b             | 042FDB 042FA3 || 042FDB B0          0002M   OR val
out0 ($9b),a     ; out0 ($9b),a     | 042FDC 042FA4 || 042FDC ED 39 9B    0003M   OUT0 (reg), A
in0 a,($9c)      ; in0 a,($9c)      | 042FDF 042FA7 || 042FDF ED 38 9C    0001M   IN0 A, (reg)
or b             ; or b             | 042FE2 042FAA || 042FE2 B0          0002M   OR val
out0 ($9c),a     ; out0 ($9c),a     | 042FE3 042FAB || 042FE3 ED 39 9C    0003M   OUT0 (reg), A
in0 a,($9d)      ; in0 a,($9d)      | 042FE6 042FAE || 042FE6 ED 38 9D    0001M   IN0 A, (reg)
or b             ; or b             | 042FE9 042FB1 || 042FE9 B0          0002M   OR val
out0 ($9d),a     ; out0 ($9d),a     | 042FEA 042FB2 || 042FEA ED 39 9D    0003M   OUT0 (reg), A
ret              ; ret              | 042FED 042FB5 || 042FED C9          7862     RET ; --- End gpio.asm ---
ld hl,$044a00    ; ld hl,$044a00    | 042FEE 042FB6 || 042FEE 21 00 4A 04 8037  _main:   LD HL, ACCS  ; Clear the ACCS
ld (hl),$00      ; ld (hl),$00      | 042FF2 042FBA || 042FF2 36 00       8038     LD (HL), 0
ld a,c           ; ld a,c           | 042FF4 042FBC || 042FF4 79          8039     LD A, C
cp $02           ; cp $02           | 042FF5 042FBD || 042FF5 FE 02       8040     CP 2
jr z,$+$2f       ; jr z,$+$2f       | 042FF7 042FBF || 042FF7 28 2D       8041     JR Z, AUTOLOAD  ; 2 parameters = autoload
jr c,$+$41       ; jr c,$+$41       | 042FF9 042FC1 || 042FF9 38 3F       8042     JR C, COLD   ; 1 parameter = normal start
call $044081     ; call $044038     | 042FFB 042FC3 || 042FFB CD 81 40 04 8043     CALL STAR_VERSION
call $043dc8     ; call $043d90     | 042FFF 042FC7 || 042FFF CD C8 3D 04 8044     CALL TELL
ld d,l           ; ld d,l           | 043003 042FCB || 043003 55 73 61 67 8045     DB "Usage:\n\r"
ld (hl),e        ;                  | 043004        || ld (hl),e                      ; 042FCC
ld h,c           ;                  | 043005        || ld h,c                         ; 042FCD
ld h,a           ;                  | 043006        || ld h,a                         ; 042FCE
ld h,l           ;                  | 043007        || ld h,l                         ; 042FCF
ld a,($520d0a)   ;                  | 043008        || ld a,($520d0a)                 ; 042FD0
ld d,l           ;                  | 04300C        || ld d,l                         ; 042FD4
ld c,(hl)        ;                  | 04300D        || ld c,(hl)                      ; 042FD5
jr nz,$+$30      ;                  | 04300E        || jr nz,$+$30                    ; 042FD6
jr nz,$+$3e      ;                  | 043010        || jr nz,$+$3e                    ; 042FD8
ld h,(hl)        ;                  | 043012        || ld h,(hl)                      ; 042FDA
ld l,c           ;                  | 043013        || ld l,c                         ; 042FDB
ld l,h           ;                  | 043014        || ld l,h                         ; 042FDC
ld h,l           ;                  | 043015        || ld h,l                         ; 042FDD
ld l,(hl)        ;                  | 043016        || ld l,(hl)                      ; 042FDE
ld h,c           ;                  | 043017        || ld h,c                         ; 042FDF
ld l,l           ;                  | 043018        || ld l,l                         ; 042FE0
ld h,l           ;                  | 043019        || ld h,l                         ; 042FE1
ld a,$0a         ;                  | 04301A        || ld a,$0a                       ; 042FE2
dec c            ;                  | 04301C        || dec c                          ; 042FE4
nop              ;                  | 04301D        || nop                            ; 042FE5
ld hl,$000000    ; ld hl,$000000    | 04301E 042FE6 || 04301E 21 00 00 00 8047     LD HL, 0   ; The error code
jp $040068       ; jp $040068       | 043022 042FEA || 043022 C3 68 00 04 8048     JP _end
ld hl,(ix+$03)   ; ld hl,(ix+$03)   | 043026 042FEE || 043026 DD 27 03    8050  AUTOLOAD:  LD HL, (IX+3)  ; HLU: Address of filename
ld de,$044a00    ; ld de,$044a00    | 043029 042FF1 || 043029 11 00 4A 04 8051     LD DE, ACCS  ;  DE: Destination address
ld a,(hl)        ; ld a,(hl)        | 04302D 042FF5 || 04302D 7E          8052  AUTOLOAD_1:  LD A, (HL)   ; Fetch the filename byte
ld (de),a        ; ld (de),a        | 04302E 042FF6 || 04302E 12          8053     LD (DE), A   ;
inc hl           ; inc hl           | 04302F 042FF7 || 04302F 23          8054     INC HL   ; Increase the source pointer
inc e            ; inc e            | 043030 042FF8 || 043030 1C          8055     INC E   ; We only need to increase E as ACCS is on a page boundary
jr z,$+$05       ; jr z,$+$05       | 043031 042FF9 || 043031 28 03       8056     JR Z, AUTOLOAD_2  ; End if we hit the page boundary
or a             ; or a             | 043033 042FFB || 043033 B7          8057     OR A
jr nz,$-$07      ; jr nz,$-$07      | 043034 042FFC || 043034 20 F7       8058     JR NZ, AUTOLOAD_1  ; Loop until we hit a 0 byte
dec e            ; dec e            | 043036 042FFE || 043036 1D          8059  AUTOLOAD_2:  DEC E
ld a,$0d         ; ld a,$0d         | 043037 042FFF || 043037 3E 0D       8060     LD A, CR
ld (de),a        ; ld (de),a        | 043039 043001 || 043039 12          8061     LD (DE), A   ; Replace the 0 byte with a CR for BBC BASIC
pop hl           ; pop hl           | 04303A 043002 || 04303A E1          8063  COLD:   POP HL   ; Pop the return address to init off SPS
push hl          ; push hl          | 04303B 043003 || 04303B E5          8064     PUSH HL    ; Stack it on SPL (*BYE will use this as the return address)
ld hl,$044c00    ; ld hl,$044c00    | 04303C 043004 || 04303C 21 00 4C 04 8065     LD HL, STAVAR  ; Cold start
ld sp,hl         ; ld sp,hl         | 043040 043008 || 043040 F9          8066     LD SP, HL
ld (hl),$0a      ; ld (hl),$0a      | 043041 043009 || 043041 36 0A       8067     LD (HL), 10
inc hl           ; inc hl           | 043043 04300B || 043043 23          8068     INC HL
ld (hl),$09      ; ld (hl),$09      | 043044 04300C || 043044 36 09       8069     LD (HL),9
call $043fb9     ; call $043f81     | 043046 04300E || 043046 CD B9 3F 04 8070     CALL    OSINIT   ; Call the machine specific OS initialisation routines
ld ($044d20),de  ; ld ($044d20),de  | 04304A 043012 || 04304A ED 53 20 4D 8071     LD      (HIMEM),DE  ; This returns HIMEM (ramtop) in DE - store in the HIMEM sysvar
ld ($044d14),hl  ; ld ($044d14),hl  | 04304F 043017 || 04304F 22 14 4D 04 8072     LD      (PAGE_),HL  ; And PAGE in HL (where BASIC program storage starts) - store in PAGE sysvar
ld a,$b7         ; ld a,$b7         | 043053 04301B || 043053 3E B7       8073     LD      A,B7H            ; Set LISTO sysvar; the bottom nibble is LISTO (7), top nibble is OPT (B)
ld ($044d40),a   ; ld ($044d40),a   | 043055 04301D || 043055 32 40 4D 04 8074     LD      (LISTON),A
ld hl,$043094    ; ld hl,$04305c    | 043059 043021 || 043059 21 94 30 04 8075     LD      HL,NOTICE
ld ($044d2f),hl  ; ld ($044d2f),hl  | 04305D 043025 || 04305D 22 2F 4D 04 8076     LD      (ERRTXT),HL
call $0438a4     ; call $04386c     | 043061 043029 || 043061 CD A4 38 04 8077     CALL    NEWIT   ; From what I can determine, NEWIT always returns with Z flag set
ld a,($044a00)   ; ld a,($044a00)   | 043065 04302D || 043065 3A 00 4A 04 8078     LD A,(ACCS)  ; Check if there is a filename in ACCS
or a             ; or a             | 043069 043031 || 043069 B7          8079     OR A
jp nz,$040b5b    ; jp nz,$040b53    | 04306A 043032 || 04306A C2 5B 0B 04 8080     JP NZ,CHAIN0  ; Yes, so load and run
call $044081     ; call $044038     | 04306E 043036 || 04306E CD 81 40 04 8081     CALL STAR_VERSION  ;
call $043dc8     ; call $043d90     | 043072 04303A || 043072 CD C8 3D 04 8082     CALL    TELL   ; Output the welcome message
ld b,d           ; ld b,d           | 043076 04303E || 043076 42 42 43 20 8083     DB     "BBC BASIC (Z80) Version 3.00\n\r"
ld b,d           ;                  | 043077        || ld b,d                         ; 04303F
ld b,e           ;                  | 043078        || ld b,e                         ; 043040
jr nz,$+$44      ;                  | 043079        || jr nz,$+$44                    ; 043041
ld b,c           ;                  | 04307B        || ld b,c                         ; 043043
ld d,e           ;                  | 04307C        || ld d,e                         ; 043044
ld.lis b,e       ;                  | 04307D        || ld.lis b,e                     ; 043045
jr nz,$+$2a      ;                  | 04307F        || jr nz,$+$2a                    ; 043047
ld e,d           ;                  | 043081        || ld e,d                         ; 043049
jr c,$+$32       ;                  | 043082        || jr c,$+$32                     ; 04304A
add hl,hl        ;                  | 043084        || add hl,hl                      ; 04304C
jr nz,$+$58      ;                  | 043085        || jr nz,$+$58                    ; 04304D
ld h,l           ;                  | 043087        || ld h,l                         ; 04304F
ld (hl),d        ;                  | 043088        || ld (hl),d                      ; 043050
ld (hl),e        ;                  | 043089        || ld (hl),e                      ; 043051
ld l,c           ;                  | 04308A        || ld l,c                         ; 043052
ld l,a           ;                  | 04308B        || ld l,a                         ; 043053
ld l,(hl)        ;                  | 04308C        || ld l,(hl)                      ; 043054
jr nz,$+$35      ;                  | 04308D        || jr nz,$+$35                    ; 043055
ld l,$30         ;                  | 04308F        || ld l,$30                       ; 043057
jr nc,$+$0c      ;                  | 043091        || jr nc,$+$0c                    ; 043059
dec c            ;                  | 043093        || dec c                          ; 04305B
jr z,$+$45       ; jr z,$+$45       | 043094 04305C || 043094 28 43 29 20 8084  NOTICE:   DB     "(C) Copyright R.T.Russell 1987\n\r"
add hl,hl        ;                  | 043096        || add hl,hl                      ; 04305E
jr nz,$+$45      ;                  | 043097        || jr nz,$+$45                    ; 04305F
ld l,a           ;                  | 043099        || ld l,a                         ; 043061
ld (hl),b        ;                  | 04309A        || ld (hl),b                      ; 043062
ld a,c           ;                  | 04309B        || ld a,c                         ; 043063
ld (hl),d        ;                  | 04309C        || ld (hl),d                      ; 043064
ld l,c           ;                  | 04309D        || ld l,c                         ; 043065
ld h,a           ;                  | 04309E        || ld h,a                         ; 043066
ld l,b           ;                  | 04309F        || ld l,b                         ; 043067
ld (hl),h        ;                  | 0430A0        || ld (hl),h                      ; 043068
jr nz,$+$54      ;                  | 0430A1        || jr nz,$+$54                    ; 043069
ld l,$54         ;                  | 0430A3        || ld l,$54                       ; 04306B
ld l,$52         ;                  | 0430A5        || ld l,$52                       ; 04306D
ld (hl),l        ;                  | 0430A7        || ld (hl),l                      ; 04306F
ld (hl),e        ;                  | 0430A8        || ld (hl),e                      ; 043070
ld (hl),e        ;                  | 0430A9        || ld (hl),e                      ; 043071
ld h,l           ;                  | 0430AA        || ld h,l                         ; 043072
ld l,h           ;                  | 0430AB        || ld l,h                         ; 043073
ld l,h           ;                  | 0430AC        || ld l,h                         ; 043074
jr nz,$+$33      ;                  | 0430AD        || jr nz,$+$33                    ; 043075
add hl,sp        ;                  | 0430AF        || add hl,sp                      ; 043077
jr c,$+$39       ;                  | 0430B0        || jr c,$+$39                     ; 043078
ld a,(bc)        ;                  | 0430B2        || ld a,(bc)                      ; 04307A
dec c            ;                  | 0430B3        || dec c                          ; 04307B
ld a,(bc)        ; ld a,(bc)        | 0430B4 04307C || 0430B4 0A 0D 00    8085     DB "\n\r", 0
dec c            ;                  | 0430B5        || dec c                          ; 04307D
nop              ;                  | 0430B6        || nop                            ; 04307E
or $37           ; or $37           | 0430B7 04307F || 0430B7 F6          8087  WARM:   DB  F6H   ; Opcode for OR? Maybe to CCF (the following SCF will be the operand)
ld sp,($044d20)  ; ld sp,($044d20)  | 0430B9 043081 || 0430B9 ED 7B 20 4D 8092     LD      SP,(HIMEM)
call $043f32     ; call $043efa     | 0430BE 043086 || 0430BE CD 32 3F 04 8093     CALL    PROMPT           ; Prompt user
ld hl,$044d40    ; ld hl,$044d40    | 0430C2 04308A || 0430C2 21 40 4D 04 8094     LD      HL,LISTON  ; Pointer to the LISTO/OPT sysvar
ld a,(hl)        ; ld a,(hl)        | 0430C6 04308E || 0430C6 7E          8095     LD      A,(HL)   ; Fetch the value
and $0f          ; and $0f          | 0430C7 04308F || 0430C7 E6 0F       8096     AND     0FH              ; Bottom nibble: LISTO
or $b0           ; or $b0           | 0430C9 043091 || 0430C9 F6 B0       8097     OR      B0H              ; Top nibble: Default to OPT (3) with ADL mode bit set to 1 for assembler
ld (hl),a        ; ld (hl),a        | 0430CB 043093 || 0430CB 77          8098     LD      (HL),A   ; Store back in
sbc hl,hl        ; sbc hl,hl        | 0430CC 043094 || 0430CC ED 62       8099     SBC     HL,HL            ; HL: 0
ld ($044d2c),hl  ; ld ($044d2c),hl  | 0430CE 043096 || 0430CE 22 2C 4D 04 8100     LD      (ERRTRP),HL  ; Clear ERRTRP sysvar
ld ($044d35),hl  ; ld ($044d35),hl  | 0430D2 04309A || 0430D2 22 35 4D 04 8101     LD      (ERRLIN),HL  ; Clear ERRLIN sysvar (ON ERROR)
ld hl,($044d29)  ; ld hl,($044d29)  | 0430D6 04309E || 0430D6 2A 29 4D 04 8103     LD      HL,(AUTONO)  ; Get the auto line number
ld ($044d23),hl  ; ld ($044d23),hl  | 0430DA 0430A2 || 0430DA 22 23 4D 04 8104     LD      (LINENO),HL  ; Store in line number
ld a,h           ; ld a,h           | 0430DE 0430A6 || 0430DE 7C          8105     LD      A,H   ; If the auto line number is zero then
or l             ; or l             | 0430DF 0430A7 || 0430DF B5          8106     OR      L
jr z,$+$20       ; jr z,$+$20       | 0430E0 0430A8 || 0430E0 28 1E       8107     JR      Z,NOAUTO  ; We're not auto line numbering, so skip the next bit
push hl          ; push hl          | 0430E2 0430AA || 0430E2 E5          8111     PUSH    HL   ; Stack the line number
call $043a33     ; call $0439fb     | 0430E3 0430AB || 0430E3 CD 33 3A 04 8112     CALL    PBCD              ; Output the line number
pop hl           ; pop hl           | 0430E7 0430AF || 0430E7 E1          8113     POP     HL   ; Pop the line number back off the stack
ld bc,$000000    ; ld bc,$000000    | 0430E8 0430B0 || 0430E8 01 00 00 00 8116     LD BC, 0   ; Load BC with Increment
ld a,($044d41)   ; ld a,($044d41)   | 0430EC 0430B4 || 0430EC 3A 41 4D 04 8117     LD A,(INCREM)
ld c,a           ; ld c,a           | 0430F0 0430B8 || 0430F0 4F          8118     LD C, A
add hl,bc        ; add hl,bc        | 0430F1 0430B9 || 0430F1 09          8119     ADD     HL,BC   ; Add the increment to the line number
jp c,$043c5d     ; jp c,$043c25     | 0430F2 0430BA || 0430F2 DA 5D 3C 04 8120     JP      C,TOOBIG  ; And error if we wrap
ld ($044d29),hl  ; ld ($044d29),hl  | 0430F6 0430BE || 0430F6 22 29 4D 04 8121     LD      (AUTONO),HL  ; Store the new auto line number
ld a,$20         ; ld a,$20         | 0430FA 0430C2 || 0430FA 3E 20       8122     LD      A,' '   ; Print a space
call $043987     ; call $04394f     | 0430FC 0430C4 || 0430FC CD 87 39 04 8123     CALL    OUTCHR
ld hl,$044a00    ; ld hl,$044a00    | 043100 0430C8 || 043100 21 00 4A 04 8127  NOAUTO:   LD      HL,ACCS   ; Storage for the line editor (256 bytes)
call $043e97     ; call $043e5f     | 043104 0430CC || 043104 CD 97 3E 04 8128     CALL    OSLINE           ; Call the line editor in MOS
call $043114     ; call $0430dc     | 043108 0430D0 || 043108 CD 14 31 04 8129  ONEDIT:   CALL ONEDIT1   ; Enter the line into memory
call c,$043877   ; call c,$04383f   | 04310C 0430D4 || 04310C DC 77 38 04 8130     CALL    C,CLEAN   ; Set TOP, write out &FFFF end of program marker
jp $0430b8       ; jp $043080       | 043110 0430D8 || 043110 C3 B8 30 04 8131     JP      CLOOP   ; Jump back to immediate mode
xor a            ; xor a            | 043114 0430DC || 043114 AF          8138  ONEDIT1:  XOR     A   ; Entry point after *EDIT
ld ($044d3d),a   ; ld ($044d3d),a   | 043115 0430DD || 043115 32 3D 4D 04 8139     LD      (COUNT),A
ld iy,$044a00    ; ld iy,$044a00    | 043119 0430E1 || 043119 FD 21 00 4A 8140     LD      IY,ACCS
call $043c31     ; call $043bf9     | 04311E 0430E6 || 04311E CD 31 3C 04 8141     CALL    LINNUM   ; HL: The line number from the input buffer
call $040a78     ; call $040a70     | 043122 0430EA || 043122 CD 78 0A 04 8142     CALL    NXT   ; Skip spaces
ld a,h           ; ld a,h           | 043126 0430EE || 043126 7C          8143     LD      A,H   ; HL: The line number will be 0 for immediate mode or when auto line numbering is used
or l             ; or l             | 043127 0430EF || 043127 B5          8144     OR      L
jr z,$+$06       ; jr z,$+$06       | 043128 0430F0 || 043128 28 04       8145     JR      Z,LNZERO         ; Skip if there is no line number in the input buffer
ld ($044d23),hl  ; ld ($044d23),hl  | 04312A 0430F2 || 04312A 22 23 4D 04 8146     LD      (LINENO),HL  ; Otherwise store it
ld c,$01         ; ld c,$01         | 04312E 0430F6 || 04312E 0E 01       8150  LNZERO:   LD C,1   ; Left mode
ld de,$044b00    ; ld de,$044b00    | 043130 0430F8 || 043130 11 00 4B 04 8151     LD      DE,BUFFER  ; Buffer for tokenised BASIC
call $043cd7     ; call $043c9f     | 043134 0430FC || 043134 CD D7 3C 04 8152     CALL    LEXAN2           ; Lexical analysis on the user input
ld (de),a        ; ld (de),a        | 043138 043100 || 043138 12          8153     LD      (DE),A           ; Terminator
xor a            ; xor a            | 043139 043101 || 043139 AF          8154     XOR     A
ld bc,$000000    ; ld bc,$000000    | 04313A 043102 || 04313A 01 00 00 00 8157     LD BC,0
ld c,e           ; ld c,e           | 04313E 043106 || 04313E 4B          8158     LD C,E   ; BC: Line length
inc de           ; inc de           | 04313F 043107 || 04313F 13          8159     INC     DE
ld (de),a        ; ld (de),a        | 043140 043108 || 043140 12          8160     LD      (DE),A           ; Zero next
ld hl,($044d23)  ; ld hl,($044d23)  | 043141 043109 || 043141 2A 23 4D 04 8161     LD      HL,(LINENO)  ; Get the line number
ld a,h           ; ld a,h           | 043145 04310D || 043145 7C          8162     LD      A,H   ; Is it zero, i.e. a command with no line number?
or l             ; or l             | 043146 04310E || 043146 B5          8163     OR      L
ld iy,$044b00    ; ld iy,$044b00    | 043147 04310F || 043147 FD 21 00 4B 8164     LD      IY,BUFFER        ; Yes, so we're in immediate mode
jp z,$040b9e     ; jp z,$040b96     | 04314C 043114 || 04314C CA 9E 0B 04 8165     JP      Z,XEQ            ; Execute it
push bc          ; push bc          | 043150 043118 || 043150 C5          8169     PUSH    BC
push hl          ; push hl          | 043151 043119 || 043151 E5          8170     PUSH    HL
call $043883     ; call $04384b     | 043152 04311A || 043152 CD 83 38 04 8171     CALL    SETTOP           ; Set TOP sysvar
pop hl           ; pop hl           | 043156 04311E || 043156 E1          8172     POP     HL
call $0439c7     ; call $04398f     | 043157 04311F || 043157 CD C7 39 04 8173     CALL    FINDL   ; Find the address of the line
call z,$04383a   ; call z,$043802   | 04315B 043123 || 04315B CC 3A 38 04 8174     CALL    Z,DEL   ; Delete the existing line if found
pop bc           ; pop bc           | 04315F 043127 || 04315F C1          8175     POP     BC
ld a,c           ; ld a,c           | 043160 043128 || 043160 79          8176     LD      A,C   ; Check for the line length being zero, i.e.
or a             ; or a             | 043161 043129 || 043161 B7          8177     OR      A   ; the user has just entered a line number in the command line
ret z            ; ret z            | 043162 04312A || 043162 C8          8178     RET Z            ; If so, then don't do anything else
add a,$04        ; add a,$04        | 043163 04312B || 043163 C6 04       8179     ADD     A,4
ld c,a           ; ld c,a           | 043165 04312D || 043165 4F          8180     LD      C,A              ; Length inclusive
push de          ; push de          | 043166 04312E || 043166 D5          8181     PUSH    DE               ; DE: Line number (fetched from the call to FINDL)
push bc          ; push bc          | 043167 04312F || 043167 C5          8182     PUSH    BC               ; BC: Line length
ex de,hl         ; ex de,hl         | 043168 043130 || 043168 EB          8183     EX      DE,HL   ; DE: Address of the line in memory
ld hl,($044d17)  ; ld hl,($044d17)  | 043169 043131 || 043169 2A 17 4D 04 8184     LD      HL,(TOP)  ; HL: TOP (the first free location after the end of the BASIC program)
push hl          ; push hl          | 04316D 043135 || 04316D E5          8185     PUSH    HL   ; Stack TOP (current TOP value)
add hl,bc        ; add hl,bc        | 04316E 043136 || 04316E 09          8186     ADD     HL,BC   ; Add the line length to HL, the new TOP value
push hl          ; push hl          | 04316F 043137 || 04316F E5          8187     PUSH    HL   ; Stack HL (new TOP value)
inc h            ; inc h            | 043170 043138 || 043170 24          8188     INC     H   ; Add 256 to HL
xor a            ; xor a            | 043171 043139 || 043171 AF          8189     XOR     A
sbc hl,sp        ; sbc hl,sp        | 043172 04313A || 043172 ED 72       8190     SBC     HL,SP   ; Check whether HL is in the same page as the current stack pointer
pop hl           ; pop hl           | 043174 04313C || 043174 E1          8191     POP     HL   ; Pop HL (new TOP value)
jp nc,$043798    ; jp nc,$043760    | 043175 04313D || 043175 D2 98 37 04 8192     JP      NC,ERROR_         ; If HL is in the stack page, then error: "No room"
ld ($044d17),hl  ; ld ($044d17),hl  | 043179 043141 || 043179 22 17 4D 04 8193     LD      (TOP),HL  ; Store new value of TOP
ex (sp),hl       ; ex (sp),hl       | 04317D 043145 || 04317D E3          8194     EX      (SP),HL   ; HL: TOP (current TOP value), top of stack now contains new TOP value
push hl          ; push hl          | 04317E 043146 || 04317E E5          8195     PUSH    HL   ; PUSH current TOP value
inc hl           ; inc hl           | 04317F 043147 || 04317F 23          8196     INC     HL
or a             ; or a             | 043180 043148 || 043180 B7          8197     OR      A
sbc hl,de        ; sbc hl,de        | 043181 043149 || 043181 ED 52       8198     SBC     HL,DE   ; DE: Address of the line in memory
ld b,h           ; ld b,h           | 043183 04314B || 043183 44          8199     LD      B,H              ; BC: Amount to move
ld c,l           ; ld c,l           | 043184 04314C || 043184 4D          8200     LD      C,L
pop hl           ; pop hl           | 043185 04314D || 043185 E1          8201     POP     HL   ; HL: Destination (current TOP value)
pop de           ; pop de           | 043186 04314E || 043186 D1          8202     POP     DE   ; DE: Source (new TOP value)
jr z,$+$04       ; jr z,$+$04       | 043187 04314F || 043187 28 02       8203     JR      Z,ATEND   ; If current TOP and new TOP are the same, i.e. adding a line at the end, then skip...
lddr             ; lddr             | 043189 043151 || 043189 ED B8       8204     LDDR                     ; Otherwise, make space for the new line in the program
pop bc           ; pop bc           | 04318B 043153 || 04318B C1          8205  ATEND:   POP     BC               ; BC: Line length
pop de           ; pop de           | 04318C 043154 || 04318C D1          8206     POP     DE               ; DE: Line number
inc hl           ; inc hl           | 04318D 043155 || 04318D 23          8207     INC     HL   ; HL: Destination address
ld (hl),c        ; ld (hl),c        | 04318E 043156 || 04318E 71          8208     LD      (HL),C           ; Store length
inc hl           ; inc hl           | 04318F 043157 || 04318F 23          8209     INC     HL
ld (hl),e        ; ld (hl),e        | 043190 043158 || 043190 73          8210     LD      (HL),E           ; Store line number
inc hl           ; inc hl           | 043191 043159 || 043191 23          8211     INC     HL
ld (hl),d        ; ld (hl),d        | 043192 04315A || 043192 72          8212     LD      (HL),D
inc hl           ; inc hl           | 043193 04315B || 043193 23          8213     INC     HL
ld de,$044b00    ; ld de,$044b00    | 043194 04315C || 043194 11 00 4B 04 8214     LD      DE,BUFFER  ; DE: Location of the new, tokenised line
ex de,hl         ; ex de,hl         | 043198 043160 || 043198 EB          8215     EX      DE,HL   ; HL: Location of the new, tokensied line, DE: Destination address in BASIC program
dec c            ; dec c            | 043199 043161 || 043199 0D          8216     DEC     C   ; Subtract 3 from the number of bytes to copy to
dec c            ; dec c            | 04319A 043162 || 04319A 0D          8217     DEC     C   ; compensate for the 3 bytes stored above (length and line number)
dec c            ; dec c            | 04319B 043163 || 04319B 0D          8218     DEC     C
ldir             ; ldir             | 04319C 043164 || 04319C ED B0       8219     LDIR                     ; Add the line to the BASIC program
scf              ; scf              | 04319E 043166 || 04319E 37          8220     SCF    ; To flag we need to call CLEAN
ret              ; ret              | 04319F 043167 || 04319F C9          8221     RET
add a,b          ; add a,b          | 0431A0 043168 || 0431A0 80 41 4E 44 8227  KEYWDS:   DB    80H, "AND"
ld b,c           ;                  | 0431A1        || ld b,c                         ; 043169
ld c,(hl)        ;                  | 0431A2        || ld c,(hl)                      ; 04316A
ld b,h           ;                  | 0431A3        || ld b,h                         ; 04316B
sub h            ; sub h            | 0431A4 04316C || 0431A4 94 41 42 53 8228     DB    94H, "ABS"
ld b,c           ;                  | 0431A5        || ld b,c                         ; 04316D
ld b,d           ;                  | 0431A6        || ld b,d                         ; 04316E
ld d,e           ;                  | 0431A7        || ld d,e                         ; 04316F
sub l            ; sub l            | 0431A8 043170 || 0431A8 95 41 43 53 8229     DB    95H, "ACS"
ld b,c           ;                  | 0431A9        || ld b,c                         ; 043171
ld b,e           ;                  | 0431AA        || ld b,e                         ; 043172
ld d,e           ;                  | 0431AB        || ld d,e                         ; 043173
sub (hl)         ; sub (hl)         | 0431AC 043174 || 0431AC 96 41 44 56 8230     DB    96H, "ADVAL"
ld b,c           ;                  | 0431AD        || ld b,c                         ; 043175
ld b,h           ;                  | 0431AE        || ld b,h                         ; 043176
ld d,(hl)        ;                  | 0431AF        || ld d,(hl)                      ; 043177
ld b,c           ;                  | 0431B0        || ld b,c                         ; 043178
ld c,h           ;                  | 0431B1        || ld c,h                         ; 043179
sub a            ; sub a            | 0431B2 04317A || 0431B2 97 41 53 43 8231     DB    97H, "ASC"
ld b,c           ;                  | 0431B3        || ld b,c                         ; 04317B
ld d,e           ;                  | 0431B4        || ld d,e                         ; 04317C
ld b,e           ;                  | 0431B5        || ld b,e                         ; 04317D
sbc a,b          ; sbc a,b          | 0431B6 04317E || 0431B6 98 41 53 4E 8232     DB    98H, "ASN"
ld b,c           ;                  | 0431B7        || ld b,c                         ; 04317F
ld d,e           ;                  | 0431B8        || ld d,e                         ; 043180
ld c,(hl)        ;                  | 0431B9        || ld c,(hl)                      ; 043181
sbc a,c          ; sbc a,c          | 0431BA 043182 || 0431BA 99 41 54 4E 8233     DB    99H, "ATN"
ld b,c           ;                  | 0431BB        || ld b,c                         ; 043183
ld d,h           ;                  | 0431BC        || ld d,h                         ; 043184
ld c,(hl)        ;                  | 0431BD        || ld c,(hl)                      ; 043185
add a,$41        ; add a,$41        | 0431BE 043186 || 0431BE C6 41 55 54 8234     DB    C6H, "AUTO"
ld d,l           ;                  | 0431C0        || ld d,l                         ; 043188
ld d,h           ;                  | 0431C1        || ld d,h                         ; 043189
ld c,a           ;                  | 0431C2        || ld c,a                         ; 04318A
sbc a,d          ; sbc a,d          | 0431C3 04318B || 0431C3 9A 42 47 45 8235     DB    9AH, "BGET", 0
ld b,d           ;                  | 0431C4        || ld b,d                         ; 04318C
ld b,a           ;                  | 0431C5        || ld b,a                         ; 04318D
ld b,l           ;                  | 0431C6        || ld b,l                         ; 04318E
ld d,h           ;                  | 0431C7        || ld d,h                         ; 04318F
nop              ;                  | 0431C8        || nop                            ; 043190
push de          ; push de          | 0431C9 043191 || 0431C9 D5 42 50 55 8236     DB    D5H, "BPUT", 0
ld b,d           ;                  | 0431CA        || ld b,d                         ; 043192
ld d,b           ;                  | 0431CB        || ld d,b                         ; 043193
ld d,l           ;                  | 0431CC        || ld d,l                         ; 043194
ld d,h           ;                  | 0431CD        || ld d,h                         ; 043195
nop              ;                  | 0431CE        || nop                            ; 043196
ei               ; ei               | 0431CF 043197 || 0431CF FB 43 4F 4C 8237     DB    FBH, "COLOUR"
ld b,e           ;                  | 0431D0        || ld b,e                         ; 043198
ld c,a           ;                  | 0431D1        || ld c,a                         ; 043199
ld c,h           ;                  | 0431D2        || ld c,h                         ; 04319A
ld c,a           ;                  | 0431D3        || ld c,a                         ; 04319B
ld d,l           ;                  | 0431D4        || ld d,l                         ; 04319C
ei.sil           ;                  | 0431D5        || ei.sil                         ; 04319D
ld b,e           ;                  | 0431D7        || ld b,e                         ; 04319F
ld c,a           ;                  | 0431D8        || ld c,a                         ; 0431A0
ld c,h           ;                  | 0431D9        || ld c,h                         ; 0431A1
ld c,a           ;                  | 0431DA        || ld c,a                         ; 0431A2
sub.sil $43      ;                  | 0431DB        || sub.sil $43                    ; 0431A3
ld b,c           ;                  | 0431DE        || ld b,c                         ; 0431A6
ld c,h           ;                  | 0431DF        || ld c,h                         ; 0431A7
ld c,h           ;                  | 0431E0        || ld c,h                         ; 0431A8
rst $10          ; rst $10          | 0431E1 0431A9 || 0431E1 D7 43 48 41 8240     DB    D7H, "CHAIN"
ld b,e           ;                  | 0431E2        || ld b,e                         ; 0431AA
ld c,b           ;                  | 0431E3        || ld c,b                         ; 0431AB
ld b,c           ;                  | 0431E4        || ld b,c                         ; 0431AC
ld.lis c,(hl)    ;                  | 0431E5        || ld.lis c,(hl)                  ; 0431AD
cp l             ; cp l             | 0431E7 0431AF || 0431E7 BD 43 48 52 8241     DB    BDH, "CHR$"
ld b,e           ;                  | 0431E8        || ld b,e                         ; 0431B0
ld c,b           ;                  | 0431E9        || ld c,b                         ; 0431B1
inc.sil h        ;                  | 0431EA        || inc.sil h                      ; 0431B2
ret c            ; ret c            | 0431EC 0431B4 || 0431EC D8 43 4C 45 8242     DB    D8H, "CLEAR", 0
ld b,e           ;                  | 0431ED        || ld b,e                         ; 0431B5
ld c,h           ;                  | 0431EE        || ld c,h                         ; 0431B6
ld b,l           ;                  | 0431EF        || ld b,l                         ; 0431B7
ld b,c           ;                  | 0431F0        || ld b,c                         ; 0431B8
nop.sil          ;                  | 0431F1        || nop.sil                        ; 0431B9
exx              ; exx              | 0431F3 0431BB || 0431F3 D9 43 4C 4F 8243     DB    D9H, "CLOSE", 0
ld b,e           ;                  | 0431F4        || ld b,e                         ; 0431BC
ld c,h           ;                  | 0431F5        || ld c,h                         ; 0431BD
ld c,a           ;                  | 0431F6        || ld c,a                         ; 0431BE
ld d,e           ;                  | 0431F7        || ld d,e                         ; 0431BF
ld b,l           ;                  | 0431F8        || ld b,l                         ; 0431C0
nop              ;                  | 0431F9        || nop                            ; 0431C1
jp c,$474c43     ; jp c,$474c43     | 0431FA 0431C2 || 0431FA DA 43 4C 47 8244     DB    DAH, "CLG", 0
nop              ;                  | 0431FE        || nop                            ; 0431C6
in a,($43)       ; in a,($43)       | 0431FF 0431C7 || 0431FF DB 43 4C 53 8245     DB    DBH, "CLS", 0
ld c,h           ;                  | 043201        || ld c,h                         ; 0431C9
ld d,e           ;                  | 043202        || ld d,e                         ; 0431CA
nop              ;                  | 043203        || nop                            ; 0431CB
sbc a,e          ; sbc a,e          | 043204 0431CC || 043204 9B 43 4F 53 8246     DB    9BH, "COS"
ld b,e           ;                  | 043205        || ld b,e                         ; 0431CD
ld c,a           ;                  | 043206        || ld c,a                         ; 0431CE
ld d,e           ;                  | 043207        || ld d,e                         ; 0431CF
sbc a,h          ; sbc a,h          | 043208 0431D0 || 043208 9C 43 4F 55 8247     DB    9CH, "COUNT", 0
ld b,e           ;                  | 043209        || ld b,e                         ; 0431D1
ld c,a           ;                  | 04320A        || ld c,a                         ; 0431D2
ld d,l           ;                  | 04320B        || ld d,l                         ; 0431D3
ld c,(hl)        ;                  | 04320C        || ld c,(hl)                      ; 0431D4
ld d,h           ;                  | 04320D        || ld d,h                         ; 0431D5
nop              ;                  | 04320E        || nop                            ; 0431D6
call c,$544144   ; call c,$544144   | 04320F 0431D7 || 04320F DC 44 41 54 8248     DB    DCH, "DATA"
ld b,c           ;                  | 043213        || ld b,c                         ; 0431DB
sbc a,l          ; sbc a,l          | 043214 0431DC || 043214 9D 44 45 47 8249     DB    9DH, "DEG"
ld b,h           ;                  | 043215        || ld b,h                         ; 0431DD
ld b,l           ;                  | 043216        || ld b,l                         ; 0431DE
ld b,a           ;                  | 043217        || ld b,a                         ; 0431DF
ld b,ixh         ; ld b,ixh         | 043218 0431E0 || 043218 DD 44 45 46 8250     DB    DDH, "DEF"
ld b,l           ;                  | 04321A        || ld b,l                         ; 0431E2
ld b,(hl)        ;                  | 04321B        || ld b,(hl)                      ; 0431E3
rst $00          ; rst $00          | 04321C 0431E4 || 04321C C7 44 45 4C 8251     DB    C7H, "DELETE"
ld b,h           ;                  | 04321D        || ld b,h                         ; 0431E5
ld b,l           ;                  | 04321E        || ld b,l                         ; 0431E6
ld c,h           ;                  | 04321F        || ld c,h                         ; 0431E7
ld b,l           ;                  | 043220        || ld b,l                         ; 0431E8
ld d,h           ;                  | 043221        || ld d,h                         ; 0431E9
ld b,l           ;                  | 043222        || ld b,l                         ; 0431EA
add a,c          ; add a,c          | 043223 0431EB || 043223 81 44 49 56 8252     DB    81H, "DIV"
ld b,h           ;                  | 043224        || ld b,h                         ; 0431EC
ld.lis d,(hl)    ;                  | 043225        || ld.lis d,(hl)                  ; 0431ED
sbc a,$44        ; sbc a,$44        | 043227 0431EF || 043227 DE 44 49 4D 8253     DB    DEH, "DIM"
ld.lis c,l       ;                  | 043229        || ld.lis c,l                     ; 0431F1
rst $18          ; rst $18          | 04322B 0431F3 || 04322B DF 44 52 41 8254     DB    DFH, "DRAW"
ld b,h           ;                  | 04322C        || ld b,h                         ; 0431F4
ld.sil b,c       ;                  | 04322D        || ld.sil b,c                     ; 0431F5
ld d,a           ;                  | 04322F        || ld d,a                         ; 0431F7
pop hl           ; pop hl           | 043230 0431F8 || 043230 E1 45 4E 44 8255     DB    E1H, "ENDPROC", 0
ld b,l           ;                  | 043231        || ld b,l                         ; 0431F9
ld c,(hl)        ;                  | 043232        || ld c,(hl)                      ; 0431FA
ld b,h           ;                  | 043233        || ld b,h                         ; 0431FB
ld d,b           ;                  | 043234        || ld d,b                         ; 0431FC
ld.sil c,a       ;                  | 043235        || ld.sil c,a                     ; 0431FD
ld b,e           ;                  | 043237        || ld b,e                         ; 0431FF
nop              ;                  | 043238        || nop                            ; 043200
ret po           ; ret po           | 043239 043201 || 043239 E0 45 4E 44 8256     DB    E0H, "END", 0
ld b,l           ;                  | 04323A        || ld b,l                         ; 043202
ld c,(hl)        ;                  | 04323B        || ld c,(hl)                      ; 043203
ld b,h           ;                  | 04323C        || ld b,h                         ; 043204
nop              ;                  | 04323D        || nop                            ; 043205
jp po,$564e45    ; jp po,$564e45    | 04323E 043206 || 04323E E2 45 4E 56 8257     DB    E2H, "ENVELOPE"
ld b,l           ;                  | 043242        || ld b,l                         ; 04320A
ld c,h           ;                  | 043243        || ld c,h                         ; 04320B
ld c,a           ;                  | 043244        || ld c,a                         ; 04320C
ld d,b           ;                  | 043245        || ld d,b                         ; 04320D
ld b,l           ;                  | 043246        || ld b,l                         ; 04320E
adc a,e          ; adc a,e          | 043247 04320F || 043247 8B 45 4C 53 8258     DB    8BH, "ELSE"
ld b,l           ;                  | 043248        || ld b,l                         ; 043210
ld c,h           ;                  | 043249        || ld c,h                         ; 043211
ld d,e           ;                  | 04324A        || ld d,e                         ; 043212
ld b,l           ;                  | 04324B        || ld b,l                         ; 043213
and b            ; and b            | 04324C 043214 || 04324C A0 45 56 41 8259     DB    A0H, "EVAL"
ld b,l           ;                  | 04324D        || ld b,l                         ; 043215
ld d,(hl)        ;                  | 04324E        || ld d,(hl)                      ; 043216
ld b,c           ;                  | 04324F        || ld b,c                         ; 043217
ld c,h           ;                  | 043250        || ld c,h                         ; 043218
sbc a,(hl)       ; sbc a,(hl)       | 043251 043219 || 043251 9E 45 52 4C 8260     DB    9EH, "ERL", 0
ld b,l           ;                  | 043252        || ld b,l                         ; 04321A
ld.sil c,h       ;                  | 043253        || ld.sil c,h                     ; 04321B
nop              ;                  | 043255        || nop                            ; 04321D
add a,l          ; add a,l          | 043256 04321E || 043256 85 45 52 52 8261     DB    85H, "ERROR"
ld b,l           ;                  | 043257        || ld b,l                         ; 04321F
noni.sil         ;                  | 043258        || noni.sil                       ; 043220
ld.sil c,a       ;                  | 043259        || ld.sil c,a                     ; 043221
push.sil bc      ;                  | 04325B        || push.sil bc                    ; 043223
ld b,l           ;                  | 04325D        || ld b,l                         ; 043225
ld c,a           ;                  | 04325E        || ld c,a                         ; 043226
ld b,(hl)        ;                  | 04325F        || ld b,(hl)                      ; 043227
nop              ;                  | 043260        || nop                            ; 043228
add a,d          ; add a,d          | 043261 043229 || 043261 82 45 4F 52 8263     DB    82H, "EOR"
ld b,l           ;                  | 043262        || ld b,l                         ; 04322A
ld c,a           ;                  | 043263        || ld c,a                         ; 04322B
sbc.sil a,a      ;                  | 043264        || sbc.sil a,a                    ; 04322C
ld b,l           ;                  | 043266        || ld b,l                         ; 04322E
noni.sil         ;                  | 043267        || noni.sil                       ; 04322F
nop.sil          ;                  | 043268        || nop.sil                        ; 043230
and c            ; and c            | 04326A 043232 || 04326A A1 45 58 50 8265     DB    A1H, "EXP"
ld b,l           ;                  | 04326B        || ld b,l                         ; 043233
ld e,b           ;                  | 04326C        || ld e,b                         ; 043234
ld d,b           ;                  | 04326D        || ld d,b                         ; 043235
and d            ; and d            | 04326E 043236 || 04326E A2 45 58 54 8266     DB    A2H, "EXT", 0
ld b,l           ;                  | 04326F        || ld b,l                         ; 043237
ld e,b           ;                  | 043270        || ld e,b                         ; 043238
ld d,h           ;                  | 043271        || ld d,h                         ; 043239
nop              ;                  | 043272        || nop                            ; 04323A
ex (sp),hl       ; ex (sp),hl       | 043273 04323B || 043273 E3 46 4F 52 8267     DB    E3H, "FOR"
ld b,(hl)        ;                  | 043274        || ld b,(hl)                      ; 04323C
ld c,a           ;                  | 043275        || ld c,a                         ; 04323D
and.sil e        ;                  | 043276        || and.sil e                      ; 04323E
ld b,(hl)        ;                  | 043278        || ld b,(hl)                      ; 043240
ld b,c           ;                  | 043279        || ld b,c                         ; 043241
ld c,h           ;                  | 04327A        || ld c,h                         ; 043242
ld d,e           ;                  | 04327B        || ld d,e                         ; 043243
ld b,l           ;                  | 04327C        || ld b,l                         ; 043244
nop              ;                  | 04327D        || nop                            ; 043245
and h            ; and h            | 04327E 043246 || 04327E A4 46 4E    8269     DB    A4H, "FN"
ld b,(hl)        ;                  | 04327F        || ld b,(hl)                      ; 043247
ld c,(hl)        ;                  | 043280        || ld c,(hl)                      ; 043248
push hl          ; push hl          | 043281 043249 || 043281 E5 47 4F 54 8270     DB    E5H, "GOTO"
ld b,a           ;                  | 043282        || ld b,a                         ; 04324A
ld c,a           ;                  | 043283        || ld c,a                         ; 04324B
ld d,h           ;                  | 043284        || ld d,h                         ; 04324C
ld c,a           ;                  | 043285        || ld c,a                         ; 04324D
cp (hl)          ; cp (hl)          | 043286 04324E || 043286 BE 47 45 54 8271     DB    BEH, "GET$"
ld b,a           ;                  | 043287        || ld b,a                         ; 04324F
ld b,l           ;                  | 043288        || ld b,l                         ; 043250
ld d,h           ;                  | 043289        || ld d,h                         ; 043251
inc h            ;                  | 04328A        || inc h                          ; 043252
and l            ; and l            | 04328B 043253 || 04328B A5 47 45 54 8272     DB    A5H, "GET"
ld b,a           ;                  | 04328C        || ld b,a                         ; 043254
ld b,l           ;                  | 04328D        || ld b,l                         ; 043255
ld d,h           ;                  | 04328E        || ld d,h                         ; 043256
call po,$534f47  ; call po,$534f47  | 04328F 043257 || 04328F E4 47 4F 53 8273     DB    E4H, "GOSUB"
ld d,l           ;                  | 043293        || ld d,l                         ; 04325B
ld b,d           ;                  | 043294        || ld b,d                         ; 04325C
and $47          ; and $47          | 043295 04325D || 043295 E6 47 43 4F 8274     DB    E6H, "GCOL"
ld b,e           ;                  | 043297        || ld b,e                         ; 04325F
ld c,a           ;                  | 043298        || ld c,a                         ; 043260
ld c,h           ;                  | 043299        || ld c,h                         ; 043261
sub e            ; sub e            | 04329A 043262 || 04329A 93 48 49 4D 8275     DB    93H, "HIMEM", 0
ld c,b           ;                  | 04329B        || ld c,b                         ; 043263
ld.lis c,l       ;                  | 04329C        || ld.lis c,l                     ; 043264
ld b,l           ;                  | 04329E        || ld b,l                         ; 043266
ld c,l           ;                  | 04329F        || ld c,l                         ; 043267
nop              ;                  | 0432A0        || nop                            ; 043268
ret pe           ; ret pe           | 0432A1 043269 || 0432A1 E8 49 4E 50 8276     DB    E8H, "INPUT"
ld.lis c,(hl)    ;                  | 0432A2        || ld.lis c,(hl)                  ; 04326A
ld d,b           ;                  | 0432A4        || ld d,b                         ; 04326C
ld d,l           ;                  | 0432A5        || ld d,l                         ; 04326D
ld d,h           ;                  | 0432A6        || ld d,h                         ; 04326E
rst $20          ; rst $20          | 0432A7 04326F || 0432A7 E7 49 46    8277     DB    E7H, "IF"
ld.lis b,(hl)    ;                  | 0432A8        || ld.lis b,(hl)                  ; 043270
cp a             ; cp a             | 0432AA 043272 || 0432AA BF 49 4E 4B 8278     DB    BFH, "INKEY$"
ld.lis c,(hl)    ;                  | 0432AB        || ld.lis c,(hl)                  ; 043273
ld c,e           ;                  | 0432AD        || ld c,e                         ; 043275
ld b,l           ;                  | 0432AE        || ld b,l                         ; 043276
ld e,c           ;                  | 0432AF        || ld e,c                         ; 043277
inc h            ;                  | 0432B0        || inc h                          ; 043278
and (hl)         ; and (hl)         | 0432B1 043279 || 0432B1 A6 49 4E 4B 8279     DB    A6H, "INKEY"
ld.lis c,(hl)    ;                  | 0432B2        || ld.lis c,(hl)                  ; 04327A
ld c,e           ;                  | 0432B4        || ld c,e                         ; 04327C
ld b,l           ;                  | 0432B5        || ld b,l                         ; 04327D
ld e,c           ;                  | 0432B6        || ld e,c                         ; 04327E
xor b            ; xor b            | 0432B7 04327F || 0432B7 A8 49 4E 54 8280     DB    A8H, "INT"
ld.lis c,(hl)    ;                  | 0432B8        || ld.lis c,(hl)                  ; 043280
ld d,h           ;                  | 0432BA        || ld d,h                         ; 043282
and a            ; and a            | 0432BB 043283 || 0432BB A7 49 4E 53 8281     DB    A7H, "INSTR("
ld.lis c,(hl)    ;                  | 0432BC        || ld.lis c,(hl)                  ; 043284
ld d,e           ;                  | 0432BE        || ld d,e                         ; 043286
ld d,h           ;                  | 0432BF        || ld d,h                         ; 043287
jr.sil z,$-$34   ;                  | 0432C0        || jr.sil z,$-$34                 ; 043288
ld c,h           ;                  | 0432C3        || ld c,h                         ; 04328B
ld.lis d,e       ;                  | 0432C4        || ld.lis d,e                     ; 04328C
ld d,h           ;                  | 0432C6        || ld d,h                         ; 04328E
add a,(hl)       ; add a,(hl)       | 0432C7 04328F || 0432C7 86 4C 49 4E 8283     DB    86H, "LINE"
ld c,h           ;                  | 0432C8        || ld c,h                         ; 043290
ld.lis c,(hl)    ;                  | 0432C9        || ld.lis c,(hl)                  ; 043291
ld b,l           ;                  | 0432CB        || ld b,l                         ; 043293
ret z            ; ret z            | 0432CC 043294 || 0432CC C8 4C 4F 41 8284     DB    C8H, "LOAD"
ld c,h           ;                  | 0432CD        || ld c,h                         ; 043295
ld c,a           ;                  | 0432CE        || ld c,a                         ; 043296
ld b,c           ;                  | 0432CF        || ld b,c                         ; 043297
ld b,h           ;                  | 0432D0        || ld b,h                         ; 043298
sub d            ; sub d            | 0432D1 043299 || 0432D1 92 4C 4F 4D 8285     DB    92H, "LOMEM", 0
ld c,h           ;                  | 0432D2        || ld c,h                         ; 04329A
ld c,a           ;                  | 0432D3        || ld c,a                         ; 04329B
ld c,l           ;                  | 0432D4        || ld c,l                         ; 04329C
ld b,l           ;                  | 0432D5        || ld b,l                         ; 04329D
ld c,l           ;                  | 0432D6        || ld c,l                         ; 04329E
nop              ;                  | 0432D7        || nop                            ; 04329F
jp pe,$434f4c    ; jp pe,$434f4c    | 0432D8 0432A0 || 0432D8 EA 4C 4F 43 8286     DB    EAH, "LOCAL"
ld b,c           ;                  | 0432DC        || ld b,c                         ; 0432A4
ld c,h           ;                  | 0432DD        || ld c,h                         ; 0432A5
ret nz           ; ret nz           | 0432DE 0432A6 || 0432DE C0 4C 45 46 8287     DB    C0H, "LEFT$("
ld c,h           ;                  | 0432DF        || ld c,h                         ; 0432A7
ld b,l           ;                  | 0432E0        || ld b,l                         ; 0432A8
ld b,(hl)        ;                  | 0432E1        || ld b,(hl)                      ; 0432A9
ld d,h           ;                  | 0432E2        || ld d,h                         ; 0432AA
inc h            ;                  | 0432E3        || inc h                          ; 0432AB
jr z,$-$55       ;                  | 0432E4        || jr z,$-$55                     ; 0432AC
ld c,h           ;                  | 0432E6        || ld c,h                         ; 0432AE
ld b,l           ;                  | 0432E7        || ld b,l                         ; 0432AF
ld c,(hl)        ;                  | 0432E8        || ld c,(hl)                      ; 0432B0
jp (hl)          ; jp (hl)          | 0432E9 0432B1 || 0432E9 E9 4C 45 54 8289     DB    E9H, "LET"
ld c,h           ;                  | 0432EA        || ld c,h                         ; 0432B2
ld b,l           ;                  | 0432EB        || ld b,l                         ; 0432B3
ld d,h           ;                  | 0432EC        || ld d,h                         ; 0432B4
xor e            ; xor e            | 0432ED 0432B5 || 0432ED AB 4C 4F 47 8290     DB    ABH, "LOG"
ld c,h           ;                  | 0432EE        || ld c,h                         ; 0432B6
ld c,a           ;                  | 0432EF        || ld c,a                         ; 0432B7
ld b,a           ;                  | 0432F0        || ld b,a                         ; 0432B8
xor d            ; xor d            | 0432F1 0432B9 || 0432F1 AA 4C 4E    8291     DB    AAH, "LN"
ld c,h           ;                  | 0432F2        || ld c,h                         ; 0432BA
ld c,(hl)        ;                  | 0432F3        || ld c,(hl)                      ; 0432BB
pop bc           ; pop bc           | 0432F4 0432BC || 0432F4 C1 4D 49 44 8292     DB    C1H, "MID$("
ld c,l           ;                  | 0432F5        || ld c,l                         ; 0432BD
ld.lis b,h       ;                  | 0432F6        || ld.lis b,h                     ; 0432BE
inc h            ;                  | 0432F8        || inc h                          ; 0432C0
jr z,$-$13       ;                  | 0432F9        || jr z,$-$13                     ; 0432C1
ld c,l           ;                  | 0432FB        || ld c,l                         ; 0432C3
ld c,a           ;                  | 0432FC        || ld c,a                         ; 0432C4
ld b,h           ;                  | 0432FD        || ld b,h                         ; 0432C5
ld b,l           ;                  | 0432FE        || ld b,l                         ; 0432C6
add a,e          ; add a,e          | 0432FF 0432C7 || 0432FF 83 4D 4F 44 8294     DB    83H, "MOD"
ld c,l           ;                  | 043300        || ld c,l                         ; 0432C8
ld c,a           ;                  | 043301        || ld c,a                         ; 0432C9
ld b,h           ;                  | 043302        || ld b,h                         ; 0432CA
call pe,$564f4d  ; call pe,$564f4d  | 043303 0432CB || 043303 EC 4D 4F 56 8295     DB    ECH, "MOVE"
ld b,l           ;                  | 043307        || ld b,l                         ; 0432CF
trap             ; trap             | 043308 0432D0 || 043308 ED 4E 45 58 8296     DB    EDH, "NEXT"
ld b,l           ;                  | 04330A        || ld b,l                         ; 0432D2
ld e,b           ;                  | 04330B        || ld e,b                         ; 0432D3
ld d,h           ;                  | 04330C        || ld d,h                         ; 0432D4
jp z,$57454e     ; jp z,$57454e     | 04330D 0432D5 || 04330D CA 4E 45 57 8297     DB    CAH, "NEW", 0
nop              ;                  | 043311        || nop                            ; 0432D9
xor h            ; xor h            | 043312 0432DA || 043312 AC 4E 4F 54 8298     DB    ACH, "NOT"
ld c,(hl)        ;                  | 043313        || ld c,(hl)                      ; 0432DB
ld c,a           ;                  | 043314        || ld c,a                         ; 0432DC
ld d,h           ;                  | 043315        || ld d,h                         ; 0432DD
bit 1,a          ; bit 1,a          | 043316 0432DE || 043316 CB 4F 4C 44 8299     DB    CBH, "OLD", 0
ld c,h           ;                  | 043318        || ld c,h                         ; 0432E0
ld b,h           ;                  | 043319        || ld b,h                         ; 0432E1
nop              ;                  | 04331A        || nop                            ; 0432E2
xor $4f          ; xor $4f          | 04331B 0432E3 || 04331B EE 4F 4E    8300     DB    EEH, "ON"
ld c,(hl)        ;                  | 04331D        || ld c,(hl)                      ; 0432E5
add a,a          ; add a,a          | 04331E 0432E6 || 04331E 87 4F 46 46 8301     DB    87H, "OFF"
ld c,a           ;                  | 04331F        || ld c,a                         ; 0432E7
ld b,(hl)        ;                  | 043320        || ld b,(hl)                      ; 0432E8
ld b,(hl)        ;                  | 043321        || ld b,(hl)                      ; 0432E9
add a,h          ; add a,h          | 043322 0432EA || 043322 84 4F 52    8302     DB    84H, "OR"
ld c,a           ;                  | 043323        || ld c,a                         ; 0432EB
adc.sil a,(hl)   ;                  | 043324        || adc.sil a,(hl)                 ; 0432EC
ld c,a           ;                  | 043326        || ld c,a                         ; 0432EE
ld d,b           ;                  | 043327        || ld d,b                         ; 0432EF
ld b,l           ;                  | 043328        || ld b,l                         ; 0432F0
ld c,(hl)        ;                  | 043329        || ld c,(hl)                      ; 0432F1
ld.lis c,(hl)    ;                  | 04332A        || ld.lis c,(hl)                  ; 0432F2
xor (hl)         ; xor (hl)         | 04332C 0432F4 || 04332C AE 4F 50 45 8304     DB    AEH, "OPENOUT"
ld c,a           ;                  | 04332D        || ld c,a                         ; 0432F5
ld d,b           ;                  | 04332E        || ld d,b                         ; 0432F6
ld b,l           ;                  | 04332F        || ld b,l                         ; 0432F7
ld c,(hl)        ;                  | 043330        || ld c,(hl)                      ; 0432F8
ld c,a           ;                  | 043331        || ld c,a                         ; 0432F9
ld d,l           ;                  | 043332        || ld d,l                         ; 0432FA
ld d,h           ;                  | 043333        || ld d,h                         ; 0432FB
xor l            ; xor l            | 043334 0432FC || 043334 AD 4F 50 45 8305     DB    ADH, "OPENUP"
ld c,a           ;                  | 043335        || ld c,a                         ; 0432FD
ld d,b           ;                  | 043336        || ld d,b                         ; 0432FE
ld b,l           ;                  | 043337        || ld b,l                         ; 0432FF
ld c,(hl)        ;                  | 043338        || ld c,(hl)                      ; 043300
ld d,l           ;                  | 043339        || ld d,l                         ; 043301
ld d,b           ;                  | 04333A        || ld d,b                         ; 043302
rst $38          ; rst $38          | 04333B 043303 || 04333B FF 4F 53 43 8306     DB    FFH, "OSCLI"
ld c,a           ;                  | 04333C        || ld c,a                         ; 043304
ld d,e           ;                  | 04333D        || ld d,e                         ; 043305
ld b,e           ;                  | 04333E        || ld b,e                         ; 043306
ld c,h           ;                  | 04333F        || ld c,h                         ; 043307
pop.lis af       ;                  | 043340        || pop.lis af                     ; 043308
ld d,b           ;                  | 043342        || ld d,b                         ; 04330A
noni.sil         ;                  | 043343        || noni.sil                       ; 04330B
ld.lis c,(hl)    ;                  | 043344        || ld.lis c,(hl)                  ; 04330C
ld d,h           ;                  | 043346        || ld d,h                         ; 04330E
sub b            ; sub b            | 043347 04330F || 043347 90 50 41 47 8308     DB    90H, "PAGE", 0
ld d,b           ;                  | 043348        || ld d,b                         ; 043310
ld b,c           ;                  | 043349        || ld b,c                         ; 043311
ld b,a           ;                  | 04334A        || ld b,a                         ; 043312
ld b,l           ;                  | 04334B        || ld b,l                         ; 043313
nop              ;                  | 04334C        || nop                            ; 043314
adc a,a          ; adc a,a          | 04334D 043315 || 04334D 8F 50 54 52 8309     DB    8FH, "PTR", 0
ld d,b           ;                  | 04334E        || ld d,b                         ; 043316
ld d,h           ;                  | 04334F        || ld d,h                         ; 043317
nop.sil          ;                  | 043350        || nop.sil                        ; 043318
xor a            ; xor a            | 043352 04331A || 043352 AF 50 49 00 8310     DB    AFH, "PI", 0
ld d,b           ;                  | 043353        || ld d,b                         ; 04331B
nop.lis          ;                  | 043354        || nop.lis                        ; 04331C
ret p            ; ret p            | 043356 04331E || 043356 F0 50 4C 4F 8311     DB    F0H, "PLOT"
ld d,b           ;                  | 043357        || ld d,b                         ; 04331F
ld c,h           ;                  | 043358        || ld c,h                         ; 043320
ld c,a           ;                  | 043359        || ld c,a                         ; 043321
ld d,h           ;                  | 04335A        || ld d,h                         ; 043322
or b             ; or b             | 04335B 043323 || 04335B B0 50 4F 49 8312     DB    B0H, "POINT("
ld d,b           ;                  | 04335C        || ld d,b                         ; 043324
ld c,a           ;                  | 04335D        || ld c,a                         ; 043325
ld.lis c,(hl)    ;                  | 04335E        || ld.lis c,(hl)                  ; 043326
ld d,h           ;                  | 043360        || ld d,h                         ; 043328
jr z,$-$0c       ;                  | 043361        || jr z,$-$0c                     ; 043329
ld d,b           ;                  | 043363        || ld d,b                         ; 04332B
ld.sil c,a       ;                  | 043364        || ld.sil c,a                     ; 04332C
ld b,e           ;                  | 043366        || ld b,e                         ; 04332E
or c             ; or c             | 043367 04332F || 043367 B1 50 4F 53 8314     DB    B1H, "POS", 0
ld d,b           ;                  | 043368        || ld d,b                         ; 043330
ld c,a           ;                  | 043369        || ld c,a                         ; 043331
ld d,e           ;                  | 04336A        || ld d,e                         ; 043332
nop              ;                  | 04336B        || nop                            ; 043333
adc a,$50        ; adc a,$50        | 04336C 043334 || 04336C CE 50 55 54 8315     DB    CEH, "PUT"
ld d,l           ;                  | 04336E        || ld d,l                         ; 043336
ld d,h           ;                  | 04336F        || ld d,h                         ; 043337
ret m            ; ret m            | 043370 043338 || 043370 F8 52 45 54 8316     DB    F8H, "RETURN", 0
ld.sil b,l       ;                  | 043371        || ld.sil b,l                     ; 043339
ld d,h           ;                  | 043373        || ld d,h                         ; 04333B
ld d,l           ;                  | 043374        || ld d,l                         ; 04333C
ld.sil c,(hl)    ;                  | 043375        || ld.sil c,(hl)                  ; 04333D
nop              ;                  | 043377        || nop                            ; 04333F
push af          ; push af          | 043378 043340 || 043378 F5 52 45 50 8317     DB    F5H, "REPEAT"
ld.sil b,l       ;                  | 043379        || ld.sil b,l                     ; 043341
ld d,b           ;                  | 04337B        || ld d,b                         ; 043343
ld b,l           ;                  | 04337C        || ld b,l                         ; 043344
ld b,c           ;                  | 04337D        || ld b,c                         ; 043345
ld d,h           ;                  | 04337E        || ld d,h                         ; 043346
or $52           ; or $52           | 04337F 043347 || 04337F F6 52 45 50 8318     DB    F6H, "REPORT", 0
ld b,l           ;                  | 043381        || ld b,l                         ; 043349
ld d,b           ;                  | 043382        || ld d,b                         ; 04334A
ld c,a           ;                  | 043383        || ld c,a                         ; 04334B
ld.sil d,h       ;                  | 043384        || ld.sil d,h                     ; 04334C
nop              ;                  | 043386        || nop                            ; 04334E
di               ; di               | 043387 04334F || 043387 F3 52 45 41 8319     DB    F3H, "READ"
ld.sil b,l       ;                  | 043388        || ld.sil b,l                     ; 043350
ld b,c           ;                  | 04338A        || ld b,c                         ; 043352
ld b,h           ;                  | 04338B        || ld b,h                         ; 043353
call p,$4d4552   ; call p,$4d4552   | 04338C 043354 || 04338C F4 52 45 4D 8320     DB    F4H, "REM"
ld sp,hl         ; ld sp,hl         | 043390 043358 || 043390 F9 52 55 4E 8321     DB    F9H, "RUN", 0
ld.sil d,l       ;                  | 043391        || ld.sil d,l                     ; 043359
ld c,(hl)        ;                  | 043393        || ld c,(hl)                      ; 04335B
nop              ;                  | 043394        || nop                            ; 04335C
or d             ; or d             | 043395 04335D || 043395 B2 52 41 44 8322     DB    B2H, "RAD"
ld.sil b,c       ;                  | 043396        || ld.sil b,c                     ; 04335E
ld b,h           ;                  | 043398        || ld b,h                         ; 043360
rst $30          ; rst $30          | 043399 043361 || 043399 F7 52 45 53 8323     DB    F7H, "RESTORE"
ld.sil b,l       ;                  | 04339A        || ld.sil b,l                     ; 043362
ld d,e           ;                  | 04339C        || ld d,e                         ; 043364
ld d,h           ;                  | 04339D        || ld d,h                         ; 043365
ld c,a           ;                  | 04339E        || ld c,a                         ; 043366
ld.sil b,l       ;                  | 04339F        || ld.sil b,l                     ; 043367
jp nz,$474952    ; jp nz,$474952    | 0433A1 043369 || 0433A1 C2 52 49 47 8324     DB    C2H, "RIGHT$("
ld c,b           ;                  | 0433A5        || ld c,b                         ; 04336D
ld d,h           ;                  | 0433A6        || ld d,h                         ; 04336E
inc h            ;                  | 0433A7        || inc h                          ; 04336F
jr z,$-$4b       ;                  | 0433A8        || jr z,$-$4b                     ; 043370
ld.sil c,(hl)    ;                  | 0433AA        || ld.sil c,(hl)                  ; 043372
ld b,h           ;                  | 0433AC        || ld b,h                         ; 043374
nop              ;                  | 0433AD        || nop                            ; 043375
call z,$4e4552   ; call z,$4e4552   | 0433AE 043376 || 0433AE CC 52 45 4E 8326     DB    CCH, "RENUMBER"
ld d,l           ;                  | 0433B2        || ld d,l                         ; 04337A
ld c,l           ;                  | 0433B3        || ld c,l                         ; 04337B
ld b,d           ;                  | 0433B4        || ld b,d                         ; 04337C
ld b,l           ;                  | 0433B5        || ld b,l                         ; 04337D
adc.sil a,b      ;                  | 0433B6        || adc.sil a,b                    ; 04337E
ld d,e           ;                  | 0433B8        || ld d,e                         ; 043380
ld d,h           ;                  | 0433B9        || ld d,h                         ; 043381
ld b,l           ;                  | 0433BA        || ld b,l                         ; 043382
ld d,b           ;                  | 0433BB        || ld d,b                         ; 043383
call $564153     ; call $564153     | 0433BC 043384 || 0433BC CD 53 41 56 8328     DB    CDH, "SAVE"
ld b,l           ;                  | 0433C0        || ld b,l                         ; 043388
or h             ; or h             | 0433C1 043389 || 0433C1 B4 53 47 4E 8329     DB    B4H, "SGN"
ld d,e           ;                  | 0433C2        || ld d,e                         ; 04338A
ld b,a           ;                  | 0433C3        || ld b,a                         ; 04338B
ld c,(hl)        ;                  | 0433C4        || ld c,(hl)                      ; 04338C
or l             ; or l             | 0433C5 04338D || 0433C5 B5 53 49 4E 8330     DB    B5H, "SIN"
ld d,e           ;                  | 0433C6        || ld d,e                         ; 04338E
ld.lis c,(hl)    ;                  | 0433C7        || ld.lis c,(hl)                  ; 04338F
or (hl)          ; or (hl)          | 0433C9 043391 || 0433C9 B6 53 51 52 8331     DB    B6H, "SQR"
ld d,e           ;                  | 0433CA        || ld d,e                         ; 043392
ld d,c           ;                  | 0433CB        || ld d,c                         ; 043393
adc.sil a,c      ;                  | 0433CC        || adc.sil a,c                    ; 043394
ld d,e           ;                  | 0433CE        || ld d,e                         ; 043396
ld d,b           ;                  | 0433CF        || ld d,b                         ; 043397
ld b,e           ;                  | 0433D0        || ld b,e                         ; 043398
jp $525453       ; jp $525453       | 0433D1 043399 || 0433D1 C3 53 54 52 8333     DB    C3H, "STR$"
inc h            ;                  | 0433D5        || inc h                          ; 04339D
call nz,$525453  ; call nz,$525453  | 0433D6 04339E || 0433D6 C4 53 54 52 8334     DB    C4H, "STRING$("
ld.lis c,(hl)    ;                  | 0433DA        || ld.lis c,(hl)                  ; 0433A2
ld b,a           ;                  | 0433DC        || ld b,a                         ; 0433A4
inc h            ;                  | 0433DD        || inc h                          ; 0433A5
jr z,$-$2a       ;                  | 0433DE        || jr z,$-$2a                     ; 0433A6
ld d,e           ;                  | 0433E0        || ld d,e                         ; 0433A8
ld c,a           ;                  | 0433E1        || ld c,a                         ; 0433A9
ld d,l           ;                  | 0433E2        || ld d,l                         ; 0433AA
ld c,(hl)        ;                  | 0433E3        || ld c,(hl)                      ; 0433AB
ld b,h           ;                  | 0433E4        || ld b,h                         ; 0433AC
jp m,$4f5453     ; jp m,$4f5453     | 0433E5 0433AD || 0433E5 FA 53 54 4F 8336     DB    FAH, "STOP", 0
ld d,b           ;                  | 0433E9        || ld d,b                         ; 0433B1
nop              ;                  | 0433EA        || nop                            ; 0433B2
or a             ; or a             | 0433EB 0433B3 || 0433EB B7 54 41 4E 8337     DB    B7H, "TAN"
ld d,h           ;                  | 0433EC        || ld d,h                         ; 0433B4
ld b,c           ;                  | 0433ED        || ld b,c                         ; 0433B5
ld c,(hl)        ;                  | 0433EE        || ld c,(hl)                      ; 0433B6
adc a,h          ; adc a,h          | 0433EF 0433B7 || 0433EF 8C 54 48 45 8338     DB    8CH, "THEN"
ld d,h           ;                  | 0433F0        || ld d,h                         ; 0433B8
ld c,b           ;                  | 0433F1        || ld c,b                         ; 0433B9
ld b,l           ;                  | 0433F2        || ld b,l                         ; 0433BA
ld c,(hl)        ;                  | 0433F3        || ld c,(hl)                      ; 0433BB
cp b             ; cp b             | 0433F4 0433BC || 0433F4 B8 54 4F    8339     DB    B8H, "TO"
ld d,h           ;                  | 0433F5        || ld d,h                         ; 0433BD
ld c,a           ;                  | 0433F6        || ld c,a                         ; 0433BE
adc a,d          ; adc a,d          | 0433F7 0433BF || 0433F7 8A 54 41 42 8340     DB    8AH, "TAB("
ld d,h           ;                  | 0433F8        || ld d,h                         ; 0433C0
ld b,c           ;                  | 0433F9        || ld b,c                         ; 0433C1
ld b,d           ;                  | 0433FA        || ld b,d                         ; 0433C2
jr z,$-$02       ;                  | 0433FB        || jr z,$-$02                     ; 0433C3
ld d,h           ;                  | 0433FD        || ld d,h                         ; 0433C5
ld.sil b,c       ;                  | 0433FE        || ld.sil b,c                     ; 0433C6
ld b,e           ;                  | 043400        || ld b,e                         ; 0433C8
ld b,l           ;                  | 043401        || ld b,l                         ; 0433C9
sub c            ; sub c            | 043402 0433CA || 043402 91 54 49 4D 8342     DB    91H, "TIME", 0
ld d,h           ;                  | 043403        || ld d,h                         ; 0433CB
ld.lis c,l       ;                  | 043404        || ld.lis c,l                     ; 0433CC
ld b,l           ;                  | 043406        || ld b,l                         ; 0433CE
nop              ;                  | 043407        || nop                            ; 0433CF
cp c             ; cp c             | 043408 0433D0 || 043408 B9 54 52 55 8343     DB    B9H, "TRUE", 0
ld d,h           ;                  | 043409        || ld d,h                         ; 0433D1
ld.sil d,l       ;                  | 04340A        || ld.sil d,l                     ; 0433D2
ld b,l           ;                  | 04340C        || ld b,l                         ; 0433D4
nop              ;                  | 04340D        || nop                            ; 0433D5
ld d,iyl         ; ld d,iyl         | 04340E 0433D6 || 04340E FD 55 4E 54 8344     DB    FDH, "UNTIL"
ld c,(hl)        ;                  | 043410        || ld c,(hl)                      ; 0433D8
ld d,h           ;                  | 043411        || ld d,h                         ; 0433D9
ld.lis c,h       ;                  | 043412        || ld.lis c,h                     ; 0433DA
cp d             ; cp d             | 043414 0433DC || 043414 BA 55 53 52 8345     DB    BAH, "USR"
ld d,l           ;                  | 043415        || ld d,l                         ; 0433DD
ld d,e           ;                  | 043416        || ld d,e                         ; 0433DE
rst.sil $28      ;                  | 043417        || rst.sil $28                    ; 0433DF
ld d,(hl)        ;                  | 043419        || ld d,(hl)                      ; 0433E1
ld b,h           ;                  | 04341A        || ld b,h                         ; 0433E2
ld d,l           ;                  | 04341B        || ld d,l                         ; 0433E3
cp e             ; cp e             | 04341C 0433E4 || 04341C BB 56 41 4C 8347     DB    BBH, "VAL"
ld d,(hl)        ;                  | 04341D        || ld d,(hl)                      ; 0433E5
ld b,c           ;                  | 04341E        || ld b,c                         ; 0433E6
ld c,h           ;                  | 04341F        || ld c,h                         ; 0433E7
cp h             ; cp h             | 043420 0433E8 || 043420 BC 56 50 4F 8348     DB    BCH, "VPOS", 0
ld d,(hl)        ;                  | 043421        || ld d,(hl)                      ; 0433E9
ld d,b           ;                  | 043422        || ld d,b                         ; 0433EA
ld c,a           ;                  | 043423        || ld c,a                         ; 0433EB
ld d,e           ;                  | 043424        || ld d,e                         ; 0433EC
nop              ;                  | 043425        || nop                            ; 0433ED
cp $57           ; cp $57           | 043426 0433EE || 043426 FE 57 49 44 8349     DB    FEH, "WIDTH"
ld.lis b,h       ;                  | 043428        || ld.lis b,h                     ; 0433F0
ld d,h           ;                  | 04342A        || ld d,h                         ; 0433F2
ld c,b           ;                  | 04342B        || ld c,b                         ; 0433F3
out ($48),a      ; out ($48),a      | 04342C 0433F4 || 04342C D3 48 49 4D 8350     DB    D3H, "HIMEM"
ld.lis c,l       ;                  | 04342E        || ld.lis c,l                     ; 0433F6
ld b,l           ;                  | 043430        || ld b,l                         ; 0433F8
ld c,l           ;                  | 043431        || ld c,l                         ; 0433F9
jp nc,$4d4f4c    ; jp nc,$4d4f4c    | 043432 0433FA || 043432 D2 4C 4F 4D 8351     DB    D2H, "LOMEM"
ld b,l           ;                  | 043436        || ld b,l                         ; 0433FE
ld c,l           ;                  | 043437        || ld c,l                         ; 0433FF
ret nc           ; ret nc           | 043438 043400 || 043438 D0 50 41 47 8352     DB    D0H, "PAGE"
ld d,b           ;                  | 043439        || ld d,b                         ; 043401
ld b,c           ;                  | 04343A        || ld b,c                         ; 043402
ld b,a           ;                  | 04343B        || ld b,a                         ; 043403
ld b,l           ;                  | 04343C        || ld b,l                         ; 043404
rst $08          ; rst $08          | 04343D 043405 || 04343D CF 50 54 52 8353     DB    CFH, "PTR"
ld d,b           ;                  | 04343E        || ld d,b                         ; 043406
ld d,h           ;                  | 04343F        || ld d,h                         ; 043407
pop.sil de       ;                  | 043440        || pop.sil de                     ; 043408
ld d,h           ;                  | 043442        || ld d,h                         ; 04340A
ld.lis c,l       ;                  | 043443        || ld.lis c,l                     ; 04340B
ld b,l           ;                  | 043445        || ld b,l                         ; 04340D
ld bc,$73694d    ; ld bc,$73694d    | 043446 04340E || 043446 01 4D 69 73 8358     DB    01H, "Missing "
ld (hl),e        ;                  | 04344A        || ld (hl),e                      ; 043412
ld l,c           ;                  | 04344B        || ld l,c                         ; 043413
ld l,(hl)        ;                  | 04344C        || ld l,(hl)                      ; 043414
ld h,a           ;                  | 04344D        || ld h,a                         ; 043415
jr nz,$+$04      ;                  | 04344E        || jr nz,$+$04                    ; 043416
ld c,(hl)        ;                  | 043450        || ld c,(hl)                      ; 043418
ld l,a           ;                  | 043451        || ld l,a                         ; 043419
jr nz,$+$75      ;                  | 043452        || jr nz,$+$75                    ; 04341A
ld (hl),l        ;                  | 043454        || ld (hl),l                      ; 04341C
ld h,e           ;                  | 043455        || ld h,e                         ; 04341D
ld l,b           ;                  | 043456        || ld l,b                         ; 04341E
jr nz,$+$05      ;                  | 043457        || jr nz,$+$05                    ; 04341F
ld b,d           ;                  | 043459        || ld b,d                         ; 043421
ld h,c           ;                  | 04345A        || ld h,c                         ; 043422
ld h,h           ;                  | 04345B        || ld h,h                         ; 043423
jr nz,$+$06      ;                  | 04345C        || jr nz,$+$06                    ; 043424
jr nz,$+$74      ;                  | 04345E        || jr nz,$+$74                    ; 043426
ld h,c           ;                  | 043460        || ld h,c                         ; 043428
ld l,(hl)        ;                  | 043461        || ld l,(hl)                      ; 043429
ld h,a           ;                  | 043462        || ld h,a                         ; 04342A
ld h,l           ;                  | 043463        || ld h,l                         ; 04342B
dec b            ; dec b            | 043464 04342C || 043464 05 76 61 72 8362     DB    05H, "variable"
halt             ;                  | 043465        || halt                           ; 04342D
ld h,c           ;                  | 043466        || ld h,c                         ; 04342E
ld (hl),d        ;                  | 043467        || ld (hl),d                      ; 04342F
ld l,c           ;                  | 043468        || ld l,c                         ; 043430
ld h,c           ;                  | 043469        || ld h,c                         ; 043431
ld h,d           ;                  | 04346A        || ld h,d                         ; 043432
ld l,h           ;                  | 04346B        || ld l,h                         ; 043433
ld h,l           ;                  | 04346C        || ld h,l                         ; 043434
ld b,$4f         ; ld b,$4f         | 04346D 043435 || 04346D 06 4F 75 74 8363     DB    06H, "Out of"
ld (hl),l        ;                  | 04346F        || ld (hl),l                      ; 043437
ld (hl),h        ;                  | 043470        || ld (hl),h                      ; 043438
jr nz,$+$71      ;                  | 043471        || jr nz,$+$71                    ; 043439
ld h,(hl)        ;                  | 043473        || ld h,(hl)                      ; 04343B
rlca             ; rlca             | 043474 04343C || 043474 07 4E 6F 20 8364     DB    07H, "No "
ld c,(hl)        ;                  | 043475        || ld c,(hl)                      ; 04343D
ld l,a           ;                  | 043476        || ld l,a                         ; 04343E
jr nz,$+$0a      ;                  | 043477        || jr nz,$+$0a                    ; 04343F
jr nz,$+$75      ;                  | 043479        || jr nz,$+$75                    ; 043441
ld (hl),b        ;                  | 04347B        || ld (hl),b                      ; 043443
ld h,c           ;                  | 04347C        || ld h,c                         ; 043444
ld h,e           ;                  | 04347D        || ld h,e                         ; 043445
ld h,l           ;                  | 04347E        || ld h,l                         ; 043446
rst $38          ; rst $38          | 04347F 043447 || 04347F FF FF       8368     DW    -1
rst $38          ;                  | 043480        || rst $38                        ; 043448
rlca             ; rlca             | 043481 043449 || 043481 07 72 6F 6F 8372  ERRWDS:   DB    7, "room", 0  ;  0: No room
ld (hl),d        ;                  | 043482        || ld (hl),d                      ; 04344A
ld l,a           ;                  | 043483        || ld l,a                         ; 04344B
ld l,a           ;                  | 043484        || ld l,a                         ; 04344C
ld l,l           ;                  | 043485        || ld l,l                         ; 04344D
nop              ;                  | 043486        || nop                            ; 04344E
ld b,$04         ; ld b,$04         | 043487 04344F || 043487 06 04 00    8373     DB    6, 4, 0   ;  1: Out of range
nop              ;                  | 043489        || nop                            ; 043451
nop              ; nop              | 04348A 043452 || 04348A 00          8374     DB    0    ;  2: *
nop              ; nop              | 04348B 043453 || 04348B 00          8375     DB    0    ;  3: *
ld c,l           ; ld c,l           | 04348C 043454 || 04348C 4D 69 73 74 8376     DB    "Mistake", 0  ;  4: Mistake
ld l,c           ;                  | 04348D        || ld l,c                         ; 043455
ld (hl),e        ;                  | 04348E        || ld (hl),e                      ; 043456
ld (hl),h        ;                  | 04348F        || ld (hl),h                      ; 043457
ld h,c           ;                  | 043490        || ld h,c                         ; 043458
ld l,e           ;                  | 043491        || ld l,e                         ; 043459
ld h,l           ;                  | 043492        || ld h,l                         ; 04345A
nop              ;                  | 043493        || nop                            ; 04345B
ld bc,$54002c    ; ld bc,$54002c    | 043494 04345C || 043494 01 2C 00    8377     DB    1, ",", 0   ;  5: Missing ,
ld a,c           ;                  | 043498        || ld a,c                         ; 043460
ld (hl),b        ;                  | 043499        || ld (hl),b                      ; 043461
ld h,l           ;                  | 04349A        || ld h,l                         ; 043462
jr nz,$+$6f      ;                  | 04349B        || jr nz,$+$6f                    ; 043463
ld l,c           ;                  | 04349D        || ld l,c                         ; 043465
ld (hl),e        ;                  | 04349E        || ld (hl),e                      ; 043466
ld l,l           ;                  | 04349F        || ld l,l                         ; 043467
ld h,c           ;                  | 0434A0        || ld h,c                         ; 043468
ld (hl),h        ;                  | 0434A1        || ld (hl),h                      ; 043469
ld h,e           ;                  | 0434A2        || ld h,e                         ; 04346A
ld l,b           ;                  | 0434A3        || ld l,b                         ; 04346B
nop              ;                  | 0434A4        || nop                            ; 04346C
rlca             ; rlca             | 0434A5 04346D || 0434A5 07 A4 00    8379     DB    7, FN, 0   ;  7: No FN
and h            ;                  | 0434A6        || and h                          ; 04346E
nop              ;                  | 0434A7        || nop                            ; 04346F
nop              ; nop              | 0434A8 043470 || 0434A8 00          8380     DB    0    ;  8: *
ld bc,$030022    ; ld bc,$030022    | 0434A9 043471 || 0434A9 01 22 00    8381     DB    1, 34, 0   ;  9: Missing "
sbc a,$00        ;                  | 0434AD        || sbc a,$00                      ; 043475
sbc a,$08        ; sbc a,$08        | 0434AF 043477 || 0434AF DE 08 00    8383     DB    DIM, 8, 0   ; 11: DIM space
nop              ;                  | 0434B1        || nop                            ; 043479
ld c,(hl)        ; ld c,(hl)        | 0434B2 04347A || 0434B2 4E 6F 74 20 8384     DB    "Not ", LOCAL_, 0  ; 12: Not LOCAL
ld l,a           ;                  | 0434B3        || ld l,a                         ; 04347B
ld (hl),h        ;                  | 0434B4        || ld (hl),h                      ; 04347C
jr nz,$-$14      ;                  | 0434B5        || jr nz,$-$14                    ; 04347D
nop              ;                  | 0434B7        || nop                            ; 04347F
rlca             ; rlca             | 0434B8 043480 || 0434B8 07 F2 00    8385     DB    7, PROC, 0  ; 13: No PROC
jp p,$724100     ;                  | 0434B9        || jp p,$724100                   ; 043481
ld (hl),d        ;                  | 0434BD        || ld (hl),d                      ; 043485
ld h,c           ;                  | 0434BE        || ld h,c                         ; 043486
ld a,c           ;                  | 0434BF        || ld a,c                         ; 043487
nop              ;                  | 0434C0        || nop                            ; 043488
ld d,e           ; ld d,e           | 0434C1 043489 || 0434C1 53 75 62 73 8387     DB    "Subscript", 0  ; 15: Subscript
ld (hl),l        ;                  | 0434C2        || ld (hl),l                      ; 04348A
ld h,d           ;                  | 0434C3        || ld h,d                         ; 04348B
ld (hl),e        ;                  | 0434C4        || ld (hl),e                      ; 04348C
ld h,e           ;                  | 0434C5        || ld h,e                         ; 04348D
ld (hl),d        ;                  | 0434C6        || ld (hl),d                      ; 04348E
ld l,c           ;                  | 0434C7        || ld l,c                         ; 04348F
ld (hl),b        ;                  | 0434C8        || ld (hl),b                      ; 043490
ld (hl),h        ;                  | 0434C9        || ld (hl),h                      ; 043491
nop              ;                  | 0434CA        || nop                            ; 043492
ld d,e           ; ld d,e           | 0434CB 043493 || 0434CB 53 79 6E 74 8388     DB    "Syntax error", 0  ; 16: Syntax error
ld a,c           ;                  | 0434CC        || ld a,c                         ; 043494
ld l,(hl)        ;                  | 0434CD        || ld l,(hl)                      ; 043495
ld (hl),h        ;                  | 0434CE        || ld (hl),h                      ; 043496
ld h,c           ;                  | 0434CF        || ld h,c                         ; 043497
ld a,b           ;                  | 0434D0        || ld a,b                         ; 043498
jr nz,$+$67      ;                  | 0434D1        || jr nz,$+$67                    ; 043499
ld (hl),d        ;                  | 0434D3        || ld (hl),d                      ; 04349B
ld (hl),d        ;                  | 0434D4        || ld (hl),d                      ; 04349C
ld l,a           ;                  | 0434D5        || ld l,a                         ; 04349D
ld (hl),d        ;                  | 0434D6        || ld (hl),d                      ; 04349E
nop              ;                  | 0434D7        || nop                            ; 04349F
ld b,l           ; ld b,l           | 0434D8 0434A0 || 0434D8 45 73 63 61 8389     DB    "Escape", 0  ; 17: Escape
ld (hl),e        ;                  | 0434D9        || ld (hl),e                      ; 0434A1
ld h,e           ;                  | 0434DA        || ld h,e                         ; 0434A2
ld h,c           ;                  | 0434DB        || ld h,c                         ; 0434A3
ld (hl),b        ;                  | 0434DC        || ld (hl),b                      ; 0434A4
ld h,l           ;                  | 0434DD        || ld h,l                         ; 0434A5
nop              ;                  | 0434DE        || nop                            ; 0434A6
ld b,h           ; ld b,h           | 0434DF 0434A7 || 0434DF 44 69 76 69 8390     DB    "Division by zero", 0 ; 18: Division by zero
ld l,c           ;                  | 0434E0        || ld l,c                         ; 0434A8
halt             ;                  | 0434E1        || halt                           ; 0434A9
ld l,c           ;                  | 0434E2        || ld l,c                         ; 0434AA
ld (hl),e        ;                  | 0434E3        || ld (hl),e                      ; 0434AB
ld l,c           ;                  | 0434E4        || ld l,c                         ; 0434AC
ld l,a           ;                  | 0434E5        || ld l,a                         ; 0434AD
ld l,(hl)        ;                  | 0434E6        || ld l,(hl)                      ; 0434AE
jr nz,$+$64      ;                  | 0434E7        || jr nz,$+$64                    ; 0434AF
ld a,c           ;                  | 0434E9        || ld a,c                         ; 0434B1
jr nz,$+$7c      ;                  | 0434EA        || jr nz,$+$7c                    ; 0434B2
ld h,l           ;                  | 0434EC        || ld h,l                         ; 0434B4
ld (hl),d        ;                  | 0434ED        || ld (hl),d                      ; 0434B5
ld l,a           ;                  | 0434EE        || ld l,a                         ; 0434B6
nop              ;                  | 0434EF        || nop                            ; 0434B7
ld d,e           ; ld d,e           | 0434F0 0434B8 || 0434F0 53 74 72 69 8391     DB    "String too long", 0 ; 19: String too long
ld (hl),h        ;                  | 0434F1        || ld (hl),h                      ; 0434B9
ld (hl),d        ;                  | 0434F2        || ld (hl),d                      ; 0434BA
ld l,c           ;                  | 0434F3        || ld l,c                         ; 0434BB
ld l,(hl)        ;                  | 0434F4        || ld l,(hl)                      ; 0434BC
ld h,a           ;                  | 0434F5        || ld h,a                         ; 0434BD
jr nz,$+$76      ;                  | 0434F6        || jr nz,$+$76                    ; 0434BE
ld l,a           ;                  | 0434F8        || ld l,a                         ; 0434C0
ld l,a           ;                  | 0434F9        || ld l,a                         ; 0434C1
jr nz,$+$6e      ;                  | 0434FA        || jr nz,$+$6e                    ; 0434C2
ld l,a           ;                  | 0434FC        || ld l,a                         ; 0434C4
ld l,(hl)        ;                  | 0434FD        || ld l,(hl)                      ; 0434C5
ld h,a           ;                  | 0434FE        || ld h,a                         ; 0434C6
nop              ;                  | 0434FF        || nop                            ; 0434C7
ld d,h           ; ld d,h           | 043500 0434C8 || 043500 54 6F 6F 20 8392     DB    "Too big", 0  ; 20: Too big
ld l,a           ;                  | 043501        || ld l,a                         ; 0434C9
ld l,a           ;                  | 043502        || ld l,a                         ; 0434CA
jr nz,$+$64      ;                  | 043503        || jr nz,$+$64                    ; 0434CB
ld l,c           ;                  | 043505        || ld l,c                         ; 0434CD
ld h,a           ;                  | 043506        || ld h,a                         ; 0434CE
nop              ;                  | 043507        || nop                            ; 0434CF
dec l            ; dec l            | 043508 0434D0 || 043508 2D 76 65 20 8393     DB    "-ve root", 0  ; 21: -ve root
halt             ;                  | 043509        || halt                           ; 0434D1
ld h,l           ;                  | 04350A        || ld h,l                         ; 0434D2
jr nz,$+$74      ;                  | 04350B        || jr nz,$+$74                    ; 0434D3
ld l,a           ;                  | 04350D        || ld l,a                         ; 0434D5
ld l,a           ;                  | 04350E        || ld l,a                         ; 0434D6
ld (hl),h        ;                  | 04350F        || ld (hl),h                      ; 0434D7
nop              ;                  | 043510        || nop                            ; 0434D8
ld c,h           ; ld c,h           | 043511 0434D9 || 043511 4C 6F 67 04 8394     DB    "Log", 4, 0  ; 22: Log range
ld l,a           ;                  | 043512        || ld l,a                         ; 0434DA
ld h,a           ;                  | 043513        || ld h,a                         ; 0434DB
inc b            ;                  | 043514        || inc b                          ; 0434DC
nop              ;                  | 043515        || nop                            ; 0434DD
ld b,c           ; ld b,c           | 043516 0434DE || 043516 41 63 63 75 8395     DB    "Accuracy lost", 0 ; 23: Accuracy lost
ld h,e           ;                  | 043517        || ld h,e                         ; 0434DF
ld h,e           ;                  | 043518        || ld h,e                         ; 0434E0
ld (hl),l        ;                  | 043519        || ld (hl),l                      ; 0434E1
ld (hl),d        ;                  | 04351A        || ld (hl),d                      ; 0434E2
ld h,c           ;                  | 04351B        || ld h,c                         ; 0434E3
ld h,e           ;                  | 04351C        || ld h,e                         ; 0434E4
ld a,c           ;                  | 04351D        || ld a,c                         ; 0434E5
jr nz,$+$6e      ;                  | 04351E        || jr nz,$+$6e                    ; 0434E6
ld l,a           ;                  | 043520        || ld l,a                         ; 0434E8
ld (hl),e        ;                  | 043521        || ld (hl),e                      ; 0434E9
ld (hl),h        ;                  | 043522        || ld (hl),h                      ; 0434EA
nop              ;                  | 043523        || nop                            ; 0434EB
ld b,l           ; ld b,l           | 043524 0434EC || 043524 45 78 70 04 8396     DB    "Exp", 4, 0  ; 24: Exp range
ld a,b           ;                  | 043525        || ld a,b                         ; 0434ED
ld (hl),b        ;                  | 043526        || ld (hl),b                      ; 0434EE
inc b            ;                  | 043527        || inc b                          ; 0434EF
nop              ;                  | 043528        || nop                            ; 0434F0
nop              ; nop              | 043529 0434F1 || 043529 00          8397     DB    0    ; 25: *
ld (bc),a        ; ld (bc),a        | 04352A 0434F2 || 04352A 02 05 00    8398     DB    2, 5, 0   ; 26: No such variable
dec b            ;                  | 04352B        || dec b                          ; 0434F3
nop              ;                  | 04352C        || nop                            ; 0434F4
ld bc,$030029    ; ld bc,$030029    | 04352D 0434F5 || 04352D 01 29 00    8399     DB    1, ")", 0   ; 27: Missing )
ld c,b           ;                  | 043531        || ld c,b                         ; 0434F9
ld b,l           ;                  | 043532        || ld b,l                         ; 0434FA
ld e,b           ;                  | 043533        || ld e,b                         ; 0434FB
nop              ;                  | 043534        || nop                            ; 0434FC
ld (bc),a        ; ld (bc),a        | 043535 0434FD || 043535 02 A4 2F F2 8401     DB    2, FN, "/", PROC, 0 ; 29: No such FN/PROC
and h            ;                  | 043536        || and h                          ; 0434FE
cpl              ;                  | 043537        || cpl                            ; 0434FF
jp p,$630300     ;                  | 043538        || jp p,$630300                   ; 043500
ld h,c           ;                  | 04353C        || ld h,c                         ; 043504
ld l,h           ;                  | 04353D        || ld l,h                         ; 043505
ld l,h           ;                  | 04353E        || ld l,h                         ; 043506
nop              ;                  | 04353F        || nop                            ; 043507
ld b,c           ; ld b,c           | 043540 043508 || 043540 41 72 67 75 8403     DB    "Arguments", 0  ; 31: Arguments
ld (hl),d        ;                  | 043541        || ld (hl),d                      ; 043509
ld h,a           ;                  | 043542        || ld h,a                         ; 04350A
ld (hl),l        ;                  | 043543        || ld (hl),l                      ; 04350B
ld l,l           ;                  | 043544        || ld l,l                         ; 04350C
ld h,l           ;                  | 043545        || ld h,l                         ; 04350D
ld l,(hl)        ;                  | 043546        || ld l,(hl)                      ; 04350E
ld (hl),h        ;                  | 043547        || ld (hl),h                      ; 04350F
ld (hl),e        ;                  | 043548        || ld (hl),e                      ; 043510
nop              ;                  | 043549        || nop                            ; 043511
rlca             ; rlca             | 04354A 043512 || 04354A 07 E3 00    8404     DB    7, FOR, 0   ; 32: No FOR
ex (sp),hl       ;                  | 04354B        || ex (sp),hl                     ; 043513
nop              ;                  | 04354C        || nop                            ; 043514
ld b,e           ; ld b,e           | 04354D 043515 || 04354D 43 61 6E 27 8405     DB    "Can't match ", FOR, 0 ; 33: Can't match FOR
ld h,c           ;                  | 04354E        || ld h,c                         ; 043516
ld l,(hl)        ;                  | 04354F        || ld l,(hl)                      ; 043517
daa              ;                  | 043550        || daa                            ; 043518
ld (hl),h        ;                  | 043551        || ld (hl),h                      ; 043519
jr nz,$+$6f      ;                  | 043552        || jr nz,$+$6f                    ; 04351A
ld h,c           ;                  | 043554        || ld h,c                         ; 04351C
ld (hl),h        ;                  | 043555        || ld (hl),h                      ; 04351D
ld h,e           ;                  | 043556        || ld h,e                         ; 04351E
ld l,b           ;                  | 043557        || ld l,b                         ; 04351F
jr nz,$-$1b      ;                  | 043558        || jr nz,$-$1b                    ; 043520
nop              ;                  | 04355A        || nop                            ; 043522
ex (sp),hl       ; ex (sp),hl       | 04355B 043523 || 04355B E3 20 05 00 8406     DB    FOR, " ", 5, 0  ; 34: FOR variable
jr nz,$+$07      ;                  | 04355C        || jr nz,$+$07                    ; 043524
nop              ;                  | 04355E        || nop                            ; 043526
nop              ; nop              | 04355F 043527 || 04355F 00          8407     DB    0    ; 35: *
rlca             ; rlca             | 043560 043528 || 043560 07 B8 00    8408     DB    7, TO_MN, 0   ; 36: No TO
cp b             ;                  | 043561        || cp b                           ; 043529
nop              ;                  | 043562        || nop                            ; 04352A
nop              ; nop              | 043563 04352B || 043563 00          8409     DB    0    ; 37: *
rlca             ; rlca             | 043564 04352C || 043564 07 E4 00    8410     DB    7, GOSUB, 0  ; 38: No GOSUB
call po,$20ee00  ;                  | 043565        || call po,$20ee00                ; 04352D
ld (hl),e        ;                  | 043569        || ld (hl),e                      ; 043531
ld a,c           ;                  | 04356A        || ld a,c                         ; 043532
ld l,(hl)        ;                  | 04356B        || ld l,(hl)                      ; 043533
ld (hl),h        ;                  | 04356C        || ld (hl),h                      ; 043534
ld h,c           ;                  | 04356D        || ld h,c                         ; 043535
ld a,b           ;                  | 04356E        || ld a,b                         ; 043536
nop              ;                  | 04356F        || nop                            ; 043537
xor $04          ; xor $04          | 043570 043538 || 043570 EE 04 00    8412     DB    ON_, 4, 0   ; 40: ON range
nop              ;                  | 043572        || nop                            ; 04353A
ld (bc),a        ; ld (bc),a        | 043573 04353B || 043573 02 6C 69 6E 8413     DB    2, "line", 0  ; 41: No such line
ld l,h           ;                  | 043574        || ld l,h                         ; 04353C
ld l,c           ;                  | 043575        || ld l,c                         ; 04353D
ld l,(hl)        ;                  | 043576        || ld l,(hl)                      ; 04353E
ld h,l           ;                  | 043577        || ld h,l                         ; 04353F
nop              ;                  | 043578        || nop                            ; 043540
ld b,$20         ; ld b,$20         | 043579 043541 || 043579 06 20 DC 00 8414     DB    6, " ", DATA_MN_, 0  ; 42: Out of DATA
call c,$f50700   ;                  | 04357B        || call c,$f50700                 ; 043543
nop              ;                  | 04357F        || nop                            ; 043547
nop              ; nop              | 043580 043548 || 043580 00          8416     DB    0    ; 44: *
ld bc,$cd0023    ; ld bc,$cd0023    | 043581 043549 || 043581 01 23 00    8417     DB    1, "#", 0   ; 45: Missing #
add a,e          ;                  | 043585        || 
jr c,$+$06       ;                  | 043586        || jr c,$+$06                     ; 04354E
call $043c8b     ; call $043c53     | 043588 043550 || 043588 CD 8B 3C 04 8424     CALL    DLPAIR   ; Get the line number pair - HL: BASIC program address, BC: second number (or 0 if missing)
ld a,(hl)        ; ld a,(hl)        | 04358C 043554 || 04358C 7E          8425  DELET1:   LD      A,(HL)   ; Check whether it's the last line
or a             ; or a             | 04358D 043555 || 04358D B7          8426     OR      A
jp z,$043615     ; jp z,$0435dd     | 04358E 043556 || 04358E CA 15 36 04 8427     JP      Z,WARMNC  ; Yes, so do nothing
inc hl           ; inc hl           | 043592 04355A || 043592 23          8428     INC     HL   ; Skip the line length byte
ld de,$000000    ; ld de,$000000    | 043593 04355B || 043593 11 00 00 00 8429     LD DE, 0   ; Clear DE
ld e,(hl)        ; ld e,(hl)        | 043597 04355F || 043597 5E          8430     LD      E,(HL)   ; Fetch the line number in DE
inc hl           ; inc hl           | 043598 043560 || 043598 23          8431     INC     HL
ld d,(hl)        ; ld d,(hl)        | 043599 043561 || 043599 56          8432     LD      D,(HL)
ld a,d           ; ld a,d           | 04359A 043562 || 04359A 7A          8433     LD      A,D   ; If the line number is zero then
or e             ; or e             | 04359B 043563 || 04359B B3          8434     OR      E
jr z,$+$1f       ; jr z,$+$1f       | 04359C 043564 || 04359C 28 1D       8435     JR      Z,CLOOP1         ; Do nothing
dec hl           ; dec hl           | 04359E 043566 || 04359E 2B          8436     DEC     HL   ; Decrement BASIC program pointer back to length
dec hl           ; dec hl           | 04359F 043567 || 04359F 2B          8437     DEC     HL
ex de,hl         ; ex de,hl         | 0435A0 043568 || 0435A0 EB          8438     EX      DE,HL   ; Check if we've gone past the terminating line
scf              ; scf              | 0435A1 043569 || 0435A1 37          8439     SCF
sbc hl,bc        ; sbc hl,bc        | 0435A2 04356A || 0435A2 ED 42       8440     SBC     HL,BC
ex de,hl         ; ex de,hl         | 0435A4 04356C || 0435A4 EB          8441     EX      DE,HL
jr nc,$+$70      ; jr nc,$+$70      | 0435A5 04356D || 0435A5 30 6E       8442     JR      NC,WARMNC  ; Yes, so exit back to BASIC prompt
push bc          ; push bc          | 0435A7 04356F || 0435A7 C5          8443     PUSH    BC
call $04383a     ; call $043802     | 0435A8 043570 || 0435A8 CD 3A 38 04 8444     CALL    DEL   ; Delete the line pointed to by HL
pop bc           ; pop bc           | 0435AC 043574 || 0435AC C1          8445     POP     BC
jr $-$21         ; jr $-$21         | 0435AD 043575 || 0435AD 18 DD       8446     JR      DELET1   ; And loop round to the next line
inc iy           ; inc iy           | 0435AF 043577 || 0435AF FD 23       8450  LISTO:   INC     IY               ; Skip "O" byte
call $04030f     ; call $04030a     | 0435B1 043579 || 0435B1 CD 0F 03 04 8451     CALL    EXPRI   ; Get expr
exx              ; exx              | 0435B5 04357D || 0435B5 D9          8452     EXX
ld a,l           ; ld a,l           | 0435B6 04357E || 0435B6 7D          8453     LD      A,L
ld ($044d40),a   ; ld ($044d40),a   | 0435B7 04357F || 0435B7 32 40 4D 04 8454     LD      (LISTON),A  ; Store in LISTON sysvar
jp $0430b8       ; jp $043080       | 0435BB 043583 || 0435BB C3 B8 30 04 8455  CLOOP1:   JP      CLOOP
cp $4f           ; cp $4f           | 0435BF 043587 || 0435BF FE 4F       8463  LIST_:   CP      'O'   ; Check for O (LISTO)
jr z,$-$12       ; jr z,$-$12       | 0435C1 043589 || 0435C1 28 EC       8464     JR      Z,LISTO   ; and jump to LISTO if zero
call $043c8b     ; call $043c53     | 0435C3 04358B || 0435C3 CD 8B 3C 04 8465     CALL    DLPAIR   ; Get the line number pair - HL: BASIC program address, BC: second number (or 0 if missing)
call $040a78     ; call $040a70     | 0435C7 04358F || 0435C7 CD 78 0A 04 8466     CALL    NXT   ; Skip space
cp $e7           ; cp $e7           | 0435CB 043593 || 0435CB FE E7       8467     CP      TIF              ; Check for IF clause (token IF)
ld a,$00         ; ld a,$00         | 0435CD 043595 || 0435CD 3E 00       8468     LD      A,0              ; Initialise the IF clause string length
jr nz,$+$19      ; jr nz,$+$19      | 0435CF 043597 || 0435CF 20 17       8469     JR      NZ,LISTB  ; If there is no IF clause, skip the next bit
inc iy           ; inc iy           | 0435D1 043599 || 0435D1 FD 23       8471     INC     IY               ; Skip the IF token
call $040a78     ; call $040a70     | 0435D3 04359B || 0435D3 CD 78 0A 04 8472     CALL    NXT              ; And skip any spaces
ex de,hl         ; ex de,hl         | 0435D7 04359F || 0435D7 EB          8473     EX      DE,HL   ; DE: Address in memory
push iy          ; push iy          | 0435D8 0435A0 || 0435D8 FD E5       8474     PUSH    IY   ; LD IY, HL
pop hl           ; pop hl           | 0435DA 0435A2 || 0435DA E1          8475     POP     HL               ; HL is now the address of the tokenised line
ld a,$0d         ; ld a,$0d         | 0435DB 0435A3 || 0435DB 3E 0D       8476     LD      A,CR
push bc          ; push bc          | 0435DD 0435A5 || 0435DD C5          8477     PUSH    BC   ; Stack the second line number arg
ld bc,$000100    ; ld bc,$000100    | 0435DE 0435A6 || 0435DE 01 00 01 00 8478     LD      BC,256
cpir             ; cpir             | 0435E2 0435AA || 0435E2 ED B1       8479     CPIR                     ; Locate CR byte
ld a,c           ; ld a,c           | 0435E4 0435AC || 0435E4 79          8480     LD      A,C
cpl              ; cpl              | 0435E5 0435AD || 0435E5 2F          8481     CPL                       ; A: Substring length (of IF clause)
pop bc           ; pop bc           | 0435E6 0435AE || 0435E6 C1          8482     POP     BC   ; Restore the second line number arg
ex de,hl         ; ex de,hl         | 0435E7 0435AF || 0435E7 EB          8483     EX      DE,HL   ; HL: Address in memory
ld e,a           ; ld e,a           | 0435E8 0435B0 || 0435E8 5F          8485  LISTB:   LD      E,A              ; E: IF clause string length
ld a,b           ; ld a,b           | 0435E9 0435B1 || 0435E9 78          8486     LD      A,B   ; Check whether a second line number was passed (BC!=0)
or c             ; or c             | 0435EA 0435B2 || 0435EA B1          8487     OR      C
jr nz,$+$03      ; jr nz,$+$03      | 0435EB 0435B3 || 0435EB 20 01       8488     JR      NZ,LISTA  ; If there isn't a second line number
dec bc           ; dec bc           | 0435ED 0435B5 || 0435ED 0B          8489     DEC     BC   ; then we set it to the maximum of 65535
exx              ; exx              | 0435EE 0435B6 || 0435EE D9          8491  LISTA:   EXX
ld ix,$044d40    ; ld ix,$044d40    | 0435EF 0435B7 || 0435EF DD 21 40 4D 8492     LD      IX,LISTON  ; IX : Pointer to the LISTON (LISTO and OPT) sysvar
ld bc,$000000    ; ld bc,$000000    | 0435F4 0435BC || 0435F4 01 00 00 00 8493     LD      BC,0             ; BC': Indentation counter (C: FOR/NEXT, B: REPEAT/UNTIL)
exx              ; exx              | 0435F8 0435C0 || 0435F8 D9          8494     EXX
ld a,$14         ; ld a,$14         | 0435F9 0435C1 || 0435F9 3E 14       8495     LD      A,20   ; Number of lines to list
push bc          ; push bc          | 0435FB 0435C3 || 0435FB C5          8497  LISTC:   PUSH    BC               ; Save second line number
push de          ; push de          | 0435FC 0435C4 || 0435FC D5          8498     PUSH    DE               ; Save IF clause length
push hl          ; push hl          | 0435FD 0435C5 || 0435FD E5          8499     PUSH    HL               ; Save BASIC program counter
ex af,af'        ; ex af,af'        | 0435FE 0435C6 || 0435FE 08          8500     EX      AF,AF'
ld a,(hl)        ; ld a,(hl)        | 0435FF 0435C7 || 0435FF 7E          8509     LD      A,(HL)   ; Check for end of program marker
or a             ; or a             | 043600 0435C8 || 043600 B7          8510     OR      A   ; If found
jr z,$+$14       ; jr z,$+$14       | 043601 0435C9 || 043601 28 12       8511     JR      Z,WARMNC  ; Jump to WARMNC (F=NC, so will jump to WARM)
ld a,e           ; ld a,e           | 043603 0435CB || 043603 7B          8515     LD      A,E              ; A: IF clause length
inc hl           ; inc hl           | 043604 0435CC || 043604 23          8516     INC     HL   ; Skip the length byte
ld de,$000000    ; ld de,$000000    | 043605 0435CD || 043605 11 00 00 00 8517     LD DE,0   ; Clear DE
ld e,(hl)        ; ld e,(hl)        | 043609 0435D1 || 043609 5E          8518     LD      E,(HL)   ; Fetch the line number in DE
inc hl           ; inc hl           | 04360A 0435D2 || 04360A 23          8519     INC     HL
ld d,(hl)        ; ld d,(hl)        | 04360B 0435D3 || 04360B 56          8520     LD      D,(HL)
dec hl           ; dec hl           | 04360C 0435D4 || 04360C 2B          8521     DEC     HL   ; Step HL back to the length byte
dec hl           ; dec hl           | 04360D 0435D5 || 04360D 2B          8522     DEC     HL
push de          ; push de          | 04360E 0435D6 || 04360E D5          8523     PUSH    DE                ; Push the line number on the stack
ex de,hl         ; ex de,hl         | 04360F 0435D7 || 04360F EB          8524     EX      DE,HL   ; HL: line number
scf              ; scf              | 043610 0435D8 || 043610 37          8525     SCF    ; Do a 16-bit compare of HL and DE
sbc hl,bc        ; sbc hl,bc        | 043611 0435D9 || 043611 ED 42       8526     SBC     HL,BC
ex de,hl         ; ex de,hl         | 043613 0435DB || 043613 EB          8527     EX      DE,HL
pop de           ; pop de           | 043614 0435DC || 043614 D1          8528     POP     DE               ; Restore the line number
jp nc,$0430b7    ; jp nc,$04307f    | 043615 0435DD || 043615 D2 B7 30 04 8529  WARMNC:   JP      NC,WARM   ; If exceeded the terminating line number then jump to WARM
ld c,(hl)        ; ld c,(hl)        | 043619 0435E1 || 043619 4E          8530     LD      C,(HL)           ; C: Line length + 4
ld b,a           ; ld b,a           | 04361A 0435E2 || 04361A 47          8531     LD      B,A              ; B: IF clause length
ld a,d           ; ld a,d           | 04361B 0435E3 || 04361B 7A          8535     LD      A,D   ; TODO: What is "UNLISTABLE?"
or e             ; or e             | 04361C 0435E4 || 04361C B3          8536     OR      E
jp z,$0430b8     ; jp z,$043080     | 04361D 0435E5 || 04361D CA B8 30 04 8537     JP      Z,CLOOP
inc hl           ; inc hl           | 043621 0435E9 || 043621 23          8541     INC     HL   ; Skip the length
inc hl           ; inc hl           | 043622 0435EA || 043622 23          8542     INC     HL   ; Skip the line number
inc hl           ; inc hl           | 043623 0435EB || 043623 23          8543     INC     HL               ; HL: Address of the tokenised BASIC line
dec c            ; dec c            | 043624 0435EC || 043624 0D          8544     DEC     C   ;  C: Line length
dec c            ; dec c            | 043625 0435ED || 043625 0D          8545     DEC     C
dec c            ; dec c            | 043626 0435EE || 043626 0D          8546     DEC     C
dec c            ; dec c            | 043627 0435EF || 043627 0D          8547     DEC     C
push de          ; push de          | 043628 0435F0 || 043628 D5          8548     PUSH    DE               ; Save the line number
push hl          ; push hl          | 043629 0435F1 || 043629 E5          8549     PUSH    HL               ; Save the BASIC program address
xor a            ; xor a            | 04362A 0435F2 || 04362A AF          8550     XOR     A                ;
cp b             ; cp b             | 04362B 0435F3 || 04362B B8          8551     CP      B                 ; Check for an IF clause (B!=0)
push iy          ; push iy          | 04362C 0435F4 || 04362C FD E5       8552     PUSH    IY   ; LD IY, DE
pop de           ; pop de           | 04362E 0435F6 || 04362E D1          8553     POP     DE               ; DE: Address of the IF clause string in the input buffer
call nz,$04078a  ; call nz,$040785  | 04362F 0435F7 || 04362F C4 8A 07 04 8554     CALL    NZ,SEARCH        ; If there is an IF clause (B!=0) then search for it
pop hl           ; pop hl           | 043633 0435FB || 043633 E1          8555     POP     HL               ; Restore BASIC program address
pop de           ; pop de           | 043634 0435FC || 043634 D1          8556     POP     DE               ; Restore line number
push iy          ; push iy          | 043635 0435FD || 043635 FD E5       8557     PUSH    IY
call z,$0438ca   ; call z,$043892   | 043637 0435FF || 043637 CC CA 38 04 8558     CALL    Z,LISTIT         ; List if no IF clause OR there is an IF clause match
pop iy           ; pop iy           | 04363B 043603 || 04363B FD E1       8559     POP     IY
ex af,af'        ; ex af,af'        | 04363D 043605 || 04363D 08          8561     EX      AF,AF'
dec a            ; dec a            | 04363E 043606 || 04363E 3D          8562     DEC     A   ; Decrement line list counter
call $043fa9     ; call $043f71     | 04363F 043607 || 04363F CD A9 3F 04 8563     CALL    LTRAP   ; TODO: This destroys A - is this a bug I've introduced in LTRAP?
pop hl           ; pop hl           | 043643 04360B || 043643 E1          8564     POP     HL                ; Restore BASIC program address to beginning of line
ld de,$000000    ; ld de,$000000    | 043644 04360C || 043644 11 00 00 00 8565     LD DE,0
ld e,(hl)        ; ld e,(hl)        | 043648 043610 || 043648 5E          8566     LD      E,(HL)   ; Fetch the length of line in DE
add hl,de        ; add hl,de        | 043649 043611 || 043649 19          8567     ADD     HL,DE            ; Go to the next line
pop de           ; pop de           | 04364A 043612 || 04364A D1          8568     POP     DE               ; Restore IF clause length
pop bc           ; pop bc           | 04364B 043613 || 04364B C1          8569     POP     BC               ; Restore second line number
jr $-$51         ; jr $-$51         | 04364C 043614 || 04364C 18 AD       8570     JR      LISTC   ; Loop back to do next line
call $0438ae     ; call $043876     | 04364E 043616 || 04364E CD AE 38 04 8577  RENUM:   CALL    CLEAR            ; Uses the heap so clear all dynamic variables and function/procedure pointers
call $043c63     ; call $043c2b     | 043652 04361A || 043652 CD 63 3C 04 8578     CALL    PAIR             ; Fetch the parameters - HL: start (NEW line number), BC: increment
exx              ; exx              | 043656 04361E || 043656 D9          8579     EXX
ld hl,($044d14)  ; ld hl,($044d14)  | 043657 04361F || 043657 2A 14 4D 04 8580     LD      HL,(PAGE_)  ; HL: Top of program
ld de,($044d1a)  ; ld de,($044d1a)  | 04365B 043623 || 04365B ED 5B 1A 4D 8581     LD      DE,(LOMEM)  ; DE: Start address of the heap
ld a,(hl)        ; ld a,(hl)        | 043660 043628 || 043660 7E          8585  RENUM1:   LD      A,(HL)           ; Fetch the line length byte
or a             ; or a             | 043661 043629 || 043661 B7          8586     OR      A   ; Is it zero, i.e. the end of program marker?
jr z,$+$38       ; jr z,$+$38       | 043662 04362A || 043662 28 36       8587     JR      Z,RENUM2  ; Yes, so skip to the next part
inc hl           ; inc hl           | 043664 04362C || 043664 23          8588     INC     HL
ld c,(hl)        ; ld c,(hl)        | 043665 04362D || 043665 4E          8589     LD      C,(HL)           ; BC: The OLD line number
inc hl           ; inc hl           | 043666 04362E || 043666 23          8590     INC     HL
ld b,(hl)        ; ld b,(hl)        | 043667 04362F || 043667 46          8591     LD      B,(HL)
ld a,b           ; ld a,b           | 043668 043630 || 043668 78          8592     LD      A,B   ; Check whether the line number is zero - we only need to check the LSW
or c             ; or c             | 043669 043631 || 043669 B1          8593     OR      C
jp z,$0430b8     ; jp z,$043080     | 04366A 043632 || 04366A CA B8 30 04 8594     JP      Z,CLOOP          ; If the line number is zero, then exit back to the command line
ex de,hl         ; ex de,hl         | 04366E 043636 || 04366E EB          8595     EX      DE,HL   ; DE: Pointer to BASIC program, HL: Pointer to heap
ld (hl),c        ; ld (hl),c        | 04366F 043637 || 04366F 71          8596     LD      (HL),C   ; Store the OLD line number in the heap
inc hl           ; inc hl           | 043670 043638 || 043670 23          8597     INC     HL
ld (hl),b        ; ld (hl),b        | 043671 043639 || 043671 70          8598     LD      (HL),B
inc hl           ; inc hl           | 043672 04363A || 043672 23          8599     INC     HL
exx              ; exx              | 043673 04363B || 043673 D9          8600     EXX    ; HL: line number, BC: increment (16-bit values)
push hl          ; push hl          | 043674 04363C || 043674 E5          8601     PUSH    HL   ; HL: Stack the NEW line number value
add.sil hl,bc    ; add.sil hl,bc    | 043675 04363D || 043675 52 09       8602     ADD.S   HL,BC            ; Add the increment
jp c,$043c5d     ; jp c,$043c25     | 043677 04363F || 043677 DA 5D 3C 04 8603     JP      C,TOOBIG         ; If > 65535, then error: "Too big"
exx              ; exx              | 04367B 043643 || 04367B D9          8604     EXX    ; DE: Pointer to BASIC program, HL: Pointer to heap
pop bc           ; pop bc           | 04367C 043644 || 04367C C1          8605     POP     BC   ; BC: Pop the NEW line number value off the stack
ld (hl),c        ; ld (hl),c        | 04367D 043645 || 04367D 71          8606     LD      (HL),C   ; Store the NEW line number in the heap
inc hl           ; inc hl           | 04367E 043646 || 04367E 23          8607     INC     HL
ld (hl),b        ; ld (hl),b        | 04367F 043647 || 04367F 70          8608     LD      (HL),B
inc hl           ; inc hl           | 043680 043648 || 043680 23          8609     INC     HL
ex de,hl         ; ex de,hl         | 043681 043649 || 043681 EB          8610     EX      DE,HL   ; HL: Pointer to BASIC program, DE: Pointer to heap
dec hl           ; dec hl           | 043682 04364A || 043682 2B          8611     DEC     HL   ; Back up to the line length byte
dec hl           ; dec hl           | 043683 04364B || 043683 2B          8612     DEC     HL
ld bc,$000000    ; ld bc,$000000    | 043684 04364C || 043684 01 00 00 00 8613     LD BC, 0
ld c,(hl)        ; ld c,(hl)        | 043688 043650 || 043688 4E          8614     LD      C,(HL)   ; BC: Line length
add hl,bc        ; add hl,bc        | 043689 043651 || 043689 09          8615     ADD HL,BC            ; Advance HL to next line
ex de,hl         ; ex de,hl         | 04368A 043652 || 04368A EB          8616     EX      DE,HL   ; DE: Pointer to BASIC program, HL: Pointer to heap
push hl          ; push hl          | 04368B 043653 || 04368B E5          8617     PUSH    HL
inc h            ; inc h            | 04368C 043654 || 04368C 24          8618     INC     H   ; Increment to next page
sbc hl,sp        ; sbc hl,sp        | 04368D 043655 || 04368D ED 72       8619     SBC     HL,SP   ; Subtract from SP
pop hl           ; pop hl           | 04368F 043657 || 04368F E1          8620     POP     HL
ex de,hl         ; ex de,hl         | 043690 043658 || 043690 EB          8621     EX      DE, HL   ; HL: Pointer to BASIC program, DE: Pointer to heap
jr c,$-$31       ; jr c,$-$31       | 043691 043659 || 043691 38 CD       8622     JR      C,RENUM1         ; Loop, as the heap pointer has not strayed into the stack page
call $0437af     ; call $043777     | 043693 04365B || 043693 CD AF 37 04 8623     CALL    EXTERR           ; Otherwise throw error: "RENUMBER space'
call z,$eb0008   ; call z,$eb0008   | 043697 04365F || 043697 CC          8624     DB     REN
ld (hl),$ff      ; ld (hl),$ff      | 04369B 043663 || 04369B 36 FF       8634     LD      (HL),-1   ; Mark the end with FFFFh
inc hl           ; inc hl           | 04369D 043665 || 04369D 23          8635     INC     HL
ld (hl),$ff      ; ld (hl),$ff      | 04369E 043666 || 04369E 36 FF       8636     LD      (HL),-1
ld de,($044d1a)  ; ld de,($044d1a)  | 0436A0 043668 || 0436A0 ED 5B 1A 4D 8637     LD      DE,(LOMEM)  ; DE: Pointer to the start of the heap
exx              ; exx              | 0436A5 04366D || 0436A5 D9          8638     EXX
ld hl,($044d14)  ; ld hl,($044d14)  | 0436A6 04366E || 0436A6 2A 14 4D 04 8639     LD      HL,(PAGE_)  ; HL: Start of the BASIC program area
ld c,(hl)        ; ld c,(hl)        | 0436AA 043672 || 0436AA 4E          8640  RENUM3:   LD      C,(HL)   ; Fetch the first line length byte
ld a,c           ; ld a,c           | 0436AB 043673 || 0436AB 79          8641     LD      A,C   ; If it is zero, then no program, so...
or a             ; or a             | 0436AC 043674 || 0436AC B7          8642     OR      A
jp z,$0430b7     ; jp z,$04307f     | 0436AD 043675 || 0436AD CA B7 30 04 8643     JP      Z,WARM   ; Jump to warm start
exx              ; exx              | 0436B1 043679 || 0436B1 D9          8644     EXX    ; HL: Pointer to end of heap, DE: Pointer to start of heap
ex de,hl         ; ex de,hl         | 0436B2 04367A || 0436B2 EB          8645     EX      DE,HL   ; DE: Pointer to end of heap, HL: Pointer to start of heap
inc hl           ; inc hl           | 0436B3 04367B || 0436B3 23          8646     INC     HL   ; Skip to the NEW line number
inc hl           ; inc hl           | 0436B4 04367C || 0436B4 23          8647     INC     HL
ld e,(hl)        ; ld e,(hl)        | 0436B5 04367D || 0436B5 5E          8648     LD      E,(HL)   ; DE: The NEW line number
inc hl           ; inc hl           | 0436B6 04367E || 0436B6 23          8649     INC     HL
ld d,(hl)        ; ld d,(hl)        | 0436B7 04367F || 0436B7 56          8650     LD      D,(HL)
inc hl           ; inc hl           | 0436B8 043680 || 0436B8 23          8651     INC     HL
push de          ; push de          | 0436B9 043681 || 0436B9 D5          8652     PUSH    DE   ; Stack the NEW line number
ex de,hl         ; ex de,hl         | 0436BA 043682 || 0436BA EB          8653     EX      DE,HL   ; HL: The NEW line number, DE: Pointer to the end of heap
ld ($044d23),hl  ; ld ($044d23),hl  | 0436BB 043683 || 0436BB 22 23 4D 04 8654     LD      (LINENO),HL  ; Store the line number in LINENO
exx              ; exx              | 0436BF 043687 || 0436BF D9          8655     EXX    ; HL: Pointer to the BASIC program area
pop de           ; pop de           | 0436C0 043688 || 0436C0 D1          8656     POP     DE   ; DE: The NEW line number
inc hl           ; inc hl           | 0436C1 043689 || 0436C1 23          8657     INC     HL
ld (hl),e        ; ld (hl),e        | 0436C2 04368A || 0436C2 73          8658     LD      (HL),E           ; Write out the NEW line number to the BASIC program
inc hl           ; inc hl           | 0436C3 04368B || 0436C3 23          8659     INC     HL
ld (hl),d        ; ld (hl),d        | 0436C4 04368C || 0436C4 72          8660     LD      (HL),D
inc hl           ; inc hl           | 0436C5 04368D || 0436C5 23          8661     INC     HL
dec c            ; dec c            | 0436C6 04368E || 0436C6 0D          8662     DEC     C   ; Subtract 3 from the line length to compensate for increasing HL by 3 above
dec c            ; dec c            | 0436C7 04368F || 0436C7 0D          8663     DEC     C
dec c            ; dec c            | 0436C8 043690 || 0436C8 0D          8664     DEC     C
ld a,c           ; ld a,c           | 0436C9 043691 || 0436C9 79          8665     LD A,C
ld bc,$000000    ; ld bc,$000000    | 0436CA 043692 || 0436CA 01 00 00 00 8666     LD BC,0
ld c,a           ; ld c,a           | 0436CE 043696 || 0436CE 4F          8667     LD C,A   ; BC: Line length
ld a,$8d         ; ld a,$8d         | 0436CF 043697 || 0436CF 3E 8D       8669  RENUM7:   LD      A,LINO_MN   ; A: The token code that precedes any line number encoded in BASIC (i.e. GOTO/GOSUB)
cpir             ; cpir             | 0436D1 043699 || 0436D1 ED B1       8670     CPIR                     ; Search for the token
jr nz,$-$29      ; jr nz,$-$29      | 0436D3 04369B || 0436D3 20 D5       8671     JR      NZ,RENUM3  ; If not found, then loop to process the next line
push bc          ; push bc          | 0436D5 04369D || 0436D5 C5          8675     PUSH    BC   ; Stack everything
push hl          ; push hl          | 0436D6 04369E || 0436D6 E5          8676     PUSH    HL
push hl          ; push hl          | 0436D7 04369F || 0436D7 E5          8677     PUSH    HL   ; HL: Pointer to encoded line number
pop iy           ; pop iy           | 0436D8 0436A0 || 0436D8 FD E1       8678     POP     IY   ; IY: Pointer to encoded line number
exx              ; exx              | 0436DA 0436A2 || 0436DA D9          8679     EXX
call $0408eb     ; call $0408e6     | 0436DB 0436A3 || 0436DB CD EB 08 04 8680     CALL    DECODE   ; Decode the encoded line number (in HL')
exx              ; exx              | 0436DF 0436A7 || 0436DF D9          8681     EXX    ; HL: Decoded line number
ld b,h           ; ld b,h           | 0436E0 0436A8 || 0436E0 44          8682     LD      B,H   ; BC: Decoded line number
ld c,l           ; ld c,l           | 0436E1 0436A9 || 0436E1 4D          8683     LD      C,L
ld hl,($044d1a)  ; ld hl,($044d1a)  | 0436E2 0436AA || 0436E2 2A 1A 4D 04 8684     LD      HL,(LOMEM)  ; HL: Pointer to heap
ld e,(hl)        ; ld e,(hl)        | 0436E6 0436AE || 0436E6 5E          8689  RENUM4:   LD      E,(HL)           ; DE: The OLD line number
inc hl           ; inc hl           | 0436E7 0436AF || 0436E7 23          8690     INC     HL
ld d,(hl)        ; ld d,(hl)        | 0436E8 0436B0 || 0436E8 56          8691     LD      D,(HL)
inc hl           ; inc hl           | 0436E9 0436B1 || 0436E9 23          8692     INC     HL
ex de,hl         ; ex de,hl         | 0436EA 0436B2 || 0436EA EB          8693     EX      DE,HL   ; HL: The OLD line number, DE: Pointer in the global heap
or a             ; or a             | 0436EB 0436B3 || 0436EB B7          8694     OR      A                ; Clear the carry and...
sbc.sil hl,bc    ; sbc.sil hl,bc    | 0436EC 0436B4 || 0436EC 52 ED 42    8695     SBC.S   HL,BC   ; Compare by means of subtraction the OLD line number against the one in the heap
ex de,hl         ; ex de,hl         | 0436EF 0436B7 || 0436EF EB          8696     EX      DE,HL   ; HL: Pointer in the global heap
ld e,(hl)        ; ld e,(hl)        | 0436F0 0436B8 || 0436F0 5E          8697     LD      E,(HL)           ; DE: The NEW line number
inc hl           ; inc hl           | 0436F1 0436B9 || 0436F1 23          8698     INC     HL
ld d,(hl)        ; ld d,(hl)        | 0436F2 0436BA || 0436F2 56          8699     LD      D,(HL)
inc hl           ; inc hl           | 0436F3 0436BB || 0436F3 23          8700     INC     HL
jr c,$-$0e       ; jr c,$-$0e       | 0436F4 0436BC || 0436F4 38 F0       8701     JR      C,RENUM4  ; Loop until there is a match (Z) or not (NC)
ex de,hl         ; ex de,hl         | 0436F6 0436BE || 0436F6 EB          8702     EX      DE,HL   ; DE: Pointer in the global heap
jr z,$+$1f       ; jr z,$+$1f       | 0436F7 0436BF || 0436F7 28 1D       8703     JR      Z,RENUM5         ; If Z flag is set, there is an exact match to the decoded line number on the heap
call $043dc8     ; call $043d90     | 0436F9 0436C1 || 0436F9 CD C8 3D 04 8705     CALL    TELL   ; Display this error if the line number is not found
ld b,(hl)        ; ld b,(hl)        | 0436FD 0436C5 || 0436FD 46 61 69 6C 8706     DB     "Failed at "
ld h,c           ;                  | 0436FE        || ld h,c                         ; 0436C6
ld l,c           ;                  | 0436FF        || ld l,c                         ; 0436C7
ld l,h           ;                  | 043700        || ld l,h                         ; 0436C8
ld h,l           ;                  | 043701        || ld h,l                         ; 0436C9
ld h,h           ;                  | 043702        || ld h,h                         ; 0436CA
jr nz,$+$63      ;                  | 043703        || jr nz,$+$63                    ; 0436CB
ld (hl),h        ;                  | 043705        || ld (hl),h                      ; 0436CD
jr nz,$+$02      ;                  | 043706        || jr nz,$+$02                    ; 0436CE
ld hl,($044d23)  ; ld hl,($044d23)  | 043708 0436D0 || 043708 2A 23 4D 04 8708     LD      HL,(LINENO)
call $043a2f     ; call $0439f7     | 04370C 0436D4 || 04370C CD 2F 3A 04 8709     CALL    PBCDL
call $04397f     ; call $043947     | 043710 0436D8 || 043710 CD 7F 39 04 8710     CALL    CRLF
jr $+$09         ; jr $+$09         | 043714 0436DC || 043714 18 07       8711     JR      RENUM6   ; And carry on renumbering
pop de           ; pop de           | 043716 0436DE || 043716 D1          8715  RENUM5:   POP     DE   ; DE: Pointer to the encoded line number in the listing
push de          ; push de          | 043717 0436DF || 043717 D5          8716     PUSH    DE
dec de           ; dec de           | 043718 0436E0 || 043718 1B          8717     DEC     DE   ; Back up a byte to the LINO token
call $043d94     ; call $043d5c     | 043719 0436E1 || 043719 CD 94 3D 04 8718     CALL    ENCODE           ; Re-write the new line number out
pop hl           ; pop hl           | 04371D 0436E5 || 04371D E1          8719  RENUM6:   POP     HL   ; HL: Pointer to the encoded line number in the listing
pop bc           ; pop bc           | 04371E 0436E6 || 04371E C1          8720     POP     BC   ; BC: The remaining line length
jr $-$50         ; jr $-$50         | 04371F 0436E7 || 04371F 18 AE       8721     JR      RENUM7   ; Carry on checking for any more encoded line numbers in this line
call $043c63     ; call $043c2b     | 043721 0436E9 || 043721 CD 63 3C 04 8728  AUTO:   CALL    PAIR   ; Get the parameter pair (HL: first parameter, BC: second parameter)
ld ($044d29),hl  ; ld ($044d29),hl  | 043725 0436ED || 043725 22 29 4D 04 8729     LD      (AUTONO),HL  ; Store the start in AUTONO
ld a,c           ; ld a,c           | 043729 0436F1 || 043729 79          8730     LD      A,C   ; Increment is 8 bit (0-255)
ld ($044d41),a   ; ld ($044d41),a   | 04372A 0436F2 || 04372A 32 41 4D 04 8731     LD      (INCREM),A  ; Store that in INCREM
jr $+$30         ; jr $+$30         | 04372E 0436F6 || 04372E 18 2E       8732     JR      CLOOP0   ; Jump back indirectly to the command loop via CLOOP0 (optimisation for size)
call $043dc8     ; call $043d90     | 043730 0436F8 || 043730 CD C8 3D 04 8737  BAD:   CALL    TELL             ; Output "Bad program" error
inc bc           ; inc bc           | 043734 0436FC || 043734 03          8738     DB    3    ; Token for "BAD"
ld (hl),b        ; ld (hl),b        | 043735 0436FD || 043735 70 72 6F 67 8739     DB    "program"
ld (hl),d        ;                  | 043736        || ld (hl),d                      ; 0436FE
ld l,a           ;                  | 043737        || ld l,a                         ; 0436FF
ld h,a           ;                  | 043738        || ld h,a                         ; 043700
ld (hl),d        ;                  | 043739        || ld (hl),d                      ; 043701
ld h,c           ;                  | 04373A        || ld h,c                         ; 043702
ld l,l           ;                  | 04373B        || ld l,l                         ; 043703
dec c            ; dec c            | 04373C 043704 || 04373C 0D          8740     DB    CR
ld a,(bc)        ; ld a,(bc)        | 04373D 043705 || 04373D 0A          8741     DB    LF
nop              ; nop              | 04373E 043706 || 04373E 00          8742     DB    0    ; Falls through to NEW
call $0438a4     ; call $04386c     | 04373F 043707 || 04373F CD A4 38 04 8744  NEW:   CALL    NEWIT   ; Call NEWIT (clears program area and variables)
jr $+$1b         ; jr $+$1b         | 043743 04370B || 043743 18 19       8745     JR      CLOOP0   ; Jump back indirectly to the command loop via CLOOP0 (optimisation for size)
ld hl,($044d14)  ; ld hl,($044d14)  | 043745 04370D || 043745 2A 14 4D 04 8749  OLD:   LD      HL,(PAGE_)  ; HL: The start of the BASIC program area
push hl          ; push hl          | 043749 043711 || 043749 E5          8750     PUSH    HL   ; Stack it
inc hl           ; inc hl           | 04374A 043712 || 04374A 23          8751     INC     HL   ; Skip the potential length byte of first line of code
inc hl           ; inc hl           | 04374B 043713 || 04374B 23          8752     INC     HL   ; And the line number word
inc hl           ; inc hl           | 04374C 043714 || 04374C 23          8753     INC     HL
ld bc,$0000fc    ; ld bc,$0000fc    | 04374D 043715 || 04374D 01 FC 00 00 8754     LD      BC,252   ; Look for a CR in the first 252 bytes of code; maximum line length
ld a,$0d         ; ld a,$0d         | 043751 043719 || 043751 3E 0D       8755     LD      A,CR
cpir             ; cpir             | 043753 04371B || 043753 ED B1       8756     CPIR
jr nz,$-$25      ; jr nz,$-$25      | 043755 04371D || 043755 20 D9       8757     JR      NZ,BAD   ; If not found, then the first line of code is not a valid BBC BASIC code
ld a,l           ; ld a,l           | 043757 04371F || 043757 7D          8758     LD      A,L   ; It could still be garbage though! Store the position in A; this requires
pop hl           ; pop hl           | 043758 043720 || 043758 E1          8759     POP     HL   ; PAGE to be on a 256 page boundary, and is now the length of the first line
ld (hl),a        ; ld (hl),a        | 043759 043721 || 043759 77          8760     LD      (HL),A   ; Restore the length byte (this will have been set to 0 by NEW)
call $043877     ; call $04383f     | 04375A 043722 || 04375A CD 77 38 04 8761     CALL    CLEAN   ; Further checks for bad program, set TOP, write out &FFFF end of program marker
jp $0430b8       ; jp $043080       | 04375E 043726 || 04375E C3 B8 30 04 8762  CLOOP0:   JP      CLOOP   ; Jump back to the command loop
call $04031a     ; call $040315     | 043762 04372A || 043762 CD 1A 03 04 8766  LOAD:   CALL    EXPRS            ; Get the filename
ld a,$0d         ; ld a,$0d         | 043766 04372E || 043766 3E 0D       8767     LD      A,CR   ; DE points to the last byte of filename in ACCS
ld (de),a        ; ld (de),a        | 043768 043730 || 043768 12          8768     LD      (DE),A   ; Terminate filename with a CR
call $043857     ; call $04381f     | 043769 043731 || 043769 CD 57 38 04 8769     CALL    LOAD0   ; Load the file in, then CLEAN
call $0438ae     ; call $043876     | 04376D 043735 || 04376D CD AE 38 04 8770     CALL    CLEAR   ; Further checks for bad program, set TOP, write out &FFFF end of program marker
jr $+$23         ; jr $+$23         | 043771 043739 || 043771 18 21       8771     JR      WARM0   ; Jump back to the command loop
call $043883     ; call $04384b     | 043773 04373B || 043773 CD 83 38 04 8775  SAVE:   CALL    SETTOP           ; Set TOP sysvar
call $04031a     ; call $040315     | 043777 04373F || 043777 CD 1A 03 04 8776     CALL    EXPRS            ; Get the filename
ld a,$0d         ; ld a,$0d         | 04377B 043743 || 04377B 3E 0D       8777     LD      A,CR   ; Terminate the filename with a CR
ld (de),a        ; ld (de),a        | 04377D 043745 || 04377D 12          8778     LD      (DE),A
ld de,($044d14)  ; ld de,($044d14)  | 04377E 043746 || 04377E ED 5B 14 4D 8779     LD      DE,(PAGE_)  ; DE: Start of program memory
ld hl,($044d17)  ; ld hl,($044d17)  | 043783 04374B || 043783 2A 17 4D 04 8780     LD      HL,(TOP)  ; HL: Top of program memory
or a             ; or a             | 043787 04374F || 043787 B7          8781     OR      A   ; Calculate program size (TOP-PAGE)
sbc hl,de        ; sbc hl,de        | 043788 043750 || 043788 ED 52       8782     SBC     HL,DE
ld b,h           ; ld b,h           | 04378A 043752 || 04378A 44          8783     LD      B,H              ; BC: Length of program in bytes
ld c,l           ; ld c,l           | 04378B 043753 || 04378B 4D          8784     LD      C,L
ld hl,$044a00    ; ld hl,$044a00    | 04378C 043754 || 04378C 21 00 4A 04 8785     LD      HL,ACCS   ; HL: Address of the filename
call $044276     ; call $04422d     | 043790 043758 || 043790 CD 76 42 04 8786     CALL    OSSAVE   ; Call the SAVE routine in patch.asm
jp $0430b7       ; jp $04307f       | 043794 04375C || 043794 C3 B7 30 04 8787  WARM0:   JP      WARM   ; Jump back to the command loop
ld sp,($044d20)  ; ld sp,($044d20)  | 043798 043760 || 043798 ED 7B 20 4D 8796  ERROR_:   LD      SP,(HIMEM)  ; Set SP to HIMEM
ld hl,$043481    ; ld hl,$043449    | 04379D 043765 || 04379D 21 81 34 04 8797     LD      HL,ERRWDS  ; Index into the error string table
or a             ; or a             | 0437A1 043769 || 0437A1 B7          8798     OR      A   ; We don't need to search for the first error
jr z,$+$0c       ; jr z,$+$0c       | 0437A2 04376A || 0437A2 28 0A       8799     JR      Z,ERROR1  ; So skip the search routine
ld b,a           ; ld b,a           | 0437A4 04376C || 0437A4 47          8805     LD      B,A              ; Store error number in B
ex af,af'        ; ex af,af'        | 0437A5 04376D || 0437A5 08          8806     EX      AF,AF'   ; Store error number in AF'
xor a            ; xor a            | 0437A6 04376E || 0437A6 AF          8807     XOR     A
cp (hl)          ; cp (hl)          | 0437A7 04376F || 0437A7 BE          8808  ERROR0:   CP      (HL)   ; Compare the character with 0 (the terminator byte)
inc hl           ; inc hl           | 0437A8 043770 || 0437A8 23          8809     INC     HL   ; Increment the string pointer
jr nz,$-$02      ; jr nz,$-$02      | 0437A9 043771 || 0437A9 20 FC       8810     JR      NZ,ERROR0  ; Loop until with hit a 0
djnz $-$04       ; djnz $-$04       | 0437AB 043773 || 0437AB 10 FA       8811     DJNZ    ERROR0   ; Decrements the error number and loop until 0
ex af,af'        ; ex af,af'        | 0437AD 043775 || 0437AD 08          8812     EX      AF,AF'   ; Restore the error number from AF'
push hl          ; push hl          | 0437AE 043776 || 0437AE E5          8816  ERROR1:   PUSH    HL   ; Stack the error string pointer and fall through to EXTERR
pop hl           ; pop hl           | 0437AF 043777 || 0437AF E1          8829  EXTERR:   POP     HL   ; Pop the error string pointer
ld ($044d2f),hl  ; ld ($044d2f),hl  | 0437B0 043778 || 0437B0 22 2F 4D 04 8830     LD      (ERRTXT),HL  ; Store in ERRTXT sysvar
ld sp,($044d20)  ; ld sp,($044d20)  | 0437B4 04377C || 0437B4 ED 7B 20 4D 8831     LD      SP,(HIMEM)  ; Set SP to HIMEM
ld ($044d3f),a   ; ld ($044d3f),a   | 0437B9 043781 || 0437B9 32 3F 4D 04 8832     LD      (ERR),A   ; Store error number in ERR sysvar
call $0439e6     ; call $0439ae     | 0437BD 043785 || 0437BD CD E6 39 04 8833     CALL    SETLIN   ; Get line number
ld ($044d33),hl  ; ld ($044d33),hl  | 0437C1 043789 || 0437C1 22 33 4D 04 8834     LD      (ERL),HL  ; Store in ERL sysvar
or a             ; or a             | 0437C5 04378D || 0437C5 B7          8835     OR      A   ; Is error number 0?
jr z,$+$0f       ; jr z,$+$0f       | 0437C6 04378E || 0437C6 28 0D       8836     JR      Z,ERROR2  ; Yes, so skip the next bit as error number 0 is untrappable
ld hl,($044d2c)  ; ld hl,($044d2c)  | 0437C8 043790 || 0437C8 2A 2C 4D 04 8838     LD      HL,(ERRTRP)  ; Check whether the error is trapped
ld a,h           ; ld a,h           | 0437CC 043794 || 0437CC 7C          8839     LD      A,H
or l             ; or l             | 0437CD 043795 || 0437CD B5          8840     OR      L
push hl          ; push hl          | 0437CE 043796 || 0437CE E5          8841     PUSH    HL   ; HL: Error line
pop iy           ; pop iy           | 0437CF 043797 || 0437CF FD E1       8842     POP     IY   ; IY: HL
jp nz,$040b9e    ; jp nz,$040b96    | 0437D1 043799 || 0437D1 C2 9E 0B 04 8843     JP      NZ,XEQ            ; If error trapped, jump to XEQ
ld hl,$000000    ; ld hl,$000000    | 0437D5 04379D || 0437D5 21 00 00 00 8845  ERROR2:   LD      HL,0
ld ($044d29),hl  ; ld ($044d29),hl  | 0437D9 0437A1 || 0437D9 22 29 4D 04 8846     LD      (AUTONO),HL  ; Cancel AUTO
ld ($044d26),hl  ; ld ($044d26),hl  | 0437DD 0437A5 || 0437DD 22 26 4D 04 8847     LD      (TRACEN),HL      ; Cancel TRACE
call $0443ff     ; call $0443b6     | 0437E1 0437A9 || 0437E1 CD FF 43 04 8848     CALL    RESET            ; Reset OPSYS
call $04397f     ; call $043947     | 0437E5 0437AD || 0437E5 CD 7F 39 04 8849     CALL    CRLF   ; Output newline
call $043dba     ; call $043d82     | 0437E9 0437B1 || 0437E9 CD BA 3D 04 8850     CALL    REPORT           ; Output the error message
call $043a1a     ; call $0439e2     | 0437ED 0437B5 || 0437ED CD 1A 3A 04 8851     CALL    SAYLN   ; Output " at line nnnn" message.
ld e,$00         ; ld e,$00         | 0437F1 0437B9 || 0437F1 1E 00       8852     LD      E,0   ; Close all files
call c,$044374   ; call c,$04432b   | 0437F3 0437BB || 0437F3 DC 74 43 04 8853     CALL    C,OSSHUT
call $04397f     ; call $043947     | 0437F7 0437BF || 0437F7 CD 7F 39 04 8854     CALL    CRLF   ; Output newline
jp $0430b8       ; jp $043080       | 0437FB 0437C3 || 0437FB C3 B8 30 04 8855     JP      CLOOP   ; Back to CLOOP
ld hl,$0431a0    ; ld hl,$043168    | 0437FF 0437C7 || 0437FF 21 A0 31 04 8867  LEX:   LD      HL,KEYWDS  ; Address of the keywords table
ld a,(iy)        ; ld a,(iy)        | 043803 0437CB || 043803 FD 7E 00    8869  LEX0:   LD      A,(IY)   ; Fetch the character to match
ld b,(hl)        ; ld b,(hl)        | 043806 0437CE || 043806 46          8870     LD      B,(HL)   ; B: The token from the keywords table
inc hl           ; inc hl           | 043807 0437CF || 043807 23          8871     INC     HL   ; Increment the pointer in the keywords table
cp (hl)          ; cp (hl)          | 043808 0437D0 || 043808 BE          8872     CP      (HL)   ; Compare the first characters
jr z,$+$0a       ; jr z,$+$0a       | 043809 0437D1 || 043809 28 08       8873     JR      Z,LEX2   ; If there is a match, then skip to LEX2
ret c            ; ret c            | 04380B 0437D3 || 04380B D8          8874     RET     C                ; No match, so fail
inc hl           ; inc hl           | 04380C 0437D4 || 04380C 23          8878  LEX1:   INC     HL   ; Increment the pointer
bit 7,(hl)       ; bit 7,(hl)       | 04380D 0437D5 || 04380D CB 7E       8879     BIT     7,(HL)   ; Check if bit 7 set (all token IDs have bit 7 set)
jr z,$-$03       ; jr z,$-$03       | 04380F 0437D7 || 04380F 28 FB       8880     JR      Z,LEX1   ; No, so loop
jr $-$0e         ; jr $-$0e         | 043811 0437D9 || 043811 18 F0       8881     JR      LEX0   ; At this point HL is pointing to the start of the next keyword
push iy          ; push iy          | 043813 0437DB || 043813 FD E5       8883  LEX2:   PUSH    IY               ; Save the input pointer
inc hl           ; inc hl           | 043815 0437DD || 043815 23          8884  LEX3:   INC     HL   ; Increment the keyword pointer
bit 7,(hl)       ; bit 7,(hl)       | 043816 0437DE || 043816 CB 7E       8885     BIT     7,(HL)   ; If we've reached the end (marked by the start of the next token) then
jr nz,$+$1e      ; jr nz,$+$1e      | 043818 0437E0 || 043818 20 1C       8886     JR      NZ,LEX6          ; Jump to here as we've found a token
inc iy           ; inc iy           | 04381A 0437E2 || 04381A FD 23       8887     INC     IY   ; Increment the text pointer
ld a,(iy)        ; ld a,(iy)        | 04381C 0437E4 || 04381C FD 7E 00    8888     LD      A,(IY)   ; Fetch the character
cp $2e           ; cp $2e           | 04381F 0437E7 || 04381F FE 2E       8889     CP      '.'   ; Is it an abbreviated keyword?
jr z,$+$15       ; jr z,$+$15       | 043821 0437E9 || 043821 28 13       8890     JR      Z,LEX6           ; Yes, so we'll return with the token we've found
cp (hl)          ; cp (hl)          | 043823 0437EB || 043823 BE          8891     CP      (HL)   ; Compare with the keywords list
jr z,$-$0f       ; jr z,$-$0f       | 043824 0437EC || 043824 28 EF       8892     JR      Z,LEX3   ; It's a match, so continue checking this keyword
call $043cb3     ; call $043c7b     | 043826 0437EE || 043826 CD B3 3C 04 8893     CALL    RANGE1   ; Is it alphanumeric, '@', '_' or '`'
jr c,$+$06       ; jr c,$+$06       | 04382A 0437F2 || 04382A 38 04       8894     JR      C,LEX5   ; No, so check whether keyword needs to be immediately delimited
pop iy           ; pop iy           | 04382C 0437F4 || 04382C FD E1       8896  LEX4:   POP     IY               ; Restore the input pointer ready for the next search
jr $-$22         ; jr $-$22         | 04382E 0437F6 || 04382E 18 DC       8897     JR      LEX1   ; And loop back to start again
ld a,(hl)        ; ld a,(hl)        | 043830 0437F8 || 043830 7E          8902  LEX5:   LD      A,(HL)   ; Fetch the byte from the keywords table
or a             ; or a             | 043831 0437F9 || 043831 B7          8903     OR      A   ; If it is not zero, then...
jr nz,$-$06      ; jr nz,$-$06      | 043832 0437FA || 043832 20 F8       8904     JR      NZ,LEX4   ; Keep searching
dec iy           ; dec iy           | 043834 0437FC || 043834 FD 2B       8905     DEC     IY   ; If it is zero, then skip the input pointer back one byte
pop af           ; pop af           | 043836 0437FE || 043836 F1          8909  LEX6:   POP     AF   ; Discard IY input pointer pushed on the stack
xor a            ; xor a            | 043837 0437FF || 043837 AF          8910     XOR     A   ; Set the Z flag
ld a,b           ; ld a,b           | 043838 043800 || 043838 78          8911     LD      A,B   ; A: The token
ret              ; ret              | 043839 043801 || 043839 C9          8912     RET
push de          ; push de          | 04383A 043802 || 04383A D5          8921  DEL:   PUSH    DE
push hl          ; push hl          | 04383B 043803 || 04383B E5          8922     PUSH    HL
push hl          ; push hl          | 04383C 043804 || 04383C E5          8923     PUSH    HL   ; HL: Address of the program line
ld b,$00         ; ld b,$00         | 04383D 043805 || 04383D 06 00       8924     LD      B,0   ; BC: Length of the line
ld c,(hl)        ; ld c,(hl)        | 04383F 043807 || 04383F 4E          8925     LD      C,(HL)
add hl,bc        ; add hl,bc        | 043840 043808 || 043840 09          8926     ADD     HL,BC   ; HL: Advanced to the start of the next line
push hl          ; push hl          | 043841 043809 || 043841 E5          8927     PUSH    HL
ex de,hl         ; ex de,hl         | 043842 04380A || 043842 EB          8928     EX      DE,HL   ; DE: Pointer to the next line
ld hl,($044d17)  ; ld hl,($044d17)  | 043843 04380B || 043843 2A 17 4D 04 8929     LD      HL,(TOP)  ; HL: Pointer to the end of the program
sbc hl,de        ; sbc hl,de        | 043847 04380F || 043847 ED 52       8930     SBC     HL,DE
ld b,h           ; ld b,h           | 043849 043811 || 043849 44          8931     LD      B,H   ; BC: Size of block to move
ld c,l           ; ld c,l           | 04384A 043812 || 04384A 4D          8932     LD      C,L
pop hl           ; pop hl           | 04384B 043813 || 04384B E1          8933     POP     HL   ; HL: Pointer to next line
pop de           ; pop de           | 04384C 043814 || 04384C D1          8934     POP     DE   ; DE: Pointer to this line
ldir             ; ldir             | 04384D 043815 || 04384D ED B0       8935     LDIR                     ; Delete the line
ld ($044d17),de  ; ld ($044d17),de  | 04384F 043817 || 04384F ED 53 17 4D 8936     LD      (TOP),DE  ; Adjust TOP
pop hl           ; pop hl           | 043854 04381C || 043854 E1          8937     POP     HL
pop de           ; pop de           | 043855 04381D || 043855 D1          8938     POP     DE
ret              ; ret              | 043856 04381E || 043856 C9          8939     RET
ld de,($044d14)  ; ld de,($044d14)  | 043857 04381F || 043857 ED 5B 14 4D 8949  LOAD0:    LD      DE,(PAGE_)  ; DE: Beginning of BASIC program area
ld hl,$ffff00    ; ld hl,$ffff00    | 04385C 043824 || 04385C 21 00 FF FF 8950     LD      HL,-256
add hl,sp        ; add hl,sp        | 043860 043828 || 043860 39          8951     ADD     HL,SP
sbc hl,de        ; sbc hl,de        | 043861 043829 || 043861 ED 52       8952     SBC     HL,DE            ; Find available space
ld b,h           ; ld b,h           | 043863 04382B || 043863 44          8953     LD      B,H
ld c,l           ; ld c,l           | 043864 04382C || 043864 4D          8954     LD      C,L
ld hl,$044a00    ; ld hl,$044a00    | 043865 04382D || 043865 21 00 4A 04 8955     LD      HL,ACCS
call $0441dd     ; call $044194     | 043869 043831 || 043869 CD DD 41 04 8956     CALL    OSLOAD           ; Call the OSLOAD function in patch
call nc,$0438a4  ; call nc,$04386c  | 04386D 043835 || 04386D D4 A4 38 04 8957     CALL    NC,NEWIT  ; If NC then NEW
ld a,$00         ; ld a,$00         | 043871 043839 || 043871 3E 00       8958     LD      A,0
jp nc,$043798    ; jp nc,$043760    | 043873 04383B || 043873 D2 98 37 04 8959     JP      NC,ERROR_         ; And trigger a "No room" error, otherwise...
call $043883     ; call $04384b     | 043877 04383F || 043877 CD 83 38 04 8961  CLEAN:   CALL    SETTOP   ; Set TOP sysvar
dec hl           ; dec hl           | 04387B 043843 || 04387B 2B          8962     DEC     HL   ; Write out the end of program markers
ld (hl),$ff      ; ld (hl),$ff      | 04387C 043844 || 04387C 36 FF       8963     LD      (HL),-1
dec hl           ; dec hl           | 04387E 043846 || 04387E 2B          8964     DEC     HL
ld (hl),$ff      ; ld (hl),$ff      | 04387F 043847 || 04387F 36 FF       8965     LD      (HL),-1
jr $+$2d         ; jr $+$2d         | 043881 043849 || 043881 18 2B       8966     JR      CLEAR   ; Clear all dynamic variables and function/procedure pointers
ld hl,($044d14)  ; ld hl,($044d14)  | 043883 04384B || 043883 2A 14 4D 04 8972  SETTOP:   LD      HL,(PAGE_)  ; Start at beginning of BASIC program area
ld bc,$000000    ; ld bc,$000000    | 043887 04384F || 043887 01 00 00 00 8973     LD BC, 0   ; BC: 0
ld a,$0d         ; ld a,$0d         | 04388B 043853 || 04388B 3E 0D       8974     LD      A,CR   ; End of line marker
ld c,(hl)        ; ld c,(hl)        | 04388D 043855 || 04388D 4E          8975  SETOP1:   LD      C,(HL)   ; BC: Get first byte of program line (line length)
inc c            ; inc c            | 04388E 043856 || 04388E 0C          8976     INC     C   ; Check for zero
dec c            ; dec c            | 04388F 043857 || 04388F 0D          8977     DEC     C
jr z,$+$0c       ; jr z,$+$0c       | 043890 043858 || 043890 28 0A       8978     JR      Z,SETOP2  ; If it is zero, we've reached the end
add hl,bc        ; add hl,bc        | 043892 04385A || 043892 09          8979     ADD     HL,BC   ; Skip to next line
dec hl           ; dec hl           | 043893 04385B || 043893 2B          8980     DEC     HL   ; Check end of previous line
cp (hl)          ; cp (hl)          | 043894 04385C || 043894 BE          8981     CP      (HL)
inc hl           ; inc hl           | 043895 04385D || 043895 23          8982     INC     HL
jr z,$-$09       ; jr z,$-$09       | 043896 04385E || 043896 28 F5       8983     JR      Z,SETOP1  ; If CR then loop
jp $043730       ; jp $0436f8       | 043898 043860 || 043898 C3 30 37 04 8984     JP      BAD   ; If anything else, then something has gone wrong - trip a Bad Program error
inc hl           ; inc hl           | 04389C 043864 || 04389C 23          8986  SETOP2:   INC     HL               ; Skip the 3 byte end of program marker (&00, &FF, &FF)
inc hl           ; inc hl           | 04389D 043865 || 04389D 23          8987     INC     HL   ; NB: Called from NEWIT
inc hl           ; inc hl           | 04389E 043866 || 04389E 23          8988     INC     HL
ld ($044d17),hl  ; ld ($044d17),hl  | 04389F 043867 || 04389F 22 17 4D 04 8989     LD      (TOP),HL  ; Store in TOP sysvar
ret              ; ret              | 0438A3 04386B || 0438A3 C9          8990     RET
ld hl,($044d14)  ; ld hl,($044d14)  | 0438A4 04386C || 0438A4 2A 14 4D 04 8999  NEWIT:   LD      HL,(PAGE_)  ; HL: First byte of BASIC program area
ld (hl),$00      ; ld (hl),$00      | 0438A8 043870 || 0438A8 36 00       9000     LD      (HL),0   ; Stick a 0 in there
call $04389c     ; call $043864     | 0438AA 043872 || 0438AA CD 9C 38 04 9001     CALL    SETOP2   ; Skip three bytes to get to end of empty BASIC program area and set TOP sysvar
push hl          ; push hl          | 0438AE 043876 || 0438AE E5          9003  CLEAR:   PUSH    HL   ; Stack the BASIC program pointer
ld hl,($044d17)  ; ld hl,($044d17)  | 0438AF 043877 || 0438AF 2A 17 4D 04 9004     LD      HL,(TOP)  ; Get the TOP sysvar - first available byte after BASIC
ld ($044d1a),hl  ; ld ($044d1a),hl  | 0438B3 04387B || 0438B3 22 1A 4D 04 9005     LD      (LOMEM),HL  ; Set the LOMEM sysvar
ld ($044d1d),hl  ; ld ($044d1d),hl  | 0438B7 04387F || 0438B7 22 1D 4D 04 9006     LD      (FREE),HL  ; And the FREE sysvar with that value
ld hl,$044c6c    ; ld hl,$044c6c    | 0438BB 043883 || 0438BB 21 6C 4C 04 9007     LD      HL,DYNVAR  ; Get the pointer to the dynamic variable pointers buffer in RAM
push bc          ; push bc          | 0438BF 043887 || 0438BF C5          9008     PUSH    BC
ld b,$a8         ; ld b,$a8         | 0438C0 043888 || 0438C0 06 A8       9010     LD      B,54+2*3  ; ez80asm doesn't do () in expressions
ld (hl),$00      ; ld (hl),$00      | 0438C2 04388A || 0438C2 36 00       9011  CLEAR1:   LD      (HL),0   ; Clear the dynamic variable pointers
inc hl           ; inc hl           | 0438C4 04388C || 0438C4 23          9012     INC     HL
djnz $-$03       ; djnz $-$03       | 0438C5 04388D || 0438C5 10 FB       9013     DJNZ    CLEAR1
pop bc           ; pop bc           | 0438C7 04388F || 0438C7 C1          9014     POP     BC
pop hl           ; pop hl           | 0438C8 043890 || 0438C8 E1          9015     POP     HL   ; Restore the BASIC program pointer
ret              ; ret              | 0438C9 043891 || 0438C9 C9          9016     RET
push hl          ; push hl          | 0438CA 043892 || 0438CA E5          9026  LISTIT:   PUSH    HL   ; Stack the address of the line
ex de,hl         ; ex de,hl         | 0438CB 043893 || 0438CB EB          9027     EX      DE,HL   ; HL: Line number
push bc          ; push bc          | 0438CC 043894 || 0438CC C5          9028     PUSH    BC
call $043a33     ; call $0439fb     | 0438CD 043895 || 0438CD CD 33 3A 04 9029     CALL    PBCD   ; Print the line number
pop bc           ; pop bc           | 0438D1 043899 || 0438D1 C1          9030     POP     BC
pop hl           ; pop hl           | 0438D2 04389A || 0438D2 E1          9031     POP     HL   ; HL: Address of the first token/character
ld a,(hl)        ; ld a,(hl)        | 0438D3 04389B || 0438D3 7E          9032     LD      A,(HL)   ; Fetch the token
cp $ed           ; cp $ed           | 0438D4 04389C || 0438D4 FE ED       9033     CP      NEXT   ; Is it NEXT...
call z,$043960   ; call z,$043928   | 0438D6 04389E || 0438D6 CC 60 39 04 9034     CALL    Z,INDENT  ; Yes, so indent in
cp $fd           ; cp $fd           | 0438DA 0438A2 || 0438DA FE FD       9035     CP      UNTIL   ; Or is it UNTIL...
call z,$043960   ; call z,$043928   | 0438DC 0438A4 || 0438DC CC 60 39 04 9036     CALL    Z,INDENT  ; Yes, so indent in
exx              ; exx              | 0438E0 0438A8 || 0438E0 D9          9037     EXX
ld a,$20         ; ld a,$20         | 0438E1 0438A9 || 0438E1 3E 20       9038     LD      A,' '
bit 0,(ix)       ; bit 0,(ix)       | 0438E3 0438AB || 0438E3 DD CB 00 46 9039     BIT     0,(IX)   ; If BIT 0 of LISTON is set
call nz,$043987  ; call nz,$04394f  | 0438E7 0438AF || 0438E7 C4 87 39 04 9040     CALL    NZ,OUTCHR  ; Then print a space after the line number
ld a,b           ; ld a,b           | 0438EB 0438B3 || 0438EB 78          9041     LD      A,B   ; Fetch the FOR/NEXT indent level
add a,a          ; add a,a          | 0438EC 0438B4 || 0438EC 87          9042     ADD     A,A   ; Multiply by 2
bit 1,(ix)       ; bit 1,(ix)       | 0438ED 0438B5 || 0438ED DD CB 00 4E 9043     BIT     1,(IX)   ; If BIT 1 of LISTON is set
call nz,$041821  ; call nz,$0417ef  | 0438F1 0438B9 || 0438F1 C4 21 18 04 9044     CALL    NZ,FILL   ; Then print the FOR/NEXT indent
ld a,c           ; ld a,c           | 0438F5 0438BD || 0438F5 79          9045     LD      A,C   ; Fetch the REPEAT/UNTIL indent level
add a,a          ; add a,a          | 0438F6 0438BE || 0438F6 87          9046     ADD     A,A   ; Multiply by 2
bit 2,(ix)       ; bit 2,(ix)       | 0438F7 0438BF || 0438F7 DD CB 00 56 9047     BIT     2,(IX)   ; If BIT 2 of LISTON is set
call nz,$041821  ; call nz,$0417ef  | 0438FB 0438C3 || 0438FB C4 21 18 04 9048     CALL    NZ,FILL   ; Then print the REPEAT/UNTIL indent
exx              ; exx              | 0438FF 0438C7 || 0438FF D9          9049     EXX
ld a,(hl)        ; ld a,(hl)        | 043900 0438C8 || 043900 7E          9050     LD      A,(HL)   ; Fetch the token
cp $e3           ; cp $e3           | 043901 0438C9 || 043901 FE E3       9051     CP      FOR   ; Is it FOR?
call z,$043960   ; call z,$043928   | 043903 0438CB || 043903 CC 60 39 04 9052     CALL    Z,INDENT  ; Yes, so indent
cp $f5           ; cp $f5           | 043907 0438CF || 043907 FE F5       9053     CP      REPEAT   ; Is it REPEAT?
call z,$043960   ; call z,$043928   | 043909 0438D1 || 043909 CC 60 39 04 9054     CALL    Z,INDENT  ; Yes, so indent
ld e,$00         ; ld e,$00         | 04390D 0438D5 || 04390D 1E 00       9055     LD      E,0   ; E: The quote counter - reset to 0
ld a,(hl)        ; ld a,(hl)        | 04390F 0438D7 || 04390F 7E          9056  LIST8:   LD      A,(HL)   ; Fetch a character / token byte
inc hl           ; inc hl           | 043910 0438D8 || 043910 23          9057     INC     HL
cp $0d           ; cp $0d           | 043911 0438D9 || 043911 FE 0D       9058     CP      CR   ; Is it end of line?
jr z,$+$0d       ; jr z,$+$0d       | 043913 0438DB || 043913 28 0B       9059     JR      Z,LISTE   ; Yes, so finish (DB: Used to jump to CRLF, modified for *EDIT)
cp $22           ; cp $22           | 043915 0438DD || 043915 FE 22       9060     CP      34   ; Is it a quote character?
jr nz,$+$03      ; jr nz,$+$03      | 043917 0438DF || 043917 20 01       9061     JR      NZ,LIST7  ; No, so skip to next bit
inc e            ; inc e            | 043919 0438E1 || 043919 1C          9062     INC     E   ; Otherwise increment quote counter
call $04394f     ; call $043917     | 04391A 0438E2 || 04391A CD 4F 39 04 9063  LIST7:   CALL    LOUT   ; Output the character / token
jr $-$0f         ; jr $-$0f         | 04391E 0438E6 || 04391E 18 EF       9064     JR      LIST8   ; And repeat
bit 3,(ix)       ; bit 3,(ix)       | 043920 0438E8 || 043920 DD CB 00 5E 9069  LISTE:   BIT  3,(IX)   ; Are we printing to buffer?
jr z,$+$5b       ; jr z,$+$5b       | 043924 0438EC || 043924 28 59       9070     JR Z, CRLF   ; Yes, so print a CRLF
xor a            ; xor a            | 043926 0438EE || 043926 AF          9071     XOR A   ; Otherwise print a NUL (0)
jp $043f38       ; jp $043f00       | 043927 0438EF || 043927 C3 38 3F 04 9072     JP OSWRCH
push hl          ; push hl          | 04392B 0438F3 || 04392B E5          9076  PRLINO:   PUSH    HL   ; Swap HL and IY
pop iy           ; pop iy           | 04392C 0438F4 || 04392C FD E1       9077     POP     IY   ; IY: Pointer to the line number
push bc          ; push bc          | 04392E 0438F6 || 04392E C5          9078     PUSH    BC
call $0408eb     ; call $0408e6     | 04392F 0438F7 || 04392F CD EB 08 04 9079     CALL    DECODE   ; Decode
pop bc           ; pop bc           | 043933 0438FB || 043933 C1          9080     POP     BC
exx              ; exx              | 043934 0438FC || 043934 D9          9081     EXX
push bc          ; push bc          | 043935 0438FD || 043935 C5          9082     PUSH    BC
call $043a2f     ; call $0439f7     | 043936 0438FE || 043936 CD 2F 3A 04 9083     CALL    PBCDL   ; Output the line number
pop bc           ; pop bc           | 04393A 043902 || 04393A C1          9084     POP     BC
exx              ; exx              | 04393B 043903 || 04393B D9          9085     EXX
push iy          ; push iy          | 04393C 043904 || 04393C FD E5       9086     PUSH    IY   ; Swap HL and IY
pop hl           ; pop hl           | 04393E 043906 || 04393E E1          9087     POP     HL   ; HL: Pointer to the next character in the line
ret              ; ret              | 04393F 043907 || 04393F C9          9088     RET
call $0439a4     ; call $04396c     | 043940 043908 || 043940 CD A4 39 04 9092  PRREM:   CALL OUT_   ; Output the REM token
ld a,(hl)        ; ld a,(hl)        | 043944 04390C || 043944 7E          9093  @@:   LD A, (HL)   ; Fetch the character
cp $0d           ; cp $0d           | 043945 04390D || 043945 FE 0D       9094     CP CR   ; If it is end of line, then
ret z            ; ret z            | 043947 04390F || 043947 C8          9095     RET Z   ; we have finished
call $043987     ; call $04394f     | 043948 043910 || 043948 CD 87 39 04 9096     CALL OUTCHR   ; Ouput the character
inc hl           ; inc hl           | 04394C 043914 || 04394C 23          9097     INC HL
jr $-$09         ; jr $-$09         | 04394D 043915 || 04394D 18 F5       9098     JR @B   ; And loop
bit 0,e          ; bit 0,e          | 04394F 043917 || 04394F CB 43       9102  LOUT:   BIT     0,E   ; If the quote counter is odd (bit 1 set) then
jr nz,$+$36      ; jr nz,$+$36      | 043951 043919 || 043951 20 34       9103     JR      NZ,OUTCHR  ; don't tokenise, just output the character
cp $f4           ; cp $f4           | 043953 04391B || 043953 FE F4       9104     CP REM   ; DB: Is it REM
jr z,$-$15       ; jr z,$-$15       | 043955 04391D || 043955 28 E9       9105     JR Z, PRREM  ; DB: Yes so jump to the special case for REM
cp $8d           ; cp $8d           | 043957 04391F || 043957 FE 8D       9106     CP      LINO_MN   ; Is it a line number (following GOTO/GOSUB etc)?
jr z,$-$2e       ; jr z,$-$2e       | 043959 043921 || 043959 28 D0       9107     JR      Z,PRLINO  ; Yes, so decode and print the line number
call $0439a4     ; call $04396c     | 04395B 043923 || 04395B CD A4 39 04 9108     CALL    OUT_   ; Output a character / keyword
ld a,(hl)        ; ld a,(hl)        | 04395F 043927 || 04395F 7E          9109     LD      A,(HL)   ; Fetch the next character
exx              ; exx              | 043960 043928 || 043960 D9          9115  INDENT:   EXX
cp $e3           ; cp $e3           | 043961 043929 || 043961 FE E3       9116     CP      FOR   ; If the token is FOR
jr z,$+$0b       ; jr z,$+$0b       | 043963 04392B || 043963 28 09       9117     JR      Z,IND1   ; Then INC B
cp $ed           ; cp $ed           | 043965 04392D || 043965 FE ED       9118     CP      NEXT   ; If it is NEXT
jr nz,$+$08      ; jr nz,$+$08      | 043967 04392F || 043967 20 06       9119     JR      NZ,IND2_  ; Then...
dec b            ; dec b            | 043969 043931 || 043969 05          9120     DEC     B   ; DEC B
jp p,$04396f     ; jp p,$043937     | 04396A 043932 || 04396A F2 6F 39 04 9121     JP      P,IND2_   ; If we have gone below 0 then
inc b            ; inc b            | 04396E 043936 || 04396E 04          9122  IND1:   INC     B   ; Increment back to 0
cp $f5           ; cp $f5           | 04396F 043937 || 04396F FE F5       9124  IND2_:   CP      REPEAT   ; If the token is REPEAT
jr z,$+$0b       ; jr z,$+$0b       | 043971 043939 || 043971 28 09       9125     JR      Z,IND3   ; Then INC C
cp $fd           ; cp $fd           | 043973 04393B || 043973 FE FD       9126     CP      UNTIL   ; If it is UNTIL
jr nz,$+$08      ; jr nz,$+$08      | 043975 04393D || 043975 20 06       9127     JR      NZ,IND4   ; Then...
dec c            ; dec c            | 043977 04393F || 043977 0D          9128     DEC     C   ; DEC C
jp p,$04397d     ; jp p,$043945     | 043978 043940 || 043978 F2 7D 39 04 9129     JP      P,IND4   ; If we have gone below 0 then
inc c            ; inc c            | 04397C 043944 || 04397C 0C          9130  IND3:   INC     C   ; Incremet back to 0
exx              ; exx              | 04397D 043945 || 04397D D9          9131  IND4:   EXX
ret              ; ret              | 04397E 043946 || 04397E C9          9132     RET
ld a,$0d         ; ld a,$0d         | 04397F 043947 || 04397F 3E 0D       9140  CRLF:   LD      A,CR   ; Output CR
call $043987     ; call $04394f     | 043981 043949 || 043981 CD 87 39 04 9141     CALL    OUTCHR
ld a,$0a         ; ld a,$0a         | 043985 04394D || 043985 3E 0A       9142     LD      A,LF   ; Output LF
call $043f38     ; call $043f00     | 043987 04394F || 043987 CD 38 3F 04 9144  OUTCHR:   CALL    OSWRCH   ; Output the character in A
sub $0d          ; sub $0d          | 04398B 043953 || 04398B D6 0D       9145     SUB     CR   ; Check for CR
jr z,$+$08       ; jr z,$+$08       | 04398D 043955 || 04398D 28 06       9146     JR      Z,CARRET  ; If it is CR then A will be 0, this will clear the count
ret c            ; ret c            | 04398F 043957 || 04398F D8          9147     RET     C                ; If it is less than CR, it is non-printing, so don't increment the count
ld a,($044d3d)   ; ld a,($044d3d)   | 043990 043958 || 043990 3A 3D 4D 04 9148     LD      A,(COUNT)  ; Increment the count
inc a            ; inc a            | 043994 04395C || 043994 3C          9149     INC     A
ld ($044d3d),a   ; ld ($044d3d),a   | 043995 04395D || 043995 32 3D 4D 04 9151  CARRET:   LD      (COUNT),A  ; Store the new count value
ret z            ; ret z            | 043999 043961 || 043999 C8          9152     RET     Z   ; Return if the count has wrapped to 0
push hl          ; push hl          | 04399A 043962 || 04399A E5          9153     PUSH    HL   ; Now check if count = print width
ld hl,($044d3e)  ; ld hl,($044d3e)  | 04399B 043963 || 04399B 2A 3E 4D 04 9154     LD      HL,(WIDTH)  ; Get the print width; it's a byte value, so
cp l             ; cp l             | 04399F 043967 || 04399F BD          9155     CP      L   ; L is the width. Compare it with count.
pop hl           ; pop hl           | 0439A0 043968 || 0439A0 E1          9156     POP     HL
ret nz           ; ret nz           | 0439A1 043969 || 0439A1 C0          9157     RET     NZ   ; If we've not hit print width, then just return
jr $-$23         ; jr $-$23         | 0439A2 04396A || 0439A2 18 DB       9158     JR      CRLF   ; Otherwise output CRLF
cp $8a           ; cp $8a           | 0439A4 04396C || 0439A4 FE 8A       9165  OUT_:   CP      138   ; Neat trick to do condition: If A >= 10 or < 128 then PE flag is set
jp pe,$043987    ; jp pe,$04394f    | 0439A6 04396E || 0439A6 EA 87 39 04 9166     JP      PE,OUTCHR  ; If so, then it's a character, so just output it
push bc          ; push bc          | 0439AA 043972 || 0439AA C5          9182     PUSH    BC   ; Preserve BC and HL
push hl          ; push hl          | 0439AB 043973 || 0439AB E5          9183     PUSH    HL
ld hl,$0431a0    ; ld hl,$043168    | 0439AC 043974 || 0439AC 21 A0 31 04 9184     LD      HL,KEYWDS  ; The list of tokens and keywords
ld bc,$0002df    ; ld bc,$0002df    | 0439B0 043978 || 0439B0 01 DF 02 00 9185     LD      BC,KEYWDL  ; The length of the keyword list
cpir             ; cpir             | 0439B4 04397C || 0439B4 ED B1       9186     CPIR    ; We can just do a straight CPIR as the token characters are unique in the list
ld a,(hl)        ; ld a,(hl)        | 0439B6 04397E || 0439B6 7E          9188  TOKEN1:   LD      A,(HL)   ; Fetch the character
inc hl           ; inc hl           | 0439B7 04397F || 0439B7 23          9189     INC     HL   ; Increment to the next byte in the token table
cp $8a           ; cp $8a           | 0439B8 043980 || 0439B8 FE 8A       9190     CP      138   ; If A >= 10 or < 128, i.e. we've not hit the token code for the next token
push af          ; push af          | 0439BA 043982 || 0439BA F5          9191     PUSH    AF   ; Then...
call pe,$043987  ; call pe,$04394f  | 0439BB 043983 || 0439BB EC 87 39 04 9192     CALL    PE,OUTCHR  ; Output the character...
pop af           ; pop af           | 0439BF 043987 || 0439BF F1          9193     POP     AF   ;
jp pe,$0439b6    ; jp pe,$04397e    | 0439C0 043988 || 0439C0 EA B6 39 04 9194     JP      PE,TOKEN1  ; And loop to the next character
pop hl           ; pop hl           | 0439C4 04398C || 0439C4 E1          9195     POP     HL   ; Done, so tidy up the stack and exit
pop bc           ; pop bc           | 0439C5 04398D || 0439C5 C1          9196     POP     BC
ret              ; ret              | 0439C6 04398E || 0439C6 C9          9197     RET
ex de,hl         ; ex de,hl         | 0439C7 04398F || 0439C7 EB          9206  FINDL:   EX      DE,HL   ; DE: Line number (binary)
ld hl,($044d14)  ; ld hl,($044d14)  | 0439C8 043990 || 0439C8 2A 14 4D 04 9207     LD      HL,(PAGE_)  ; HL: Top of BASIC program area
xor a            ; xor a            | 0439CC 043994 || 0439CC AF          9208     XOR     A                ;  A: 0
cp (hl)          ; cp (hl)          | 0439CD 043995 || 0439CD BE          9209     CP      (HL)   ; Check for end of program marker
inc a            ; inc a            | 0439CE 043996 || 0439CE 3C          9210     INC     A   ;  A: 1
ret nc           ; ret nc           | 0439CF 043997 || 0439CF D0          9211     RET     NC   ; Return with 1 if 0
xor a            ; xor a            | 0439D0 043998 || 0439D0 AF          9212     XOR     A                ; Clear the carry flag
ld bc,$000000    ; ld bc,$000000    | 0439D1 043999 || 0439D1 01 00 00 00 9214     LD BC, 0   ; BC: 0
ld c,(hl)        ; ld c,(hl)        | 0439D5 04399D || 0439D5 4E          9216  FINDL1:   LD      C,(HL)   ;  C: The line length
push hl          ; push hl          | 0439D6 04399E || 0439D6 E5          9217     PUSH    HL   ; Stack the current program counter
inc hl           ; inc hl           | 0439D7 04399F || 0439D7 23          9218     INC     HL   ; Skip to the line number bytes
ld a,(hl)        ; ld a,(hl)        | 0439D8 0439A0 || 0439D8 7E          9219     LD      A,(HL)   ; Fetch the line number (in binary) from the BASIC line in HL
inc hl           ; inc hl           | 0439D9 0439A1 || 0439D9 23          9220     INC     HL
ld h,(hl)        ; ld h,(hl)        | 0439DA 0439A2 || 0439DA 66          9221     LD      H,(HL)
ld l,a           ; ld l,a           | 0439DB 0439A3 || 0439DB 6F          9222     LD      L,A
sbc.sil hl,de    ; sbc.sil hl,de    | 0439DC 0439A4 || 0439DC 52 ED 52    9223     SBC.S   HL,DE   ; Compare with the line number we're searching for
pop hl           ; pop hl           | 0439DF 0439A7 || 0439DF E1          9224     POP     HL   ; Get the current program counter
ret nc           ; ret nc           | 0439E0 0439A8 || 0439E0 D0          9225     RET     NC               ; Then return if found or past (Z flag will be set if line number matches)
add hl,bc        ; add hl,bc        | 0439E1 0439A9 || 0439E1 09          9226     ADD     HL,BC   ; Skip to the next line (B was set to 0 before the loop was entered)
jp $0439d5       ; jp $04399d       | 0439E2 0439AA || 0439E2 C3 D5 39 04 9227     JP      FINDL1   ; And loop
ld bc,$000000    ; ld bc,$000000    | 0439E6 0439AE || 0439E6 01 00 00 00 9235  SETLIN:   LD BC, 0   ; Zero BC for later
ld de,($044d35)  ; ld de,($044d35)  | 0439EA 0439B2 || 0439EA ED 5B 35 4D 9237     LD      DE, (ERRLIN)  ; DE: Address of line
ld hl,($044d14)  ; ld hl,($044d14)  | 0439EF 0439B7 || 0439EF 2A 14 4D 04 9238     LD      HL, (PAGE_)  ; HL: Start of user program area
or a             ; or a             | 0439F3 0439BB || 0439F3 B7          9239     OR      A   ; Do a 24 bit compare without destroying HL
sbc hl,de        ; sbc hl,de        | 0439F4 0439BC || 0439F4 ED 52       9240     SBC     HL, DE   ;  Z: DE = HL, NC: DE <= HL
add hl,de        ; add hl,de        | 0439F6 0439BE || 0439F6 19          9241     ADD     HL, DE   ;  C: DE > HL
jr nc,$+$1d      ; jr nc,$+$1d      | 0439F7 0439BF || 0439F7 30 1B       9242     JR      NC, SET3  ; So skip, as the address is less than or equal to the top of program area
ld c,(hl)        ; ld c,(hl)        | 0439F9 0439C1 || 0439F9 4E          9244  SET1:   LD      C, (HL)   ; Get the length of the line; zero indicates the end of the BASIC program
inc c            ; inc c            | 0439FA 0439C2 || 0439FA 0C          9245     INC     C   ; This is a way to check for zero without using the accumulator
dec c            ; dec c            | 0439FB 0439C3 || 0439FB 0D          9246     DEC     C   ; If it is zero, then...
jr z,$+$18       ; jr z,$+$18       | 0439FC 0439C4 || 0439FC 28 16       9247     JR      Z, SET3   ; We've reached the end of the current BASIC program, not found the line
add hl,bc        ; add hl,bc        | 0439FE 0439C6 || 0439FE 09          9248     ADD     HL, BC   ; Skip to the next line (we set B to 0 at the top of this subroutine)
sbc hl,de        ; sbc hl,de        | 0439FF 0439C7 || 0439FF ED 52       9249     SBC     HL, DE   ; Do a 24-bit compare; the previous ADD will have cleared the carry flag
add hl,de        ; add hl,de        | 043A01 0439C9 || 043A01 19          9250     ADD     HL, DE
jr c,$-$09       ; jr c,$-$09       | 043A02 0439CA || 043A02 38 F5       9251     JR      C, SET1   ; Loop whilst DE (the address to search for) is > HL (the current line)
sbc hl,bc        ; sbc hl,bc        | 043A04 0439CC || 043A04 ED 42       9252     SBC     HL, BC   ; We've found it, so back up to the beginning of the line
inc hl           ; inc hl           | 043A06 0439CE || 043A06 23          9253     INC     HL   ; Skip the length counter
ld de,$000000    ; ld de,$000000    | 043A07 0439CF || 043A07 11 00 00 00 9254     LD DE, 0   ; Zero DE
ld e,(hl)        ; ld e,(hl)        | 043A0B 0439D3 || 043A0B 5E          9255     LD      E, (HL)           ; Fetch the line number
inc hl           ; inc hl           | 043A0C 0439D4 || 043A0C 23          9256     INC     HL
ld d,(hl)        ; ld d,(hl)        | 043A0D 0439D5 || 043A0D 56          9257     LD      D, (HL)
ex de,hl         ; ex de,hl         | 043A0E 0439D6 || 043A0E EB          9258     EX      DE, HL   ; HL: The line number
ld ($044d23),hl  ; ld ($044d23),hl  | 043A0F 0439D7 || 043A0F 22 23 4D 04 9259  SET2:   LD      (LINENO), HL  ; Store in the variable LINENO
ret              ; ret              | 043A13 0439DB || 043A13 C9          9260     RET
ld hl,$000000    ; ld hl,$000000    | 043A14 0439DC || 043A14 21 00 00 00 9262  SET3:   LD      HL, 0   ; We've not found the line at this point so
jr $-$09         ; jr $-$09         | 043A18 0439E0 || 043A18 18 F5       9263     JR      SET2   ; Set LINENO to 0
ld hl,($044d23)  ; ld hl,($044d23)  | 043A1A 0439E2 || 043A1A 2A 23 4D 04 9270  SAYLN:   LD      HL,(LINENO)  ; Get the LINENO sysvar
ld a,h           ; ld a,h           | 043A1E 0439E6 || 043A1E 7C          9271     LD      A,H   ; If it is zero then
or l             ; or l             | 043A1F 0439E7 || 043A1F B5          9272     OR      L
ret z            ; ret z            | 043A20 0439E8 || 043A20 C8          9273     RET     Z   ; Don't need to do anything; return with F:C set to 0
call $043dc8     ; call $043d90     | 043A21 0439E9 || 043A21 CD C8 3D 04 9274     CALL    TELL   ; Output the error message
jr nz,$+$63      ; jr nz,$+$63      | 043A25 0439ED || 043A25 20 61 74 20 9275     DB     " at line ", 0
ld (hl),h        ;                  | 043A27        || ld (hl),h                      ; 0439EF
jr nz,$+$6e      ;                  | 043A28        || jr nz,$+$6e                    ; 0439F0
ld l,c           ;                  | 043A2A        || ld l,c                         ; 0439F2
ld l,(hl)        ;                  | 043A2B        || ld l,(hl)                      ; 0439F3
ld h,l           ;                  | 043A2C        || ld h,l                         ; 0439F4
jr nz,$+$02      ;                  | 043A2D        || jr nz,$+$02                    ; 0439F5
ld c,$00         ; ld c,$00         | 043A2F 0439F7 || 043A2F 0E 00       9276  PBCDL:   LD      C,0   ; C: Leading character (NUL)
jr $+$04         ; jr $+$04         | 043A31 0439F9 || 043A31 18 02       9277     JR      PBCD0   ; Output the line number; return with F:C set to 1
ld c,$20         ; ld c,$20         | 043A33 0439FB || 043A33 0E 20       9284  PBCD:   LD      C,' '   ; C: Leading character (" ")
ld b,$05         ; ld b,$05         | 043A35 0439FD || 043A35 06 05       9285  PBCD0:   LD      B,5   ; Number of digits in result
ld de,$002710    ; ld de,$002710    | 043A37 0439FF || 043A37 11 10 27 00 9286     LD      DE,10000  ; Start off with the 10,000 column
xor a            ; xor a            | 043A3B 043A03 || 043A3B AF          9287  PBCD1:   XOR     A   ; Counter
sbc hl,de        ; sbc hl,de        | 043A3C 043A04 || 043A3C ED 52       9288  PBCD2:   SBC     HL,DE   ; Loop and count how many 10,000s we have
inc a            ; inc a            | 043A3E 043A06 || 043A3E 3C          9289     INC     A
jr nc,$-$03      ; jr nc,$-$03      | 043A3F 043A07 || 043A3F 30 FB       9290     JR      NC,PBCD2
add hl,de        ; add hl,de        | 043A41 043A09 || 043A41 19          9291     ADD     HL,DE   ; The loop overruns by one, so adjust here
dec a            ; dec a            | 043A42 043A0A || 043A42 3D          9292     DEC     A   ; A: Number of 10,000s
jr z,$+$06       ; jr z,$+$06       | 043A43 043A0B || 043A43 28 04       9293     JR      Z,PBCD3   ; If it is 0, then skip the next bit
set 4,c          ; set 4,c          | 043A45 043A0D || 043A45 CB E1       9294     SET     4,C   ; C: Set to '0' ASCII (30h)
set 5,c          ; set 5,c          | 043A47 043A0F || 043A47 CB E9       9295     SET     5,C
or c             ; or c             | 043A49 043A11 || 043A49 B1          9296  PBCD3:   OR      C   ; A is then an ASCII character, or 00h if we've not processed any non-zero digits yet
call nz,$043987  ; call nz,$04394f  | 043A4A 043A12 || 043A4A C4 87 39 04 9297     CALL    NZ,OUTCHR  ; If it is not a leading NUL character then output it
ld a,b           ; ld a,b           | 043A4E 043A16 || 043A4E 78          9298     LD      A,B   ; If on first transition, skip this
cp $05           ; cp $05           | 043A4F 043A17 || 043A4F FE 05       9299     CP      5   ; TODO: Need to find out why
jr z,$+$08       ; jr z,$+$08       | 043A51 043A19 || 043A51 28 06       9300     JR      Z,PBCD4
add hl,hl        ; add hl,hl        | 043A53 043A1B || 043A53 29          9301     ADD     HL,HL   ; HL x  2 : We shift the number being tested left,
ld d,h           ; ld d,h           | 043A54 043A1C || 043A54 54          9302     LD      D,H   ;         : rather than shifting DE right
ld e,l           ; ld e,l           | 043A55 043A1D || 043A55 5D          9303     LD      E,L   ;         : This makes a lot of sense
add hl,hl        ; add hl,hl        | 043A56 043A1E || 043A56 29          9304     ADD     HL,HL   ; HL x  4
add hl,hl        ; add hl,hl        | 043A57 043A1F || 043A57 29          9305     ADD     HL,HL   ; HL x  8
add hl,de        ; add hl,de        | 043A58 043A20 || 043A58 19          9306     ADD     HL,DE   ; HL x 10
ld de,$0003e8    ; ld de,$0003e8    | 043A59 043A21 || 043A59 11 E8 03 00 9307  PBCD4:   LD      DE,1000   ; Set the column heading to 1,000s for subsequent runs
djnz $-$22       ; djnz $-$22       | 043A5D 043A25 || 043A5D 10 DC       9308     DJNZ    PBCD1   ; Loop until done
scf              ; scf              | 043A5F 043A27 || 043A5F 37          9309     SCF    ; SCF set for SAYLN in this module
ret              ; ret              | 043A60 043A28 || 043A60 C9          9310     RET
call $043be6     ; call $043bae     | 043A61 043A29 || 043A61 CD E6 3B 04 9317  PUTVAR:   CALL    CREATE   ; Create the variable
ld a,(iy)        ; ld a,(iy)        | 043A65 043A2D || 043A65 FD 7E 00    9318     LD      A,(IY)   ; Fetch the next character
cp $28           ; cp $28           | 043A68 043A30 || 043A68 FE 28       9319     CP      '('   ; Check for bad use of array
jr nz,$+$72      ; jr nz,$+$72      | 043A6A 043A32 || 043A6A 20 70       9320     JR      NZ,GETVZ         ; It's fine, so set the exit conditions
ld a,$0e         ; ld a,$0e         | 043A6C 043A34 || 043A6C 3E 0E       9321  ARRAY:   LD      A,14             ; Otherwise Error: 'Array'
jp $043798       ; jp $043760       | 043A6E 043A36 || 043A6E C3 98 37 04 9322  ERROR3:   JP      ERROR_
ld a,(iy)        ; ld a,(iy)        | 043A72 043A3A || 043A72 FD 7E 00    9335  GETVAR:   LD      A,(IY)   ; Get the first character
cp $24           ; cp $24           | 043A75 043A3D || 043A75 FE 24       9336     CP      '$'   ; Is it a string?
jr z,$+$6b       ; jr z,$+$6b       | 043A77 043A3F || 043A77 28 69       9337     JR      Z,GETV4   ; Yes, so branch here
cp $21           ; cp $21           | 043A79 043A41 || 043A79 FE 21       9338     CP      '!'   ; Is it indirection (32-bit)?
jr z,$+$6b       ; jr z,$+$6b       | 043A7B 043A43 || 043A7B 28 69       9339     JR      Z,GETV5   ; Yes, so branch here
cp $3f           ; cp $3f           | 043A7D 043A45 || 043A7D FE 3F       9340     CP      '?'   ; Is it indirection (8-bit)?
jr z,$+$6b       ; jr z,$+$6b       | 043A7F 043A47 || 043A7F 28 69       9341     JR      Z,GETV6   ; Yes, so branch here
call $043b50     ; call $043b18     | 043A81 043A49 || 043A81 CD 50 3B 04 9343     CALL    LOCATE   ; Locate the variable
ret nz           ; ret nz           | 043A85 043A4D || 043A85 C0          9344     RET     NZ   ; And exit here if not found
ld a,(iy)        ; ld a,(iy)        | 043A86 043A4E || 043A86 FD 7E 00    9350     LD      A,(IY)   ; Further checks
cp $28           ; cp $28           | 043A89 043A51 || 043A89 FE 28       9351     CP      '('              ; Is it an array?
jr nz,$+$49      ; jr nz,$+$49      | 043A8B 043A53 || 043A8B 20 47       9352     JR      NZ,GETVX         ; No, so exit
push de          ; push de          | 043A8D 043A55 || 043A8D D5          9356     PUSH    DE               ; Save the variable type (in D)
ld a,(hl)        ; ld a,(hl)        | 043A8E 043A56 || 043A8E 7E          9357     LD      A,(HL)           ; Fetch the number of dimensions
or a             ; or a             | 043A8F 043A57 || 043A8F B7          9358     OR      A
jr z,$-$24       ; jr z,$-$24       | 043A90 043A58 || 043A90 28 DA       9359     JR      Z,ARRAY   ; If there are none, then Error: 'Array'
inc hl           ; inc hl           | 043A92 043A5A || 043A92 23          9360     INC     HL   ;
ld de,$000000    ; ld de,$000000    | 043A93 043A5B || 043A93 11 00 00 00 9361     LD      DE,0             ; Accumulator
push af          ; push af          | 043A97 043A5F || 043A97 F5          9362     PUSH    AF
inc iy           ; inc iy           | 043A98 043A60 || 043A98 FD 23       9363     INC     IY               ; Skip "("
jr $+$07         ; jr $+$07         | 043A9A 043A62 || 043A9A 18 05       9364     JR      GETV3
push af          ; push af          | 043A9C 043A64 || 043A9C F5          9366  GETV2:   PUSH    AF
call $040a2a     ; call $040a22     | 043A9D 043A65 || 043A9D CD 2A 0A 04 9367     CALL    COMMA
push hl          ; push hl          | 043AA1 043A69 || 043AA1 E5          9368  GETV3:   PUSH    HL
push de          ; push de          | 043AA2 043A6A || 043AA2 D5          9369     PUSH    DE
call $04030f     ; call $04030a     | 043AA3 043A6B || 043AA3 CD 0F 03 04 9370     CALL    EXPRI   ; Get the subscript
exx              ; exx              | 043AA7 043A6F || 043AA7 D9          9371     EXX
pop de           ; pop de           | 043AA8 043A70 || 043AA8 D1          9372     POP     DE
ex (sp),hl       ; ex (sp),hl       | 043AA9 043A71 || 043AA9 E3          9373     EX      (SP),HL
ld c,(hl)        ; ld c,(hl)        | 043AAA 043A72 || 043AAA 4E          9374     LD      C,(HL)
inc hl           ; inc hl           | 043AAB 043A73 || 043AAB 23          9375     INC     HL
ld b,(hl)        ; ld b,(hl)        | 043AAC 043A74 || 043AAC 46          9376     LD      B,(HL)
inc hl           ; inc hl           | 043AAD 043A75 || 043AAD 23          9377     INC     HL
ex (sp),hl       ; ex (sp),hl       | 043AAE 043A76 || 043AAE E3          9378     EX      (SP),HL
ex de,hl         ; ex de,hl         | 043AAF 043A77 || 043AAF EB          9379     EX      DE,HL
push de          ; push de          | 043AB0 043A78 || 043AB0 D5          9380     PUSH    DE
call $0418a4     ; call $041872     | 043AB1 043A79 || 043AB1 CD A4 18 04 9381     CALL    MUL16   ; HL=HL*BC
pop de           ; pop de           | 043AB5 043A7D || 043AB5 D1          9382     POP     DE
add hl,de        ; add hl,de        | 043AB6 043A7E || 043AB6 19          9383     ADD     HL,DE
ex de,hl         ; ex de,hl         | 043AB7 043A7F || 043AB7 EB          9384     EX      DE,HL
or a             ; or a             | 043AB8 043A80 || 043AB8 B7          9385     OR      A
sbc hl,bc        ; sbc hl,bc        | 043AB9 043A81 || 043AB9 ED 42       9386     SBC     HL,BC
ld a,$0f         ; ld a,$0f         | 043ABB 043A83 || 043ABB 3E 0F       9387     LD      A,15
jr nc,$-$4f      ; jr nc,$-$4f      | 043ABD 043A85 || 043ABD 30 AF       9388     JR      NC,ERROR3  ; Throw a "Subscript" error
pop hl           ; pop hl           | 043ABF 043A87 || 043ABF E1          9389     POP     HL
pop af           ; pop af           | 043AC0 043A88 || 043AC0 F1          9390     POP     AF
dec a            ; dec a            | 043AC1 043A89 || 043AC1 3D          9391     DEC     A                ; Dimension counter
jr nz,$-$26      ; jr nz,$-$26      | 043AC2 043A8A || 043AC2 20 D8       9392     JR      NZ,GETV2
call $040a37     ; call $040a2f     | 043AC4 043A8C || 043AC4 CD 37 0A 04 9393     CALL    BRAKET           ; Check for closing bracket
pop af           ; pop af           | 043AC8 043A90 || 043AC8 F1          9394     POP     AF               ; Restore the type
push hl          ; push hl          | 043AC9 043A91 || 043AC9 E5          9395     PUSH    HL
call $041897     ; call $041865     | 043ACA 043A92 || 043ACA CD 97 18 04 9396     CALL    X4OR5            ; DE=DE*n
pop hl           ; pop hl           | 043ACE 043A96 || 043ACE E1          9397     POP     HL
add hl,de        ; add hl,de        | 043ACF 043A97 || 043ACF 19          9398     ADD     HL,DE
ld d,a           ; ld d,a           | 043AD0 043A98 || 043AD0 57          9399     LD      D,A              ; The type
ld a,(iy)        ; ld a,(iy)        | 043AD1 043A99 || 043AD1 FD 7E 00    9400     LD      A,(IY)
cp $3f           ; cp $3f           | 043AD4 043A9C || 043AD4 FE 3F       9401  GETVX:   CP      '?'
jr z,$+$20       ; jr z,$+$20       | 043AD6 043A9E || 043AD6 28 1E       9402     JR      Z,GETV9
cp $21           ; cp $21           | 043AD8 043AA0 || 043AD8 FE 21       9403     CP      '!'
jr z,$+$18       ; jr z,$+$18       | 043ADA 043AA2 || 043ADA 28 16       9404     JR      Z,GETV8
push hl          ; push hl          | 043ADC 043AA4 || 043ADC E5          9405  GETVZ:   PUSH    HL               ; Set exit conditions
pop ix           ; pop ix           | 043ADD 043AA5 || 043ADD DD E1       9406     POP     IX
ld a,d           ; ld a,d           | 043ADF 043AA7 || 043ADF 7A          9407     LD      A,D
cp a             ; cp a             | 043AE0 043AA8 || 043AE0 BF          9408     CP      A
ret              ; ret              | 043AE1 043AA9 || 043AE1 C9          9409     RET
ld a,$80         ; ld a,$80         | 043AE2 043AAA || 043AE2 3E 80       9413  GETV4:   LD      A,128            ; Static strings
jr $+$07         ; jr $+$07         | 043AE4 043AAC || 043AE4 18 05       9414     JR      GETV7
ld a,$04         ; ld a,$04         | 043AE6 043AAE || 043AE6 3E 04       9416  GETV5:   LD      A,4              ; Unary 32-bit indirection
jr $+$03         ; jr $+$03         | 043AE8 043AB0 || 043AE8 18 01       9417     JR      GETV7
xor a            ; xor a            | 043AEA 043AB2 || 043AEA AF          9419  GETV6:   XOR     A                ; Unary 8-bit indirection
ld hl,$000000    ; ld hl,$000000    | 043AEB 043AB3 || 043AEB 21 00 00 00 9421  GETV7:   LD      HL,0
push af          ; push af          | 043AEF 043AB7 || 043AEF F5          9422     PUSH    AF
jr $+$26         ; jr $+$26         | 043AF0 043AB8 || 043AF0 18 24       9423     JR      GETV0
ld b,$04         ; ld b,$04         | 043AF2 043ABA || 043AF2 06 04       9425  GETV8:   LD      B,4              ; Binary 32-bt indirection
jr $+$04         ; jr $+$04         | 043AF4 043ABC || 043AF4 18 02       9426     JR      GETVA
ld b,$00         ; ld b,$00         | 043AF6 043ABE || 043AF6 06 00       9428  GETV9:   LD      B,0              ; Binary 8-bit indirection
push hl          ; push hl          | 043AF8 043AC0 || 043AF8 E5          9430  GETVA:   PUSH    HL
pop ix           ; pop ix           | 043AF9 043AC1 || 043AF9 DD E1       9431     POP     IX
ld a,d           ; ld a,d           | 043AFB 043AC3 || 043AFB 7A          9432     LD      A,D              ; Fetch the variable type
cp $81           ; cp $81           | 043AFC 043AC4 || 043AFC FE 81       9433     CP      129   ; Is it a string?
ret z            ; ret z            | 043AFE 043AC6 || 043AFE C8          9434     RET     Z                ; Yes, so exit here
push bc          ; push bc          | 043AFF 043AC7 || 043AFF C5          9435     PUSH    BC
call $04041b     ; call $040416     | 043B00 043AC8 || 043B00 CD 1B 04 04 9436     CALL    LOADN            ; Left operand of the binary indirection (var?index or var!index)
call $040667     ; call $040662     | 043B04 043ACC || 043B04 CD 67 06 04 9437     CALL    SFIX
ld a,l           ; ld a,l           | 043B08 043AD0 || 043B08 7D          9438     LD A,L
exx              ; exx              | 043B09 043AD1 || 043B09 D9          9439     EXX
ld ($044d4a),hl  ; ld ($044d4a),hl  | 043B0A 043AD2 || 043B0A 22 4A 4D 04 9440     LD (R0+0),HL
ld ($044d4c),a   ; ld ($044d4c),a   | 043B0E 043AD6 || 043B0E 32 4C 4D 04 9441     LD (R0+2),A
ld hl,($044d4a)  ; ld hl,($044d4a)  | 043B12 043ADA || 043B12 2A 4A 4D 04 9442     LD HL,(R0)   ; HL: 24-bit address of the variable in memory
push hl          ; push hl          | 043B16 043ADE || 043B16 E5          9444  GETV0:   PUSH    HL   ; HL will be 0 for a unary indirection, or the address of the variable for a binary indirection
inc iy           ; inc iy           | 043B17 043ADF || 043B17 FD 23       9445     INC     IY
call $04032a     ; call $040325     | 043B19 043AE1 || 043B19 CD 2A 03 04 9446     CALL    ITEMI
ld a,l           ; ld a,l           | 043B1D 043AE5 || 043B1D 7D          9447     LD A,L   ;  A: The MSB of the address
exx              ; exx              | 043B1E 043AE6 || 043B1E D9          9448     EXX
ld ($044d4a),hl  ; ld ($044d4a),hl  | 043B1F 043AE7 || 043B1F 22 4A 4D 04 9449     LD (R0+0),HL  ; HL: The LSW of the address
ld ($044d4c),a   ; ld ($044d4c),a   | 043B23 043AEB || 043B23 32 4C 4D 04 9450     LD (R0+2),A  ; R0: L'HL or the 24-bit address
pop de           ; pop de           | 043B27 043AEF || 043B27 D1          9451     POP     DE
pop af           ; pop af           | 043B28 043AF0 || 043B28 F1          9452     POP     AF
ld hl,($044d4a)  ; ld hl,($044d4a)  | 043B29 043AF1 || 043B29 2A 4A 4D 04 9453     LD HL,(R0)   ; HL: L'HL
add hl,de        ; add hl,de        | 043B2D 043AF5 || 043B2D 19          9454     ADD     HL,DE
push hl          ; push hl          | 043B2E 043AF6 || 043B2E E5          9455     PUSH    HL
pop ix           ; pop ix           | 043B2F 043AF7 || 043B2F DD E1       9456     POP     IX
cp a             ; cp a             | 043B31 043AF9 || 043B31 BF          9457     CP      A
ret              ; ret              | 043B32 043AFA || 043B32 C9          9458     RET
ld a,(iy+$01)    ; ld a,(iy+$01)    | 043B33 043AFB || 043B33 FD 7E 01    9468  GETDEF:   LD      A,(IY+1)  ; Get the next character from the tokenised line (the start of the procedure name)
call $043cb3     ; call $043c7b     | 043B36 043AFE || 043B36 CD B3 3C 04 9469     CALL    RANGE1   ; Is it in range: "0" to "9", "A" to "Z", "a' to "z", "@", "_" or "`"?
ret c            ; ret c            | 043B3A 043B02 || 043B3A D8          9470     RET     C   ; No so return with C set
ld a,(iy)        ; ld a,(iy)        | 043B3B 043B03 || 043B3B FD 7E 00    9471     LD      A,(IY)   ; Fetch the current character from the tokenised line
ld hl,$044d0e    ; ld hl,$044d0e    | 043B3E 043B06 || 043B3E 21 0E 4D 04 9472     LD      HL,FNPTR  ; HL: Address of the dynamic function pointer in ram.asm
cp $a4           ; cp $a4           | 043B42 043B0A || 043B42 FE A4       9473     CP      FN   ; Is it the token FN?
jr z,$+$4c       ; jr z,$+$4c       | 043B44 043B0C || 043B44 28 4A       9474     JR      Z,LOC2   ; Yes, so skip to LOC2 with that pointer to find a match
ld hl,$044d11    ; ld hl,$044d11    | 043B46 043B0E || 043B46 21 11 4D 04 9475     LD      HL,PROPTR  ; HL: Address of the dynamic procedure pointer in ram.asm
cp $f2           ; cp $f2           | 043B4A 043B12 || 043B4A FE F2       9476     CP      PROC   ; Is it the token PROC?
jr z,$+$44       ; jr z,$+$44       | 043B4C 043B14 || 043B4C 28 42       9477     JR      Z,LOC2   ; Yes, so skip to LOC2 with that pointer to find a match
scf              ; scf              | 043B4E 043B16 || 043B4E 37          9478     SCF    ; No, so just return with C set
ret              ; ret              | 043B4F 043B17 || 043B4F C9          9479     RET
sub $40          ; sub $40          | 043B50 043B18 || 043B50 D6 40       9502  LOCATE:   SUB     '@'   ; Check for valid range
ret c            ; ret c            | 043B52 043B1A || 043B52 D8          9503     RET     C   ; First character not "@", "A" to "Z" or "a" to "z", so not a variable
ld hl,$000000    ; ld hl,$000000    | 043B53 043B1B || 043B53 21 00 00 00 9504     LD      HL, 0   ; Clear HL
cp $1b           ; cp $1b           | 043B57 043B1F || 043B57 FE 1B       9505     CP      'Z'-'@'+1  ; Check for static ("@", "A" to "Z"); if it is not static...
jr nc,$+$20      ; jr nc,$+$20      | 043B59 043B21 || 043B59 30 1E       9506     JR      NC,LOC0          ; Then branch here
ld l,a           ; ld l,a           | 043B5B 043B23 || 043B5B 6F          9507     LD L, A   ; HL = A
ld a,(iy+$01)    ; ld a,(iy+$01)    | 043B5C 043B24 || 043B5C FD 7E 01    9508     LD      A,(IY+1)         ; Check the 2nd character
cp $25           ; cp $25           | 043B5F 043B27 || 043B5F FE 25       9509     CP      '%'   ; If not "%" then it is not static...
jr nz,$+$23      ; jr nz,$+$23      | 043B61 043B29 || 043B61 20 21       9510     JR      NZ,LOC1          ; Branch here
ld a,(iy+$02)    ; ld a,(iy+$02)    | 043B63 043B2B || 043B63 FD 7E 02    9511     LD      A,(IY+2)  ; Check the 3rd character
cp $28           ; cp $28           | 043B66 043B2E || 043B66 FE 28       9512     CP      '('   ; If it is "(" (array) then it is not static...
jr z,$+$1c       ; jr z,$+$1c       | 043B68 043B30 || 043B68 28 1A       9513     JR      Z,LOC1           ; Branch here
add hl,hl        ; add hl,hl        | 043B6A 043B32 || 043B6A 29          9517     ADD     HL,HL   ; HL: Variable index * 4
add hl,hl        ; add hl,hl        | 043B6B 043B33 || 043B6B 29          9518     ADD HL,HL
ld de,$044c00    ; ld de,$044c00    | 043B6C 043B34 || 043B6C 11 00 4C 04 9519     LD      DE,STAVAR        ; The static variable area in memory
add hl,de        ; add hl,de        | 043B70 043B38 || 043B70 19          9520     ADD     HL,DE   ; HL: The address of the static variable
inc iy           ; inc iy           | 043B71 043B39 || 043B71 FD 23       9521     INC     IY   ; Skip the program pointer past the static variable name
inc iy           ; inc iy           | 043B73 043B3B || 043B73 FD 23       9522     INC     IY
ld d,$04         ; ld d,$04         | 043B75 043B3D || 043B75 16 04       9523     LD      D,4              ; Set the type to be integer
xor a            ; xor a            | 043B77 043B3F || 043B77 AF          9524     XOR     A   ; Set the Z flag
ret              ; ret              | 043B78 043B40 || 043B78 C9          9525     RET
cp $1f           ; cp $1f           | 043B79 043B41 || 043B79 FE 1F       9529  LOC0:   CP      '_'-'@'   ; Check the first character is in
ret c            ; ret c            | 043B7B 043B43 || 043B7B D8          9530     RET     C   ; the range "_" to
cp $3b           ; cp $3b           | 043B7C 043B44 || 043B7C FE 3B       9531     CP      'z'-'@'+1  ; "z" (lowercase characters only)
ccf              ; ccf              | 043B7E 043B46 || 043B7E 3F          9532     CCF    ; If it is not in range then
dec a            ; dec a            | 043B7F 043B47 || 043B7F 3D          9533     DEC     A                ; Set NZ flag and
ret c            ; ret c            | 043B80 043B48 || 043B80 D8          9534     RET     C   ; Exit here
sub $03          ; sub $03          | 043B81 043B49 || 043B81 D6 03       9535     SUB     3   ; This brings it in the range of 27 upwards (need to confirm)
ld l,a           ; ld l,a           | 043B83 043B4B || 043B83 6F          9536     LD L, A   ; HL = A
ld a,l           ; ld a,l           | 043B84 043B4C || 043B84 7D          9540  LOC1:   LD A, L   ; Fetch variable index
add a,a          ; add a,a          | 043B85 043B4D || 043B85 87          9541     ADD A, A   ; x 2
add a,l          ; add a,l          | 043B86 043B4E || 043B86 85          9542     ADD A, L   ; x 3
sub $03          ; sub $03          | 043B87 043B4F || 043B87 D6 03       9543     SUB 3   ; Subtract 2 TODO: Should be 3
ld l,a           ; ld l,a           | 043B89 043B51 || 043B89 6F          9544     LD L, A
ld de,$044c6c    ; ld de,$044c6c    | 043B8A 043B52 || 043B8A 11 6C 4C 04 9545     LD      DE, DYNVAR        ; The dynamic variable storage
ret c            ; ret c            | 043B8E 043B56 || 043B8E D8          9546     RET C   ; Bounds check to trap for variable '@'
add hl,de        ; add hl,de        | 043B8F 043B57 || 043B8F 19          9547     ADD     HL, DE   ; HL: Address of first entry
ld de,(hl)       ; ld de,(hl)       | 043B90 043B58 || 043B90 ED 17       9551  LOC2:   LD DE, (HL)  ; Fetch the original pointer
push hl          ; push hl          | 043B92 043B5A || 043B92 E5          9552     PUSH HL   ; Need to preserve HL for LOC6
xor a            ; xor a            | 043B93 043B5B || 043B93 AF          9553     XOR A   ; Reset carry flag
sbc hl,hl        ; sbc hl,hl        | 043B94 043B5C || 043B94 ED 62       9554     SBC HL, HL   ; Set HL to 0
sbc hl,de        ; sbc hl,de        | 043B96 043B5E || 043B96 ED 52       9555     SBC HL, DE   ; Compare with 0
pop hl           ; pop hl           | 043B98 043B60 || 043B98 E1          9556     POP HL   ; Restore the original pointer
jr z,$+$4b       ; jr z,$+$4b       | 043B99 043B61 || 043B99 28 49       9557     JR Z, LOC6   ; If the pointer in DE is zero, the variable is undefined at this point
push de          ; push de          | 043B9B 043B63 || 043B9B D5          9559     push de
pop hl           ; pop hl           | 043B9C 043B64 || 043B9C E1          9560     pop hl ; how was that even possible?
inc hl           ; inc hl           | 043B9D 043B65 || 043B9D 23          9561     INC     HL               ; Skip the link (24-bits)
inc hl           ; inc hl           | 043B9E 043B66 || 043B9E 23          9562     INC     HL
inc hl           ; inc hl           | 043B9F 043B67 || 043B9F 23          9563     INC HL   ; HL: Address of the variable name in DYNVARS
push iy          ; push iy          | 043BA0 043B68 || 043BA0 FD E5       9564     PUSH    IY   ; IY: Address of the variable name in the program
ld a,(hl)        ; ld a,(hl)        | 043BA2 043B6A || 043BA2 7E          9566  LOC3:   LD      A,(HL)           ; Compare
inc hl           ; inc hl           | 043BA3 043B6B || 043BA3 23          9567     INC     HL
inc iy           ; inc iy           | 043BA4 043B6C || 043BA4 FD 23       9568     INC     IY
cp (iy)          ; cp (iy)          | 043BA6 043B6E || 043BA6 FD BE 00    9569     CP      (IY)
jr z,$-$07       ; jr z,$-$07       | 043BA9 043B71 || 043BA9 28 F7       9570     JR      Z, LOC3   ; Keep looping whilst we've got a match...
or a             ; or a             | 043BAB 043B73 || 043BAB B7          9571     OR      A                ; Have we hit a terminator?
jr z,$+$09       ; jr z,$+$09       | 043BAC 043B74 || 043BAC 28 07       9572     JR      Z,LOC5           ; Yes, so maybe we've found a variable
pop iy           ; pop iy           | 043BAE 043B76 || 043BAE FD E1       9574  LOC4:   POP     IY   ; Restore the pointer in the program
ex de,hl         ; ex de,hl         | 043BB0 043B78 || 043BB0 EB          9575     EX      DE, HL   ; HL: New pointer in DYNVARS
jp $043b90       ; jp $043b58       | 043BB1 043B79 || 043BB1 C3 90 3B 04 9576     JP      LOC2             ; Loop round and try again
dec iy           ; dec iy           | 043BB5 043B7D || 043BB5 FD 2B       9580  LOC5:   DEC     IY
ld a,(iy)        ; ld a,(iy)        | 043BB7 043B7F || 043BB7 FD 7E 00    9581     LD      A,(IY)
cp $28           ; cp $28           | 043BBA 043B82 || 043BBA FE 28       9582     CP      '('
jr z,$+$17       ; jr z,$+$17       | 043BBC 043B84 || 043BBC 28 15       9583     JR      Z,LOC5A          ; FOUND
inc iy           ; inc iy           | 043BBE 043B86 || 043BBE FD 23       9584     INC     IY
call $043ca7     ; call $043c6f     | 043BC0 043B88 || 043BC0 CD A7 3C 04 9585     CALL    RANGE
jr c,$+$0f       ; jr c,$+$0f       | 043BC4 043B8C || 043BC4 38 0D       9586     JR      C,LOC5A          ; FOUND
cp $28           ; cp $28           | 043BC6 043B8E || 043BC6 FE 28       9587     CP      '('
jr z,$-$1a       ; jr z,$-$1a       | 043BC8 043B90 || 043BC8 28 E4       9588     JR      Z,LOC4           ; KEEP LOOKING
ld a,(iy-$01)    ; ld a,(iy-$01)    | 043BCA 043B92 || 043BCA FD 7E FF    9589     LD      A,(IY-1)
call $043cb3     ; call $043c7b     | 043BCD 043B95 || 043BCD CD B3 3C 04 9590     CALL    RANGE1
jr nc,$-$23      ; jr nc,$-$23      | 043BD1 043B99 || 043BD1 30 DB       9591     JR      NC,LOC4          ; KEEP LOOKING
pop de           ; pop de           | 043BD3 043B9B || 043BD3 D1          9592  LOC5A:   POP     DE
ld a,(iy-$01)    ; ld a,(iy-$01)    | 043BD4 043B9C || 043BD4 FD 7E FF    9593  TYPE_:   LD      A,(IY-1)  ; Check the string type postfix
cp $24           ; cp $24           | 043BD7 043B9F || 043BD7 FE 24       9594     CP      '$'   ; Is it a string?
ld d,$81         ; ld d,$81         | 043BD9 043BA1 || 043BD9 16 81       9595     LD      D,129   ; Yes, so return D = 129
ret z            ; ret z            | 043BDB 043BA3 || 043BDB C8          9596     RET     Z
cp $25           ; cp $25           | 043BDC 043BA4 || 043BDC FE 25       9597     CP      '%'   ; Is it an integer?
ld d,$04         ; ld d,$04         | 043BDE 043BA6 || 043BDE 16 04       9598     LD      D,4   ; Yes, so return D = 4
ret z            ; ret z            | 043BE0 043BA8 || 043BE0 C8          9599     RET     Z
inc d            ; inc d            | 043BE1 043BA9 || 043BE1 14          9600     INC     D   ; At this point it must be a float
cp a             ; cp a             | 043BE2 043BAA || 043BE2 BF          9601     CP      A   ; Set the flags
ret              ; ret              | 043BE3 043BAB || 043BE3 C9          9602     RET
inc a            ; inc a            | 043BE4 043BAC || 043BE4 3C          9606  LOC6:   INC     A                ; Set NZ flag
ret              ; ret              | 043BE5 043BAD || 043BE5 C9          9607     RET
xor a            ; xor a            | 043BE6 043BAE || 043BE6 AF          9614  CREATE:   XOR     A
ld de,($044d1d)  ; ld de,($044d1d)  | 043BE7 043BAF || 043BE7 ED 5B 1D 4D 9615     LD      DE,(FREE)  ; Get the last byte of available RAM
ld (hl),de       ; ld (hl),de       | 043BEC 043BB4 || 043BEC ED 1F       9616     LD (HL), DE  ; Store
ex de,hl         ; ex de,hl         | 043BEE 043BB6 || 043BEE EB          9617     EX      DE,HL
ld (hl),a        ; ld (hl),a        | 043BEF 043BB7 || 043BEF 77          9618     LD      (HL),A   ; Clear the link of the new entity
inc hl           ; inc hl           | 043BF0 043BB8 || 043BF0 23          9619     INC     HL
ld (hl),a        ; ld (hl),a        | 043BF1 043BB9 || 043BF1 77          9620     LD      (HL),A
inc hl           ; inc hl           | 043BF2 043BBA || 043BF2 23          9621     INC     HL
ld (hl),a        ; ld (hl),a        | 043BF3 043BBB || 043BF3 77          9622     LD      (HL),A
inc hl           ; inc hl           | 043BF4 043BBC || 043BF4 23          9623     INC     HL
inc iy           ; inc iy           | 043BF5 043BBD || 043BF5 FD 23       9624  LOC7:   INC     IY
call $043ca7     ; call $043c6f     | 043BF7 043BBF || 043BF7 CD A7 3C 04 9625     CALL    RANGE            ; END OF VARIABLE?
jr c,$+$17       ; jr c,$+$17       | 043BFB 043BC3 || 043BFB 38 15       9626     JR      C,LOC8
ld (hl),a        ; ld (hl),a        | 043BFD 043BC5 || 043BFD 77          9627     LD      (HL),A
inc hl           ; inc hl           | 043BFE 043BC6 || 043BFE 23          9628     INC     HL
call $043cb3     ; call $043c7b     | 043BFF 043BC7 || 043BFF CD B3 3C 04 9629     CALL    RANGE1
jr nc,$-$0e      ; jr nc,$-$0e      | 043C03 043BCB || 043C03 30 F0       9630     JR      NC,LOC7
cp $28           ; cp $28           | 043C05 043BCD || 043C05 FE 28       9631     CP      '('
jr z,$+$0b       ; jr z,$+$0b       | 043C07 043BCF || 043C07 28 09       9632     JR      Z,LOC8
ld a,(iy+$01)    ; ld a,(iy+$01)    | 043C09 043BD1 || 043C09 FD 7E 01    9633     LD      A,(IY+1)
cp $28           ; cp $28           | 043C0C 043BD4 || 043C0C FE 28       9634     CP      '('
jr z,$-$19       ; jr z,$-$19       | 043C0E 043BD6 || 043C0E 28 E5       9635     JR      Z,LOC7
inc iy           ; inc iy           | 043C10 043BD8 || 043C10 FD 23       9636     INC     IY
ld (hl),$00      ; ld (hl),$00      | 043C12 043BDA || 043C12 36 00       9637  LOC8:   LD      (HL),0           ; TERMINATOR
inc hl           ; inc hl           | 043C14 043BDC || 043C14 23          9638     INC     HL
push hl          ; push hl          | 043C15 043BDD || 043C15 E5          9639     PUSH    HL
call $043bd4     ; call $043b9c     | 043C16 043BDE || 043C16 CD D4 3B 04 9640     CALL    TYPE_   ; Get the variable type in D
ld a,$04         ; ld a,$04         | 043C1A 043BE2 || 043C1A 3E 04       9641     LD      A,4   ; If it is an integer then it takes up 4 bytes
cp d             ; cp d             | 043C1C 043BE4 || 043C1C BA          9642     CP      D
jr z,$+$03       ; jr z,$+$03       | 043C1D 043BE5 || 043C1D 28 01       9643     JR      Z,LOC9   ; So skip the next bit
inc a            ; inc a            | 043C1F 043BE7 || 043C1F 3C          9644     INC     A   ; Strings and floats take up 5 bytes (NB: Strings take up 4 in BBC BASIC for Z80)
ld (hl),$00      ; ld (hl),$00      | 043C20 043BE8 || 043C20 36 00       9645  LOC9:   LD      (HL),0           ; Initialise the memory to zero
inc hl           ; inc hl           | 043C22 043BEA || 043C22 23          9646     INC     HL
dec a            ; dec a            | 043C23 043BEB || 043C23 3D          9647     DEC     A
jr nz,$-$04      ; jr nz,$-$04      | 043C24 043BEC || 043C24 20 FA       9648     JR      NZ,LOC9
ld ($044d1d),hl  ; ld ($044d1d),hl  | 043C26 043BEE || 043C26 22 1D 4D 04 9649     LD      (FREE),HL  ; Adjust the stack
call $041681     ; call $04164f     | 043C2A 043BF2 || 043C2A CD 81 16 04 9650     CALL    CHECK   ; Check whether we are out of space
pop hl           ; pop hl           | 043C2E 043BF6 || 043C2E E1          9651     POP     HL
xor a            ; xor a            | 043C2F 043BF7 || 043C2F AF          9652     XOR     A
ret              ; ret              | 043C30 043BF8 || 043C30 C9          9653     RET
call $040a78     ; call $040a70     | 043C31 043BF9 || 043C31 CD 78 0A 04 9673  LINNUM:   CALL    NXT   ; Skip whitespace to the first character
ld.sis hl,$0000  ; ld.sis hl,$0000  | 043C35 043BFD || 043C35 40 21 00 00 9674     LD.SIS  HL,0   ; The running total
ld a,(iy)        ; ld a,(iy)        | 043C39 043C01 || 043C39 FD 7E 00    9675  LINNM1:   LD      A,(IY)   ; A: Fetch the digit to add in
sub $30          ; sub $30          | 043C3C 043C04 || 043C3C D6 30       9676     SUB     '0'   ; Sub ASCII '0' to make a binary number (0-9)
ret c            ; ret c            | 043C3E 043C06 || 043C3E D8          9677     RET     C   ; And return if less than 0
cp $0a           ; cp $0a           | 043C3F 043C07 || 043C3F FE 0A       9678     CP      10   ; Or greater than or equal to 10
ret nc           ; ret nc           | 043C41 043C09 || 043C41 D0          9679     RET     NC   ; As we've hit a non-numeric character (end of number) at this point
inc iy           ; inc iy           | 043C42 043C0A || 043C42 FD 23       9680     INC     IY   ; Increment the string pointer
ld d,h           ; ld d,h           | 043C44 043C0C || 043C44 54          9681     LD      D,H   ; This next block multiplys HL by 10, shifting the result left in BASE 10
ld e,l           ; ld e,l           | 043C45 043C0D || 043C45 5D          9682     LD      E,L   ; Store the original number in DE
add.sil hl,hl    ; add.sil hl,hl    | 043C46 043C0E || 043C46 52 29       9683     ADD.S   HL,HL            ; *2
jr c,$+$15       ; jr c,$+$15       | 043C48 043C10 || 043C48 38 13       9684     JR      C,TOOBIG  ; At each point, error if > 65535 (carry flag set)
add.sil hl,hl    ; add.sil hl,hl    | 043C4A 043C12 || 043C4A 52 29       9685     ADD.S   HL,HL            ; *4S
jr c,$+$11       ; jr c,$+$11       | 043C4C 043C14 || 043C4C 38 0F       9686     JR      C,TOOBIG
add.sil hl,de    ; add.sil hl,de    | 043C4E 043C16 || 043C4E 52 19       9687     ADD.S   HL,DE            ; *5
jr c,$+$0d       ; jr c,$+$0d       | 043C50 043C18 || 043C50 38 0B       9688     JR      C,TOOBIG
add.sil hl,hl    ; add.sil hl,hl    | 043C52 043C1A || 043C52 52 29       9689     ADD.S   HL,HL            ; *10
jr c,$+$09       ; jr c,$+$09       | 043C54 043C1C || 043C54 38 07       9690     JR      C,TOOBIG
ld e,a           ; ld e,a           | 043C56 043C1E || 043C56 5F          9691     LD      E,A   ; A->DE: the digit to add in
ld d,$00         ; ld d,$00         | 043C57 043C1F || 043C57 16 00       9692     LD      D,0
add.sil hl,de    ; add.sil hl,de    | 043C59 043C21 || 043C59 52 19       9693     ADD.S   HL,DE            ; Add in the digit to the running total
jr nc,$-$22      ; jr nc,$-$22      | 043C5B 043C23 || 043C5B 30 DC       9694     JR      NC,LINNM1        ; And if it is still <= 65535, loop
ld a,$14         ; ld a,$14         | 043C5D 043C25 || 043C5D 3E 14       9696  TOOBIG:   LD      A,20
jp $043798       ; jp $043760       | 043C5F 043C27 || 043C5F C3 98 37 04 9697     JP      ERROR_            ; Error: "Too big"
call $043c31     ; call $043bf9     | 043C63 043C2B || 043C63 CD 31 3C 04 9705  PAIR:   CALL    LINNUM           ; Parse the first line number
ld a,h           ; ld a,h           | 043C67 043C2F || 043C67 7C          9706     LD      A,H   ; If it is not zero, then...
or l             ; or l             | 043C68 043C30 || 043C68 B5          9707     OR      L
jr nz,$+$04      ; jr nz,$+$04      | 043C69 043C31 || 043C69 20 02       9708     JR      NZ,PAIR1  ; Skip...
ld l,$0a         ; ld l,$0a         | 043C6B 043C33 || 043C6B 2E 0A       9709     LD      L,10   ; HL: the default value (10)
call $0417ac     ; call $04177a     | 043C6D 043C35 || 043C6D CD AC 17 04 9711  PAIR1:   CALL    TERMQ   ; Check for ELSE, : or CR
inc iy           ; inc iy           | 043C71 043C39 || 043C71 FD 23       9712     INC     IY   ; Skip to next character
push hl          ; push hl          | 043C73 043C3B || 043C73 E5          9713     PUSH    HL   ; Stack the first line number
ld hl,$00000a    ; ld hl,$00000a    | 043C74 043C3C || 043C74 21 0A 00 00 9714     LD      HL,10   ; HL: the second default (10)
call nz,$043c31  ; call nz,$043bf9  | 043C78 043C40 || 043C78 C4 31 3C 04 9715     CALL    NZ,LINNUM        ; Parse the second line number
ex (sp),hl       ; ex (sp),hl       | 043C7C 043C44 || 043C7C E3          9716     EX      (SP),HL   ; HL: The first line number (off the stack)
pop bc           ; pop bc           | 043C7D 043C45 || 043C7D C1          9717     POP     BC   ; BC: Second line number
ld a,b           ; ld a,b           | 043C7E 043C46 || 043C7E 78          9718     LD      A,B   ; If the second line number is not zero then...
or c             ; or c             | 043C7F 043C47 || 043C7F B1          9719     OR      C   ; We're good...
ret nz           ; ret nz           | 043C80 043C48 || 043C80 C0          9720     RET     NZ   ; Exit, otherwise...
call $0437af     ; call $043777     | 043C81 043C49 || 043C81 CD AF 37 04 9721     CALL    EXTERR   ; Throw error: "Silly"
ld d,e           ; ld d,e           | 043C85 043C4D || 043C85 53 69 6C 6C 9722     DB     "Silly", 0
ld l,c           ;                  | 043C86        || ld l,c                         ; 043C4E
ld l,h           ;                  | 043C87        || ld l,h                         ; 043C4F
ld l,h           ;                  | 043C88        || ld l,h                         ; 043C50
ld a,c           ;                  | 043C89        || ld a,c                         ; 043C51
nop              ;                  | 043C8A        || nop                            ; 043C52
call $043c31     ; call $043bf9     | 043C8B 043C53 || 043C8B CD 31 3C 04 9730  DLPAIR:   CALL    LINNUM   ; Parse the first line number
push hl          ; push hl          | 043C8F 043C57 || 043C8F E5          9731     PUSH    HL   ; Stack it
call $0417ac     ; call $04177a     | 043C90 043C58 || 043C90 CD AC 17 04 9732     CALL    TERMQ   ; Check for ELSE, : or CR
jr z,$+$0c       ; jr z,$+$0c       | 043C94 043C5C || 043C94 28 0A       9733     JR      Z,DLP1   ; And exit if so
cp $e7           ; cp $e7           | 043C96 043C5E || 043C96 FE E7       9734     CP      TIF   ; Is the token IF?
jr z,$+$08       ; jr z,$+$08       | 043C98 043C60 || 043C98 28 06       9735     JR      Z,DLP1   ; Yes, so skip the next bit...
inc iy           ; inc iy           | 043C9A 043C62 || 043C9A FD 23       9736     INC     IY   ; Otherwise...
call $043c31     ; call $043bf9     | 043C9C 043C64 || 043C9C CD 31 3C 04 9737     CALL    LINNUM   ; Fetch the second line number
ex (sp),hl       ; ex (sp),hl       | 043CA0 043C68 || 043CA0 E3          9738  DLP1:   EX      (SP),HL   ; HL: The first line number (off the stack)
call $0439c7     ; call $04398f     | 043CA1 043C69 || 043CA1 CD C7 39 04 9739     CALL    FINDL   ; HL: Find the address of the line
pop bc           ; pop bc           | 043CA5 043C6D || 043CA5 C1          9740     POP     BC   ; BC: The second number
ret              ; ret              | 043CA6 043C6E || 043CA6 C9          9741     RET
ld a,(iy)        ; ld a,(iy)        | 043CA7 043C6F || 043CA7 FD 7E 00    9752  RANGE:   LD      A,(IY)   ; Fetch the character
cp $24           ; cp $24           | 043CAA 043C72 || 043CAA FE 24       9753     CP      '$'   ; Postfix for string variable is valid
ret z            ; ret z            | 043CAC 043C74 || 043CAC C8          9754     RET     Z
cp $25           ; cp $25           | 043CAD 043C75 || 043CAD FE 25       9755     CP      '%'   ; Postfix for integer variable is valid
ret z            ; ret z            | 043CAF 043C77 || 043CAF C8          9756     RET     Z
cp $28           ; cp $28           | 043CB0 043C78 || 043CB0 FE 28       9757     CP      '('   ; Postfix for array is valid
ret z            ; ret z            | 043CB2 043C7A || 043CB2 C8          9758     RET     Z
cp $30           ; cp $30           | 043CB3 043C7B || 043CB3 FE 30       9764  RANGE1:   CP      '0'   ; If it is between '0'...
ret c            ; ret c            | 043CB5 043C7D || 043CB5 D8          9765     RET     C
cp $3a           ; cp $3a           | 043CB6 043C7E || 043CB6 FE 3A       9766     CP      '9'+1   ; And '9'...
ccf              ; ccf              | 043CB8 043C80 || 043CB8 3F          9767     CCF
ret nc           ; ret nc           | 043CB9 043C81 || 043CB9 D0          9768     RET     NC   ; Then it is valid
cp $40           ; cp $40           | 043CBA 043C82 || 043CBA FE 40       9769     CP      '@'              ; The prefix @ is valid (@% controls numeric print formatting - v2.4)
ret z            ; ret z            | 043CBC 043C84 || 043CBC C8          9770     RET     Z
cp $41           ; cp $41           | 043CBD 043C85 || 043CBD FE 41       9775  RANGE2:   CP      'A'   ; If it is between 'A'...
ret c            ; ret c            | 043CBF 043C87 || 043CBF D8          9776     RET     C
cp $5b           ; cp $5b           | 043CC0 043C88 || 043CC0 FE 5B       9777     CP      'Z'+1   ; And 'Z'...
ccf              ; ccf              | 043CC2 043C8A || 043CC2 3F          9778     CCF
ret nc           ; ret nc           | 043CC3 043C8B || 043CC3 D0          9779     RET     NC   ; Then it is valid
cp $5f           ; cp $5f           | 043CC4 043C8C || 043CC4 FE 5F       9780     CP      '_'   ; If it is underscore, grave, or between 'a'
ret c            ; ret c            | 043CC6 043C8E || 043CC6 D8          9781     RET     C
cp $7b           ; cp $7b           | 043CC7 043C8F || 043CC7 FE 7B       9782     CP      'z'+1   ; And 'z'
ccf              ; ccf              | 043CC9 043C91 || 043CC9 3F          9783     CCF    ; Then it is valid
ret              ; ret              | 043CCA 043C92 || 043CCA C9          9784     RET
xor a            ; xor a            | 043CCB 043C93 || 043CCB AF          9789  SPACE_:   XOR     A
call $0437af     ; call $043777     | 043CCC 043C94 || 043CCC CD AF 37 04 9790     CALL    EXTERR           ; "LINE space"
add a,(hl)       ; add a,(hl)       | 043CD0 043C98 || 043CD0 86 08 00    9791     DB     LINE_MN_, 8, 0
ex af,af'        ;                  | 043CD1        || ex af,af'                      ; 043C99
nop              ;                  | 043CD2        || nop                            ; 043C9A
ld (de),a        ; ld (de),a        | 043CD3 043C9B || 043CD3 12          9807  LEXAN1:   LD      (DE),A           ; Transfer to buffer
inc de           ; inc de           | 043CD4 043C9C || 043CD4 13          9808     INC     DE               ; Increment the pointers
inc iy           ; inc iy           | 043CD5 043C9D || 043CD5 FD 23       9809     INC     IY   ; And fall through to the main function
ld a,e           ; ld a,e           | 043CD7 043C9F || 043CD7 7B          9813  LEXAN2:   LD      A,E              ; Destination buffer on page boundary, so E can be used as length
cp $fc           ; cp $fc           | 043CD8 043CA0 || 043CD8 FE FC       9814     CP      252              ; If it is >= 252 bytes, then...
jr nc,$-$0f      ; jr nc,$-$0f      | 043CDA 043CA2 || 043CDA 30 EF       9815     JR      NC,SPACE_         ; Throw a 'LINE space' error (line too long)
ld a,(iy)        ; ld a,(iy)        | 043CDC 043CA4 || 043CDC FD 7E 00    9816     LD      A,(IY)   ; Fetch character from source string
cp $0d           ; cp $0d           | 043CDF 043CA7 || 043CDF FE 0D       9817     CP      CR   ; If it is a CR
ret z            ; ret z            | 043CE1 043CA9 || 043CE1 C8          9818     RET     Z                ; Then it is end of line; we're done parsing
call $043cb3     ; call $043c7b     | 043CE2 043CAA || 043CE2 CD B3 3C 04 9819     CALL    RANGE1   ; Is it alphanumeric, '@', '_' or '`'
jr nc,$+$08      ; jr nc,$+$08      | 043CE6 043CAE || 043CE6 30 06       9820     JR      NC,LEXAN3  ; Yes, so skip
res 5,c          ; res 5,c          | 043CE8 043CB0 || 043CE8 CB A9       9821     RES     5,C              ; FLAG: NOT IN VARIABLE
res 3,c          ; res 3,c          | 043CEA 043CB2 || 043CEA CB 99       9822     RES     3,C              ; FLAG: NOT IN HEX
res 2,c          ; res 2,c          | 043CEC 043CB4 || 043CEC CB 91       9823     RES 2,C   ; FLAG: NOT IN BINARY
cp $20           ; cp $20           | 043CEE 043CB6 || 043CEE FE 20       9825  LEXAN3:   CP      ' '   ; Ignore spaces
jr z,$-$1d       ; jr z,$-$1d       | 043CF0 043CB8 || 043CF0 28 E1       9826     JR      Z,LEXAN1
cp $2c           ; cp $2c           | 043CF2 043CBA || 043CF2 FE 2C       9827     CP      ','   ; Ignore commas
jr z,$-$21       ; jr z,$-$21       | 043CF4 043CBC || 043CF4 28 DD       9828     JR      Z,LEXAN1
cp $32           ; cp $32           | 043CF6 043CBE || 043CF6 FE 32       9829     CP '2'   ; If less than '2'
jr nc,$+$04      ; jr nc,$+$04      | 043CF8 043CC0 || 043CF8 30 02       9830     JR NC, @F   ; No, so skip
res 2,c          ; res 2,c          | 043CFA 043CC2 || 043CFA CB 91       9831     RES 2,C   ; FLAG: NOT IN BINARY
cp $47           ; cp $47           | 043CFC 043CC4 || 043CFC FE 47       9832  @@:   CP      'G'   ; If less then 'G'
jr c,$+$04       ; jr c,$+$04       | 043CFE 043CC6 || 043CFE 38 02       9833     JR      C,LEXAN4  ; Yes, so skip
res 3,c          ; res 3,c          | 043D00 043CC8 || 043D00 CB 99       9834     RES     3,C              ; FLAG: NOT IN HEX
cp $22           ; cp $22           | 043D02 043CCA || 043D02 FE 22       9836  LEXAN4:   CP      34   ; Is it a quote character?
jr nz,$+$07      ; jr nz,$+$07      | 043D04 043CCC || 043D04 20 05       9837     JR      NZ,LEXAN5  ; No, so skip
rl c             ; rl c             | 043D06 043CCE || 043D06 CB 11       9838     RL      C   ; Toggle bit 7 of C by shifting it into carry flag
ccf              ; ccf              | 043D08 043CD0 || 043D08 3F          9839     CCF                      ; Toggle the carry
rr c             ; rr c             | 043D09 043CD1 || 043D09 CB 19       9840     RR      C   ; And then shifting it back into bit 7 of C
bit 4,c          ; bit 4,c          | 043D0B 043CD3 || 043D0B CB 61       9842  LEXAN5:   BIT     4,C   ; Accept line number?
jr z,$+$14       ; jr z,$+$14       | 043D0D 043CD5 || 043D0D 28 12       9843     JR      Z,LEXAN6  ; No, so skip
res 4,c          ; res 4,c          | 043D0F 043CD7 || 043D0F CB A1       9844     RES     4,C   ; FLAG: DON'T ACCEPT LINE NUMBER
push bc          ; push bc          | 043D11 043CD9 || 043D11 C5          9845     PUSH    BC
push de          ; push de          | 043D12 043CDA || 043D12 D5          9846     PUSH    DE
call $043c31     ; call $043bf9     | 043D13 043CDB || 043D13 CD 31 3C 04 9847     CALL    LINNUM           ; Parse the line number to HL
pop de           ; pop de           | 043D17 043CDF || 043D17 D1          9848     POP     DE
pop bc           ; pop bc           | 043D18 043CE0 || 043D18 C1          9849     POP     BC
ld a,h           ; ld a,h           | 043D19 043CE1 || 043D19 7C          9850     LD      A,H   ; If it is not zero
or l             ; or l             | 043D1A 043CE2 || 043D1A B5          9851     OR      L
call nz,$043d94  ; call nz,$043d5c  | 043D1B 043CE3 || 043D1B C4 94 3D 04 9852     CALL    NZ,ENCODE        ; Then encode the line number HL to the destination (DE)
jr $-$48         ; jr $-$48         | 043D1F 043CE7 || 043D1F 18 B6       9853     JR      LEXAN2           ; And loop
dec c            ; dec c            | 043D21 043CE9 || 043D21 0D          9855  LEXAN6:   DEC     C   ; Check for C=1 (LEFT)
jr z,$+$0c       ; jr z,$+$0c       | 043D22 043CEA || 043D22 28 0A       9856     JR      Z,LEXAN7         ; If so, skip
inc c            ; inc c            | 043D24 043CEC || 043D24 0C          9857     INC     C   ; Otherwise restore C
jr nz,$-$52      ; jr nz,$-$52      | 043D25 043CED || 043D25 20 AC       9858     JR      NZ,LEXAN1  ; If C was 0 (RIGHT) then...
or a             ; or a             | 043D27 043CEF || 043D27 B7          9859     OR      A   ; Set the flags based on the character
call p,$0437ff   ; call p,$0437c7   | 043D28 043CF0 || 043D28 F4 FF 37 04 9860     CALL    P,LEX            ; Tokenise if A < 128
jr $+$15         ; jr $+$15         | 043D2C 043CF4 || 043D2C 18 13       9861     JR      LEXAN8   ; And skip
cp $2a           ; cp $2a           | 043D2E 043CF6 || 043D2E FE 2A       9865  LEXAN7:   CP      '*'   ; Is it a '*' (for star commands)
jr z,$+$19       ; jr z,$+$19       | 043D30 043CF8 || 043D30 28 17       9866     JR      Z,LEXAN9  ; Yes, so skip to quit tokenising
or a             ; or a             | 043D32 043CFA || 043D32 B7          9867     OR      A   ; Set the flags based on the character
call p,$0437ff   ; call p,$0437c7   | 043D33 043CFB || 043D33 F4 FF 37 04 9868     CALL    P,LEX            ; Tokenise if A < 128
cp $8f           ; cp $8f           | 043D37 043CFF || 043D37 FE 8F       9876     CP      TOKLO   ; TOKLO is 8Fh
jr c,$+$08       ; jr c,$+$08       | 043D39 043D01 || 043D39 38 06       9877     JR      C,LEXAN8  ; If A is < 8Fh then skip to LEX8
cp $94           ; cp $94           | 043D3B 043D03 || 043D3B FE 94       9878     CP      TOKHI+1   ; TOKHI is 93h
jr nc,$+$04      ; jr nc,$+$04      | 043D3D 043D05 || 043D3D 30 02       9879     JR      NC,LEXAN8  ; If A is >= 94h then skip to LEX8
add a,$40        ; add a,$40        | 043D3F 043D07 || 043D3F C6 40       9880     ADD     A,OFFSET         ; Add OFFSET (40h) to make the token the SET version
cp $f4           ; cp $f4           | 043D41 043D09 || 043D41 FE F4       9882  LEXAN8:   CP      REM   ; If the token is REM
jr z,$+$06       ; jr z,$+$06       | 043D43 043D0B || 043D43 28 04       9883     JR      Z,LEXAN9  ; Then stop tokenising
cp $dc           ; cp $dc           | 043D45 043D0D || 043D45 FE DC       9884     CP      DATA_MN_   ; If it is not DATA then
jr nz,$+$04      ; jr nz,$+$04      | 043D47 043D0F || 043D47 20 02       9885     JR      NZ,LEXANA  ; Skip
set 6,c          ; set 6,c          | 043D49 043D11 || 043D49 CB F1       9886  LEXAN9:   SET     6,C              ; FLAG: STOP TOKENISING
cp $a4           ; cp $a4           | 043D4B 043D13 || 043D4B FE A4       9888  LEXANA:   CP      FN   ; If the token is FN
jr z,$+$0c       ; jr z,$+$0c       | 043D4D 043D15 || 043D4D 28 0A       9889     JR      Z,LEXANB
cp $f2           ; cp $f2           | 043D4F 043D17 || 043D4F FE F2       9890     CP      PROC   ; Or the token is PROC
jr z,$+$08       ; jr z,$+$08       | 043D51 043D19 || 043D51 28 06       9891     JR      Z,LEXANB  ; Then jump to here
call $043cbd     ; call $043c85     | 043D53 043D1B || 043D53 CD BD 3C 04 9892     CALL    RANGE2   ; Otherwise check the input is alphanumeric, "_" or "`"
jr c,$+$04       ; jr c,$+$04       | 043D57 043D1F || 043D57 38 02       9893     JR      C,LEXANC  ; Jump here if out of range
set 5,c          ; set 5,c          | 043D59 043D21 || 043D59 CB E9       9895  LEXANB:   SET     5,C              ; FLAG: IN VARIABLE/FN/PROC
cp $26           ; cp $26           | 043D5B 043D23 || 043D5B FE 26       9896  LEXANC:   CP      '&'   ; Check for hex prefix
jr nz,$+$04      ; jr nz,$+$04      | 043D5D 043D25 || 043D5D 20 02       9897     JR      NZ,LEXAND  ; If not, skip
set 3,c          ; set 3,c          | 043D5F 043D27 || 043D5F CB D9       9898     SET     3,C              ; FLAG: IN HEX
cp $25           ; cp $25           | 043D61 043D29 || 043D61 FE 25       9900  LEXAND:   CP '%'   ; Check for binary prefix
jr nz,$+$04      ; jr nz,$+$04      | 043D63 043D2B || 043D63 20 02       9901     JR NZ,LEXANE  ; If not, skip
set 2,c          ; set 2,c          | 043D65 043D2D || 043D65 CB D1       9902     SET 2,C   ; FLAG: IN BINARY
ld hl,$043d8b    ; ld hl,$043d53    | 043D67 043D2F || 043D67 21 8B 3D 04 9904  LEXANE:   LD      HL,LIST1  ; List of tokens that must be followed by a line number
push bc          ; push bc          | 043D6B 043D33 || 043D6B C5          9905     PUSH    BC
ld bc,$000006    ; ld bc,$000006    | 043D6C 043D34 || 043D6C 01 06 00 00 9906     LD      BC,LIST1L  ; The list length
cpir             ; cpir             | 043D70 043D38 || 043D70 ED B1       9907     CPIR    ; Check if the token is in this list
pop bc           ; pop bc           | 043D72 043D3A || 043D72 C1          9908     POP     BC
jr nz,$+$04      ; jr nz,$+$04      | 043D73 043D3B || 043D73 20 02       9909     JR      NZ,LEXANF  ; If not, then skip
set 4,c          ; set 4,c          | 043D75 043D3D || 043D75 CB E1       9910     SET     4,C              ; FLAG: ACCEPT LINE NUMBER
ld hl,$043d8f    ; ld hl,$043d57    | 043D77 043D3F || 043D77 21 8F 3D 04 9912  LEXANF:   LD      HL,LIST2  ; List of tokens that switch the lexical analysis back to LEFT mode
push bc          ; push bc          | 043D7B 043D43 || 043D7B C5          9913     PUSH    BC
ld bc,$000005    ; ld bc,$000005    | 043D7C 043D44 || 043D7C 01 05 00 00 9914     LD      BC,LIST2L  ; The list length
cpir             ; cpir             | 043D80 043D48 || 043D80 ED B1       9915     CPIR    ; Check if the token is in this list
pop bc           ; pop bc           | 043D82 043D4A || 043D82 C1          9916     POP     BC
jr nz,$+$04      ; jr nz,$+$04      | 043D83 043D4B || 043D83 20 02       9917     JR      NZ,LEXANG  ; If not, then skip
set 0,c          ; set 0,c          | 043D85 043D4D || 043D85 CB C1       9918     SET     0,C              ; FLAG: ENTER LEFT MODE
jp $043cd3       ; jp $043c9b       | 043D87 043D4F || 043D87 C3 D3 3C 04 9919  LEXANG:   JP      LEXAN1   ; And loop
push hl          ; push hl          | 043D8B 043D53 || 043D8B E5          9925  LIST1:   DB GOTO
call po,$8cfcf7  ; call po,$8cfcf7  | 043D8C 043D54 || 043D8C E4          9926     DB GOSUB
adc a,e          ; adc a,e          | 043D90 043D58 || 043D90 8B          9930     DB ELSE_MN_
push af          ; push af          | 043D91 043D59 || 043D91 F5          9932     DB REPEAT
add a,l          ; add a,l          | 043D92 043D5A || 043D92 85          9933     DB TERROR_MN
ld a,($ebe1cb)   ; ld a,($ebe1cb)   | 043D93 043D5B || 043D93 3A          9934     DB     ':'
ld (hl),$8d      ; ld (hl),$8d      | 043D97 043D5F || 043D97 36 8D       9952     LD      (HL), LINO_MN  ; Store 8Dh first to flag next bytes as an encoded line number
inc hl           ; inc hl           | 043D99 043D61 || 043D99 23          9953     INC     HL
ld a,d           ; ld a,d           | 043D9A 043D62 || 043D9A 7A          9954     LD      A,D   ; Get the high byte
and $c0          ; and $c0          | 043D9B 043D63 || 043D9B E6 C0       9955     AND     0C0H   ; Get the top two bits DD000000
rrca             ; rrca             | 043D9D 043D65 || 043D9D 0F          9956     RRCA    ; Shift right  00DD0000
rrca             ; rrca             | 043D9E 043D66 || 043D9E 0F          9957     RRCA
ld b,a           ; ld b,a           | 043D9F 043D67 || 043D9F 47          9958     LD      B,A   ; Store in B
ld a,e           ; ld a,e           | 043DA0 043D68 || 043DA0 7B          9959     LD      A,E   ; Get the low byte
and $c0          ; and $c0          | 043DA1 043D69 || 043DA1 E6 C0       9960     AND     0C0H   ; Get the top two bits EE000000
or b             ; or b             | 043DA3 043D6B || 043DA3 B0          9961     OR      B   ; Combine with D EEDD0000
rrca             ; rrca             | 043DA4 043D6C || 043DA4 0F          9962     RRCA    ; Shift right  00EEDD00
rrca             ; rrca             | 043DA5 043D6D || 043DA5 0F          9963     RRCA
xor $54          ; xor $54          | 043DA6 043D6E || 043DA6 EE 54       9964     XOR     01010100B  ; XOR with 54h
ld (hl),a        ; ld (hl),a        | 043DA8 043D70 || 043DA8 77          9965     LD      (HL),A   ; Store this as the second byte
inc hl           ; inc hl           | 043DA9 043D71 || 043DA9 23          9966     INC     HL
ld a,e           ; ld a,e           | 043DAA 043D72 || 043DAA 7B          9967     LD      A,E   ; Get the low byte
and $3f          ; and $3f          | 043DAB 043D73 || 043DAB E6 3F       9968     AND     3FH   ; Strip the top two bits off
or $40           ; or $40           | 043DAD 043D75 || 043DAD F6 40       9969     OR      '@'   ; OR with 40h
ld (hl),a        ; ld (hl),a        | 043DAF 043D77 || 043DAF 77          9970     LD      (HL),A   ; Store
inc hl           ; inc hl           | 043DB0 043D78 || 043DB0 23          9971     INC     HL
ld a,d           ; ld a,d           | 043DB1 043D79 || 043DB1 7A          9972     LD      A,D   ; Get the high byte
and $3f          ; and $3f          | 043DB2 043D7A || 043DB2 E6 3F       9973     AND     3FH   ; Strip the top two bits off
or $40           ; or $40           | 043DB4 043D7C || 043DB4 F6 40       9974     OR      '@'   ; OR with 40h
ld (hl),a        ; ld (hl),a        | 043DB6 043D7E || 043DB6 77          9975     LD      (HL),A   ; Store
inc hl           ; inc hl           | 043DB7 043D7F || 043DB7 23          9976     INC     HL
ex de,hl         ; ex de,hl         | 043DB8 043D80 || 043DB8 EB          9977     EX      DE,HL   ; DE: string pointer, HL: line number
ret              ; ret              | 043DB9 043D81 || 043DB9 C9          9978     RET
ld hl,($044d2f)  ; ld hl,($044d2f)  | 043DBA 043D82 || 043DBA 2A 2F 4D 04 9985  REPORT:   LD      HL, (ERRTXT)  ; Output an error message pointed to by ERRTXT
ld a,(hl)        ; ld a,(hl)        | 043DBE 043D86 || 043DBE 7E          9987  TEXT_:   LD      A, (HL)   ; Fetch the character
inc hl           ; inc hl           | 043DBF 043D87 || 043DBF 23          9988     INC     HL   ; Increment pointer to next character
or a             ; or a             | 043DC0 043D88 || 043DC0 B7          9989     OR      A   ; Check for the nul (0) string terminator
ret z            ; ret z            | 043DC1 043D89 || 043DC1 C8          9990     RET     Z   ; And return if so
call $0439a4     ; call $04396c     | 043DC2 043D8A || 043DC2 CD A4 39 04 9991     CALL    OUT_   ; Output the character; note that OUT_ will detokenise tokens
jr $-$08         ; jr $-$08         | 043DC6 043D8E || 043DC6 18 F6       9992     JR      TEXT_   ; And loop
ex (sp),hl       ; ex (sp),hl       | 043DC8 043D90 || 043DC8 E3          10004  TELL:   EX      (SP), HL  ; Get the return address off the stack into HL, this is the
call $043dbe     ; call $043d86     | 043DC9 043D91 || 043DC9 CD BE 3D 04 10005     CALL    TEXT_   ; first byte of the string that follows it. Print it, then
ex (sp),hl       ; ex (sp),hl       | 043DCD 043D95 || 043DCD E3          10006     EX      (SP), HL  ; HL will point to the next instruction, swap this back onto the stack
ret              ; ret              | 043DCE 043D96 || 043DCE C9          10007     RET    ; at this point we'll return to the first instruction after the message; --- End main.asm ---
push bc          ; push bc          | 043DCF 043D97 || 043DCF C5          10047  ASC_TO_NUMBER:  PUSH BC   ; Preserve BC
ld de,$000000    ; ld de,$000000    | 043DD0 043D98 || 043DD0 11 00 00 00 10048     LD DE, 0   ; Initialise DE
call $043e16     ; call $043dde     | 043DD4 043D9C || 043DD4 CD 16 3E 04 10049     CALL SKIPSPC   ; Skip whitespace
ld a,(hl)        ; ld a,(hl)        | 043DD8 043DA0 || 043DD8 7E          10050     LD A, (HL)   ; Read first character
cp $26           ; cp $26           | 043DD9 043DA1 || 043DD9 FE 26       10051     CP '&'   ; Is it prefixed with '&' (HEX number)?
jr nz,$+$21      ; jr nz,$+$21      | 043DDB 043DA3 || 043DDB 20 1F       10052     JR NZ, ASC_TO_NUMBER3 ; Jump to decimal parser if not
inc hl           ; inc hl           | 043DDD 043DA5 || 043DDD 23          10053     INC HL   ; Otherwise fall through to ASC_TO_HEX
ld a,(hl)        ; ld a,(hl)        | 043DDE 043DA6 || 043DDE 7E          10055  ASC_TO_NUMBER1:  LD A, (HL)   ; Fetch the character
call $043e24     ; call $043dec     | 043DDF 043DA7 || 043DDF CD 24 3E 04 10056     CALL    UPPERC   ; Convert to uppercase
sub $30          ; sub $30          | 043DE3 043DAB || 043DE3 D6 30       10057     SUB '0'   ; Normalise to 0
jr c,$+$30       ; jr c,$+$30       | 043DE5 043DAD || 043DE5 38 2E       10058     JR  C, ASC_TO_NUMBER4 ; Return if < ASCII '0'
cp $0a           ; cp $0a           | 043DE7 043DAF || 043DE7 FE 0A       10059     CP  10   ; Check if >= 10
jr c,$+$08       ; jr c,$+$08       | 043DE9 043DB1 || 043DE9 38 06       10060     JR  C,ASC_TO_NUMBER2 ; No, so skip next bit
sub $07          ; sub $07          | 043DEB 043DB3 || 043DEB D6 07       10061     SUB  7   ; Adjust ASCII A-F to nibble
cp $10           ; cp $10           | 043DED 043DB5 || 043DED FE 10       10062     CP  16   ; Check for > F
jr nc,$+$26      ; jr nc,$+$26      | 043DEF 043DB7 || 043DEF 30 24       10063     JR  NC, ASC_TO_NUMBER4 ; Return if out of range
ex de,hl         ; ex de,hl         | 043DF1 043DB9 || 043DF1 EB          10064  ASC_TO_NUMBER2:  EX  DE, HL    ; Shift DE left 4 times
add hl,hl        ; add hl,hl        | 043DF2 043DBA || 043DF2 29          10065     ADD HL, HL
add hl,hl        ; add hl,hl        | 043DF3 043DBB || 043DF3 29          10066     ADD HL, HL
add hl,hl        ; add hl,hl        | 043DF4 043DBC || 043DF4 29          10067     ADD HL, HL
add hl,hl        ; add hl,hl        | 043DF5 043DBD || 043DF5 29          10068     ADD HL, HL
ex de,hl         ; ex de,hl         | 043DF6 043DBE || 043DF6 EB          10069     EX DE, HL
or e             ; or e             | 043DF7 043DBF || 043DF7 B3          10070     OR      E   ; OR the new digit in to the least significant nibble
ld e,a           ; ld e,a           | 043DF8 043DC0 || 043DF8 5F          10071     LD      E, A
inc hl           ; inc hl           | 043DF9 043DC1 || 043DF9 23          10072     INC     HL   ; Onto the next character
jr $-$1c         ; jr $-$1c         | 043DFA 043DC2 || 043DFA 18 E2       10073     JR      ASC_TO_NUMBER1  ; And loop
ld a,(hl)        ; ld a,(hl)        | 043DFC 043DC4 || 043DFC 7E          10075  ASC_TO_NUMBER3:  LD A, (HL)
sub $30          ; sub $30          | 043DFD 043DC5 || 043DFD D6 30       10076     SUB '0'   ; Normalise to 0
jr c,$+$16       ; jr c,$+$16       | 043DFF 043DC7 || 043DFF 38 14       10077     JR C, ASC_TO_NUMBER4 ; Return if < ASCII '0'
cp $0a           ; cp $0a           | 043E01 043DC9 || 043E01 FE 0A       10078     CP 10   ; Check if >= 10
jr nc,$+$12      ; jr nc,$+$12      | 043E03 043DCB || 043E03 30 10       10079     JR NC, ASC_TO_NUMBER4 ; Return if >= 10
ex de,hl         ; ex de,hl         | 043E05 043DCD || 043E05 EB          10080     EX  DE, HL    ; Stick DE in HL
ld b,h           ; ld b,h           | 043E06 043DCE || 043E06 44          10081     LD B, H    ; And copy HL into BC
ld c,l           ; ld c,l           | 043E07 043DCF || 043E07 4D          10082     LD C, L
add hl,hl        ; add hl,hl        | 043E08 043DD0 || 043E08 29          10083     ADD HL, HL    ; x 2
add hl,hl        ; add hl,hl        | 043E09 043DD1 || 043E09 29          10084     ADD HL, HL    ; x 4
add hl,bc        ; add hl,bc        | 043E0A 043DD2 || 043E0A 09          10085     ADD HL, BC    ; x 5
add hl,hl        ; add hl,hl        | 043E0B 043DD3 || 043E0B 29          10086     ADD HL, HL    ; x 10
ex de,hl         ; ex de,hl         | 043E0C 043DD4 || 043E0C EB          10087     EX DE, HL
add a,e          ; add a,e          | 043E0D 043DD5 || 043E0D 83          0001M   ADD A, E
ld e,a           ; ld e,a           | 043E0E 043DD6 || 043E0E 5F          0002M   LD E, A
adc a,d          ; adc a,d          | 043E0F 043DD7 || 043E0F 8A          0003M   ADC A, D
sub e            ; sub e            | 043E10 043DD8 || 043E10 93          0004M   SUB E
ld d,a           ; ld d,a           | 043E11 043DD9 || 043E11 57          0005M   LD D, A
inc hl           ; inc hl           | 043E12 043DDA || 043E12 23          10089     INC HL
jr $-$17         ; jr $-$17         | 043E13 043DDB || 043E13 18 E7       10090     JR ASC_TO_NUMBER3
pop bc           ; pop bc           | 043E15 043DDD || 043E15 C1          10091  ASC_TO_NUMBER4:  POP BC    ; Fall through to SKIPSPC here
ld a,(hl)        ; ld a,(hl)        | 043E16 043DDE || 043E16 7E          10096  SKIPSPC:   LD      A, (HL)
cp $20           ; cp $20           | 043E17 043DDF || 043E17 FE 20       10097     CP      ' '
ret nz           ; ret nz           | 043E19 043DE1 || 043E19 C0          10098     RET     NZ
inc hl           ; inc hl           | 043E1A 043DE2 || 043E1A 23          10099     INC     HL
jr $-$05         ; jr $-$05         | 043E1B 043DE3 || 043E1B 18 F9       10100     JR      SKIPSPC
ld a,(hl)        ; ld a,(hl)        | 043E1D 043DE5 || 043E1D 7E          10105  SKIPNOTSP:  LD A, (HL)
cp $20           ; cp $20           | 043E1E 043DE6 || 043E1E FE 20       10106     CP ' '
ret z            ; ret z            | 043E20 043DE8 || 043E20 C8          10107     RET Z
inc hl           ; inc hl           | 043E21 043DE9 || 043E21 23          10108     INC HL
jr $-$05         ; jr $-$05         | 043E22 043DEA || 043E22 18 F9       10109     JR SKIPNOTSP
and $7f          ; and $7f          | 043E24 043DEC || 043E24 E6 7F       10114  UPPERC:    AND     7FH
cp $60           ; cp $60           | 043E26 043DEE || 043E26 FE 60       10115     CP      '`'
ret c            ; ret c            | 043E28 043DF0 || 043E28 D8          10116     RET     C
and $5f          ; and $5f          | 043E29 043DF1 || 043E29 E6 5F       10117     AND     5FH   ; Convert to upper case
ret              ; ret              | 043E2B 043DF3 || 043E2B C9          10118     RET
ex (sp),hl       ; ex (sp),hl       | 043E2C 043DF4 || 043E2C E3          10123  SWITCH_A:  EX (SP), HL  ; Swap HL with the contents of the top of the stack
add a,a          ; add a,a          | 043E2D 043DF5 || 043E2D 87          10124     ADD A, A   ; Multiply A by two
add a,l          ; add a,l          | 043E2E 043DF6 || 043E2E 85          0001M   ADD A, L
ld l,a           ; ld l,a           | 043E2F 043DF7 || 043E2F 6F          0002M   LD L, A
adc a,h          ; adc a,h          | 043E30 043DF8 || 043E30 8C          0003M   ADC A, H
sub l            ; sub l            | 043E31 043DF9 || 043E31 95          0004M   SUB L
ld h,a           ; ld h,a           | 043E32 043DFA || 043E32 67          0005M   LD H, A
ld a,(hl)        ; ld a,(hl)        | 043E33 043DFB || 043E33 7E          10126     LD A, (HL)   ; follow the call. Fetch an address from the
inc hl           ; inc hl           | 043E34 043DFC || 043E34 23          10127     INC HL    ; table.
ld h,(hl)        ; ld h,(hl)        | 043E35 043DFD || 043E35 66          10128     LD H, (HL)
ld l,a           ; ld l,a           | 043E36 043DFE || 043E36 6F          10129     LD L, A
ex (sp),hl       ; ex (sp),hl       | 043E37 043DFF || 043E37 E3          10130     EX (SP), HL  ; Swap this new address back, restores HL
ret              ; ret              | 043E38 043E00 || 043E38 C9          10131     RET    ; Return program control to this new address
push bc          ; push bc          | 043E39 043E01 || 043E39 C5          10136  NULLTOCR:  PUSH  BC
ld b,$00         ; ld b,$00         | 043E3A 043E02 || 043E3A 06 00       10137     LD B, 0
ld c,$0d         ; ld c,$0d         | 043E3C 043E04 || 043E3C 0E 0D       10138     LD C, CR
jr $+$07         ; jr $+$07         | 043E3E 043E06 || 043E3E 18 05       10139     JR CRTONULL0
push bc          ; push bc          | 043E40 043E08 || 043E40 C5          10141  CRTONULL:  PUSH BC
ld b,$0d         ; ld b,$0d         | 043E41 043E09 || 043E41 06 0D       10142     LD B, CR
ld c,$00         ; ld c,$00         | 043E43 043E0B || 043E43 0E 00       10143     LD C, 0
push hl          ; push hl          | 043E45 043E0D || 043E45 E5          10145  CRTONULL0:  PUSH HL
ld a,(hl)        ; ld a,(hl)        | 043E46 043E0E || 043E46 7E          10146  CRTONULL1:  LD A, (HL)
cp b             ; cp b             | 043E47 043E0F || 043E47 B8          10147     CP  B
jr z,$+$05       ; jr z,$+$05       | 043E48 043E10 || 043E48 28 03       10148     JR Z, CRTONULL2
inc hl           ; inc hl           | 043E4A 043E12 || 043E4A 23          10149     INC HL
jr $-$05         ; jr $-$05         | 043E4B 043E13 || 043E4B 18 F9       10150     JR CRTONULL1
ld (hl),c        ; ld (hl),c        | 043E4D 043E15 || 043E4D 71          10151  CRTONULL2:  LD (HL), C
pop hl           ; pop hl           | 043E4E 043E16 || 043E4E E1          10152     POP  HL
pop bc           ; pop bc           | 043E4F 043E17 || 043E4F C1          10153     POP BC
ret              ; ret              | 043E50 043E18 || 043E50 C9          10154     RET
ld a,(hl)        ; ld a,(hl)        | 043E51 043E19 || 043E51 7E          10160  CSTR_FNAME:  LD A, (HL)   ; Get source
cp $20           ; cp $20           | 043E52 043E1A || 043E52 FE 20       10161     CP 32   ; Is it space
jr z,$+$0b       ; jr z,$+$0b       | 043E54 043E1C || 043E54 28 09       10162     JR Z, @F
cp $0d           ; cp $0d           | 043E56 043E1E || 043E56 FE 0D       10163     CP CR   ; Or is it CR
jr z,$+$07       ; jr z,$+$07       | 043E58 043E20 || 043E58 28 05       10164     JR Z, @F
ld (de),a        ; ld (de),a        | 043E5A 043E22 || 043E5A 12          10165     LD (DE), A   ; No, so store
inc hl           ; inc hl           | 043E5B 043E23 || 043E5B 23          10166     INC HL   ; Increment
inc de           ; inc de           | 043E5C 043E24 || 043E5C 13          10167     INC DE
jr $-$0c         ; jr $-$0c         | 043E5D 043E25 || 043E5D 18 F2       10168     JR CSTR_FNAME  ; And loop
xor a            ; xor a            | 043E5F 043E27 || 043E5F AF          10169  @@:   XOR A   ; Zero terminate the target string
ld (de),a        ; ld (de),a        | 043E60 043E28 || 043E60 12          10170     LD (DE), A
inc de           ; inc de           | 043E61 043E29 || 043E61 13          10171     INC DE   ; And point to next free address
ret              ; ret              | 043E62 043E2A || 043E62 C9          10172     RET
ld a,(hl)        ; ld a,(hl)        | 043E63 043E2B || 043E63 7E          10178  CSTR_LINE:  LD A, (HL)   ; Get source
cp $0d           ; cp $0d           | 043E64 043E2C || 043E64 FE 0D       10179     CP CR   ; Is it CR
jr z,$+$07       ; jr z,$+$07       | 043E66 043E2E || 043E66 28 05       10180     JR Z, @F
ld (de),a        ; ld (de),a        | 043E68 043E30 || 043E68 12          10181     LD (DE), A   ; No, so store
inc hl           ; inc hl           | 043E69 043E31 || 043E69 23          10182     INC HL   ; Increment
inc de           ; inc de           | 043E6A 043E32 || 043E6A 13          10183     INC DE
jr $-$08         ; jr $-$08         | 043E6B 043E33 || 043E6B 18 F6       10184     JR CSTR_LINE  ; And loop
xor a            ; xor a            | 043E6D 043E35 || 043E6D AF          10185  @@:   XOR A   ; Zero terminate the target string
ld (de),a        ; ld (de),a        | 043E6E 043E36 || 043E6E 12          10186     LD (DE), A
inc de           ; inc de           | 043E6F 043E37 || 043E6F 13          10187     INC DE   ; And point to next free address
ret              ; ret              | 043E70 043E38 || 043E70 C9          10188     RET
ld a,(hl)        ; ld a,(hl)        | 043E71 043E39 || 043E71 7E          10196  CSTR_FINDCH:  LD A, (HL)   ; Get source
cp c             ; cp c             | 043E72 043E3A || 043E72 B9          10197     CP C   ; Is it our character?
ret z            ; ret z            | 043E73 043E3B || 043E73 C8          10198     RET Z   ; Yes, so exit
or a             ; or a             | 043E74 043E3C || 043E74 B7          10199     OR A   ; Is it the end of string?
ret z            ; ret z            | 043E75 043E3D || 043E75 C8          10200     RET Z   ; Yes, so exit
inc hl           ; inc hl           | 043E76 043E3E || 043E76 23          10201     INC HL
jr $-$06         ; jr $-$06         | 043E77 043E3F || 043E77 18 F8       10202     JR CSTR_FINDCH
ld a,(hl)        ; ld a,(hl)        | 043E79 043E41 || 043E79 7E          10210  CSTR_ENDSWITH:  LD A, (HL)   ; Get the source string byte
call $043e24     ; call $043dec     | 043E7A 043E42 || 043E7A CD 24 3E 04 10211     CALL UPPERC   ; Convert to upper case
ld c,a           ; ld c,a           | 043E7E 043E46 || 043E7E 4F          10212     LD C, A
ld a,(de)        ; ld a,(de)        | 043E7F 043E47 || 043E7F 1A          10213     LD A, (DE)   ; Get the substring byte
cp c             ; cp c             | 043E80 043E48 || 043E80 B9          10214     CP C
ret nz           ; ret nz           | 043E81 043E49 || 043E81 C0          10215     RET NZ   ; Return NZ if at any point the strings don't match
or c             ; or c             | 043E82 043E4A || 043E82 B1          10216     OR C   ; Check whether both bytes are zero
ret z            ; ret z            | 043E83 043E4B || 043E83 C8          10217     RET Z   ; If so, return, as we have reached the end of both strings
inc hl           ; inc hl           | 043E84 043E4C || 043E84 23          10218     INC HL
inc de           ; inc de           | 043E85 043E4D || 043E85 13          10219     INC DE
jr $-$0d         ; jr $-$0d         | 043E86 043E4E || 043E86 18 F1       10220     JR CSTR_ENDSWITH  ; And loop
ld a,(hl)        ; ld a,(hl)        | 043E88 043E50 || 043E88 7E          10226  CSTR_CAT:  LD A, (HL)   ; Loop until we find the end of the first string
or a             ; or a             | 043E89 043E51 || 043E89 B7          10227     OR A
jr z,$+$05       ; jr z,$+$05       | 043E8A 043E52 || 043E8A 28 03       10228     JR Z, CSTR_CAT_1
inc hl           ; inc hl           | 043E8C 043E54 || 043E8C 23          10229     INC HL
jr $-$05         ; jr $-$05         | 043E8D 043E55 || 043E8D 18 F9       10230     JR CSTR_CAT
ld a,(de)        ; ld a,(de)        | 043E8F 043E57 || 043E8F 1A          10232  CSTR_CAT_1:  LD A, (DE)   ; Copy the second string onto the end of the first string
ld (hl),a        ; ld (hl),a        | 043E90 043E58 || 043E90 77          10233     LD (HL), A
or a             ; or a             | 043E91 043E59 || 043E91 B7          10234     OR A   ; Check for end of string
ret z            ; ret z            | 043E92 043E5A || 043E92 C8          10235     RET Z   ; And return
inc hl           ; inc hl           | 043E93 043E5B || 043E93 23          10236     INC HL
inc de           ; inc de           | 043E94 043E5C || 043E94 13          10237     INC DE
jr $-$06         ; jr $-$06         | 043E95 043E5D || 043E95 18 F8       10238     JR CSTR_CAT_1  ; Loop until finished      ; --- End misc.asm ---
ld e,$01         ; ld e,$01         | 043E97 043E5F || 043E97 1E 01       10335  OSLINE:   LD  E, 1   ; Default is to clear the buffer
push iy          ; push iy          | 043E99 043E61 || 043E99 FD E5       10339  OSLINE1:  PUSH IY
push hl          ; push hl          | 043E9B 043E63 || 043E9B E5          10340     PUSH HL   ; Buffer address
ld bc,$000100    ; ld bc,$000100    | 043E9C 043E64 || 043E9C 01 00 01 00 10341     LD BC, 256   ; Buffer length
ld a,$09         ; ld a,$09         | 043EA0 043E68 || 043EA0 3E 09       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 043EA2 043E6A || 043EA2 49 CF       0002M    RST.LIS 08h
pop hl           ; pop hl           | 043EA4 043E6C || 043EA4 E1          10343     POP HL   ; Pop the address
pop iy           ; pop iy           | 043EA5 043E6D || 043EA5 FD E1       10344     POP IY
push af          ; push af          | 043EA7 043E6F || 043EA7 F5          10345     PUSH AF   ; Stack the return value (key pressed)
call $043e39     ; call $043e01     | 043EA8 043E70 || 043EA8 CD 39 3E 04 10346     CALL NULLTOCR  ; Turn the 0 character to a CR
call $04397f     ; call $043947     | 043EAC 043E74 || 043EAC CD 7F 39 04 10347     CALL CRLF   ; Display CRLF
pop af           ; pop af           | 043EB0 043E78 || 043EB0 F1          10348     POP AF
cp $1b           ; cp $1b           | 043EB1 043E79 || 043EB1 FE 1B       10349     CP 1Bh    ; Check if ESC terminated the input
jp z,$043faf     ; jp z,$043f77     | 043EB3 043E7B || 043EB3 CA AF 3F 04 10350     JP Z, LTRAP1   ; Yes, so do the ESC thing
ld a,($044d42)   ; ld a,($044d42)   | 043EB7 043E7F || 043EB7 3A 42 4D 04 10351     LD A, (FLAGS)  ; Otherwise
res 7,a          ; res 7,a          | 043EBB 043E83 || 043EBB CB BF       10352     RES 7, A    ; Clear the escape flag
ld ($044d42),a   ; ld ($044d42),a   | 043EBD 043E85 || 043EBD 32 42 4D 04 10353     LD (FLAGS), A
call $044186     ; call $04413d     | 043EC1 043E89 || 043EC1 CD 86 41 04 10354     CALL WAIT_VBLANK   ; Wait a frame
xor a            ; xor a            | 043EC5 043E8D || 043EC5 AF          10355      XOR A   ; Return A = 0
ld ($044d47),a   ; ld ($044d47),a   | 043EC6 043E8E || 043EC6 32 47 4D 04 10356     LD (KEYDOWN), A
ld ($044d48),a   ; ld ($044d48),a   | 043ECA 043E92 || 043ECA 32 48 4D 04 10357     LD (KEYASCII), A
ret              ; ret              | 043ECE 043E96 || 043ECE C9          10358     RET
push ix          ; push ix          | 043ECF 043E97 || 043ECF DD E5       10362  PUTIME:   PUSH  IX
ld a,$08         ; ld a,$08         | 043ED1 043E99 || 043ED1 3E 08       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 043ED3 043E9B || 043ED3 49 CF       0002M    RST.LIS 08h
ld (ix),l        ; ld (ix),l        | 043ED5 043E9D || 043ED5 DD 75 00    10364     LD (IX + sysvar_time + 0), L
ld (ix+$01),h    ; ld (ix+$01),h    | 043ED8 043EA0 || 043ED8 DD 74 01    10365     LD (IX + sysvar_time + 1), H
ld (ix+$02),e    ; ld (ix+$02),e    | 043EDB 043EA3 || 043EDB DD 73 02    10366     LD (IX + sysvar_time + 2), E
ld (ix+$03),d    ; ld (ix+$03),d    | 043EDE 043EA6 || 043EDE DD 72 03    10367     LD (IX + sysvar_time + 3), D
pop ix           ; pop ix           | 043EE1 043EA9 || 043EE1 DD E1       10368     POP IX
ret              ; ret              | 043EE3 043EAB || 043EE3 C9          10369     RET
push ix          ; push ix          | 043EE4 043EAC || 043EE4 DD E5       10373  GETIME:   PUSH  IX
ld a,$08         ; ld a,$08         | 043EE6 043EAE || 043EE6 3E 08       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 043EE8 043EB0 || 043EE8 49 CF       0002M    RST.LIS 08h
ld l,(ix)        ; ld l,(ix)        | 043EEA 043EB2 || 043EEA DD 6E 00    10375     LD L, (IX + sysvar_time + 0)
ld h,(ix+$01)    ; ld h,(ix+$01)    | 043EED 043EB5 || 043EED DD 66 01    10376     LD H, (IX + sysvar_time + 1)
ld e,(ix+$02)    ; ld e,(ix+$02)    | 043EF0 043EB8 || 043EF0 DD 5E 02    10377     LD E, (IX + sysvar_time + 2)
ld d,(ix+$03)    ; ld d,(ix+$03)    | 043EF3 043EBB || 043EF3 DD 56 03    10378     LD D, (IX + sysvar_time + 3)
pop ix           ; pop ix           | 043EF6 043EBE || 043EF6 DD E1       10379     POP IX
ret              ; ret              | 043EF8 043EC0 || 043EF8 C9          10380     RET
ld a,$1f         ; ld a,$1f         | 043EF9 043EC1 || 043EF9 3E 1F       10384  PUTCSR:   LD A, 1Fh   ; TAB
rst.lil $10      ; rst.lil $10      | 043EFB 043EC3 || 043EFB 5B D7       10385     RST.LIL 10h
ld a,e           ; ld a,e           | 043EFD 043EC5 || 043EFD 7B          10386     LD A, E   ; X
rst.lil $10      ; rst.lil $10      | 043EFE 043EC6 || 043EFE 5B D7       10387     RST.LIL 10h
ld a,l           ; ld a,l           | 043F00 043EC8 || 043F00 7D          10388     LD A, L   ; Y
rst.lil $10      ; rst.lil $10      | 043F01 043EC9 || 043F01 5B D7       10389     RST.LIL 10h
ret              ; ret              | 043F03 043ECB || 043F03 C9          10390     RET
push ix          ; push ix          | 043F04 043ECC || 043F04 DD E5       10394  GETCSR:   PUSH IX   ; Get the system vars in IX
ld a,$08         ; ld a,$08         | 043F06 043ECE || 043F06 3E 08       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 043F08 043ED0 || 043F08 49 CF       0002M    RST.LIS 08h
res 0,(ix+$04)   ; res 0,(ix+$04)   | 043F0A 043ED2 || 043F0A DD CB 04 86 10396     RES 0, (IX+sysvar_vpd_pflags)
ld a,$17         ; ld a,$17         | 043F0E 043ED6 || 043F0E 3E 17       0001M   LD A, val
call $043f38     ; call $043f00     | 043F10 043ED8 || 043F10 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 043F14 043EDC || 043F14 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 043F16 043EDE || 043F16 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$82         ; ld a,$82         | 043F1A 043EE2 || 043F1A 3E 82       0001M   LD A, val
call $043f38     ; call $043f00     | 043F1C 043EE4 || 043F1C CD 38 3F 04 0002M   CALL OSWRCH
bit 0,(ix+$04)   ; bit 0,(ix+$04)   | 043F20 043EE8 || 043F20 DD CB 04 46 10400  @@:   BIT 0, (IX+sysvar_vpd_pflags)
jr z,$-$04       ; jr z,$-$04       | 043F24 043EEC || 043F24 28 FA       10401     JR Z, @B   ; Wait for the result
ld d,$00         ; ld d,$00         | 043F26 043EEE || 043F26 16 00       10402     LD  D, 0
ld h,d           ; ld h,d           | 043F28 043EF0 || 043F28 62          10403     LD H, D
ld e,(ix+$07)    ; ld e,(ix+$07)    | 043F29 043EF1 || 043F29 DD 5E 07    10404     LD E, (IX + sysvar_cursorX)
ld l,(ix+$08)    ; ld l,(ix+$08)    | 043F2C 043EF4 || 043F2C DD 6E 08    10405     LD L, (IX + sysvar_cursorY)
pop ix           ; pop ix           | 043F2F 043EF7 || 043F2F DD E1       10406     POP IX
ret              ; ret              | 043F31 043EF9 || 043F31 C9          10407     RET
ld a,$3e         ; ld a,$3e         | 043F32 043EFA || 043F32 3E 3E       10411  PROMPT:   LD A,'>'
jp $043f38       ; jp $043f00       | 043F34 043EFC || 043F34 C3 38 3F 04 10412     JP OSWRCH
push hl          ; push hl          | 043F38 043F00 || 043F38 E5          10417  OSWRCH:   PUSH HL
ld hl,$044d40    ; ld hl,$044d40    | 043F39 043F01 || 043F39 21 40 4D 04 10418     LD HL, LISTON  ; Fetch the LISTON variable
bit 3,(hl)       ; bit 3,(hl)       | 043F3D 043F05 || 043F3D CB 5E       10419     BIT 3, (HL)   ; Check whether we are in *EDIT mode
jr nz,$+$0d      ; jr nz,$+$0d      | 043F3F 043F07 || 043F3F 20 0B       10420     JR NZ, OSWRCH_BUFFER ; Yes, so just output to buffer
ld hl,($044d45)  ; ld hl,($044d45)  | 043F41 043F09 || 043F41 2A 45 4D 04 10422     LD HL, (OSWRCHCH)  ; L: Channel #
dec l            ; dec l            | 043F45 043F0D || 043F45 2D          10423     DEC L   ; If it is 1
jr z,$+$12       ; jr z,$+$12       | 043F46 043F0E || 043F46 28 10       10424     JR Z, OSWRCH_FILE  ; Then we are outputting to a file
pop hl           ; pop hl           | 043F48 043F10 || 043F48 E1          10426     POP HL   ; Otherwise
rst.lil $10      ; rst.lil $10      | 043F49 043F11 || 043F49 5B D7       10427     RST.LIL 10h   ; Output the character to MOS
ret              ; ret              | 043F4B 043F13 || 043F4B C9          10428     RET
ld hl,($044d43)  ; ld hl,($044d43)  | 043F4C 043F14 || 043F4C 2A 43 4D 04 10430  OSWRCH_BUFFER:  LD HL, (OSWRCHPT)  ; Fetch the pointer buffer
ld (hl),a        ; ld (hl),a        | 043F50 043F18 || 043F50 77          10431     LD (HL), A   ; Echo the character into the buffer
inc hl           ; inc hl           | 043F51 043F19 || 043F51 23          10432     INC HL   ; Increment pointer
ld ($044d43),hl  ; ld ($044d43),hl  | 043F52 043F1A || 043F52 22 43 4D 04 10433     LD (OSWRCHPT), HL  ; Write pointer back
pop hl           ; pop hl           | 043F56 043F1E || 043F56 E1          10434     POP HL
ret              ; ret              | 043F57 043F1F || 043F57 C9          10435     RET
push de          ; push de          | 043F58 043F20 || 043F58 D5          10437  OSWRCH_FILE:  PUSH DE
ld e,h           ; ld e,h           | 043F59 043F21 || 043F59 5C          10438     LD E, H   ; Filehandle to E
call $044384     ; call $04433b     | 043F5A 043F22 || 043F5A CD 84 43 04 10439     CALL OSBPUT   ; Write the byte out
pop de           ; pop de           | 043F5E 043F26 || 043F5E D1          10440     POP DE
pop hl           ; pop hl           | 043F5F 043F27 || 043F5F E1          10441     POP HL
ret              ; ret              | 043F60 043F28 || 043F60 C9          10442     RET
ld a,$00         ; ld a,$00         | 043F61 043F29 || 043F61 3E 00       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 043F63 043F2B || 043F63 49 CF       0002M    RST.LIS 08h
cp $1b           ; cp $1b           | 043F65 043F2D || 043F65 FE 1B       10448     CP 1Bh
jr z,$+$48       ; jr z,$+$48       | 043F67 043F2F || 043F67 28 46       10449     JR Z, LTRAP1
ret              ; ret              | 043F69 043F31 || 043F69 C9          10450     RET
call $043f9b     ; call $043f63     | 043F6A 043F32 || 043F6A CD 9B 3F 04 10460  OSKEY:   CALL READKEY   ; Read the keyboard
jr z,$+$0c       ; jr z,$+$0c       | 043F6E 043F36 || 043F6E 28 0A       10461     JR Z, @F    ; Skip if we have a key
ld a,h           ; ld a,h           | 043F70 043F38 || 043F70 7C          10462     LD A, H    ; Check loop counter
or l             ; or l             | 043F71 043F39 || 043F71 B5          10463     OR  L
ret z            ; ret z            | 043F72 043F3A || 043F72 C8          10464     RET  Z    ; Return, we've not got a key at this point
call $044186     ; call $04413d     | 043F73 043F3B || 043F73 CD 86 41 04 10465     CALL WAIT_VBLANK   ; Wait a frame
dec hl           ; dec hl           | 043F77 043F3F || 043F77 2B          10466     DEC  HL   ; Decrement
jr $-$0e         ; jr $-$0e         | 043F78 043F40 || 043F78 18 F0       10467     JR OSKEY    ; And loop
ld hl,$044d47    ; ld hl,$044d47    | 043F7A 043F42 || 043F7A 21 47 4D 04 10469  @@:   LD HL, KEYDOWN  ; We have a key, so
ld (hl),$00      ; ld (hl),$00      | 043F7E 043F46 || 043F7E 36 00       10470     LD (HL), 0   ; clear the keydown flag
cp $1b           ; cp $1b           | 043F80 043F48 || 043F80 FE 1B       10471     CP 1BH   ; If we are not pressing ESC,
scf              ; scf              | 043F82 043F4A || 043F82 37          10472     SCF     ; then flag we've got a character
ret nz           ; ret nz           | 043F83 043F4B || 043F83 C0          10473     RET NZ
push hl          ; push hl          | 043F84 043F4C || 043F84 E5          10478  ESCSET:   PUSH    HL
ld hl,$044d42    ; ld hl,$044d42    | 043F85 043F4D || 043F85 21 42 4D 04 10479            LD      HL,FLAGS  ; Pointer to FLAGS
bit 6,(hl)       ; bit 6,(hl)       | 043F89 043F51 || 043F89 CB 76       10480            BIT     6,(HL)   ; If bit 6 is set, then
jr nz,$+$04      ; jr nz,$+$04      | 043F8B 043F53 || 043F8B 20 02       10481            JR      NZ,ESCDIS  ; escape is disabled, so skip
set 7,(hl)       ; set 7,(hl)       | 043F8D 043F55 || 043F8D CB FE       10482            SET     7,(HL)   ; Set bit 7, the escape flag
pop hl           ; pop hl           | 043F8F 043F57 || 043F8F E1          10483  ESCDIS:   POP     HL
ret              ; ret              | 043F90 043F58 || 043F90 C9          10484            RET
call $043f9b     ; call $043f63     | 043F91 043F59 || 043F91 CD 9B 3F 04 10489  ESCTEST:  CALL READKEY   ; Read the keyboard
ret nz           ; ret nz           | 043F95 043F5D || 043F95 C0          10490     RET NZ   ; Skip if no key is pressed
cp $1b           ; cp $1b           | 043F96 043F5E || 043F96 FE 1B       10491     CP 1BH   ; If ESC pressed then
jr z,$-$14       ; jr z,$-$14       | 043F98 043F60 || 043F98 28 EA       10492     JR Z,ESCSET  ; jump to the escape set routine
ret              ; ret              | 043F9A 043F62 || 043F9A C9          10493     RET
ld a,($044d47)   ; ld a,($044d47)   | 043F9B 043F63 || 043F9B 3A 47 4D 04 10500  READKEY:  LD A, (KEYDOWN)  ; Get key down
dec a            ; dec a            | 043F9F 043F67 || 043F9F 3D          10501     DEC A    ; Set Z flag if keydown is 1
ld a,($044d48)   ; ld a,($044d48)   | 043FA0 043F68 || 043FA0 3A 48 4D 04 10502     LD A, (KEYASCII)  ; Get key ASCII value
ret              ; ret              | 043FA4 043F6C || 043FA4 C9          10503     RET
call $043f91     ; call $043f59     | 043FA5 043F6D || 043FA5 CD 91 3F 04 10508  TRAP:   CALL ESCTEST   ; Read keyboard, test for ESC, set FLAGS
ld a,($044d42)   ; ld a,($044d42)   | 043FA9 043F71 || 043FA9 3A 42 4D 04 10510  LTRAP:   LD A,(FLAGS)  ; Get FLAGS
or a             ; or a             | 043FAD 043F75 || 043FAD B7          10511     OR A   ; This checks for bit 7; if it is not set then the result will
ret p            ; ret p            | 043FAE 043F76 || 043FAE F0          10512     RET P   ; be positive (bit 7 is the sign bit in Z80), so return
ld hl,$044d42    ; ld hl,$044d42    | 043FAF 043F77 || 043FAF 21 42 4D 04 10513  LTRAP1:   LD HL,FLAGS   ; Escape is pressed at this point, so
res 7,(hl)       ; res 7,(hl)       | 043FB3 043F7B || 043FB3 CB BE       10514     RES 7,(HL)   ; Clear the escape pressed flag and
jp $040ca3       ; jp $040c9b       | 043FB5 043F7D || 043FB5 C3 A3 0C 04 10515     JP ESCAPE   ; Jump to the ESCAPE error routine in exec.asm
call $04491e     ; call $0448e0     | 043FB9 043F81 || 043FB9 CD 1E 49 04 10525  OSINIT:   CALL VBLANK_INIT
xor a            ; xor a            | 043FBD 043F85 || 043FBD AF          10526     XOR A
ld hl,$044e00    ; ld hl,$044e00    | 043FBE 043F86 || 043FBE 21 00 4E 04 10527     LD  HL, USER
ld de,$0b0000    ; ld de,$0b0000    | 043FC2 043F8A || 043FC2 11 00 00 0B 10528     LD DE, RAM_Top
ld e,a           ; ld e,a           | 043FC6 043F8E || 043FC6 5F          10529     LD E, A   ; Page boundary
ret              ; ret              | 043FC7 043F8F || 043FC7 C9          10530     RET
call $04403c     ; call $044004     | 043FC8 043F90 || 043FC8 CD 3C 40 04 10535  OSCLI:    CALL    SKIPSP
cp $0d           ; cp $0d           | 043FCC 043F94 || 043FCC FE 0D       10536     CP      CR
ret z            ; ret z            | 043FCE 043F96 || 043FCE C8          10537     RET     Z
cp $7c           ; cp $7c           | 043FCF 043F97 || 043FCF FE 7C       10538     CP      '|'
ret z            ; ret z            | 043FD1 043F99 || 043FD1 C8          10539     RET     Z
ex de,hl         ; ex de,hl         | 043FD2 043F9A || 043FD2 EB          10540     EX      DE,HL
ld hl,$04404b    ; ld hl,$044013    | 043FD3 043F9B || 043FD3 21 4B 40 04 10541     LD      HL,COMDS
ld a,(de)        ; ld a,(de)        | 043FD7 043F9F || 043FD7 1A          10542  OSCLI0:   LD      A,(DE)
call $044043     ; call $04400b     | 043FD8 043FA0 || 043FD8 CD 43 40 04 10543     CALL    UPPRC
cp (hl)          ; cp (hl)          | 043FDC 043FA4 || 043FDC BE          10544     CP      (HL)
jr z,$+$0d       ; jr z,$+$0d       | 043FDD 043FA5 || 043FDD 28 0B       10545     JR      Z,OSCLI2
jr c,$+$32       ; jr c,$+$32       | 043FDF 043FA7 || 043FDF 38 30       10546     JR      C,OSCLI6
bit 7,(hl)       ; bit 7,(hl)       | 043FE1 043FA9 || 043FE1 CB 7E       10547  OSCLI1:   BIT     7,(HL)
inc hl           ; inc hl           | 043FE3 043FAB || 043FE3 23          10548     INC     HL
jr z,$-$03       ; jr z,$-$03       | 043FE4 043FAC || 043FE4 28 FB       10549     JR      Z,OSCLI1
inc hl           ; inc hl           | 043FE6 043FAE || 043FE6 23          10550     INC     HL
inc hl           ; inc hl           | 043FE7 043FAF || 043FE7 23          10551     INC     HL
jr $-$11         ; jr $-$11         | 043FE8 043FB0 || 043FE8 18 ED       10552     JR      OSCLI0
push de          ; push de          | 043FEA 043FB2 || 043FEA D5          10554  OSCLI2:   PUSH    DE
inc de           ; inc de           | 043FEB 043FB3 || 043FEB 13          10555  OSCLI3:   INC     DE
inc hl           ; inc hl           | 043FEC 043FB4 || 043FEC 23          10556     INC     HL
ld a,(de)        ; ld a,(de)        | 043FED 043FB5 || 043FED 1A          10557     LD      A,(DE)
call $044043     ; call $04400b     | 043FEE 043FB6 || 043FEE CD 43 40 04 10558     CALL    UPPRC
cp $2e           ; cp $2e           | 043FF2 043FBA || 043FF2 FE 2E       10559     CP      '.'   ; ABBREVIATED?
jr z,$+$0c       ; jr z,$+$0c       | 043FF4 043FBC || 043FF4 28 0A       10560     JR      Z,OSCLI4
xor (hl)         ; xor (hl)         | 043FF6 043FBE || 043FF6 AE          10561     XOR     (HL)
jr z,$-$0c       ; jr z,$-$0c       | 043FF7 043FBF || 043FF7 28 F2       10562     JR      Z,OSCLI3
cp $80           ; cp $80           | 043FF9 043FC1 || 043FF9 FE 80       10563     CP      80H
jr z,$+$05       ; jr z,$+$05       | 043FFB 043FC3 || 043FFB 28 03       10564     JR      Z,OSCLI4
pop de           ; pop de           | 043FFD 043FC5 || 043FFD D1          10565     POP     DE
jr $-$1d         ; jr $-$1d         | 043FFE 043FC6 || 043FFE 18 E1       10566     JR      OSCLI1
pop af           ; pop af           | 044000 043FC8 || 044000 F1          10568  OSCLI4:   POP     AF
inc de           ; inc de           | 044001 043FC9 || 044001 13          10569            INC     DE
bit 7,(hl)       ; bit 7,(hl)       | 044002 043FCA || 044002 CB 7E       10570  OSCLI5:   BIT     7,(HL)
inc hl           ; inc hl           | 044004 043FCC || 044004 23          10571     INC     HL
jr z,$-$03       ; jr z,$-$03       | 044005 043FCD || 044005 28 FB       10572     JR      Z,OSCLI5
ld a,(hl)        ; ld a,(hl)        | 044007 043FCF || 044007 7E          10573     LD      A,(HL)
inc hl           ; inc hl           | 044008 043FD0 || 044008 23          10574     INC     HL
ld h,(hl)        ; ld h,(hl)        | 044009 043FD1 || 044009 66          10575     LD      H,(HL)
ld l,a           ; ld l,a           | 04400A 043FD2 || 04400A 6F          10576     LD      L,A
push hl          ; push hl          | 04400B 043FD3 || 04400B E5          10577     PUSH    HL
ex de,hl         ; ex de,hl         | 04400C 043FD4 || 04400C EB          10578     EX      DE,HL
jp $04403c       ; jp $044004       | 04400D 043FD5 || 04400D C3 3C 40 04 10579     JP      SKIPSP
ex de,hl         ; ex de,hl         | 044011 043FD9 || 044011 EB          10581  OSCLI6:   EX DE, HL   ; HL: Buffer for command
ld de,$044a00    ; ld de,$044a00    | 044012 043FDA || 044012 11 00 4A 04 10582     LD DE, ACCS  ; Buffer for command string is ACCS (the string accumulator)
push de          ; push de          | 044016 043FDE || 044016 D5          10583     PUSH DE   ; Store buffer address
call $043e63     ; call $043e2b     | 044017 043FDF || 044017 CD 63 3E 04 10584     CALL CSTR_LINE  ; Fetch the line
pop hl           ; pop hl           | 04401B 043FE3 || 04401B E1          10585     POP HL   ; HL: Pointer to command string in ACCS
push iy          ; push iy          | 04401C 043FE4 || 04401C FD E5       10586     PUSH IY
ld a,$10         ; ld a,$10         | 04401E 043FE6 || 04401E 3E 10       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 044020 043FE8 || 044020 49 CF       0002M    RST.LIS 08h
pop iy           ; pop iy           | 044022 043FEA || 044022 FD E1       10588     POP IY
or a             ; or a             | 044024 043FEC || 044024 B7          10589     OR A   ; 0 means MOS returned OK
ret z            ; ret z            | 044025 043FED || 044025 C8          10590     RET Z   ; So don't do anything
jp $044260       ; jp $044217       | 044026 043FEE || 044026 C3 60 42 04 10591     JP  OSERROR   ; Otherwise it's a MOS error
ld a,$fe         ; ld a,$fe         | 04402A 043FF2 || 04402A 3E FE       10593  HUH:      LD      A,254   ; Bad command error
call $0437af     ; call $043777     | 04402C 043FF4 || 04402C CD AF 37 04 10594            CALL    EXTERR
ld b,d           ; ld b,d           | 044030 043FF8 || 044030 42 61 64 20 10595            DB     "Bad command"
ld h,c           ;                  | 044031        || ld h,c                         ; 043FF9
ld h,h           ;                  | 044032        || ld h,h                         ; 043FFA
jr nz,$+$65      ;                  | 044033        || jr nz,$+$65                    ; 043FFB
ld l,a           ;                  | 044035        || ld l,a                         ; 043FFD
ld l,l           ;                  | 044036        || ld l,l                         ; 043FFE
ld l,l           ;                  | 044037        || ld l,l                         ; 043FFF
ld h,c           ;                  | 044038        || ld h,c                         ; 044000
ld l,(hl)        ;                  | 044039        || ld l,(hl)                      ; 044001
ld h,h           ;                  | 04403A        || ld h,h                         ; 044002
nop              ; nop              | 04403B 044003 || 04403B 00          10596            DEFB    0
ld a,(hl)        ; ld a,(hl)        | 04403C 044004 || 04403C 7E          10598  SKIPSP:   LD      A,(HL)
cp $20           ; cp $20           | 04403D 044005 || 04403D FE 20       10599            CP      ' '
ret nz           ;                  | 04403F        || 04403F C0          10600            RET     NZ
inc hl           ;                  | 044040        || 044040 23          10601            INC     HL
jr $-$05         ;                  | 044041        || 044041 18 F9       10602            JR      SKIPSP
and $7f          ;                  | 044043        || 044043 E6 7F       10604  UPPRC:    AND     7FH
cp $60           ;                  | 044045        || 044045 FE 60       10605     CP      '`'
ret c            ;                  | 044047        || 044047 D8          10606     RET     C
and $5f          ;                  | 044048        || 044048 E6 5F       10607     AND     5FH   ; CONVERT TO UPPER CASE
ret              ;                  | 04404A        || 04404A C9          10608     RET
ld b,c           ;                  | 04404B        || 04404B 41 53 4D    10613  COMDS:    DB "AS","M"+80h  ; ASM
ld d,e           ;                  | 04404C        || 
ld c,l           ;                  | 04404D        || 
ld l,c           ;                  | 04404E        || 04404E 69 40       10614     DW STAR_ASM
ld.sis b,d       ;                  | 04404F        || 
ld e,c           ;                  | 044051        || 
ld b,l           ;                  | 044052        || 
ld (hl),l        ;                  | 044053        || 044053 75 40       10616     DW STAR_BYE
ld.sis b,l       ;                  | 044054        || 
ld b,h           ;                  | 044056        || 
ld.lis d,h       ;                  | 044057        || 
xor d            ;                  | 044059        || 044059 AA 40       10618     DW STAR_EDIT
ld.sis b,(hl)    ;                  | 04405A        || 
ld e,b           ;                  | 04405C        || 
jp pe,$455640    ;                  | 04405D        || 04405D EA 40       10620     DW STAR_FX
ld.sil d,e       ;                  | 044061        || 
ld.lis c,a       ;                  | 044063        || 
ld c,(hl)        ;                  | 044065        || 
add a,c          ;                  | 044066        || 044066 81 40       10622     DW STAR_VERSION
rst.sis $38      ;                  | 044067        || 
push iy          ;                  | 044069        || 044069 FD E5       10627  STAR_ASM:  PUSH IY   ; Stack the BASIC pointer
push hl          ;                  | 04406B        || 04406B E5          10628     PUSH HL   ; HL = IY
pop iy           ;                  | 04406C        || 04406C FD E1       10629     POP IY
call $0418cd     ;                  | 04406E        || 04406E CD CD 18 04 10630     CALL ASSEM   ; Invoke the assembler
pop iy           ;                  | 044072        || 044072 FD E1       10631     POP IY
ret              ;                  | 044074        || 044074 C9          10632     RET
call $044932     ; call $0448f4     | 044075 04402C || 044075 CD 32 49 04 10636  STAR_BYE:  CALL VBLANK_STOP  ; Restore MOS interrupts
ld hl,$000000    ; ld hl,$000000    | 044079 044030 || 044079 21 00 00 00 10637     LD HL, 0   ; The return value
jp $040068       ; jp $040068       | 04407D 044034 || 04407D C3 68 00 04 10638     JP _end    ; Jump back to the end routine in init.asm
call $043dc8     ; call $043d90     | 044081 044038 || 044081 CD C8 3D 04 10642  STAR_VERSION:  CALL    TELL   ; Output the welcome message
ld b,d           ; ld b,d           | 044085 04403C || 044085 42 42 43 20 10643     DB     "BBC BASIC (Agon ADL) Version 1.03\n\r",0
ld b,d           ;                  | 044086        || ld b,d                         ; 04403D
ld b,e           ;                  | 044087        || ld b,e                         ; 04403E
jr nz,$+$44      ;                  | 044088        || jr nz,$+$44                    ; 04403F
ld b,c           ;                  | 04408A        || ld b,c                         ; 044041
ld d,e           ;                  | 04408B        || ld d,e                         ; 044042
ld.lis b,e       ;                  | 04408C        || ld.lis b,e                     ; 044043
jr nz,$+$2a      ;                  | 04408E        || jr nz,$+$2a                    ; 044045
ld b,c           ;                  | 044090        || ld b,c                         ; 044047
ld h,a           ;                  | 044091        || ld h,a                         ; 044048
ld l,a           ;                  | 044092        || ld l,a                         ; 044049
ld l,(hl)        ;                  | 044093        || ld l,(hl)                      ; 04404A
jr nz,$+$43      ;                  | 044094        || jr nz,$+$43                    ; 04404B
ld b,h           ;                  | 044096        || ld b,h                         ; 04404D
ld c,h           ;                  | 044097        || ld c,h                         ; 04404E
add hl,hl        ;                  | 044098        || add hl,hl                      ; 04404F
jr nz,$+$58      ;                  | 044099        || jr nz,$+$58                    ; 044050
ld h,l           ;                  | 04409B        || ld h,l                         ; 044052
ld (hl),d        ;                  | 04409C        || ld (hl),d                      ; 044053
ld (hl),e        ;                  | 04409D        || ld (hl),e                      ; 044054
ld l,c           ;                  | 04409E        || ld l,c                         ; 044055
ld l,a           ;                  | 04409F        || ld l,a                         ; 044056
ld l,(hl)        ;                  | 0440A0        || ld l,(hl)                      ; 044057
jr nz,$+$33      ;                  | 0440A1        || jr nz,$+$33                    ; 044058
ld l,$30         ;                  | 0440A3        || ld l,$30                       ; 04405A
inc sp           ;                  | 0440A5        || inc sp                         ; 04405C
ld a,(bc)        ;                  | 0440A6        || ld a,(bc)                      ; 04405D
dec c            ;                  | 0440A7        || dec c                          ; 04405E
nop              ;                  | 0440A8        || nop                            ; 04405F
ret              ; ret              | 0440A9 044060 || 0440A9 C9          10644     RET
call $043dcf     ; call $043d97     | 0440AA 044061 || 0440AA CD CF 3D 04 10648  STAR_EDIT:  CALL ASC_TO_NUMBER  ; DE: Line number to edit
ex de,hl         ; ex de,hl         | 0440AE 044065 || 0440AE EB          10649     EX DE, HL   ; HL: Line number
call $0439c7     ; call $04398f     | 0440AF 044066 || 0440AF CD C7 39 04 10650     CALL FINDL   ; HL: Address in RAM of tokenised line
ld a,$29         ; ld a,$29         | 0440B3 04406A || 0440B3 3E 29       10651     LD A, 41   ; F:NZ If the line is not found
jp nz,$043798    ; jp nz,$043760    | 0440B5 04406C || 0440B5 C2 98 37 04 10652     JP NZ, ERROR_  ; Do error 41: No such line in that case
inc hl           ; inc hl           | 0440B9 044070 || 0440B9 23          10656     INC HL   ; Skip the length byte
ld e,(hl)        ; ld e,(hl)        | 0440BA 044071 || 0440BA 5E          10657     LD E, (HL)   ; Fetch the line number
inc hl           ; inc hl           | 0440BB 044072 || 0440BB 23          10658     INC HL
ld d,(hl)        ; ld d,(hl)        | 0440BC 044073 || 0440BC 56          10659     LD D, (HL)
inc hl           ; inc hl           | 0440BD 044074 || 0440BD 23          10660     INC HL
ld ix,$044a00    ; ld ix,$044a00    | 0440BE 044075 || 0440BE DD 21 00 4A 10661     LD IX, ACCS  ; Pointer to where the copy is to be stored
ld ($044d43),ix  ; ld ($044d43),ix  | 0440C3 04407A || 0440C3 DD 22 43 4D 10662     LD (OSWRCHPT), IX
ld ix,$044d40    ; ld ix,$044d40    | 0440C8 04407F || 0440C8 DD 21 40 4D 10663     LD IX, LISTON  ; Pointer to LISTON variable in RAM
ld a,(ix)        ; ld a,(ix)        | 0440CD 044084 || 0440CD DD 7E 00    10664     LD A, (IX)   ; Store that variable
push af          ; push af          | 0440D0 044087 || 0440D0 F5          10665     PUSH AF
ld (ix),$09      ; ld (ix),$09      | 0440D1 044088 || 0440D1 DD 36 00 09 10666     LD (IX), 09h  ; Set to echo to buffer
call $0438ca     ; call $043892     | 0440D5 04408C || 0440D5 CD CA 38 04 10667     CALL LISTIT
pop af           ; pop af           | 0440D9 044090 || 0440D9 F1          10668     POP AF
ld (ix),a        ; ld (ix),a        | 0440DA 044091 || 0440DA DD 77 00    10669     LD (IX), A   ; Restore the original LISTON variable
ld hl,$044a00    ; ld hl,$044a00    | 0440DD 044094 || 0440DD 21 00 4A 04 10670     LD HL, ACCS  ; HL: ACCS
ld e,l           ; ld e,l           | 0440E1 044098 || 0440E1 5D          10671     LD E, L   ;  E: 0 - Don't clear the buffer; ACCS is on a page boundary so L is 0
call $043e99     ; call $043e61     | 0440E2 044099 || 0440E2 CD 99 3E 04 10672     CALL OSLINE1   ; Invoke the editor
jp $043108       ; jp $0430d0       | 0440E6 04409D || 0440E6 C3 08 31 04 10673     JP ONEDIT   ; Jump back to the BASIC loop just after the normal line edit
call $043dcf     ; call $043d97     | 0440EA 0440A1 || 0440EA CD CF 3D 04 10677  STAR_FX:  CALL ASC_TO_NUMBER
ld c,e           ; ld c,e           | 0440EE 0440A5 || 0440EE 4B          10678     LD C, E   ; C: Save FX #
call $043dcf     ; call $043d97     | 0440EF 0440A6 || 0440EF CD CF 3D 04 10679     CALL ASC_TO_NUMBER
ld a,d           ; ld a,d           | 0440F3 0440AA || 0440F3 7A          10680     LD A, D     ; Is first parameter > 255?
or a             ; or a             | 0440F4 0440AB || 0440F4 B7          10681     OR  A
jr z,$+$05       ; jr z,$+$05       | 0440F5 0440AC || 0440F5 28 03       10682     JR Z, STAR_FX1  ; Yes, so skip next bit
ex de,hl         ; ex de,hl         | 0440F7 0440AE || 0440F7 EB          10683     EX DE, HL    ; Parameter is 16-bit
jr $+$09         ; jr $+$09         | 0440F8 0440AF || 0440F8 18 07       10684     JR STAR_FX2
ld b,e           ; ld b,e           | 0440FA 0440B1 || 0440FA 43          10686  STAR_FX1:  LD B, E    ; B: Save First parameter
call $043dcf     ; call $043d97     | 0440FB 0440B2 || 0440FB CD CF 3D 04 10687     CALL ASC_TO_NUMBER  ; Fetch second parameter
ld l,b           ; ld l,b           | 0440FF 0440B6 || 0440FF 68          10688     LD L, B    ; L: First parameter
ld h,e           ; ld h,e           | 044100 0440B7 || 044100 63          10689     LD H, E    ; H: Second parameter
ld a,c           ; ld a,c           | 044101 0440B8 || 044101 79          10691  STAR_FX2:  LD A, C    ; A: FX #, and fall through to OSBYTE
cp $0b           ; cp $0b           | 044102 0440B9 || 044102 FE 0B       10698  OSBYTE:   CP 0BH   ; *FX 11, n: Keyboard auto-repeat delay
jr z,$+$1a       ; jr z,$+$1a       | 044104 0440BB || 044104 28 18       10699     JR Z, OSBYTE_0B
cp $0c           ; cp $0c           | 044106 0440BD || 044106 FE 0C       10700     CP 0CH   ; *FX 12, n: Keyboard auto-repeat rate
jr z,$+$45       ; jr z,$+$45       | 044108 0440BF || 044108 28 43       10701     JR Z, OSBYTE_0C
cp $13           ; cp $13           | 04410A 0440C1 || 04410A FE 13       10702     CP 13H   ; *FX 19: Wait for vblank
jr z,$+$70       ; jr z,$+$70       | 04410C 0440C3 || 04410C 28 6E       10703     JR Z, OSBYTE_13
cp $76           ; cp $76           | 04410E 0440C5 || 04410E FE 76       10704     CP 76H   ; *FX 118, n: Set keyboard LED
jp z,$044197     ; jp z,$04414e     | 044110 0440C7 || 044110 CA 97 41 04 10705     JP Z, OSBYTE_76
cp $a0           ; cp $a0           | 044114 0440CB || 044114 FE A0       10706     CP A0H
jp z,$0441c7     ; jp z,$04417e     | 044116 0440CD || 044116 CA C7 41 04 10707     JP Z, OSBYTE_A0
jp $04402a       ; jp $043ff2       | 04411A 0440D1 || 04411A C3 2A 40 04 10708     JP HUH   ; Anything else trips an error
ld a,$17         ; ld a,$17         | 04411E 0440D5 || 04411E 3E 17       0001M   LD A, val
call $043f38     ; call $043f00     | 044120 0440D7 || 044120 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 044124 0440DB || 044124 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 044126 0440DD || 044126 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$88         ; ld a,$88         | 04412A 0440E1 || 04412A 3E 88       0001M   LD A, val
call $043f38     ; call $043f00     | 04412C 0440E3 || 04412C CD 38 3F 04 0002M   CALL OSWRCH
ld a,l           ; ld a,l           | 044130 0440E7 || 044130 7D          0001M   LD A, val
call $043f38     ; call $043f00     | 044131 0440E8 || 044131 CD 38 3F 04 0002M   CALL OSWRCH
ld a,h           ; ld a,h           | 044135 0440EC || 044135 7C          0001M   LD A, val
call $043f38     ; call $043f00     | 044136 0440ED || 044136 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 04413A 0440F1 || 04413A 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 04413C 0440F3 || 04413C CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 044140 0440F7 || 044140 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 044142 0440F9 || 044142 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$ff         ; ld a,$ff         | 044146 0440FD || 044146 3E FF       0001M   LD A, val
call $043f38     ; call $043f00     | 044148 0440FF || 044148 CD 38 3F 04 0002M   CALL OSWRCH
ret              ; ret              | 04414C 044103 || 04414C C9          10722     RET
ld a,$17         ; ld a,$17         | 04414D 044104 || 04414D 3E 17       0001M   LD A, val
call $043f38     ; call $043f00     | 04414F 044106 || 04414F CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 044153 04410A || 044153 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 044155 04410C || 044155 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$88         ; ld a,$88         | 044159 044110 || 044159 3E 88       0001M   LD A, val
call $043f38     ; call $043f00     | 04415B 044112 || 04415B CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 04415F 044116 || 04415F 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 044161 044118 || 044161 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 044165 04411C || 044165 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 044167 04411E || 044167 CD 38 3F 04 0002M   CALL OSWRCH
ld a,l           ; ld a,l           | 04416B 044122 || 04416B 7D          0001M   LD A, val
call $043f38     ; call $043f00     | 04416C 044123 || 04416C CD 38 3F 04 0002M   CALL OSWRCH
ld a,h           ; ld a,h           | 044170 044127 || 044170 7C          0001M   LD A, val
call $043f38     ; call $043f00     | 044171 044128 || 044171 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$ff         ; ld a,$ff         | 044175 04412C || 044175 3E FF       0001M   LD A, val
call $043f38     ; call $043f00     | 044177 04412E || 044177 CD 38 3F 04 0002M   CALL OSWRCH
ret              ; ret              | 04417B 044132 || 04417B C9          10736     RET
call $044186     ; call $04413d     | 04417C 044133 || 04417C CD 86 41 04 10740  OSBYTE_13:  CALL WAIT_VBLANK
ld l,$00         ; ld l,$00         | 044180 044137 || 044180 2E 00       10741     LD L, 0   ; Returns 0
jp $040584       ; jp $04057f       | 044182 044139 || 044182 C3 84 05 04 10742     JP COUNT0
push ix          ; push ix          | 044186 04413D || 044186 DD E5       10744  WAIT_VBLANK:  PUSH  IX   ; Wait for VBLANK interrupt
ld a,$08         ; ld a,$08         | 044188 04413F || 044188 3E 08       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 04418A 044141 || 04418A 49 CF       0002M    RST.LIS 08h
ld a,(ix)        ; ld a,(ix)        | 04418C 044143 || 04418C DD 7E 00    10746     LD A, (IX + sysvar_time + 0)
cp (ix)          ; cp (ix)          | 04418F 044146 || 04418F DD BE 00    10747  @@:   CP  A, (IX + sysvar_time + 0)
jr z,$-$03       ; jr z,$-$03       | 044192 044149 || 044192 28 FB       10748     JR Z, @B
pop ix           ; pop ix           | 044194 04414B || 044194 DD E1       10749     POP IX
ret              ; ret              | 044196 04414D || 044196 C9          10750     RET
ld a,$17         ; ld a,$17         | 044197 04414E || 044197 3E 17       0001M   LD A, val
call $043f38     ; call $043f00     | 044199 044150 || 044199 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 04419D 044154 || 04419D 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 04419F 044156 || 04419F CD 38 3F 04 0002M   CALL OSWRCH
ld a,$88         ; ld a,$88         | 0441A3 04415A || 0441A3 3E 88       0001M   LD A, val
call $043f38     ; call $043f00     | 0441A5 04415C || 0441A5 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 0441A9 044160 || 0441A9 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 0441AB 044162 || 0441AB CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 0441AF 044166 || 0441AF 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 0441B1 044168 || 0441B1 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 0441B5 04416C || 0441B5 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 0441B7 04416E || 0441B7 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 0441BB 044172 || 0441BB 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 0441BD 044174 || 0441BD CD 38 3F 04 0002M   CALL OSWRCH
ld a,l           ; ld a,l           | 0441C1 044178 || 0441C1 7D          0001M   LD A, val
call $043f38     ; call $043f00     | 0441C2 044179 || 0441C2 CD 38 3F 04 0002M   CALL OSWRCH
ret              ; ret              | 0441C6 04417D || 0441C6 C9          10764     RET
push ix          ; push ix          | 0441C7 04417E || 0441C7 DD E5       10770  OSBYTE_A0:  PUSH IX
ld a,$08         ; ld a,$08         | 0441C9 044180 || 0441C9 3E 08       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 0441CB 044182 || 0441CB 49 CF       0002M    RST.LIS 08h
ld bc,$000000    ; ld bc,$000000    | 0441CD 044184 || 0441CD 01 00 00 00 10772     LD BC, 0
ld c,l           ; ld c,l           | 0441D1 044188 || 0441D1 4D          10773     LD C, L   ; BCU = L
add ix,bc        ; add ix,bc        | 0441D2 044189 || 0441D2 DD 09       10774     ADD IX, BC   ; Add to IX
ld l,(ix)        ; ld l,(ix)        | 0441D4 04418B || 0441D4 DD 6E 00    10775     LD L, (IX + 0)  ; Fetch the return value
pop ix           ; pop ix           | 0441D7 04418E || 0441D7 DD E1       10776     POP IX
jp $040584       ; jp $04057f       | 0441D9 044190 || 0441D9 C3 84 05 04 10777     JP  COUNT0
push bc          ; push bc          | 0441DD 044194 || 0441DD C5          10786  OSLOAD:   PUSH BC   ; Stack the size
push de          ; push de          | 0441DE 044195 || 0441DE D5          10787     PUSH DE   ; Stack the load address
ld de,$044a00    ; ld de,$044a00    | 0441DF 044196 || 0441DF 11 00 4A 04 10788     LD DE, ACCS  ; Buffer address for filename
call $043e51     ; call $043e19     | 0441E3 04419A || 0441E3 CD 51 3E 04 10789     CALL CSTR_FNAME  ; Fetch filename from MOS into buffer
ld hl,$044a00    ; ld hl,$044a00    | 0441E7 04419E || 0441E7 21 00 4A 04 10790     LD HL, ACCS  ; HL: Filename
call $0442dd     ; call $044294     | 0441EB 0441A2 || 0441EB CD DD 42 04 10791     CALL EXT_DEFAULT  ; Tack on the extension .BBC if not specified
call $0442f1     ; call $0442a8     | 0441EF 0441A6 || 0441EF CD F1 42 04 10792     CALL EXT_HANDLER  ; Get the default handler
pop de           ; pop de           | 0441F3 0441AA || 0441F3 D1          10793     POP DE   ; Restore the load address
pop bc           ; pop bc           | 0441F4 0441AB || 0441F4 C1          10794     POP BC   ; Restore the size
or a             ; or a             | 0441F5 0441AC || 0441F5 B7          10795     OR A
jr z,$+$62       ; jr z,$+$62       | 0441F6 0441AD || 0441F6 28 60       10796     JR  Z, OSLOAD_BBC
xor a            ; xor a            | 0441F8 0441AF || 0441F8 AF          10800  OSLOAD_TXT:  XOR A   ; Set file attributes to read
call $044365     ; call $04431c     | 0441F9 0441B0 || 0441F9 CD 65 43 04 10801     CALL OSOPEN   ; Open the file
ld e,a           ; ld e,a           | 0441FD 0441B4 || 0441FD 5F          10802     LD  E, A    ; The filehandle
or a             ; or a             | 0441FE 0441B5 || 0441FE B7          10803     OR A
ld a,$04         ; ld a,$04         | 0441FF 0441B6 || 0441FF 3E 04       10804     LD A, 4   ; File not found error
jr z,$+$5f       ; jr z,$+$5f       | 044201 0441B8 || 044201 28 5D       10805     JR Z, OSERROR  ; Jump to error handler
call $0438a4     ; call $04386c     | 044203 0441BA || 044203 CD A4 38 04 10806     CALL NEWIT   ; Call NEW to clear the program space
ld hl,$044a00    ; ld hl,$044a00    | 044207 0441BE || 044207 21 00 4A 04 10808  OSLOAD_TXT1:  LD HL, ACCS   ; Where the input is going to be stored
call $04437c     ; call $044333     | 04420B 0441C2 || 04420B CD 7C 43 04 10812  @@:   CALL OSBGET   ; Read the byte into A
jr c,$+$20       ; jr c,$+$20       | 04420F 0441C6 || 04420F 38 1E       10813     JR C, OSLOAD_TXT3  ; Is it EOF?
cp $0a           ; cp $0a           | 044211 0441C8 || 044211 FE 0A       10814     CP LF    ; Is it LF?
jr z,$+$1c       ; jr z,$+$1c       | 044213 0441CA || 044213 28 1A       10815     JR Z, OSLOAD_TXT3   ; Yes, so skip to the next line
cp $21           ; cp $21           | 044215 0441CC || 044215 FE 21       10816     CP 21h   ; Is it less than or equal to ASCII space?
jr c,$-$0c       ; jr c,$-$0c       | 044217 0441CE || 044217 38 F2       10817     JR C, @B    ; Yes, so keep looping
ld (hl),a        ; ld (hl),a        | 044219 0441D0 || 044219 77          10818     LD (HL), A   ; Store the first character
inc l            ; inc l            | 04421A 0441D1 || 04421A 2C          10819     INC L
call $04437c     ; call $044333     | 04421B 0441D2 || 04421B CD 7C 43 04 10823  OSLOAD_TXT2:  CALL OSBGET   ; Read the byte into A
jr c,$+$2d       ; jr c,$+$2d       | 04421F 0441D6 || 04421F 38 2B       10824     JR C, OSLOAD_TXT4  ; Is it EOF?
cp $20           ; cp $20           | 044221 0441D8 || 044221 FE 20       10825     CP 20h   ; Skip if not an ASCII character
jr c,$+$08       ; jr c,$+$08       | 044223 0441DA || 044223 38 06       10826     JR C, @F
ld (hl),a        ; ld (hl),a        | 044225 0441DC || 044225 77          10827     LD (HL), A   ; Store in the input buffer
inc l            ; inc l            | 044226 0441DD || 044226 2C          10828     INC L   ; Increment the buffer pointer
jp z,$043730     ; jp z,$0436f8     | 044227 0441DE || 044227 CA 30 37 04 10829     JP Z, BAD   ; If the buffer is full (wrapped to 0) then jump to Bad Program error
cp $0a           ; cp $0a           | 04422B 0441E2 || 04422B FE 0A       10830  @@:   CP LF   ; Check for LF
jr nz,$-$12      ; jr nz,$-$12      | 04422D 0441E4 || 04422D 20 EC       10831     JR NZ, OSLOAD_TXT2  ; If not, then loop to read the rest of the characters in
ld (hl),$0d      ; ld (hl),$0d      | 04422F 0441E6 || 04422F 36 0D       10835  OSLOAD_TXT3:  LD (HL), CR  ; Store a CR for BBC BASIC
ld a,l           ; ld a,l           | 044231 0441E8 || 044231 7D          10836     LD A, L   ; Check for minimum line length
cp $02           ; cp $02           | 044232 0441E9 || 044232 FE 02       10837     CP 2   ; If it is 2 characters or less (including CR)
jr c,$+$0c       ; jr c,$+$0c       | 044234 0441EB || 044234 38 0A       10838     JR C, @F   ; Then don't bother entering it
push de          ; push de          | 044236 0441ED || 044236 D5          10839     PUSH DE   ; Preserve the filehandle
call $043114     ; call $0430dc     | 044237 0441EE || 044237 CD 14 31 04 10840     CALL ONEDIT1   ; Enter the line in memory
call c,$043877   ; call c,$04383f   | 04423B 0441F2 || 04423B DC 77 38 04 10841     CALL C,CLEAN   ; If a new line has been entered, then call CLEAN to set TOP and write &FFFF end of program marker
pop de           ; pop de           | 04423F 0441F6 || 04423F D1          10842     POP DE
call $04438d     ; call $044344     | 044240 0441F7 || 044240 CD 8D 43 04 10843  @@:   CALL OSSTAT   ; End of file?
jr nz,$-$3d      ; jr nz,$-$3d      | 044244 0441FB || 044244 20 C1       10844     JR NZ, OSLOAD_TXT1  ; No, so loop
call $044374     ; call $04432b     | 044246 0441FD || 044246 CD 74 43 04 10845     CALL OSSHUT   ; Close the file
scf              ; scf              | 04424A 044201 || 04424A 37          10846     SCF    ; Flag to BASIC that we're good
ret              ; ret              | 04424B 044202 || 04424B C9          10847     RET
cp $20           ; cp $20           | 04424C 044203 || 04424C FE 20       10851  OSLOAD_TXT4:  CP 20h   ; Skip if not an ASCII character
jr c,$+$08       ; jr c,$+$08       | 04424E 044205 || 04424E 38 06       10852     JR C, @F
ld (hl),a        ; ld (hl),a        | 044250 044207 || 044250 77          10853     LD (HL), A   ; Store the character
inc l            ; inc l            | 044251 044208 || 044251 2C          10854     INC L
jp z,$043730     ; jp z,$0436f8     | 044252 044209 || 044252 CA 30 37 04 10855     JP Z, BAD
jr $-$27         ; jr $-$27         | 044256 04420D || 044256 18 D7       10856  @@:   JR OSLOAD_TXT3
ld a,$01         ; ld a,$01         | 044258 04420F || 044258 3E 01       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 04425A 044211 || 04425A 49 CF       0002M    RST.LIS 08h
ret nc           ; ret nc           | 04425C 044213 || 04425C D0          10862     RET NC   ; If load returns with carry reset - NO ROOM
or a             ; or a             | 04425D 044214 || 04425D B7          10863     OR A   ; If there is no error (A=0)
scf              ; scf              | 04425E 044215 || 04425E 37          10864     SCF    ; Need to set carry indicating there was room
ret z            ; ret z            | 04425F 044216 || 04425F C8          10865     RET Z   ; Return
push af          ; push af          | 044260 044217 || 044260 F5          10867  OSERROR:  PUSH AF   ; Handle the MOS error
ld hl,$044a00    ; ld hl,$044a00    | 044261 044218 || 044261 21 00 4A 04 10868     LD HL, ACCS  ; Address of the buffer
ld bc,$000100    ; ld bc,$000100    | 044265 04421C || 044265 01 00 01 00 10869     LD BC, 256   ; Length of the buffer
ld e,a           ; ld e,a           | 044269 044220 || 044269 5F          10870     LD E, A   ; The error code
ld a,$0f         ; ld a,$0f         | 04426A 044221 || 04426A 3E 0F       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 04426C 044223 || 04426C 49 CF       0002M    RST.LIS 08h
pop af           ; pop af           | 04426E 044225 || 04426E F1          10872     POP AF
push hl          ; push hl          | 04426F 044226 || 04426F E5          10873     PUSH HL   ; Stack the address of the error (now in ACCS)
add a,$7f        ; add a,$7f        | 044270 044227 || 044270 C6 7F       10874     ADD A, 127   ; Add 127 to the error code (MOS errors start at 128, and are trappable)
jp $0437af       ; jp $043777       | 044272 044229 || 044272 C3 AF 37 04 10875     JP EXTERR   ; Trigger an external error
push bc          ; push bc          | 044276 04422D || 044276 C5          10883  OSSAVE:   PUSH BC   ; Stack the size
push de          ; push de          | 044277 04422E || 044277 D5          10884     PUSH DE   ; Stack the save address
ld de,$044a00    ; ld de,$044a00    | 044278 04422F || 044278 11 00 4A 04 10885     LD DE, ACCS  ; Buffer address for filename
call $043e51     ; call $043e19     | 04427C 044233 || 04427C CD 51 3E 04 10886     CALL CSTR_FNAME  ; Fetch filename from MOS into buffer
ld hl,$044a00    ; ld hl,$044a00    | 044280 044237 || 044280 21 00 4A 04 10887     LD HL, ACCS  ; HL: Filename
call $0442dd     ; call $044294     | 044284 04423B || 044284 CD DD 42 04 10888     CALL EXT_DEFAULT  ; Tack on the extension .BBC if not specified
call $0442f1     ; call $0442a8     | 044288 04423F || 044288 CD F1 42 04 10889     CALL EXT_HANDLER  ; Get the default handler
pop de           ; pop de           | 04428C 044243 || 04428C D1          10890     POP DE   ; Restore the save address
pop bc           ; pop bc           | 04428D 044244 || 04428D C1          10891     POP BC   ; Restore the size
or a             ; or a             | 04428E 044245 || 04428E B7          10892     OR A   ; Is the extension .BBC
jr z,$+$46       ; jr z,$+$46       | 04428F 044246 || 04428F 28 44       10893     JR Z, OSSAVE_BBC  ; Yes, so use that
ld a,($044d45)   ; ld a,($044d45)   | 044291 044248 || 044291 3A 45 4D 04 10897  OSSAVE_TXT:  LD  A, (OSWRCHCH)  ; Stack the current channel
push af          ; push af          | 044295 04424C || 044295 F5          10898     PUSH AF
xor a            ; xor a            | 044296 04424D || 044296 AF          10899     XOR A
inc a            ; inc a            | 044297 04424E || 044297 3C          10900     INC A   ; Make sure C is clear, A is 1, for OPENOUT
ld ($044d45),a   ; ld ($044d45),a   | 044298 04424F || 044298 32 45 4D 04 10901     LD (OSWRCHCH), A
call $044365     ; call $04431c     | 04429C 044253 || 04429C CD 65 43 04 10902     CALL OSOPEN   ; Open the file
ld ($044d46),a   ; ld ($044d46),a   | 0442A0 044257 || 0442A0 32 46 4D 04 10903     LD (OSWRCHFH), A  ; Store the file handle for OSWRCH
ld ix,$044d40    ; ld ix,$044d40    | 0442A4 04425B || 0442A4 DD 21 40 4D 10904     LD IX, LISTON  ; Required for LISTIT
ld hl,($044d14)  ; ld hl,($044d14)  | 0442A9 044260 || 0442A9 2A 14 4D 04 10905     LD HL, (PAGE_)  ; Get start of program area
exx              ; exx              | 0442AD 044264 || 0442AD D9          10906     EXX
ld bc,$000000    ; ld bc,$000000    | 0442AE 044265 || 0442AE 01 00 00 00 10907     LD BC, 0   ; Set the initial indent counters
exx              ; exx              | 0442B2 044269 || 0442B2 D9          10908     EXX
ld a,(hl)        ; ld a,(hl)        | 0442B3 04426A || 0442B3 7E          10909  OSSAVE_TXT1:  LD A, (HL)   ; Check for end of program marker
or a             ; or a             | 0442B4 04426B || 0442B4 B7          10910     OR A
jr z,$+$11       ; jr z,$+$11       | 0442B5 04426C || 0442B5 28 0F       10911     JR Z, OSSAVE_TXT2
inc hl           ; inc hl           | 0442B7 04426E || 0442B7 23          10912     INC HL   ; Skip the length byte
ld de,$000000    ; ld de,$000000    | 0442B8 04426F || 0442B8 11 00 00 00 10913     LD DE, 0   ; Clear DE to ensure we get a 16-bit line number
ld e,(hl)        ; ld e,(hl)        | 0442BC 044273 || 0442BC 5E          10914     LD E, (HL)   ; Get the line number
inc hl           ; inc hl           | 0442BD 044274 || 0442BD 23          10915     INC HL
ld d,(hl)        ; ld d,(hl)        | 0442BE 044275 || 0442BE 56          10916     LD D, (HL)
inc hl           ; inc hl           | 0442BF 044276 || 0442BF 23          10917     INC HL
call $0438ca     ; call $043892     | 0442C0 044277 || 0442C0 CD CA 38 04 10918     CALL LISTIT   ; List the line
jr $-$11         ; jr $-$11         | 0442C4 04427B || 0442C4 18 ED       10919     JR OSSAVE_TXT1
ld a,($044d46)   ; ld a,($044d46)   | 0442C6 04427D || 0442C6 3A 46 4D 04 10920  OSSAVE_TXT2:  LD A, (OSWRCHFH)  ; Get the file handle
ld e,a           ; ld e,a           | 0442CA 044281 || 0442CA 5F          10921     LD E, A
call $044374     ; call $04432b     | 0442CB 044282 || 0442CB CD 74 43 04 10922     CALL OSSHUT   ; Close it
pop af           ; pop af           | 0442CF 044286 || 0442CF F1          10923     POP AF   ; Restore the channel
ld ($044d45),a   ; ld ($044d45),a   | 0442D0 044287 || 0442D0 32 45 4D 04 10924     LD (OSWRCHCH), A
ret              ; ret              | 0442D4 04428B || 0442D4 C9          10925     RET
ld a,$02         ; ld a,$02         | 0442D5 04428C || 0442D5 3E 02       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 0442D7 04428E || 0442D7 49 CF       0002M    RST.LIS 08h
or a             ; or a             | 0442D9 044290 || 0442D9 B7          10930     OR A   ; If there is no error (A=0)
ret z            ; ret z            | 0442DA 044291 || 0442DA C8          10931     RET Z   ; Just return
jr $-$7b         ; jr $-$7b         | 0442DB 044292 || 0442DB 18 83       10932     JR OSERROR   ; Trip an error
push hl          ; push hl          | 0442DD 044294 || 0442DD E5          10938  EXT_DEFAULT:  PUSH HL   ; Stack the filename pointer
ld c,$2e         ; ld c,$2e         | 0442DE 044295 || 0442DE 0E 2E       10939     LD C, '.'   ; Search for dot (marks start of extension)
call $043e71     ; call $043e39     | 0442E0 044297 || 0442E0 CD 71 3E 04 10940     CALL CSTR_FINDCH
or a             ; or a             | 0442E4 04429B || 0442E4 B7          10941     OR A   ; Check for end of string marker
jr nz,$+$0a      ; jr nz,$+$0a      | 0442E5 04429C || 0442E5 20 08       10942     JR NZ, @F   ; No, so skip as we have an extension at this point
ld de,$044321    ; ld de,$0442d8    | 0442E7 04429E || 0442E7 11 21 43 04 10943     LD DE, EXT_LOOKUP  ; Get the first (default extension)
call $043e88     ; call $043e50     | 0442EB 0442A2 || 0442EB CD 88 3E 04 10944     CALL CSTR_CAT  ; Concat it to string pointed to by HL
pop hl           ; pop hl           | 0442EF 0442A6 || 0442EF E1          10945  @@:   POP HL   ; Restore the filename pointer
ret              ; ret              | 0442F0 0442A7 || 0442F0 C9          10946     RET
push hl          ; push hl          | 0442F1 0442A8 || 0442F1 E5          10953  EXT_HANDLER:  PUSH HL   ; Stack the filename pointer
ld c,$2e         ; ld c,$2e         | 0442F2 0442A9 || 0442F2 0E 2E       10954     LD C, '.'   ; Find the '.'
call $043e71     ; call $043e39     | 0442F4 0442AB || 0442F4 CD 71 3E 04 10955     CALL CSTR_FINDCH
ld de,$044321    ; ld de,$0442d8    | 0442F8 0442AF || 0442F8 11 21 43 04 10956     LD DE, EXT_LOOKUP  ; The lookup table
push hl          ; push hl          | 0442FC 0442B3 || 0442FC E5          10958  EXT_HANDLER_1:  PUSH HL   ; Stack the pointer to the extension
call $043e79     ; call $043e41     | 0442FD 0442B4 || 0442FD CD 79 3E 04 10959     CALL CSTR_ENDSWITH  ; Check whether the string ends with the entry in the lookup
pop hl           ; pop hl           | 044301 0442B8 || 044301 E1          10960     POP HL   ; Restore the pointer to the extension
jr z,$+$1b       ; jr z,$+$1b       | 044302 0442B9 || 044302 28 19       10961     JR Z, EXT_HANDLER_2 ; We have a match!
ld a,(de)        ; ld a,(de)        | 044304 0442BB || 044304 1A          10963  @@:   LD A, (DE)   ; Skip to the end of the entry in the lookup
inc de           ; inc de           | 044305 0442BC || 044305 13          10964     INC DE
or a             ; or a             | 044306 0442BD || 044306 B7          10965     OR A
jr nz,$-$03      ; jr nz,$-$03      | 044307 0442BE || 044307 20 FB       10966     JR NZ, @B
inc de           ; inc de           | 044309 0442C0 || 044309 13          10967     INC DE   ; Skip the file extension # byte
ld a,(de)        ; ld a,(de)        | 04430A 0442C1 || 04430A 1A          10969     LD A, (DE)   ; Are we at the end of the table?
or a             ; or a             | 04430B 0442C2 || 04430B B7          10970     OR A
jr nz,$-$10      ; jr nz,$-$10      | 04430C 0442C3 || 04430C 20 EE       10971     JR NZ, EXT_HANDLER_1 ; No, so loop
ld a,$cc         ; ld a,$cc         | 04430E 0442C5 || 04430E 3E CC       10973     LD      A,204   ; Throw a "Bad name" error
call $0437af     ; call $043777     | 044310 0442C7 || 044310 CD AF 37 04 10974            CALL    EXTERR
ld b,d           ; ld b,d           | 044314 0442CB || 044314 42 61 64 20 10975            DB     "Bad name", 0
ld h,c           ;                  | 044315        || ld h,c                         ; 0442CC
ld h,h           ;                  | 044316        || ld h,h                         ; 0442CD
jr nz,$+$70      ;                  | 044317        || jr nz,$+$70                    ; 0442CE
ld h,c           ;                  | 044319        || ld h,c                         ; 0442D0
ld l,l           ;                  | 04431A        || ld l,l                         ; 0442D1
ld h,l           ;                  | 04431B        || ld h,l                         ; 0442D2
nop              ;                  | 04431C        || nop                            ; 0442D3
inc de           ; inc de           | 04431D 0442D4 || 04431D 13          10977  EXT_HANDLER_2:  INC DE   ; Skip to the file extension # byte
ld a,(de)        ; ld a,(de)        | 04431E 0442D5 || 04431E 1A          10978     LD A, (DE)
pop hl           ; pop hl           | 04431F 0442D6 || 04431F E1          10979     POP HL   ; Restore the filename pointer
ret              ; ret              | 044320 0442D7 || 044320 C9          10980     RET
ld l,$42         ; ld l,$42         | 044321 0442D8 || 044321 2E 42 42 43 10989  EXT_LOOKUP:  DB ".BBC", 0, 0  ; First entry is the default extension
ld b,d           ;                  | 044323        || ld b,d                         ; 0442DA
ld b,e           ;                  | 044324        || ld b,e                         ; 0442DB
nop              ;                  | 044325        || nop                            ; 0442DC
nop              ;                  | 044326        || nop                            ; 0442DD
ld l,$54         ; ld l,$54         | 044327 0442DE || 044327 2E 54 58 54 10990     DB ".TXT", 0, 1
ld e,b           ;                  | 044329        || ld e,b                         ; 0442E0
ld d,h           ;                  | 04432A        || ld d,h                         ; 0442E1
nop              ;                  | 04432B        || nop                            ; 0442E2
ld bc,$53412e    ;                  | 04432C        || ld bc,$53412e                  ; 0442E3
ld b,e           ;                  | 044330        || ld b,e                         ; 0442E7
nop              ;                  | 044331        || nop                            ; 0442E8
ld bc,$41422e    ;                  | 044332        || ld bc,$41422e                  ; 0442E9
ld d,e           ;                  | 044336        || ld d,e                         ; 0442ED
nop              ;                  | 044337        || nop                            ; 0442EE
ld bc,$502100    ;                  | 044338        || ld bc,$072100                  ; 0442EF
ld b,e           ;                  | 04433C        || ld b,e                         ; 0442F3
inc b            ;                  | 04433D        || inc b                          ; 0442F4
ld a,(hl)        ; ld a,(hl)        | 04433E 0442F5 || 04433E 7E          11012  OSCALL_1:  LD A, (HL)
inc hl           ; inc hl           | 04433F 0442F6 || 04433F 23          11013     INC HL
cp $ff           ; cp $ff           | 044340 0442F7 || 044340 FE FF       11014     CP FFh
ret z            ; ret z            | 044342 0442F9 || 044342 C8          11015     RET Z
cp iyl           ; cp iyl           | 044343 0442FA || 044343 FD BD       11016     CP A, IYL
jr z,$+$08       ; jr z,$+$08       | 044345 0442FC || 044345 28 06       11017     JR Z, OSCALL_2
ret nc           ; ret nc           | 044347 0442FE || 044347 D0          11018     RET NC
inc hl           ; inc hl           | 044348 0442FF || 044348 23          11019     INC HL
inc hl           ; inc hl           | 044349 044300 || 044349 23          11020     INC HL
inc hl           ; inc hl           | 04434A 044301 || 04434A 23          11021     INC HL
jr $-$0d         ; jr $-$0d         | 04434B 044302 || 04434B 18 F1       11022     JR OSCALL_1
ld iy,(hl)       ; ld iy,(hl)       | 04434D 044304 || 04434D ED 31       11023  OSCALL_2:  LD IY,(HL)
ret              ; ret              | 04434F 044306 || 04434F C9          11024     RET
call nc,$044384  ; call nc,$04433b  | 044350 044307 || 044350 D4          11025  OSCALL_TABLE:  DB  D4h
rst $10          ; rst $10          | 044354 04430B || 044354 D7          11027     DB  D7h
ld a,h           ;                  | 044355        || 044355 7C 43 04    11028     DW24  OSBGET
ld b,e           ;                  | 044356        || ld b,e                         ; 04430D
inc b            ;                  | 044357        || inc b                          ; 04430E
xor $38          ; xor $00          | 044358 04430F || 044358 EE          11029     DB  EEh
ccf              ;                  | 04435A        || ccf                            ; 044311
inc b            ;                  | 04435B        || inc b                          ; 044312
call p,$044102   ; call p,$0440b9   | 04435C 044313 || 04435C F4          11031     DB F4h
rst $30          ; rst $30          | 044360 044317 || 044360 F7          11033     DB F7h
ret z            ;                  | 044361        || 044361 C8 3F 04    11034     DW24 OSCLI
ccf              ;                  | 044362        || ccf                            ; 044319
inc b            ;                  | 044363        || inc b                          ; 04431A
rst $38          ; rst $38          | 044364 04431B || 044364 FF          11035     DB FFh
ld c,$01         ; ld c,$01         | 044365 04431C || 044365 0E 01       11046  OSOPEN:   LD C, fa_read
jr z,$+$08       ; jr z,$+$08       | 044367 04431E || 044367 28 06       11047     JR Z, @F
ld c,$32         ; ld c,$32         | 044369 044320 || 044369 0E 32       11048     LD C, fa_write | fa_open_append
jr c,$+$04       ; jr c,$+$04       | 04436B 044322 || 04436B 38 02       11049     JR C, @F
ld c,$0a         ; ld c,$0a         | 04436D 044324 || 04436D 0E 0A       11050     LD C, fa_write | fa_create_always
ld a,$0a         ; ld a,$0a         | 04436F 044326 || 04436F 3E 0A       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 044371 044328 || 044371 49 CF       0002M    RST.LIS 08h
ret              ; ret              | 044373 04432A || 044373 C9          11052     RET
push bc          ; push bc          | 044374 04432B || 044374 C5          11059  OSSHUT:   PUSH BC
ld c,e           ; ld c,e           | 044375 04432C || 044375 4B          11060     LD C, E
ld a,$0b         ; ld a,$0b         | 044376 04432D || 044376 3E 0B       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 044378 04432F || 044378 49 CF       0002M    RST.LIS 08h
pop bc           ; pop bc           | 04437A 044331 || 04437A C1          11062     POP BC
ret              ; ret              | 04437B 044332 || 04437B C9          11063     RET
push bc          ; push bc          | 04437C 044333 || 04437C C5          11072  OSBGET:   PUSH BC
ld c,e           ; ld c,e           | 04437D 044334 || 04437D 4B          11073     LD C, E
ld a,$0c         ; ld a,$0c         | 04437E 044335 || 04437E 3E 0C       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 044380 044337 || 044380 49 CF       0002M    RST.LIS 08h
pop bc           ; pop bc           | 044382 044339 || 044382 C1          11075     POP BC
ret              ; ret              | 044383 04433A || 044383 C9          11076     RET
push bc          ; push bc          | 044384 04433B || 044384 C5          11083  OSBPUT:   PUSH BC
ld c,e           ; ld c,e           | 044385 04433C || 044385 4B          11084     LD C, E
ld b,a           ; ld b,a           | 044386 04433D || 044386 47          11085     LD B, A
ld a,$0d         ; ld a,$0d         | 044387 04433E || 044387 3E 0D       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 044389 044340 || 044389 49 CF       0002M    RST.LIS 08h
pop bc           ; pop bc           | 04438B 044342 || 04438B C1          11087     POP BC
ret              ; ret              | 04438C 044343 || 04438C C9          11088     RET
push bc          ; push bc          | 04438D 044344 || 04438D C5          11097  OSSTAT:   PUSH BC
ld c,e           ; ld c,e           | 04438E 044345 || 04438E 4B          11098     LD C, E
ld a,$0e         ; ld a,$0e         | 04438F 044346 || 04438F 3E 0E       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 044391 044348 || 044391 49 CF       0002M    RST.LIS 08h
pop bc           ; pop bc           | 044393 04434A || 044393 C1          11100     POP BC
cp $01           ; cp $01           | 044394 04434B || 044394 FE 01       11101     CP 1
ret              ; ret              | 044396 04434D || 044396 C9          11102     RET
push iy          ; push iy          | 044397 04434E || 044397 FD E5       11110  GETPTR:   PUSH  IY
ld c,e           ; ld c,e           | 044399 044350 || 044399 4B          11111     LD  C, E
ld a,$19         ; ld a,$19         | 04439A 044351 || 04439A 3E 19       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 04439C 044353 || 04439C 49 CF       0002M    RST.LIS 08h
push hl          ; push hl          | 04439E 044355 || 04439E E5          11113     PUSH  HL
pop iy           ; pop iy           | 04439F 044356 || 04439F FD E1       11114     POP  IY  ; IYU: Pointer to FIL structure
ld l,(iy+$11)    ; ld l,(iy+$11)    | 0443A1 044358 || 0443A1 FD 6E 11    11115     LD  L, (IY + FIL.fptr + 0)
ld h,(iy+$12)    ; ld h,(iy+$12)    | 0443A4 04435B || 0443A4 FD 66 12    11116     LD  H, (IY + FIL.fptr + 1)
ld e,(iy+$13)    ; ld e,(iy+$13)    | 0443A7 04435E || 0443A7 FD 5E 13    11117     LD  E, (IY + FIL.fptr + 2)
ld d,(iy+$14)    ; ld d,(iy+$14)    | 0443AA 044361 || 0443AA FD 56 14    11118     LD  D, (IY + FIL.fptr + 3)
pop iy           ; pop iy           | 0443AD 044364 || 0443AD FD E1       11119     POP  IY
ret              ; ret              | 0443AF 044366 || 0443AF C9          11120     RET
push iy          ; push iy          | 0443B0 044367 || 0443B0 FD E5       11127  PUTPTR:   PUSH  IY
ld c,a           ; ld c,a           | 0443B2 044369 || 0443B2 4F          11128     LD  C, A    ; C: Filehandle
push hl          ; push hl          | 0443B3 04436A || 0443B3 E5          11129     PUSH  HL
ld hl,$000002    ; ld hl,$000002    | 0443B4 04436B || 0443B4 21 02 00 00 11130     LD  HL, 2
add hl,sp        ; add hl,sp        | 0443B8 04436F || 0443B8 39          11131     ADD  HL, SP
ld (hl),e        ; ld (hl),e        | 0443B9 044370 || 0443B9 73          11132     LD  (HL), E  ; 3rd byte of DWORD set to E
pop hl           ; pop hl           | 0443BA 044371 || 0443BA E1          11133     POP  HL
ld e,d           ; ld e,d           | 0443BB 044372 || 0443BB 5A          11134     LD  E, D    ; 4th byte passed as E
ld a,$1c         ; ld a,$1c         | 0443BC 044373 || 0443BC 3E 1C       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 0443BE 044375 || 0443BE 49 CF       0002M    RST.LIS 08h
pop iy           ; pop iy           | 0443C0 044377 || 0443C0 FD E1       11136     POP  IY
ret              ; ret              | 0443C2 044379 || 0443C2 C9          11137     RET
push iy          ; push iy          | 0443C3 04437A || 0443C3 FD E5       11145  GETEXT:         PUSH    IY
ld c,e           ; ld c,e           | 0443C5 04437C || 0443C5 4B          11146                  LD      C, E
ld a,$19         ; ld a,$19         | 0443C6 04437D || 0443C6 3E 19       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 0443C8 04437F || 0443C8 49 CF       0002M    RST.LIS 08h
push hl          ; push hl          | 0443CA 044381 || 0443CA E5          11148                  PUSH    HL
pop iy           ; pop iy           | 0443CB 044382 || 0443CB FD E1       11149                  POP     IY          ; IYU: Pointer to FIL structure
ld l,(iy+$0b)    ; ld l,(iy+$0b)    | 0443CD 044384 || 0443CD FD 6E 0B    11151                  LD      L, (IY + FIL.obj + FFOBJID.objsize + 0)
ld h,(iy+$0c)    ; ld h,(iy+$0c)    | 0443D0 044387 || 0443D0 FD 66 0C    11152                  LD      H, (IY + FIL.obj + FFOBJID.objsize + 1)
ld e,(iy+$0d)    ; ld e,(iy+$0d)    | 0443D3 04438A || 0443D3 FD 5E 0D    11153                  LD      E, (IY + FIL.obj + FFOBJID.objsize + 2)
ld d,(iy+$0e)    ; ld d,(iy+$0e)    | 0443D6 04438D || 0443D6 FD 56 0E    11154                  LD      D, (IY + FIL.obj + FFOBJID.objsize + 3)
pop iy           ; pop iy           | 0443D9 044390 || 0443D9 FD E1       11156                  POP     IY
ret              ; ret              | 0443DB 044392 || 0443DB C9          11157     RET
push iy          ; push iy          | 0443DC 044393 || 0443DC FD E5       11161  GETIMS:   PUSH IY
ld hl,$044a00    ; ld hl,$044a00    | 0443DE 044395 || 0443DE 21 00 4A 04 11162     LD HL, ACCS   ; Where to store the time string
ld a,$12         ; ld a,$12         | 0443E2 044399 || 0443E2 3E 12       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 0443E4 04439B || 0443E4 49 CF       0002M    RST.LIS 08h
ld de,$044a00    ; ld de,$044a00    | 0443E6 04439D || 0443E6 11 00 4A 04 11164     LD DE, ACCS  ; DE: pointer to start of string accumulator
ld e,a           ; ld e,a           | 0443EA 0443A1 || 0443EA 5F          11165     LD E, A    ;  E: now points to the end of the string
pop iy           ; pop iy           | 0443EB 0443A2 || 0443EB FD E1       11166     POP IY
ret              ; ret              | 0443ED 0443A4 || 0443ED C9          11167     RET
call $04030f     ; call $04030a     | 0443EE 0443A5 || 0443EE CD 0F 03 04 11175  EXPR_W2:  CALL EXPRI   ; Get first parameter
exx              ; exx              | 0443F2 0443A9 || 0443F2 D9          11176     EXX
push hl          ; push hl          | 0443F3 0443AA || 0443F3 E5          11177     PUSH HL
call $040a2a     ; call $040a22     | 0443F4 0443AB || 0443F4 CD 2A 0A 04 11178     CALL COMMA
call $04030f     ; call $04030a     | 0443F8 0443AF || 0443F8 CD 0F 03 04 11179     CALL EXPRI   ; Get second parameter
exx              ; exx              | 0443FC 0443B3 || 0443FC D9          11180     EXX
pop de           ; pop de           | 0443FD 0443B4 || 0443FD D1          11181     POP DE
ret              ; ret              | 0443FE 0443B5 || 0443FE C9          11182     RET
ret              ; ret              | 0443FF 0443B6 || 0443FF C9          11186  RESET:   RET
ld a,$10         ;                  | 044400        || 044400 3E 10       0001M   LD A, val
call $043f38     ; call $043777     | 044402 0443B8 || 044402 CD 38 3F 04 0002M   CALL OSWRCH
jp $040b9e       ;                  | 044406        || 044406 C3 9E 0B 04 11236     JP XEQ
ld a,$0c         ;                  | 04440A        || 04440A 3E 0C       11240  CLRSCN:   LD A, 0Ch
jp $043f38       ;                  | 04440C        || 04440C C3 38 3F 04 11241     JP OSWRCH
push ix          ;                  | 044410        || 044410 DD E5       11245  MODE:   PUSH IX   ; Get the system vars in IX
ld a,$08         ;                  | 044412        || 044412 3E 08       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 044414 0443D6 || 044414 49 CF       0002M    RST.LIS 08h
res 4,(ix+$04)   ; res 4,(ix+$04)   | 044416 0443D8 || 044416 DD CB 04 A6 11247     RES 4, (IX+sysvar_vpd_pflags)
call $04030f     ; call $04030a     | 04441A 0443DC || 04441A CD 0F 03 04 11248     CALL    EXPRI
exx              ; exx              | 04441E 0443E0 || 04441E D9          11249     EXX
ld a,$16         ; ld a,$16         | 04441F 0443E1 || 04441F 3E 16       0001M   LD A, val
call $043f38     ; call $043f00     | 044421 0443E3 || 044421 CD 38 3F 04 0002M   CALL OSWRCH
ld a,l           ; ld a,l           | 044425 0443E7 || 044425 7D          0001M   LD A, val
call $043f38     ; call $043f00     | 044426 0443E8 || 044426 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$08         ; ld a,$08         | 04442A 0443EC || 04442A 3E 08       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 04442C 0443EE || 04442C 49 CF       0002M    RST.LIS 08h
bit 4,(ix+$04)   ; bit 4,(ix+$04)   | 04442E 0443F0 || 04442E DD CB 04 66 11253  @@:   BIT 4, (IX+sysvar_vpd_pflags)
jr z,$-$04       ; jr z,$-$04       | 044432 0443F4 || 044432 28 FA       11254     JR Z, @B   ; Wait for the result
pop ix           ; pop ix           | 044434 0443F6 || 044434 DD E1       11255     POP IX
jp $040b9e       ; jp $040b96       | 044436 0443F8 || 044436 C3 9E 0B 04 11256     JP XEQ
inc iy           ; inc iy           | 04443A 0443FC || 04443A FD 23       11260  GETSCHR:  INC IY
call $04030f     ; call $04030a     | 04443C 0443FE || 04443C CD 0F 03 04 11261     CALL    EXPRI        ; Get X coordinate
exx              ; exx              | 044440 044402 || 044440 D9          11262     EXX
ld ($044a00),hl  ; ld ($044a00),hl  | 044441 044403 || 044441 22 00 4A 04 11263     LD (VDU_BUFFER+0), HL
call $040a2a     ; call $040a22     | 044445 044407 || 044445 CD 2A 0A 04 11264     CALL COMMA
call $04030f     ; call $04030a     | 044449 04440B || 044449 CD 0F 03 04 11265     CALL EXPRI   ; Get Y coordinate
exx              ; exx              | 04444D 04440F || 04444D D9          11266     EXX
ld ($044a02),hl  ; ld ($044a02),hl  | 04444E 044410 || 04444E 22 02 4A 04 11267     LD (VDU_BUFFER+2), HL
call $040a37     ; call $040a2f     | 044452 044414 || 044452 CD 37 0A 04 11268     CALL BRAKET   ; Closing bracket
push ix          ; push ix          | 044456 044418 || 044456 DD E5       11270     PUSH IX   ; Get the system vars in IX
ld a,$08         ; ld a,$08         | 044458 04441A || 044458 3E 08       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 04445A 04441C || 04445A 49 CF       0002M    RST.LIS 08h
res 1,(ix+$04)   ; res 1,(ix+$04)   | 04445C 04441E || 04445C DD CB 04 8E 11272     RES 1, (IX+sysvar_vpd_pflags)
ld a,$17         ; ld a,$17         | 044460 044422 || 044460 3E 17       0001M   LD A, val
call $043f38     ; call $043f00     | 044462 044424 || 044462 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 044466 044428 || 044466 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 044468 04442A || 044468 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$83         ; ld a,$83         | 04446C 04442E || 04446C 3E 83       0001M   LD A, val
call $043f38     ; call $043f00     | 04446E 044430 || 04446E CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a00)   ; ld a,($044a00)   | 044472 044434 || 044472 3A 00 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 044476 044438 || 044476 CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a01)   ; ld a,($044a01)   | 04447A 04443C || 04447A 3A 01 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 04447E 044440 || 04447E CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a02)   ; ld a,($044a02)   | 044482 044444 || 044482 3A 02 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 044486 044448 || 044486 CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a03)   ; ld a,($044a03)   | 04448A 04444C || 04448A 3A 03 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 04448E 044450 || 04448E CD 38 3F 04 0002M   CALL OSWRCH
bit 1,(ix+$04)   ; bit 1,(ix+$04)   | 044492 044454 || 044492 DD CB 04 4E 11280  @@:   BIT 1, (IX+sysvar_vpd_pflags)
jr z,$-$04       ; jr z,$-$04       | 044496 044458 || 044496 28 FA       11281     JR Z, @B   ; Wait for the result
ld a,(ix+$09)    ; ld a,(ix+$09)    | 044498 04445A || 044498 DD 7E 09    11282     LD A, (IX+sysvar_scrchar) ; Fetch the result in A
or a             ; or a             | 04449B 04445D || 04449B B7          11283     OR A   ; Check for 00h
scf              ; scf              | 04449C 04445E || 04449C 37          11284     SCF    ; C = character map
jr nz,$+$04      ; jr nz,$+$04      | 04449D 04445F || 04449D 20 02       11285     JR NZ, @F   ; We have a character, so skip next bit
xor a            ; xor a            | 04449F 044461 || 04449F AF          11286     XOR A   ; Clear carry
dec a            ; dec a            | 0444A0 044462 || 0444A0 3D          11287     DEC A   ; Set A to FFh
pop ix           ; pop ix           | 0444A1 044463 || 0444A1 DD E1       11288  @@:   POP IX
jp $0407e6       ; jp $0407e1       | 0444A3 044465 || 0444A3 C3 E6 07 04 11289     JP INKEY1   ; Jump back to the GET command
call $04030f     ; call $04030a     | 0444A7 044469 || 0444A7 CD 0F 03 04 11293  POINT:   CALL    EXPRI        ; Get X coordinate
exx              ; exx              | 0444AB 04446D || 0444AB D9          11294     EXX
ld ($044a00),hl  ; ld ($044a00),hl  | 0444AC 04446E || 0444AC 22 00 4A 04 11295     LD (VDU_BUFFER+0), HL
call $040a2a     ; call $040a22     | 0444B0 044472 || 0444B0 CD 2A 0A 04 11296     CALL COMMA
call $04030f     ; call $04030a     | 0444B4 044476 || 0444B4 CD 0F 03 04 11297     CALL EXPRI   ; Get Y coordinate
exx              ; exx              | 0444B8 04447A || 0444B8 D9          11298     EXX
ld ($044a02),hl  ; ld ($044a02),hl  | 0444B9 04447B || 0444B9 22 02 4A 04 11299     LD (VDU_BUFFER+2), HL
call $040a37     ; call $040a2f     | 0444BD 04447F || 0444BD CD 37 0A 04 11300     CALL BRAKET   ; Closing bracket
push ix          ; push ix          | 0444C1 044483 || 0444C1 DD E5       11302     PUSH IX   ; Get the system vars in IX
ld a,$08         ; ld a,$08         | 0444C3 044485 || 0444C3 3E 08       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 0444C5 044487 || 0444C5 49 CF       0002M    RST.LIS 08h
res 2,(ix+$04)   ; res 2,(ix+$04)   | 0444C7 044489 || 0444C7 DD CB 04 96 11304     RES 2, (IX+sysvar_vpd_pflags)
ld a,$17         ; ld a,$17         | 0444CB 04448D || 0444CB 3E 17       0001M   LD A, val
call $043f38     ; call $043f00     | 0444CD 04448F || 0444CD CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 0444D1 044493 || 0444D1 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 0444D3 044495 || 0444D3 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$84         ; ld a,$84         | 0444D7 044499 || 0444D7 3E 84       0001M   LD A, val
call $043f38     ; call $043f00     | 0444D9 04449B || 0444D9 CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a00)   ; ld a,($044a00)   | 0444DD 04449F || 0444DD 3A 00 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 0444E1 0444A3 || 0444E1 CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a01)   ; ld a,($044a01)   | 0444E5 0444A7 || 0444E5 3A 01 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 0444E9 0444AB || 0444E9 CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a02)   ; ld a,($044a02)   | 0444ED 0444AF || 0444ED 3A 02 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 0444F1 0444B3 || 0444F1 CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a03)   ; ld a,($044a03)   | 0444F5 0444B7 || 0444F5 3A 03 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 0444F9 0444BB || 0444F9 CD 38 3F 04 0002M   CALL OSWRCH
bit 2,(ix+$04)   ; bit 2,(ix+$04)   | 0444FD 0444BF || 0444FD DD CB 04 56 11312  @@:   BIT 2, (IX+sysvar_vpd_pflags)
jr z,$-$04       ; jr z,$-$04       | 044501 0444C3 || 044501 28 FA       11313     JR Z, @B   ; Wait for the result
ld l,(ix+$16)    ; ld l,(ix+$16)    | 044503 0444C5 || 044503 DD 6E 16    11317     LD L, (IX+sysvar_scrpixelIndex)
pop ix           ; pop ix           | 044506 0444C8 || 044506 DD E1       11318     POP IX
jp $040584       ; jp $04057f       | 044508 0444CA || 044508 C3 84 05 04 11319     JP COUNT0
call $04030f     ; call $04030a     | 04450C 0444CE || 04450C CD 0F 03 04 11326  COLOUR:   CALL EXPRI   ; The colour / mode
exx              ; exx              | 044510 0444D2 || 044510 D9          11327     EXX
ld a,l           ; ld a,l           | 044511 0444D3 || 044511 7D          11328     LD A, L
ld ($044a00),a   ; ld ($044a00),a   | 044512 0444D4 || 044512 32 00 4A 04 11329     LD (VDU_BUFFER+0), A ; Store first parameter
call $040a78     ; call $040a70     | 044516 0444D8 || 044516 CD 78 0A 04 11330     CALL NXT   ; Are there any more parameters?
cp $2c           ; cp $2c           | 04451A 0444DC || 04451A FE 2C       11331     CP ','
jr z,$+$14       ; jr z,$+$14       | 04451C 0444DE || 04451C 28 12       11332     JR Z, COLOUR_1  ; Yes, so we're doing a palette change next
ld a,$11         ; ld a,$11         | 04451E 0444E0 || 04451E 3E 11       0001M   LD A, val
call $043f38     ; call $043f00     | 044520 0444E2 || 044520 CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a00)   ; ld a,($044a00)   | 044524 0444E6 || 044524 3A 00 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 044528 0444EA || 044528 CD 38 3F 04 0002M   CALL OSWRCH
jp $040b9e       ; jp $040b96       | 04452C 0444EE || 04452C C3 9E 0B 04 11336     JP XEQ
call $040a2a     ; call $040a22     | 044530 0444F2 || 044530 CD 2A 0A 04 11338  COLOUR_1:  CALL COMMA
call $04030f     ; call $04030a     | 044534 0444F6 || 044534 CD 0F 03 04 11339     CALL EXPRI   ; Parse R (OR P)
exx              ; exx              | 044538 0444FA || 044538 D9          11340     EXX
ld a,l           ; ld a,l           | 044539 0444FB || 044539 7D          11341     LD A, L
ld ($044a01),a   ; ld ($044a01),a   | 04453A 0444FC || 04453A 32 01 4A 04 11342     LD (VDU_BUFFER+1), A
call $040a78     ; call $040a70     | 04453E 044500 || 04453E CD 78 0A 04 11343     CALL NXT   ; Are there any more parameters?
cp $2c           ; cp $2c           | 044542 044504 || 044542 FE 2C       11344     CP ','
jr z,$+$2e       ; jr z,$+$2e       | 044544 044506 || 044544 28 2C       11345     JR Z, COLOUR_2  ; Yes, so we're doing COLOUR L,R,G,B
ld a,$13         ; ld a,$13         | 044546 044508 || 044546 3E 13       0001M   LD A, val
call $043f38     ; call $043f00     | 044548 04450A || 044548 CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a00)   ; ld a,($044a00)   | 04454C 04450E || 04454C 3A 00 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 044550 044512 || 044550 CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a01)   ; ld a,($044a01)   | 044554 044516 || 044554 3A 01 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 044558 04451A || 044558 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 04455C 04451E || 04455C 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 04455E 044520 || 04455E CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 044562 044524 || 044562 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 044564 044526 || 044564 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 044568 04452A || 044568 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 04456A 04452C || 04456A CD 38 3F 04 0002M   CALL OSWRCH
jp $040b9e       ; jp $040b96       | 04456E 044530 || 04456E C3 9E 0B 04 11353     JP XEQ
call $040a2a     ; call $040a22     | 044572 044534 || 044572 CD 2A 0A 04 11355  COLOUR_2:  CALL COMMA
call $04030f     ; call $04030a     | 044576 044538 || 044576 CD 0F 03 04 11356     CALL EXPRI   ; Parse G
exx              ; exx              | 04457A 04453C || 04457A D9          11357     EXX
ld a,l           ; ld a,l           | 04457B 04453D || 04457B 7D          11358     LD A, L
ld ($044a02),a   ; ld ($044a02),a   | 04457C 04453E || 04457C 32 02 4A 04 11359     LD (VDU_BUFFER+2), A
call $040a2a     ; call $040a22     | 044580 044542 || 044580 CD 2A 0A 04 11360     CALL COMMA
call $04030f     ; call $04030a     | 044584 044546 || 044584 CD 0F 03 04 11361     CALL EXPRI   ; Parse B
exx              ; exx              | 044588 04454A || 044588 D9          11362     EXX
ld a,l           ; ld a,l           | 044589 04454B || 044589 7D          11363     LD A, L
ld ($044a03),a   ; ld ($044a03),a   | 04458A 04454C || 04458A 32 03 4A 04 11364     LD (VDU_BUFFER+3), A
ld a,$13         ; ld a,$13         | 04458E 044550 || 04458E 3E 13       0001M   LD A, val
call $043f38     ; call $043f00     | 044590 044552 || 044590 CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a00)   ; ld a,($044a00)   | 044594 044556 || 044594 3A 00 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 044598 04455A || 044598 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$ff         ; ld a,$ff         | 04459C 04455E || 04459C 3E FF       0001M   LD A, val
call $043f38     ; call $043f00     | 04459E 044560 || 04459E CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a01)   ; ld a,($044a01)   | 0445A2 044564 || 0445A2 3A 01 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 0445A6 044568 || 0445A6 CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a02)   ; ld a,($044a02)   | 0445AA 04456C || 0445AA 3A 02 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 0445AE 044570 || 0445AE CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a03)   ; ld a,($044a03)   | 0445B2 044574 || 0445B2 3A 03 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 0445B6 044578 || 0445B6 CD 38 3F 04 0002M   CALL OSWRCH
jp $040b9e       ; jp $040b96       | 0445BA 04457C || 0445BA C3 9E 0B 04 11371     JP XEQ
call $04030f     ; call $04030a     | 0445BE 044580 || 0445BE CD 0F 03 04 11375  GCOL:   CALL EXPRI   ; Parse MODE
exx              ; exx              | 0445C2 044584 || 0445C2 D9          11376     EXX
ld a,l           ; ld a,l           | 0445C3 044585 || 0445C3 7D          11377     LD A, L
ld ($044a00),a   ; ld ($044a00),a   | 0445C4 044586 || 0445C4 32 00 4A 04 11378     LD (VDU_BUFFER+0), A
call $040a2a     ; call $040a22     | 0445C8 04458A || 0445C8 CD 2A 0A 04 11379     CALL COMMA
call $04030f     ; call $04030a     | 0445CC 04458E || 0445CC CD 0F 03 04 11381     CALL EXPRI   ; Parse Colour
exx              ; exx              | 0445D0 044592 || 0445D0 D9          11382     EXX
ld a,l           ; ld a,l           | 0445D1 044593 || 0445D1 7D          11383     LD A, L
ld ($044a01),a   ; ld ($044a01),a   | 0445D2 044594 || 0445D2 32 01 4A 04 11384     LD (VDU_BUFFER+1), A
ld a,$12         ; ld a,$12         | 0445D6 044598 || 0445D6 3E 12       0001M   LD A, val
call $043f38     ; call $043f00     | 0445D8 04459A || 0445D8 CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a00)   ; ld a,($044a00)   | 0445DC 04459E || 0445DC 3A 00 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 0445E0 0445A2 || 0445E0 CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a01)   ; ld a,($044a01)   | 0445E4 0445A6 || 0445E4 3A 01 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 0445E8 0445AA || 0445E8 CD 38 3F 04 0002M   CALL OSWRCH
jp $040b9e       ; jp $040b96       | 0445EC 0445AE || 0445EC C3 9E 0B 04 11389     JP XEQ
call $04030f     ; call $04030a     | 0445F0 0445B2 || 0445F0 CD 0F 03 04 11393  PLOT:   CALL EXPRI  ; Parse mode
exx              ; exx              | 0445F4 0445B6 || 0445F4 D9          11394     EXX
push hl          ; push hl          | 0445F5 0445B7 || 0445F5 E5          11395     PUSH HL  ; Push mode (L) onto stack
call $040a2a     ; call $040a22     | 0445F6 0445B8 || 0445F6 CD 2A 0A 04 11396     CALL COMMA
call $0443ee     ; call $0443a5     | 0445FA 0445BC || 0445FA CD EE 43 04 11397     CALL EXPR_W2  ; Parse X and Y
pop bc           ; pop bc           | 0445FE 0445C0 || 0445FE C1          11398     POP BC  ; Pop mode (C) off stack
ld a,$19         ; ld a,$19         | 0445FF 0445C1 || 0445FF 3E 19       0001M   LD A, val
call $043f38     ; call $043f00     | 044601 0445C3 || 044601 CD 38 3F 04 0002M   CALL OSWRCH
ld a,c           ; ld a,c           | 044605 0445C7 || 044605 79          0001M   LD A, val
call $043f38     ; call $043f00     | 044606 0445C8 || 044606 CD 38 3F 04 0002M   CALL OSWRCH
ld a,e           ; ld a,e           | 04460A 0445CC || 04460A 7B          0001M   LD A, val
call $043f38     ; call $043f00     | 04460B 0445CD || 04460B CD 38 3F 04 0002M   CALL OSWRCH
ld a,d           ; ld a,d           | 04460F 0445D1 || 04460F 7A          0001M   LD A, val
call $043f38     ; call $043f00     | 044610 0445D2 || 044610 CD 38 3F 04 0002M   CALL OSWRCH
ld a,l           ; ld a,l           | 044614 0445D6 || 044614 7D          0001M   LD A, val
call $043f38     ; call $043f00     | 044615 0445D7 || 044615 CD 38 3F 04 0002M   CALL OSWRCH
ld a,h           ; ld a,h           | 044619 0445DB || 044619 7C          0001M   LD A, val
call $043f38     ; call $043f00     | 04461A 0445DC || 04461A CD 38 3F 04 0002M   CALL OSWRCH
jp $040b9e       ; jp $040b96       | 04461E 0445E0 || 04461E C3 9E 0B 04 11405     JP XEQ
call $0443ee     ; call $0443a5     | 044622 0445E4 || 044622 CD EE 43 04 11409  MOVE:   CALL EXPR_W2  ; Parse X and Y
ld c,$04         ; ld c,$04         | 044626 0445E8 || 044626 0E 04       11410     LD C, 04H  ; Plot mode 04H (Move)
jr $-$29         ; jr $-$29         | 044628 0445EA || 044628 18 D5       11411     JR PLOT_1  ; Plot
call $0443ee     ; call $0443a5     | 04462A 0445EC || 04462A CD EE 43 04 11416  DRAW:   CALL EXPR_W2  ; Get X1 and Y1
call $040a78     ; call $040a70     | 04462E 0445F0 || 04462E CD 78 0A 04 11417     CALL NXT  ; Are there any more parameters?
cp $2c           ; cp $2c           | 044632 0445F4 || 044632 FE 2C       11418     CP ','
ld c,$05         ; ld c,$05         | 044634 0445F6 || 044634 0E 05       11419     LD C, 05h  ; Code for LINE
jr nz,$-$37      ; jr nz,$-$37      | 044636 0445F8 || 044636 20 C7       11420     JR NZ, PLOT_1 ; No, so just do DRAW x1,y1
ld a,$19         ; ld a,$19         | 044638 0445FA || 044638 3E 19       0001M   LD A, val
call $043f38     ; call $043f00     | 04463A 0445FC || 04463A CD 38 3F 04 0002M   CALL OSWRCH
ld a,$04         ; ld a,$04         | 04463E 044600 || 04463E 3E 04       0001M   LD A, val
call $043f38     ; call $043f00     | 044640 044602 || 044640 CD 38 3F 04 0002M   CALL OSWRCH
ld a,e           ; ld a,e           | 044644 044606 || 044644 7B          0001M   LD A, val
call $043f38     ; call $043f00     | 044645 044607 || 044645 CD 38 3F 04 0002M   CALL OSWRCH
ld a,d           ; ld a,d           | 044649 04460B || 044649 7A          0001M   LD A, val
call $043f38     ; call $043f00     | 04464A 04460C || 04464A CD 38 3F 04 0002M   CALL OSWRCH
ld a,l           ; ld a,l           | 04464E 044610 || 04464E 7D          0001M   LD A, val
call $043f38     ; call $043f00     | 04464F 044611 || 04464F CD 38 3F 04 0002M   CALL OSWRCH
ld a,h           ; ld a,h           | 044653 044615 || 044653 7C          0001M   LD A, val
call $043f38     ; call $043f00     | 044654 044616 || 044654 CD 38 3F 04 0002M   CALL OSWRCH
call $040a2a     ; call $040a22     | 044658 04461A || 044658 CD 2A 0A 04 11427     CALL COMMA
push bc          ; push bc          | 04465C 04461E || 04465C C5          11428     PUSH BC
call $0443ee     ; call $0443a5     | 04465D 04461F || 04465D CD EE 43 04 11429     CALL EXPR_W2  ; Get X2 and Y2
pop bc           ; pop bc           | 044661 044623 || 044661 C1          11430     POP BC
jr $-$63         ; jr $-$63         | 044662 044624 || 044662 18 9B       11431     JR PLOT_1  ; Now DRAW the line to those positions
call $0443ee     ; call $0443a5     | 044664 044626 || 044664 CD EE 43 04 11469  SOUND:   CALL EXPR_W2   ; DE: Channel/Control, HL: Volume
ld a,l           ; ld a,l           | 044668 04462A || 044668 7D          11470     LD A, L    ;  A: Volume
push af          ; push af          | 044669 04462B || 044669 F5          11471     PUSH AF
push de          ; push de          | 04466A 04462C || 04466A D5          11472     PUSH DE
call $040a2a     ; call $040a22     | 04466B 04462D || 04466B CD 2A 0A 04 11473     CALL COMMA
call $0443ee     ; call $0443a5     | 04466F 044631 || 04466F CD EE 43 04 11474     CALL EXPR_W2   ; DE: Pitch, HL: Duration
ld d,e           ; ld d,e           | 044673 044635 || 044673 53          11475     LD D, E   ;  D: Pitch
ld e,l           ; ld e,l           | 044674 044636 || 044674 5D          11476     LD E, L    ;  E: Duration
pop hl           ; pop hl           | 044675 044637 || 044675 E1          11477     POP HL    ; HL: Channel/Control
pop af           ; pop af           | 044676 044638 || 044676 F1          11478     POP AF
neg              ; neg              | 044677 044639 || 044677 ED 44       11479     NEG
cp $10           ; cp $10           | 044679 04463B || 044679 FE 10       11480     CP 16   ; Check volume is in bounds
jp nc,$040b9e    ; jp nc,$040b96    | 04467B 04463D || 04467B D2 9E 0B 04 11481     JP NC, XEQ   ; Out of bounds, do nothing
ld c,a           ; ld c,a           | 04467F 044641 || 04467F 4F          11485     LD C, A   ; Store Volume in C
ld a,l           ; ld a,l           | 044680 044642 || 044680 7D          11486     LD A, L
ld ($044a00),a   ; ld ($044a00),a   | 044681 044643 || 044681 32 00 4A 04 11487     LD (VDU_BUFFER+0), A ; Channel
xor a            ; xor a            | 044685 044647 || 044685 AF          11488     XOR A
ld ($044a01),a   ; ld ($044a01),a   | 044686 044648 || 044686 32 01 4A 04 11489     LD (VDU_BUFFER+1), A ; Waveform
ld b,$06         ; ld b,$06         | 04468A 04464C || 04468A 06 06       11493     LD B, 6   ; C already contains the volume
mlt bc           ; mlt bc           | 04468C 04464E || 04468C ED 4C       11494     MLT BC   ; Multiply by 6 (0-15 scales to 0-90)
ld a,c           ; ld a,c           | 04468E 044650 || 04468E 79          11495     LD A, C
ld ($044a02),a   ; ld ($044a02),a   | 04468F 044651 || 04468F 32 02 4A 04 11496     LD (VDU_BUFFER+2), A
ld c,e           ; ld c,e           | 044693 044655 || 044693 4B          11500     LD C, E   ; Store duration in C
ld h,$00         ; ld h,$00         | 044694 044656 || 044694 26 00       11501     LD H, 0   ; Lookup the frequency
ld l,d           ; ld l,d           | 044696 044658 || 044696 6A          11502     LD L, D
ld de,$04471e    ; ld de,$0446e0    | 044697 044659 || 044697 11 1E 47 04 11503     LD DE, SOUND_FREQ_LOOKUP
add hl,hl        ; add hl,hl        | 04469B 04465D || 04469B 29          11504     ADD HL, HL
add hl,de        ; add hl,de        | 04469C 04465E || 04469C 19          11505     ADD HL, DE
ld a,(hl)        ; ld a,(hl)        | 04469D 04465F || 04469D 7E          11506     LD A, (HL)
ld ($044a03),a   ; ld ($044a03),a   | 04469E 044660 || 04469E 32 03 4A 04 11507     LD (VDU_BUFFER+3), A
inc hl           ; inc hl           | 0446A2 044664 || 0446A2 23          11508     INC HL
ld a,(hl)        ; ld a,(hl)        | 0446A3 044665 || 0446A3 7E          11509     LD A, (HL)
ld ($044a04),a   ; ld ($044a04),a   | 0446A4 044666 || 0446A4 32 04 4A 04 11510     LD (VDU_BUFFER+4), A
ld b,$32         ; ld b,$32         | 0446A8 04466A || 0446A8 06 32       11514     LD B, 50   ; C contains the duration, so MLT by 50
mlt bc           ; mlt bc           | 0446AA 04466C || 0446AA ED 4C       11515     MLT BC
ld ($044a05),bc  ; ld ($044a05),bc  | 0446AC 04466E || 0446AC ED 43 05 4A 11516     LD (VDU_BUFFER+5), BC
push ix          ; push ix          | 0446B1 044673 || 0446B1 DD E5       11518     PUSH IX   ; Get the system vars in IX
ld a,$08         ; ld a,$08         | 0446B3 044675 || 0446B3 3E 08       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 0446B5 044677 || 0446B5 49 CF       0002M    RST.LIS 08h
res.lil 3,(ix+$0 ; res.lil 3,(ix+$0 | 0446B7 044679 || 0446B7 5B DD CB 04 11520  SOUND0:   RES.LIL 3, (IX+sysvar_vpd_pflags)
ld a,$17         ; ld a,$17         | 0446BC 04467E || 0446BC 3E 17       0001M   LD A, val
call $043f38     ; call $043f00     | 0446BE 044680 || 0446BE CD 38 3F 04 0002M   CALL OSWRCH
ld a,$00         ; ld a,$00         | 0446C2 044684 || 0446C2 3E 00       0001M   LD A, val
call $043f38     ; call $043f00     | 0446C4 044686 || 0446C4 CD 38 3F 04 0002M   CALL OSWRCH
ld a,$85         ; ld a,$85         | 0446C8 04468A || 0446C8 3E 85       0001M   LD A, val
call $043f38     ; call $043f00     | 0446CA 04468C || 0446CA CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a00)   ; ld a,($044a00)   | 0446CE 044690 || 0446CE 3A 00 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 0446D2 044694 || 0446D2 CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a01)   ; ld a,($044a01)   | 0446D6 044698 || 0446D6 3A 01 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 0446DA 04469C || 0446DA CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a02)   ; ld a,($044a02)   | 0446DE 0446A0 || 0446DE 3A 02 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 0446E2 0446A4 || 0446E2 CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a03)   ; ld a,($044a03)   | 0446E6 0446A8 || 0446E6 3A 03 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 0446EA 0446AC || 0446EA CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a04)   ; ld a,($044a04)   | 0446EE 0446B0 || 0446EE 3A 04 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 0446F2 0446B4 || 0446F2 CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a05)   ; ld a,($044a05)   | 0446F6 0446B8 || 0446F6 3A 05 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 0446FA 0446BC || 0446FA CD 38 3F 04 0002M   CALL OSWRCH
ld a,($044a06)   ; ld a,($044a06)   | 0446FE 0446C0 || 0446FE 3A 06 4A 04 0001M   LD A, val
call $043f38     ; call $043f00     | 044702 0446C4 || 044702 CD 38 3F 04 0002M   CALL OSWRCH
bit.lil 3,(ix+$0 ; bit.lil 3,(ix+$0 | 044706 0446C8 || 044706 5B DD CB 04 11535  @@:   BIT.LIL 3, (IX+sysvar_vpd_pflags)
jr z,$-$05       ; jr z,$-$05       | 04470B 0446CD || 04470B 28 F9       11536     JR Z, @B   ; Wait for the result
call $043fa9     ; call $043f71     | 04470D 0446CF || 04470D CD A9 3F 04 11537     CALL LTRAP   ; Check for ESC
ld.lil a,(ix+$0e ; ld.lil a,(ix+$0e | 044711 0446D3 || 044711 5B DD 7E 0E 11538     LD.LIL A, (IX+sysvar_audioSuccess)
and a            ; and a            | 044715 0446D7 || 044715 A7          11539     AND A   ; Check if VDP has queued the note
jr z,$-$5f       ; jr z,$-$5f       | 044716 0446D8 || 044716 28 9F       11540     JR Z, SOUND0  ; No, so loop back and send again
pop ix           ; pop ix           | 044718 0446DA || 044718 DD E1       11542     POP IX
jp $040b9e       ; jp $040b96       | 04471A 0446DC || 04471A C3 9E 0B 04 11543     JP XEQ
ld (hl),l        ; ld (hl),l        | 04471E 0446E0 || 04471E 75 00 76 00 11567  SOUND_FREQ_LOOKUP: DW  117,  118,  120,  122,  123,  131,  133,  135
nop              ;                  | 04471F        || nop                            ; 0446E1
halt             ;                  | 044720        || halt                           ; 0446E2
nop              ;                  | 044721        || nop                            ; 0446E3
ld a,b           ;                  | 044722        || ld a,b                         ; 0446E4
nop              ;                  | 044723        || nop                            ; 0446E5
ld a,d           ;                  | 044724        || ld a,d                         ; 0446E6
nop              ;                  | 044725        || nop                            ; 0446E7
ld a,e           ;                  | 044726        || ld a,e                         ; 0446E8
nop              ;                  | 044727        || nop                            ; 0446E9
add a,e          ;                  | 044728        || add a,e                        ; 0446EA
nop              ;                  | 044729        || nop                            ; 0446EB
add a,l          ;                  | 04472A        || add a,l                        ; 0446EC
nop              ;                  | 04472B        || nop                            ; 0446ED
add a,a          ;                  | 04472C        || add a,a                        ; 0446EE
nop              ;                  | 04472D        || nop                            ; 0446EF
adc a,c          ; adc a,c          | 04472E 0446F0 || 04472E 89 00 8B 00 11568     DW  137,  139,  141,  143,  145,  147,  149,  151
nop              ;                  | 04472F        || nop                            ; 0446F1
adc a,e          ;                  | 044730        || adc a,e                        ; 0446F2
nop              ;                  | 044731        || nop                            ; 0446F3
adc a,l          ;                  | 044732        || adc a,l                        ; 0446F4
nop              ;                  | 044733        || nop                            ; 0446F5
adc a,a          ;                  | 044734        || adc a,a                        ; 0446F6
nop              ;                  | 044735        || nop                            ; 0446F7
sub c            ;                  | 044736        || sub c                          ; 0446F8
nop              ;                  | 044737        || nop                            ; 0446F9
sub e            ;                  | 044738        || sub e                          ; 0446FA
nop              ;                  | 044739        || nop                            ; 0446FB
sub l            ;                  | 04473A        || sub l                          ; 0446FC
nop              ;                  | 04473B        || nop                            ; 0446FD
sub a            ;                  | 04473C        || sub a                          ; 0446FE
nop              ;                  | 04473D        || nop                            ; 0446FF
sbc a,c          ; sbc a,c          | 04473E 044700 || 04473E 99 00 9C 00 11569     DW  153,  156,  158,  160,  162,  165,  167,  170
nop              ;                  | 04473F        || nop                            ; 044701
sbc a,h          ;                  | 044740        || sbc a,h                        ; 044702
nop              ;                  | 044741        || nop                            ; 044703
sbc a,(hl)       ;                  | 044742        || sbc a,(hl)                     ; 044704
nop              ;                  | 044743        || nop                            ; 044705
and b            ;                  | 044744        || and b                          ; 044706
nop              ;                  | 044745        || nop                            ; 044707
and d            ;                  | 044746        || and d                          ; 044708
nop              ;                  | 044747        || nop                            ; 044709
and l            ;                  | 044748        || and l                          ; 04470A
nop              ;                  | 044749        || nop                            ; 04470B
and a            ;                  | 04474A        || and a                          ; 04470C
nop              ;                  | 04474B        || nop                            ; 04470D
xor d            ;                  | 04474C        || xor d                          ; 04470E
nop              ;                  | 04474D        || nop                            ; 04470F
xor h            ; xor h            | 04474E 044710 || 04474E AC 00 AF 00 11570     DW  172,  175,  177,  180,  182,  185,  188,  190
nop              ;                  | 04474F        || nop                            ; 044711
xor a            ;                  | 044750        || xor a                          ; 044712
nop              ;                  | 044751        || nop                            ; 044713
or c             ;                  | 044752        || or c                           ; 044714
nop              ;                  | 044753        || nop                            ; 044715
or h             ;                  | 044754        || or h                           ; 044716
nop              ;                  | 044755        || nop                            ; 044717
or (hl)          ;                  | 044756        || or (hl)                        ; 044718
nop              ;                  | 044757        || nop                            ; 044719
cp c             ;                  | 044758        || cp c                           ; 04471A
nop              ;                  | 044759        || nop                            ; 04471B
cp h             ;                  | 04475A        || cp h                           ; 04471C
nop              ;                  | 04475B        || nop                            ; 04471D
cp (hl)          ;                  | 04475C        || cp (hl)                        ; 04471E
nop              ;                  | 04475D        || nop                            ; 04471F
pop bc           ; pop bc           | 04475E 044720 || 04475E C1 00 C4 00 11571     DW  193,  196,  199,  202,  205,  208,  211,  214
nop              ;                  | 04475F        || nop                            ; 044721
call nz,$00c700  ;                  | 044760        || call nz,$00c700                ; 044722
jp z,$00cd00     ;                  | 044764        || jp z,$00cd00                   ; 044726
ret nc           ;                  | 044768        || ret nc                         ; 04472A
nop              ;                  | 044769        || nop                            ; 04472B
out ($00),a      ;                  | 04476A        || out ($00),a                    ; 04472C
sub $00          ;                  | 04476C        || sub $00                        ; 04472E
exx              ; exx              | 04476E 044730 || 04476E D9 00 DC 00 11572     DW  217,  220,  223,  226,  230,  233,  236,  240
nop              ;                  | 04476F        || nop                            ; 044731
call c,$00df00   ;                  | 044770        || call c,$00df00                 ; 044732
jp po,$00e600    ;                  | 044774        || jp po,$00e600                  ; 044736
jp (hl)          ;                  | 044778        || jp (hl)                        ; 04473A
nop              ;                  | 044779        || nop                            ; 04473B
call pe,$00f000  ;                  | 04477A        || call pe,$00f000                ; 04473C
di               ; di               | 04477E 044740 || 04477E F3 00 F7 00 11573     DW  243,  247,  251,  254,  258,  262,  265,  269
nop              ;                  | 04477F        || nop                            ; 044741
rst $30          ;                  | 044780        || rst $30                        ; 044742
nop              ;                  | 044781        || nop                            ; 044743
ei               ;                  | 044782        || ei                             ; 044744
nop              ;                  | 044783        || nop                            ; 044745
cp $00           ;                  | 044784        || cp $00                         ; 044746
ld (bc),a        ;                  | 044786        || ld (bc),a                      ; 044748
ld bc,$090106    ;                  | 044787        || ld bc,$090106                  ; 044749
ld bc,$11010d    ;                  | 04478B        || ld bc,$11010d                  ; 04474D
ld bc,$190115    ;                  | 04478F        || ld bc,$190115                  ; 044751
ld bc,$21011d    ;                  | 044793        || ld bc,$21011d                  ; 044755
ld bc,$2a0126    ;                  | 044797        || ld bc,$2a0126                  ; 044759
ld bc,$33012e    ;                  | 04479B        || ld bc,$33012e                  ; 04475D
ld bc,$3c0137    ;                  | 04479F        || ld bc,$3c0137                  ; 044761
ld bc,$450140    ;                  | 0447A3        || ld bc,$450140                  ; 044765
ld bc,$4e014a    ;                  | 0447A7        || ld bc,$4e014a                  ; 044769
ld bc,$580153    ;                  | 0447AB        || ld bc,$580153                  ; 04476D
ld bc,$62015d    ;                  | 0447AF        || ld bc,$62015d                  ; 044771
ld bc,$6d0167    ;                  | 0447B3        || ld bc,$6d0167                  ; 044775
ld bc,$770172    ;                  | 0447B7        || ld bc,$770172                  ; 044779
ld bc,$82017d    ;                  | 0447BB        || ld bc,$82017d                  ; 04477D
ld bc,$8e0188    ;                  | 0447BF        || ld bc,$8e0188                  ; 044781
ld bc,$990193    ;                  | 0447C3        || ld bc,$990193                  ; 044785
ld bc,$a5019f    ;                  | 0447C7        || ld bc,$a5019f                  ; 044789
ld bc,$b201ab    ;                  | 0447CB        || ld bc,$b201ab                  ; 04478D
ld bc,$be01b8    ;                  | 0447CF        || ld bc,$be01b8                  ; 044791
ld bc,$cb01c5    ;                  | 0447D3        || ld bc,$cb01c5                  ; 044795
ld bc,$d901d2    ;                  | 0447D7        || ld bc,$d901d2                  ; 044799
ld bc,$e701e0    ;                  | 0447DB        || ld bc,$e701e0                  ; 04479D
ld bc,$f501ee    ;                  | 0447DF        || ld bc,$f501ee                  ; 0447A1
ld bc,$0401fc    ;                  | 0447E3        || ld bc,$0401fc                  ; 0447A5
ld (bc),a        ;                  | 0447E7        || ld (bc),a                      ; 0447A9
dec bc           ;                  | 0447E8        || dec bc                         ; 0447AA
ld (bc),a        ;                  | 0447E9        || ld (bc),a                      ; 0447AB
inc de           ;                  | 0447EA        || inc de                         ; 0447AC
ld (bc),a        ;                  | 0447EB        || ld (bc),a                      ; 0447AD
dec de           ;                  | 0447EC        || dec de                         ; 0447AE
ld (bc),a        ;                  | 0447ED        || ld (bc),a                      ; 0447AF
ld ($022a02),hl  ; ld ($022a02),hl  | 0447EE 0447B0 || 0447EE 22 02 2A 02 11580     DW  546,  554,  562,  571,  579,  587,  596,  605
ld ($023b02),a   ;                  | 0447F2        || ld ($023b02),a                 ; 0447B4
ld b,e           ;                  | 0447F6        || ld b,e                         ; 0447B8
ld (bc),a        ;                  | 0447F7        || ld (bc),a                      ; 0447B9
ld c,e           ;                  | 0447F8        || ld c,e                         ; 0447BA
ld (bc),a        ;                  | 0447F9        || ld (bc),a                      ; 0447BB
ld d,h           ;                  | 0447FA        || ld d,h                         ; 0447BC
ld (bc),a        ;                  | 0447FB        || ld (bc),a                      ; 0447BD
ld e,l           ;                  | 0447FC        || ld e,l                         ; 0447BE
ld (bc),a        ;                  | 0447FD        || ld (bc),a                      ; 0447BF
ld h,l           ; ld h,l           | 0447FE 0447C0 || 0447FE 65 02 6E 02 11581     DW  613,  622,  631,  641,  650,  659,  669,  679
ld (bc),a        ;                  | 0447FF        || ld (bc),a                      ; 0447C1
ld l,(hl)        ;                  | 044800        || ld l,(hl)                      ; 0447C2
ld (bc),a        ;                  | 044801        || ld (bc),a                      ; 0447C3
ld (hl),a        ;                  | 044802        || ld (hl),a                      ; 0447C4
ld (bc),a        ;                  | 044803        || ld (bc),a                      ; 0447C5
add a,c          ;                  | 044804        || add a,c                        ; 0447C6
ld (bc),a        ;                  | 044805        || ld (bc),a                      ; 0447C7
adc a,d          ;                  | 044806        || adc a,d                        ; 0447C8
ld (bc),a        ;                  | 044807        || ld (bc),a                      ; 0447C9
sub e            ;                  | 044808        || sub e                          ; 0447CA
ld (bc),a        ;                  | 044809        || ld (bc),a                      ; 0447CB
sbc a,l          ;                  | 04480A        || sbc a,l                        ; 0447CC
ld (bc),a        ;                  | 04480B        || ld (bc),a                      ; 0447CD
and a            ;                  | 04480C        || and a                          ; 0447CE
ld (bc),a        ;                  | 04480D        || ld (bc),a                      ; 0447CF
or c             ; or c             | 04480E 0447D0 || 04480E B1 02 BB 02 11582     DW  689,  699,  709,  719,  729,  740,  751,  762
ld (bc),a        ;                  | 04480F        || ld (bc),a                      ; 0447D1
cp e             ;                  | 044810        || cp e                           ; 0447D2
ld (bc),a        ;                  | 044811        || ld (bc),a                      ; 0447D3
push bc          ;                  | 044812        || push bc                        ; 0447D4
ld (bc),a        ;                  | 044813        || ld (bc),a                      ; 0447D5
rst $08          ;                  | 044814        || rst $08                        ; 0447D6
ld (bc),a        ;                  | 044815        || ld (bc),a                      ; 0447D7
exx              ;                  | 044816        || exx                            ; 0447D8
ld (bc),a        ;                  | 044817        || ld (bc),a                      ; 0447D9
call po,$02ef02  ;                  | 044818        || call po,$02ef02                ; 0447DA
jp m,$030502     ;                  | 04481C        || jp m,$030502                   ; 0447DE
djnz $+$05       ;                  | 044820        || djnz $+$05                     ; 0447E2
dec de           ;                  | 044822        || dec de                         ; 0447E4
inc bc           ;                  | 044823        || inc bc                         ; 0447E5
daa              ;                  | 044824        || daa                            ; 0447E6
inc bc           ;                  | 044825        || inc bc                         ; 0447E7
inc sp           ;                  | 044826        || inc sp                         ; 0447E8
inc bc           ;                  | 044827        || inc bc                         ; 0447E9
ccf              ;                  | 044828        || ccf                            ; 0447EA
inc bc           ;                  | 044829        || inc bc                         ; 0447EB
ld c,e           ;                  | 04482A        || ld c,e                         ; 0447EC
inc bc           ;                  | 04482B        || inc bc                         ; 0447ED
ld d,a           ;                  | 04482C        || ld d,a                         ; 0447EE
inc bc           ;                  | 04482D        || inc bc                         ; 0447EF
ld h,e           ; ld h,e           | 04482E 0447F0 || 04482E 63 03 70 03 11584     DW  867,  880,  893,  906,  919,  932,  946,  960
inc bc           ;                  | 04482F        || inc bc                         ; 0447F1
ld (hl),b        ;                  | 044830        || ld (hl),b                      ; 0447F2
inc bc           ;                  | 044831        || inc bc                         ; 0447F3
ld a,l           ;                  | 044832        || ld a,l                         ; 0447F4
inc bc           ;                  | 044833        || inc bc                         ; 0447F5
adc a,d          ;                  | 044834        || adc a,d                        ; 0447F6
inc bc           ;                  | 044835        || inc bc                         ; 0447F7
sub a            ;                  | 044836        || sub a                          ; 0447F8
inc bc           ;                  | 044837        || inc bc                         ; 0447F9
and h            ;                  | 044838        || and h                          ; 0447FA
inc bc           ;                  | 044839        || inc bc                         ; 0447FB
or d             ;                  | 04483A        || or d                           ; 0447FC
inc bc           ;                  | 04483B        || inc bc                         ; 0447FD
ret nz           ;                  | 04483C        || ret nz                         ; 0447FE
inc bc           ;                  | 04483D        || inc bc                         ; 0447FF
adc a,$03        ; adc a,$03        | 04483E 044800 || 04483E CE 03 DC 03 11585     DW  974,  988, 1002, 1017, 1032, 1047, 1062, 1078
call c,$03ea03   ;                  | 044840        || call c,$03ea03                 ; 044802
ld sp,hl         ;                  | 044844        || ld sp,hl                       ; 044806
inc bc           ;                  | 044845        || inc bc                         ; 044807
ex af,af'        ;                  | 044846        || ex af,af'                      ; 044808
inc b            ;                  | 044847        || inc b                          ; 044809
rla              ;                  | 044848        || rla                            ; 04480A
inc b            ;                  | 044849        || inc b                          ; 04480B
ld h,$04         ;                  | 04484A        || ld h,$04                       ; 04480C
ld (hl),$04      ;                  | 04484C        || ld (hl),$04                    ; 04480E
ld b,l           ; ld b,l           | 04484E 044810 || 04484E 45 04 55 04 11586     DW 1093, 1109, 1125, 1142, 1158, 1175, 1192, 1210
inc b            ;                  | 04484F        || inc b                          ; 044811
ld d,l           ;                  | 044850        || ld d,l                         ; 044812
inc b            ;                  | 044851        || inc b                          ; 044813
ld h,l           ;                  | 044852        || ld h,l                         ; 044814
inc b            ;                  | 044853        || inc b                          ; 044815
halt             ;                  | 044854        || halt                           ; 044816
inc b            ;                  | 044855        || inc b                          ; 044817
add a,(hl)       ;                  | 044856        || add a,(hl)                     ; 044818
inc b            ;                  | 044857        || inc b                          ; 044819
sub a            ;                  | 044858        || sub a                          ; 04481A
inc b            ;                  | 044859        || inc b                          ; 04481B
xor b            ;                  | 04485A        || xor b                          ; 04481C
inc b            ;                  | 04485B        || inc b                          ; 04481D
cp d             ;                  | 04485C        || cp d                           ; 04481E
inc b            ;                  | 04485D        || inc b                          ; 04481F
rlc h            ; rlc h            | 04485E 044820 || 04485E CB 04 DD 04 11587     DW 1227, 1245, 1263, 1282, 1300, 1319, 1338, 1358
trap             ;                  | 044860        || trap                           ; 044822
rst $28          ;                  | 044862        || rst $28                        ; 044824
inc b            ;                  | 044863        || inc b                          ; 044825
ld (bc),a        ;                  | 044864        || ld (bc),a                      ; 044826
dec b            ;                  | 044865        || dec b                          ; 044827
inc d            ;                  | 044866        || inc d                          ; 044828
dec b            ;                  | 044867        || dec b                          ; 044829
daa              ;                  | 044868        || daa                            ; 04482A
dec b            ;                  | 044869        || dec b                          ; 04482B
ld a,($054e05)   ;                  | 04486A        || ld a,($054e05)                 ; 04482C
ld h,d           ; ld h,d           | 04486E 044830 || 04486E 62 05 76 05 11588     DW 1378, 1398, 1418, 1439, 1459, 1481, 1502, 1524
dec b            ;                  | 04486F        || dec b                          ; 044831
halt             ;                  | 044870        || halt                           ; 044832
dec b            ;                  | 044871        || dec b                          ; 044833
adc a,d          ;                  | 044872        || adc a,d                        ; 044834
dec b            ;                  | 044873        || dec b                          ; 044835
sbc a,a          ;                  | 044874        || sbc a,a                        ; 044836
dec b            ;                  | 044875        || dec b                          ; 044837
or e             ;                  | 044876        || or e                           ; 044838
dec b            ;                  | 044877        || dec b                          ; 044839
ret              ;                  | 044878        || ret                            ; 04483A
dec b            ;                  | 044879        || dec b                          ; 04483B
sbc a,$05        ;                  | 04487A        || sbc a,$05                      ; 04483C
call p,$060a05   ;                  | 04487C        || call p,$060a05                 ; 04483E
ld hl,$063806    ;                  | 044880        || ld hl,$063806                  ; 044842
ld c,a           ;                  | 044884        || ld c,a                         ; 044846
ld b,$66         ;                  | 044885        || ld b,$66                       ; 044847
ld b,$7e         ;                  | 044887        || ld b,$7e                       ; 044849
ld b,$96         ;                  | 044889        || ld b,$96                       ; 04484B
ld b,$af         ;                  | 04488B        || ld b,$af                       ; 04484D
ld b,$c8         ;                  | 04488D        || ld b,$c8                       ; 04484F
ld b,$e1         ;                  | 04488F        || ld b,$e1                       ; 044851
ld b,$fa         ;                  | 044891        || ld b,$fa                       ; 044853
ld b,$14         ;                  | 044893        || ld b,$14                       ; 044855
rlca             ;                  | 044895        || rlca                           ; 044857
cpl              ;                  | 044896        || cpl                            ; 044858
rlca             ;                  | 044897        || rlca                           ; 044859
ld c,d           ;                  | 044898        || ld c,d                         ; 04485A
rlca             ;                  | 044899        || rlca                           ; 04485B
ld h,l           ;                  | 04489A        || ld h,l                         ; 04485C
rlca             ;                  | 04489B        || rlca                           ; 04485D
add a,b          ;                  | 04489C        || add a,b                        ; 04485E
rlca             ;                  | 04489D        || rlca                           ; 04485F
sbc a,h          ; sbc a,h          | 04489E 044860 || 04489E 9C 07 B8 07 11591     DW 1948, 1976, 2005, 2034, 2064, 2093, 2123, 2154
rlca             ;                  | 04489F        || rlca                           ; 044861
cp b             ;                  | 0448A0        || cp b                           ; 044862
rlca             ;                  | 0448A1        || rlca                           ; 044863
push de          ;                  | 0448A2        || push de                        ; 044864
rlca             ;                  | 0448A3        || rlca                           ; 044865
jp p,$081007     ;                  | 0448A4        || jp p,$081007                   ; 044866
dec l            ;                  | 0448A8        || dec l                          ; 04486A
ex af,af'        ;                  | 0448A9        || ex af,af'                      ; 04486B
ld c,e           ;                  | 0448AA        || ld c,e                         ; 04486C
ex af,af'        ;                  | 0448AB        || ex af,af'                      ; 04486D
ld l,d           ;                  | 0448AC        || ld l,d                         ; 04486E
ex af,af'        ;                  | 0448AD        || ex af,af'                      ; 04486F
adc a,d          ; adc a,d          | 0448AE 044870 || 0448AE 8A 08 A9 08 11592     DW 2186, 2217, 2250, 2282, 2316, 2349, 2383, 2418
ex af,af'        ;                  | 0448AF        || ex af,af'                      ; 044871
xor c            ;                  | 0448B0        || xor c                          ; 044872
ex af,af'        ;                  | 0448B1        || ex af,af'                      ; 044873
jp z,$08ea08     ;                  | 0448B2        || jp z,$08ea08                   ; 044874
inc c            ;                  | 0448B6        || inc c                          ; 044878
add hl,bc        ;                  | 0448B7        || add hl,bc                      ; 044879
dec l            ;                  | 0448B8        || dec l                          ; 04487A
add hl,bc        ;                  | 0448B9        || add hl,bc                      ; 04487B
ld c,a           ;                  | 0448BA        || ld c,a                         ; 04487C
add hl,bc        ;                  | 0448BB        || add hl,bc                      ; 04487D
ld (hl),d        ;                  | 0448BC        || ld (hl),d                      ; 04487E
add hl,bc        ;                  | 0448BD        || add hl,bc                      ; 04487F
sub l            ; sub l            | 0448BE 044880 || 0448BE 95 09 B9 09 11593     DW 2453, 2489, 2525, 2562, 2599, 2637, 2675, 2714
add hl,bc        ;                  | 0448BF        || add hl,bc                      ; 044881
cp c             ;                  | 0448C0        || cp c                           ; 044882
add hl,bc        ;                  | 0448C1        || add hl,bc                      ; 044883
add ix,bc        ;                  | 0448C2        || add ix,bc                      ; 044884
ld (bc),a        ;                  | 0448C4        || ld (bc),a                      ; 044886
ld a,(bc)        ;                  | 0448C5        || ld a,(bc)                      ; 044887
daa              ;                  | 0448C6        || daa                            ; 044888
ld a,(bc)        ;                  | 0448C7        || ld a,(bc)                      ; 044889
ld c,l           ;                  | 0448C8        || ld c,l                         ; 04488A
ld a,(bc)        ;                  | 0448C9        || ld a,(bc)                      ; 04488B
ld (hl),e        ;                  | 0448CA        || ld (hl),e                      ; 04488C
ld a,(bc)        ;                  | 0448CB        || ld a,(bc)                      ; 04488D
sbc a,d          ;                  | 0448CC        || sbc a,d                        ; 04488E
ld a,(bc)        ;                  | 0448CD        || ld a,(bc)                      ; 04488F
jp nz,$0aea0a    ; jp nz,$0aea0a    | 0448CE 044890 || 0448CE C2 0A EA 0A 11594     DW 2754, 2794, 2834, 2876, 2918, 2960, 3003, 3047
ld (de),a        ;                  | 0448D2        || ld (de),a                      ; 044894
dec bc           ;                  | 0448D3        || dec bc                         ; 044895
inc a            ;                  | 0448D4        || inc a                          ; 044896
dec bc           ;                  | 0448D5        || dec bc                         ; 044897
ld h,(hl)        ;                  | 0448D6        || ld h,(hl)                      ; 044898
dec bc           ;                  | 0448D7        || dec bc                         ; 044899
sub b            ;                  | 0448D8        || sub b                          ; 04489A
dec bc           ;                  | 0448D9        || dec bc                         ; 04489B
cp e             ;                  | 0448DA        || cp e                           ; 04489C
dec bc           ;                  | 0448DB        || dec bc                         ; 04489D
rst $20          ;                  | 0448DC        || rst $20                        ; 04489E
dec bc           ;                  | 0448DD        || dec bc                         ; 04489F
inc de           ; inc de           | 0448DE 0448A0 || 0448DE 13 0C 40 0C 11595     DW 3091, 3136, 3182, 3228, 3275, 3322, 3371, 3420
inc c            ;                  | 0448DF        || inc c                          ; 0448A1
inc.sis c        ;                  | 0448E0        || inc.sis c                      ; 0448A2
ld l,(hl)        ;                  | 0448E2        || ld l,(hl)                      ; 0448A4
inc c            ;                  | 0448E3        || inc c                          ; 0448A5
sbc a,h          ;                  | 0448E4        || sbc a,h                        ; 0448A6
inc c            ;                  | 0448E5        || inc c                          ; 0448A7
rrc h            ;                  | 0448E6        || rrc h                          ; 0448A8
jp m,$0d2b0c     ;                  | 0448E8        || jp m,$0d2b0c                   ; 0448AA
ld e,h           ;                  | 0448EC        || ld e,h                         ; 0448AE
dec c            ;                  | 0448ED        || dec c                          ; 0448AF
adc a,(hl)       ; adc a,(hl)       | 0448EE 0448B0 || 0448EE 8E 0D C0 0D 11596     DW 3470, 3520, 3571, 3623, 3676, 3729, 3784, 3839
dec c            ;                  | 0448EF        || dec c                          ; 0448B1
ret nz           ;                  | 0448F0        || ret nz                         ; 0448B2
dec c            ;                  | 0448F1        || dec c                          ; 0448B3
di               ;                  | 0448F2        || di                             ; 0448B4
dec c            ;                  | 0448F3        || dec c                          ; 0448B5
daa              ;                  | 0448F4        || daa                            ; 0448B6
ld c,$5c         ;                  | 0448F5        || ld c,$5c                       ; 0448B7
ld c,$91         ;                  | 0448F7        || ld c,$91                       ; 0448B9
ld c,$c8         ;                  | 0448F9        || ld c,$c8                       ; 0448BB
ld c,$ff         ;                  | 0448FB        || ld c,$ff                       ; 0448BD
ld c,$36         ;                  | 0448FD        || ld c,$36                       ; 0448BF
rrca             ;                  | 0448FF        || rrca                           ; 0448C1
ld l,a           ;                  | 044900        || ld l,a                         ; 0448C2
rrca             ;                  | 044901        || rrca                           ; 0448C3
xor c            ;                  | 044902        || xor c                          ; 0448C4
rrca             ;                  | 044903        || rrca                           ; 0448C5
ex (sp),hl       ;                  | 044904        || ex (sp),hl                     ; 0448C6
rrca             ;                  | 044905        || rrca                           ; 0448C7
ld e,$10         ;                  | 044906        || ld e,$10                       ; 0448C8
ld e,d           ;                  | 044908        || ld e,d                         ; 0448CA
djnz $-$67       ;                  | 044909        || djnz $-$67                     ; 0448CB
djnz $-$29       ;                  | 04490B        || djnz $-$29                     ; 0448CD
djnz $+$15       ;                  | 04490D        || djnz $+$15                     ; 0448CF
ld de,$931153    ;                  | 04490F        || ld de,$931153                  ; 0448D1
ld de,$1711d5    ;                  | 044913        || ld de,$1711d5                  ; 0448D5
ld (de),a        ;                  | 044917        || ld (de),a                      ; 0448D9
ld.lil (de),a    ;                  | 044918        || ld.lil (de),a                  ; 0448DA
sbc a,a          ;                  | 04491A        || sbc a,a                        ; 0448DC
ld (de),a        ;                  | 04491B        || ld (de),a                      ; 0448DD
call po,$21f312  ;                  | 04491C        || call po,$21f312                ; 0448DE
ld (hl),e        ;                  | 044920        || 
inc.lis b        ;                  | 044921        || inc.lis b                      ; 0448E3
ld e,$32         ; ld e,$32         | 044923 0448E5 || 044923 1E 32       11634     LD  E, 32h    ; Set up the VBlank Interrupt Vector
ld a,$14         ; ld a,$14         | 044925 0448E7 || 044925 3E 14       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 044927 0448E9 || 044927 49 CF       0002M    RST.LIS 08h
ex de,hl         ; ex de,hl         | 044929 0448EB || 044929 EB          11637     ex de,hl
ld hl,$044981    ; ld hl,$044943    | 04492A 0448EC || 04492A 21 81 49 04 11638     LD  HL, VBLANK_HANDLER_JP + 1 ; Pointer to the JP address in this segment
ld (hl),de       ; ld (hl),de       | 04492E 0448F0 || 04492E ED 1F       11639     LD  (HL), DE   ; Self-modify the code
ei               ; ei               | 044930 0448F2 || 044930 FB          11640     EI
ret              ; ret              | 044931 0448F3 || 044931 C9          11641     RET
di               ; di               | 044932 0448F4 || 044932 F3          11645  VBLANK_STOP:  DI
ld hl,$044981    ; ld hl,$044943    | 044933 0448F5 || 044933 21 81 49 04 11646     LD  HL, VBLANK_HANDLER_JP + 1 ; Pointer to the JP address in this segment
ld de,(hl)       ; ld de,(hl)       | 044937 0448F9 || 044937 ED 17       11647     LD  DE, (HL)
ex de,hl         ; ex de,hl         | 044939 0448FB || 044939 EB          11648     EX  DE, HL     ; HLU: Address of MOS interrupt vector
ld e,$32         ; ld e,$32         | 04493A 0448FC || 04493A 1E 32       11649     LD  E, 32h
ld a,$14         ; ld a,$14         | 04493C 0448FE || 04493C 3E 14       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 04493E 044900 || 04493E 49 CF       0002M    RST.LIS 08h
ei               ; ei               | 044940 044902 || 044940 FB          11651     EI
ret              ; ret              | 044941 044903 || 044941 C9          11652     RET
ld a,$08         ; ld a,$08         | 044942 044904 || 044942 3E 08       0001M    LD A, function
rst.lis $08      ; rst.lis $08      | 044944 044906 || 044944 49 CF       0002M    RST.LIS 08h
ld hl,$044d49    ; ld hl,$044d49    | 044946 044908 || 044946 21 49 4D 04 11657     LD  HL, KEYCOUNT    ; Check whether the keycount has changed
ld a,(ix+$19)    ; ld a,(ix+$19)    | 04494A 04490C || 04494A DD 7E 19    11658     LD  A, (IX + sysvar_vkeycount) ; by comparing the MOS copy
cp (hl)          ; cp (hl)          | 04494D 04490F || 04494D BE          11659     CP   (HL)    ; with our local copy
jr nz,$+$0c      ; jr nz,$+$0c      | 04494E 044910 || 04494E 20 0A       11660     JR  NZ, DO_KEYBOARD_1  ; Yes it has, so jump to the next bit
xor a            ; xor a            | 044950 044912 || 044950 AF          11662  DO_KEYBOARD_0:  XOR  A     ; Clear the keyboard values
ld ($044d48),a   ; ld ($044d48),a   | 044951 044913 || 044951 32 48 4D 04 11663     LD  (KEYASCII), A
ld ($044d47),a   ; ld ($044d47),a   | 044955 044917 || 044955 32 47 4D 04 11664     LD  (KEYDOWN), A
ret              ; ret              | 044959 04491B || 044959 C9          11665     RET       ; And return
ld (hl),a        ; ld (hl),a        | 04495A 04491C || 04495A 77          11667  DO_KEYBOARD_1:  LD  (HL), A    ; Store the updated local copy of keycount
ld a,(ix+$18)    ; ld a,(ix+$18)    | 04495B 04491D || 04495B DD 7E 18    11668     LD  A, (IX + sysvar_vkeydown) ; Fetch key down value (1 = key down, 0 = key up)
or a             ; or a             | 04495E 044920 || 04495E B7          11669     OR  A
jr z,$-$0f       ; jr z,$-$0f       | 04495F 044921 || 04495F 28 EF       11670     JR  Z, DO_KEYBOARD_0  ; If it is key up, then clear the keyboard values
ld ($044d47),a   ; ld ($044d47),a   | 044961 044923 || 044961 32 47 4D 04 11672     LD  (KEYDOWN), A    ; Store the keydown value
ld a,(ix+$05)    ; ld a,(ix+$05)    | 044965 044927 || 044965 DD 7E 05    11673     LD  A, (IX + sysvar_keyascii) ; Fetch key ASCII value
ld ($044d48),a   ; ld ($044d48),a   | 044968 04492A || 044968 32 48 4D 04 11674     LD  (KEYASCII), A    ; Store locally
cp $1b           ; cp $1b           | 04496C 04492E || 04496C FE 1B       11675     CP  1Bh    ; Is it escape?
call z,$043f84   ; call z,$043f4c   | 04496E 044930 || 04496E CC 84 3F 04 11676     CALL  Z, ESCSET   ; Yes, so set the escape flags
ret              ; ret              | 044972 044934 || 044972 C9          11677     RET      ; Return to the interrupt handler
di               ;                  | 044973        || 044973 F3          11679  VBLANK_HANDLER:  DI
push af          ;                  | 044974        || 044974 F5          11680     PUSH  AF
push hl          ;                  | 044975        || 044975 E5          11681     PUSH  HL
push ix          ;                  | 044976        || 044976 DD E5       11682     PUSH  IX
call $044942     ;                  | 044978        || 044978 CD 42 49 04 11683     CALL  DO_KEYBOARD
pop ix           ;                  | 04497C        || 04497C DD E1       11684     POP  IX
pop hl           ;                  | 04497E        || 04497E E1          11685     POP  HL
pop af           ;                  | 04497F        || 04497F F1          11686     POP  AF
jp $000000       ;                  | 044980        || 044980 C3 00 00 00 11690  VBLANK_HANDLER_JP: JP  0    ; This is self-modified by VBLANK_INIT    ; --- End interrupts.asm ---
xor a            ;                  | 044984        || 044984 AF          11715     XOR     A
call $0437af     ;                  | 044985        || 044985 CD AF 37 04 11716     CALL    EXTERR
ld d,e           ;                  | 044989        || 044989 53 6F 72 72 11717     DEFB    "Sorry"
ld l,a           ;                  | 04498A        || 
ld (hl),d        ;                  | 04498B        || 
ld (hl),d        ;                  | 04498C        || 
ld a,c           ;                  | 04498D        || 
nop              ; nop              | 04498E 040010 || 04498E 00          11718     DEFB    0
rst $38          ; rst $38          | 04498F 040011 || 04498F FF FF FF FF 11782     ALIGN   256  ; ACCS, BUFFER & STAVAR must be on page boundaries
rst $38          ;                  | 044990        || rst $38                        ; 040012
rst $38          ;                  | 044991        || rst $38                        ; 040013
rst $38          ;                  | 044992        || rst $38                        ; 040014
rst $38          ;                  | 044993        || rst $38                        ; 040015
rst $38          ;                  | 044994        || rst $38                        ; 040016
rst $38          ;                  | 044995        || rst $38                        ; 040017
rst $38          ;                  | 044996        || rst $38                        ; 040018
rst $38          ;                  | 044997        || rst $38                        ; 040019
rst $38          ;                  | 044998        || rst $38                        ; 04001A
rst $38          ;                  | 044999        || rst $38                        ; 04001B
rst $38          ;                  | 04499A        || rst $38                        ; 04001C
rst $38          ;                  | 04499B        || rst $38                        ; 04001D
rst $38          ;                  | 04499C        || rst $38                        ; 04001E
rst $38          ;                  | 04499D        || rst $38                        ; 04001F
rst $38          ;                  | 04499E        || rst $38                        ; 040011
rst $38          ;                  | 04499F        || rst $38                        ; 040012
rst $38          ;                  | 0449A0        || rst $38                        ; 040013
rst $38          ;                  | 0449A1        || rst $38                        ; 040014
rst $38          ;                  | 0449A2        || rst $38                        ; 040015
rst $38          ;                  | 0449A3        || rst $38                        ; 040016
rst $38          ;                  | 0449A4        || rst $38                        ; 040017
rst $38          ;                  | 0449A5        || rst $38                        ; 040018
rst $38          ;                  | 0449A6        || rst $38                        ; 040019
rst $38          ;                  | 0449A7        || rst $38                        ; 04001A
rst $38          ;                  | 0449A8        || rst $38                        ; 04001B
rst $38          ;                  | 0449A9        || rst $38                        ; 04001C
rst $38          ;                  | 0449AA        || rst $38                        ; 04001D
rst $38          ;                  | 0449AB        || rst $38                        ; 04001E
rst $38          ;                  | 0449AC        || rst $38                        ; 04001F
rst $38          ;                  | 0449AD        || rst $38                        ; 040020
rst $38          ;                  | 0449AE        || rst $38                        ; 040011
rst $38          ;                  | 0449AF        || rst $38                        ; 040012
rst $38          ;                  | 0449B0        || rst $38                        ; 040013
rst $38          ;                  | 0449B1        || rst $38                        ; 040014
rst $38          ;                  | 0449B2        || rst $38                        ; 040015
rst $38          ;                  | 0449B3        || rst $38                        ; 040016
rst $38          ;                  | 0449B4        || rst $38                        ; 040017
rst $38          ;                  | 0449B5        || rst $38                        ; 040018
rst $38          ;                  | 0449B6        || rst $38                        ; 040019
rst $38          ;                  | 0449B7        || rst $38                        ; 04001A
rst $38          ;                  | 0449B8        || rst $38                        ; 04001B
rst $38          ;                  | 0449B9        || rst $38                        ; 04001C
rst $38          ;                  | 0449BA        || rst $38                        ; 04001D
rst $38          ;                  | 0449BB        || rst $38                        ; 04001E
rst $38          ;                  | 0449BC        || rst $38                        ; 04001F
rst $38          ;                  | 0449BD        || rst $38                        ; 040020
rst $38          ;                  | 0449BE        || rst $38                        ; 040011
rst $38          ;                  | 0449BF        || rst $38                        ; 040012
rst $38          ;                  | 0449C0        || rst $38                        ; 040013
rst $38          ;                  | 0449C1        || rst $38                        ; 040014
rst $38          ;                  | 0449C2        || rst $38                        ; 040015
rst $38          ;                  | 0449C3        || rst $38                        ; 040016
rst $38          ;                  | 0449C4        || rst $38                        ; 040017
rst $38          ;                  | 0449C5        || rst $38                        ; 040018
rst $38          ;                  | 0449C6        || rst $38                        ; 040019
rst $38          ;                  | 0449C7        || rst $38                        ; 04001A
rst $38          ;                  | 0449C8        || rst $38                        ; 04001B
rst $38          ;                  | 0449C9        || rst $38                        ; 04001C
rst $38          ;                  | 0449CA        || rst $38                        ; 04001D
rst $38          ;                  | 0449CB        || rst $38                        ; 04001E
rst $38          ;                  | 0449CC        || rst $38                        ; 04001F
rst $38          ;                  | 0449CD        || rst $38                        ; 040020
rst $38          ;                  | 0449CE        || rst $38                        ; 040011
rst $38          ;                  | 0449CF        || rst $38                        ; 040012
rst $38          ;                  | 0449D0        || rst $38                        ; 040013
rst $38          ;                  | 0449D1        || rst $38                        ; 040014
rst $38          ;                  | 0449D2        || rst $38                        ; 040015
rst $38          ;                  | 0449D3        || rst $38                        ; 040016
rst $38          ;                  | 0449D4        || rst $38                        ; 040017
rst $38          ;                  | 0449D5        || rst $38                        ; 040018
rst $38          ;                  | 0449D6        || rst $38                        ; 040019
rst $38          ;                  | 0449D7        || rst $38                        ; 04001A
rst $38          ;                  | 0449D8        || rst $38                        ; 04001B
rst $38          ;                  | 0449D9        || rst $38                        ; 04001C
rst $38          ;                  | 0449DA        || rst $38                        ; 04001D
rst $38          ;                  | 0449DB        || rst $38                        ; 04001E
rst $38          ;                  | 0449DC        || rst $38                        ; 04001F
rst $38          ;                  | 0449DD        || rst $38                        ; 040020
rst $38          ;                  | 0449DE        || rst $38                        ; 040011
rst $38          ;                  | 0449DF        || rst $38                        ; 040012
rst $38          ;                  | 0449E0        || rst $38                        ; 040013
rst $38          ;                  | 0449E1        || rst $38                        ; 040014
rst $38          ;                  | 0449E2        || rst $38                        ; 040015
rst $38          ;                  | 0449E3        || rst $38                        ; 040016
rst $38          ;                  | 0449E4        || rst $38                        ; 040017
rst $38          ;                  | 0449E5        || rst $38                        ; 040018
rst $38          ;                  | 0449E6        || rst $38                        ; 040019
rst $38          ;                  | 0449E7        || rst $38                        ; 04001A
rst $38          ;                  | 0449E8        || rst $38                        ; 04001B
rst $38          ;                  | 0449E9        || rst $38                        ; 04001C
rst $38          ;                  | 0449EA        || rst $38                        ; 04001D
rst $38          ;                  | 0449EB        || rst $38                        ; 04001E
rst $38          ;                  | 0449EC        || rst $38                        ; 04001F
rst $38          ;                  | 0449ED        || rst $38                        ; 040020
rst $38          ;                  | 0449EE        || rst $38                        ; 040011
rst $38          ;                  | 0449EF        || rst $38                        ; 040012
rst $38          ;                  | 0449F0        || rst $38                        ; 040013
rst $38          ;                  | 0449F1        || rst $38                        ; 040014
rst $38          ;                  | 0449F2        || rst $38                        ; 040015
rst $38          ;                  | 0449F3        || rst $38                        ; 040016
rst $38          ;                  | 0449F4        || rst $38                        ; 040017
rst $38          ;                  | 0449F5        || rst $38                        ; 040018
rst $38          ;                  | 0449F6        || rst $38                        ; 040019
rst $38          ;                  | 0449F7        || rst $38                        ; 04001A
rst $38          ;                  | 0449F8        || rst $38                        ; 04001B
rst $38          ;                  | 0449F9        || rst $38                        ; 04001C
rst $38          ;                  | 0449FA        || rst $38                        ; 04001D
rst $38          ;                  | 0449FB        || rst $38                        ; 04001E
rst $38          ;                  | 0449FC        || rst $38                        ; 04001F
rst $38          ;                  | 0449FD        || rst $38                        ; 040020
rst $38          ;                  | 0449FE        || rst $38                        ; 0400D8
rst $38          ;                  | 0449FF        || rst $38                        ; 0400D9
nop              ; nop              | 044A00 0400DA || 044A00 00 00 00 00 11785  ACCS:           BLKB    256,0             ; String Accumulator
nop              ;                  | 044A01        || nop                            ; 0400DB
nop              ;                  | 044A02        || nop                            ; 0400DC
nop              ;                  | 044A03        || nop                            ; 0400DD
nop              ;                  | 044A04        || nop                            ; 0400DE
nop              ;                  | 044A05        || nop                            ; 0400DF
nop              ;                  | 044A06        || nop                            ; 0400E0
nop              ;                  | 044A07        || nop                            ; 0400E1
nop              ;                  | 044A08        || nop                            ; 0400E2
nop              ;                  | 044A09        || nop                            ; 0400E3
nop              ;                  | 044A0A        || nop                            ; 0400E4
nop              ;                  | 044A0B        || nop                            ; 0400E5
nop              ;                  | 044A0C        || nop                            ; 0400E6
nop              ;                  | 044A0D        || nop                            ; 0400E7
nop              ;                  | 044A0E        || nop                            ; 0400DA
nop              ;                  | 044A0F        || nop                            ; 0400DB
nop              ;                  | 044A10        || nop                            ; 0400DC
nop              ;                  | 044A11        || nop                            ; 0400DD
nop              ;                  | 044A12        || nop                            ; 0400DE
nop              ;                  | 044A13        || nop                            ; 0400DF
nop              ;                  | 044A14        || nop                            ; 0400E0
nop              ;                  | 044A15        || nop                            ; 0400E1
nop              ;                  | 044A16        || nop                            ; 0400E2
nop              ;                  | 044A17        || nop                            ; 0400E3
nop              ;                  | 044A18        || nop                            ; 0400E4
nop              ;                  | 044A19        || nop                            ; 0400E5
nop              ;                  | 044A1A        || nop                            ; 0400E6
nop              ;                  | 044A1B        || nop                            ; 0400E7
nop              ;                  | 044A1C        || nop                            ; 0400E8
nop              ;                  | 044A1D        || nop                            ; 0400E9
nop              ;                  | 044A1E        || nop                            ; 0400DA
nop              ;                  | 044A1F        || nop                            ; 0400DB
nop              ;                  | 044A20        || nop                            ; 0400DC
nop              ;                  | 044A21        || nop                            ; 0400DD
nop              ;                  | 044A22        || nop                            ; 0400DE
nop              ;                  | 044A23        || nop                            ; 0400DF
nop              ;                  | 044A24        || nop                            ; 0400E0
nop              ;                  | 044A25        || nop                            ; 0400E1
nop              ;                  | 044A26        || nop                            ; 0400E2
nop              ;                  | 044A27        || nop                            ; 0400E3
nop              ;                  | 044A28        || nop                            ; 0400E4
nop              ;                  | 044A29        || nop                            ; 0400E5
nop              ;                  | 044A2A        || nop                            ; 0400E6
nop              ;                  | 044A2B        || nop                            ; 0400E7
nop              ;                  | 044A2C        || nop                            ; 0400E8
nop              ;                  | 044A2D        || nop                            ; 0400E9
nop              ;                  | 044A2E        || nop                            ; 0400DA
nop              ;                  | 044A2F        || nop                            ; 0400DB
nop              ;                  | 044A30        || nop                            ; 0400DC
nop              ;                  | 044A31        || nop                            ; 0400DD
nop              ;                  | 044A32        || nop                            ; 0400DE
nop              ;                  | 044A33        || nop                            ; 0400DF
nop              ;                  | 044A34        || nop                            ; 0400E0
nop              ;                  | 044A35        || nop                            ; 0400E1
nop              ;                  | 044A36        || nop                            ; 0400E2
nop              ;                  | 044A37        || nop                            ; 0400E3
nop              ;                  | 044A38        || nop                            ; 0400E4
nop              ;                  | 044A39        || nop                            ; 0400E5
nop              ;                  | 044A3A        || nop                            ; 0400E6
nop              ;                  | 044A3B        || nop                            ; 0400E7
nop              ;                  | 044A3C        || nop                            ; 0400E8
nop              ;                  | 044A3D        || nop                            ; 0400E9
nop              ;                  | 044A3E        || nop                            ; 0400DA
nop              ;                  | 044A3F        || nop                            ; 0400DB
nop              ;                  | 044A40        || nop                            ; 0400DC
nop              ;                  | 044A41        || nop                            ; 0400DD
nop              ;                  | 044A42        || nop                            ; 0400DE
nop              ;                  | 044A43        || nop                            ; 0400DF
nop              ;                  | 044A44        || nop                            ; 0400E0
nop              ;                  | 044A45        || nop                            ; 0400E1
nop              ;                  | 044A46        || nop                            ; 0400E2
nop              ;                  | 044A47        || nop                            ; 0400E3
nop              ;                  | 044A48        || nop                            ; 0400E4
nop              ;                  | 044A49        || nop                            ; 0400E5
nop              ;                  | 044A4A        || nop                            ; 0400E6
nop              ;                  | 044A4B        || nop                            ; 0400E7
nop              ;                  | 044A4C        || nop                            ; 0400E8
nop              ;                  | 044A4D        || nop                            ; 0400E9
nop              ;                  | 044A4E        || nop                            ; 0400DA
nop              ;                  | 044A4F        || nop                            ; 0400DB
nop              ;                  | 044A50        || nop                            ; 0400DC
nop              ;                  | 044A51        || nop                            ; 0400DD
nop              ;                  | 044A52        || nop                            ; 0400DE
nop              ;                  | 044A53        || nop                            ; 0400DF
nop              ;                  | 044A54        || nop                            ; 0400E0
nop              ;                  | 044A55        || nop                            ; 0400E1
nop              ;                  | 044A56        || nop                            ; 0400E2
nop              ;                  | 044A57        || nop                            ; 0400E3
nop              ;                  | 044A58        || nop                            ; 0400E4
nop              ;                  | 044A59        || nop                            ; 0400E5
nop              ;                  | 044A5A        || nop                            ; 0400E6
nop              ;                  | 044A5B        || nop                            ; 0400E7
nop              ;                  | 044A5C        || nop                            ; 0400E8
nop              ;                  | 044A5D        || nop                            ; 0400E9
nop              ;                  | 044A5E        || nop                            ; 0400DA
nop              ;                  | 044A5F        || nop                            ; 0400DB
nop              ;                  | 044A60        || nop                            ; 0400DC
nop              ;                  | 044A61        || nop                            ; 0400DD
nop              ;                  | 044A62        || nop                            ; 0400DE
nop              ;                  | 044A63        || nop                            ; 0400DF
nop              ;                  | 044A64        || nop                            ; 0400E0
nop              ;                  | 044A65        || nop                            ; 0400E1
nop              ;                  | 044A66        || nop                            ; 0400E2
nop              ;                  | 044A67        || nop                            ; 0400E3
nop              ;                  | 044A68        || nop                            ; 0400E4
nop              ;                  | 044A69        || nop                            ; 0400E5
nop              ;                  | 044A6A        || nop                            ; 0400E6
nop              ;                  | 044A6B        || nop                            ; 0400E7
nop              ;                  | 044A6C        || nop                            ; 0400E8
nop              ;                  | 044A6D        || nop                            ; 0400E9
nop              ;                  | 044A6E        || nop                            ; 0400DA
nop              ;                  | 044A6F        || nop                            ; 0400DB
nop              ;                  | 044A70        || nop                            ; 0400DC
nop              ;                  | 044A71        || nop                            ; 0400DD
nop              ;                  | 044A72        || nop                            ; 0400DE
nop              ;                  | 044A73        || nop                            ; 0400DF
nop              ;                  | 044A74        || nop                            ; 0400E0
nop              ;                  | 044A75        || nop                            ; 0400E1
nop              ;                  | 044A76        || nop                            ; 0400E2
nop              ;                  | 044A77        || nop                            ; 0400E3
nop              ;                  | 044A78        || nop                            ; 0400E4
nop              ;                  | 044A79        || nop                            ; 0400E5
nop              ;                  | 044A7A        || nop                            ; 0400E6
nop              ;                  | 044A7B        || nop                            ; 0400E7
nop              ;                  | 044A7C        || nop                            ; 0400E8
nop              ;                  | 044A7D        || nop                            ; 0400E9
nop              ;                  | 044A7E        || nop                            ; 0400DA
nop              ;                  | 044A7F        || nop                            ; 0400DB
nop              ;                  | 044A80        || nop                            ; 0400DC
nop              ;                  | 044A81        || nop                            ; 0400DD
nop              ;                  | 044A82        || nop                            ; 0400DE
nop              ;                  | 044A83        || nop                            ; 0400DF
nop              ;                  | 044A84        || nop                            ; 0400E0
nop              ;                  | 044A85        || nop                            ; 0400E1
nop              ;                  | 044A86        || nop                            ; 0400E2
nop              ;                  | 044A87        || nop                            ; 0400E3
nop              ;                  | 044A88        || nop                            ; 0400E4
nop              ;                  | 044A89        || nop                            ; 0400E5
nop              ;                  | 044A8A        || nop                            ; 0400E6
nop              ;                  | 044A8B        || nop                            ; 0400E7
nop              ;                  | 044A8C        || nop                            ; 0400E8
nop              ;                  | 044A8D        || nop                            ; 0400E9
nop              ;                  | 044A8E        || nop                            ; 0400DA
nop              ;                  | 044A8F        || nop                            ; 0400DB
nop              ;                  | 044A90        || nop                            ; 0400DC
nop              ;                  | 044A91        || nop                            ; 0400DD
nop              ;                  | 044A92        || nop                            ; 0400DE
nop              ;                  | 044A93        || nop                            ; 0400DF
nop              ;                  | 044A94        || nop                            ; 0400E0
nop              ;                  | 044A95        || nop                            ; 0400E1
nop              ;                  | 044A96        || nop                            ; 0400E2
nop              ;                  | 044A97        || nop                            ; 0400E3
nop              ;                  | 044A98        || nop                            ; 0400E4
nop              ;                  | 044A99        || nop                            ; 0400E5
nop              ;                  | 044A9A        || nop                            ; 0400E6
nop              ;                  | 044A9B        || nop                            ; 0400E7
nop              ;                  | 044A9C        || nop                            ; 0400E8
nop              ;                  | 044A9D        || nop                            ; 0400E9
nop              ;                  | 044A9E        || nop                            ; 0400DA
nop              ;                  | 044A9F        || nop                            ; 0400DB
nop              ;                  | 044AA0        || nop                            ; 0400DC
nop              ;                  | 044AA1        || nop                            ; 0400DD
nop              ;                  | 044AA2        || nop                            ; 0400DE
nop              ;                  | 044AA3        || nop                            ; 0400DF
nop              ;                  | 044AA4        || nop                            ; 0400E0
nop              ;                  | 044AA5        || nop                            ; 0400E1
nop              ;                  | 044AA6        || nop                            ; 0400E2
nop              ;                  | 044AA7        || nop                            ; 0400E3
nop              ;                  | 044AA8        || nop                            ; 0400E4
nop              ;                  | 044AA9        || nop                            ; 0400E5
nop              ;                  | 044AAA        || nop                            ; 0400E6
nop              ;                  | 044AAB        || nop                            ; 0400E7
nop              ;                  | 044AAC        || nop                            ; 0400E8
nop              ;                  | 044AAD        || nop                            ; 0400E9
nop              ;                  | 044AAE        || nop                            ; 0400DA
nop              ;                  | 044AAF        || nop                            ; 0400DB
nop              ;                  | 044AB0        || nop                            ; 0400DC
nop              ;                  | 044AB1        || nop                            ; 0400DD
nop              ;                  | 044AB2        || nop                            ; 0400DE
nop              ;                  | 044AB3        || nop                            ; 0400DF
nop              ;                  | 044AB4        || nop                            ; 0400E0
nop              ;                  | 044AB5        || nop                            ; 0400E1
nop              ;                  | 044AB6        || nop                            ; 0400E2
nop              ;                  | 044AB7        || nop                            ; 0400E3
nop              ;                  | 044AB8        || nop                            ; 0400E4
nop              ;                  | 044AB9        || nop                            ; 0400E5
nop              ;                  | 044ABA        || nop                            ; 0400E6
nop              ;                  | 044ABB        || nop                            ; 0400E7
nop              ;                  | 044ABC        || nop                            ; 0400E8
nop              ;                  | 044ABD        || nop                            ; 0400E9
nop              ;                  | 044ABE        || nop                            ; 0400DA
nop              ;                  | 044ABF        || nop                            ; 0400DB
nop              ;                  | 044AC0        || nop                            ; 0400DC
nop              ;                  | 044AC1        || nop                            ; 0400DD
nop              ;                  | 044AC2        || nop                            ; 0400DE
nop              ;                  | 044AC3        || nop                            ; 0400DF
nop              ;                  | 044AC4        || nop                            ; 0400E0
nop              ;                  | 044AC5        || nop                            ; 0400E1
nop              ;                  | 044AC6        || nop                            ; 0400E2
nop              ;                  | 044AC7        || nop                            ; 0400E3
nop              ;                  | 044AC8        || nop                            ; 0400E4
nop              ;                  | 044AC9        || nop                            ; 0400E5
nop              ;                  | 044ACA        || nop                            ; 0400E6
nop              ;                  | 044ACB        || nop                            ; 0400E7
nop              ;                  | 044ACC        || nop                            ; 0400E8
nop              ;                  | 044ACD        || nop                            ; 0400E9
nop              ;                  | 044ACE        || nop                            ; 0400DA
nop              ;                  | 044ACF        || nop                            ; 0400DB
nop              ;                  | 044AD0        || nop                            ; 0400DC
nop              ;                  | 044AD1        || nop                            ; 0400DD
nop              ;                  | 044AD2        || nop                            ; 0400DE
nop              ;                  | 044AD3        || nop                            ; 0400DF
nop              ;                  | 044AD4        || nop                            ; 0400E0
nop              ;                  | 044AD5        || nop                            ; 0400E1
nop              ;                  | 044AD6        || nop                            ; 0400E2
nop              ;                  | 044AD7        || nop                            ; 0400E3
nop              ;                  | 044AD8        || nop                            ; 0400E4
nop              ;                  | 044AD9        || nop                            ; 0400E5
nop              ;                  | 044ADA        || nop                            ; 0400E6
nop              ;                  | 044ADB        || nop                            ; 0400E7
nop              ;                  | 044ADC        || nop                            ; 0400E8
nop              ;                  | 044ADD        || nop                            ; 0400E9
nop              ;                  | 044ADE        || nop                            ; 0400DA
nop              ;                  | 044ADF        || nop                            ; 0400DB
nop              ;                  | 044AE0        || nop                            ; 0400DC
nop              ;                  | 044AE1        || nop                            ; 0400DD
nop              ;                  | 044AE2        || nop                            ; 0400DE
nop              ;                  | 044AE3        || nop                            ; 0400DF
nop              ;                  | 044AE4        || nop                            ; 0400E0
nop              ;                  | 044AE5        || nop                            ; 0400E1
nop              ;                  | 044AE6        || nop                            ; 0400E2
nop              ;                  | 044AE7        || nop                            ; 0400E3
nop              ;                  | 044AE8        || nop                            ; 0400E4
nop              ;                  | 044AE9        || nop                            ; 0400E5
nop              ;                  | 044AEA        || nop                            ; 0400E6
nop              ;                  | 044AEB        || nop                            ; 0400E7
nop              ;                  | 044AEC        || nop                            ; 0400E8
nop              ;                  | 044AED        || nop                            ; 0400E9
nop              ;                  | 044AEE        || nop                            ; 0400DA
nop              ;                  | 044AEF        || nop                            ; 0400DB
nop              ;                  | 044AF0        || nop                            ; 0400DC
nop              ;                  | 044AF1        || nop                            ; 0400DD
nop              ;                  | 044AF2        || nop                            ; 0400DE
nop              ;                  | 044AF3        || nop                            ; 0400DF
nop              ;                  | 044AF4        || nop                            ; 0400E0
nop              ;                  | 044AF5        || nop                            ; 0400E1
nop              ;                  | 044AF6        || nop                            ; 0400E2
nop              ;                  | 044AF7        || nop                            ; 0400E3
nop              ;                  | 044AF8        || nop                            ; 0400E4
nop              ;                  | 044AF9        || nop                            ; 0400E5
nop              ;                  | 044AFA        || nop                            ; 0400E6
nop              ;                  | 044AFB        || nop                            ; 0400E7
nop              ;                  | 044AFC        || nop                            ; 0400E8
nop              ;                  | 044AFD        || nop                            ; 0400E9
nop              ;                  | 044AFE        || nop                            ; 0400DA
nop              ;                  | 044AFF        || nop                            ; 0400DB
nop              ; nop              | 044B00 0400DC || 044B00 00 00 00 00 11786  BUFFER:         BLKB    256,0             ; String Input Buffer
nop              ;                  | 044B01        || nop                            ; 0400DD
nop              ;                  | 044B02        || nop                            ; 0400DE
nop              ;                  | 044B03        || nop                            ; 0400DF
nop              ;                  | 044B04        || nop                            ; 0400E0
nop              ;                  | 044B05        || nop                            ; 0400E1
nop              ;                  | 044B06        || nop                            ; 0400E2
nop              ;                  | 044B07        || nop                            ; 0400E3
nop              ;                  | 044B08        || nop                            ; 0400E4
nop              ;                  | 044B09        || nop                            ; 0400E5
nop              ;                  | 044B0A        || nop                            ; 0400E6
nop              ;                  | 044B0B        || nop                            ; 0400E7
nop              ;                  | 044B0C        || nop                            ; 0400E8
nop              ;                  | 044B0D        || nop                            ; 0400E9
nop              ;                  | 044B0E        || nop                            ; 0400DA
nop              ;                  | 044B0F        || nop                            ; 0400DB
nop              ;                  | 044B10        || nop                            ; 0400DC
nop              ;                  | 044B11        || nop                            ; 0400DD
nop              ;                  | 044B12        || nop                            ; 0400DE
nop              ;                  | 044B13        || nop                            ; 0400DF
nop              ;                  | 044B14        || nop                            ; 0400E0
nop              ;                  | 044B15        || nop                            ; 0400E1
nop              ;                  | 044B16        || nop                            ; 0400E2
nop              ;                  | 044B17        || nop                            ; 0400E3
nop              ;                  | 044B18        || nop                            ; 0400E4
nop              ;                  | 044B19        || nop                            ; 0400E5
nop              ;                  | 044B1A        || nop                            ; 0400E6
nop              ;                  | 044B1B        || nop                            ; 0400E7
nop              ;                  | 044B1C        || nop                            ; 0400E8
nop              ;                  | 044B1D        || nop                            ; 0400E9
nop              ;                  | 044B1E        || nop                            ; 0400DA
nop              ;                  | 044B1F        || nop                            ; 0400DB
nop              ;                  | 044B20        || nop                            ; 0400DC
nop              ;                  | 044B21        || nop                            ; 0400DD
nop              ;                  | 044B22        || nop                            ; 0400DE
nop              ;                  | 044B23        || nop                            ; 0400DF
nop              ;                  | 044B24        || nop                            ; 0400E0
nop              ;                  | 044B25        || nop                            ; 0400E1
nop              ;                  | 044B26        || nop                            ; 0400E2
nop              ;                  | 044B27        || nop                            ; 0400E3
nop              ;                  | 044B28        || nop                            ; 0400E4
nop              ;                  | 044B29        || nop                            ; 0400E5
nop              ;                  | 044B2A        || nop                            ; 0400E6
nop              ;                  | 044B2B        || nop                            ; 0400E7
nop              ;                  | 044B2C        || nop                            ; 0400E8
nop              ;                  | 044B2D        || nop                            ; 0400E9
nop              ;                  | 044B2E        || nop                            ; 0400DA
nop              ;                  | 044B2F        || nop                            ; 0400DB
nop              ;                  | 044B30        || nop                            ; 0400DC
nop              ;                  | 044B31        || nop                            ; 0400DD
nop              ;                  | 044B32        || nop                            ; 0400DE
nop              ;                  | 044B33        || nop                            ; 0400DF
nop              ;                  | 044B34        || nop                            ; 0400E0
nop              ;                  | 044B35        || nop                            ; 0400E1
nop              ;                  | 044B36        || nop                            ; 0400E2
nop              ;                  | 044B37        || nop                            ; 0400E3
nop              ;                  | 044B38        || nop                            ; 0400E4
nop              ;                  | 044B39        || nop                            ; 0400E5
nop              ;                  | 044B3A        || nop                            ; 0400E6
nop              ;                  | 044B3B        || nop                            ; 0400E7
nop              ;                  | 044B3C        || nop                            ; 0400E8
nop              ;                  | 044B3D        || nop                            ; 0400E9
nop              ;                  | 044B3E        || nop                            ; 0400DA
nop              ;                  | 044B3F        || nop                            ; 0400DB
nop              ;                  | 044B40        || nop                            ; 0400DC
nop              ;                  | 044B41        || nop                            ; 0400DD
nop              ;                  | 044B42        || nop                            ; 0400DE
nop              ;                  | 044B43        || nop                            ; 0400DF
nop              ;                  | 044B44        || nop                            ; 0400E0
nop              ;                  | 044B45        || nop                            ; 0400E1
nop              ;                  | 044B46        || nop                            ; 0400E2
nop              ;                  | 044B47        || nop                            ; 0400E3
nop              ;                  | 044B48        || nop                            ; 0400E4
nop              ;                  | 044B49        || nop                            ; 0400E5
nop              ;                  | 044B4A        || nop                            ; 0400E6
nop              ;                  | 044B4B        || nop                            ; 0400E7
nop              ;                  | 044B4C        || nop                            ; 0400E8
nop              ;                  | 044B4D        || nop                            ; 0400E9
nop              ;                  | 044B4E        || nop                            ; 0400DA
nop              ;                  | 044B4F        || nop                            ; 0400DB
nop              ;                  | 044B50        || nop                            ; 0400DC
nop              ;                  | 044B51        || nop                            ; 0400DD
nop              ;                  | 044B52        || nop                            ; 0400DE
nop              ;                  | 044B53        || nop                            ; 0400DF
nop              ;                  | 044B54        || nop                            ; 0400E0
nop              ;                  | 044B55        || nop                            ; 0400E1
nop              ;                  | 044B56        || nop                            ; 0400E2
nop              ;                  | 044B57        || nop                            ; 0400E3
nop              ;                  | 044B58        || nop                            ; 0400E4
nop              ;                  | 044B59        || nop                            ; 0400E5
nop              ;                  | 044B5A        || nop                            ; 0400E6
nop              ;                  | 044B5B        || nop                            ; 0400E7
nop              ;                  | 044B5C        || nop                            ; 0400E8
nop              ;                  | 044B5D        || nop                            ; 0400E9
nop              ;                  | 044B5E        || nop                            ; 0400DA
nop              ;                  | 044B5F        || nop                            ; 0400DB
nop              ;                  | 044B60        || nop                            ; 0400DC
nop              ;                  | 044B61        || nop                            ; 0400DD
nop              ;                  | 044B62        || nop                            ; 0400DE
nop              ;                  | 044B63        || nop                            ; 0400DF
nop              ;                  | 044B64        || nop                            ; 0400E0
nop              ;                  | 044B65        || nop                            ; 0400E1
nop              ;                  | 044B66        || nop                            ; 0400E2
nop              ;                  | 044B67        || nop                            ; 0400E3
nop              ;                  | 044B68        || nop                            ; 0400E4
nop              ;                  | 044B69        || nop                            ; 0400E5
nop              ;                  | 044B6A        || nop                            ; 0400E6
nop              ;                  | 044B6B        || nop                            ; 0400E7
nop              ;                  | 044B6C        || nop                            ; 0400E8
nop              ;                  | 044B6D        || nop                            ; 0400E9
nop              ;                  | 044B6E        || nop                            ; 0400DA
nop              ;                  | 044B6F        || nop                            ; 0400DB
nop              ;                  | 044B70        || nop                            ; 0400DC
nop              ;                  | 044B71        || nop                            ; 0400DD
nop              ;                  | 044B72        || nop                            ; 0400DE
nop              ;                  | 044B73        || nop                            ; 0400DF
nop              ;                  | 044B74        || nop                            ; 0400E0
nop              ;                  | 044B75        || nop                            ; 0400E1
nop              ;                  | 044B76        || nop                            ; 0400E2
nop              ;                  | 044B77        || nop                            ; 0400E3
nop              ;                  | 044B78        || nop                            ; 0400E4
nop              ;                  | 044B79        || nop                            ; 0400E5
nop              ;                  | 044B7A        || nop                            ; 0400E6
nop              ;                  | 044B7B        || nop                            ; 0400E7
nop              ;                  | 044B7C        || nop                            ; 0400E8
nop              ;                  | 044B7D        || nop                            ; 0400E9
nop              ;                  | 044B7E        || nop                            ; 0400DA
nop              ;                  | 044B7F        || nop                            ; 0400DB
nop              ;                  | 044B80        || nop                            ; 0400DC
nop              ;                  | 044B81        || nop                            ; 0400DD
nop              ;                  | 044B82        || nop                            ; 0400DE
nop              ;                  | 044B83        || nop                            ; 0400DF
nop              ;                  | 044B84        || nop                            ; 0400E0
nop              ;                  | 044B85        || nop                            ; 0400E1
nop              ;                  | 044B86        || nop                            ; 0400E2
nop              ;                  | 044B87        || nop                            ; 0400E3
nop              ;                  | 044B88        || nop                            ; 0400E4
nop              ;                  | 044B89        || nop                            ; 0400E5
nop              ;                  | 044B8A        || nop                            ; 0400E6
nop              ;                  | 044B8B        || nop                            ; 0400E7
nop              ;                  | 044B8C        || nop                            ; 0400E8
nop              ;                  | 044B8D        || nop                            ; 0400E9
nop              ;                  | 044B8E        || nop                            ; 0400DA
nop              ;                  | 044B8F        || nop                            ; 0400DB
nop              ;                  | 044B90        || nop                            ; 0400DC
nop              ;                  | 044B91        || nop                            ; 0400DD
nop              ;                  | 044B92        || nop                            ; 0400DE
nop              ;                  | 044B93        || nop                            ; 0400DF
nop              ;                  | 044B94        || nop                            ; 0400E0
nop              ;                  | 044B95        || nop                            ; 0400E1
nop              ;                  | 044B96        || nop                            ; 0400E2
nop              ;                  | 044B97        || nop                            ; 0400E3
nop              ;                  | 044B98        || nop                            ; 0400E4
nop              ;                  | 044B99        || nop                            ; 0400E5
nop              ;                  | 044B9A        || nop                            ; 0400E6
nop              ;                  | 044B9B        || nop                            ; 0400E7
nop              ;                  | 044B9C        || nop                            ; 0400E8
nop              ;                  | 044B9D        || nop                            ; 0400E9
nop              ;                  | 044B9E        || nop                            ; 0400DA
nop              ;                  | 044B9F        || nop                            ; 0400DB
nop              ;                  | 044BA0        || nop                            ; 0400DC
nop              ;                  | 044BA1        || nop                            ; 0400DD
nop              ;                  | 044BA2        || nop                            ; 0400DE
nop              ;                  | 044BA3        || nop                            ; 0400DF
nop              ;                  | 044BA4        || nop                            ; 0400E0
nop              ;                  | 044BA5        || nop                            ; 0400E1
nop              ;                  | 044BA6        || nop                            ; 0400E2
nop              ;                  | 044BA7        || nop                            ; 0400E3
nop              ;                  | 044BA8        || nop                            ; 0400E4
nop              ;                  | 044BA9        || nop                            ; 0400E5
nop              ;                  | 044BAA        || nop                            ; 0400E6
nop              ;                  | 044BAB        || nop                            ; 0400E7
nop              ;                  | 044BAC        || nop                            ; 0400E8
nop              ;                  | 044BAD        || nop                            ; 0400E9
nop              ;                  | 044BAE        || nop                            ; 0400DA
nop              ;                  | 044BAF        || nop                            ; 0400DB
nop              ;                  | 044BB0        || nop                            ; 0400DC
nop              ;                  | 044BB1        || nop                            ; 0400DD
nop              ;                  | 044BB2        || nop                            ; 0400DE
nop              ;                  | 044BB3        || nop                            ; 0400DF
nop              ;                  | 044BB4        || nop                            ; 0400E0
nop              ;                  | 044BB5        || nop                            ; 0400E1
nop              ;                  | 044BB6        || nop                            ; 0400E2
nop              ;                  | 044BB7        || nop                            ; 0400E3
nop              ;                  | 044BB8        || nop                            ; 0400E4
nop              ;                  | 044BB9        || nop                            ; 0400E5
nop              ;                  | 044BBA        || nop                            ; 0400E6
nop              ;                  | 044BBB        || nop                            ; 0400E7
nop              ;                  | 044BBC        || nop                            ; 0400E8
nop              ;                  | 044BBD        || nop                            ; 0400E9
nop              ;                  | 044BBE        || nop                            ; 0400DA
nop              ;                  | 044BBF        || nop                            ; 0400DB
nop              ;                  | 044BC0        || nop                            ; 0400DC
nop              ;                  | 044BC1        || nop                            ; 0400DD
nop              ;                  | 044BC2        || nop                            ; 0400DE
nop              ;                  | 044BC3        || nop                            ; 0400DF
nop              ;                  | 044BC4        || nop                            ; 0400E0
nop              ;                  | 044BC5        || nop                            ; 0400E1
nop              ;                  | 044BC6        || nop                            ; 0400E2
nop              ;                  | 044BC7        || nop                            ; 0400E3
nop              ;                  | 044BC8        || nop                            ; 0400E4
nop              ;                  | 044BC9        || nop                            ; 0400E5
nop              ;                  | 044BCA        || nop                            ; 0400E6
nop              ;                  | 044BCB        || nop                            ; 0400E7
nop              ;                  | 044BCC        || nop                            ; 0400E8
nop              ;                  | 044BCD        || nop                            ; 0400E9
nop              ;                  | 044BCE        || nop                            ; 0400DA
nop              ;                  | 044BCF        || nop                            ; 0400DB
nop              ;                  | 044BD0        || nop                            ; 0400DC
nop              ;                  | 044BD1        || nop                            ; 0400DD
nop              ;                  | 044BD2        || nop                            ; 0400DE
nop              ;                  | 044BD3        || nop                            ; 0400DF
nop              ;                  | 044BD4        || nop                            ; 0400E0
nop              ;                  | 044BD5        || nop                            ; 0400E1
nop              ;                  | 044BD6        || nop                            ; 0400E2
nop              ;                  | 044BD7        || nop                            ; 0400E3
nop              ;                  | 044BD8        || nop                            ; 0400E4
nop              ;                  | 044BD9        || nop                            ; 0400E5
nop              ;                  | 044BDA        || nop                            ; 0400E6
nop              ;                  | 044BDB        || nop                            ; 0400E7
nop              ;                  | 044BDC        || nop                            ; 0400E8
nop              ;                  | 044BDD        || nop                            ; 0400E9
nop              ;                  | 044BDE        || nop                            ; 0400DA
nop              ;                  | 044BDF        || nop                            ; 0400DB
nop              ;                  | 044BE0        || nop                            ; 0400DC
nop              ;                  | 044BE1        || nop                            ; 0400DD
nop              ;                  | 044BE2        || nop                            ; 0400DE
nop              ;                  | 044BE3        || nop                            ; 0400DF
nop              ;                  | 044BE4        || nop                            ; 0400E0
nop              ;                  | 044BE5        || nop                            ; 0400E1
nop              ;                  | 044BE6        || nop                            ; 0400E2
nop              ;                  | 044BE7        || nop                            ; 0400E3
nop              ;                  | 044BE8        || nop                            ; 0400E4
nop              ;                  | 044BE9        || nop                            ; 0400E5
nop              ;                  | 044BEA        || nop                            ; 0400E6
nop              ;                  | 044BEB        || nop                            ; 0400E7
nop              ;                  | 044BEC        || nop                            ; 0400E8
nop              ;                  | 044BED        || nop                            ; 0400E9
nop              ;                  | 044BEE        || nop                            ; 0400DA
nop              ;                  | 044BEF        || nop                            ; 0400DB
nop              ;                  | 044BF0        || nop                            ; 0400DC
nop              ;                  | 044BF1        || nop                            ; 0400DD
nop              ;                  | 044BF2        || nop                            ; 0400DE
nop              ;                  | 044BF3        || nop                            ; 0400DF
nop              ;                  | 044BF4        || nop                            ; 0400E0
nop              ;                  | 044BF5        || nop                            ; 0400E1
nop              ;                  | 044BF6        || nop                            ; 0400E2
nop              ;                  | 044BF7        || nop                            ; 0400E3
nop              ;                  | 044BF8        || nop                            ; 0400E4
nop              ;                  | 044BF9        || nop                            ; 0400E5
nop              ;                  | 044BFA        || nop                            ; 0400E6
nop              ;                  | 044BFB        || nop                            ; 0400E7
nop              ;                  | 044BFC        || nop                            ; 0400E8
nop              ;                  | 044BFD        || nop                            ; 0400E9
nop              ;                  | 044BFE        || nop                            ; 0400DA
nop              ;                  | 044BFF        || nop                            ; 0400DB
nop              ; nop              | 044C00 0400DC || 044C00 00 00 00 00 11787  STAVAR:         BLKB    27*4,0            ; Static Variables
nop              ;                  | 044C01        || nop                            ; 0400DD
nop              ;                  | 044C02        || nop                            ; 0400DE
nop              ;                  | 044C03        || nop                            ; 0400DF
nop              ;                  | 044C04        || nop                            ; 0400E0
nop              ;                  | 044C05        || nop                            ; 0400E1
nop              ;                  | 044C06        || nop                            ; 0400E2
nop              ;                  | 044C07        || nop                            ; 0400E3
nop              ;                  | 044C08        || nop                            ; 0400E4
nop              ;                  | 044C09        || nop                            ; 0400E5
nop              ;                  | 044C0A        || nop                            ; 0400E6
nop              ;                  | 044C0B        || nop                            ; 0400E7
nop              ;                  | 044C0C        || nop                            ; 0400E8
nop              ;                  | 044C0D        || nop                            ; 0400E9
nop              ;                  | 044C0E        || nop                            ; 0400DA
nop              ;                  | 044C0F        || nop                            ; 0400DB
nop              ;                  | 044C10        || nop                            ; 0400DC
nop              ;                  | 044C11        || nop                            ; 0400DD
nop              ;                  | 044C12        || nop                            ; 0400DE
nop              ;                  | 044C13        || nop                            ; 0400DF
nop              ;                  | 044C14        || nop                            ; 0400E0
nop              ;                  | 044C15        || nop                            ; 0400E1
nop              ;                  | 044C16        || nop                            ; 0400E2
nop              ;                  | 044C17        || nop                            ; 0400E3
nop              ;                  | 044C18        || nop                            ; 0400E4
nop              ;                  | 044C19        || nop                            ; 0400E5
nop              ;                  | 044C1A        || nop                            ; 0400E6
nop              ;                  | 044C1B        || nop                            ; 0400E7
nop              ;                  | 044C1C        || nop                            ; 0400E8
nop              ;                  | 044C1D        || nop                            ; 0400E9
nop              ;                  | 044C1E        || nop                            ; 0400DA
nop              ;                  | 044C1F        || nop                            ; 0400DB
nop              ;                  | 044C20        || nop                            ; 0400DC
nop              ;                  | 044C21        || nop                            ; 0400DD
nop              ;                  | 044C22        || nop                            ; 0400DE
nop              ;                  | 044C23        || nop                            ; 0400DF
nop              ;                  | 044C24        || nop                            ; 0400E0
nop              ;                  | 044C25        || nop                            ; 0400E1
nop              ;                  | 044C26        || nop                            ; 0400E2
nop              ;                  | 044C27        || nop                            ; 0400E3
nop              ;                  | 044C28        || nop                            ; 0400E4
nop              ;                  | 044C29        || nop                            ; 0400E5
nop              ;                  | 044C2A        || nop                            ; 0400E6
nop              ;                  | 044C2B        || nop                            ; 0400E7
nop              ;                  | 044C2C        || nop                            ; 0400E8
nop              ;                  | 044C2D        || nop                            ; 0400E9
nop              ;                  | 044C2E        || nop                            ; 0400DA
nop              ;                  | 044C2F        || nop                            ; 0400DB
nop              ;                  | 044C30        || nop                            ; 0400DC
nop              ;                  | 044C31        || nop                            ; 0400DD
nop              ;                  | 044C32        || nop                            ; 0400DE
nop              ;                  | 044C33        || nop                            ; 0400DF
nop              ;                  | 044C34        || nop                            ; 0400E0
nop              ;                  | 044C35        || nop                            ; 0400E1
nop              ;                  | 044C36        || nop                            ; 0400E2
nop              ;                  | 044C37        || nop                            ; 0400E3
nop              ;                  | 044C38        || nop                            ; 0400E4
nop              ;                  | 044C39        || nop                            ; 0400E5
nop              ;                  | 044C3A        || nop                            ; 0400E6
nop              ;                  | 044C3B        || nop                            ; 0400E7
nop              ;                  | 044C3C        || nop                            ; 0400E8
nop              ;                  | 044C3D        || nop                            ; 0400E9
nop              ;                  | 044C3E        || nop                            ; 0400DA
nop              ;                  | 044C3F        || nop                            ; 0400DB
nop              ;                  | 044C40        || nop                            ; 0400DC
nop              ;                  | 044C41        || nop                            ; 0400DD
nop              ;                  | 044C42        || nop                            ; 0400DE
nop              ;                  | 044C43        || nop                            ; 0400DF
nop              ;                  | 044C44        || nop                            ; 0400E0
nop              ;                  | 044C45        || nop                            ; 0400E1
nop              ;                  | 044C46        || nop                            ; 0400E2
nop              ;                  | 044C47        || nop                            ; 0400E3
nop              ;                  | 044C48        || nop                            ; 0400E4
nop              ;                  | 044C49        || nop                            ; 0400E5
nop              ;                  | 044C4A        || nop                            ; 0400E6
nop              ;                  | 044C4B        || nop                            ; 0400E7
nop              ;                  | 044C4C        || nop                            ; 0400E8
nop              ;                  | 044C4D        || nop                            ; 0400E9
nop              ;                  | 044C4E        || nop                            ; 0400DA
nop              ;                  | 044C4F        || nop                            ; 0400DB
nop              ;                  | 044C50        || nop                            ; 0400DC
nop              ;                  | 044C51        || nop                            ; 0400DD
nop              ;                  | 044C52        || nop                            ; 0400DE
nop              ;                  | 044C53        || nop                            ; 0400DF
nop              ;                  | 044C54        || nop                            ; 0400E0
nop              ;                  | 044C55        || nop                            ; 0400E1
nop              ;                  | 044C56        || nop                            ; 0400E2
nop              ;                  | 044C57        || nop                            ; 0400E3
nop              ;                  | 044C58        || nop                            ; 0400E4
nop              ;                  | 044C59        || nop                            ; 0400E5
nop              ;                  | 044C5A        || nop                            ; 0400E6
nop              ;                  | 044C5B        || nop                            ; 0400E7
nop              ;                  | 044C5C        || nop                            ; 0400E8
nop              ;                  | 044C5D        || nop                            ; 0400E9
nop              ;                  | 044C5E        || nop                            ; 0400DA
nop              ;                  | 044C5F        || nop                            ; 0400DB
nop              ;                  | 044C60        || nop                            ; 0400DC
nop              ;                  | 044C61        || nop                            ; 0400DD
nop              ;                  | 044C62        || nop                            ; 0400DE
nop              ;                  | 044C63        || nop                            ; 0400DF
nop              ;                  | 044C64        || nop                            ; 0400E0
nop              ;                  | 044C65        || nop                            ; 0400E1
nop              ;                  | 044C66        || nop                            ; 0400E2
nop              ;                  | 044C67        || nop                            ; 0400E3
nop              ;                  | 044C68        || nop                            ; 0400E4
nop              ;                  | 044C69        || nop                            ; 0400E5
nop              ;                  | 044C6A        || nop                            ; 0400E6
nop              ;                  | 044C6B        || nop                            ; 0400E7
nop              ; nop              | 044C6C 0400E8 || 044C6C 00 00 00 00 11788  DYNVAR:         BLKB    54*3,0            ; Dynamic Variable Pointers
nop              ;                  | 044C6D        || nop                            ; 0400E9
nop              ;                  | 044C6E        || nop                            ; 0400DA
nop              ;                  | 044C6F        || nop                            ; 0400DB
nop              ;                  | 044C70        || nop                            ; 0400DC
nop              ;                  | 044C71        || nop                            ; 0400DD
nop              ;                  | 044C72        || nop                            ; 0400DE
nop              ;                  | 044C73        || nop                            ; 0400DF
nop              ;                  | 044C74        || nop                            ; 0400E0
nop              ;                  | 044C75        || nop                            ; 0400E1
nop              ;                  | 044C76        || nop                            ; 0400E2
nop              ;                  | 044C77        || nop                            ; 0400E3
nop              ;                  | 044C78        || nop                            ; 0400E4
nop              ;                  | 044C79        || nop                            ; 0400E5
nop              ;                  | 044C7A        || nop                            ; 0400E6
nop              ;                  | 044C7B        || nop                            ; 0400E7
nop              ;                  | 044C7C        || nop                            ; 0400E8
nop              ;                  | 044C7D        || nop                            ; 0400E9
nop              ;                  | 044C7E        || nop                            ; 0400DA
nop              ;                  | 044C7F        || nop                            ; 0400DB
nop              ;                  | 044C80        || nop                            ; 0400DC
nop              ;                  | 044C81        || nop                            ; 0400DD
nop              ;                  | 044C82        || nop                            ; 0400DE
nop              ;                  | 044C83        || nop                            ; 0400DF
nop              ;                  | 044C84        || nop                            ; 0400E0
nop              ;                  | 044C85        || nop                            ; 0400E1
nop              ;                  | 044C86        || nop                            ; 0400E2
nop              ;                  | 044C87        || nop                            ; 0400E3
nop              ;                  | 044C88        || nop                            ; 0400E4
nop              ;                  | 044C89        || nop                            ; 0400E5
nop              ;                  | 044C8A        || nop                            ; 0400E6
nop              ;                  | 044C8B        || nop                            ; 0400E7
nop              ;                  | 044C8C        || nop                            ; 0400E8
nop              ;                  | 044C8D        || nop                            ; 0400E9
nop              ;                  | 044C8E        || nop                            ; 0400DA
nop              ;                  | 044C8F        || nop                            ; 0400DB
nop              ;                  | 044C90        || nop                            ; 0400DC
nop              ;                  | 044C91        || nop                            ; 0400DD
nop              ;                  | 044C92        || nop                            ; 0400DE
nop              ;                  | 044C93        || nop                            ; 0400DF
nop              ;                  | 044C94        || nop                            ; 0400E0
nop              ;                  | 044C95        || nop                            ; 0400E1
nop              ;                  | 044C96        || nop                            ; 0400E2
nop              ;                  | 044C97        || nop                            ; 0400E3
nop              ;                  | 044C98        || nop                            ; 0400E4
nop              ;                  | 044C99        || nop                            ; 0400E5
nop              ;                  | 044C9A        || nop                            ; 0400E6
nop              ;                  | 044C9B        || nop                            ; 0400E7
nop              ;                  | 044C9C        || nop                            ; 0400E8
nop              ;                  | 044C9D        || nop                            ; 0400E9
nop              ;                  | 044C9E        || nop                            ; 0400DA
nop              ;                  | 044C9F        || nop                            ; 0400DB
nop              ;                  | 044CA0        || nop                            ; 0400DC
nop              ;                  | 044CA1        || nop                            ; 0400DD
nop              ;                  | 044CA2        || nop                            ; 0400DE
nop              ;                  | 044CA3        || nop                            ; 0400DF
nop              ;                  | 044CA4        || nop                            ; 0400E0
nop              ;                  | 044CA5        || nop                            ; 0400E1
nop              ;                  | 044CA6        || nop                            ; 0400E2
nop              ;                  | 044CA7        || nop                            ; 0400E3
nop              ;                  | 044CA8        || nop                            ; 0400E4
nop              ;                  | 044CA9        || nop                            ; 0400E5
nop              ;                  | 044CAA        || nop                            ; 0400E6
nop              ;                  | 044CAB        || nop                            ; 0400E7
nop              ;                  | 044CAC        || nop                            ; 0400E8
nop              ;                  | 044CAD        || nop                            ; 0400E9
nop              ;                  | 044CAE        || nop                            ; 0400DA
nop              ;                  | 044CAF        || nop                            ; 0400DB
nop              ;                  | 044CB0        || nop                            ; 0400DC
nop              ;                  | 044CB1        || nop                            ; 0400DD
nop              ;                  | 044CB2        || nop                            ; 0400DE
nop              ;                  | 044CB3        || nop                            ; 0400DF
nop              ;                  | 044CB4        || nop                            ; 0400E0
nop              ;                  | 044CB5        || nop                            ; 0400E1
nop              ;                  | 044CB6        || nop                            ; 0400E2
nop              ;                  | 044CB7        || nop                            ; 0400E3
nop              ;                  | 044CB8        || nop                            ; 0400E4
nop              ;                  | 044CB9        || nop                            ; 0400E5
nop              ;                  | 044CBA        || nop                            ; 0400E6
nop              ;                  | 044CBB        || nop                            ; 0400E7
nop              ;                  | 044CBC        || nop                            ; 0400E8
nop              ;                  | 044CBD        || nop                            ; 0400E9
nop              ;                  | 044CBE        || nop                            ; 0400DA
nop              ;                  | 044CBF        || nop                            ; 0400DB
nop              ;                  | 044CC0        || nop                            ; 0400DC
nop              ;                  | 044CC1        || nop                            ; 0400DD
nop              ;                  | 044CC2        || nop                            ; 0400DE
nop              ;                  | 044CC3        || nop                            ; 0400DF
nop              ;                  | 044CC4        || nop                            ; 0400E0
nop              ;                  | 044CC5        || nop                            ; 0400E1
nop              ;                  | 044CC6        || nop                            ; 0400E2
nop              ;                  | 044CC7        || nop                            ; 0400E3
nop              ;                  | 044CC8        || nop                            ; 0400E4
nop              ;                  | 044CC9        || nop                            ; 0400E5
nop              ;                  | 044CCA        || nop                            ; 0400E6
nop              ;                  | 044CCB        || nop                            ; 0400E7
nop              ;                  | 044CCC        || nop                            ; 0400E8
nop              ;                  | 044CCD        || nop                            ; 0400E9
nop              ;                  | 044CCE        || nop                            ; 0400DA
nop              ;                  | 044CCF        || nop                            ; 0400DB
nop              ;                  | 044CD0        || nop                            ; 0400DC
nop              ;                  | 044CD1        || nop                            ; 0400DD
nop              ;                  | 044CD2        || nop                            ; 0400DE
nop              ;                  | 044CD3        || nop                            ; 0400DF
nop              ;                  | 044CD4        || nop                            ; 0400E0
nop              ;                  | 044CD5        || nop                            ; 0400E1
nop              ;                  | 044CD6        || nop                            ; 0400E2
nop              ;                  | 044CD7        || nop                            ; 0400E3
nop              ;                  | 044CD8        || nop                            ; 0400E4
nop              ;                  | 044CD9        || nop                            ; 0400E5
nop              ;                  | 044CDA        || nop                            ; 0400E6
nop              ;                  | 044CDB        || nop                            ; 0400E7
nop              ;                  | 044CDC        || nop                            ; 0400E8
nop              ;                  | 044CDD        || nop                            ; 0400E9
nop              ;                  | 044CDE        || nop                            ; 0400DA
nop              ;                  | 044CDF        || nop                            ; 0400DB
nop              ;                  | 044CE0        || nop                            ; 0400DC
nop              ;                  | 044CE1        || nop                            ; 0400DD
nop              ;                  | 044CE2        || nop                            ; 0400DE
nop              ;                  | 044CE3        || nop                            ; 0400DF
nop              ;                  | 044CE4        || nop                            ; 0400E0
nop              ;                  | 044CE5        || nop                            ; 0400E1
nop              ;                  | 044CE6        || nop                            ; 0400E2
nop              ;                  | 044CE7        || nop                            ; 0400E3
nop              ;                  | 044CE8        || nop                            ; 0400E4
nop              ;                  | 044CE9        || nop                            ; 0400E5
nop              ;                  | 044CEA        || nop                            ; 0400E6
nop              ;                  | 044CEB        || nop                            ; 0400E7
nop              ;                  | 044CEC        || nop                            ; 0400E8
nop              ;                  | 044CED        || nop                            ; 0400E9
nop              ;                  | 044CEE        || nop                            ; 0400DA
nop              ;                  | 044CEF        || nop                            ; 0400DB
nop              ;                  | 044CF0        || nop                            ; 0400DC
nop              ;                  | 044CF1        || nop                            ; 0400DD
nop              ;                  | 044CF2        || nop                            ; 0400DE
nop              ;                  | 044CF3        || nop                            ; 0400DF
nop              ;                  | 044CF4        || nop                            ; 0400E0
nop              ;                  | 044CF5        || nop                            ; 0400E1
nop              ;                  | 044CF6        || nop                            ; 0400E2
nop              ;                  | 044CF7        || nop                            ; 0400E3
nop              ;                  | 044CF8        || nop                            ; 0400E4
nop              ;                  | 044CF9        || nop                            ; 0400E5
nop              ;                  | 044CFA        || nop                            ; 0400E6
nop              ;                  | 044CFB        || nop                            ; 0400E7
nop              ;                  | 044CFC        || nop                            ; 0400E8
nop              ;                  | 044CFD        || nop                            ; 0400E9
nop              ;                  | 044CFE        || nop                            ; 0400DA
nop              ;                  | 044CFF        || nop                            ; 0400DB
nop              ;                  | 044D00        || nop                            ; 0400DC
nop              ;                  | 044D01        || nop                            ; 0400DD
nop              ;                  | 044D02        || nop                            ; 0400DE
nop              ;                  | 044D03        || nop                            ; 0400DF
nop              ;                  | 044D04        || nop                            ; 0400E0
nop              ;                  | 044D05        || nop                            ; 0400E1
nop              ;                  | 044D06        || nop                            ; 0400E2
nop              ;                  | 044D07        || nop                            ; 0400E3
nop              ;                  | 044D08        || nop                            ; 0400E4
nop              ;                  | 044D09        || nop                            ; 0400E5
nop              ;                  | 044D0A        || nop                            ; 0400E6
nop              ;                  | 044D0B        || nop                            ; 0400E7
nop              ;                  | 044D0C        || nop                            ; 0400E8
nop              ;                  | 044D0D        || nop                            ; 0400E9
nop              ; nop              | 044D0E 0400DA || 044D0E 00 00 00    11789  FNPTR:          BLKB    3,0               ; Dynamic Function Pointers
nop              ;                  | 044D0F        || nop                            ; 0400DB
nop              ;                  | 044D10        || nop                            ; 0400DC
nop              ; nop              | 044D11 0400DD || 044D11 00 00 00    11790  PROPTR:         BLKB    3,0               ; Dynamic Procedure Pointers
nop              ;                  | 044D12        || nop                            ; 0400DE
nop              ;                  | 044D13        || nop                            ; 0400DF
nop              ; nop              | 044D14 0400E0 || 044D14 00 00 00    11792  PAGE_:          BLKB    3,0               ; Start of User Program
nop              ;                  | 044D15        || nop                            ; 0400E1
nop              ;                  | 044D16        || nop                            ; 0400E2
nop              ; nop              | 044D17 0400E3 || 044D17 00 00 00    11793  TOP:            BLKB    3,0               ; First Location after User Program
nop              ;                  | 044D18        || nop                            ; 0400E4
nop              ;                  | 044D19        || nop                            ; 0400E5
nop              ; nop              | 044D1A 0400E6 || 044D1A 00 00 00    11794  LOMEM:          BLKB    3,0               ; Start of Dynamic Storage
nop              ;                  | 044D1B        || nop                            ; 0400E7
nop              ;                  | 044D1C        || nop                            ; 0400E8
nop              ; nop              | 044D1D 0400E9 || 044D1D 00 00 00    11795  FREE:           BLKB    3,0               ; First Free Space Byte
nop              ;                  | 044D1E        || nop                            ; 0400DA
nop              ;                  | 044D1F        || nop                            ; 0400DB
nop              ; nop              | 044D20 0400DC || 044D20 00 00 00    11796  HIMEM:          BLKB    3,0               ; First Protected Byte
nop              ;                  | 044D21        || nop                            ; 0400DD
nop              ;                  | 044D22        || nop                            ; 0400DE
nop              ; nop              | 044D23 0400DF || 044D23 00 00 00    11798  LINENO:         BLKB    3,0               ; Line Number
nop              ;                  | 044D24        || nop                            ; 0400E0
nop              ;                  | 044D25        || nop                            ; 0400E1
nop              ; nop              | 044D26 0400E2 || 044D26 00 00 00    11799  TRACEN:         BLKB    3,0               ; Trace Flag
nop              ;                  | 044D27        || nop                            ; 0400E3
nop              ;                  | 044D28        || nop                            ; 0400E4
nop              ; nop              | 044D29 0400E5 || 044D29 00 00 00    11800  AUTONO:         BLKB    3,0               ; Auto Flag
nop              ;                  | 044D2A        || nop                            ; 0400E6
nop              ;                  | 044D2B        || nop                            ; 0400E7
nop              ; nop              | 044D2C 0400E8 || 044D2C 00 00 00    11801  ERRTRP:         BLKB    3,0               ; Error Trap
nop              ;                  | 044D2D        || nop                            ; 0400E9
nop              ;                  | 044D2E        || nop                            ; 0400DA
nop              ; nop              | 044D2F 0400DB || 044D2F 00 00       11802  ERRTXT:         BLKB    2,0               ; Error Message Pointer
nop              ;                  | 044D30        || nop                            ; 0400DC
nop              ; nop              | 044D31 0400DD || 044D31 00 00       11803  DATPTR:         BLKB    2,0               ; Data Pointer
nop              ;                  | 044D32        || nop                            ; 0400DE
nop              ; nop              | 044D33 0400DF || 044D33 00 00       11804  ERL:            BLKB    2,0               ; Error Line
nop              ;                  | 044D34        || nop                            ; 0400E0
nop              ; nop              | 044D35 0400E1 || 044D35 00 00 00    11805  ERRLIN:         BLKB    3,0               ; The "ON ERROR" Line
nop              ;                  | 044D36        || nop                            ; 0400E2
nop              ;                  | 044D37        || nop                            ; 0400E3
nop              ; nop              | 044D38 0400E4 || 044D38 00 00 00 00 11806  RANDOM:         BLKB    5,0               ; Random Number
nop              ;                  | 044D39        || nop                            ; 0400E5
nop              ;                  | 044D3A        || nop                            ; 0400E6
nop              ;                  | 044D3B        || nop                            ; 0400E7
nop              ;                  | 044D3C        || nop                            ; 0400E8
nop              ; nop              | 044D3D 0400E9 || 044D3D 00          11807  COUNT:          BLKB    1,0               ; Print Position
nop              ; nop              | 044D3E 0400DA || 044D3E 00          11808  WIDTH:          BLKB    1,0               ; Print Width
nop              ; nop              | 044D3F 0400DB || 044D3F 00          11809  ERR:            BLKB    1,0               ; Error Number
nop              ; nop              | 044D40 0400DC || 044D40 00          11810  LISTON:         BLKB    1,0               ; LISTO (bottom nibble)
nop              ; nop              | 044D41 0400DD || 044D41 00          11820  INCREM:         BLKB    1,0               ; Auto-Increment Value
nop              ; nop              | 044D42 0400DE || 044D42 00          11836  FLAGS:          BLKB    1,0       ; Miscellaneous flags
nop              ; nop              | 044D43 0400DF || 044D43 00 00       11839  OSWRCHPT:       BLKB    2,0       ; Pointer for *EDIT
nop              ;                  | 044D44        || nop                            ; 0400E0
nop              ; nop              | 044D45 0400E1 || 044D45 00          11840  OSWRCHCH:       BLKB    1,0       ; Channel of OSWRCH
nop              ; nop              | 044D46 0400E2 || 044D46 00          11843  OSWRCHFH:       BLKB    1,0       ; File handle for OSWRCHCHN
nop              ; nop              | 044D47 0400E3 || 044D47 00          11844  KEYDOWN:        BLKB    1,0       ; Keydown flag
nop              ; nop              | 044D48 0400E4 || 044D48 00          11845  KEYASCII:       BLKB    1,0       ; ASCII code of pressed key
nop              ; nop              | 044D49 0400E5 || 044D49 00          11846  KEYCOUNT:       BLKB    1,0       ; Counts every time a key is pressed
nop              ; nop              | 044D4A 0400E6 || 044D4A 00 00 00    11847  R0:             BLKB    3,0       ; General purpose storage for 8/16 to 24 bit operations
nop              ;                  | 044D4B        || nop                            ; 0400E7
nop              ;                  | 044D4C        || nop                            ; 0400E8
nop              ; nop              | 044D4D 0400E9 || 044D4D 00 00 00    11848  R1:             BLKB    3,0
nop              ;                  | 044D4E        || 
nop              ;                  | 044D4F        || nop                            ; 040010
rst $38          ; rst $38          | 044D50 040011 || 044D50 FF FF FF FF 11854     ALIGN 256
rst $38          ;                  | 044D51        || rst $38                        ; 040012
rst $38          ;                  | 044D52        || rst $38                        ; 040013
rst $38          ;                  | 044D53        || rst $38                        ; 040014
rst $38          ;                  | 044D54        || rst $38                        ; 040015
rst $38          ;                  | 044D55        || rst $38                        ; 040016
rst $38          ;                  | 044D56        || rst $38                        ; 040017
rst $38          ;                  | 044D57        || rst $38                        ; 040018
rst $38          ;                  | 044D58        || rst $38                        ; 040019
rst $38          ;                  | 044D59        || rst $38                        ; 04001A
rst $38          ;                  | 044D5A        || rst $38                        ; 04001B
rst $38          ;                  | 044D5B        || rst $38                        ; 04001C
rst $38          ;                  | 044D5C        || rst $38                        ; 04001D
rst $38          ;                  | 044D5D        || rst $38                        ; 04001E
rst $38          ;                  | 044D5E        || rst $38                        ; 040011
rst $38          ;                  | 044D5F        || rst $38                        ; 040012
rst $38          ;                  | 044D60        || rst $38                        ; 040013
rst $38          ;                  | 044D61        || rst $38                        ; 040014
rst $38          ;                  | 044D62        || rst $38                        ; 040015
rst $38          ;                  | 044D63        || rst $38                        ; 040016
rst $38          ;                  | 044D64        || rst $38                        ; 040017
rst $38          ;                  | 044D65        || rst $38                        ; 040018
rst $38          ;                  | 044D66        || rst $38                        ; 040019
rst $38          ;                  | 044D67        || rst $38                        ; 04001A
rst $38          ;                  | 044D68        || rst $38                        ; 04001B
rst $38          ;                  | 044D69        || rst $38                        ; 04001C
rst $38          ;                  | 044D6A        || rst $38                        ; 04001D
rst $38          ;                  | 044D6B        || rst $38                        ; 04001E
rst $38          ;                  | 044D6C        || rst $38                        ; 04001F
rst $38          ;                  | 044D6D        || rst $38                        ; 040020
rst $38          ;                  | 044D6E        || rst $38                        ; 040011
rst $38          ;                  | 044D6F        || rst $38                        ; 040012
rst $38          ;                  | 044D70        || rst $38                        ; 040013
rst $38          ;                  | 044D71        || rst $38                        ; 040014
rst $38          ;                  | 044D72        || rst $38                        ; 040015
rst $38          ;                  | 044D73        || rst $38                        ; 040016
rst $38          ;                  | 044D74        || rst $38                        ; 040017
rst $38          ;                  | 044D75        || rst $38                        ; 040018
rst $38          ;                  | 044D76        || rst $38                        ; 040019
rst $38          ;                  | 044D77        || rst $38                        ; 04001A
rst $38          ;                  | 044D78        || rst $38                        ; 04001B
rst $38          ;                  | 044D79        || rst $38                        ; 04001C
rst $38          ;                  | 044D7A        || rst $38                        ; 04001D
rst $38          ;                  | 044D7B        || rst $38                        ; 04001E
rst $38          ;                  | 044D7C        || rst $38                        ; 04001F
rst $38          ;                  | 044D7D        || rst $38                        ; 040020
rst $38          ;                  | 044D7E        || rst $38                        ; 040011
rst $38          ;                  | 044D7F        || rst $38                        ; 040012
rst $38          ;                  | 044D80        || rst $38                        ; 040013
rst $38          ;                  | 044D81        || rst $38                        ; 040014
rst $38          ;                  | 044D82        || rst $38                        ; 040015
rst $38          ;                  | 044D83        || rst $38                        ; 040016
rst $38          ;                  | 044D84        || rst $38                        ; 040017
rst $38          ;                  | 044D85        || rst $38                        ; 040018
rst $38          ;                  | 044D86        || rst $38                        ; 040019
rst $38          ;                  | 044D87        || rst $38                        ; 04001A
rst $38          ;                  | 044D88        || rst $38                        ; 04001B
rst $38          ;                  | 044D89        || rst $38                        ; 04001C
rst $38          ;                  | 044D8A        || rst $38                        ; 04001D
rst $38          ;                  | 044D8B        || rst $38                        ; 04001E
rst $38          ;                  | 044D8C        || rst $38                        ; 04001F
rst $38          ;                  | 044D8D        || rst $38                        ; 040020
rst $38          ;                  | 044D8E        || rst $38                        ; 040011
rst $38          ;                  | 044D8F        || rst $38                        ; 040012
rst $38          ;                  | 044D90        || rst $38                        ; 040013
rst $38          ;                  | 044D91        || rst $38                        ; 040014
rst $38          ;                  | 044D92        || rst $38                        ; 040015
rst $38          ;                  | 044D93        || rst $38                        ; 040016
rst $38          ;                  | 044D94        || rst $38                        ; 040017
rst $38          ;                  | 044D95        || rst $38                        ; 040018
rst $38          ;                  | 044D96        || rst $38                        ; 040019
rst $38          ;                  | 044D97        || rst $38                        ; 04001A
rst $38          ;                  | 044D98        || rst $38                        ; 04001B
rst $38          ;                  | 044D99        || rst $38                        ; 04001C
rst $38          ;                  | 044D9A        || rst $38                        ; 04001D
rst $38          ;                  | 044D9B        || rst $38                        ; 04001E
rst $38          ;                  | 044D9C        || rst $38                        ; 04001F
rst $38          ;                  | 044D9D        || rst $38                        ; 040020
rst $38          ;                  | 044D9E        || rst $38                        ; 040011
rst $38          ;                  | 044D9F        || rst $38                        ; 040012
rst $38          ;                  | 044DA0        || rst $38                        ; 040013
rst $38          ;                  | 044DA1        || rst $38                        ; 040014
rst $38          ;                  | 044DA2        || rst $38                        ; 040015
rst $38          ;                  | 044DA3        || rst $38                        ; 040016
rst $38          ;                  | 044DA4        || rst $38                        ; 040017
rst $38          ;                  | 044DA5        || rst $38                        ; 040018
rst $38          ;                  | 044DA6        || rst $38                        ; 040019
rst $38          ;                  | 044DA7        || rst $38                        ; 04001A
rst $38          ;                  | 044DA8        || rst $38                        ; 04001B
rst $38          ;                  | 044DA9        || rst $38                        ; 04001C
rst $38          ;                  | 044DAA        || rst $38                        ; 04001D
rst $38          ;                  | 044DAB        || rst $38                        ; 04001E
rst $38          ;                  | 044DAC        || rst $38                        ; 04001F
rst $38          ;                  | 044DAD        || rst $38                        ; 040020
rst $38          ;                  | 044DAE        || rst $38                        ; 040011
rst $38          ;                  | 044DAF        || rst $38                        ; 040012
rst $38          ;                  | 044DB0        || rst $38                        ; 040013
rst $38          ;                  | 044DB1        || rst $38                        ; 040014
rst $38          ;                  | 044DB2        || rst $38                        ; 040015
rst $38          ;                  | 044DB3        || rst $38                        ; 040016
rst $38          ;                  | 044DB4        || rst $38                        ; 040017
rst $38          ;                  | 044DB5        || rst $38                        ; 040018
rst $38          ;                  | 044DB6        || rst $38                        ; 040019
rst $38          ;                  | 044DB7        || rst $38                        ; 04001A
rst $38          ;                  | 044DB8        || rst $38                        ; 04001B
rst $38          ;                  | 044DB9        || rst $38                        ; 04001C
rst $38          ;                  | 044DBA        || rst $38                        ; 04001D
rst $38          ;                  | 044DBB        || rst $38                        ; 04001E
rst $38          ;                  | 044DBC        || rst $38                        ; 04001F
rst $38          ;                  | 044DBD        || rst $38                        ; 040020
rst $38          ;                  | 044DBE        || rst $38                        ; 040011
rst $38          ;                  | 044DBF        || rst $38                        ; 040012
rst $38          ;                  | 044DC0        || rst $38                        ; 040013
rst $38          ;                  | 044DC1        || rst $38                        ; 040014
rst $38          ;                  | 044DC2        || rst $38                        ; 040015
rst $38          ;                  | 044DC3        || rst $38                        ; 040016
rst $38          ;                  | 044DC4        || rst $38                        ; 040017
rst $38          ;                  | 044DC5        || rst $38                        ; 040018
rst $38          ;                  | 044DC6        || rst $38                        ; 040019
rst $38          ;                  | 044DC7        || rst $38                        ; 04001A
rst $38          ;                  | 044DC8        || rst $38                        ; 04001B
rst $38          ;                  | 044DC9        || rst $38                        ; 04001C
rst $38          ;                  | 044DCA        || rst $38                        ; 04001D
rst $38          ;                  | 044DCB        || rst $38                        ; 04001E
rst $38          ;                  | 044DCC        || rst $38                        ; 04001F
rst $38          ;                  | 044DCD        || rst $38                        ; 040020
rst $38          ;                  | 044DCE        || rst $38                        ; 040011
rst $38          ;                  | 044DCF        || rst $38                        ; 040012
rst $38          ;                  | 044DD0        || rst $38                        ; 040013
rst $38          ;                  | 044DD1        || rst $38                        ; 040014
rst $38          ;                  | 044DD2        || rst $38                        ; 040015
rst $38          ;                  | 044DD3        || rst $38                        ; 040016
rst $38          ;                  | 044DD4        || rst $38                        ; 040017
rst $38          ;                  | 044DD5        || rst $38                        ; 040018
rst $38          ;                  | 044DD6        || rst $38                        ; 040019
rst $38          ;                  | 044DD7        || rst $38                        ; 04001A
rst $38          ;                  | 044DD8        || rst $38                        ; 04001B
rst $38          ;                  | 044DD9        || rst $38                        ; 04001C
rst $38          ;                  | 044DDA        || rst $38                        ; 04001D
rst $38          ;                  | 044DDB        || rst $38                        ; 04001E
rst $38          ;                  | 044DDC        || rst $38                        ; 04001F
rst $38          ;                  | 044DDD        || rst $38                        ; 040020
rst $38          ;                  | 044DDE        || rst $38                        ; 040011
rst $38          ;                  | 044DDF        || rst $38                        ; 040012
rst $38          ;                  | 044DE0        || rst $38                        ; 040013
rst $38          ;                  | 044DE1        || rst $38                        ; 040014
rst $38          ;                  | 044DE2        || rst $38                        ; 040015
rst $38          ;                  | 044DE3        || rst $38                        ; 040016
rst $38          ;                  | 044DE4        || rst $38                        ; 040017
rst $38          ;                  | 044DE5        || rst $38                        ; 040018
rst $38          ;                  | 044DE6        || rst $38                        ; 040019
rst $38          ;                  | 044DE7        || rst $38                        ; 04001A
rst $38          ;                  | 044DE8        || rst $38                        ; 04001B
rst $38          ;                  | 044DE9        || rst $38                        ; 04001C
rst $38          ;                  | 044DEA        || rst $38                        ; 04001D
rst $38          ;                  | 044DEB        || rst $38                        ; 04001E
rst $38          ;                  | 044DEC        || rst $38                        ; 04001F
rst $38          ;                  | 044DED        || rst $38                        ; 040020
rst $38          ;                  | 044DEE        || rst $38                        ; 040011
rst $38          ;                  | 044DEF        || rst $38                        ; 040012
rst $38          ;                  | 044DF0        || rst $38                        ; 040013
rst $38          ;                  | 044DF1        || rst $38                        ; 040014
rst $38          ;                  | 044DF2        || rst $38                        ; 040015
rst $38          ;                  | 044DF3        || rst $38                        ; 040016
rst $38          ;                  | 044DF4        || rst $38                        ; 040017
rst $38          ;                  | 044DF5        || rst $38                        ; 040018
rst $38          ;                  | 044DF6        || rst $38                        ; 040019
rst $38          ;                  | 044DF7        || rst $38                        ; 04001A
rst $38          ;                  | 044DF8        || rst $38                        ; 04001B
rst $38          ;                  | 044DF9        || rst $38                        ; 04001C
rst $38          ;                  | 044DFA        || rst $38                        ; 04001D
rst $38          ;                  | 044DFB        || rst $38                        ; 04001E
rst $38          ;                  | 044DFC        || rst $38                        ; 04001F
rst $38          ;                  | 044DFD        || rst $38                        ; 040020
rst $38          ;                  | 044DFE        || 
rst $38          ;                  | 044DFF        || 
                 ;                  |               || 
