	jp	$040045                     ; 040000 || 	jp	$040045                     ; 040000 || 040000 C3 45 00 04 0480  			JP	_start				; Jump to start
	ld	b,d                         ; 040004 || 	ld	b,d                         ; 040004 || 040004 42 42 43 42 0484  _exec_name:		DB	"BBCBASIC.BIN", 0		; The executable name, only used in argv
	ld	b,d                         ; 040005 || 	ld	b,d                         ; 040005
	ld	b,e                         ; 040006 || 	ld	b,e                         ; 040006
	ld	b,d                         ; 040007 || 	ld	b,d                         ; 040007
	ld	b,c                         ; 040008 || 	ld	b,c                         ; 040008
	ld	d,e                         ; 040009 || 	ld	d,e                         ; 040009
	ld.lis	b,e                     ; 04000A || 	ld.lis	b,e                     ; 04000A
	ld	l,$42                       ; 04000C || 	ld	l,$42                       ; 04000C
	ld.lis	c,(hl)                  ; 04000E || 	ld.lis	c,(hl)                  ; 04000E
	nop                            ; 040010 || 	nop                            ; 040010
	nop                            ; 040011                                         || 040011 00 00 00 00 0486  			ALIGN	64
	nop                            ; 040012
	nop                            ; 040013
	nop                            ; 040014
	nop                            ; 040015
	nop                            ; 040016 || 	nop                            ; 0400DA
	nop                            ; 040017 || 	nop                            ; 0400DB
	nop                            ; 040018 || 	nop                            ; 0400DC
	nop                            ; 040019 || 	nop                            ; 0400DD
	nop                            ; 04001A || 	nop                            ; 0400DE
	nop                            ; 04001B || 	nop                            ; 0400DF
	nop                            ; 04001C || 	nop                            ; 0400E0
	nop                            ; 04001D || 	nop                            ; 0400E1
	nop                            ; 04001E || 	nop                            ; 0400E2
	nop                            ; 04001F || 	nop                            ; 0400E3
	nop                            ; 040020 || 	nop                            ; 0400E4
	nop                            ; 040021 || 	nop                            ; 0400E5
	nop                            ; 040022 || 	nop                            ; 0400E6
	nop                            ; 040023 || 	nop                            ; 0400E7
	nop                            ; 040024 || 	nop                            ; 0400E8
	nop                            ; 040025 || 	nop                            ; 0400E9
	nop                            ; 040026 || 	nop                            ; 0400DA
	nop                            ; 040027 || 	nop                            ; 0400DB
	nop                            ; 040028 || 	nop                            ; 0400DC
	nop                            ; 040029 || 	nop                            ; 0400DD
	nop                            ; 04002A || 	nop                            ; 0400DE
	nop                            ; 04002B || 	nop                            ; 0400DF
	nop                            ; 04002C || 	nop                            ; 0400E0
	nop                            ; 04002D || 	nop                            ; 0400E1
	nop                            ; 04002E || 	nop                            ; 0400E2
	nop                            ; 04002F || 	nop                            ; 0400E3
	nop                            ; 040030 || 	nop                            ; 0400E4
	nop                            ; 040031 || 	nop                            ; 0400E5
	nop                            ; 040032 || 	nop                            ; 0400E6
	nop                            ; 040033 || 	nop                            ; 0400E7
	nop                            ; 040034 || 	nop                            ; 0400E8
	nop                            ; 040035 || 	nop                            ; 0400E9
	nop                            ; 040036 || 	nop                            ; 0400DA
	nop                            ; 040037 || 	nop                            ; 0400DB
	nop                            ; 040038 || 	nop                            ; 0400DC
	nop                            ; 040039 || 	nop                            ; 0400DD
	nop                            ; 04003A || 	nop                            ; 0400DE
	nop                            ; 04003B || 	nop                            ; 0400DF
	nop                            ; 04003C || 	nop                            ; 0400E0
	nop                            ; 04003D || 	nop                            ; 0400E1
	nop                            ; 04003E || 	nop                            ; 0400E2
	nop                            ; 04003F || 	nop                            ; 0400E3
	ld	c,l                         ; 040040                                         || 040040 4D 4F 53    0488  			DB	"MOS"				; Flag for MOS - to confirm this is a valid MOS command
	ld	c,a                         ; 040041
	ld	d,e                         ; 040042
	nop                            ; 040043 || 	nop                            ; 0400E7 || 040043 00          0489  			DB	00h				; MOS header version 0
	ld	bc,$d5c5f5                  ; 040044                                         || 040044 01          0490  			DB	01h				; Flag for run mode (0: Z80, 1: ADL)
	push	ix                        ; 040048                                         || 040048 DD E5       0497  			PUSH		IX
	push	iy                        ; 04004A || 	push	iy                        ; 04004A || 04004A FD E5       0498  			PUSH		IY
	ld	($0400d7),sp                ; 04004C || 	ld	($0400d7),sp                ; 04004C || 04004C ED 73 D7 00 0500  			LD		(_sps), SP 		; Preserve the 24-bit stack pointer (SPS)
	ld	ix,$0400da                  ; 040051 || 	ld	ix,$0400da                  ; 040051 || 040051 DD 21 DA 00 0502  			LD		IX, _argv_ptrs		; The argv array pointer address
	push	ix                        ; 040056 || 	push	ix                        ; 040056 || 040056 DD E5       0503  			PUSH		IX
	call	$040088                   ; 040058 || 	call	$040088                   ; 040058 || 040058 CD 88 00 04 0504  			CALL		_parse_params		; Parse the parameters
	pop	ix                         ; 04005C || 	pop	ix                         ; 04005C || 04005C DD E1       0505  			POP		IX			; IX: argv
	ld	b,$00                       ; 04005E || 	ld	b,$00                       ; 04005E || 04005E 06 00       0506  			LD		B, 0			;  C: argc
	call	$040075                   ; 040060 || 	call	$040075                   ; 040060 || 040060 CD 75 00 04 0507  			CALL		_clear_ram
	jp	$042fee                     ; 040064 || 	jp	$042fb6                     ; 040064 || 040064 C3 EE 2F 04 0508  			JP		_main			; Start user code
	ld	sp,($0400d7)                ; 040068 || 	ld	sp,($0400d7)                ; 040068 || 040068 ED 7B D7 00 0512  _end:			LD		SP, (_sps)		; Restore the stack pointer
	pop	iy                         ; 04006D || 	pop	iy                         ; 04006D || 04006D FD E1       0514  			POP		IY			; Restore the registers
	pop	ix                         ; 04006F || 	pop	ix                         ; 04006F || 04006F DD E1       0515  			POP		IX
	pop	de                         ; 040071 || 	pop	de                         ; 040071 || 040071 D1          0516  			POP		DE
	pop	bc                         ; 040072 || 	pop	bc                         ; 040072 || 040072 C1          0517  			POP		BC
	pop	af                         ; 040073 || 	pop	af                         ; 040073 || 040073 F1          0518  			POP		AF
	ret                            ; 040074 || 	ret                            ; 040074 || 040074 C9          0519  			RET					; Return to MOS
	push	bc                        ; 040075 || 	push	bc                        ; 040075 || 040075 C5          0523  _clear_ram:		PUSH		BC
	ld	hl,$044a00                  ; 040076 || 	ld	hl,$044a00                  ; 040076 || 040076 21 00 4A 04 0524  			LD		HL, RAM_START
	ld	de,$044a01                  ; 04007A || 	ld	de,$044a01                  ; 04007A || 04007A 11 01 4A 04 0525  			LD		DE, RAM_START + 1
	ld	bc,$00034f                  ; 04007E || 	ld	bc,$00034f                  ; 04007E || 04007E 01 4F 03 00 0526  			LD		BC, RAM_END - RAM_START - 1
	xor	a                          ; 040082 || 	xor	a                          ; 040082 || 040082 AF          0527  			XOR		A
	ld	(hl),a                      ; 040083 || 	ld	(hl),a                      ; 040083 || 040083 77          0528  			LD		(HL), A
	ldir                           ; 040084 || 	ldir                           ; 040084 || 040084 ED B0       0529  			LDIR
	pop	bc                         ; 040086 || 	pop	bc                         ; 040086 || 040086 C1          0530  			POP		BC
	ret                            ; 040087 || 	ret                            ; 040087 || 040087 C9          0531  			RET
	ld	bc,$040004                  ; 040088 || 	ld	bc,$040004                  ; 040088 || 040088 01 04 00 04 0540  _parse_params:		LD	BC, _exec_name
	ld	(ix),bc                     ; 04008C || 	ld	(ix),bc                     ; 04008C || 04008C DD 0F 00    0541  			LD	(IX+0), BC		; ARGV[0] = the executable name
	inc	ix                         ; 04008F || 	inc	ix                         ; 04008F || 04008F DD 23       0542  			INC	IX
	inc	ix                         ; 040091 || 	inc	ix                         ; 040091 || 040091 DD 23       0543  			INC	IX
	inc	ix                         ; 040093 || 	inc	ix                         ; 040093 || 040093 DD 23       0544  			INC	IX
	call	$0400d0                   ; 040095 || 	call	$0400d0                   ; 040095 || 040095 CD D0 00 04 0545  			CALL	_skip_spaces		; Skip HL past any leading spaces
	ld	bc,$000001                  ; 040099 || 	ld	bc,$000001                  ; 040099 || 040099 01 01 00 00 0547  			LD	BC, 1			; C: ARGC = 1 - also clears out top 16 bits of BCU
	ld	b,$0f                       ; 04009D || 	ld	b,$0f                       ; 04009D || 04009D 06 0F       0548  			LD	B, argv_ptrs_max - 1	; B: Maximum number of argv_ptrs
	push	bc                        ; 04009F || 	push	bc                        ; 04009F || 04009F C5          0551  			PUSH	BC			; Stack ARGC
	push	hl                        ; 0400A0 || 	push	hl                        ; 0400A0 || 0400A0 E5          0552  			PUSH	HL			; Stack start address of token
	call	$0400c1                   ; 0400A1 || 	call	$0400c1                   ; 0400A1 || 0400A1 CD C1 00 04 0553  			CALL	_get_token		; Get the next token
	ld	a,c                         ; 0400A5 || 	ld	a,c                         ; 0400A5 || 0400A5 79          0554  			LD	A, C			; A: Length of the token in characters
	pop	de                         ; 0400A6 || 	pop	de                         ; 0400A6 || 0400A6 D1          0555  			POP	DE			; Start address of token (was in HL)
	pop	bc                         ; 0400A7 || 	pop	bc                         ; 0400A7 || 0400A7 C1          0556  			POP	BC			; ARGC
	or	a                           ; 0400A8 || 	or	a                           ; 0400A8 || 0400A8 B7          0557  			OR	A			; Check for A=0 (no token found) OR at end of string
	ret	z                          ; 0400A9 || 	ret	z                          ; 0400A9 || 0400A9 C8          0558  			RET	Z
	ld	(ix),de                     ; 0400AA || 	ld	(ix),de                     ; 0400AA || 0400AA DD 1F 00    0560  			LD	(IX+0), DE		; Store the pointer to the token
	push	hl                        ; 0400AD || 	push	hl                        ; 0400AD || 0400AD E5          0561  			PUSH	HL			; DE=HL
	pop	de                         ; 0400AE || 	pop	de                         ; 0400AE || 0400AE D1          0562  			POP	DE
	call	$0400d0                   ; 0400AF || 	call	$0400d0                   ; 0400AF || 0400AF CD D0 00 04 0563  			CALL	_skip_spaces		; And skip HL past any spaces onto the next character
	xor	a                          ; 0400B3 || 	xor	a                          ; 0400B3 || 0400B3 AF          0564  			XOR	A
	ld	(de),a                      ; 0400B4 || 	ld	(de),a                      ; 0400B4 || 0400B4 12          0565  			LD	(DE), A			; Zero-terminate the token
	inc	ix                         ; 0400B5 || 	inc	ix                         ; 0400B5 || 0400B5 DD 23       0566  			INC	IX
	inc	ix                         ; 0400B7 || 	inc	ix                         ; 0400B7 || 0400B7 DD 23       0567  			INC	IX
	inc	ix                         ; 0400B9 || 	inc	ix                         ; 0400B9 || 0400B9 DD 23       0568  			INC	IX			; Advance to next pointer position
	inc	c                          ; 0400BB || 	inc	c                          ; 0400BB || 0400BB 0C          0569  			INC	C			; Increment ARGC
	ld	a,c                         ; 0400BC || 	ld	a,c                         ; 0400BC || 0400BC 79          0570  			LD	A, C			; Check for C >= A
	cp	b                           ; 0400BD || 	cp	b                           ; 0400BD || 0400BD B8          0571  			CP	B
	jr	c,$-$1f                     ; 0400BE || 	jr	c,$-$1f                     ; 0400BE || 0400BE 38 DF       0572  			JR	C, _parse_params_1	; And loop
	ret                            ; 0400C0 || 	ret                            ; 0400C0 || 0400C0 C9          0573  			RET
	ld	c,$00                       ; 0400C1 || 	ld	c,$00                       ; 0400C1 || 0400C1 0E 00       0582  _get_token:		LD	C, 0			; Initialise length
	ld	a,(hl)                      ; 0400C3 || 	ld	a,(hl)                      ; 0400C3 || 0400C3 7E          0583  @@:			LD	A, (HL)			; Get the character from the parameter string
	or	a                           ; 0400C4 || 	or	a                           ; 0400C4 || 0400C4 B7          0584  			OR	A			; Exit if 0 (end of parameter string in MOS)
	ret	z                          ; 0400C5 || 	ret	z                          ; 0400C5 || 0400C5 C8          0585  			RET 	Z
	cp	$0d                         ; 0400C6 || 	cp	$0d                         ; 0400C6 || 0400C6 FE 0D       0586  			CP	13			; Exit if CR (end of parameter string in BBC BASIC)
	ret	z                          ; 0400C8 || 	ret	z                          ; 0400C8 || 0400C8 C8          0587  			RET	Z
	cp	$20                         ; 0400C9 || 	cp	$20                         ; 0400C9 || 0400C9 FE 20       0588  			CP	' '			; Exit if space (end of token)
	ret	z                          ; 0400CB || 	ret	z                          ; 0400CB || 0400CB C8          0589  			RET	Z
	inc	hl                         ; 0400CC || 	inc	hl                         ; 0400CC || 0400CC 23          0590  			INC	HL			; Advance to next character
	inc	c                          ; 0400CD || 	inc	c                          ; 0400CD || 0400CD 0C          0591  			INC 	C			; Increment length
	jr	$-$0b                       ; 0400CE || 	jr	$-$0b                       ; 0400CE || 0400CE 18 F3       0592  			JR	@B
	ld	a,(hl)                      ; 0400D0 || 	ld	a,(hl)                      ; 0400D0 || 0400D0 7E          0601  _skip_spaces:		LD	A, (HL)			; Get the character from the parameter string
	cp	$20                         ; 0400D1 || 	cp	$20                         ; 0400D1 || 0400D1 FE 20       0602  			CP	' '			; Exit if not space
	ret	nz                         ; 0400D3 || 	ret	nz                         ; 0400D3 || 0400D3 C0          0603  			RET	NZ
	inc	hl                         ; 0400D4 || 	inc	hl                         ; 0400D4 || 0400D4 23          0604  			INC	HL			; Advance to next character
	jr	$-$05                       ; 0400D5 || 	jr	$-$05                       ; 0400D5 || 0400D5 18 F9       0605  			JR	_skip_spaces		; Increment length
	nop                            ; 0400D7                                         || 0400D7             0609  _sps:			DS	3			; Storage for the stack pointer
	nop                            ; 0400D8
	nop                            ; 0400D9
	nop                            ; 0400DA || 	nop                            ; 0400DA || 0400DA 00 00 00 00 0610  _argv_ptrs:		BLKP	argv_ptrs_max, 0	; Storage for the argv array pointers; --- End init.asm ---
	nop                            ; 0400DB || 	nop                            ; 0400DB
	nop                            ; 0400DC || 	nop                            ; 0400DC
	nop                            ; 0400DD || 	nop                            ; 0400DD
	nop                            ; 0400DE || 	nop                            ; 0400DE
	nop                            ; 0400DF || 	nop                            ; 0400DF
	nop                            ; 0400E0 || 	nop                            ; 0400DA
	nop                            ; 0400E1 || 	nop                            ; 0400DB
	nop                            ; 0400E2 || 	nop                            ; 0400DC
	nop                            ; 0400E3 || 	nop                            ; 0400DD
	nop                            ; 0400E4 || 	nop                            ; 0400DE
	nop                            ; 0400E5 || 	nop                            ; 0400DF
	nop                            ; 0400E6 || 	nop                            ; 0400E0
	nop                            ; 0400E7 || 	nop                            ; 0400E1
	nop                            ; 0400E8 || 	nop                            ; 0400E2
	nop                            ; 0400E9 || 	nop                            ; 0400E3
	nop                            ; 0400EA || 	nop                            ; 0400E4
	nop                            ; 0400EB || 	nop                            ; 0400E5
	nop                            ; 0400EC || 	nop                            ; 0400E6
	nop                            ; 0400ED || 	nop                            ; 0400E7
	nop                            ; 0400EE || 	nop                            ; 0400E8
	nop                            ; 0400EF || 	nop                            ; 0400E9
	nop                            ; 0400F0 || 	nop                            ; 0400DA
	nop                            ; 0400F1 || 	nop                            ; 0400DB
	nop                            ; 0400F2 || 	nop                            ; 0400DC
	nop                            ; 0400F3 || 	nop                            ; 0400DD
	nop                            ; 0400F4 || 	nop                            ; 0400DE
	nop                            ; 0400F5 || 	nop                            ; 0400DF
	nop                            ; 0400F6 || 	nop                            ; 0400E0
	nop                            ; 0400F7 || 	nop                            ; 0400E1
	nop                            ; 0400F8 || 	nop                            ; 0400E2
	nop                            ; 0400F9 || 	nop                            ; 0400E3
	nop                            ; 0400FA || 	nop                            ; 0400E4
	nop                            ; 0400FB || 	nop                            ; 0400E5
	nop                            ; 0400FC || 	nop                            ; 0400E6
	nop                            ; 0400FD || 	nop                            ; 0400E7
	nop                            ; 0400FE || 	nop                            ; 0400E8
	nop                            ; 0400FF || 	nop                            ; 0400E9
	nop                            ; 040100 || 	nop                            ; 0400FF
	nop                            ; 040101 || 	nop                            ; 040100
	nop                            ; 040102 || 	nop                            ; 040101
	nop                            ; 040103 || 	nop                            ; 040102
	nop                            ; 040104 || 	nop                            ; 040103
	nop                            ; 040105 || 	nop                            ; 040104
	nop                            ; 040106 || 	nop                            ; 040105
	nop                            ; 040107 || 	nop                            ; 040106
	nop                            ; 040108 || 	nop                            ; 040107
	nop                            ; 040109 || 	nop                            ; 040108
	ex	de,hl                       ; 04010A                                         || 04010A EB 08 04    0715  FUNTBL:			DW24	DECODE			; Line number
	ex	af,af'                      ; 04010B
	inc	b                          ; 04010C || 	inc	b                          ; 04010C
	sbc	a,c                        ; 04010D                                         || 04010D 99 05 04    0716  			DW24	OPENIN			; OPENIN
	dec	b                          ; 04010E || 	dec	b                          ; 04010E
	inc	b                          ; 04010F || 	inc	b                          ; 04010F
	cp	e                           ; 040110                                         || 040110 BB 05 04    0717  			DW24	PTR_EV			; PTR
	dec	b                          ; 040111 || 	dec	b                          ; 04010E
	inc	b                          ; 040112 || 	inc	b                          ; 04010F
	ld	d,l                         ; 040113                                         || 040113 55 05 04    0718  			DW24	PAGEV			; PAGE
	dec	b                          ; 040114 || 	dec	b                          ; 040111
	inc	b                          ; 040115 || 	inc	b                          ; 040112
	push	bc                        ; 040116                                         || 040116 C5 05 04    0719  			DW24	TIMEV			; TIME
	dec	b                          ; 040117 || 	dec	b                          ; 040114
	inc	b                          ; 040118 || 	inc	b                          ; 040115
	ld	b,c                         ; 040119                                         || 040119 41 05 04    0720  			DW24	LOMEMV			; LOMEM
	dec	b                          ; 04011A || 	dec	b                          ; 040117
	inc	b                          ; 04011B || 	inc	b                          ; 040118
	ld	c,e                         ; 04011C                                         || 04011C 4B 05 04    0721  			DW24	HIMEMV			; HIMEM
	dec	b                          ; 04011D || 	dec	b                          ; 04011A
	inc	b                          ; 04011E || 	inc	b                          ; 04011B
	add	hl,de                      ; 04011F                                         || 04011F 19 06 04    0722  			DW24	ABSV			; ABS
	ld	b,$04                       ; 040120
	ld	d,l                         ; 040122                                         || 040122 55 06 04    0723  			DW24	ACS			; ACS
	ld	b,$04                       ; 040123
	and	d                          ; 040125                                         || 040125 A2 49 04    0724  			DW24	ADVAL			; ADVAL
	inc.lis	b                      ; 040126
	ld	hl,($4d0405)                ; 040128                                         || 040128 2A 05 04    0725  			DW24	ASC			; ASC
	ld	b,$04                       ; 04012C
	ld	d,c                         ; 04012E                                         || 04012E 51 06 04    0727  			DW24	ATN			; ATN
	ld	b,$04                       ; 04012F
	di                             ; 040131                                         || 040131 F3 04 04    0728  			DW24	BGET			; BGET
	inc	b                          ; 040132
	inc	b                          ; 040133
	add	hl,sp                      ; 040134                                         || 040134 39 06 04    0729  			DW24	COS			; COS
	ld	b,$04                       ; 040135
	add	a,b                        ; 040137                                         || 040137 80 05 04    0730  			DW24	COUNTV			; COUNT
	dec	b                          ; 040138
	inc	b                          ; 040139
	ld	hl,$740406                  ; 04013A                                         || 04013A 21 06 04    0731  			DW24	DEG			; DEG
	dec	b                          ; 04013E
	inc	b                          ; 04013F
	ld	a,d                         ; 040140                                         || 040140 7A 05 04    0733  			DW24	ERRV			; ERR
	dec	b                          ; 040141
	inc	b                          ; 040142
	ld	a,(hl)                      ; 040143                                         || 040143 7E 06 04    0734  			DW24	EVAL_			; EVAL
	ld	b,$04                       ; 040144
	ld	b,c                         ; 040146                                         || 040146 41 06 04    0735  			DW24	EXP			; EXP
	ld	b,$04                       ; 040147
	or	c                           ; 040149                                         || 040149 B1 05 04    0736  			DW24	EXT			; EXT
	dec	b                          ; 04014A
	inc	b                          ; 04014B
	sbc	a,b                        ; 04014C                                         || 04014C 98 09 04    0737  			DW24	ZERO			; FALSE
	add	hl,bc                      ; 04014D
	inc	b                          ; 04014E
	add	a,a                        ; 04014F                                         || 04014F 87 10 04    0738  			DW24	FN_EX			; FN
	djnz	$+$06                     ; 040150
	ld	de,$000405                  ; 040152                                         || 040152 11 05 04    0739  			DW24	GET			; GET
	dec	b                          ; 040156
	inc	b                          ; 040157
	jr	nc,$+$09                    ; 040158                                         || 040158 30 07 04    0741  			DW24	INSTR			; INSTR(
	inc	b                          ; 04015A
	dec	l                          ; 04015B                                         || 04015B 2D 06 04    0742  			DW24	INT_			; INT
	ld	b,$04                       ; 04015C
	ld	a,($450405)                 ; 04015E                                         || 04015E 3A 05 04    0743  			DW24	LEN			; LEN
	ld	b,$04                       ; 040162
	ld.lis	b,$04                   ; 040164                                         || 040164 49 06 04    0745  			DW24	LOG			; LOG
	dec	e                          ; 040167                                         || 040167 1D 06 04    0746  			DW24	NOTK			; NOT
	ld	b,$04                       ; 040168
	sub	l                          ; 04016A                                         || 04016A 95 05 04    0747  			DW24	OPENUP			; OPENUP
	dec	b                          ; 04016B
	inc	b                          ; 04016C
	sub	d                          ; 04016D                                         || 04016D 92 05 04    0748  			DW24	OPENOT			; OPENOUT
	dec	b                          ; 04016E
	inc	b                          ; 04016F
	dec	d                          ; 040170                                         || 040170 15 06 04    0749  			DW24	PI			; PI
	ld	b,$04                       ; 040171
	push	bc                        ; 040173                                         || 040173 C5 44 04    0750  			DW24	POINT			; POINT(
	ld	b,h                         ; 040174
	inc	b                          ; 040175
	jp	nc,$250404                  ; 040176                                         || 040176 D2 04 04    0751  			DW24	POS			; POS
	ld	b,$04                       ; 04017A
	or	d                           ; 04017C                                         || 04017C B2 06 04    0753  			DW24	RND			; RND
	ld	b,$04                       ; 04017D
	add	hl,hl                      ; 04017F                                         || 04017F 29 06 04    0754  			DW24	SGN			; SGN
	ld	b,$04                       ; 040180
	dec	a                          ; 040182                                         || 040182 3D 06 04    0755  			DW24	SIN			; SIN
	ld	b,$04                       ; 040183
	ld	sp,$350406                  ; 040185                                         || 040185 31 06 04    0756  			DW24	SQR			; SQR
	ld	b,$04                       ; 040189
	ld	e,a                         ; 04018B                                         || 04018B 5F 05 04    0758  			DW24	TOPV			; TO(P)
	dec	b                          ; 04018C
	inc	b                          ; 04018D
	ld	a,(bc)                      ; 04018E                                         || 04018E 0A 06 04    0759  			DW24	TRUE			; TRUE
	ld	b,$04                       ; 04018F
	ld	d,h                         ; 040191                                         || 040191 54 15 04    0760  			DW24	USR			; USR
	dec	d                          ; 040192
	inc	b                          ; 040193
	ld	l,a                         ; 040194                                         || 040194 6F 06 04    0761  			DW24	VAL			; VAL
	ld	b,$04                       ; 040195
	in	a,($04)                     ; 040197                                         || 040197 DB 04 04    0762  			DW24	VPOS			; VPOS
	inc	b                          ; 040199
	call	nz,$cc0407                ; 04019A                                         || 04019A C4 07 04    0763  			DW24	CHRS			; CHRS
	rlca                           ; 04019E
	inc	b                          ; 04019F
	ld	bc,(ix+$04)                 ; 0401A0                                         || 0401A0 DD 07 04    0765  			DW24	INKEYS			; INKEYS
	ld	h,d                         ; 0401A3                                         || 0401A3 62 08 04    0766  			DW24	LEFTS			; LEFTS(
	ex	af,af'                      ; 0401A4
	inc	b                          ; 0401A5
	ld	hl,($820408)                ; 0401A6                                         || 0401A6 2A 08 04    0767  			DW24	MIDS			; MIDS(
	ex	af,af'                      ; 0401AA
	inc	b                          ; 0401AB
	ld	c,a                         ; 0401AC                                         || 0401AC 4F 09 04    0769  			DW24	STRS			; STR$
	add	hl,bc                      ; 0401AD
	inc	b                          ; 0401AE
	and	e                          ; 0401AF                                         || 0401AF A3 08 04    0770  			DW24	STRING_			; STRINGS(
	ex	af,af'                      ; 0401B0
	inc	b                          ; 0401B1
	ex	(sp),hl                     ; 0401B2                                         || 0401B2 E3 04 04    0771  			DW24	EOF			; EOF
	inc	b                          ; 0401B3
	inc	b                          ; 0401B4
	push	af                        ; 0401B5                                         || 0401B5 F5 05 04    0783  SOPTBL:			DW24	SLE			; <= (STRING)
	dec	b                          ; 0401B6
	inc	b                          ; 0401B7
	cp	$05                         ; 0401B8                                         || 0401B8 FE 05 04    0784  			DW24	SNE			; <>
	inc	b                          ; 0401BA
	xor	$05                        ; 0401BB                                         || 0401BB EE 05 04    0785  			DW24	SGE			; >=
	inc	b                          ; 0401BD
	rst	$18                        ; 0401BE                                         || 0401BE DF 05 04    0786  			DW24	SLT			; <
	dec	b                          ; 0401BF
	inc	b                          ; 0401C0
	dec	b                          ; 0401C1                                         || 0401C1 05 06 04    0787  			DW24	SEQ			; =
	ld	b,$04                       ; 0401C2
	and	$05                        ; 0401C4                                         || 0401C4 E6 05 04    0788  			DW24	SGT			; >
	inc	b                          ; 0401C6 || 	inc	b                          ; 0401C6
	call	$0401e0                   ; 0401C7 || 	call	$0401e0                   ; 0401C7 || 0401C7 CD E0 01 04 0809  EXPR:			CALL    EXPR1			; Get first operator by calling Level 6
	cp	$82                         ; 0401CB || 	cp	$82                         ; 0401CB || 0401CB FE 82       0810  EXPR0A:			CP      EORK            	; Is operator EOR?
	jr	z,$+$05                     ; 0401CD || 	jr	z,$+$05                     ; 0401CD || 0401CD 28 03       0811  			JR      Z,EXPR0B		; Yes, so skip to next bit
	cp	$84                         ; 0401CF || 	cp	$84                         ; 0401CF || 0401CF FE 84       0812  			CP      ORK			; Is operator OR
	ret	nz                         ; 0401D1 || 	ret	nz                         ; 0401D1 || 0401D1 C0          0813  			RET     NZ			; No, so return
	call	$040a46                   ; 0401D2 || 	call	$040a3e                   ; 0401D2 || 0401D2 CD 46 0A 04 0815  EXPR0B:			CALL    SAVE_EV            	; Save first operand
	call	$0401e0                   ; 0401D6 || 	call	$0401e0                   ; 0401D6 || 0401D6 CD E0 01 04 0816  			CALL    EXPR1           	; Get second operand
	call	$040a55                   ; 0401DA || 	call	$040a4d                   ; 0401DA || 0401DA CD 55 0A 04 0817  			CALL    DOIT            	; Do the operation
	jr	$-$13                       ; 0401DE || 	jr	$-$13                       ; 0401DE || 0401DE 18 EB       0818  			JR      EXPR0A          	; And continue
	call	$0401f5                   ; 0401E0 || 	call	$0401f5                   ; 0401E0 || 0401E0 CD F5 01 04 0822  EXPR1:			CALL    EXPR2			; Get first operator by calling Level 5
	cp	$80                         ; 0401E4 || 	cp	$80                         ; 0401E4 || 0401E4 FE 80       0823  EXPR1A:			CP      ANDK			; Is operator AND?
	ret	nz                         ; 0401E6 || 	ret	nz                         ; 0401E6 || 0401E6 C0          0824  			RET     NZ			; No, so return
	call	$040a46                   ; 0401E7 || 	call	$040a3e                   ; 0401E7 || 0401E7 CD 46 0A 04 0825  			CALL    SAVE_EV			; Save first operand
	call	$0401f5                   ; 0401EB || 	call	$0401f5                   ; 0401EB || 0401EB CD F5 01 04 0826  			CALL    EXPR2			; Get second operand
	call	$040a55                   ; 0401EF || 	call	$040a4d                   ; 0401EF || 0401EF CD 55 0A 04 0827  			CALL    DOIT			; Do the operation
	jr	$-$0f                       ; 0401F3 || 	jr	$-$0f                       ; 0401F3 || 0401F3 18 EF       0828  			JR      EXPR1A			; And continue
	call	$040267                   ; 0401F5 || 	call	$040267                   ; 0401F5 || 0401F5 CD 67 02 04 0832  EXPR2:			CALL    EXPR3			; Get first operator by calling Level 4
	call	$040a1d                   ; 0401F9 || 	call	$040a15                   ; 0401F9 || 0401F9 CD 1D 0A 04 0833  			CALL    RELOP?			; Is it ">", "=" or "<"?
	ret	nz                         ; 0401FD || 	ret	nz                         ; 0401FD || 0401FD C0          0834  			RET     NZ			; No, so return
	ld	b,a                         ; 0401FE || 	ld	b,a                         ; 0401FE || 0401FE 47          0835  			LD      B,A			; Store the first operator in B
	inc	iy                         ; 0401FF || 	inc	iy                         ; 0401FF || 0401FF FD 23       0836  			INC     IY              	; Bump over operator
	call	$040a78                   ; 040201 || 	call	$040a70                   ; 040201 || 040201 CD 78 0A 04 0837  			CALL    NXT			;
	call	$040a1d                   ; 040205 || 	call	$040a15                   ; 040205 || 040205 CD 1D 0A 04 0838  			CALL    RELOP?          	; Is it a compound operator?
	jr	nz,$+$0b                    ; 040209 || 	jr	nz,$+$0b                    ; 040209 || 040209 20 09       0839  			JR      NZ,EXPR2B		; No, so skip next bit
	inc	iy                         ; 04020B || 	inc	iy                         ; 04020B || 04020B FD 23       0840  			INC     IY			; Bump over operator
	cp	b                           ; 04020D || 	cp	b                           ; 04020D || 04020D B8          0841  			CP      B			; Compare with first
	jp	z,$040c9f                   ; 04020E || 	jp	z,$040c97                   ; 04020E || 04020E CA 9F 0C 04 0842  			JP      Z,SYNTAX        	; Trap illegal combinations ">>", "==", "<<" (but not "><", "=>", "=<")
	add	a,b                        ; 040212 || 	add	a,b                        ; 040212 || 040212 80          0843  			ADD     A,B
	ld	b,a                         ; 040213 || 	ld	b,a                         ; 040213 || 040213 47          0844  			LD      B,A			; B: Unique code for the compound operator
	ld	a,b                         ; 040214 || 	ld	a,b                         ; 040214 || 040214 78          0845  EXPR2B:			LD      A,B			; A: Code for the operator/compound operator
	ex	af,af'                      ; 040215 || 	ex	af,af'                      ; 040215 || 040215 08          0846  			EX      AF,AF'
	jp	m,$040230                   ; 040216 || 	jp	m,$040230                   ; 040216 || 040216 FA 30 02 04 0847  			JP      M,EXPR2S		; If it is a string, then branch here to handle it
	ex	af,af'                      ; 04021A || 	ex	af,af'                      ; 04021A || 04021A 08          0848  			EX      AF,AF'
	sub	$04                        ; 04021B || 	sub	$04                        ; 04021B || 04021B D6 04       0849  			SUB     4
	cp	$3a                         ; 04021D || 	cp	$3a                         ; 04021D || 04021D FE 3A       0850  			CP      '>'-4
	jr	nz,$+$04                    ; 04021F || 	jr	nz,$+$04                    ; 04021F || 04021F 20 02       0851  			JR      NZ,EXPR2C
	add	a,$02                      ; 040221 || 	add	a,$02                      ; 040221 || 040221 C6 02       0852  			ADD     A,2
	call	$040a48                   ; 040223 || 	call	$040a40                   ; 040223 || 040223 CD 48 0A 04 0853  EXPR2C:			CALL    SAVE1
	call	$040267                   ; 040227 || 	call	$040267                   ; 040227 || 040227 CD 67 02 04 0854  			CALL    EXPR3
	call	$040a55                   ; 04022B || 	call	$040a4d                   ; 04022B || 04022B CD 55 0A 04 0855  			CALL    DOIT            	; NB: Must NOT be "JP DOIT"
	ret                            ; 04022F || 	ret                            ; 04022F || 04022F C9          0856  			RET
	ex	af,af'                      ; 040230 || 	ex	af,af'                      ; 040230 || 040230 08          0858  EXPR2S:			EX      AF,AF'			; Handle string comparisons
	dec	a                          ; 040231 || 	dec	a                          ; 040231 || 040231 3D          0859  			DEC     A
	and	$07                        ; 040232 || 	and	$07                        ; 040232 || 040232 E6 07       0860  			AND     7
	call	$0409b9                   ; 040234 || 	call	$0409b4                   ; 040234 || 040234 CD B9 09 04 0861  			CALL    PUSHS           	; Save string on the stack
	push	af                        ; 040238 || 	push	af                        ; 040238 || 040238 F5          0862  			PUSH    AF              	; Save the operator
	call	$040267                   ; 040239 || 	call	$040267                   ; 040239 || 040239 CD 67 02 04 0863  			CALL    EXPR3           	; Get the second string
	ex	af,af'                      ; 04023D || 	ex	af,af'                      ; 04023D || 04023D 08          0864  			EX      AF,AF'
	jp	p,$04033b                   ; 04023E || 	jp	p,$040336                   ; 04023E || 04023E F2 3B 03 04 0865  			JP      P,TYPE_EV_
	pop	af                         ; 040242 || 	pop	af                         ; 040242 || 040242 F1          0866  			POP     AF
	ld	c,e                         ; 040243 || 	ld	c,e                         ; 040243 || 040243 4B          0867  			LD      C,E             	; Length of string #2
	pop	de                         ; 040244 || 	pop	de                         ; 040244 || 040244 D1          0868  			POP     DE
	ld	hl,$000000                  ; 040245 || 	ld	hl,$000000                  ; 040245 || 040245 21 00 00 00 0869  			LD      HL,0
	add	hl,sp                      ; 040249 || 	add	hl,sp                      ; 040249 || 040249 39          0870  			ADD     HL,SP
	ld	b,e                         ; 04024A || 	ld	b,e                         ; 04024A || 04024A 43          0871  			LD      B,E             	; Length of string #1
	push	de                        ; 04024B || 	push	de                        ; 04024B || 04024B D5          0872  			PUSH    DE
	ld	de,$044a00                  ; 04024C || 	ld	de,$044a00                  ; 04024C || 04024C 11 00 4A 04 0873  			LD      DE,ACCS
	ex	de,hl                       ; 040250 || 	ex	de,hl                       ; 040250 || 040250 EB          0874  			EX      DE,HL
	call	$040a84                   ; 040251 || 	call	$040a7c                   ; 040251 || 040251 CD 84 0A 04 0875  			CALL    DISPT2
	pop	de                         ; 040255 || 	pop	de                         ; 040255 || 040255 D1          0876  			POP     DE
	ex	de,hl                       ; 040256 || 	ex	de,hl                       ; 040256 || 040256 EB          0877  			EX      DE,HL
	ld	a,l                         ; 040257 || 	ld	a,l                         ; 040257 || 040257 7D          0878  			LD	A,L
	ld	hl,$000000                  ; 040258 || 	ld	hl,$000000                  ; 040258 || 040258 21 00 00 00 0879  			LD	HL,0
	ld	l,a                         ; 04025C || 	ld	l,a                         ; 04025C || 04025C 6F          0880  			LD	L,A
	add	hl,sp                      ; 04025D || 	add	hl,sp                      ; 04025D || 04025D 39          0881  			ADD     HL,SP
	ld	sp,hl                       ; 04025E || 	ld	sp,hl                       ; 04025E || 04025E F9          0882  			LD      SP,HL
	ex	de,hl                       ; 04025F || 	ex	de,hl                       ; 04025F || 04025F EB          0883  			EX      DE,HL
	xor	a                          ; 040260 || 	xor	a                          ; 040260 || 040260 AF          0884  			XOR     A               	; Numeric marker
	ld	c,a                         ; 040261 || 	ld	c,a                         ; 040261 || 040261 4F          0885  			LD      C,A             	; Integer marker
	ex	af,af'                      ; 040262 || 	ex	af,af'                      ; 040262 || 040262 08          0886  			EX      AF,AF'
	ld	a,(iy)                      ; 040263 || 	ld	a,(iy)                      ; 040263 || 040263 FD 7E 00    0887  			LD      A,(IY)
	ret                            ; 040266 || 	ret                            ; 040266 || 040266 C9          0888  			RET
	call	$0402c9                   ; 040267 || 	call	$0402c4                   ; 040267 || 040267 CD C9 02 04 0892  EXPR3:			CALL    EXPR4			; Get first operator by calling Level 3
	cp	$2d                         ; 04026B || 	cp	$2d                         ; 04026B || 04026B FE 2D       0893  EXPR3A:			CP      '-'			; Is it "-"?
	jr	z,$+$0b                     ; 04026D || 	jr	z,$+$0b                     ; 04026D || 04026D 28 09       0894  			JR      Z,EXPR3B		; Yes, so skip the next bit
	cp	$2b                         ; 04026F || 	cp	$2b                         ; 04026F || 04026F FE 2B       0895  			CP      '+'			; Is it "+"?
	ret	nz                         ; 040271 || 	ret	nz                         ; 040271 || 040271 C0          0896  			RET     NZ			; No, so return
	ex	af,af'                      ; 040272 || 	ex	af,af'                      ; 040272 || 040272 08          0897  			EX      AF,AF'			; Get the type
	jp	m,$040286                   ; 040273 || 	jp	m,$040286                   ; 040273 || 040273 FA 86 02 04 0898  			JP      M,EXPR3S		; Branch here if string
	ex	af,af'                      ; 040277 || 	ex	af,af'                      ; 040277 || 040277 08          0899  			EX      AF,AF'
	call	$040a46                   ; 040278 || 	call	$040a3e                   ; 040278 || 040278 CD 46 0A 04 0900  EXPR3B:			CALL    SAVE_EV			; Save the first operator
	call	$0402c9                   ; 04027C || 	call	$0402c4                   ; 04027C || 04027C CD C9 02 04 0901  			CALL    EXPR4			; Fetch the second operator
	call	$040a55                   ; 040280 || 	call	$040a4d                   ; 040280 || 040280 CD 55 0A 04 0902  			CALL    DOIT			; Do the operation
	jr	$-$19                       ; 040284 || 	jr	$-$19                       ; 040284 || 040284 18 E5       0903  			JR      EXPR3A			; And continue
	ex	af,af'                      ; 040286 || 	ex	af,af'                      ; 040286 || 040286 08          0905  EXPR3S:			EX      AF,AF'			; Handle string concatenation
	inc	iy                         ; 040287 || 	inc	iy                         ; 040287 || 040287 FD 23       0906  			INC     IY              	; Bump past the "+"
	call	$0409b9                   ; 040289 || 	call	$0409b4                   ; 040289 || 040289 CD B9 09 04 0907  			CALL    PUSHS           	; Save the string on the stack
	call	$0402c9                   ; 04028D || 	call	$0402c4                   ; 04028D || 04028D CD C9 02 04 0908  			CALL    EXPR4           	; Fetch the second operator
	ex	af,af'                      ; 040291 || 	ex	af,af'                      ; 040291 || 040291 08          0909  			EX      AF,AF'
	jp	p,$04033b                   ; 040292 || 	jp	p,$040336                   ; 040292 || 040292 F2 3B 03 04 0910  			JP      P,TYPE_EV_			; If it is not a string, then Error: "Type mismatch"
	ld	bc,$000000                  ; 040296 || 	ld	bc,$000000                  ; 040296 || 040296 01 00 00 00 0911  			LD	BC, 0			; Clear BC
	ld	c,e                         ; 04029A || 	ld	c,e                         ; 04029A || 04029A 4B          0912  			LD      C,E             	; C: Length of the second string
	pop	de                         ; 04029B || 	pop	de                         ; 04029B || 04029B D1          0913  			POP     DE
	push	de                        ; 04029C || 	push	de                        ; 04029C || 04029C D5          0914  			PUSH    DE
	ld	hl,$044a00                  ; 04029D || 	ld	hl,$044a00                  ; 04029D || 04029D 21 00 4A 04 0915  			LD      HL,ACCS
	ld	a,e                         ; 0402A1                                         || 0402A1 7B          0916  			LD	A,E			;  E: Length of the first string
	ld	de,$044a00                  ; 0402A2                                         || 0402A2 11 00 4A 04 0917  			LD      DE,ACCS
	ld	e,a                         ; 0402A6                                         || 0402A6 5F          0918  			LD	E,A 			; DE: Pointer to the end of the first string
	ld	a,c                         ; 0402A7 || 	ld	a,c                         ; 0402A2 || 0402A7 79          0919  			LD      A,C
	or	a                           ; 0402A8 || 	or	a                           ; 0402A3 || 0402A8 B7          0920  			OR      A
	jr	z,$+$11                     ; 0402A9 || 	jr	z,$+$11                     ; 0402A4 || 0402A9 28 0F       0921  			JR      Z,EXP3S3
	ld	l,a                         ; 0402AB || 	ld	l,a                         ; 0402A6 || 0402AB 6F          0922  			LD      L,A             	; Source
	add	a,e                        ; 0402AC || 	add	a,e                        ; 0402A7 || 0402AC 83          0923  			ADD     A,E
	ld	e,a                         ; 0402AD || 	ld	e,a                         ; 0402A8 || 0402AD 5F          0924  			LD      E,A             	; Destination
	ld	a,$13                       ; 0402AE || 	ld	a,$13                       ; 0402A9 || 0402AE 3E 13       0925  			LD      A,19
	jp	c,$0437b6                   ; 0402B0 || 	jp	c,$043760                   ; 0402AB || 0402B0 DA B6 37 04 0926  			JP      C,ERROR_         	; A carry indicates string > 255 bytes, so Error: "String too long"
	push	de                        ; 0402B4 || 	push	de                        ; 0402AF || 0402B4 D5          0927  			PUSH    DE
	dec	e                          ; 0402B5 || 	dec	e                          ; 0402B0 || 0402B5 1D          0928  			DEC     E
	dec	l                          ; 0402B6 || 	dec	l                          ; 0402B1 || 0402B6 2D          0929  			DEC     L
	lddr                           ; 0402B7 || 	lddr                           ; 0402B2 || 0402B7 ED B8       0930  			LDDR                    	; Copy
	pop	de                         ; 0402B9 || 	pop	de                         ; 0402B4 || 0402B9 D1          0931  			POP     DE
	exx                            ; 0402BA || 	exx                            ; 0402B5 || 0402BA D9          0932  EXP3S3:			EXX
	pop	bc                         ; 0402BB || 	pop	bc                         ; 0402B6 || 0402BB C1          0933  			POP     BC
	call	$0409e6                   ; 0402BC || 	call	$0409de                   ; 0402B7 || 0402BC CD E6 09 04 0934  			CALL    POPS            	; Restore from stack
	exx                            ; 0402C0 || 	exx                            ; 0402BB || 0402C0 D9          0935  			EXX
	or	$80                         ; 0402C1 || 	or	$80                         ; 0402BC || 0402C1 F6 80       0936  			OR      80H             	; Flag as a string
	ex	af,af'                      ; 0402C3 || 	ex	af,af'                      ; 0402BE || 0402C3 08          0937  			EX      AF,AF'
	ld	a,(iy)                      ; 0402C4 || 	ld	a,(iy)                      ; 0402BF || 0402C4 FD 7E 00    0938  			LD      A,(IY)			; Fetch the next character
	jr	$-$5c                       ; 0402C7 || 	jr	$-$57                       ; 0402C2 || 0402C7 18 A2       0939  			JR      EXPR3A			; And continue
	call	$0402ea                   ; 0402C9 || 	call	$0402e5                   ; 0402C4 || 0402C9 CD EA 02 04 0943  EXPR4:			CALL    EXPR5			; Get first operator by calling Level 2
	cp	$2a                         ; 0402CD || 	cp	$2a                         ; 0402C8 || 0402CD FE 2A       0944  EXPR4A:			CP      '*'			; "*" is valid
	jr	z,$+$0d                     ; 0402CF || 	jr	z,$+$0d                     ; 0402CA || 0402CF 28 0B       0945  			JR      Z,EXPR4B
	cp	$2f                         ; 0402D1 || 	cp	$2f                         ; 0402CC || 0402D1 FE 2F       0946  			CP      '/'			; "/" is valid
	jr	z,$+$09                     ; 0402D3 || 	jr	z,$+$09                     ; 0402CE || 0402D3 28 07       0947  			JR      Z,EXPR4B
	cp	$83                         ; 0402D5 || 	cp	$83                         ; 0402D0 || 0402D5 FE 83       0948  			CP      MODK			; MOD token is valid
	jr	z,$+$05                     ; 0402D7 || 	jr	z,$+$05                     ; 0402D2 || 0402D7 28 03       0949  			JR      Z,EXPR4B
	cp	$81                         ; 0402D9 || 	cp	$81                         ; 0402D4 || 0402D9 FE 81       0950  			CP      DIVK			; DIV token is valid
	ret	nz                         ; 0402DB || 	ret	nz                         ; 0402D6 || 0402DB C0          0951  			RET     NZ			; And return if it is anything else
	call	$040a46                   ; 0402DC || 	call	$040a3e                   ; 0402D7 || 0402DC CD 46 0A 04 0952  EXPR4B:			CALL    SAVE_EV
	call	$0402ea                   ; 0402E0 || 	call	$0402e5                   ; 0402DB || 0402E0 CD EA 02 04 0953  			CALL    EXPR5
	call	$040a55                   ; 0402E4 || 	call	$040a4d                   ; 0402DF || 0402E4 CD 55 0A 04 0954  			CALL    DOIT
	jr	$-$1b                       ; 0402E8 || 	jr	$-$1b                       ; 0402E3 || 0402E8 18 E3       0955  			JR      EXPR4A
	call	$0403ca                   ; 0402EA || 	call	$0403c5                   ; 0402E5 || 0402EA CD CA 03 04 0959  EXPR5:			CALL    ITEM			; Get variable
	or	a                           ; 0402EE || 	or	a                           ; 0402E9 || 0402EE B7          0960  			OR      A               	; Test type
	ex	af,af'                      ; 0402EF || 	ex	af,af'                      ; 0402EA || 0402EF 08          0961  			EX      AF,AF'          	; Save type
	call	$040a78                   ; 0402F0 || 	call	$040a70                   ; 0402EB || 0402F0 CD 78 0A 04 0962  EXPR5A:			CALL    NXT			; Skip spaces
	cp	$5e                         ; 0402F4 || 	cp	$5e                         ; 0402EF || 0402F4 FE 5E       0963  			CP      '^'			; Is the operator "^"?
	ret	nz                         ; 0402F6 || 	ret	nz                         ; 0402F1 || 0402F6 C0          0964  			RET     NZ			; No, so return
	call	$040a46                   ; 0402F7 || 	call	$040a3e                   ; 0402F2 || 0402F7 CD 46 0A 04 0965  			CALL    SAVE_EV			; Save first operand
	call	$0403ca                   ; 0402FB || 	call	$0403c5                   ; 0402F6 || 0402FB CD CA 03 04 0966  			CALL    ITEM			; Get second operand
	or	a                           ; 0402FF || 	or	a                           ; 0402FA || 0402FF B7          0967  			OR      A			; Test type
	ex	af,af'                      ; 040300 || 	ex	af,af'                      ; 0402FB || 040300 08          0968  			EX      AF,AF'			; Save type
	call	$040a55                   ; 040301 || 	call	$040a4d                   ; 0402FC || 040301 CD 55 0A 04 0969  			CALL    DOIT			; Do the operation
	jr	$-$15                       ; 040305 || 	jr	$-$15                       ; 040300 || 040305 18 E9       0970  			JR      EXPR5A			; And continue
	call	$0401c7                   ; 040307 || 	call	$0401c7                   ; 040302 || 040307 CD C7 01 04 0974  EXPRN:			CALL    EXPR			; Evaluate expression
	ex	af,af'                      ; 04030B || 	ex	af,af'                      ; 040306 || 04030B 08          0975  			EX      AF,AF'			; Get the type
	ret	p                          ; 04030C || 	ret	p                          ; 040307 || 04030C F0          0976  			RET     P			; And return if it is a number
	jr	$+$2e                       ; 04030D || 	jr	$+$2e                       ; 040308 || 04030D 18 2C       0977  			JR      TYPE_EV_			; Otherwise Error: "Type mismatch"
	call	$0401c7                   ; 04030F || 	call	$0401c7                   ; 04030A || 04030F CD C7 01 04 0981  EXPRI:			CALL    EXPR			; Evaluate the expression
	ex	af,af'                      ; 040313 || 	ex	af,af'                      ; 04030E || 040313 08          0982  			EX      AF,AF'			; Get the type
	jp	p,$040667                   ; 040314 || 	jp	p,$040662                   ; 04030F || 040314 F2 67 06 04 0983  			JP      P,SFIX			; If it is numeric, then convert to fixed-point notation
	jr	$+$23                       ; 040318 || 	jr	$+$23                       ; 040313 || 040318 18 21       0984  			JR      TYPE_EV_			; Otherwise Error: "Type mismatch"
	call	$0401c7                   ; 04031A || 	call	$0401c7                   ; 040315 || 04031A CD C7 01 04 0988  EXPRS:			CALL    EXPR			; Evaluate the expression
	ex	af,af'                      ; 04031E || 	ex	af,af'                      ; 040319 || 04031E 08          0989  			EX      AF,AF'			; Get the type
	ret	m                          ; 04031F || 	ret	m                          ; 04031A || 04031F F8          0990  			RET     M			; And return if it is a string
	jr	$+$1b                       ; 040320 || 	jr	$+$1b                       ; 04031B || 040320 18 19       0991  			JR      TYPE_EV_			; Otherwise Error: "Type mismatch"
	call	$0403ca                   ; 040322 || 	call	$0403c5                   ; 04031D || 040322 CD CA 03 04 0995  ITEMN:			CALL    ITEM			; Get the variable
	or	a                           ; 040326 || 	or	a                           ; 040321 || 040326 B7          0996  			OR      A			; Test the type
	ret	p                          ; 040327 || 	ret	p                          ; 040322 || 040327 F0          0997  			RET     P			; And return if it is a number
	jr	$+$13                       ; 040328 || 	jr	$+$13                       ; 040323 || 040328 18 11       0998  			JR      TYPE_EV_			; Otherwise Error: "Type mismatch"
	call	$0403ca                   ; 04032A || 	call	$0403c5                   ; 040325 || 04032A CD CA 03 04 1002  ITEMI:			CALL    ITEM			; Get the variable
	or	a                           ; 04032E || 	or	a                           ; 040329 || 04032E B7          1003  			OR      A			; Test the type
	jp	p,$040667                   ; 04032F || 	jp	p,$040662                   ; 04032A || 04032F F2 67 06 04 1004  			JP      P,SFIX			; If it is numeric, then convert to fixed-point notation
	jr	$+$08                       ; 040333 || 	jr	$+$08                       ; 04032E || 040333 18 06       1005  			JR      TYPE_EV_			; Otherwise Error: "Type mismatch"
	call	$0403ca                   ; 040335 || 	call	$0403c5                   ; 040330 || 040335 CD CA 03 04 1009  ITEMS:			CALL    ITEM			; Get the variable
	or	a                           ; 040339 || 	or	a                           ; 040334 || 040339 B7          1010  			OR      A			; Test the type
	ret	m                          ; 04033A || 	ret	m                          ; 040335 || 04033A F8          1011  			RET     M			; If it is a string, then return
	ld	a,$06                       ; 04033B || 	ld	a,$06                       ; 040336 || 04033B 3E 06       1013  TYPE_EV_:			LD      A,6			; Error: "Type mismatch"
	jp	$0437b6                     ; 04033D || 	jp	$043760                     ; 040338 || 04033D C3 B6 37 04 1014  			JP      ERROR_
	call	$0401c7                   ; 040341 || 	call	$0401c7                   ; 04033C || 040341 CD C7 01 04 1018  ITEM1:			CALL    EXPR            	; Evaluate the expression
	call	$040a37                   ; 040345 || 	call	$040a2f                   ; 040340 || 040345 CD 37 0A 04 1019  			CALL    BRAKET			; Check for closing bracket
	ex	af,af'                      ; 040349 || 	ex	af,af'                      ; 040344 || 040349 08          1020  			EX      AF,AF'
	ret                            ; 04034A || 	ret                            ; 040345 || 04034A C9          1021  			RET
	call	$040998                   ; 04034B || 	call	$040993                   ; 040346 || 04034B CD 98 09 04 1028  HEX:			CALL    ZERO			; Set result to 0
	call	$040a00                   ; 04034F || 	call	$0409f8                   ; 04034A || 04034F CD 00 0A 04 1029  			CALL    HEXDIG			; Fetch the character from IY
	jr	c,$+$1d                     ; 040353 || 	jr	c,$+$1d                     ; 04034E || 040353 38 1B       1030  			JR      C,BADHEX		; If invalid HEX character, then Error: "Bad HEX"
	inc	iy                         ; 040355 || 	inc	iy                         ; 040350 || 040355 FD 23       1031  HEX1:			INC     IY			; Move pointer to next character
	and	$0f                        ; 040357 || 	and	$0f                        ; 040352 || 040357 E6 0F       1032  			AND     0FH			; Clear the top nibble
	ld	b,$04                       ; 040359 || 	ld	b,$04                       ; 040354 || 040359 06 04       1033  			LD      B,4			; Loop counter
	exx                            ; 04035B || 	exx                            ; 040356 || 04035B D9          1035  HEX2:			EXX				; Shift the result left B (4) times. This makes
	add.sil	hl,hl                  ; 04035C || 	add.sil	hl,hl                  ; 040357 || 04035C 52 29       1036  			ADD.S   HL,HL			; space for the incoming nibble in the least significant 4 bits
	exx                            ; 04035E || 	exx                            ; 040359 || 04035E D9          1037  			EXX				; .
	adc.sil	hl,hl                  ; 04035F || 	adc.sil	hl,hl                  ; 04035A || 04035F 52 ED 6A    1038  			ADC.S   HL,HL			; .
	djnz	$-$07                     ; 040362 || 	djnz	$-$07                     ; 04035D || 040362 10 F7       1039  			DJNZ    HEX2			; And loop
	exx                            ; 040364 || 	exx                            ; 04035F || 040364 D9          1040  			EXX
	or	l                           ; 040365 || 	or	l                           ; 040360 || 040365 B5          1041  			OR      L			; OR in the digit
	ld	l,a                         ; 040366 || 	ld	l,a                         ; 040361 || 040366 6F          1042  			LD      L,A
	exx                            ; 040367 || 	exx                            ; 040362 || 040367 D9          1043  			EXX
	call	$040a00                   ; 040368 || 	call	$0409f8                   ; 040363 || 040368 CD 00 0A 04 1045  			CALL    HEXDIG			; Fetch the next character
	jr	nc,$-$17                    ; 04036C || 	jr	nc,$-$17                    ; 040367 || 04036C 30 E7       1046  			JR      NC,HEX1			; If it is a HEX digit then loop
	xor	a                          ; 04036E || 	xor	a                          ; 040369 || 04036E AF          1047  			XOR     A			; Clear A
	ret                            ; 04036F || 	ret                            ; 04036A || 04036F C9          1048  			RET
	ld	a,$1c                       ; 040370 || 	ld	a,$1c                       ; 04036B || 040370 3E 1C       1050  BADHEX:			LD      A,28
	jp	$0437b6                     ; 040372 || 	jp	$043760                     ; 04036D || 040372 C3 B6 37 04 1051  			JP      ERROR_          	; Error: "Bad HEX"
	call	$040998                   ; 040376 || 	call	$040993                   ; 040371 || 040376 CD 98 09 04 1058  BIN:			CALL    ZERO			; Set result to 0
	call	$040a13                   ; 04037A || 	call	$040a0b                   ; 040375 || 04037A CD 13 0A 04 1059  			CALL	BINDIG			; Fetch the character from IY
	jr	c,$+$15                     ; 04037E || 	jr	c,$+$15                     ; 040379 || 04037E 38 13       1060  			JR	C,BADBIN		; If invalid BIN character then Error: "Bad Binary"
	inc	iy                         ; 040380 || 	inc	iy                         ; 04037B || 040380 FD 23       1061  BIN1:			INC	IY			; Move pointer to next character
	rrca                           ; 040382 || 	rrca                           ; 04037D || 040382 0F          1062  			RRCA				; Bit 0 of ASCII '0' is 0, and ASCII '1' is 1, so shift that bit into carry
	exx                            ; 040383 || 	exx                            ; 04037E || 040383 D9          1063  			EXX				;
	adc.sil	hl,hl                  ; 040384 || 	adc.sil	hl,hl                  ; 04037F || 040384 52 ED 6A    1064  			ADC.S	HL,HL			; And shift back into into H'L'HL (note the ADC)
	exx                            ; 040387 || 	exx                            ; 040382 || 040387 D9          1065  			EXX
	adc.sil	hl,hl                  ; 040388 || 	adc.sil	hl,hl                  ; 040383 || 040388 52 ED 6A    1066  			ADC.S	HL,HL
	call	$040a13                   ; 04038B || 	call	$040a0b                   ; 040386 || 04038B CD 13 0A 04 1067  			CALL	BINDIG			; Fetch the next character
	jr	nc,$-$0f                    ; 04038F || 	jr	nc,$-$0f                    ; 04038A || 04038F 30 EF       1068  			JR	NC,BIN1
	xor	a                          ; 040391 || 	xor	a                          ; 04038C || 040391 AF          1069  			XOR	A			; Clear A
	ret                            ; 040392 || 	ret                            ; 04038D || 040392 C9          1070  			RET
	ld	a,$1c                       ; 040393 || 	ld	a,$1c                       ; 04038E || 040393 3E 1C       1072  BADBIN:			LD	A, 28			; Error: "Bad Binary" - reuses same error code as Bad HEX
	call	$0437cd                   ; 040395 || 	call	$043777                   ; 040390 || 040395 CD CD 37 04 1073  			CALL	EXTERR
	ld	b,d                         ; 040399 || 	ld	b,d                         ; 040394 || 040399 42 61 64 20 1074  			DB	"Bad Binary", 0
	ld	h,c                         ; 04039A || 	ld	h,c                         ; 040395
	ld	h,h                         ; 04039B || 	ld	h,h                         ; 040396
	jr	nz,$+$44                    ; 04039C || 	jr	nz,$+$44                    ; 040397
	ld	l,c                         ; 04039E || 	ld	l,c                         ; 040399
	ld	l,(hl)                      ; 04039F || 	ld	l,(hl)                      ; 04039A
	ld	h,c                         ; 0403A0 || 	ld	h,c                         ; 04039B
	ld	(hl),d                      ; 0403A1 || 	ld	(hl),d                      ; 04039C
	ld	a,c                         ; 0403A2 || 	ld	a,c                         ; 04039D
	nop                            ; 0403A3 || 	nop                            ; 04039E
	call	$040322                   ; 0403A4 || 	call	$04031d                   ; 04039F || 0403A4 CD 22 03 04 1081  MINUS:			CALL    ITEMN			; Get the numeric argument
	dec	c                          ; 0403A8 || 	dec	c                          ; 0403A3 || 0403A8 0D          1082  MINUS0:			DEC     C			; Check exponent (C)
	inc	c                          ; 0403A9 || 	inc	c                          ; 0403A4 || 0403A9 0C          1083  			INC     C			; If it is zero, then it's either a FP zero or an integer
	jr	z,$+$08                     ; 0403AA || 	jr	z,$+$08                     ; 0403A5 || 0403AA 28 06       1084  			JR      Z,NEGATE_EV        	; So do an integer negation
	ld	a,h                         ; 0403AC || 	ld	a,h                         ; 0403A7 || 0403AC 7C          1086  			LD      A,H			; Do a FP negation by
	xor	$80                        ; 0403AD || 	xor	$80                        ; 0403A8 || 0403AD EE 80       1087  			XOR     80H             	; Toggling the sign bit (H)
	ld	h,a                         ; 0403AF || 	ld	h,a                         ; 0403AA || 0403AF 67          1088  			LD      H,A
	xor	a                          ; 0403B0 || 	xor	a                          ; 0403AB || 0403B0 AF          1089  			XOR     A               	; Numeric marker
	ret                            ; 0403B1 || 	ret                            ; 0403AC || 0403B1 C9          1090  			RET
	exx                            ; 0403B2 || 	exx                            ; 0403AD || 0403B2 D9          1092  NEGATE_EV:			EXX				; This section does a two's complement negation on H'L'HLC
	ld	a,h                         ; 0403B3 || 	ld	a,h                         ; 0403AE || 0403B3 7C          1093  			LD      A,H			; First do a one's complement by negating all the bytes
	cpl                            ; 0403B4 || 	cpl                            ; 0403AF || 0403B4 2F          1094  			CPL
	ld	h,a                         ; 0403B5 || 	ld	h,a                         ; 0403B0 || 0403B5 67          1095  			LD      H,A
	ld	a,l                         ; 0403B6 || 	ld	a,l                         ; 0403B1 || 0403B6 7D          1096  			LD      A,L
	cpl                            ; 0403B7 || 	cpl                            ; 0403B2 || 0403B7 2F          1097  			CPL
	ld	l,a                         ; 0403B8 || 	ld	l,a                         ; 0403B3 || 0403B8 6F          1098  			LD      L,A
	exx                            ; 0403B9 || 	exx                            ; 0403B4 || 0403B9 D9          1099  			EXX
	ld	a,h                         ; 0403BA || 	ld	a,h                         ; 0403B5 || 0403BA 7C          1100  			LD      A,H
	cpl                            ; 0403BB || 	cpl                            ; 0403B6 || 0403BB 2F          1101  			CPL
	ld	h,a                         ; 0403BC || 	ld	h,a                         ; 0403B7 || 0403BC 67          1102  			LD      H,A
	ld	a,l                         ; 0403BD || 	ld	a,l                         ; 0403B8 || 0403BD 7D          1103  			LD      A,L
	cpl                            ; 0403BE || 	cpl                            ; 0403B9 || 0403BE 2F          1104  			CPL
	ld	l,a                         ; 0403BF || 	ld	l,a                         ; 0403BA || 0403BF 6F          1105  			LD      L,A
	exx                            ; 0403C0 || 	exx                            ; 0403BB || 0403C0 D9          1106  ADD1:			EXX				; Then add 1
	inc	hl                         ; 0403C1 || 	inc	hl                         ; 0403BC || 0403C1 23          1107  			INC     HL
	ld	a,h                         ; 0403C2 || 	ld	a,h                         ; 0403BD || 0403C2 7C          1108  			LD      A,H
	or	l                           ; 0403C3 || 	or	l                           ; 0403BE || 0403C3 B5          1109  			OR      L
	exx                            ; 0403C4 || 	exx                            ; 0403BF || 0403C4 D9          1110  			EXX
	ld	a,$00                       ; 0403C5 || 	ld	a,$00                       ; 0403C0 || 0403C5 3E 00       1111  			LD      A,0             	; Numeric marker
	ret	nz                         ; 0403C7 || 	ret	nz                         ; 0403C2 || 0403C7 C0          1112  			RET     NZ
	inc	hl                         ; 0403C8 || 	inc	hl                         ; 0403C3 || 0403C8 23          1113  			INC     HL
	ret                            ; 0403C9 || 	ret                            ; 0403C4 || 0403C9 C9          1114  			RET
	call	$041681                   ; 0403CA || 	call	$04164f                   ; 0403C5 || 0403CA CD 81 16 04 1123  ITEM:			CALL    CHECK			; Check there's at least a page of free memory left and Error: "No room" if not
	call	$040a78                   ; 0403CE || 	call	$040a70                   ; 0403C9 || 0403CE CD 78 0A 04 1124  			CALL    NXT			; Skip spaces
	inc	iy                         ; 0403D2 || 	inc	iy                         ; 0403CD || 0403D2 FD 23       1125  			INC     IY			; Move to the prefix character
	cp	$26                         ; 0403D4 || 	cp	$26                         ; 0403CF || 0403D4 FE 26       1126  			CP      '&'			; If `&`
	jp	z,$04034b                   ; 0403D6 || 	jp	z,$040346                   ; 0403D1 || 0403D6 CA 4B 03 04 1127  			JP      Z,HEX           	; Then get a HEX constant
	cp	$25                         ; 0403DA || 	cp	$25                         ; 0403D5 || 0403DA FE 25       1128  			CP	'%'			; If '%'
	jr	z,$-$66                     ; 0403DC || 	jr	z,$-$66                     ; 0403D7 || 0403DC 28 98       1129  			JR	Z,BIN			; Then get a BINARY constant
	cp	$2d                         ; 0403DE || 	cp	$2d                         ; 0403D9 || 0403DE FE 2D       1130  			CP      '-'			; If `-`
	jr	z,$-$3c                     ; 0403E0 || 	jr	z,$-$3c                     ; 0403DB || 0403E0 28 C2       1131  			JR      Z,MINUS         	; Then get a negative number
	cp	$2b                         ; 0403E2 || 	cp	$2b                         ; 0403DD || 0403E2 FE 2B       1132  			CP      '+'			; If `+`
	jp	z,$040322                   ; 0403E4 || 	jp	z,$04031d                   ; 0403DF || 0403E4 CA 22 03 04 1133  			JP      Z,ITEMN         	; Then just fetch the number (unary plus)
	cp	$28                         ; 0403E8 || 	cp	$28                         ; 0403E3 || 0403E8 FE 28       1134  			CP      '('			; If `(`
	jp	z,$040341                   ; 0403EA || 	jp	z,$04033c                   ; 0403E5 || 0403EA CA 41 03 04 1135  			JP      Z,ITEM1         	; Start of a bracketed expression
	cp	$22                         ; 0403EE || 	cp	$22                         ; 0403E9 || 0403EE FE 22       1136  			CP      34			; If `"`
	jr	z,$+$7c                     ; 0403F0 || 	jr	z,$+$7c                     ; 0403EB || 0403F0 28 7A       1137  			JR      Z,CONS          	; Start of a string constant
	cp	$c6                         ; 0403F2 || 	cp	$c6                         ; 0403ED || 0403F2 FE C6       1138  			CP      TCMD			; Is it out of range of the function table?
	jp	nc,$040c9f                  ; 0403F4 || 	jp	nc,$040c97                  ; 0403EF || 0403F4 D2 9F 0C 04 1139  			JP      NC,SYNTAX       	; Error: "Syntax Error"
	cp	$8d                         ; 0403F8 || 	cp	$8d                         ; 0403F3 || 0403F8 FE 8D       1140  			CP      FUNTOK			; If it is in range, then
	jp	nc,$040a8b                  ; 0403FA || 	jp	nc,$040a83                  ; 0403F5 || 0403FA D2 8B 0A 04 1141  			JP      NC,DISPAT       	; It's a function
	dec	iy                         ; 0403FE || 	dec	iy                         ; 0403F9 || 0403FE FD 2B       1142  			DEC     IY
	cp	$3a                         ; 040400 || 	cp	$3a                         ; 0403FB || 040400 FE 3A       1143  			CP      ':'
	jr	nc,$+$0e                    ; 040402 || 	jr	nc,$+$0e                    ; 0403FD || 040402 30 0C       1144  			JR      NC,ITEM2		; VARIABLE?
	cp	$30                         ; 040404 || 	cp	$30                         ; 0403FF || 040404 FE 30       1145  			CP      '0'
	jp	nc,$040493                  ; 040406 || 	jp	nc,$04048e                  ; 040401 || 040406 D2 93 04 04 1146  			JP      NC,CON			; NUMERIC CONSTANT
	cp	$2e                         ; 04040A || 	cp	$2e                         ; 040405 || 04040A FE 2E       1147  			CP      '.'
	jp	z,$040493                   ; 04040C || 	jp	z,$04048e                   ; 040407 || 04040C CA 93 04 04 1148  			JP      Z,CON			; NUMERIC CONSTANT
	call	$043a90                   ; 040410 || 	call	$043a3a                   ; 04040B || 040410 CD 90 3A 04 1149  ITEM2:			CALL    GETVAR			; VARIABLE
	jr	nz,$+$39                    ; 040414 || 	jr	nz,$+$39                    ; 04040F || 040414 20 37       1150  			JR      NZ,NOSUCH
	or	a                           ; 040416 || 	or	a                           ; 040411 || 040416 B7          1151  			OR      A
	jp	m,$0404a5                   ; 040417 || 	jp	m,$0404a0                   ; 040412 || 040417 FA A5 04 04 1152  			JP      M,LOADS			; STRING VARIABLE
	or	a                           ; 04041B || 	or	a                           ; 040416 || 04041B B7          1153  LOADN:			OR      A
	jr	z,$+$22                     ; 04041C || 	jr	z,$+$22                     ; 040417 || 04041C 28 20       1154  			JR      Z,LOAD1			; BYTE VARIABLE
	ld	c,$00                       ; 04041E || 	ld	c,$00                       ; 040419 || 04041E 0E 00       1155  			LD      C,0
	bit	0,a                        ; 040420 || 	bit	0,a                        ; 04041B || 040420 CB 47       1156  			BIT     0,A
	jr	z,$+$05                     ; 040422 || 	jr	z,$+$05                     ; 04041D || 040422 28 03       1157  			JR      Z,LOAD4			; INTEGER VARIABLE
	ld	c,(ix+$04)                  ; 040424 || 	ld	c,(ix+$04)                  ; 04041F || 040424 DD 4E 04    1158  LOAD5:			LD      C,(IX+4)
	exx                            ; 040427 || 	exx                            ; 040422 || 040427 D9          1159  LOAD4:			EXX
	ld	hl,$000000                  ; 040428 || 	ld	hl,$000000                  ; 040423 || 040428 21 00 00 00 1160  			LD	HL, 0			; TODO: Optimise
	ld	l,(ix)                      ; 04042C || 	ld	l,(ix)                      ; 040427 || 04042C DD 6E 00    1161  			LD      L,(IX+0)
	ld	h,(ix+$01)                  ; 04042F || 	ld	h,(ix+$01)                  ; 04042A || 04042F DD 66 01    1162  			LD      H,(IX+1)
	exx                            ; 040432 || 	exx                            ; 04042D || 040432 D9          1163  			EXX
	ld	hl,$000000                  ; 040433 || 	ld	hl,$000000                  ; 04042E || 040433 21 00 00 00 1164  			LD	HL, 0			; TODO: Optimise
	ld	l,(ix+$02)                  ; 040437 || 	ld	l,(ix+$02)                  ; 040432 || 040437 DD 6E 02    1165  			LD      L,(IX+2)
	ld	h,(ix+$03)                  ; 04043A || 	ld	h,(ix+$03)                  ; 040435 || 04043A DD 66 03    1166  			LD      H,(IX+3)
	ret                            ; 04043D || 	ret                            ; 040438 || 04043D C9          1167  			RET
	ld	hl,$000000                  ; 04043E || 	ld	hl,$000000                  ; 040439 || 04043E 21 00 00 00 1169  LOAD1:			LD      HL,0
	exx                            ; 040442 || 	exx                            ; 04043D || 040442 D9          1170  			EXX
	ld	hl,$000000                  ; 040443 || 	ld	hl,$000000                  ; 04043E || 040443 21 00 00 00 1171  			LD      HL,0			; TODO: Optimise
	ld	l,(ix)                      ; 040447 || 	ld	l,(ix)                      ; 040442 || 040447 DD 6E 00    1172  			LD      L,(IX+0)
	exx                            ; 04044A || 	exx                            ; 040445 || 04044A D9          1173  			EXX
	ld	c,h                         ; 04044B || 	ld	c,h                         ; 040446 || 04044B 4C          1174  			LD      C,H
	ret                            ; 04044C || 	ret                            ; 040447 || 04044C C9          1175  			RET
	jp	c,$040c9f                   ; 04044D || 	jp	c,$040c97                   ; 040448 || 04044D DA 9F 0C 04 1177  NOSUCH:			JP      C,SYNTAX
	ld	a,($044d40)                 ; 040451 || 	ld	a,($044d40)                 ; 04044C || 040451 3A 40 4D 04 1178  			LD      A,(LISTON)
	bit	5,a                        ; 040455 || 	bit	5,a                        ; 040450 || 040455 CB 6F       1179  			BIT     5,A
	ld	a,$1a                       ; 040457 || 	ld	a,$1a                       ; 040452 || 040457 3E 1A       1180  			LD      A,26
	jr	nz,$+$28                    ; 040459 || 	jr	nz,$+$28                    ; 040454 || 040459 20 26       1181  			JR      NZ,ERROR0_EV		; Throw "No such variable"
	inc	iy                         ; 04045B || 	inc	iy                         ; 040456 || 04045B FD 23       1182  NOS1:			INC     IY
	call	$043cc5                   ; 04045D || 	call	$043c6f                   ; 040458 || 04045D CD C5 3C 04 1183  			CALL    RANGE
	jr	nc,$-$06                    ; 040461 || 	jr	nc,$-$06                    ; 04045C || 040461 30 F8       1184  			JR      NC,NOS1
	ld	ix,$044c40                  ; 040463 || 	ld	ix,$044c40                  ; 04045E || 040463 DD 21 40 4C 1185  			LD      IX,PC
	xor	a                          ; 040468 || 	xor	a                          ; 040463 || 040468 AF          1186  			XOR     A
	ld	c,a                         ; 040469 || 	ld	c,a                         ; 040464 || 040469 4F          1187  			LD      C,A
	jr	$-$43                       ; 04046A || 	jr	$-$43                       ; 040465 || 04046A 18 BB       1188  			JR      LOAD4
	ld	de,$044a00                  ; 04046C || 	ld	de,$044a00                  ; 040467 || 04046C 11 00 4A 04 1197  CONS:			LD      DE,ACCS			; DE: Pointer to the string accumulator
	ld	a,(iy)                      ; 040470 || 	ld	a,(iy)                      ; 04046B || 040470 FD 7E 00    1198  CONS3:			LD      A,(IY)			; Fetch the first character and
	inc	iy                         ; 040473 || 	inc	iy                         ; 04046E || 040473 FD 23       1199  			INC     IY			; Increment the pointer
	cp	$22                         ; 040475 || 	cp	$22                         ; 040470 || 040475 FE 22       1200  			CP      '"'			; Check for start quote
	jr	z,$+$0e                     ; 040477 || 	jr	z,$+$0e                     ; 040472 || 040477 28 0C       1201  			JR      Z,CONS2			; Yes, so jump to the bit that parses the string
	ld	(de),a                      ; 040479 || 	ld	(de),a                      ; 040474 || 040479 12          1203  CONS1:			LD      (DE),A			; Store the character in the string accumulator
	inc	e                          ; 04047A || 	inc	e                          ; 040475 || 04047A 1C          1204  			INC     E			; Increment the string accumulator pointer
	cp	$0d                         ; 04047B || 	cp	$0d                         ; 040476 || 04047B FE 0D       1205  			CP      CR			; Is it CR
	jr	nz,$-$0d                    ; 04047D || 	jr	nz,$-$0d                    ; 040478 || 04047D 20 F1       1206  			JR      NZ,CONS3		; No, so keep looping
	ld	a,$09                       ; 04047F || 	ld	a,$09                       ; 04047A || 04047F 3E 09       1208  			LD      A,9
	jp	$0437b6                     ; 040481 || 	jp	$043760                     ; 04047C || 040481 C3 B6 37 04 1209  ERROR0_EV:			JP      ERROR_           	; Throw error "Missing '"'
	ld	a,(iy)                      ; 040485 || 	ld	a,(iy)                      ; 040480 || 040485 FD 7E 00    1211  CONS2:			LD      A,(IY)			; Fetch the next character
	cp	$22                         ; 040488 || 	cp	$22                         ; 040483 || 040488 FE 22       1212  			CP      '"'			; Check for end quote?
	inc	iy                         ; 04048A || 	inc	iy                         ; 040485 || 04048A FD 23       1213  			INC     IY			; Increment the pointer
	jr	z,$-$13                     ; 04048C || 	jr	z,$-$13                     ; 040487 || 04048C 28 EB       1214  			JR      Z,CONS1			; It is the end of string marker so jump to the end routine
	dec	iy                         ; 04048E || 	dec	iy                         ; 040489 || 04048E FD 2B       1215  			DEC     IY			;
	ld	a,$80                       ; 040490 || 	ld	a,$80                       ; 04048B || 040490 3E 80       1216  			LD      A,80H           	; String marker
	ret                            ; 040492 || 	ret                            ; 04048D || 040492 C9          1217  			RET
	push	iy                        ; 040493 || 	push	iy                        ; 04048E || 040493 FD E5       1225  CON:			PUSH    IY
	pop	ix                         ; 040495 || 	pop	ix                         ; 040490 || 040495 DD E1       1226  			POP     IX
	ld	a,$24                       ; 040497 || 	ld	a,$24                       ; 040492 || 040497 3E 24       1227  			LD      A,36
	call	$0420a2                   ; 040499 || 	call	$04206a                   ; 040494 || 040499 CD A2 20 04 1228  			CALL    FPP
	jr	c,$-$1c                     ; 04049D || 	jr	c,$-$1c                     ; 040498 || 04049D 38 E2       1229  			JR      C,ERROR0_EV
	push	ix                        ; 04049F || 	push	ix                        ; 04049A || 04049F DD E5       1230  			PUSH    IX
	pop	iy                         ; 0404A1 || 	pop	iy                         ; 04049C || 0404A1 FD E1       1231  			POP     IY
	xor	a                          ; 0404A3 || 	xor	a                          ; 04049E || 0404A3 AF          1232  			XOR     A
	ret                            ; 0404A4 || 	ret                            ; 04049F || 0404A4 C9          1233  			RET
	ld	de,$044a00                  ; 0404A5 || 	ld	de,$044a00                  ; 0404A0 || 0404A5 11 00 4A 04 1235  LOADS:			LD      DE,ACCS			; Where to store the string
	rra                            ; 0404A9 || 	rra                            ; 0404A4 || 0404A9 1F          1236  			RRA
	jr	nc,$+$1c                    ; 0404AA || 	jr	nc,$+$1c                    ; 0404A5 || 0404AA 30 1A       1237  			JR      NC,LOADS2       	; Skip if it is a fixed string
	exx                            ; 0404AC || 	exx                            ; 0404A7 || 0404AC D9          1239  			EXX				; This block was a call to LOAD4
	ld	l,(ix)                      ; 0404AD || 	ld	l,(ix)                      ; 0404A8 || 0404AD DD 6E 00    1240  			LD      L,(IX+0)		; The length of the string currently stored in the allocated space
	ld	h,(ix+$01)                  ; 0404B0 || 	ld	h,(ix+$01)                  ; 0404AB || 0404B0 DD 66 01    1241  			LD      H,(IX+1)		; The maximum original string length
	exx                            ; 0404B3 || 	exx                            ; 0404AE || 0404B3 D9          1242  			EXX
	ld	hl,(ix+$02)                 ; 0404B4 || 	ld	hl,(ix+$02)                 ; 0404AF || 0404B4 DD 27 02    1243  			LD	HL,(IX+2)		; Address of the string (24-bit)
	exx                            ; 0404B7 || 	exx                            ; 0404B2 || 0404B7 D9          1245  			EXX
	ld	a,l                         ; 0404B8 || 	ld	a,l                         ; 0404B3 || 0404B8 7D          1246  			LD      A,L
	exx                            ; 0404B9 || 	exx                            ; 0404B4 || 0404B9 D9          1247  			EXX
	or	a                           ; 0404BA || 	or	a                           ; 0404B5 || 0404BA B7          1248  			OR      A
	ld	bc,$000000                  ; 0404BB || 	ld	bc,$000000                  ; 0404B6 || 0404BB 01 00 00 00 1249  			LD	BC,0			; BC: Number of bytes to copy
	ld	c,a                         ; 0404BF || 	ld	c,a                         ; 0404BA || 0404BF 4F          1250  			LD      C,A
	ld	a,$80                       ; 0404C0 || 	ld	a,$80                       ; 0404BB || 0404C0 3E 80       1251  			LD      A,80H           	; String marker
	ret	z                          ; 0404C2 || 	ret	z                          ; 0404BD || 0404C2 C8          1252  			RET     Z
	ldir                           ; 0404C3 || 	ldir                           ; 0404BE || 0404C3 ED B0       1253  			LDIR
	ret                            ; 0404C5 || 	ret                            ; 0404C0 || 0404C5 C9          1254  			RET
	ld	a,(hl)                      ; 0404C6 || 	ld	a,(hl)                      ; 0404C1 || 0404C6 7E          1255  LOADS2:			LD      A,(HL)
	ld	(de),a                      ; 0404C7 || 	ld	(de),a                      ; 0404C2 || 0404C7 12          1256  			LD      (DE),A
	inc	hl                         ; 0404C8 || 	inc	hl                         ; 0404C3 || 0404C8 23          1257  			INC     HL
	cp	$0d                         ; 0404C9 || 	cp	$0d                         ; 0404C4 || 0404C9 FE 0D       1258  			CP      CR
	ld	a,$80                       ; 0404CB || 	ld	a,$80                       ; 0404C6 || 0404CB 3E 80       1259  			LD      A,80H           	; String marker
	ret	z                          ; 0404CD || 	ret	z                          ; 0404C8 || 0404CD C8          1260  			RET     Z
	inc	e                          ; 0404CE || 	inc	e                          ; 0404C9 || 0404CE 1C          1261  			INC     E
	jr	nz,$-$09                    ; 0404CF || 	jr	nz,$-$09                    ; 0404CA || 0404CF 20 F5       1262  			JR      NZ,LOADS2
	ret                            ; 0404D1 || 	ret                            ; 0404CC || 0404D1 C9          1263  			RET                     	; Return null string
	call	$043f22                   ; 0404D2 || 	call	$043ecc                   ; 0404CD || 0404D2 CD 22 3F 04 1292  POS:			CALL    GETCSR			; Return the horizontal cursor position
	ex	de,hl                       ; 0404D6 || 	ex	de,hl                       ; 0404D1 || 0404D6 EB          1293  			EX      DE,HL			;  L: The X cursor position
	jp	$040586                     ; 0404D7 || 	jp	$040581                     ; 0404D2 || 0404D7 C3 86 05 04 1294  			JP      COUNT1			; Return an 8-bit value
	call	$043f22                   ; 0404DB || 	call	$043ecc                   ; 0404D6 || 0404DB CD 22 3F 04 1296  VPOS:			CALL    GETCSR			; Return the vertical cursor position
	jp	$040586                     ; 0404DF || 	jp	$040581                     ; 0404DA || 0404DF C3 86 05 04 1297  			JP      COUNT1			; Return an 8-bit value
	call	$0418b8                   ; 0404E3 || 	call	$041886                   ; 0404DE || 0404E3 CD B8 18 04 1299  EOF:			CALL    CHANEL			; Check for EOF
	call	$0443ab                   ; 0404E7 || 	call	$044344                   ; 0404E2 || 0404E7 CD AB 43 04 1300  			CALL    OSSTAT
	jp	z,$04060a                   ; 0404EB || 	jp	z,$040605                   ; 0404E6 || 0404EB CA 0A 06 04 1301  			JP      Z,TRUE			; Yes, so return true
	jp	$040998                     ; 0404EF || 	jp	$040993                     ; 0404EA || 0404EF C3 98 09 04 1302  			JP      ZERO			; Otherwise return false (zero)
	call	$0418b8                   ; 0404F3 || 	call	$041886                   ; 0404EE || 0404F3 CD B8 18 04 1304  BGET:			CALL    CHANEL          	; Channel number
	call	$04439a                   ; 0404F7 || 	call	$044333                   ; 0404F2 || 0404F7 CD 9A 43 04 1305  			CALL    OSBGET
	ld	l,a                         ; 0404FB || 	ld	l,a                         ; 0404F6 || 0404FB 6F          1306  			LD      L,A
	jp	$040584                     ; 0404FC || 	jp	$04057f                     ; 0404F7 || 0404FC C3 84 05 04 1307  			JP      COUNT0			; Return an 8-bit value
	call	$04032a                   ; 040500 || 	call	$040325                   ; 0404FB || 040500 CD 2A 03 04 1309  INKEY:			CALL    ITEMI			; Get the argument
	bit	7,h                        ; 040504 || 	bit	7,h                        ; 0404FF || 040504 CB 7C       1310  			BIT	7, H			; Check the sign
	exx                            ; 040506 || 	exx                            ; 040501 || 040506 D9          1311  			EXX				; HL: The argument
	jp	nz,$0407f0                  ; 040507 || 	jp	nz,$0407eb                  ; 040502 || 040507 C2 F0 07 04 1312  			JP	NZ, INKEYM		; It's negative, so do INKEY(-n)
	call	$0407e2                   ; 04050B || 	call	$0407dd                   ; 040506 || 04050B CD E2 07 04 1313  			CALL	INKEY0 			; Do INKEY(n)
	jr	$+$1f                       ; 04050F || 	jr	$+$1f                       ; 04050A || 04050F 18 1D       1314  			JR      ASC0			; Return a numeric value
	call	$040a78                   ; 040511 || 	call	$040a70                   ; 04050C || 040511 CD 78 0A 04 1316  GET:			CALL    NXT			; Skip whitespace
	cp	$28                         ; 040515 || 	cp	$28                         ; 040510 || 040515 FE 28       1317  			CP      '('			; Is it GET(
	jr	nz,$+$0d                    ; 040517 || 	jr	nz,$+$0d                    ; 040512 || 040517 20 0B       1318  			JR      NZ,GET0			; No, so get a keyboard character
	call	$04032a                   ; 040519 || 	call	$040325                   ; 040514 || 040519 CD 2A 03 04 1319  			CALL    ITEMI           	; Yes, so fetch the port address
	exx                            ; 04051D || 	exx                            ; 040518 || 04051D D9          1320  			EXX
	ld	b,h                         ; 04051E || 	ld	b,h                         ; 040519 || 04051E 44          1321  			LD      B,H			; BC: The port address
	ld	c,l                         ; 04051F || 	ld	c,l                         ; 04051A || 04051F 4D          1322  			LD      C,L
	in	l,(bc)                      ; 040520 || 	in	l,(bc)                      ; 04051B || 040520 ED 68       1323  			IN      L,(C)           	;  L: Input from port BC
	jr	$+$62                       ; 040522 || 	jr	$+$62                       ; 04051D || 040522 18 60       1324  			JR      COUNT0			; Return an 8-bit value
	call	$0407cc                   ; 040524 || 	call	$0407c7                   ; 04051F || 040524 CD CC 07 04 1326  GET0:			CALL    GETS			; Read the keyboard character
	jr	$+$0c                       ; 040528 || 	jr	$+$0c                       ; 040523 || 040528 18 0A       1327  			JR      ASC1			; And return the value
	call	$040335                   ; 04052A || 	call	$040330                   ; 040525 || 04052A CD 35 03 04 1329  ASC:			CALL    ITEMS			; Get the string argument argument
	xor	a                          ; 04052E || 	xor	a                          ; 040529 || 04052E AF          1330  ASC0:			XOR     A			; Quickly check the length of the string in ACCS
	cp	e                           ; 04052F || 	cp	e                           ; 04052A || 04052F BB          1331  			CP      E			; Is the pointer 0
	jp	z,$04060a                   ; 040530 || 	jp	z,$040605                   ; 04052B || 040530 CA 0A 06 04 1332  			JP      Z,TRUE          	; Yes, so return -1 as it is a null string
	ld	hl,($044a00)                ; 040534 || 	ld	hl,($044a00)                ; 04052F || 040534 2A 00 4A 04 1333  ASC1:			LD      HL,(ACCS)		;  L: The first character (H will be discarded in COUNT0
	jr	$+$4c                       ; 040538 || 	jr	$+$4c                       ; 040533 || 040538 18 4A       1334  			JR      COUNT0			; An 8-bit value
	call	$040335                   ; 04053A || 	call	$040330                   ; 040535 || 04053A CD 35 03 04 1336  LEN:			CALL    ITEMS			; Get the string argument
	ex	de,hl                       ; 04053E || 	ex	de,hl                       ; 040539 || 04053E EB          1337  			EX      DE,HL			; HL: Pointer into ACCS
	jr	$+$45                       ; 04053F || 	jr	$+$45                       ; 04053A || 04053F 18 43       1338  			JR      COUNT0			; Return L
	ld	hl,($044d1a)                ; 040541 || 	ld	hl,($044d1a)                ; 04053C || 040541 2A 1A 4D 04 1340  LOMEMV:			LD      HL,(LOMEM)		; Return the LOMEM system variable
	ld	a,($044d1c)                 ; 040545 || 	ld	a,($044d1c)                 ; 040540 || 040545 3A 1C 4D 04 1341  			LD	A, (LOMEM+2)
	jr	$+$43                       ; 040549 || 	jr	$+$43                       ; 040544 || 040549 18 41       1342  			JR      COUNT2			; A 24-bit value
	ld	hl,($044d20)                ; 04054B || 	ld	hl,($044d20)                ; 040546 || 04054B 2A 20 4D 04 1344  HIMEMV:			LD      HL,(HIMEM)		; Return the HIMEM system variable
	ld	a,($044d22)                 ; 04054F || 	ld	a,($044d22)                 ; 04054A || 04054F 3A 22 4D 04 1345  			LD	A, (HIMEM+2)
	jr	$+$39                       ; 040553 || 	jr	$+$39                       ; 04054E || 040553 18 37       1346  			JR      COUNT2			; A 24-bit value
	ld	hl,($044d14)                ; 040555 || 	ld	hl,($044d14)                ; 040550 || 040555 2A 14 4D 04 1348  PAGEV:			LD    	HL,(PAGE_)		; Return the PAGE system variable
	ld	a,($044d16)                 ; 040559 || 	ld	a,($044d16)                 ; 040554 || 040559 3A 16 4D 04 1349  			LD	A, (PAGE_+2)		; A 24-bit value
	jr	$+$2f                       ; 04055D || 	jr	$+$2f                       ; 040558 || 04055D 18 2D       1350  			JR      COUNT2
	ld	a,(iy)                      ; 04055F || 	ld	a,(iy)                      ; 04055A || 04055F FD 7E 00    1352  TOPV:			LD      A,(IY)			; Return the TOP system variable
	inc	iy                         ; 040562 || 	inc	iy                         ; 04055D || 040562 FD 23       1353  			INC     IY              	; Skip "P"
	cp	$50                         ; 040564 || 	cp	$50                         ; 04055F || 040564 FE 50       1354  			CP      'P'
	jp	nz,$040c9f                  ; 040566 || 	jp	nz,$040c97                  ; 040561 || 040566 C2 9F 0C 04 1355  			JP      NZ,SYNTAX       	; Throw "Syntax Error"
	ld	hl,($044d17)                ; 04056A || 	ld	hl,($044d17)                ; 040565 || 04056A 2A 17 4D 04 1356  			LD      HL,(TOP)
	ld	a,($044d19)                 ; 04056E || 	ld	a,($044d19)                 ; 040569 || 04056E 3A 19 4D 04 1357  			LD	A, (TOP+2)
	jr	$+$1a                       ; 040572 || 	jr	$+$1a                       ; 04056D || 040572 18 18       1358  			JR      COUNT2
	ld	hl,($044d33)                ; 040574 || 	ld	hl,($044d33)                ; 04056F || 040574 2A 33 4D 04 1360  ERLV:			LD      HL,(ERL)		; Return the error line
	jr	$+$0e                       ; 040578 || 	jr	$+$0e                       ; 040573 || 040578 18 0C       1361  			JR      COUNT1			; A 16-bit value
	ld	hl,($044d3f)                ; 04057A || 	ld	hl,($044d3f)                ; 040575 || 04057A 2A 3F 4D 04 1363  ERRV:			LD      HL,(ERR)		; Return the error value
	jr	$+$06                       ; 04057E || 	jr	$+$06                       ; 040579 || 04057E 18 04       1364  			JR      COUNT0			; An 8-bit value
	ld	hl,($044d3d)                ; 040580 || 	ld	hl,($044d3d)                ; 04057B || 040580 2A 3D 4D 04 1366  COUNTV:			LD      HL,(COUNT)		; Return the print position sysvar
	ld	h,$00                       ; 040584 || 	ld	h,$00                       ; 04057F || 040584 26 00       1368  COUNT0:			LD      H,0			; Return L
	exx                            ; 040586 || 	exx                            ; 040581 || 040586 D9          1369  COUNT1:			EXX				; Return HL
	xor	a                          ; 040587 || 	xor	a                          ; 040582 || 040587 AF          1370  			XOR     A
	ld	c,a                         ; 040588 || 	ld	c,a                         ; 040583 || 040588 4F          1371  			LD      C,A             	; Integer marker
	ld	h,a                         ; 040589 || 	ld	h,a                         ; 040584 || 040589 67          1372  			LD      H,A
	ld	l,a                         ; 04058A || 	ld	l,a                         ; 040585 || 04058A 6F          1373  			LD      L,A
	ret                            ; 04058B || 	ret                            ; 040586 || 04058B C9          1374  			RET
	exx                            ; 04058C || 	exx                            ; 040587 || 04058C D9          1375  COUNT2:			EXX
	ld	l,a                         ; 04058D || 	ld	l,a                         ; 040588 || 04058D 6F          1376  			LD	L,A
	xor	a                          ; 04058E || 	xor	a                          ; 040589 || 04058E AF          1377  			XOR	A
	ld	c,a                         ; 04058F || 	ld	c,a                         ; 04058A || 04058F 4F          1378  			LD	C,A			; Integer marker
	ld	h,a                         ; 040590 || 	ld	h,a                         ; 04058B || 040590 67          1379  			LD	H,A
	ret                            ; 040591 || 	ret                            ; 04058C || 040591 C9          1380  			RET
	xor	a                          ; 040592 || 	xor	a                          ; 04058D || 040592 AF          1387  OPENOT:			XOR     A			; Open for writing
	jr	$+$08                       ; 040593 || 	jr	$+$08                       ; 04058E || 040593 18 06       1388  			JR	OPENIN_1
	ld	a,$02                       ; 040595 || 	ld	a,$02                       ; 040590 || 040595 3E 02       1390  OPENUP:			LD      A,2			; Open for reading / writing
	jr	$+$04                       ; 040597 || 	jr	$+$04                       ; 040592 || 040597 18 02       1391  			JR	OPENIN_1
	ld	a,$01                       ; 040599 || 	ld	a,$01                       ; 040594 || 040599 3E 01       1393  OPENIN:			LD      A,1			; Open for reading
	push	af                        ; 04059B || 	push	af                        ; 040596 || 04059B F5          1395  OPENIN_1:		PUSH    AF              	; Save OPEN type
	call	$040335                   ; 04059C || 	call	$040330                   ; 040597 || 04059C CD 35 03 04 1396  			CALL    ITEMS           	; Fetch the filename
	ld	a,$0d                       ; 0405A0 || 	ld	a,$0d                       ; 04059B || 0405A0 3E 0D       1397  			LD      A,CR
	ld	(de),a                      ; 0405A2 || 	ld	(de),a                      ; 04059D || 0405A2 12          1398  			LD      (DE),A
	pop	af                         ; 0405A3 || 	pop	af                         ; 04059E || 0405A3 F1          1399  			POP     AF              	; Restore the OPEN type
	add	a,$ff                      ; 0405A4 || 	add	a,$ff                      ; 04059F || 0405A4 C6 FF       1400  			ADD     A,-1            	; Affect the flags
	ld	hl,$044a00                  ; 0405A6 || 	ld	hl,$044a00                  ; 0405A1 || 0405A6 21 00 4A 04 1401  			LD      HL,ACCS
	call	$044383                   ; 0405AA || 	call	$04431c                   ; 0405A5 || 0405AA CD 83 43 04 1402  			CALL    OSOPEN			; Call the OS specific OPEN routine in patch.asm
	ld	l,a                         ; 0405AE || 	ld	l,a                         ; 0405A9 || 0405AE 6F          1403  			LD      L,A			; L: Channel number
	jr	$-$2b                       ; 0405AF || 	jr	$-$2b                       ; 0405AA || 0405AF 18 D3       1404  			JR      COUNT0			; Return channel number to BASIC
	call	$0418b8                   ; 0405B1 || 	call	$041886                   ; 0405AC || 0405B1 CD B8 18 04 1410  EXT:			CALL    CHANEL
	call	$0443e1                   ; 0405B5 || 	call	$04437a                   ; 0405B0 || 0405B5 CD E1 43 04 1411  			CALL    GETEXT
	jr	$+$17                       ; 0405B9 || 	jr	$+$17                       ; 0405B4 || 0405B9 18 15       1412  			JR      TIME0
	call	$0418b8                   ; 0405BB || 	call	$041886                   ; 0405B6 || 0405BB CD B8 18 04 1414  PTR_EV:			CALL    CHANEL
	call	$0443b5                   ; 0405BF || 	call	$04434e                   ; 0405BA || 0405BF CD B5 43 04 1415  			CALL    GETPTR
	jr	$+$0d                       ; 0405C3 || 	jr	$+$0d                       ; 0405BE || 0405C3 18 0B       1416  			JR      TIME0
	ld	a,(iy)                      ; 0405C5 || 	ld	a,(iy)                      ; 0405C0 || 0405C5 FD 7E 00    1421  TIMEV:			LD      A,(IY)
	cp	$24                         ; 0405C8 || 	cp	$24                         ; 0405C3 || 0405C8 FE 24       1422  			CP      '$'
	jr	z,$+$0c                     ; 0405CA || 	jr	z,$+$0c                     ; 0405C5 || 0405CA 28 0A       1423  			JR      Z,TIMEVS
	call	$043f02                   ; 0405CC || 	call	$043eac                   ; 0405C7 || 0405CC CD 02 3F 04 1424  			CALL    GETIME
	push	de                        ; 0405D0 || 	push	de                        ; 0405CB || 0405D0 D5          1425  TIME0:			PUSH    DE
	exx                            ; 0405D1 || 	exx                            ; 0405CC || 0405D1 D9          1426  			EXX
	pop	hl                         ; 0405D2 || 	pop	hl                         ; 0405CD || 0405D2 E1          1427  			POP     HL
	xor	a                          ; 0405D3 || 	xor	a                          ; 0405CE || 0405D3 AF          1428  			XOR     A
	ld	c,a                         ; 0405D4 || 	ld	c,a                         ; 0405CF || 0405D4 4F          1429  			LD      C,A
	ret                            ; 0405D5 || 	ret                            ; 0405D0 || 0405D5 C9          1430  			RET
	inc	iy                         ; 0405D6 || 	inc	iy                         ; 0405D1 || 0405D6 FD 23       1435  TIMEVS:			INC     IY              ;SKIP $
	call	$0443fa                   ; 0405D8 || 	call	$044393                   ; 0405D3 || 0405D8 CD FA 43 04 1436  			CALL    GETIMS
	ld	a,$80                       ; 0405DC || 	ld	a,$80                       ; 0405D7 || 0405DC 3E 80       1437  			LD      A,80H           ;MARK STRING
	ret                            ; 0405DE || 	ret                            ; 0405D9 || 0405DE C9          1438  			RET
	call	$040994                   ; 0405DF || 	call	$04098f                   ; 0405DA || 0405DF CD 94 09 04 1442  SLT:			CALL    SCP
	ret	nc                         ; 0405E3 || 	ret	nc                         ; 0405DE || 0405E3 D0          1443  			RET     NC
	jr	$+$26                       ; 0405E4 || 	jr	$+$26                       ; 0405DF || 0405E4 18 24       1444  			JR      TRUE
	call	$040994                   ; 0405E6 || 	call	$04098f                   ; 0405E1 || 0405E6 CD 94 09 04 1446  SGT:			CALL    SCP
	ret	z                          ; 0405EA || 	ret	z                          ; 0405E5 || 0405EA C8          1447  			RET     Z
	ret	c                          ; 0405EB || 	ret	c                          ; 0405E6 || 0405EB D8          1448  			RET     C
	jr	$+$1e                       ; 0405EC || 	jr	$+$1e                       ; 0405E7 || 0405EC 18 1C       1449  			JR      TRUE
	call	$040994                   ; 0405EE || 	call	$04098f                   ; 0405E9 || 0405EE CD 94 09 04 1451  SGE:			CALL    SCP
	ret	c                          ; 0405F2 || 	ret	c                          ; 0405ED || 0405F2 D8          1452  			RET     C
	jr	$+$17                       ; 0405F3 || 	jr	$+$17                       ; 0405EE || 0405F3 18 15       1453  			JR      TRUE
	call	$040994                   ; 0405F5 || 	call	$04098f                   ; 0405F0 || 0405F5 CD 94 09 04 1455  SLE:			CALL    SCP
	jr	z,$+$11                     ; 0405F9 || 	jr	z,$+$11                     ; 0405F4 || 0405F9 28 0F       1456  			JR      Z,TRUE
	ret	nc                         ; 0405FB || 	ret	nc                         ; 0405F6 || 0405FB D0          1457  			RET     NC
	jr	$+$0e                       ; 0405FC || 	jr	$+$0e                       ; 0405F7 || 0405FC 18 0C       1458  			JR      TRUE
	call	$040994                   ; 0405FE || 	call	$04098f                   ; 0405F9 || 0405FE CD 94 09 04 1460  SNE:			CALL    SCP
	ret	z                          ; 040602 || 	ret	z                          ; 0405FD || 040602 C8          1461  			RET     Z
	jr	$+$07                       ; 040603 || 	jr	$+$07                       ; 0405FE || 040603 18 05       1462  			JR      TRUE
	call	$040994                   ; 040605 || 	call	$04098f                   ; 040600 || 040605 CD 94 09 04 1464  SEQ:			CALL    SCP
	ret	nz                         ; 040609 || 	ret	nz                         ; 040604 || 040609 C0          1465  			RET     NZ
	ld	a,$ff                       ; 04060A || 	ld	a,$ff                       ; 040605 || 04060A 3E FF       1466  TRUE:			LD      A,-1
	exx                            ; 04060C || 	exx                            ; 040607 || 04060C D9          1467  			EXX
	ld	h,a                         ; 04060D || 	ld	h,a                         ; 040608 || 04060D 67          1468  			LD      H,A
	ld	l,a                         ; 04060E || 	ld	l,a                         ; 040609 || 04060E 6F          1469  			LD      L,A
	exx                            ; 04060F || 	exx                            ; 04060A || 04060F D9          1470  			EXX
	ld	h,a                         ; 040610 || 	ld	h,a                         ; 04060B || 040610 67          1471  			LD      H,A
	ld	l,a                         ; 040611 || 	ld	l,a                         ; 04060C || 040611 6F          1472  			LD      L,A
	inc	a                          ; 040612 || 	inc	a                          ; 04060D || 040612 3C          1473  			INC     A
	ld	c,a                         ; 040613 || 	ld	c,a                         ; 04060E || 040613 4F          1474  			LD      C,A
	ret                            ; 040614 || 	ret                            ; 04060F || 040614 C9          1475  			RET
	ld	a,$23                       ; 040615 || 	ld	a,$23                       ; 040610 || 040615 3E 23       1480  PI:			LD      A,35
	jr	$+$46                       ; 040617 || 	jr	$+$46                       ; 040612 || 040617 18 44       1481  			JR      FPP1
	ld	a,$10                       ; 040619 || 	ld	a,$10                       ; 040614 || 040619 3E 10       1486  ABSV:			LD      A,16
	jr	$+$3c                       ; 04061B || 	jr	$+$3c                       ; 040616 || 04061B 18 3A       1487  			JR      FPPN
	ld	a,$1a                       ; 04061D || 	ld	a,$1a                       ; 040618 || 04061D 3E 1A       1492  NOTK:			LD      A,26
	jr	$+$38                       ; 04061F || 	jr	$+$46                       ; 040612 || 04061F 18 36       1493  			JR      FPPN
	ld	a,$15                       ; 040621 || 	ld	a,$10                       ; 040614 || 040621 3E 15       1498  DEG:			LD      A,21
	jr	$+$34                       ; 040623 || 	jr	$+$3c                       ; 040616 || 040623 18 32       1499  			JR      FPPN
	ld	a,$1b                       ; 040625 || 	ld	a,$1a                       ; 040618 || 040625 3E 1B       1504  RAD:			LD      A,27
	jr	$+$30                       ; 040627 || 	jr	$+$38                       ; 04061A || 040627 18 2E       1505  			JR      FPPN
	ld	a,$1c                       ; 040629 || 	ld	a,$15                       ; 04061C || 040629 3E 1C       1510  SGN:			LD      A,28
	jr	$+$2c                       ; 04062B || 	jr	$+$34                       ; 04061E || 04062B 18 2A       1511  			JR      FPPN
	ld	a,$17                       ; 04062D || 	ld	a,$1b                       ; 040620 || 04062D 3E 17       1516  INT_:			LD      A,23
	jr	$+$28                       ; 04062F || 	jr	$+$30                       ; 040622 || 04062F 18 26       1517  			JR      FPPN
	ld	a,$1e                       ; 040631 || 	ld	a,$1c                       ; 040624 || 040631 3E 1E       1522  SQR:			LD      A,30
	jr	$+$24                       ; 040633 || 	jr	$+$2c                       ; 040626 || 040633 18 22       1523  			JR      FPPN
	ld	a,$1f                       ; 040635 || 	ld	a,$17                       ; 040628 || 040635 3E 1F       1528  TAN:			LD      A,31
	jr	$+$20                       ; 040637 || 	jr	$+$28                       ; 04062A || 040637 18 1E       1529  			JR      FPPN
	ld	a,$14                       ; 040639 || 	ld	a,$1e                       ; 04062C || 040639 3E 14       1534  COS:			LD      A,20
	jr	$+$1c                       ; 04063B || 	jr	$+$24                       ; 04062E || 04063B 18 1A       1535  			JR      FPPN
	ld	a,$1d                       ; 04063D || 	ld	a,$1f                       ; 040630 || 04063D 3E 1D       1540  SIN:			LD      A,29
	jr	$+$18                       ; 04063F || 	jr	$+$18                       ; 04063A || 04063F 18 16       1541  			JR      FPPN
	ld	a,$16                       ; 040641 || 	ld	a,$16                       ; 04063C || 040641 3E 16       1546  EXP:			LD      A,22
	jr	$+$14                       ; 040643 || 	jr	$+$14                       ; 04063E || 040643 18 12       1547  			JR      FPPN
	ld	a,$18                       ; 040645 || 	ld	a,$18                       ; 040640 || 040645 3E 18       1552  LN:			LD      A,24
	jr	$+$10                       ; 040647 || 	jr	$+$10                       ; 040642 || 040647 18 0E       1553  			JR      FPPN
	ld	a,$19                       ; 040649 || 	ld	a,$19                       ; 040644 || 040649 3E 19       1558  LOG:			LD      A,25
	jr	$+$0c                       ; 04064B || 	jr	$+$0c                       ; 040646 || 04064B 18 0A       1559  			JR      FPPN
	ld	a,$12                       ; 04064D || 	ld	a,$12                       ; 040648 || 04064D 3E 12       1564  ASN:			LD      A,18
	jr	$+$08                       ; 04064F || 	jr	$+$08                       ; 04064A || 04064F 18 06       1565  			JR      FPPN
	ld	a,$13                       ; 040651 || 	ld	a,$13                       ; 04064C || 040651 3E 13       1570  ATN:			LD      A,19
	jr	$+$04                       ; 040653 || 	jr	$+$04                       ; 04064E || 040653 18 02       1571  			JR      FPPN
	ld	a,$11                       ; 040655 || 	ld	a,$11                       ; 040650 || 040655 3E 11       1576  ACS:			LD      A,17
	push	af                        ; 040657 || 	push	af                        ; 040652 || 040657 F5          1577  FPPN:			PUSH    AF
	call	$040322                   ; 040658 || 	call	$04031d                   ; 040653 || 040658 CD 22 03 04 1578  			CALL    ITEMN
	pop	af                         ; 04065C || 	pop	af                         ; 040657 || 04065C F1          1579  			POP     AF
	call	$0420a2                   ; 04065D || 	call	$04206a                   ; 040658 || 04065D CD A2 20 04 1580  FPP1:			CALL    FPP
	jp	c,$0437b6                   ; 040661 || 	jp	c,$043760                   ; 04065C || 040661 DA B6 37 04 1581  			JP      C,ERROR_
	xor	a                          ; 040665 || 	xor	a                          ; 040660 || 040665 AF          1582  			XOR     A
	ret                            ; 040666 || 	ret                            ; 040661 || 040666 C9          1583  			RET
	ld	a,$26                       ; 040667 || 	ld	a,$26                       ; 040662 || 040667 3E 26       1587  SFIX:			LD      A,38
	jr	$-$0c                       ; 040669 || 	jr	$-$0c                       ; 040664 || 040669 18 F2       1588  			JR      FPP1
	ld	a,$27                       ; 04066B || 	ld	a,$27                       ; 040666 || 04066B 3E 27       1592  SFLOAT:			LD      A,39
	jr	$-$10                       ; 04066D || 	jr	$-$10                       ; 040668 || 04066D 18 EE       1593  			JR      FPP1
	call	$040335                   ; 04066F || 	call	$040330                   ; 04066A || 04066F CD 35 03 04 1598  VAL:			CALL    ITEMS
	xor	a                          ; 040673 || 	xor	a                          ; 04066E || 040673 AF          1599  VAL0:			XOR     A
	ld	(de),a                      ; 040674 || 	ld	(de),a                      ; 04066F || 040674 12          1600  			LD      (DE),A
	ld	ix,$044a00                  ; 040675 || 	ld	ix,$044a00                  ; 040670 || 040675 DD 21 00 4A 1601  			LD      IX,ACCS
	ld	a,$24                       ; 04067A || 	ld	a,$24                       ; 040675 || 04067A 3E 24       1602  			LD      A,36
	jr	$-$1f                       ; 04067C || 	jr	$-$1f                       ; 040677 || 04067C 18 DF       1603  			JR      FPP1
	call	$040335                   ; 04067E || 	call	$040330                   ; 040679 || 04067E CD 35 03 04 1608  EVAL_:			CALL    ITEMS
	ld	a,$0d                       ; 040682 || 	ld	a,$0d                       ; 04067D || 040682 3E 0D       1609  			LD      A,CR
	ld	(de),a                      ; 040684 || 	ld	(de),a                      ; 04067F || 040684 12          1610  			LD      (DE),A
	push	iy                        ; 040685 || 	push	iy                        ; 040680 || 040685 FD E5       1611  			PUSH    IY
	ld	de,$044a00                  ; 040687 || 	ld	de,$044a00                  ; 040682 || 040687 11 00 4A 04 1612  			LD      DE,ACCS
	ld	iy,$044a00                  ; 04068B || 	ld	iy,$044a00                  ; 040686 || 04068B FD 21 00 4A 1613  			LD      IY,ACCS
	ld	c,$00                       ; 040690 || 	ld	c,$00                       ; 04068B || 040690 0E 00       1614  			LD      C,0
	call	$043cf5                   ; 040692 || 	call	$043c9f                   ; 04068D || 040692 CD F5 3C 04 1615  			CALL    LEXAN2          ;TOKENISE
	ld	(de),a                      ; 040696 || 	ld	(de),a                      ; 040691 || 040696 12          1616  			LD      (DE),A
	inc	de                         ; 040697 || 	inc	de                         ; 040692 || 040697 13          1617  			INC     DE
	xor	a                          ; 040698 || 	xor	a                          ; 040693 || 040698 AF          1618  			XOR     A
	call	$0409b9                   ; 040699 || 	call	$0409b4                   ; 040694 || 040699 CD B9 09 04 1619  			CALL    PUSHS           ;PUT ON STACK
	ld	iy,$000003                  ; 04069D || 	ld	iy,$000003                  ; 040698 || 04069D FD 21 03 00 1620  			LD      IY,SIZEW	;WAS 2
	add	iy,sp                      ; 0406A2 || 	add	iy,sp                      ; 04069D || 0406A2 FD 39       1621  			ADD     IY,SP
	call	$0401c7                   ; 0406A4 || 	call	$0401c7                   ; 04069F || 0406A4 CD C7 01 04 1622  			CALL    EXPR
	pop	iy                         ; 0406A8 || 	pop	iy                         ; 0406A3 || 0406A8 FD E1       1623  			POP     IY
	add	iy,sp                      ; 0406AA || 	add	iy,sp                      ; 0406A5 || 0406AA FD 39       1624  			ADD     IY,SP
	ld	sp,iy                       ; 0406AC || 	ld	sp,iy                       ; 0406A7 || 0406AC FD F9       1625  			LD      SP,IY           ;ADJUST STACK POINTER
	pop	iy                         ; 0406AE || 	pop	iy                         ; 0406A9 || 0406AE FD E1       1626  			POP     IY
	ex	af,af'                      ; 0406B0 || 	ex	af,af'                      ; 0406AB || 0406B0 08          1627  			EX      AF,AF'
	ret                            ; 0406B1 || 	ret                            ; 0406AC || 0406B1 C9          1628  			RET
	ld	ix,$044d38                  ; 0406B2 || 	ld	ix,$044d38                  ; 0406AD || 0406B2 DD 21 38 4D 1637  RND:			LD      IX,RANDOM
	call	$040a78                   ; 0406B7 || 	call	$040a70                   ; 0406B2 || 0406B7 CD 78 0A 04 1638  			CALL    NXT
	cp	$28                         ; 0406BB || 	cp	$28                         ; 0406B6 || 0406BB FE 28       1639  			CP      '('
	jr	z,$+$22                     ; 0406BD || 	jr	z,$+$22                     ; 0406B8 || 0406BD 28 20       1640  			JR      Z,RND5          ;ARGUMENT FOLLOWS
	call	$040424                   ; 0406BF || 	call	$04041f                   ; 0406BA || 0406BF CD 24 04 04 1641  			CALL    LOAD5
	rr	c                           ; 0406C3 || 	rr	c                           ; 0406BE || 0406C3 CB 19       1642  RND1:			RR      C
	ld	b,$20                       ; 0406C5 || 	ld	b,$20                       ; 0406C0 || 0406C5 06 20       1643  			LD      B,32
	exx                            ; 0406C7 || 	exx                            ; 0406C2 || 0406C7 D9          1644  RND2:			EXX                     ;CALCULATE NEXT
	adc.sil	hl,hl                  ; 0406C8 || 	adc.sil	hl,hl                  ; 0406C3 || 0406C8 52 ED 6A    1645  			ADC.S   HL,HL
	exx                            ; 0406CB || 	exx                            ; 0406C6 || 0406CB D9          1646  			EXX
	adc.sil	hl,hl                  ; 0406CC || 	adc.sil	hl,hl                  ; 0406C7 || 0406CC 52 ED 6A    1647  			ADC.S   HL,HL
	bit	3,l                        ; 0406CF || 	bit	3,l                        ; 0406CA || 0406CF CB 5D       1648  			BIT     3,L
	jr	z,$+$03                     ; 0406D1 || 	jr	z,$+$03                     ; 0406CC || 0406D1 28 01       1649  			JR      Z,RND3
	ccf                            ; 0406D3 || 	ccf                            ; 0406CE || 0406D3 3F          1650  			CCF
	djnz	$-$0d                     ; 0406D4 || 	djnz	$-$0d                     ; 0406CF || 0406D4 10 F1       1651  RND3:			DJNZ    RND2
	rl	c                           ; 0406D6 || 	rl	c                           ; 0406D1 || 0406D6 CB 11       1652  RND4:			RL      C               ;SAVE CARRY
	call	$04160d                   ; 0406D8 || 	call	$0415db                   ; 0406D3 || 0406D8 CD 0D 16 04 1653  			CALL    STORE5          ;STORE NEW NUMBER
	xor	a                          ; 0406DC || 	xor	a                          ; 0406D7 || 0406DC AF          1654  			XOR     A
	ld	c,a                         ; 0406DD || 	ld	c,a                         ; 0406D8 || 0406DD 4F          1655  			LD      C,A
	ret                            ; 0406DE || 	ret                            ; 0406D9 || 0406DE C9          1656  			RET
	call	$04032a                   ; 0406DF || 	call	$040325                   ; 0406DA || 0406DF CD 2A 03 04 1657  RND5:			CALL    ITEMI
	ld	ix,$044d38                  ; 0406E3 || 	ld	ix,$044d38                  ; 0406DE || 0406E3 DD 21 38 4D 1658  			LD      IX,RANDOM
	bit	7,h                        ; 0406E8 || 	bit	7,h                        ; 0406E3 || 0406E8 CB 7C       1659  			BIT     7,H             ;NEGATIVE?
	scf                            ; 0406EA || 	scf                            ; 0406E5 || 0406EA 37          1660  			SCF
	jr	nz,$-$15                    ; 0406EB || 	jr	nz,$-$15                    ; 0406E6 || 0406EB 20 E9       1661  			JR      NZ,RND4         ;SEED
	call	$0408e4                   ; 0406ED || 	call	$0408df                   ; 0406E8 || 0406ED CD E4 08 04 1662  			CALL    TEST
	push	af                        ; 0406F1 || 	push	af                        ; 0406EC || 0406F1 F5          1663  			PUSH    AF
	call	$0408dc                   ; 0406F2 || 	call	$0408d7                   ; 0406ED || 0406F2 CD DC 08 04 1664  			CALL    SWAP
	exx                            ; 0406F6 || 	exx                            ; 0406F1 || 0406F6 D9          1665  			EXX
	call	$040424                   ; 0406F7 || 	call	$04041f                   ; 0406F2 || 0406F7 CD 24 04 04 1666  			CALL    LOAD5
	call	nz,$0406c3                ; 0406FB || 	call	nz,$0406be                ; 0406F6 || 0406FB C4 C3 06 04 1667  			CALL    NZ,RND1         ;NEXT IF NON-ZERO
	exx                            ; 0406FF || 	exx                            ; 0406FA || 0406FF D9          1668  			EXX                     ;SCRAMBLE (CARE!)
	ld	c,$7f                       ; 040700 || 	ld	c,$7f                       ; 0406FB || 040700 0E 7F       1669  			LD      C,7FH
	bit	7,h                        ; 040702 || 	bit	7,h                        ; 0406FD || 040702 CB 7C       1670  RND6:			BIT     7,H             ;FLOAT
	jr	nz,$+$0c                    ; 040704 || 	jr	nz,$+$0c                    ; 0406FF || 040704 20 0A       1671  			JR      NZ,RND7
	exx                            ; 040706 || 	exx                            ; 040701 || 040706 D9          1672  			EXX
	add.sil	hl,hl                  ; 040707 || 	add.sil	hl,hl                  ; 040702 || 040707 52 29       1673  			ADD.S   HL,HL
	exx                            ; 040709 || 	exx                            ; 040704 || 040709 D9          1674  			EXX
	adc.sil	hl,hl                  ; 04070A || 	adc.sil	hl,hl                  ; 040705 || 04070A 52 ED 6A    1675  			ADC.S   HL,HL
	dec	c                          ; 04070D || 	dec	c                          ; 040708 || 04070D 0D          1676  			DEC     C
	jr	nz,$-$0c                    ; 04070E || 	jr	nz,$-$0c                    ; 040709 || 04070E 20 F2       1677  			JR      NZ,RND6
	res	7,h                        ; 040710 || 	res	7,h                        ; 04070B || 040710 CB BC       1678  RND7:			RES     7,H             ;POSITIVE 0-0.999999
	pop	af                         ; 040712 || 	pop	af                         ; 04070D || 040712 F1          1679  			POP     AF
	ret	z                          ; 040713 || 	ret	z                          ; 04070E || 040713 C8          1680  			RET     Z               ;ZERO ARGUMENT
	exx                            ; 040714 || 	exx                            ; 04070F || 040714 D9          1681  			EXX
	ld	a,e                         ; 040715 || 	ld	a,e                         ; 040710 || 040715 7B          1682  			LD      A,E
	dec	a                          ; 040716 || 	dec	a                          ; 040711 || 040716 3D          1683  			DEC     A
	or	d                           ; 040717 || 	or	d                           ; 040712 || 040717 B2          1684  			OR      D
	exx                            ; 040718 || 	exx                            ; 040713 || 040718 D9          1685  			EXX
	or	e                           ; 040719 || 	or	e                           ; 040714 || 040719 B3          1686  			OR      E
	or	d                           ; 04071A || 	or	d                           ; 040715 || 04071A B2          1687  			OR      D
	ret	z                          ; 04071B || 	ret	z                          ; 040716 || 04071B C8          1688  			RET     Z               ;ARGUMENT=1
	ld	b,$00                       ; 04071C || 	ld	b,$00                       ; 040717 || 04071C 06 00       1689  			LD      B,0             ;INTEGER MARKER
	ld	a,$0a                       ; 04071E || 	ld	a,$0a                       ; 040719 || 04071E 3E 0A       1690  			LD      A,10
	call	$0420a2                   ; 040720 || 	call	$04206a                   ; 04071B || 040720 CD A2 20 04 1691  			CALL    FPP             ;MULTIPLY
	jp	c,$0437b6                   ; 040724 || 	jp	c,$043760                   ; 04071F || 040724 DA B6 37 04 1692  			JP      C,ERROR_
	call	$040667                   ; 040728 || 	call	$040662                   ; 040723 || 040728 CD 67 06 04 1693  			CALL    SFIX
	jp	$0403c0                     ; 04072C || 	jp	$0403bb                     ; 040727 || 04072C C3 C0 03 04 1694  			JP      ADD1
	call	$040a26                   ; 040730 || 	call	$040a1e                   ; 04072B || 040730 CD 26 0A 04 1699  INSTR:			CALL    EXPRSC			; Get the first string expression
	call	$0409b9                   ; 040734 || 	call	$0409b4                   ; 04072F || 040734 CD B9 09 04 1700  			CALL    PUSHS           	; Push the string onto the stack
	call	$04031a                   ; 040738 || 	call	$040315                   ; 040733 || 040738 CD 1A 03 04 1701  			CALL    EXPRS           	; Get the second string expression
	pop	bc                         ; 04073C || 	pop	bc                         ; 040737 || 04073C C1          1702  			POP     BC			;  C: String length, B: Value of A before PUSHS was called
	ld	hl,$000000                  ; 04073D || 	ld	hl,$000000                  ; 040738 || 04073D 21 00 00 00 1703  			LD      HL,0
	add	hl,sp                      ; 040741 || 	add	hl,sp                      ; 04073C || 040741 39          1704  			ADD     HL,SP           	; HL: Pointer to main string
	push	bc                        ; 040742 || 	push	bc                        ; 04073D || 040742 C5          1705  			PUSH    BC              	;  C: Main string length
	ld	b,e                         ; 040743 || 	ld	b,e                         ; 04073E || 040743 43          1706  			LD      B,E             	;  B: Sub-string length
	call	$040a78                   ; 040744 || 	call	$040a70                   ; 04073F || 040744 CD 78 0A 04 1707  			CALL    NXT			; Skip whitespace
	cp	$2c                         ; 040748 || 	cp	$2c                         ; 040743 || 040748 FE 2C       1708  			CP      ','			; Check if there is a comma for the third parameter
	ld	a,$00                       ; 04074A || 	ld	a,$00                       ; 040745 || 04074A 3E 00       1709  			LD      A,0			;  A: Default start position in string
	jr	nz,$+$1c                    ; 04074C || 	jr	nz,$+$1c                    ; 040747 || 04074C 20 1A       1710  			JR      NZ,INSTR1		; No, so skip the next bit
	inc	iy                         ; 04074E || 	inc	iy                         ; 040749 || 04074E FD 23       1711  			INC     IY              	; Skip the comma
	push	bc                        ; 040750 || 	push	bc                        ; 04074B || 040750 C5          1712  			PUSH    BC              	; Save the lengths
	push	hl                        ; 040751 || 	push	hl                        ; 04074C || 040751 E5          1713  			PUSH    HL              	; Save the pointer to the main string
	call	$0409b9                   ; 040752 || 	call	$0409b4                   ; 04074D || 040752 CD B9 09 04 1714  			CALL    PUSHS			; Push the string onto the stack
	call	$04030f                   ; 040756 || 	call	$04030a                   ; 040751 || 040756 CD 0F 03 04 1715  			CALL    EXPRI			; Get the third (numeric) parameter - the starting position
	pop	bc                         ; 04075A || 	pop	bc                         ; 040755 || 04075A C1          1716  			POP     BC			;  C: String length, B: Value of A before PUSHS was called (discarded)
	call	$0409e6                   ; 04075B || 	call	$0409de                   ; 040756 || 04075B CD E6 09 04 1717  			CALL    POPS			; Pop the string off the stack
	pop	hl                         ; 04075F || 	pop	hl                         ; 04075A || 04075F E1          1718  			POP     HL              	; Restore the pointer to the main string
	pop	bc                         ; 040760 || 	pop	bc                         ; 04075B || 040760 C1          1719  			POP     BC              	; Restore the lengths
	exx                            ; 040761 || 	exx                            ; 04075C || 040761 D9          1720  			EXX
	ld	a,l                         ; 040762 || 	ld	a,l                         ; 04075D || 040762 7D          1721  			LD      A,L			; A: The start position in the  string
	exx                            ; 040763 || 	exx                            ; 04075E || 040763 D9          1722  			EXX
	or	a                           ; 040764 || 	or	a                           ; 04075F || 040764 B7          1723  			OR      A			; Set the flags
	jr	z,$+$03                     ; 040765 || 	jr	z,$+$03                     ; 040760 || 040765 28 01       1724  			JR      Z,INSTR1		; If it is zero, then skip
	dec	a                          ; 040767 || 	dec	a                          ; 040762 || 040767 3D          1725  			DEC     A
	ld	de,$044a00                  ; 040768 || 	ld	de,$044a00                  ; 040763 || 040768 11 00 4A 04 1726  INSTR1:			LD      DE,ACCS         	; DE: Pointer to the sub string
	call	$04078a                   ; 04076C || 	call	$040785                   ; 040767 || 04076C CD 8A 07 04 1727  			CALL    SEARCH			; Do the search
	pop	de                         ; 040770 || 	pop	de                         ; 04076B || 040770 D1          1728  			POP     DE
	jr	z,$+$05                     ; 040771 || 	jr	z,$+$05                     ; 04076C || 040771 28 03       1729  			JR      Z,INSTR2        	; NB: Carry cleared
	sbc	hl,hl                      ; 040773 || 	sbc	hl,hl                      ; 04076E || 040773 ED 62       1730  			SBC     HL,HL
	add	hl,sp                      ; 040775 || 	add	hl,sp                      ; 040770 || 040775 39          1731  			ADD     HL,SP
	sbc	hl,sp                      ; 040776 || 	sbc	hl,sp                      ; 040771 || 040776 ED 72       1732  INSTR2:			SBC     HL,SP
	ex	de,hl                       ; 040778 || 	ex	de,hl                       ; 040773 || 040778 EB          1733  			EX      DE,HL
	ld	a,l                         ; 040779 || 	ld	a,l                         ; 040774 || 040779 7D          1734  			LD	A,L
	ld	hl,$000000                  ; 04077A || 	ld	hl,$000000                  ; 040775 || 04077A 21 00 00 00 1735  			LD      HL,0
	ld	l,a                         ; 04077E || 	ld	l,a                         ; 040779 || 04077E 6F          1736  			LD	L,A
	add	hl,sp                      ; 04077F || 	add	hl,sp                      ; 04077A || 04077F 39          1737  			ADD     HL,SP
	ld	sp,hl                       ; 040780 || 	ld	sp,hl                       ; 04077B || 040780 F9          1738  			LD      SP,HL
	ex	de,hl                       ; 040781 || 	ex	de,hl                       ; 04077C || 040781 EB          1739  			EX      DE,HL
	call	$040a37                   ; 040782 || 	call	$040a2f                   ; 04077D || 040782 CD 37 0A 04 1740  			CALL    BRAKET			; Check for closing bracket
	jp	$040586                     ; 040786 || 	jp	$040581                     ; 040781 || 040786 C3 86 05 04 1741  			JP      COUNT1			; Return a numeric integer
	push	bc                        ; 04078A || 	push	bc                        ; 040785 || 04078A C5          1751  SEARCH:			PUSH    BC			; Add the starting offset to HL
	ld	bc,$000000                  ; 04078B || 	ld	bc,$000000                  ; 040786 || 04078B 01 00 00 00 1752  			LD      BC,0
	ld	c,a                         ; 04078F || 	ld	c,a                         ; 04078A || 04078F 4F          1753  			LD      C,A
	add	hl,bc                      ; 040790 || 	add	hl,bc                      ; 04078B || 040790 09          1754  			ADD     HL,BC           	; New start address
	pop	bc                         ; 040791 || 	pop	bc                         ; 04078C || 040791 C1          1755  			POP     BC
	sub	c                          ; 040792 || 	sub	c                          ; 04078D || 040792 91          1756  			SUB     C			; If the starting offset > main string length, then do nothing
	jr	nc,$+$2e                    ; 040793 || 	jr	nc,$+$2e                    ; 04078E || 040793 30 2C       1757  			JR      NC,SRCH4
	neg                            ; 040795 || 	neg                            ; 040790 || 040795 ED 44       1758  			NEG
	ld	c,a                         ; 040797 || 	ld	c,a                         ; 040792 || 040797 4F          1759  			LD      C,A             	; Remaining length
	push	bc                        ; 040798 || 	push	bc                        ; 040793 || 040798 C5          1761  SRCH1:			PUSH    BC
	ld	a,c                         ; 040799 || 	ld	a,c                         ; 040794 || 040799 79          1762  			LD	A,C
	ld	bc,$000000                  ; 04079A || 	ld	bc,$000000                  ; 040795 || 04079A 01 00 00 00 1763  			LD	BC,0
	ld	c,a                         ; 04079E || 	ld	c,a                         ; 040799 || 04079E 4F          1764  			LD	C,A
	ld	a,(de)                      ; 04079F || 	ld	a,(de)                      ; 04079A || 04079F 1A          1765  			LD      A,(DE)
	cpir                           ; 0407A0 || 	cpir                           ; 04079B || 0407A0 ED B1       1766  			CPIR                    	; Find the first character
	ld	a,c                         ; 0407A2 || 	ld	a,c                         ; 04079D || 0407A2 79          1767  			LD      A,C
	pop	bc                         ; 0407A3 || 	pop	bc                         ; 04079E || 0407A3 C1          1768  			POP     BC
	jr	nz,$+$1d                    ; 0407A4 || 	jr	nz,$+$1d                    ; 04079F || 0407A4 20 1B       1769  			JR      NZ,SRCH4
	ld	c,a                         ; 0407A6 || 	ld	c,a                         ; 0407A1 || 0407A6 4F          1770  			LD      C,A
	dec	b                          ; 0407A7 || 	dec	b                          ; 0407A2 || 0407A7 05          1774  			DEC     B			; Bug fix
	cp	b                           ; 0407A8 || 	cp	b                           ; 0407A3 || 0407A8 B8          1775  			CP      B			; Bug fix
	inc	b                          ; 0407A9 || 	inc	b                          ; 0407A4 || 0407A9 04          1776  			INC     B			; Bug fix
	jr	c,$+$17                     ; 0407AA || 	jr	c,$+$17                     ; 0407A5 || 0407AA 38 15       1777  			JR      C,SRCH4			; Bug fix
	push	bc                        ; 0407AC || 	push	bc                        ; 0407A7 || 0407AC C5          1779  			PUSH    BC
	push	de                        ; 0407AD || 	push	de                        ; 0407A8 || 0407AD D5          1780  			PUSH    DE
	push	hl                        ; 0407AE || 	push	hl                        ; 0407A9 || 0407AE E5          1781  			PUSH    HL
	dec	b                          ; 0407AF || 	dec	b                          ; 0407AA || 0407AF 05          1782  			DEC     B
	jr	z,$+$0a                     ; 0407B0 || 	jr	z,$+$0a                     ; 0407AB || 0407B0 28 08       1783  			JR      Z,SRCH3         	; Found!
	inc	de                         ; 0407B2 || 	inc	de                         ; 0407AD || 0407B2 13          1784  SRCH2:			INC     DE
	ld	a,(de)                      ; 0407B3 || 	ld	a,(de)                      ; 0407AE || 0407B3 1A          1785  			LD      A,(DE)
	cp	(hl)                        ; 0407B4 || 	cp	(hl)                        ; 0407AF || 0407B4 BE          1786  			CP      (HL)
	jr	nz,$+$05                    ; 0407B5 || 	jr	nz,$+$05                    ; 0407B0 || 0407B5 20 03       1787  			JR      NZ,SRCH3
	inc	hl                         ; 0407B7 || 	inc	hl                         ; 0407B2 || 0407B7 23          1788  			INC     HL
	djnz	$-$06                     ; 0407B8 || 	djnz	$-$06                     ; 0407B3 || 0407B8 10 F8       1789  			DJNZ    SRCH2
	pop	hl                         ; 0407BA || 	pop	hl                         ; 0407B5 || 0407BA E1          1790  SRCH3:			POP     HL
	pop	de                         ; 0407BB || 	pop	de                         ; 0407B6 || 0407BB D1          1791  			POP     DE
	pop	bc                         ; 0407BC || 	pop	bc                         ; 0407B7 || 0407BC C1          1792  			POP     BC
	jr	nz,$-$25                    ; 0407BD || 	jr	nz,$-$25                    ; 0407B8 || 0407BD 20 D9       1793  			JR      NZ,SRCH1
	xor	a                          ; 0407BF || 	xor	a                          ; 0407BA || 0407BF AF          1794  			XOR     A               	; Flags: Z, NC
	ret                            ; 0407C0 || 	ret                            ; 0407BB || 0407C0 C9          1795  			RET                     	; Found
	or	$ff                         ; 0407C1 || 	or	$ff                         ; 0407BC || 0407C1 F6 FF       1797  SRCH4:			OR      0FFH            	; Flags: NZ, NC
	ret                            ; 0407C3 || 	ret                            ; 0407BE || 0407C3 C9          1798  			RET                     	; Not found
	call	$04032a                   ; 0407C4 || 	call	$040325                   ; 0407BF || 0407C4 CD 2A 03 04 1803  CHRS:			CALL    ITEMI
	exx                            ; 0407C8 || 	exx                            ; 0407C3 || 0407C8 D9          1804  			EXX
	ld	a,l                         ; 0407C9 || 	ld	a,l                         ; 0407C4 || 0407C9 7D          1805  			LD      A,L
	jr	$+$10                       ; 0407CA || 	jr	$+$10                       ; 0407C5 || 0407CA 18 0E       1806  			JR      GET1
	call	$040a78                   ; 0407CC || 	call	$040a70                   ; 0407C7 || 0407CC CD 78 0A 04 1811  GETS:			CALL	NXT		;NEW CODE FOR GET$(X,Y)
	cp	$28                         ; 0407D0 || 	cp	$28                         ; 0407CB || 0407D0 FE 28       1812  			CP	'('
	jp	z,$044458                   ; 0407D2 || 	jp	z,$0443fc                   ; 0407CD || 0407D2 CA 58 44 04 1813  			JP	Z, GETSCHR	;CALL FUNCTION IN PATCH.Z80
	call	$043f7f                   ; 0407D6 || 	call	$043f29                   ; 0407D1 || 0407D6 CD 7F 3F 04 1814  			CALL    OSRDCH
	scf                            ; 0407DA || 	scf                            ; 0407D5 || 0407DA 37          1815  GET1:			SCF
	jr	$+$0b                       ; 0407DB || 	jr	$+$0b                       ; 0407D6 || 0407DB 18 09       1816  			JR      INKEY1
	call	$04032a                   ; 0407DD || 	call	$040325                   ; 0407D8 || 0407DD CD 2A 03 04 1823  INKEYS:			CALL    ITEMI			; Fetch the argument
	exx                            ; 0407E1 || 	exx                            ; 0407DC || 0407E1 D9          1824  			EXX
	call	$043f88                   ; 0407E2 || 	call	$043f32                   ; 0407DD || 0407E2 CD 88 3F 04 1825  INKEY0:			CALL    OSKEY			; This is the entry point for INKEY(n)
	ld	de,$044a00                  ; 0407E6 || 	ld	de,$044a00                  ; 0407E1 || 0407E6 11 00 4A 04 1826  INKEY1:			LD      DE,ACCS			; Store the result in the string accumulator
	ld	(de),a                      ; 0407EA || 	ld	(de),a                      ; 0407E5 || 0407EA 12          1827  			LD      (DE),A
	ld	a,$80                       ; 0407EB || 	ld	a,$80                       ; 0407E6 || 0407EB 3E 80       1828  			LD      A,80H
	ret	nc                         ; 0407ED || 	ret	nc                         ; 0407E8 || 0407ED D0          1829  			RET     NC
	inc	e                          ; 0407EE || 	inc	e                          ; 0407E9 || 0407EE 1C          1830  			INC     E
	ret                            ; 0407EF || 	ret                            ; 0407EA || 0407EF C9          1831  			RET
	ld	a,$1e                       ; 0407F0 || 	ld	a,$1e                       ; 0407EB || 0407F0 3E 1E       0001M 			LD	A, function
	rst.lis	$08                    ; 0407F2 || 	rst.lis	$08                    ; 0407ED || 0407F2 49 CF       0002M 			RST.LIS	08h
	inc	hl                         ; 0407F4 || 	inc	hl                         ; 0407EF || 0407F4 23          1837  			INC	HL			; Index from 0
	ld	a,l                         ; 0407F5 || 	ld	a,l                         ; 0407F0 || 0407F5 7D          1838  			LD	A, L			; Negate the LSB of the answer
	neg                            ; 0407F6 || 	neg                            ; 0407F1 || 0407F6 ED 44       1839  			NEG
	ld	c,a                         ; 0407F8 || 	ld	c,a                         ; 0407F3 || 0407F8 4F          1840  			LD	C, A			;  E: The positive keycode value
	ld	a,$01                       ; 0407F9 || 	ld	a,$01                       ; 0407F4 || 0407F9 3E 01       1841  			LD	A, 1			; Throw an "Out of range" error
	jp	m,$0437b6                   ; 0407FB || 	jp	m,$043760                   ; 0407F6 || 0407FB FA B6 37 04 1842  			JP	M, ERROR_		; if the argument < - 128
	ld	hl,$040822                  ; 0407FF || 	ld	hl,$04081d                  ; 0407FA || 0407FF 21 22 08 04 1844  			LD	HL, BITLOOKUP		; HL: The bit lookup table
	ld	de,$000000                  ; 040803 || 	ld	de,$000000                  ; 0407FE || 040803 11 00 00 00 1845  			LD	DE, 0
	ld	a,c                         ; 040807 || 	ld	a,c                         ; 040802 || 040807 79          1846  			LD	A, C
	and	$07                        ; 040808 || 	and	$07                        ; 040803 || 040808 E6 07       1847  			AND	00000111b		; Just need the first three bits
	ld	e,a                         ; 04080A || 	ld	e,a                         ; 040805 || 04080A 5F          1848  			LD	E, A			; DE: The bit number
	add	hl,de                      ; 04080B || 	add	hl,de                      ; 040806 || 04080B 19          1849  			ADD	HL, DE
	ld	b,(hl)                      ; 04080C || 	ld	b,(hl)                      ; 040807 || 04080C 46          1850  			LD	B, (HL)			;  B: The mask
	ld	a,c                         ; 04080D || 	ld	a,c                         ; 040808 || 04080D 79          1852  			LD	A, C			; Fetch the keycode again
	and	$78                        ; 04080E || 	and	$78                        ; 040809 || 04080E E6 78       1853  			AND	01111000b		; And divide by 8
	rrca                           ; 040810 || 	rrca                           ; 04080B || 040810 0F          1854  			RRCA
	rrca                           ; 040811 || 	rrca                           ; 04080C || 040811 0F          1855  			RRCA
	rrca                           ; 040812 || 	rrca                           ; 04080D || 040812 0F          1856  			RRCA
	ld	e,a                         ; 040813 || 	ld	e,a                         ; 04080E || 040813 5F          1857  			LD	E, A			; DE: The offset (the MSW has already been cleared previously)
	add	ix,de                      ; 040814 || 	add	ix,de                      ; 04080F || 040814 DD 19       1858  			ADD	IX, DE			; IX: The address
	ld	a,b                         ; 040816 || 	ld	a,b                         ; 040811 || 040816 78          1859  			LD	A, B			;  B: The mask
	and	(ix)                       ; 040817 || 	and	(ix)                       ; 040812 || 040817 DD A6 00    1860  			AND	(IX+0)			; Check whether the bit is set
	jp	z,$040998                   ; 04081A || 	jp	z,$040993                   ; 040815 || 04081A CA 98 09 04 1861  			JP	Z, ZERO			; No, so return 0
	jp	$04060a                     ; 04081E || 	jp	$040605                     ; 040819 || 04081E C3 0A 06 04 1862  			JP	TRUE			; Otherwise return -1
	ld	bc,$080402                  ; 040822 || 	ld	bc,$080402                  ; 04081D || 040822 01 02 04 08 1866  BITLOOKUP:		DB	01h, 02h, 04h, 08h
	djnz	$+$22                     ; 040826 || 	djnz	$+$22                     ; 040821 || 040826 10 20 40 80 1867  			DB	10h, 20h, 40h, 80h
	add.sis	a,b                    ; 040828 || 	add.sis	a,b                    ; 040823
	call	$040a26                   ; 04082A || 	call	$040a1e                   ; 040825 || 04082A CD 26 0A 04 1872  MIDS:			CALL    EXPRSC			; Get the first string expression
	call	$0409b9                   ; 04082E || 	call	$0409b4                   ; 040829 || 04082E CD B9 09 04 1873  			CALL    PUSHS           	; Push the string onto the stack from the string accumulator (ACCS)
	call	$04030f                   ; 040832 || 	call	$04030a                   ; 04082D || 040832 CD 0F 03 04 1874  			CALL    EXPRI			; Get the second expression
	pop	bc                         ; 040836 || 	pop	bc                         ; 040831 || 040836 C1          1875  			POP     BC			; C: String length, B: Value of A before PUSHS was called
	call	$0409e6                   ; 040837 || 	call	$0409de                   ; 040832 || 040837 CD E6 09 04 1876  			CALL    POPS			; Pop the string back off the stack to the string accumulator
	exx                            ; 04083B || 	exx                            ; 040836 || 04083B D9          1877  			EXX
	ld	a,l                         ; 04083C || 	ld	a,l                         ; 040837 || 04083C 7D          1878  			LD      A,L			; A: The start index
	exx                            ; 04083D || 	exx                            ; 040838 || 04083D D9          1879  			EXX
	or	a                           ; 04083E || 	or	a                           ; 040839 || 04083E B7          1880  			OR      A			; If the start index is 0, then we don't need to do the next bit
	jr	z,$+$10                     ; 04083F || 	jr	z,$+$10                     ; 04083A || 04083F 28 0E       1881  			JR      Z,MIDS1
	dec	a                          ; 040841 || 	dec	a                          ; 04083C || 040841 3D          1882  			DEC     A
	ld	l,a                         ; 040842 || 	ld	l,a                         ; 04083D || 040842 6F          1883  			LD      L,A			; L: The start index - 1
	sub	e                          ; 040843 || 	sub	e                          ; 04083E || 040843 93          1884  			SUB     E			; Subtract from the string length
	ld	e,$00                       ; 040844 || 	ld	e,$00                       ; 04083F || 040844 1E 00       1885  			LD      E,0			; Preemptively set the string length to 0
	jr	nc,$+$09                    ; 040846 || 	jr	nc,$+$09                    ; 040841 || 040846 30 07       1886  			JR      NC,MIDS1		; If the first parameter is greater than the string length, then do nothing
	neg                            ; 040848 || 	neg                            ; 040843 || 040848 ED 44       1887  			NEG				; Negate the answer and
	ld	c,a                         ; 04084A || 	ld	c,a                         ; 040845 || 04084A 4F          1888  			LD      C,A			; C: Number of bytes to copy
	call	$04088e                   ; 04084B || 	call	$040889                   ; 040846 || 04084B CD 8E 08 04 1889  			CALL    RIGHT1			; We can do a RIGHT$ at this point with the result
	call	$040a78                   ; 04084F || 	call	$040a70                   ; 04084A || 04084F CD 78 0A 04 1890  MIDS1:			CALL    NXT			; Skip whitespace
	cp	$2c                         ; 040853 || 	cp	$2c                         ; 04084E || 040853 FE 2C       1891  			CP      ','			; Check for a comma
	inc	iy                         ; 040855 || 	inc	iy                         ; 040850 || 040855 FD 23       1892  			INC     IY			; Advance to the next character in the BASIC line
	jr	z,$+$0f                     ; 040857 || 	jr	z,$+$0f                     ; 040852 || 040857 28 0D       1893  			JR      Z,LEFT1			; If there is a comma then we do a LEFT$ on the remainder
	dec	iy                         ; 040859 || 	dec	iy                         ; 040854 || 040859 FD 2B       1894  			DEC     IY			; Restore the BASIC program pointer
	call	$040a37                   ; 04085B || 	call	$040a2f                   ; 040856 || 04085B CD 37 0A 04 1895  			CALL    BRAKET			; Check for a bracket
	ld	a,$80                       ; 04085F || 	ld	a,$80                       ; 04085A || 04085F 3E 80       1896  			LD      A,80H			; String marker
	ret                            ; 040861 || 	ret                            ; 04085C || 040861 C9          1897  			RET
	call	$040a26                   ; 040862 || 	call	$040a1e                   ; 04085D || 040862 CD 26 0A 04 1903  LEFTS:			CALL    EXPRSC			; Get the first string expression
	call	$0409b9                   ; 040866 || 	call	$0409b4                   ; 040861 || 040866 CD B9 09 04 1904  LEFT1:			CALL    PUSHS           	; Push the string onto the stack from the string accumulator (ACCS)
	call	$04030f                   ; 04086A || 	call	$04030a                   ; 040865 || 04086A CD 0F 03 04 1905  			CALL    EXPRI			; Get the second expression
	pop	bc                         ; 04086E || 	pop	bc                         ; 040869 || 04086E C1          1906  			POP     BC			; C: String length, B: Value of A before PUSHS was called
	call	$0409e6                   ; 04086F || 	call	$0409de                   ; 04086A || 04086F CD E6 09 04 1907  			CALL    POPS			; Pop the string back off the stack to the string accumulator (ACCS)
	call	$040a37                   ; 040873 || 	call	$040a2f                   ; 04086E || 040873 CD 37 0A 04 1908  			CALL    BRAKET			; Check for closing bracket
	exx                            ; 040877 || 	exx                            ; 040872 || 040877 D9          1909  			EXX
	ld	a,l                         ; 040878 || 	ld	a,l                         ; 040873 || 040878 7D          1910  			LD      A,L			; L: The second parameter
	exx                            ; 040879 || 	exx                            ; 040874 || 040879 D9          1911  			EXX
	cp	e                           ; 04087A || 	cp	e                           ; 040875 || 04087A BB          1912  			CP      E			; Compare with the string length
	jr	nc,$+$04                    ; 04087B || 	jr	nc,$+$04                    ; 040876 || 04087B 30 02       1913  			JR      NC,LEFT3		; If it is greater than or equal then do nothing
	ld	l,e                         ; 04087D || 	ld	l,e                         ; 040878 || 04087D 6B          1914  			LD      L,E             	; For RIGHTS, no effect in LEFTS
	ld	e,a                         ; 04087E || 	ld	e,a                         ; 040879 || 04087E 5F          1915  LEFT2:			LD      E,A			; E: The new length of string
	ld	a,$80                       ; 04087F || 	ld	a,$80                       ; 04087A || 04087F 3E 80       1916  LEFT3:			LD      A,80H           	; String marker
	ret                            ; 040881 || 	ret                            ; 04087C || 040881 C9          1917  			RET
	call	$040862                   ; 040882 || 	call	$04085d                   ; 04087D || 040882 CD 62 08 04 1922  RIGHTS:			CALL    LEFTS			; Call LEFTS to get the string
	ret	nc                         ; 040886 || 	ret	nc                         ; 040881 || 040886 D0          1923  			RET     NC			; Do nothing if the second parameter is >= string length
	inc	e                          ; 040887 || 	inc	e                          ; 040882 || 040887 1C          1924  			INC     E			; Check for a zero length string
	dec	e                          ; 040888 || 	dec	e                          ; 040883 || 040888 1D          1925  			DEC     E
	ret	z                          ; 040889 || 	ret	z                          ; 040884 || 040889 C8          1926  			RET     Z			; Yes, so do nothing
	ld	c,e                         ; 04088A || 	ld	c,e                         ; 040885 || 04088A 4B          1927  			LD      C,E			;  C: Number of bytes to copy
	ld	a,l                         ; 04088B || 	ld	a,l                         ; 040886 || 04088B 7D          1928  			LD      A,L
	sub	e                          ; 04088C || 	sub	e                          ; 040887 || 04088C 93          1929  			SUB     E
	ld	l,a                         ; 04088D || 	ld	l,a                         ; 040888 || 04088D 6F          1930  			LD      L,A			;  L: Index into the string
	ld	a,c                         ; 04088E || 	ld	a,c                         ; 040889 || 04088E 79          1931  RIGHT1:			LD	A,C
	ld	bc,$000000                  ; 04088F || 	ld	bc,$000000                  ; 04088A || 04088F 01 00 00 00 1932  			LD	BC,0
	ld	c,a                         ; 040893 || 	ld	c,a                         ; 04088E || 040893 4F          1933  			LD	C,A			; BC: Number of bytes to copy (with top word cleared)
	ld	a,l                         ; 040894 || 	ld	a,l                         ; 04088F || 040894 7D          1934  			LD	A,L
	ld	hl,$044a00                  ; 040895 || 	ld	hl,$044a00                  ; 040890 || 040895 21 00 4A 04 1935  			LD	HL,ACCS
	ld	l,a                         ; 040899 || 	ld	l,a                         ; 040894 || 040899 6F          1936  			LD	L,A			; HL: Source (in ACCS)
	ld	de,$044a00                  ; 04089A || 	ld	de,$044a00                  ; 040895 || 04089A 11 00 4A 04 1937  			LD      DE,ACCS			; DE: Destination (start of ACCS)
	ldir                           ; 04089E || 	ldir                           ; 040899 || 04089E ED B0       1938  			LDIR                    	; Copy
	ld	a,$80                       ; 0408A0 || 	ld	a,$80                       ; 04089B || 0408A0 3E 80       1939  			LD      A,80H			; String marker
	ret                            ; 0408A2 || 	ret                            ; 04089D || 0408A2 C9          1940  			RET
	call	$04030f                   ; 0408A3 || 	call	$04030a                   ; 04089E || 0408A3 CD 0F 03 04 1945  STRING_:		CALL    EXPRI			; Get number of times to replicate
	call	$040a2a                   ; 0408A7 || 	call	$040a22                   ; 0408A2 || 0408A7 CD 2A 0A 04 1946  			CALL    COMMA			; Check for comma
	exx                            ; 0408AB || 	exx                            ; 0408A6 || 0408AB D9          1947  			EXX
	ld	a,l                         ; 0408AC || 	ld	a,l                         ; 0408A7 || 0408AC 7D          1948  			LD      A,L			; L: Number of iterations of string
	exx                            ; 0408AD || 	exx                            ; 0408A8 || 0408AD D9          1949  			EXX
	push	af                        ; 0408AE || 	push	af                        ; 0408A9 || 0408AE F5          1950  			PUSH    AF
	call	$04031a                   ; 0408AF || 	call	$040315                   ; 0408AA || 0408AF CD 1A 03 04 1951  			CALL    EXPRS			; Get the string
	call	$040a37                   ; 0408B3 || 	call	$040a2f                   ; 0408AE || 0408B3 CD 37 0A 04 1952  			CALL    BRAKET			; Check for closing bracket
	pop	af                         ; 0408B7 || 	pop	af                         ; 0408B2 || 0408B7 F1          1953  			POP     AF			; A: Number of iterations of string
	or	a                           ; 0408B8 || 	or	a                           ; 0408B3 || 0408B8 B7          1954  			OR      A			; Set flags
	jr	z,$-$3b                     ; 0408B9 || 	jr	z,$-$3b                     ; 0408B4 || 0408B9 28 C3       1955  			JR      Z,LEFT2         	; If iterations is 0, then this will return an empty string
	dec	a                          ; 0408BB || 	dec	a                          ; 0408B6 || 0408BB 3D          1956  			DEC     A
	ld	c,a                         ; 0408BC || 	ld	c,a                         ; 0408B7 || 0408BC 4F          1957  			LD      C,A			; C: Loop counter
	ld	a,$80                       ; 0408BD || 	ld	a,$80                       ; 0408B8 || 0408BD 3E 80       1958  			LD      A,80H			; String marker
	ret	z                          ; 0408BF || 	ret	z                          ; 0408BA || 0408BF C8          1959  			RET     Z
	inc	e                          ; 0408C0 || 	inc	e                          ; 0408BB || 0408C0 1C          1960  			INC     E			; Check for empty string
	dec	e                          ; 0408C1 || 	dec	e                          ; 0408BC || 0408C1 1D          1961  			DEC     E
	ret	z                          ; 0408C2 || 	ret	z                          ; 0408BD || 0408C2 C8          1962  			RET     Z              		; And return
	ld	b,e                         ; 0408C3 || 	ld	b,e                         ; 0408BE || 0408C3 43          1963  			LD      B,E			; B: String length tally
	ld	hl,$044a00                  ; 0408C4 || 	ld	hl,$044a00                  ; 0408BF || 0408C4 21 00 4A 04 1964  			LD	HL,ACCS
	push	bc                        ; 0408C8 || 	push	bc                        ; 0408C3 || 0408C8 C5          1965  STRIN1:			PUSH    BC
	ld	a,(hl)                      ; 0408C9 || 	ld	a,(hl)                      ; 0408C4 || 0408C9 7E          1966  STRIN2:			LD      A,(HL)
	inc	hl                         ; 0408CA || 	inc	hl                         ; 0408C5 || 0408CA 23          1967  			INC     HL
	ld	(de),a                      ; 0408CB || 	ld	(de),a                      ; 0408C6 || 0408CB 12          1968  			LD      (DE),A
	inc	e                          ; 0408CC || 	inc	e                          ; 0408C7 || 0408CC 1C          1969  			INC     E
	ld	a,$13                       ; 0408CD || 	ld	a,$13                       ; 0408C8 || 0408CD 3E 13       1970  			LD      A,19
	jp	z,$0437b6                   ; 0408CF || 	jp	z,$043760                   ; 0408CA || 0408CF CA B6 37 04 1971  			JP      Z,ERROR_         	; Throw a "String too long" error
	djnz	$-$0a                     ; 0408D3 || 	djnz	$-$0a                     ; 0408CE || 0408D3 10 F4       1972  			DJNZ    STRIN2
	pop	bc                         ; 0408D5 || 	pop	bc                         ; 0408D0 || 0408D5 C1          1973  			POP     BC
	dec	c                          ; 0408D6 || 	dec	c                          ; 0408D1 || 0408D6 0D          1974  			DEC     C
	jr	nz,$-$0f                    ; 0408D7 || 	jr	nz,$-$0f                    ; 0408D2 || 0408D7 20 EF       1975  			JR      NZ,STRIN1
	ld	a,$80                       ; 0408D9 || 	ld	a,$80                       ; 0408D4 || 0408D9 3E 80       1976  			LD      A,80H
	ret                            ; 0408DB || 	ret                            ; 0408D6 || 0408DB C9          1977  			RET
	ld	a,c                         ; 0408DC || 	ld	a,c                         ; 0408D7 || 0408DC 79          1985  SWAP:			LD      A,C
	ld	c,b                         ; 0408DD || 	ld	c,b                         ; 0408D8 || 0408DD 48          1986  			LD      C,B
	ld	b,a                         ; 0408DE || 	ld	b,a                         ; 0408D9 || 0408DE 47          1987  			LD      B,A
	ex	de,hl                       ; 0408DF || 	ex	de,hl                       ; 0408DA || 0408DF EB          1988  			EX      DE,HL
	exx                            ; 0408E0 || 	exx                            ; 0408DB || 0408E0 D9          1989  			EXX
	ex	de,hl                       ; 0408E1 || 	ex	de,hl                       ; 0408DC || 0408E1 EB          1990  			EX      DE,HL
	exx                            ; 0408E2 || 	exx                            ; 0408DD || 0408E2 D9          1991  			EXX
	ret                            ; 0408E3 || 	ret                            ; 0408DE || 0408E3 C9          1992  			RET
	ld	a,h                         ; 0408E4 || 	ld	a,h                         ; 0408DF || 0408E4 7C          1998  TEST:			LD      A,H
	or	l                           ; 0408E5 || 	or	l                           ; 0408E0 || 0408E5 B5          1999  			OR      L
	exx                            ; 0408E6 || 	exx                            ; 0408E1 || 0408E6 D9          2000  			EXX
	or	h                           ; 0408E7 || 	or	h                           ; 0408E2 || 0408E7 B4          2001  			OR      H
	or	l                           ; 0408E8 || 	or	l                           ; 0408E3 || 0408E8 B5          2002  			OR      L
	exx                            ; 0408E9 || 	exx                            ; 0408E4 || 0408E9 D9          2003  			EXX
	ret                            ; 0408EA || 	ret                            ; 0408E5 || 0408EA C9          2004  			RET
	exx                            ; 0408EB || 	exx                            ; 0408E6 || 0408EB D9          2011  DECODE:			EXX
	ld	hl,$000000                  ; 0408EC || 	ld	hl,$000000                  ; 0408E7 || 0408EC 21 00 00 00 2012  			LD	HL, 0
	ld	a,(iy)                      ; 0408F0 || 	ld	a,(iy)                      ; 0408EB || 0408F0 FD 7E 00    2013  			LD      A,(IY)
	inc	iy                         ; 0408F3 || 	inc	iy                         ; 0408EE || 0408F3 FD 23       2014  			INC     IY
	rla                            ; 0408F5 || 	rla                            ; 0408F0 || 0408F5 17          2015  			RLA
	rla                            ; 0408F6 || 	rla                            ; 0408F1 || 0408F6 17          2016  			RLA
	ld	h,a                         ; 0408F7 || 	ld	h,a                         ; 0408F2 || 0408F7 67          2017  			LD      H,A
	and	$c0                        ; 0408F8 || 	and	$c0                        ; 0408F3 || 0408F8 E6 C0       2018  			AND     0C0H
	xor	(iy)                       ; 0408FA || 	xor	(iy)                       ; 0408F5 || 0408FA FD AE 00    2019  			XOR     (IY)
	inc	iy                         ; 0408FD || 	inc	iy                         ; 0408F8 || 0408FD FD 23       2020  			INC     IY
	ld	l,a                         ; 0408FF || 	ld	l,a                         ; 0408FA || 0408FF 6F          2021  			LD      L,A
	ld	a,h                         ; 040900 || 	ld	a,h                         ; 0408FB || 040900 7C          2022  			LD      A,H
	rla                            ; 040901 || 	rla                            ; 0408FC || 040901 17          2023  			RLA
	rla                            ; 040902 || 	rla                            ; 0408FD || 040902 17          2024  			RLA
	and	$c0                        ; 040903 || 	and	$c0                        ; 0408FE || 040903 E6 C0       2025  			AND     0C0H
	xor	(iy)                       ; 040905 || 	xor	(iy)                       ; 040900 || 040905 FD AE 00    2026  			XOR     (IY)
	inc	iy                         ; 040908 || 	inc	iy                         ; 040903 || 040908 FD 23       2027  			INC     IY
	ld	h,a                         ; 04090A || 	ld	h,a                         ; 040905 || 04090A 67          2028  			LD      H,A
	exx                            ; 04090B || 	exx                            ; 040906 || 04090B D9          2029  			EXX
	ld	hl,$000000                  ; 04090C || 	ld	hl,$000000                  ; 040907 || 04090C 21 00 00 00 2034  			LD	HL, 0
	ld	c,l                         ; 040910 || 	ld	c,l                         ; 04090B || 040910 4D          2035  			LD	C, L
	ret                            ; 040911 || 	ret                            ; 04090C || 040911 C9          2036  			RET
	inc	iy                         ; 040912 || 	inc	iy                         ; 04090D || 040912 FD 23       2043  HEXSTS:			INC     IY              ;SKIP TILDE
	call	$040322                   ; 040914 || 	call	$04031d                   ; 04090F || 040914 CD 22 03 04 2044  			CALL    ITEMN
	call	$04091f                   ; 040918 || 	call	$04091a                   ; 040913 || 040918 CD 1F 09 04 2045  			CALL    HEXSTR
	ld	a,$80                       ; 04091C || 	ld	a,$80                       ; 040917 || 04091C 3E 80       2046  			LD      A,80H
	ret                            ; 04091E || 	ret                            ; 040919 || 04091E C9          2047  			RET
	call	$040667                   ; 04091F || 	call	$040662                   ; 04091A || 04091F CD 67 06 04 2049  HEXSTR:			CALL    SFIX
	ld	bc,$000008                  ; 040923 || 	ld	bc,$000008                  ; 04091E || 040923 01 08 00 00 2050  			LD      BC,8
	ld	de,$044a00                  ; 040927 || 	ld	de,$044a00                  ; 040922 || 040927 11 00 4A 04 2051  			LD      DE,ACCS
	push	bc                        ; 04092B || 	push	bc                        ; 040926 || 04092B C5          2052  HEXST1:			PUSH    BC
	ld	b,$04                       ; 04092C || 	ld	b,$04                       ; 040927 || 04092C 06 04       2053  			LD      B,4
	xor	a                          ; 04092E || 	xor	a                          ; 040929 || 04092E AF          2054  			XOR     A
	exx                            ; 04092F || 	exx                            ; 04092A || 04092F D9          2055  HEXST2:			EXX
	add.sil	hl,hl                  ; 040930 || 	add.sil	hl,hl                  ; 04092B || 040930 52 29       2056  			ADD.S	HL,HL
	exx                            ; 040932 || 	exx                            ; 04092D || 040932 D9          2057  			EXX
	adc.sil	hl,hl                  ; 040933 || 	adc.sil	hl,hl                  ; 04092E || 040933 52 ED 6A    2058  			ADC.S	HL,HL
	rla                            ; 040936 || 	rla                            ; 040931 || 040936 17          2059  			RLA
	djnz	$-$08                     ; 040937 || 	djnz	$-$08                     ; 040932 || 040937 10 F6       2060  			DJNZ    HEXST2
	pop	bc                         ; 040939 || 	pop	bc                         ; 040934 || 040939 C1          2061  			POP     BC
	dec	c                          ; 04093A || 	dec	c                          ; 040935 || 04093A 0D          2062  			DEC     C
	ret	m                          ; 04093B || 	ret	m                          ; 040936 || 04093B F8          2063  			RET     M
	jr	z,$+$08                     ; 04093C || 	jr	z,$+$08                     ; 040937 || 04093C 28 06       2064  			JR      Z,HEXST3
	or	a                           ; 04093E || 	or	a                           ; 040939 || 04093E B7          2065  			OR      A
	jr	nz,$+$05                    ; 04093F || 	jr	nz,$+$05                    ; 04093A || 04093F 20 03       2066  			JR      NZ,HEXST3
	cp	b                           ; 040941 || 	cp	b                           ; 04093C || 040941 B8          2067  			CP      B
	jr	z,$-$17                     ; 040942 || 	jr	z,$-$17                     ; 04093D || 040942 28 E7       2068  			JR      Z,HEXST1
	add	a,$90                      ; 040944 || 	add	a,$90                      ; 04093F || 040944 C6 90       2069  HEXST3:			ADD     A,90H
	daa                            ; 040946 || 	daa                            ; 040941 || 040946 27          2070  			DAA
	adc	a,$40                      ; 040947 || 	adc	a,$40                      ; 040942 || 040947 CE 40       2071  			ADC     A,40H
	daa                            ; 040949 || 	daa                            ; 040944 || 040949 27          2072  			DAA
	ld	(de),a                      ; 04094A || 	ld	(de),a                      ; 040945 || 04094A 12          2073  			LD      (DE),A
	inc	de                         ; 04094B || 	inc	de                         ; 040946 || 04094B 13          2074  			INC     DE
	ld	b,a                         ; 04094C || 	ld	b,a                         ; 040947 || 04094C 47          2075  			LD      B,A
	jr	$-$22                       ; 04094D || 	jr	$-$22                       ; 040948 || 04094D 18 DC       2076  			JR      HEXST1
	call	$040a78                   ; 04094F || 	call	$040a70                   ; 04094A || 04094F CD 78 0A 04 2086  STRS:			CALL    NXT
	cp	$7e                         ; 040953 || 	cp	$7e                         ; 04094E || 040953 FE 7E       2087  			CP      '~'
	jr	z,$-$43                     ; 040955 || 	jr	z,$-$43                     ; 040950 || 040955 28 BB       2088  			JR      Z,HEXSTS
	call	$040322                   ; 040957 || 	call	$04031d                   ; 040952 || 040957 CD 22 03 04 2089  			CALL    ITEMN
	ld	ix,$044c00                  ; 04095B || 	ld	ix,$044c00                  ; 040956 || 04095B DD 21 00 4C 2090  			LD      IX,STAVAR
	ld	a,(ix+$03)                  ; 040960 || 	ld	a,(ix+$03)                  ; 04095B || 040960 DD 7E 03    2091  			LD      A,(IX+3)
	or	a                           ; 040963 || 	or	a                           ; 04095E || 040963 B7          2092  			OR      A
	ld	ix,$040991                  ; 040964 || 	ld	ix,$04098c                  ; 04095F || 040964 DD 21 91 09 2093  			LD      IX,G9-1         ;G9 FORMAT
	jr	z,$+$07                     ; 040969 || 	jr	z,$+$07                     ; 040964 || 040969 28 05       2094  			JR      Z,STR0
	ld	ix,$044c00                  ; 04096B || 	ld	ix,$044c00                  ; 040966 || 04096B DD 21 00 4C 2095  STR:			LD      IX,STAVAR
	ld	de,$044a00                  ; 040970 || 	ld	de,$044a00                  ; 04096B || 040970 11 00 4A 04 2096  STR0:			LD      DE,ACCS
	ld	a,$25                       ; 040974 || 	ld	a,$25                       ; 04096F || 040974 3E 25       2097  			LD      A,37
	call	$0420a2                   ; 040976 || 	call	$04206a                   ; 040971 || 040976 CD A2 20 04 2098  			CALL    FPP
	jp	c,$0437b6                   ; 04097A || 	jp	c,$043760                   ; 040975 || 04097A DA B6 37 04 2099  			JP      C,ERROR_
	bit	0,(ix+$02)                 ; 04097E || 	bit	0,(ix+$02)                 ; 040979 || 04097E DD CB 02 46 2100  			BIT     0,(IX+2)
	ld	a,$80                       ; 040982 || 	ld	a,$80                       ; 04097D || 040982 3E 80       2101  STR1:			LD      A,80H           ;STRING MARKER
	ret	z                          ; 040984 || 	ret	z                          ; 04097F || 040984 C8          2102  			RET     Z
	ld	a,c                         ; 040985 || 	ld	a,c                         ; 040980 || 040985 79          2103  			LD      A,C
	add	a,$04                      ; 040986 || 	add	a,$04                      ; 040981 || 040986 C6 04       2104  			ADD     A,4
	cp	e                           ; 040988 || 	cp	e                           ; 040983 || 040988 BB          2105  STR2:			CP      E
	jr	z,$-$07                     ; 040989 || 	jr	z,$-$07                     ; 040984 || 040989 28 F7       2106  			JR      Z,STR1
	ex	de,hl                       ; 04098B || 	ex	de,hl                       ; 040986 || 04098B EB          2107  			EX      DE,HL
	ld	(hl),$20                    ; 04098C || 	ld	(hl),$20                    ; 040987 || 04098C 36 20       2108  			LD      (HL),' '        ;TRAILING SPACE
	inc	hl                         ; 04098E || 	inc	hl                         ; 040989 || 04098E 23          2109  			INC     HL
	ex	de,hl                       ; 04098F || 	ex	de,hl                       ; 04098A || 04098F EB          2110  			EX      DE,HL
	jr	$-$08                       ; 040990 || 	jr	$-$08                       ; 04098B || 040990 18 F6       2111  			JR      STR2
	add	hl,bc                      ; 040992 || 	add	hl,bc                      ; 04098D || 040992 09 00       2113  G9:			DW    9
	nop                            ; 040993 || 	nop                            ; 04098E
	call	$0409a2                   ; 040994 || 	call	$04099d                   ; 04098F || 040994 CD A2 09 04 2119  SCP:			CALL	SCP0
	ld	a,$00                       ; 040998 || 	ld	a,$00                       ; 040993 || 040998 3E 00       2121  ZERO:			LD      A,0
	exx                            ; 04099A || 	exx                            ; 040995 || 04099A D9          2122  			EXX
	ld	h,a                         ; 04099B || 	ld	h,a                         ; 040996 || 04099B 67          2123  			LD      H,A
	ld	l,a                         ; 04099C || 	ld	l,a                         ; 040997 || 04099C 6F          2124  			LD      L,A
	exx                            ; 04099D || 	exx                            ; 040998 || 04099D D9          2125  			EXX
	ld	h,a                         ; 04099E || 	ld	h,a                         ; 040999 || 04099E 67          2126  			LD      H,A
	ld	l,a                         ; 04099F || 	ld	l,a                         ; 04099A || 04099F 6F          2127  			LD      L,A
	ld	c,a                         ; 0409A0 || 	ld	c,a                         ; 04099B || 0409A0 4F          2128  			LD      C,A
	ret                            ; 0409A1 || 	ret                            ; 04099C || 0409A1 C9          2129  			RET
	inc	b                          ; 0409A2 || 	inc	b                          ; 04099D || 0409A2 04          2131  SCP0:			INC     B
	inc	c                          ; 0409A3 || 	inc	c                          ; 04099E || 0409A3 0C          2132  			INC     C
	dec	b                          ; 0409A4 || 	dec	b                          ; 04099F || 0409A4 05          2133  SCP1:			DEC     B
	jr	z,$+$0c                     ; 0409A5 || 	jr	z,$+$0c                     ; 0409A0 || 0409A5 28 0A       2134  			JR      Z,SCP2
	dec	c                          ; 0409A7 || 	dec	c                          ; 0409A2 || 0409A7 0D          2135  			DEC     C
	jr	z,$+$0e                     ; 0409A8 || 	jr	z,$+$0e                     ; 0409A3 || 0409A8 28 0C       2136  			JR      Z,SCP3
	ld	a,(de)                      ; 0409AA || 	ld	a,(de)                      ; 0409A5 || 0409AA 1A          2137  			LD      A,(DE)
	cp	(hl)                        ; 0409AB || 	cp	(hl)                        ; 0409A6 || 0409AB BE          2138  			CP      (HL)
	ret	nz                         ; 0409AC || 	ret	nz                         ; 0409A7 || 0409AC C0          2139  			RET     NZ
	inc	de                         ; 0409AD || 	inc	de                         ; 0409A8 || 0409AD 13          2140  			INC     DE
	inc	hl                         ; 0409AE || 	inc	hl                         ; 0409A9 || 0409AE 23          2141  			INC     HL
	jr	$-$0b                       ; 0409AF || 	jr	$-$0b                       ; 0409AA || 0409AF 18 F3       2142  			JR      SCP1
	or	a                           ; 0409B1 || 	or	a                           ; 0409AC || 0409B1 B7          2143  SCP2:			OR      A
	dec	c                          ; 0409B2 || 	dec	c                          ; 0409AD || 0409B2 0D          2144  			DEC     C
	ret	z                          ; 0409B3 || 	ret	z                          ; 0409AE || 0409B3 C8          2145  			RET     Z
	scf                            ; 0409B4 || 	scf                            ; 0409AF || 0409B4 37          2146  			SCF
	ret                            ; 0409B5 || 	ret                            ; 0409B0 || 0409B5 C9          2147  			RET
	or	a                           ; 0409B6 || 	or	a                           ; 0409B1 || 0409B6 B7          2148  SCP3:			OR      A
	inc	c                          ; 0409B7 || 	inc	c                          ; 0409B2 || 0409B7 0C          2149  			INC     C
	ret                            ; 0409B8 || 	ret                            ; 0409B3 || 0409B8 C9          2150  			RET
	call	$041681                   ; 0409B9 || 	call	$04164f                   ; 0409B4 || 0409B9 CD 81 16 04 2158  PUSHS:			CALL    CHECK			; Check if there is sufficient space on the stack
	pop	ix                         ; 0409BD || 	pop	ix                         ; 0409B8 || 0409BD DD E1       2159  			POP     IX              	; IX: Return address
	or	a                           ; 0409BF || 	or	a                           ; 0409BA || 0409BF B7          2160  			OR      A               	; Clear the carry flag
	ld	bc,$000000                  ; 0409C0 || 	ld	bc,$000000                  ; 0409BB || 0409C0 01 00 00 00 2161  			LD	BC,0			; BC: Length of the string
	ld	c,e                         ; 0409C4 || 	ld	c,e                         ; 0409BF || 0409C4 4B          2162  			LD	C,E
	ld	hl,$044a00                  ; 0409C5 || 	ld	hl,$044a00                  ; 0409C0 || 0409C5 21 00 4A 04 2163  			LD      HL,ACCS			; HL: Pointer to the string accumulator
	ld	de,$044a00                  ; 0409C9 || 	ld	de,$044a00                  ; 0409C4 || 0409C9 11 00 4A 04 2164  			LD	DE,ACCS
	ld	e,c                         ; 0409CD || 	ld	e,c                         ; 0409C8 || 0409CD 59          2165  			LD	E,C 			; DE: Pointer to the end of the string in the accumulator
	sbc	hl,de                      ; 0409CE || 	sbc	hl,de                      ; 0409C9 || 0409CE ED 52       2166  			SBC     HL,DE			; HL: Number of bytes to reserve on the stack (a negative number)
	add	hl,sp                      ; 0409D0 || 	add	hl,sp                      ; 0409CB || 0409D0 39          2167  			ADD     HL,SP			; Grow the stack
	ld	sp,hl                       ; 0409D1 || 	ld	sp,hl                       ; 0409CC || 0409D1 F9          2168  			LD      SP,HL
	ld	d,a                         ; 0409D2 || 	ld	d,a                         ; 0409CD || 0409D2 57          2169  			LD      D,A			;  D: This needs to be set to A for some functions
	ld	b,a                         ; 0409D3                                         || 0409D3 47          2170  			LD	B,A			; Stack A and C (the string length)
	push	bc                        ; 0409D4                                         || 0409D4 C5          2171  			PUSH    BC			; Note that this stacks 3 bytes, not 2; the MSB is irrelevant
	ld	b,$00                       ; 0409D5                                         || 0409D5 06 00       2172  			LD	B,0			; Reset B to 0 for the LDIR in this function
	jr	z,$+$0d                     ; 0409D7                                         || 0409D7 28 0B       2173  			JR      Z,PUSHS1        	; Is it zero length?
	ld	de,$044a00                  ; 0409D9                                         || 0409D9 11 00 4A 04 2174  			LD      DE,ACCS			; DE: Destination
	ex	de,hl                       ; 0409DD                                         || 0409DD EB          2175  			EX      DE,HL			; HL: Destination, DE: Address on stack
	ldir                           ; 0409DE || 	ldir                           ; 0409D6 || 0409DE ED B0       2176  			LDIR	                    	; Copy to stack
	call	$041681                   ; 0409E0 || 	call	$04164f                   ; 0409D8 || 0409E0 CD 81 16 04 2177  			CALL    CHECK			; Final check to see if there is sufficient space on the stack
	jp	(ix)                        ; 0409E4 || 	jp	(ix)                        ; 0409DC || 0409E4 DD E9       2178  PUSHS1:			JP      (IX)            	; Effectively "RET" (IX contains the return address)
	pop	ix                         ; 0409E6 || 	pop	ix                         ; 0409DE || 0409E6 DD E1       2186  POPS:			POP     IX              	; IX: Return address
	ld	l,c                         ; 0409E8 || 	ld	l,c                         ; 0409E0 || 0409E8 69          2187  			LD	L,C			; Temporarily store string length in L
	ld	bc,$000000                  ; 0409E9 || 	ld	bc,$000000                  ; 0409E1 || 0409E9 01 00 00 00 2188  			LD	BC,0
	ld	c,l                         ; 0409ED || 	ld	c,l                         ; 0409E5 || 0409ED 4D          2189  			LD	C,L			; BC: Number of bytes to copy
	ld	hl,$000000                  ; 0409EE || 	ld	hl,$000000                  ; 0409E6 || 0409EE 21 00 00 00 2190  			LD      HL,0			; HL: 0
	add	hl,sp                      ; 0409F2 || 	add	hl,sp                      ; 0409EA || 0409F2 39          2191  			ADD     HL,SP			; HL: Stack address
	ld	de,$044a00                  ; 0409F3 || 	ld	de,$044a00                  ; 0409EB || 0409F3 11 00 4A 04 2192  			LD      DE,ACCS			; DE: Destination
	inc	c                          ; 0409F7 || 	inc	c                          ; 0409EF || 0409F7 0C          2193  			INC     C			; Quick check to see if this is a zero length string
	dec	c                          ; 0409F8 || 	dec	c                          ; 0409F0 || 0409F8 0D          2194  			DEC     C
	jr	z,$+$04                     ; 0409F9 || 	jr	z,$+$04                     ; 0409F1 || 0409F9 28 02       2195  			JR      Z,POPS1         	; Yes it is, so skip
	ldir                           ; 0409FB || 	ldir                           ; 0409F3 || 0409FB ED B0       2196  			LDIR                    	; No, so copy from the stack
	ld	sp,hl                       ; 0409FD || 	ld	sp,hl                       ; 0409F5 || 0409FD F9          2197  POPS1:			LD      SP,HL			; Shrink the stack
	jp	(ix)                        ; 0409FE || 	jp	(ix)                        ; 0409F6 || 0409FE DD E9       2198  			JP      (IX)            	; Effectively "RET" (IX contains the return address)
	ld	a,(iy)                      ; 040A00 || 	ld	a,(iy)                      ; 0409F8 || 040A00 FD 7E 00    2200  HEXDIG:			LD      A,(IY)
	cp	$30                         ; 040A03 || 	cp	$30                         ; 0409FB || 040A03 FE 30       2201  			CP      '0'
	ret	c                          ; 040A05 || 	ret	c                          ; 0409FD || 040A05 D8          2202  			RET     C
	cp	$3a                         ; 040A06 || 	cp	$3a                         ; 0409FE || 040A06 FE 3A       2203  			CP      '9'+1
	ccf                            ; 040A08 || 	ccf                            ; 040A00 || 040A08 3F          2204  			CCF
	ret	nc                         ; 040A09 || 	ret	nc                         ; 040A01 || 040A09 D0          2205  			RET     NC
	cp	$41                         ; 040A0A || 	cp	$41                         ; 040A02 || 040A0A FE 41       2206  			CP      'A'
	ret	c                          ; 040A0C || 	ret	c                          ; 040A04 || 040A0C D8          2207  			RET     C
	sub	$37                        ; 040A0D || 	sub	$37                        ; 040A05 || 040A0D D6 37       2208  			SUB     'A'-10
	cp	$10                         ; 040A0F || 	cp	$10                         ; 040A07 || 040A0F FE 10       2209  			CP      16
	ccf                            ; 040A11 || 	ccf                            ; 040A09 || 040A11 3F          2210  			CCF
	ret                            ; 040A12 || 	ret                            ; 040A0A || 040A12 C9          2211  			RET
	ld	a,(iy)                      ; 040A13 || 	ld	a,(iy)                      ; 040A0B || 040A13 FD 7E 00    2213  BINDIG:			LD	A,(IY)
	cp	$30                         ; 040A16 || 	cp	$30                         ; 040A0E || 040A16 FE 30       2214  			CP	'0'
	ret	c                          ; 040A18 || 	ret	c                          ; 040A10 || 040A18 D8          2215  			RET	C
	cp	$32                         ; 040A19 || 	cp	$32                         ; 040A11 || 040A19 FE 32       2216  			CP	'1'+1
	ccf                            ; 040A1B || 	ccf                            ; 040A13 || 040A1B 3F          2217  			CCF
	ret                            ; 040A1C || 	ret                            ; 040A14 || 040A1C C9          2218  			RET
	cp	$3e                         ; 040A1D || 	cp	$3e                         ; 040A15 || 040A1D FE 3E       2220  RELOP?:			CP      '>'
	ret	nc                         ; 040A1F || 	ret	nc                         ; 040A17 || 040A1F D0          2221  			RET     NC
	cp	$3d                         ; 040A20 || 	cp	$3d                         ; 040A18 || 040A20 FE 3D       2222  			CP      '='
	ret	nc                         ; 040A22 || 	ret	nc                         ; 040A1A || 040A22 D0          2223  			RET     NC
	cp	$3c                         ; 040A23 || 	cp	$3c                         ; 040A1B || 040A23 FE 3C       2224  			CP      '<'
	ret                            ; 040A25 || 	ret                            ; 040A1D || 040A25 C9          2225  			RET
	call	$04031a                   ; 040A26 || 	call	$040315                   ; 040A1E || 040A26 CD 1A 03 04 2227  EXPRSC:			CALL    EXPRS
	call	$040a78                   ; 040A2A || 	call	$040a70                   ; 040A22 || 040A2A CD 78 0A 04 2228  COMMA:			CALL    NXT
	inc	iy                         ; 040A2E || 	inc	iy                         ; 040A26 || 040A2E FD 23       2229  			INC     IY
	cp	$2c                         ; 040A30 || 	cp	$2c                         ; 040A28 || 040A30 FE 2C       2230  			CP      ','
	ret	z                          ; 040A32 || 	ret	z                          ; 040A2A || 040A32 C8          2231  			RET     Z
	ld	a,$05                       ; 040A33 || 	ld	a,$05                       ; 040A2B || 040A33 3E 05       2232  			LD      A,5
	jr	$+$0d                       ; 040A35 || 	jr	$+$0d                       ; 040A2D || 040A35 18 0B       2233  			JR      ERROR1_EV          ;"Missing ,"
	call	$040a78                   ; 040A37 || 	call	$040a70                   ; 040A2F || 040A37 CD 78 0A 04 2235  BRAKET:			CALL    NXT
	inc	iy                         ; 040A3B || 	inc	iy                         ; 040A33 || 040A3B FD 23       2236  			INC     IY
	cp	$29                         ; 040A3D || 	cp	$29                         ; 040A35 || 040A3D FE 29       2237  			CP      ')'
	ret	z                          ; 040A3F || 	ret	z                          ; 040A37 || 040A3F C8          2238  			RET     Z
	ld	a,$1b                       ; 040A40 || 	ld	a,$1b                       ; 040A38 || 040A40 3E 1B       2239  			LD      A,27
	jp	$0437b6                     ; 040A42 || 	jp	$043760                     ; 040A3A || 040A42 C3 B6 37 04 2240  ERROR1_EV:			JP      ERROR_           ;"Missing )"
	inc	iy                         ; 040A46 || 	inc	iy                         ; 040A3E || 040A46 FD 23       2242  SAVE_EV:			INC     IY
	ex	af,af'                      ; 040A48 || 	ex	af,af'                      ; 040A40 || 040A48 08          2243  SAVE1:			EX      AF,AF'
	jp	m,$04033b                   ; 040A49 || 	jp	m,$040336                   ; 040A41 || 040A49 FA 3B 03 04 2244  			JP      M,TYPE_EV_
	ex	af,af'                      ; 040A4D || 	ex	af,af'                      ; 040A45 || 040A4D 08          2245  			EX      AF,AF'
	ex	(sp),hl                     ; 040A4E || 	ex	(sp),hl                     ; 040A46 || 040A4E E3          2246  			EX      (SP),HL
	exx                            ; 040A4F || 	exx                            ; 040A47 || 040A4F D9          2247  			EXX
	push	hl                        ; 040A50 || 	push	hl                        ; 040A48 || 040A50 E5          2248  			PUSH    HL
	exx                            ; 040A51 || 	exx                            ; 040A49 || 040A51 D9          2249  			EXX
	push	af                        ; 040A52 || 	push	af                        ; 040A4A || 040A52 F5          2250  			PUSH    AF
	push	bc                        ; 040A53 || 	push	bc                        ; 040A4B || 040A53 C5          2251  			PUSH    BC
	jp	(hl)                        ; 040A54 || 	jp	(hl)                        ; 040A4C || 040A54 E9          2252  			JP      (HL)
	ex	af,af'                      ; 040A55 || 	ex	af,af'                      ; 040A4D || 040A55 08          2254  DOIT:			EX      AF,AF'
	jp	m,$04033b                   ; 040A56 || 	jp	m,$040336                   ; 040A4E || 040A56 FA 3B 03 04 2255  			JP      M,TYPE_EV_
	exx                            ; 040A5A || 	exx                            ; 040A52 || 040A5A D9          2256  			EXX
	pop	bc                         ; 040A5B || 	pop	bc                         ; 040A53 || 040A5B C1          2257  			POP     BC              ;RETURN ADDRESS
	exx                            ; 040A5C || 	exx                            ; 040A54 || 040A5C D9          2258  			EXX
	ld	a,c                         ; 040A5D || 	ld	a,c                         ; 040A55 || 040A5D 79          2259  			LD      A,C
	pop	bc                         ; 040A5E || 	pop	bc                         ; 040A56 || 040A5E C1          2260  			POP     BC
	ld	b,a                         ; 040A5F || 	ld	b,a                         ; 040A57 || 040A5F 47          2261  			LD      B,A
	pop	af                         ; 040A60 || 	pop	af                         ; 040A58 || 040A60 F1          2262  			POP     AF              ;OPERATOR
	exx                            ; 040A61 || 	exx                            ; 040A59 || 040A61 D9          2263  			EXX
	ex	de,hl                       ; 040A62 || 	ex	de,hl                       ; 040A5A || 040A62 EB          2264  			EX      DE,HL
	pop	hl                         ; 040A63 || 	pop	hl                         ; 040A5B || 040A63 E1          2265  			POP     HL
	exx                            ; 040A64 || 	exx                            ; 040A5C || 040A64 D9          2266  			EXX
	ex	de,hl                       ; 040A65 || 	ex	de,hl                       ; 040A5D || 040A65 EB          2267  			EX      DE,HL
	pop	hl                         ; 040A66 || 	pop	hl                         ; 040A5E || 040A66 E1          2268  			POP     HL
	exx                            ; 040A67 || 	exx                            ; 040A5F || 040A67 D9          2269  			EXX
	push	bc                        ; 040A68 || 	push	bc                        ; 040A60 || 040A68 C5          2270  			PUSH    BC
	exx                            ; 040A69 || 	exx                            ; 040A61 || 040A69 D9          2271  			EXX
	and	$0f                        ; 040A6A || 	and	$0f                        ; 040A62 || 040A6A E6 0F       2272  			AND     0FH
	call	$0420a2                   ; 040A6C || 	call	$04206a                   ; 040A64 || 040A6C CD A2 20 04 2273  			CALL    FPP
	jr	c,$-$2e                     ; 040A70 || 	jr	c,$-$2e                     ; 040A68 || 040A70 38 D0       2274  			JR      C,ERROR1_EV
	xor	a                          ; 040A72 || 	xor	a                          ; 040A6A || 040A72 AF          2275  			XOR     A
	ex	af,af'                      ; 040A73 || 	ex	af,af'                      ; 040A6B || 040A73 08          2276  			EX      AF,AF'          ;TYPE
	ld	a,(iy)                      ; 040A74 || 	ld	a,(iy)                      ; 040A6C || 040A74 FD 7E 00    2277  			LD      A,(IY)
	ret                            ; 040A77 || 	ret                            ; 040A6F || 040A77 C9          2278  			RET
	ld	a,(iy)                      ; 040A78 || 	ld	a,(iy)                      ; 040A70 || 040A78 FD 7E 00    2286  NXT:			LD      A,(IY)			; Fetch the character
	cp	$20                         ; 040A7B || 	cp	$20                         ; 040A73 || 040A7B FE 20       2287  			CP      ' '			; If it is space, then return
	ret	nz                         ; 040A7D || 	ret	nz                         ; 040A75 || 040A7D C0          2288  			RET     NZ
	inc	iy                         ; 040A7E || 	inc	iy                         ; 040A76 || 040A7E FD 23       2289  			INC     IY			; Increment the pointer and
	jp	$040a78                     ; 040A80 || 	jp	$040a70                     ; 040A78 || 040A80 C3 78 0A 04 2290  			JP      NXT			; Loop
	push	hl                        ; 040A84 || 	push	hl                        ; 040A7C || 040A84 E5          2292  DISPT2:			PUSH    HL
	ld	hl,$0401b5                  ; 040A85 || 	ld	hl,$0401b5                  ; 040A7D || 040A85 21 B5 01 04 2293  			LD      HL,SOPTBL
	jr	$+$09                       ; 040A89 || 	jr	$+$09                       ; 040A81 || 040A89 18 07       2294  			JR      DISPT0
	push	hl                        ; 040A8B || 	push	hl                        ; 040A83 || 040A8B E5          2296  DISPAT:			PUSH    HL
	sub	$8d                        ; 040A8C || 	sub	$8d                        ; 040A84 || 040A8C D6 8D       2297  			SUB     FUNTOK
	ld	hl,$04010a                  ; 040A8E || 	ld	hl,$04010a                  ; 040A86 || 040A8E 21 0A 01 04 2298  			LD      HL,FUNTBL
	push	bc                        ; 040A92 || 	push	bc                        ; 040A8A || 040A92 C5          2299  DISPT0:			PUSH    BC
	ld	bc,$000003                  ; 040A93 || 	ld	bc,$000003                  ; 040A8B || 040A93 01 03 00 00 2301  			LD	BC, 3
	ld	b,a                         ; 040A97 || 	ld	b,a                         ; 040A8F || 040A97 47          2302  			LD	B, A
	mlt	bc                         ; 040A98 || 	mlt	bc                         ; 040A90 || 040A98 ED 4C       2303  			MLT	BC
	add	hl,bc                      ; 040A9A || 	add	hl,bc                      ; 040A92 || 040A9A 09          2304  			ADD	HL, BC
	ld	hl,(hl)                     ; 040A9B || 	ld	hl,(hl)                     ; 040A93 || 040A9B ED 27       2305  			LD	HL, (HL)
	pop	bc                         ; 040A9D || 	pop	bc                         ; 040A95 || 040A9D C1          2316  			POP     BC
	ex	(sp),hl                     ; 040A9E || 	ex	(sp),hl                     ; 040A96 || 040A9E E3          2317  			EX      (SP),HL
	ret                            ; 040A9F || 	ret                            ; 040A97 || 040A9F C9          2318  			RET                     ;OFF TO ROUTINE
	ccf                            ; 040AA0                                         || 040AA0 3F 37 04    2480  CMDTAB:			DW24  AUTO			; C6H
	scf                            ; 040AA1
	inc	b                          ; 040AA2
	and	d                          ; 040AA3                                         || 040AA3 A2 35 04    2481  			DW24  DELETE			; C7H
	dec	(hl)                       ; 040AA4
	inc	b                          ; 040AA5
	add	a,b                        ; 040AA6                                         || 040AA6 80 37 04    2482  			DW24  LOAD			; C8H
	scf                            ; 040AA7
	inc	b                          ; 040AA8
	dec	(ix+$04)                   ; 040AA9                                         || 040AA9 DD 35 04    2483  			DW24  LIST_			; C9H
	ld	e,l                         ; 040AAC                                         || 040AAC 5D 37 04    2484  			DW24  NEW			; CAH
	scf                            ; 040AAD
	inc	b                          ; 040AAE
	ld	h,e                         ; 040AAF                                         || 040AAF 63 37 04    2485  			DW24  OLD			; CBH
	scf                            ; 040AB0
	inc	b                          ; 040AB1
	ld	l,h                         ; 040AB2                                         || 040AB2 6C 36 04    2486  			DW24  RENUM			; CCH
	ld	(hl),$04                    ; 040AB3
	sub	c                          ; 040AB5                                         || 040AB5 91 37 04    2487  			DW24  SAVE			; CDH
	scf                            ; 040AB6
	inc	b                          ; 040AB7
	jp	c,$d00415                   ; 040AB8                                         || 040AB8 DA 15 04    2488  			DW24  PUT			; CEH
	inc	de                         ; 040ABC
	inc	b                          ; 040ABD
	jp	pe,$fd0413                  ; 040ABE                                         || 040ABE EA 13 04    2490  			DW24  PAGEV_EX			; D0H
	inc	de                         ; 040AC2
	inc	b                          ; 040AC3
	ld	h,$14                       ; 040AC4                                         || 040AC4 26 14 04    2492  			DW24  LOMEMV_EX			; D2H
	inc	b                          ; 040AC6
	ccf                            ; 040AC7                                         || 040AC7 3F 14 04    2493  			DW24  HIMEMV_EX			; D3H
	inc	d                          ; 040AC8
	inc	b                          ; 040AC9
	add	a,d                        ; 040ACA                                         || 040ACA 82 46 04    2494  			DW24  SOUND			; D4H
	ld	b,(hl)                      ; 040ACB
	inc	b                          ; 040ACC
	call	p,$0c0414                 ; 040ACD                                         || 040ACD F4 14 04    2495  			DW24  BPUT			; D5H
	dec	d                          ; 040AD1
	inc	b                          ; 040AD2
	ld	d,h                         ; 040AD3                                         || 040AD3 54 0B 04    2497  			DW24  CHAIN			; D7H
	dec	bc                         ; 040AD4
	inc	b                          ; 040AD5
	sbc	a,a                        ; 040AD6                                         || 040AD6 9F 13 04    2498  			DW24  CLR			; D8H
	inc	de                         ; 040AD7
	inc	b                          ; 040AD8
	ret	pe                         ; 040AD9                                         || 040AD9 E8 14 04    2499  			DW24  CLOSE			; D9H
	inc	d                          ; 040ADA
	inc	b                          ; 040ADB
	ld	e,$44                       ; 040ADC                                         || 040ADC 1E 44 04    2500  			DW24  CLG			; DAH
	inc	b                          ; 040ADE
	ld	(hl),d                      ; 040ADF                                         || 040ADF 72 13 04    2501  			DW24  CLS			; DBH
	inc	de                         ; 040AE0
	inc	b                          ; 040AE1
	inc	sp                         ; 040AE2                                         || 040AE2 33 0C 04    2502  			DW24  REM_EX             		; DCH: DATA
	inc	c                          ; 040AE3
	inc	b                          ; 040AE4
	inc	sp                         ; 040AE5                                         || 040AE5 33 0C 04    2503  			DW24  REM_EX             		; DDH: DEF
	inc	c                          ; 040AE6
	inc	b                          ; 040AE7
	ld	sp,hl                       ; 040AE8                                         || 040AE8 F9 0C 04    2504  			DW24  DIM_EX			; DEH
	inc	c                          ; 040AE9
	inc	b                          ; 040AEA
	ld	c,b                         ; 040AEB                                         || 040AEB 48 46 04    2505  			DW24  DRAW			; DFH
	ld	b,(hl)                      ; 040AEC
	inc	b                          ; 040AED
	adc	a,$0b                      ; 040AEE                                         || 040AEE CE 0B 04    2506  			DW24  END_			; E0H
	inc	b                          ; 040AF0
	adc	a,d                        ; 040AF1                                         || 040AF1 8A 11 04    2507  			DW24  ENDPRO			; E1H
	ld	de,$49a204                  ; 040AF2
	inc	b                          ; 040AF6
	sbc	a,a                        ; 040AF7                                         || 040AF7 9F 0F 04    2509  			DW24  FOR_EX			; E3H
	rrca                           ; 040AF8
	inc	b                          ; 040AF9
	ld	c,a                         ; 040AFA                                         || 040AFA 4F 0F 04    2510  			DW24  GOSUB_EX			; E4H
	rrca                           ; 040AFB
	inc	b                          ; 040AFC
	inc	sp                         ; 040AFD                                         || 040AFD 33 0F 04    2511  			DW24  GOTO_EX			; E5H
	rrca                           ; 040AFE
	inc	b                          ; 040AFF
	call	c,$3e0445                 ; 040B00                                         || 040B00 DC 45 04    2512  			DW24  GCOL			; E6H
	inc	de                         ; 040B04
	inc	b                          ; 040B05
	inc	l                          ; 040B06                                         || 040B06 2C 12 04    2514  			DW24  INPUT			; E8H
	ld	(de),a                      ; 040B07
	inc	b                          ; 040B08
	ld	d,h                         ; 040B09                                         || 040B09 54 0C 04    2515  			DW24  LET			; E9H
	inc	c                          ; 040B0A
	inc	b                          ; 040B0B
	cpl                            ; 040B0C                                         || 040B0C 2F 11 04    2516  			DW24  LOCAL_EX_			; EAH
	ld	de,$442e04                  ; 040B0D
	inc	b                          ; 040B11
	ld.sis	b,(hl)                  ; 040B12                                         || 040B12 40 46 04    2518  			DW24  MOVE			; ECH
	inc	b                          ; 040B14
	ld	(hl),bc                     ; 040B15                                         || 040B15 ED 0F 04    2519  			DW24  NEXT_EX			; EDH
	inc	b                          ; 040B17
	add	a,$0e                      ; 040B18                                         || 040B18 C6 0E 04    2520  			DW24  ON_EX_			; EEH
	inc	b                          ; 040B1A
	xor	c                          ; 040B1B                                         || 040B1B A9 14 04    2521  			DW24  VDU			; EFH
	inc	d                          ; 040B1C
	inc	b                          ; 040B1D
	ld	c,$46                       ; 040B1E                                         || 040B1E 0E 46 04    2522  			DW24  PLOT			; F0H
	inc	b                          ; 040B20 || 	inc	b                          ; 040B18
	rst	$08                        ; 040B21 || 	rst	$00                        ; 040B19 || 040B21 CF 0D 04    2523  			DW24  PRINT_			; F1H
	dec	c                          ; 040B22 || 	dec	c                          ; 040B1A
	inc	b                          ; 040B23 || 	inc	b                          ; 040B1B
	adc	a,h                        ; 040B24                                         || 040B24 8C 10 04    2524  			DW24  PROC_EX			; F2H
	djnz	$+$06                     ; 040B25 || 	djnz	$+$06                     ; 040B1D
	sbc	a,$12                      ; 040B27                                         || 040B27 DE 12 04    2525  			DW24  READ			; F3H
	inc	b                          ; 040B29 || 	inc	b                          ; 040B21
	inc	sp                         ; 040B2A                                         || 040B2A 33 0C 04    2526  			DW24  REM_EX			; F4H
	inc	c                          ; 040B2B || 	inc	c                          ; 040B23
	inc	b                          ; 040B2C || 	inc	b                          ; 040B24
	ld	l,a                         ; 040B2D                                         || 040B2D 6F 0F 04    2527  			DW24  REPEAT_EX			; F5H
	rrca                           ; 040B2E || 	rrca                           ; 040B26
	inc	b                          ; 040B2F || 	inc	b                          ; 040B27
	sub	a                          ; 040B30                                         || 040B30 97 13 04    2528  			DW24  REPOR			; F6H
	inc	de                         ; 040B31 || 	inc	de                         ; 040B29
	inc	b                          ; 040B32 || 	inc	b                          ; 040B2A
	xor	c                          ; 040B33                                         || 040B33 A9 13 04    2529  			DW24  RESTOR_EX			; F7H
	inc	de                         ; 040B34 || 	inc	de                         ; 040B2C
	inc	b                          ; 040B35 || 	inc	b                          ; 040B2D
	ld	e,l                         ; 040B36                                         || 040B36 5D 0F 04    2530  			DW24  RETURN			; F8H
	rrca                           ; 040B37 || 	rrca                           ; 040B2F
	inc	b                          ; 040B38 || 	inc	b                          ; 040B30
	ld	c,(hl)                      ; 040B39                                         || 040B39 4E 0B 04    2531  			DW24  RUN			; F9H
	dec	bc                         ; 040B3A || 	dec	bc                         ; 040B32
	inc	b                          ; 040B3B || 	inc	b                          ; 040B33
	ld	a,a                         ; 040B3C                                         || 040B3C 7F 13 04    2532  			DW24  STOP			; FAH
	inc	de                         ; 040B3D || 	inc	de                         ; 040B35
	inc	b                          ; 040B3E || 	inc	b                          ; 040B36
	ld	hl,($8b0445)                ; 040B3F                                         || 040B3F 2A 45 04    2533  			DW24  COLOUR			; FBH
	inc	d                          ; 040B43
	inc	b                          ; 040B44 || 	inc	b                          ; 040B3C
	ld	a,c                         ; 040B45                                         || 040B45 79 0F 04    2535  			DW24  UNTIL_EX			; FDH
	rrca                           ; 040B46 || 	rrca                           ; 040B3E
	inc	b                          ; 040B47 || 	inc	b                          ; 040B3F
	ld	a,l                         ; 040B48                                         || 040B48 7D 14 04    2536  			DW24  WIDTHV			; FEH
	inc	d                          ; 040B49 || 	inc	d                          ; 040B41
	inc	b                          ; 040B4A || 	inc	b                          ; 040B42
	add	hl,de                      ; 040B4B                                         || 040B4B 19 0C 04    2537  			DW24  CLI             		; FFH: OSCLI
	inc	c                          ; 040B4C
	inc	b                          ; 040B4D
	call	$0417ac                   ; 040B4E                                         || 040B4E CD AC 17 04 2542  RUN:			CALL    TERMQ			; Standalone RUN command?
	jr	z,$+$12                     ; 040B52 || 	jr	z,$+$12                     ; 040B4A || 040B52 28 10       2543  			JR      Z,RUN0			; Yes, so just RUN the code
	call	$04031a                   ; 040B54 || 	call	$040315                   ; 040B4C || 040B54 CD 1A 03 04 2547  CHAIN:			CALL    EXPRS			; Get the filename
	ld	a,$0d                       ; 040B58 || 	ld	a,$0d                       ; 040B50 || 040B58 3E 0D       2548  			LD      A,CR			; Terminate it with a CR
	ld	(de),a                      ; 040B5A || 	ld	(de),a                      ; 040B52 || 040B5A 12          2549  			LD      (DE),A
	ld	sp,($044d20)                ; 040B5B || 	ld	sp,($044d20)                ; 040B53 || 040B5B ED 7B 20 4D 2550  CHAIN0:			LD      SP,(HIMEM)		; Reset SP
	call	$043875                   ; 040B60 || 	call	$04381f                   ; 040B58 || 040B60 CD 75 38 04 2551  			CALL    LOAD0			; And load the file in
	ld	sp,($044d20)                ; 040B64 || 	ld	sp,($044d20)                ; 040B5C || 040B64 ED 7B 20 4D 2553  RUN0:			LD      SP,(HIMEM)      	; Prepare for RUN
	ld	ix,$044d38                  ; 040B69 || 	ld	ix,$044d38                  ; 040B61 || 040B69 DD 21 38 4D 2554  			LD      IX,RANDOM		; Pointer to the RANDOM sysvar
	ld	a,r                         ; 040B6E || 	ld	a,r                         ; 040B66 || 040B6E ED 5F       2555  @@:			LD      A, R			; Use the R register to seed the random number generator
	jr	z,$-$02                     ; 040B70 || 	jr	z,$-$02                     ; 040B68 || 040B70 28 FC       2556  			JR      Z, @B			; Loop unti we get a non-zero value in A
	rlca                           ; 040B72 || 	rlca                           ; 040B6A || 040B72 07          2557  			RLCA				; Rotate it
	rlca                           ; 040B73 || 	rlca                           ; 040B6B || 040B73 07          2558  			RLCA
	ld	(ix+$03),a                  ; 040B74 || 	ld	(ix+$03),a                  ; 040B6C || 040B74 DD 77 03    2559  			LD      (IX+3),A		; And store
	sbc	a,a                        ; 040B77 || 	sbc	a,a                        ; 040B6F || 040B77 9F          2560  			SBC     A,A			; Depending upon the C flag, this will either be 00h or FFh
	ld	(ix+$04),a                  ; 040B78 || 	ld	(ix+$04),a                  ; 040B70 || 040B78 DD 77 04    2561  			LD      (IX+4),A		; And store
	call	$0438cc                   ; 040B7B || 	call	$043876                   ; 040B73 || 040B7B CD CC 38 04 2562  			CALL    CLEAR
	ld	hl,$000000                  ; 040B7F || 	ld	hl,$000000                  ; 040B77 || 040B7F 21 00 00 00 2563  			LD      HL,0			; Clear the error trap sysvar
	ld	($044d2c),hl                ; 040B83 || 	ld	($044d2c),hl                ; 040B7B || 040B83 22 2C 4D 04 2564  			LD      (ERRTRP),HL
	ld	hl,($044d14)                ; 040B87 || 	ld	hl,($044d14)                ; 040B7F || 040B87 2A 14 4D 04 2565  			LD      HL,(PAGE_)		; Load HL with the start of program memory (PAGE)
	ld	a,$dc                       ; 040B8B || 	ld	a,$dc                       ; 040B83 || 040B8B 3E DC       2566  			LD      A,DATA_			; The DATA token value
	call	$041880                   ; 040B8D || 	call	$04184e                   ; 040B85 || 040B8D CD 80 18 04 2567  			CALL    SEARCH_EX          	; Search for the first DATA token in the tokenised listing
	ld	($044d31),hl                ; 040B91 || 	ld	($044d31),hl                ; 040B89 || 040B91 22 31 4D 04 2568  			LD      (DATPTR),HL     	; Set data pointer
	ld	iy,($044d14)                ; 040B95 || 	ld	iy,($044d14)                ; 040B8D || 040B95 FD 2A 14 4D 2569  			LD      IY,(PAGE_)		; Load IY with the start of program memory
	call	$040be2                   ; 040B9A || 	call	$040bda                   ; 040B92 || 040B9A CD E2 0B 04 2571  XEQ0:			CALL    NEWLIN
	ld	($044d35),iy                ; 040B9E || 	ld	($044d35),iy                ; 040B96 || 040B9E FD 22 35 4D 2572  XEQ:			LD      (ERRLIN),IY     	; Error pointer
	call	$043fc3                   ; 040BA3 || 	call	$043f6d                   ; 040B9B || 040BA3 CD C3 3F 04 2573  			CALL    TRAP           		; Check keyboard
	call	$040a78                   ; 040BA7 || 	call	$040a70                   ; 040B9F || 040BA7 CD 78 0A 04 2574  XEQ1:			CALL    NXT
	inc	iy                         ; 040BAB || 	inc	iy                         ; 040BA3 || 040BAB FD 23       2575  			INC     IY
	cp	$3a                         ; 040BAD || 	cp	$3a                         ; 040BA5 || 040BAD FE 3A       2576  			CP      ':'             	; Seperator
	jr	z,$-$08                     ; 040BAF || 	jr	z,$-$08                     ; 040BA7 || 040BAF 28 F6       2577  			JR      Z,XEQ1
	cp	$0d                         ; 040BB1 || 	cp	$0d                         ; 040BA9 || 040BB1 FE 0D       2578  			CP      CR
	jr	z,$-$19                     ; 040BB3 || 	jr	z,$-$19                     ; 040BAB || 040BB3 28 E5       2579  			JR      Z,XEQ0          	; New program line
	sub	$c6                        ; 040BB5 || 	sub	$c6                        ; 040BAD || 040BB5 D6 C6       2580  			SUB     TCMD
	jp	c,$040c42                   ; 040BB7 || 	jp	c,$040c3a                   ; 040BAF || 040BB7 DA 42 0C 04 2581  			JP      C,LET0          	; Implied "LET"
	ld	bc,$000003                  ; 040BBB || 	ld	bc,$000003                  ; 040BB3 || 040BBB 01 03 00 00 2583  			LD	BC, 3
	ld	b,a                         ; 040BBF || 	ld	b,a                         ; 040BB7 || 040BBF 47          2584  			LD	B, A
	mlt	bc                         ; 040BC0 || 	mlt	bc                         ; 040BB8 || 040BC0 ED 4C       2585  			MLT	BC
	ld	hl,$040aa0                  ; 040BC2 || 	ld	hl,$040a98                  ; 040BBA || 040BC2 21 A0 0A 04 2586  			LD	HL,CMDTAB
	add	hl,bc                      ; 040BC6 || 	add	hl,bc                      ; 040BBE || 040BC6 09          2587  			ADD	HL, BC
	ld	hl,(hl)                     ; 040BC7 || 	ld	hl,(hl)                     ; 040BBF || 040BC7 ED 27       2588  			LD	HL, (HL)		; Table entry
	call	$040a78                   ; 040BC9 || 	call	$040a70                   ; 040BC1 || 040BC9 CD 78 0A 04 2600  			CALL    NXT
	jp	(hl)                        ; 040BCD || 	jp	(hl)                        ; 040BC5 || 040BCD E9          2601  			JP      (HL)            	; Execute the statement
	call	$043a04                   ; 040BCE || 	call	$0439ae                   ; 040BC6 || 040BCE CD 04 3A 04 2605  END_:			CALL    SETLIN          ;FIND CURRENT LINE
	ld	a,h                         ; 040BD2 || 	ld	a,h                         ; 040BCA || 040BD2 7C          2606  			LD      A,H
	or	l                           ; 040BD3 || 	or	l                           ; 040BCB || 040BD3 B5          2607  			OR      L               ;DIRECT?
	jp	z,$0430d6                   ; 040BD4 || 	jp	z,$043080                   ; 040BCC || 040BD4 CA D6 30 04 2608  			JP      Z,CLOOP
	ld	e,$00                       ; 040BD8 || 	ld	e,$00                       ; 040BD0 || 040BD8 1E 00       2609  			LD      E,0
	call	$044392                   ; 040BDA || 	call	$04432b                   ; 040BD2 || 040BDA CD 92 43 04 2610  			CALL    OSSHUT          ;CLOSE ALL FILES
	jp	$0430d5                     ; 040BDE || 	jp	$04307f                     ; 040BD6 || 040BDE C3 D5 30 04 2611  			JP      WARM            ;"Ready"
	ld	a,(iy)                      ; 040BE2 || 	ld	a,(iy)                      ; 040BDA || 040BE2 FD 7E 00    2613  NEWLIN:			LD      A,(IY+0)        ;A=LINE LENGTH
	ld	bc,$000003                  ; 040BE5 || 	ld	bc,$000003                  ; 040BDD || 040BE5 01 03 00 00 2614  			LD      BC,3
	add	iy,bc                      ; 040BE9 || 	add	iy,bc                      ; 040BE1 || 040BE9 FD 09       2615  			ADD     IY,BC
	or	a                           ; 040BEB || 	or	a                           ; 040BE3 || 040BEB B7          2616  			OR      A
	jr	z,$-$1e                     ; 040BEC || 	jr	z,$-$1e                     ; 040BE4 || 040BEC 28 E0       2617  			JR      Z,END_           ;LENGTH=0, EXIT
	ld	hl,($044d26)                ; 040BEE || 	ld	hl,($044d26)                ; 040BE6 || 040BEE 2A 26 4D 04 2618  			LD      HL,(TRACEN)
	ld	a,h                         ; 040BF2 || 	ld	a,h                         ; 040BEA || 040BF2 7C          2619  			LD      A,H
	or	l                           ; 040BF3 || 	or	l                           ; 040BEB || 040BF3 B5          2620  			OR      L
	ret	z                          ; 040BF4 || 	ret	z                          ; 040BEC || 040BF4 C8          2621  			RET     Z
	ld	de,$000000                  ; 040BF5 || 	ld	de,$000000                  ; 040BED || 040BF5 11 00 00 00 2622  			LD	DE, 0		;Clear DE
	ld	d,(iy-$01)                  ; 040BF9 || 	ld	d,(iy-$01)                  ; 040BF1 || 040BF9 FD 56 FF    2623  			LD      D,(IY-1)        ;DE = LINE NUMBER
	ld	e,(iy-$02)                  ; 040BFC || 	ld	e,(iy-$02)                  ; 040BF4 || 040BFC FD 5E FE    2624  			LD      E,(IY-2)
	sbc	hl,de                      ; 040BFF || 	sbc	hl,de                      ; 040BF7 || 040BFF ED 52       2625  			SBC     HL,DE
	ret	c                          ; 040C01 || 	ret	c                          ; 040BF9 || 040C01 D8          2626  			RET     C
	ex	de,hl                       ; 040C02 || 	ex	de,hl                       ; 040BFA || 040C02 EB          2627  			EX      DE,HL
	ld	a,$5b                       ; 040C03 || 	ld	a,$5b                       ; 040BFB || 040C03 3E 5B       2628  			LD      A,'['           ;TRACE
	call	$0439a5                   ; 040C05 || 	call	$04394f                   ; 040BFD || 040C05 CD A5 39 04 2629  			CALL    OUTCHR
	call	$043a4d                   ; 040C09 || 	call	$0439f7                   ; 040C01 || 040C09 CD 4D 3A 04 2630  			CALL    PBCDL
	ld	a,$5d                       ; 040C0D || 	ld	a,$5d                       ; 040C05 || 040C0D 3E 5D       2631  			LD      A,']'
	call	$0439a5                   ; 040C0F || 	call	$04394f                   ; 040C07 || 040C0F CD A5 39 04 2632  			CALL    OUTCHR
	ld	a,$20                       ; 040C13 || 	ld	a,$20                       ; 040C0B || 040C13 3E 20       2633  			LD      A,' '
	jp	$0439a5                     ; 040C15 || 	jp	$04394f                     ; 040C0D || 040C15 C3 A5 39 04 2634  			JP      OUTCHR
	call	$04031a                   ; 040C19 || 	call	$040315                   ; 040C11 || 040C19 CD 1A 03 04 2640  CLI:			CALL    EXPRS
	ld	a,$0d                       ; 040C1D || 	ld	a,$0d                       ; 040C15 || 040C1D 3E 0D       2641  			LD      A,CR
	ld	(de),a                      ; 040C1F || 	ld	(de),a                      ; 040C17 || 040C1F 12          2642  			LD      (DE),A
	ld	hl,$044a00                  ; 040C20 || 	ld	hl,$044a00                  ; 040C18 || 040C20 21 00 4A 04 2643  			LD      HL,ACCS
	call	$043fe6                   ; 040C24 || 	call	$043f90                   ; 040C1C || 040C24 CD E6 3F 04 2644  			CALL    OSCLI
	jp	$040b9e                     ; 040C28 || 	jp	$040b96                     ; 040C20 || 040C28 C3 9E 0B 04 2645  			JP      XEQ
	push	iy                        ; 040C2C || 	push	iy                        ; 040C24 || 040C2C FD E5       2649  EXT_EX:			PUSH    IY
	pop	hl                         ; 040C2E || 	pop	hl                         ; 040C26 || 040C2E E1          2650  			POP     HL
	call	$043fe6                   ; 040C2F || 	call	$043f90                   ; 040C27 || 040C2F CD E6 3F 04 2651  			CALL    OSCLI
	push	iy                        ; 040C33 || 	push	iy                        ; 040C2B || 040C33 FD E5       2652  REM_EX:			PUSH    IY
	pop	hl                         ; 040C35 || 	pop	hl                         ; 040C2D || 040C35 E1          2653  			POP     HL
	ld	a,$0d                       ; 040C36 || 	ld	a,$0d                       ; 040C2E || 040C36 3E 0D       2654  			LD      A,CR
	ld	b,a                         ; 040C38 || 	ld	b,a                         ; 040C30 || 040C38 47          2655  			LD      B,A
	cpir                           ; 040C39 || 	cpir                           ; 040C31 || 040C39 ED B1       2656  			CPIR                    ;FIND LINE END
	push	hl                        ; 040C3B || 	push	hl                        ; 040C33 || 040C3B E5          2657  			PUSH    HL
	pop	iy                         ; 040C3C || 	pop	iy                         ; 040C34 || 040C3C FD E1       2658  			POP     IY
	jp	$040b9a                     ; 040C3E || 	jp	$040b92                     ; 040C36 || 040C3E C3 9A 0B 04 2659  			JP      XEQ0
	cp	$c5                         ; 040C42 || 	cp	$c5                         ; 040C3A || 040C42 FE C5       2663  LET0:			CP      ELSE_-TCMD
	jr	z,$-$11                     ; 040C44 || 	jr	z,$-$11                     ; 040C3C || 040C44 28 ED       2664  			JR      Z,REM_EX
	cp	$64                         ; 040C46 || 	cp	$64                         ; 040C3E || 040C46 FE 64       2671  			CP      '*'-TCMD & 0FFH
	jr	z,$-$1c                     ; 040C48 || 	jr	z,$-$1c                     ; 040C40 || 040C48 28 E2       2672  			JR      Z,EXT_EX
	cp	$77                         ; 040C4A || 	cp	$77                         ; 040C42 || 040C4A FE 77       2673  			CP      '='-TCMD & 0FFH
	jr	z,$+$5d                     ; 040C4C || 	jr	z,$+$5d                     ; 040C44 || 040C4C 28 5B       2674  			JR      Z,FNEND
	cp	$95                         ; 040C4E || 	cp	$95                         ; 040C46 || 040C4E FE 95       2675  			CP      '['-TCMD & 0FFH
	jr	z,$+$27                     ; 040C50 || 	jr	z,$+$27                     ; 040C48 || 040C50 28 25       2676  			JR      Z,ASM
	dec	iy                         ; 040C52 || 	dec	iy                         ; 040C4A || 040C52 FD 2B       2677  			DEC     IY
	call	$0415f0                   ; 040C54 || 	call	$0415be                   ; 040C4C || 040C54 CD F0 15 04 2678  LET:			CALL    ASSIGN			; Assign the variable
	jp	z,$040b9e                   ; 040C58 || 	jp	z,$040b96                   ; 040C50 || 040C58 CA 9E 0B 04 2679  			JP      Z,XEQ			; Return if Z as it is a numeric variable that has been assigned in ASSIGN
	jr	c,$+$43                     ; 040C5C || 	jr	c,$+$43                     ; 040C54 || 040C5C 38 41       2680  			JR      C,SYNTAX        	; Return if C as it is an illegal variable
	push	af                        ; 040C5E || 	push	af                        ; 040C56 || 040C5E F5          2682  			PUSH    AF              	; At this point we're dealing with a string type (A=81h)
	call	$0417c2                   ; 040C5F || 	call	$041790                   ; 040C57 || 040C5F CD C2 17 04 2683  			CALL    EQUALS			; Check if the variable is followed by an '=' symbol; this will throw a 'Mistake' error if not
	push	hl                        ; 040C63 || 	push	hl                        ; 040C5B || 040C63 E5          2684  			PUSH    HL			; HL: Address of the variable
	call	$04031a                   ; 040C64 || 	call	$040315                   ; 040C5C || 040C64 CD 1A 03 04 2685  			CALL    EXPRS
	pop	ix                         ; 040C68 || 	pop	ix                         ; 040C60 || 040C68 DD E1       2686  			POP     IX			; IX: Address of the variable
	pop	af                         ; 040C6A || 	pop	af                         ; 040C62 || 040C6A F1          2687  			POP     AF			; AF: The variable type
	call	$041632                   ; 040C6B || 	call	$041600                   ; 040C63 || 040C6B CD 32 16 04 2688  			CALL    STACCS			; Copy the string from ACCS to the variable area
	jp	$040b9e                     ; 040C6F || 	jp	$040b96                     ; 040C67 || 040C6F C3 9E 0B 04 2689  XEQR:			JP      XEQ
	call	$040be2                   ; 040C73 || 	call	$040bda                   ; 040C6B || 040C73 CD E2 0B 04 2691  ASM0:			CALL    NEWLIN
	ld	($044d35),iy                ; 040C77 || 	ld	($044d35),iy                ; 040C6F || 040C77 FD 22 35 4D 2692  ASM:			LD      (ERRLIN),IY
	call	$043fc3                   ; 040C7C || 	call	$043f6d                   ; 040C74 || 040C7C CD C3 3F 04 2693  			CALL    TRAP
	call	$0418cd                   ; 040C80 || 	call	$04189b                   ; 040C78 || 040C80 CD CD 18 04 2694  			CALL    ASSEM
	jr	c,$+$1b                     ; 040C84 || 	jr	c,$+$1b                     ; 040C7C || 040C84 38 19       2695  			JR      C,SYNTAX
	cp	$0d                         ; 040C86 || 	cp	$0d                         ; 040C7E || 040C86 FE 0D       2696  			CP      CR
	jr	z,$-$15                     ; 040C88 || 	jr	z,$-$15                     ; 040C80 || 040C88 28 E9       2697  			JR      Z,ASM0
	ld	hl,$044d40                  ; 040C8A || 	ld	hl,$044d40                  ; 040C82 || 040C8A 21 40 4D 04 2698  			LD      HL,LISTON
	ld	a,(hl)                      ; 040C8E || 	ld	a,(hl)                      ; 040C86 || 040C8E 7E          2699  			LD      A,(HL)
	and	$0f                        ; 040C8F || 	and	$0f                        ; 040C87 || 040C8F E6 0F       2700  			AND     0FH
	or	$b0                         ; 040C91 || 	or	$b0                         ; 040C89 || 040C91 F6 B0       2701  			OR      B0H
	ld	(hl),a                      ; 040C93 || 	ld	(hl),a                      ; 040C8B || 040C93 77          2702  			LD      (HL),A
	jr	$-$25                       ; 040C94 || 	jr	$-$25                       ; 040C8C || 040C94 18 D9       2703  			JR      XEQR
	call	$043a90                   ; 040C96 || 	call	$043a3a                   ; 040C8E || 040C96 CD 90 3A 04 2705  VAR_:			CALL    GETVAR
	ret	z                          ; 040C9A || 	ret	z                          ; 040C92 || 040C9A C8          2706  			RET     Z
	jp	nc,$043a7f                  ; 040C9B || 	jp	nc,$043a29                  ; 040C93 || 040C9B D2 7F 3A 04 2707  			JP      NC,PUTVAR
	ld	a,$10                       ; 040C9F || 	ld	a,$10                       ; 040C97 || 040C9F 3E 10       2708  SYNTAX:			LD      A,16            ;"Syntax error"
	jr	$+$04                       ; 040CA1 || 	jr	$+$04                       ; 040C99 || 040CA1 18 02       2709  			JR	ERROR0_EX
	ld	a,$11                       ; 040CA3 || 	ld	a,$11                       ; 040C9B || 040CA3 3E 11       2710  ESCAPE:			LD      A,17            ;"Escape"
	jp	$0437b6                     ; 040CA5 || 	jp	$043760                     ; 040C9D || 040CA5 C3 B6 37 04 2711  ERROR0_EX:			JP      ERROR_
	call	$0401c7                   ; 040CA9 || 	call	$0401c7                   ; 040CA1 || 040CA9 CD C7 01 04 2715  FNEND:			CALL    EXPR            ;FUNCTION RESULT
	ld	b,e                         ; 040CAD || 	ld	b,e                         ; 040CA5 || 040CAD 43          2716  			LD      B,E
	ex	de,hl                       ; 040CAE || 	ex	de,hl                       ; 040CA6 || 040CAE EB          2717  			EX      DE,HL
	exx                            ; 040CAF || 	exx                            ; 040CA7 || 040CAF D9          2718  			EXX                     ;SAVE RESULT
	ex	de,hl                       ; 040CB0 || 	ex	de,hl                       ; 040CA8 || 040CB0 EB          2719  			EX      DE,HL           ; IN DEB'C'D'E'
	pop	bc                         ; 040CB1 || 	pop	bc                         ; 040CA9 || 040CB1 C1          2720  FNEND5:			POP     BC
	ld	hl,$04178a                  ; 040CB2 || 	ld	hl,$041758                  ; 040CAA || 040CB2 21 8A 17 04 2721  			LD      HL,LOCCHK
	or	a                           ; 040CB6 || 	or	a                           ; 040CAE || 040CB6 B7          2722  			OR      A
	sbc	hl,bc                      ; 040CB7 || 	sbc	hl,bc                      ; 040CAF || 040CB7 ED 42       2723  			SBC     HL,BC
	jr	z,$+$1e                     ; 040CB9 || 	jr	z,$+$1e                     ; 040CB1 || 040CB9 28 1C       2724  			JR      Z,FNEND0        ;LOCAL VARIABLE
	ld	hl,$04108c                  ; 040CBB || 	ld	hl,$041084                  ; 040CB3 || 040CBB 21 8C 10 04 2725  			LD      HL,FNCHK
	or	a                           ; 040CBF || 	or	a                           ; 040CB7 || 040CBF B7          2726  			OR      A
	sbc	hl,bc                      ; 040CC0 || 	sbc	hl,bc                      ; 040CB8 || 040CC0 ED 42       2727  			SBC     HL,BC
	ld	a,$07                       ; 040CC2 || 	ld	a,$07                       ; 040CBA || 040CC2 3E 07       2728  			LD      A,7
	jr	nz,$-$1f                    ; 040CC4 || 	jr	nz,$-$1f                    ; 040CBC || 040CC4 20 DF       2729  			JR      NZ,ERROR0_EX       ;"No FN"
	pop	iy                         ; 040CC6 || 	pop	iy                         ; 040CBE || 040CC6 FD E1       2730  			POP     IY
	ld	($044d35),iy                ; 040CC8 || 	ld	($044d35),iy                ; 040CC0 || 040CC8 FD 22 35 4D 2731  			LD      (ERRLIN),IY     ;IN CASE OF ERROR
	ex	de,hl                       ; 040CCD || 	ex	de,hl                       ; 040CC5 || 040CCD EB          2732  			EX      DE,HL
	exx                            ; 040CCE || 	exx                            ; 040CC6 || 040CCE D9          2733  			EXX
	ex	de,hl                       ; 040CCF || 	ex	de,hl                       ; 040CC7 || 040CCF EB          2734  			EX      DE,HL
	ld	de,$044a00                  ; 040CD0 || 	ld	de,$044a00                  ; 040CC8 || 040CD0 11 00 4A 04 2735  			LD      DE,ACCS
	ld	e,b                         ; 040CD4 || 	ld	e,b                         ; 040CCC || 040CD4 58          2736  			LD      E,B
	ex	af,af'                      ; 040CD5 || 	ex	af,af'                      ; 040CCD || 040CD5 08          2737  			EX      AF,AF'
	ret                            ; 040CD6 || 	ret                            ; 040CCE || 040CD6 C9          2738  			RET
	pop	ix                         ; 040CD7 || 	pop	ix                         ; 040CCF || 040CD7 DD E1       2740  FNEND0:			POP     IX
	pop	bc                         ; 040CD9 || 	pop	bc                         ; 040CD1 || 040CD9 C1          2741  			POP     BC
	ld	a,b                         ; 040CDA || 	ld	a,b                         ; 040CD2 || 040CDA 78          2742  			LD      A,B
	or	a                           ; 040CDB || 	or	a                           ; 040CD3 || 040CDB B7          2743  			OR      A
	jp	m,$040cea                   ; 040CDC || 	jp	m,$040ce2                   ; 040CD4 || 040CDC FA EA 0C 04 2744  			JP      M,FNEND1        ;STRING
	pop	hl                         ; 040CE0 || 	pop	hl                         ; 040CD8 || 040CE0 E1          2745  			POP     HL
	exx                            ; 040CE1 || 	exx                            ; 040CD9 || 040CE1 D9          2746  			EXX
	pop	hl                         ; 040CE2 || 	pop	hl                         ; 040CDA || 040CE2 E1          2747  			POP     HL
	exx                            ; 040CE3 || 	exx                            ; 040CDB || 040CE3 D9          2748  			EXX
	call	$041608                   ; 040CE4 || 	call	$0415d6                   ; 040CDC || 040CE4 CD 08 16 04 2749  			CALL    STORE
	jr	$-$37                       ; 040CE8 || 	jr	$-$37                       ; 040CE0 || 040CE8 18 C7       2750  			JR      FNEND5
	ld	hl,$000000                  ; 040CEA || 	ld	hl,$000000                  ; 040CE2 || 040CEA 21 00 00 00 2751  FNEND1:			LD      HL,0
	add	hl,sp                      ; 040CEE || 	add	hl,sp                      ; 040CE6 || 040CEE 39          2752  			ADD     HL,SP
	push	de                        ; 040CEF || 	push	de                        ; 040CE7 || 040CEF D5          2753  			PUSH    DE
	ld	e,c                         ; 040CF0 || 	ld	e,c                         ; 040CE8 || 040CF0 59          2754  			LD      E,C
	call	$041636                   ; 040CF1 || 	call	$041604                   ; 040CE9 || 040CF1 CD 36 16 04 2755  			CALL    STORES
	pop	de                         ; 040CF5 || 	pop	de                         ; 040CED || 040CF5 D1          2756  			POP     DE
	ld	sp,hl                       ; 040CF6 || 	ld	sp,hl                       ; 040CEE || 040CF6 F9          2757  			LD      SP,HL
	jr	$-$46                       ; 040CF7 || 	jr	$-$46                       ; 040CEF || 040CF7 18 B8       2758  			JR      FNEND5
	call	$043a90                   ; 040CF9 || 	call	$043a3a                   ; 040CF1 || 040CF9 CD 90 3A 04 2763  DIM_EX:			CALL    GETVAR          	; Get the variable
	jp	c,$040d89                   ; 040CFD || 	jp	c,$040d81                   ; 040CF5 || 040CFD DA 89 0D 04 2764  			JP      C,BADDIM		; Throw a "Bad Dim" error
	jp	z,$040d93                   ; 040D01 || 	jp	z,$040d8b                   ; 040CF9 || 040D01 CA 93 0D 04 2765  			JP      Z,DIM4			; If Z then the command is DIM var% expr, so don't need to create an entity
	call	$043c04                   ; 040D05 || 	call	$043bae                   ; 040CFD || 040D05 CD 04 3C 04 2766  			CALL    CREATE			; Create a new entity
	push	hl                        ; 040D09 || 	push	hl                        ; 040D01 || 040D09 E5          2767  			PUSH    HL			; HL: Address of the entity
	pop	ix                         ; 040D0A || 	pop	ix                         ; 040D02 || 040D0A DD E1       2768  			POP     IX			; IX: Address of the entity
	ld	a,(iy)                      ; 040D0C || 	ld	a,(iy)                      ; 040D04 || 040D0C FD 7E 00    2769  			LD      A,(IY)			; Fetch the next character from the tokenised string
	cp	$28                         ; 040D0F || 	cp	$28                         ; 040D07 || 040D0F FE 28       2770  			CP      '('			; Check for opening brackets
	ld	a,d                         ; 040D11 || 	ld	a,d                         ; 040D09 || 040D11 7A          2771  			LD      A,D			;  A: The dimension variable type (04h = Integer, 05h = Float, 81h = String)
	jr	nz,$+$81                    ; 040D12 || 	jr	nz,$+$81                    ; 040D0A || 040D12 20 7F       2772  			JR      NZ,DIM4			; It is not a bracket; the command is DIM var expr
	push	hl                        ; 040D14 || 	push	hl                        ; 040D0C || 040D14 E5          2776  			PUSH    HL			; HL: Address of the entity
	push	af                        ; 040D15 || 	push	af                        ; 040D0D || 040D15 F5          2777  			PUSH    AF           	   	;  A: Entity type (04h = Integer, 05h = Float, 81h = String)
	ld	de,$000001                  ; 040D16 || 	ld	de,$000001                  ; 040D0E || 040D16 11 01 00 00 2778  			LD      DE,1			; DE: Total size of array accumulator (important for multi-dimensioned arrays)
	ld	b,d                         ; 040D1A || 	ld	b,d                         ; 040D12 || 040D1A 42          2779  			LD      B,D			;  B: The number of dimensions in the array
	inc	iy                         ; 040D1B || 	inc	iy                         ; 040D13 || 040D1B FD 23       2781  DIM1:			INC     IY			; Skip to the next token
	push	bc                        ; 040D1D || 	push	bc                        ; 040D15 || 040D1D C5          2782  			PUSH    BC			; Stack the dimension counter
	push	de                        ; 040D1E || 	push	de                        ; 040D16 || 040D1E D5          2783  			PUSH    DE			; Stack the total size of array accumulator
	push	ix                        ; 040D1F || 	push	ix                        ; 040D17 || 040D1F DD E5       2784  			PUSH    IX			; Stack the entity address
	call	$04030f                   ; 040D21 || 	call	$04030a                   ; 040D19 || 040D21 CD 0F 03 04 2785  			CALL    EXPRI           	; Fetch the size of this dimension
	bit	7,h                        ; 040D25 || 	bit	7,h                        ; 040D1D || 040D25 CB 7C       2786  			BIT     7,H			; If it is negative then
	jr	nz,$+$62                    ; 040D27 || 	jr	nz,$+$62                    ; 040D1F || 040D27 20 60       2787  			JR      NZ,BADDIM		; Throw a "Bad Dim" error
	exx                            ; 040D29 || 	exx                            ; 040D21 || 040D29 D9          2788  			EXX
	inc	hl                         ; 040D2A || 	inc	hl                         ; 040D22 || 040D2A 23          2789  			INC     HL			; HL: Size of this dimension; increment (BBC BASIC DIMs are always one bigger)
	pop	ix                         ; 040D2B || 	pop	ix                         ; 040D23 || 040D2B DD E1       2790  			POP     IX			; IX: The entity address
	inc	ix                         ; 040D2D || 	inc	ix                         ; 040D25 || 040D2D DD 23       2791  			INC     IX
	ld	(ix),l                      ; 040D2F || 	ld	(ix),l                      ; 040D27 || 040D2F DD 75 00    2792  			LD      (IX),L          	; Save the size of this dimension in the entity
	inc	ix                         ; 040D32 || 	inc	ix                         ; 040D2A || 040D32 DD 23       2793  			INC     IX
	ld	(ix),h                      ; 040D34 || 	ld	(ix),h                      ; 040D2C || 040D34 DD 74 00    2794  			LD      (IX),H
	pop	bc                         ; 040D37 || 	pop	bc                         ; 040D2F || 040D37 C1          2795  			POP     BC
	call	$0418a4                   ; 040D38 || 	call	$041872                   ; 040D30 || 040D38 CD A4 18 04 2796  			CALL    MUL16           	; HL = HL * BC (Number of Dimensions * Total size of array accumulator)
	jr	c,$+$51                     ; 040D3C || 	jr	c,$+$51                     ; 040D34 || 040D3C 38 4F       2797  			JR      C,NOROOM        	; Throw a "No Room" error if overflow
	ex	de,hl                       ; 040D3E || 	ex	de,hl                       ; 040D36 || 040D3E EB          2798  			EX      DE,HL           	; DE: The new total size of array accumulator
	pop	bc                         ; 040D3F || 	pop	bc                         ; 040D37 || 040D3F C1          2799  			POP     BC
	inc	b                          ; 040D40 || 	inc	b                          ; 040D38 || 040D40 04          2800  			INC     B               	;  B: The dimension counter; increment
	ld	a,(iy)                      ; 040D41 || 	ld	a,(iy)                      ; 040D39 || 040D41 FD 7E 00    2801  			LD      A,(IY)			; Fetch the nex token
	cp	$2c                         ; 040D44 || 	cp	$2c                         ; 040D3C || 040D44 FE 2C       2802  			CP      ','             	; Check for another dimension in the array
	jr	z,$-$2b                     ; 040D46 || 	jr	z,$-$2b                     ; 040D3E || 040D46 28 D3       2803  			JR      Z,DIM1			; And loop
	call	$040a37                   ; 040D48 || 	call	$040a2f                   ; 040D40 || 040D48 CD 37 0A 04 2805  			CALL    BRAKET          	; Check for closing bracket
	pop	af                         ; 040D4C || 	pop	af                         ; 040D44 || 040D4C F1          2806  			POP     AF              	; Restore the type
	inc	ix                         ; 040D4D || 	inc	ix                         ; 040D45 || 040D4D DD 23       2807  			INC     IX
	ex	(sp),ix                     ; 040D4F || 	ex	(sp),ix                     ; 040D47 || 040D4F DD E3       2808  			EX      (SP),IX
	ld	(ix),b                      ; 040D51 || 	ld	(ix),b                      ; 040D49 || 040D51 DD 70 00    2809  			LD      (IX),B          	; Number of dimensions
	call	$041897                   ; 040D54 || 	call	$041865                   ; 040D4C || 040D54 CD 97 18 04 2810  			CALL    X4OR5           	; Dimension Accumulator Value * 4 or * 5 depending on type
	pop	hl                         ; 040D58 || 	pop	hl                         ; 040D50 || 040D58 E1          2811  			POP     HL			; Restore the entity address
	jr	c,$+$34                     ; 040D59 || 	jr	c,$+$34                     ; 040D51 || 040D59 38 32       2812  			JR      C,NOROOM		; Throw a "No Room" error if there is an overflow
	add	hl,de                      ; 040D5B || 	add	hl,de                      ; 040D53 || 040D5B 19          2816  DIM3:			ADD     HL,DE
	jr	c,$+$31                     ; 040D5C || 	jr	c,$+$31                     ; 040D54 || 040D5C 38 2F       2817  			JR      C,NOROOM
	push	hl                        ; 040D5E || 	push	hl                        ; 040D56 || 040D5E E5          2818  			PUSH    HL
	inc	h                          ; 040D5F || 	inc	h                          ; 040D57 || 040D5F 24          2819  			INC     H
	jr	z,$+$2d                     ; 040D60 || 	jr	z,$+$2d                     ; 040D58 || 040D60 28 2B       2820  			JR      Z,NOROOM
	sbc	hl,sp                      ; 040D62 || 	sbc	hl,sp                      ; 040D5A || 040D62 ED 72       2821  			SBC     HL,SP
	jr	nc,$+$29                    ; 040D64 || 	jr	nc,$+$29                    ; 040D5C || 040D64 30 27       2822  			JR      NC,NOROOM       	; Throw an "Out of Space" error
	pop	hl                         ; 040D66 || 	pop	hl                         ; 040D5E || 040D66 E1          2823  			POP     HL
	ld	($044d1d),hl                ; 040D67 || 	ld	($044d1d),hl                ; 040D5F || 040D67 22 1D 4D 04 2824  			LD      (FREE),HL
	ld	a,d                         ; 040D6B || 	ld	a,d                         ; 040D63 || 040D6B 7A          2825  DIM2:			LD      A,D
	or	e                           ; 040D6C || 	or	e                           ; 040D64 || 040D6C B3          2826  			OR      E
	jr	z,$+$08                     ; 040D6D || 	jr	z,$+$08                     ; 040D65 || 040D6D 28 06       2827  			JR      Z,DIM5
	dec	hl                         ; 040D6F || 	dec	hl                         ; 040D67 || 040D6F 2B          2828  			DEC     HL
	ld	(hl),$00                    ; 040D70 || 	ld	(hl),$00                    ; 040D68 || 040D70 36 00       2829  			LD      (HL),0         		; Initialise the array
	dec	de                         ; 040D72 || 	dec	de                         ; 040D6A || 040D72 1B          2830  			DEC     DE
	jr	$-$08                       ; 040D73 || 	jr	$-$08                       ; 040D6B || 040D73 18 F6       2831  			JR      DIM2
	call	$040a78                   ; 040D75 || 	call	$040a70                   ; 040D6D || 040D75 CD 78 0A 04 2832  DIM5:			CALL    NXT
	cp	$2c                         ; 040D79 || 	cp	$2c                         ; 040D71 || 040D79 FE 2C       2833  			CP      ','            		; Another variable?
	jp	nz,$040b9e                  ; 040D7B || 	jp	nz,$040b96                  ; 040D73 || 040D7B C2 9E 0B 04 2834  			JP      NZ,XEQ
	inc	iy                         ; 040D7F || 	inc	iy                         ; 040D77 || 040D7F FD 23       2835  			INC     IY
	call	$040a78                   ; 040D81 || 	call	$040a70                   ; 040D79 || 040D81 CD 78 0A 04 2836  			CALL    NXT
	jp	$040cf9                     ; 040D85 || 	jp	$040cf1                     ; 040D7D || 040D85 C3 F9 0C 04 2837  			JP      DIM_EX
	ld	a,$0a                       ; 040D89 || 	ld	a,$0a                       ; 040D81 || 040D89 3E 0A       2841  BADDIM:			LD      A,10            	; Throw a "Bad DIM" error
	jr	$+$04                       ; 040D8B || 	jr	$+$04                       ; 040D83 || 040D8B 18 02       2842  			JR	ERROR1_EX
	ld	a,$0b                       ; 040D8D || 	ld	a,$0b                       ; 040D85 || 040D8D 3E 0B       2843  NOROOM:			LD      A,11            	; Throw a "DIM space" error
	jp	$0437b6                     ; 040D8F || 	jp	$043760                     ; 040D87 || 040D8F C3 B6 37 04 2844  ERROR1_EX:			JP      ERROR_
	or	a                           ; 040D93 || 	or	a                           ; 040D8B || 040D93 B7          2849  DIM4:			OR      A			;  A: The dimension variable type
	jr	z,$-$0b                     ; 040D94 || 	jr	z,$-$0b                     ; 040D8C || 040D94 28 F3       2850  			JR      Z,BADDIM		; Throw "Bad Dim" if variable is an 8-bit indirection
	jp	m,$040d89                   ; 040D96 || 	jp	m,$040d81                   ; 040D8E || 040D96 FA 89 0D 04 2851  			JP      M,BADDIM        	; or a string
	ld	b,a                         ; 040D9A || 	ld	b,a                         ; 040D92 || 040D9A 47          2852  			LD      B,A			; Temporarily store the dimension variable type in B
	ld	a,(iy-$01)                  ; 040D9B || 	ld	a,(iy-$01)                  ; 040D93 || 040D9B FD 7E FF    2853  			LD      A,(IY-1)		; Get the last character but one
	cp	$29                         ; 040D9E || 	cp	$29                         ; 040D96 || 040D9E FE 29       2854  			CP      ')'			; Check if it is a trailing bracket
	jr	z,$-$17                     ; 040DA0 || 	jr	z,$-$17                     ; 040D98 || 040DA0 28 E7       2855  			JR      Z,BADDIM		; And throw a "Bad Dim" error if there is a trailing bracket
	ld	hl,$000000                  ; 040DA2 || 	ld	hl,$000000                  ; 040D9A || 040DA2 21 00 00 00 2857  			LD	HL,0			; Clear HL
	ld	a,($044d1d)                 ; 040DA6 || 	ld	a,($044d1d)                 ; 040D9E || 040DA6 3A 1D 4D 04 2858  			LD	A,(FREE+0)		; HL: Lower 16 bits of FREE
	ld	l,a                         ; 040DAA || 	ld	l,a                         ; 040DA2 || 040DAA 6F          2859  			LD	L,A
	ld	a,($044d1e)                 ; 040DAB || 	ld	a,($044d1e)                 ; 040DA3 || 040DAB 3A 1E 4D 04 2860  			LD	A,(FREE+1)
	ld	h,a                         ; 040DAF || 	ld	h,a                         ; 040DA7 || 040DAF 67          2861  			LD	H,A
	ld	a,b                         ; 040DB0 || 	ld	a,b                         ; 040DA8 || 040DB0 78          2862  			LD	A,B			; Restore the dimension variable type
	exx                            ; 040DB1 || 	exx                            ; 040DA9 || 040DB1 D9          2863  			EXX
	ld	hl,$000000                  ; 040DB2 || 	ld	hl,$000000                  ; 040DAA || 040DB2 21 00 00 00 2864  			LD	HL,0			; Clear HL
	ld	b,a                         ; 040DB6 || 	ld	b,a                         ; 040DAE || 040DB6 47          2865  			LD	B,A			; Temporarily store the dimension variable type in B
	ld	a,($044d1f)                 ; 040DB7 || 	ld	a,($044d1f)                 ; 040DAF || 040DB7 3A 1F 4D 04 2866  			LD	A,(FREE+2)		; HL: Upper 8 bits of FREE (bits 16-23)
	ld	l,a                         ; 040DBB || 	ld	l,a                         ; 040DB3 || 040DBB 6F          2867  			LD	L,A
	ld	a,b                         ; 040DBC || 	ld	a,b                         ; 040DB4 || 040DBC 78          2868  			LD	A,B			; Restore the dimension variable type
	ld	c,h                         ; 040DBD || 	ld	c,h                         ; 040DB5 || 040DBD 4C          2869  			LD	C,H
	call	$041608                   ; 040DBE || 	call	$0415d6                   ; 040DB6 || 040DBE CD 08 16 04 2870  			CALL    STORE           	; Store the address
	call	$04030f                   ; 040DC2 || 	call	$04030a                   ; 040DBA || 040DC2 CD 0F 03 04 2871  			CALL    EXPRI			; Get the number of bytes to store
	exx                            ; 040DC6 || 	exx                            ; 040DBE || 040DC6 D9          2872  			EXX
	inc	hl                         ; 040DC7 || 	inc	hl                         ; 040DBF || 040DC7 23          2873  			INC     HL			; Add one to it
	ex	de,hl                       ; 040DC8 || 	ex	de,hl                       ; 040DC0 || 040DC8 EB          2874  			EX      DE,HL
	ld	hl,($044d1d)                ; 040DC9 || 	ld	hl,($044d1d)                ; 040DC1 || 040DC9 2A 1D 4D 04 2875  			LD      HL,(FREE)
	jr	$-$72                       ; 040DCD || 	jr	$-$72                       ; 040DC5 || 040DCD 18 8C       2876  			JR      DIM3			; Continue with the DIM
	cp	$23                         ; 040DCF || 	cp	$23                         ; 040DC7 || 040DCF FE 23       2881  PRINT_:			CP      '#'
	jr	nz,$+$7e                    ; 040DD1 || 	jr	nz,$+$7e                    ; 040DC9 || 040DD1 20 7C       2882  			JR      NZ,PRINT0
	call	$0418c4                   ; 040DD3 || 	call	$041892                   ; 040DCB || 040DD3 CD C4 18 04 2883  			CALL    CHNL            ;CHANNEL NO. = E
	call	$040a78                   ; 040DD7 || 	call	$040a70                   ; 040DCF || 040DD7 CD 78 0A 04 2884  PRNTN1:			CALL    NXT
	cp	$2c                         ; 040DDB || 	cp	$2c                         ; 040DD3 || 040DDB FE 2C       2885  			CP      ','
	jp	nz,$040b9e                  ; 040DDD || 	jp	nz,$040b96                  ; 040DD5 || 040DDD C2 9E 0B 04 2886  			JP      NZ,XEQ
	inc	iy                         ; 040DE1 || 	inc	iy                         ; 040DD9 || 040DE1 FD 23       2887  			INC     IY
	push	de                        ; 040DE3 || 	push	de                        ; 040DDB || 040DE3 D5          2888  			PUSH    DE
	call	$0401c7                   ; 040DE4 || 	call	$0401c7                   ; 040DDC || 040DE4 CD C7 01 04 2889  			CALL    EXPR            ;ITEM TO PRINT
	ex	af,af'                      ; 040DE8 || 	ex	af,af'                      ; 040DE0 || 040DE8 08          2890  			EX      AF,AF'
	jp	m,$040e0f                   ; 040DE9 || 	jp	m,$040e07                   ; 040DE1 || 040DE9 FA 0F 0E 04 2891  			JP      M,PRNTN2        ;STRING
	pop	de                         ; 040DED || 	pop	de                         ; 040DE5 || 040DED D1          2892  			POP     DE
	push	bc                        ; 040DEE || 	push	bc                        ; 040DE6 || 040DEE C5          2893  			PUSH    BC
	exx                            ; 040DEF || 	exx                            ; 040DE7 || 040DEF D9          2894  			EXX
	ld	a,l                         ; 040DF0 || 	ld	a,l                         ; 040DE8 || 040DF0 7D          2895  			LD      A,L
	exx                            ; 040DF1 || 	exx                            ; 040DE9 || 040DF1 D9          2896  			EXX
	call	$0443a2                   ; 040DF2 || 	call	$04433b                   ; 040DEA || 040DF2 CD A2 43 04 2897  			CALL    OSBPUT
	exx                            ; 040DF6 || 	exx                            ; 040DEE || 040DF6 D9          2898  			EXX
	ld	a,h                         ; 040DF7 || 	ld	a,h                         ; 040DEF || 040DF7 7C          2899  			LD      A,H
	exx                            ; 040DF8 || 	exx                            ; 040DF0 || 040DF8 D9          2900  			EXX
	call	$0443a2                   ; 040DF9 || 	call	$04433b                   ; 040DF1 || 040DF9 CD A2 43 04 2901  			CALL    OSBPUT
	ld	a,l                         ; 040DFD || 	ld	a,l                         ; 040DF5 || 040DFD 7D          2902  			LD      A,L
	call	$0443a2                   ; 040DFE || 	call	$04433b                   ; 040DF6 || 040DFE CD A2 43 04 2903  			CALL    OSBPUT
	ld	a,h                         ; 040E02 || 	ld	a,h                         ; 040DFA || 040E02 7C          2904  			LD      A,H
	call	$0443a2                   ; 040E03 || 	call	$04433b                   ; 040DFB || 040E03 CD A2 43 04 2905  			CALL    OSBPUT
	pop	bc                         ; 040E07 || 	pop	bc                         ; 040DFF || 040E07 C1          2906  			POP     BC
	ld	a,c                         ; 040E08 || 	ld	a,c                         ; 040E00 || 040E08 79          2907  			LD      A,C
	call	$0443a2                   ; 040E09 || 	call	$04433b                   ; 040E01 || 040E09 CD A2 43 04 2908  			CALL    OSBPUT
	jr	$-$36                       ; 040E0D || 	jr	$-$36                       ; 040E05 || 040E0D 18 C8       2909  			JR      PRNTN1
	ld	c,e                         ; 040E0F || 	ld	c,e                         ; 040E07 || 040E0F 4B          2910  PRNTN2:			LD      C,E
	pop	de                         ; 040E10 || 	pop	de                         ; 040E08 || 040E10 D1          2911  			POP     DE
	ld	hl,$044a00                  ; 040E11 || 	ld	hl,$044a00                  ; 040E09 || 040E11 21 00 4A 04 2912  			LD      HL,ACCS
	inc	c                          ; 040E15 || 	inc	c                          ; 040E0D || 040E15 0C          2913  			INC     C
	dec	c                          ; 040E16 || 	dec	c                          ; 040E0E || 040E16 0D          2914  PRNTN3:			DEC     C
	jr	z,$+$0c                     ; 040E17 || 	jr	z,$+$0c                     ; 040E0F || 040E17 28 0A       2915  			JR      Z,PRNTN4
	ld	a,(hl)                      ; 040E19 || 	ld	a,(hl)                      ; 040E11 || 040E19 7E          2916  			LD      A,(HL)
	inc	hl                         ; 040E1A || 	inc	hl                         ; 040E12 || 040E1A 23          2917  			INC     HL
	push	bc                        ; 040E1B || 	push	bc                        ; 040E13 || 040E1B C5          2918  			PUSH    BC
	call	$0443a2                   ; 040E1C || 	call	$04433b                   ; 040E14 || 040E1C CD A2 43 04 2919  			CALL    OSBPUT
	pop	bc                         ; 040E20 || 	pop	bc                         ; 040E18 || 040E20 C1          2920  			POP     BC
	jr	$-$0b                       ; 040E21 || 	jr	$-$0b                       ; 040E19 || 040E21 18 F3       2921  			JR      PRNTN3
	ld	a,$0d                       ; 040E23 || 	ld	a,$0d                       ; 040E1B || 040E23 3E 0D       2922  PRNTN4:			LD      A,CR
	call	$0443a2                   ; 040E25 || 	call	$04433b                   ; 040E1D || 040E25 CD A2 43 04 2923  			CALL    OSBPUT
	jr	$-$52                       ; 040E29 || 	jr	$-$52                       ; 040E21 || 040E29 18 AC       2924  			JR      PRNTN1
	ld	b,$02                       ; 040E2B || 	ld	b,$02                       ; 040E23 || 040E2B 06 02       2926  PRINT6:			LD      B,2
	jr	$+$29                       ; 040E2D || 	jr	$+$29                       ; 040E25 || 040E2D 18 27       2927  			JR      PRINTC
	ld	bc,$000100                  ; 040E2F || 	ld	bc,$000100                  ; 040E27 || 040E2F 01 00 01 00 2928  PRINT8:			LD      BC,100H
	jr	$+$23                       ; 040E33 || 	jr	$+$23                       ; 040E2B || 040E33 18 21       2929  			JR      PRINTC
	ld	hl,$044c00                  ; 040E35 || 	ld	hl,$044c00                  ; 040E2D || 040E35 21 00 4C 04 2930  PRINT9:			LD      HL,STAVAR
	xor	a                          ; 040E39 || 	xor	a                          ; 040E31 || 040E39 AF          2931  			XOR     A
	cp	(hl)                        ; 040E3A || 	cp	(hl)                        ; 040E32 || 040E3A BE          2932  			CP      (HL)
	jr	z,$+$14                     ; 040E3B || 	jr	z,$+$14                     ; 040E33 || 040E3B 28 12       2933  			JR      Z,PRINT0
	ld	a,($044d3d)                 ; 040E3D || 	ld	a,($044d3d)                 ; 040E35 || 040E3D 3A 3D 4D 04 2934  			LD      A,(COUNT)
	or	a                           ; 040E41 || 	or	a                           ; 040E39 || 040E41 B7          2935  			OR      A
	jr	z,$+$0d                     ; 040E42 || 	jr	z,$+$0d                     ; 040E3A || 040E42 28 0B       2936  			JR      Z,PRINT0
	sub	(hl)                       ; 040E44 || 	sub	(hl)                       ; 040E3C || 040E44 96          2937  PRINTA:			SUB     (HL)
	jr	z,$+$0a                     ; 040E45 || 	jr	z,$+$0a                     ; 040E3D || 040E45 28 08       2938  			JR      Z,PRINT0
	jr	nc,$-$03                    ; 040E47 || 	jr	nc,$-$03                    ; 040E3F || 040E47 30 FB       2939  			JR      NC,PRINTA
	neg                            ; 040E49 || 	neg                            ; 040E41 || 040E49 ED 44       2940  			NEG
	call	$041821                   ; 040E4B || 	call	$0417ef                   ; 040E43 || 040E4B CD 21 18 04 2941  			CALL    FILL
	ld	a,($044c00)                 ; 040E4F || 	ld	a,($044c00)                 ; 040E47 || 040E4F 3A 00 4C 04 2942  PRINT0:			LD      A,(STAVAR)
	ld	c,a                         ; 040E53 || 	ld	c,a                         ; 040E4B || 040E53 4F          2943  			LD      C,A             ;PRINTS
	ld	b,$00                       ; 040E54 || 	ld	b,$00                       ; 040E4C || 040E54 06 00       2944  			LD      B,0             ;PRINTF
	call	$0417ac                   ; 040E56 || 	call	$04177a                   ; 040E4E || 040E56 CD AC 17 04 2945  PRINTC:			CALL    TERMQ
	jr	z,$+$41                     ; 040E5A || 	jr	z,$+$41                     ; 040E52 || 040E5A 28 3F       2946  			JR      Z,PRINT4
	res	0,b                        ; 040E5C || 	res	0,b                        ; 040E54 || 040E5C CB 80       2947  			RES     0,B
	inc	iy                         ; 040E5E || 	inc	iy                         ; 040E56 || 040E5E FD 23       2948  			INC     IY
	cp	$7e                         ; 040E60 || 	cp	$7e                         ; 040E58 || 040E60 FE 7E       2949  			CP      '~'
	jr	z,$-$37                     ; 040E62 || 	jr	z,$-$37                     ; 040E5A || 040E62 28 C7       2950  			JR      Z,PRINT6
	cp	$3b                         ; 040E64 || 	cp	$3b                         ; 040E5C || 040E64 FE 3B       2951  			CP      ';'
	jr	z,$-$37                     ; 040E66 || 	jr	z,$-$37                     ; 040E5E || 040E66 28 C7       2952  			JR      Z,PRINT8
	cp	$2c                         ; 040E68 || 	cp	$2c                         ; 040E60 || 040E68 FE 2C       2953  			CP      ','
	jr	z,$-$35                     ; 040E6A || 	jr	z,$-$35                     ; 040E62 || 040E6A 28 C9       2954  			JR      Z,PRINT9
	call	$0417d1                   ; 040E6C || 	call	$04179f                   ; 040E64 || 040E6C CD D1 17 04 2955  			CALL    FORMAT          ;SPC, TAB, '
	jr	z,$-$1a                     ; 040E70 || 	jr	z,$-$1a                     ; 040E68 || 040E70 28 E4       2956  			JR      Z,PRINTC
	dec	iy                         ; 040E72 || 	dec	iy                         ; 040E6A || 040E72 FD 2B       2957  			DEC     IY
	push	bc                        ; 040E74 || 	push	bc                        ; 040E6C || 040E74 C5          2958  			PUSH    BC
	call	$0401c7                   ; 040E75 || 	call	$0401c7                   ; 040E6D || 040E75 CD C7 01 04 2959  			CALL    EXPR            ;VARIABLE TYPE
	ex	af,af'                      ; 040E79 || 	ex	af,af'                      ; 040E71 || 040E79 08          2960  			EX      AF,AF'
	jp	m,$040e94                   ; 040E7A || 	jp	m,$040e8c                   ; 040E72 || 040E7A FA 94 0E 04 2961  			JP      M,PRINT3        ;STRING
	pop	de                         ; 040E7E || 	pop	de                         ; 040E76 || 040E7E D1          2962  			POP     DE
	push	de                        ; 040E7F || 	push	de                        ; 040E77 || 040E7F D5          2963  			PUSH    DE
	bit	1,d                        ; 040E80 || 	bit	1,d                        ; 040E78 || 040E80 CB 4A       2964  			BIT     1,D
	push	af                        ; 040E82 || 	push	af                        ; 040E7A || 040E82 F5          2965  			PUSH    AF
	call	z,$04096b                 ; 040E83 || 	call	z,$040966                 ; 040E7B || 040E83 CC 6B 09 04 2966  			CALL    Z,STR           ;DECIMAL
	pop	af                         ; 040E87 || 	pop	af                         ; 040E7F || 040E87 F1          2967  			POP     AF
	call	nz,$04091f                ; 040E88 || 	call	nz,$04091a                ; 040E80 || 040E88 C4 1F 09 04 2968  			CALL    NZ,HEXSTR       ;HEX
	pop	bc                         ; 040E8C || 	pop	bc                         ; 040E84 || 040E8C C1          2969  			POP     BC
	push	bc                        ; 040E8D || 	push	bc                        ; 040E85 || 040E8D C5          2970  			PUSH    BC
	ld	a,c                         ; 040E8E || 	ld	a,c                         ; 040E86 || 040E8E 79          2971  			LD      A,C
	sub	e                          ; 040E8F || 	sub	e                          ; 040E87 || 040E8F 93          2972  			SUB     E
	call	nc,$041821                ; 040E90 || 	call	nc,$0417ef                ; 040E88 || 040E90 D4 21 18 04 2973  			CALL    NC,FILL         ;RIGHT JUSTIFY
	pop	bc                         ; 040E94 || 	pop	bc                         ; 040E8C || 040E94 C1          2974  PRINT3:			POP     BC
	call	$041830                   ; 040E95 || 	call	$0417fe                   ; 040E8D || 040E95 CD 30 18 04 2975  			CALL    PTEXT           ;PRINT
	jr	$-$43                       ; 040E99 || 	jr	$-$43                       ; 040E91 || 040E99 18 BB       2976  			JR      PRINTC
	bit	0,b                        ; 040E9B || 	bit	0,b                        ; 040E93 || 040E9B CB 40       2977  PRINT4:			BIT     0,B
	call	z,$04399d                 ; 040E9D || 	call	z,$043947                 ; 040E95 || 040E9D CC 9D 39 04 2978  			CALL    Z,CRLF
	jp	$040b9e                     ; 040EA1 || 	jp	$040b96                     ; 040E99 || 040EA1 C3 9E 0B 04 2979  			JP      XEQ
	inc	iy                         ; 040EA5 || 	inc	iy                         ; 040E9D || 040EA5 FD 23       2984  ONERR:			INC     IY              ;SKIP "ERROR"
	ld	hl,$000000                  ; 040EA7 || 	ld	hl,$000000                  ; 040E9F || 040EA7 21 00 00 00 2985  			LD      HL,0
	ld	($044d2c),hl                ; 040EAB || 	ld	($044d2c),hl                ; 040EA3 || 040EAB 22 2C 4D 04 2986  			LD      (ERRTRP),HL
	call	$040a78                   ; 040EAF || 	call	$040a70                   ; 040EA7 || 040EAF CD 78 0A 04 2987  			CALL    NXT
	cp	$87                         ; 040EB3 || 	cp	$87                         ; 040EAB || 040EB3 FE 87       2988  			CP      OFF_
	inc	iy                         ; 040EB5 || 	inc	iy                         ; 040EAD || 040EB5 FD 23       2989  			INC     IY
	jp	z,$040b9e                   ; 040EB7 || 	jp	z,$040b96                   ; 040EAF || 040EB7 CA 9E 0B 04 2990  			JP      Z,XEQ
	dec	iy                         ; 040EBB || 	dec	iy                         ; 040EB3 || 040EBB FD 2B       2991  			DEC     IY
	ld	($044d2c),iy                ; 040EBD || 	ld	($044d2c),iy                ; 040EB5 || 040EBD FD 22 2C 4D 2992  			LD      (ERRTRP),IY
	jp	$040c33                     ; 040EC2 || 	jp	$040c2b                     ; 040EBA || 040EC2 C3 33 0C 04 2993  			JP      REM_EX
	cp	$85                         ; 040EC6 || 	cp	$85                         ; 040EBE || 040EC6 FE 85       3001  ON_EX_:			CP      TERROR
	jr	z,$-$23                     ; 040EC8 || 	jr	z,$-$23                     ; 040EC0 || 040EC8 28 DB       3002  			JR      Z,ONERR         ;"ON ERROR"
	call	$04030f                   ; 040ECA || 	call	$04030a                   ; 040EC2 || 040ECA CD 0F 03 04 3003  			CALL    EXPRI
	ld	a,(iy)                      ; 040ECE || 	ld	a,(iy)                      ; 040EC6 || 040ECE FD 7E 00    3004  			LD      A,(IY)
	inc	iy                         ; 040ED1 || 	inc	iy                         ; 040EC9 || 040ED1 FD 23       3005  			INC     IY
	ld	e,$2c                       ; 040ED3 || 	ld	e,$2c                       ; 040ECB || 040ED3 1E 2C       3006  			LD      E,','           ;SEPARATOR
	cp	$e5                         ; 040ED5 || 	cp	$e5                         ; 040ECD || 040ED5 FE E5       3007  			CP      TGOTO
	jr	z,$+$0d                     ; 040ED7 || 	jr	z,$+$0d                     ; 040ECF || 040ED7 28 0B       3008  			JR      Z,ON1
	cp	$e4                         ; 040ED9 || 	cp	$e4                         ; 040ED1 || 040ED9 FE E4       3009  			CP      TGOSUB
	jr	z,$+$09                     ; 040EDB || 	jr	z,$+$09                     ; 040ED3 || 040EDB 28 07       3010  			JR      Z,ON1
	ld	e,$f2                       ; 040EDD || 	ld	e,$f2                       ; 040ED5 || 040EDD 1E F2       3011  			LD      E,TPROC
	cp	e                           ; 040EDF || 	cp	e                           ; 040ED7 || 040EDF BB          3012  			CP      E
	ld	a,$27                       ; 040EE0 || 	ld	a,$27                       ; 040ED8 || 040EE0 3E 27       3013  			LD      A,39
	jr	nz,$+$47                    ; 040EE2 || 	jr	nz,$+$47                    ; 040EDA || 040EE2 20 45       3014  			JR      NZ,ERROR2_EX       ;"ON syntax"
	ld	d,a                         ; 040EE4 || 	ld	d,a                         ; 040EDC || 040EE4 57          3015  ON1:			LD      D,A
	exx                            ; 040EE5 || 	exx                            ; 040EDD || 040EE5 D9          3016  			EXX
	push	hl                        ; 040EE6 || 	push	hl                        ; 040EDE || 040EE6 E5          3017  			PUSH    HL
	exx                            ; 040EE7 || 	exx                            ; 040EDF || 040EE7 D9          3018  			EXX
	pop	bc                         ; 040EE8 || 	pop	bc                         ; 040EE0 || 040EE8 C1          3019  			POP     BC              ;ON INDEX
	ld	a,b                         ; 040EE9 || 	ld	a,b                         ; 040EE1 || 040EE9 78          3020  			LD      A,B
	or	h                           ; 040EEA || 	or	h                           ; 040EE2 || 040EEA B4          3021  			OR      H
	or	l                           ; 040EEB || 	or	l                           ; 040EE3 || 040EEB B5          3022  			OR      L
	jr	nz,$+$2c                    ; 040EEC || 	jr	nz,$+$2c                    ; 040EE4 || 040EEC 20 2A       3023  			JR      NZ,ON4          ;OUT OF RANGE
	or	c                           ; 040EEE || 	or	c                           ; 040EE6 || 040EEE B1          3024  			OR      C
	jr	z,$+$29                     ; 040EEF || 	jr	z,$+$29                     ; 040EE7 || 040EEF 28 27       3025  			JR      Z,ON4
	dec	c                          ; 040EF1 || 	dec	c                          ; 040EE9 || 040EF1 0D          3026  			DEC     C
	jr	z,$+$10                     ; 040EF2 || 	jr	z,$+$10                     ; 040EEA || 040EF2 28 0E       3027  			JR      Z,ON3           ;INDEX=1
	call	$0417ac                   ; 040EF4 || 	call	$04177a                   ; 040EEC || 040EF4 CD AC 17 04 3028  ON2:			CALL    TERMQ
	jr	z,$+$20                     ; 040EF8 || 	jr	z,$+$20                     ; 040EF0 || 040EF8 28 1E       3029  			JR      Z,ON4           ;OUT OF RANGE
	inc	iy                         ; 040EFA || 	inc	iy                         ; 040EF2 || 040EFA FD 23       3030  			INC     IY              ;SKIP DELIMITER
	cp	e                           ; 040EFC || 	cp	e                           ; 040EF4 || 040EFC BB          3031  			CP      E
	jr	nz,$-$09                    ; 040EFD || 	jr	nz,$-$09                    ; 040EF5 || 040EFD 20 F5       3032  			JR      NZ,ON2
	dec	c                          ; 040EFF || 	dec	c                          ; 040EF7 || 040EFF 0D          3033  			DEC     C
	jr	nz,$-$0c                    ; 040F00 || 	jr	nz,$-$0c                    ; 040EF8 || 040F00 20 F2       3034  			JR      NZ,ON2
	ld	a,e                         ; 040F02 || 	ld	a,e                         ; 040EFA || 040F02 7B          3035  ON3:			LD      A,E
	cp	$f2                         ; 040F03 || 	cp	$f2                         ; 040EFB || 040F03 FE F2       3036  			CP      TPROC
	jr	z,$+$28                     ; 040F05 || 	jr	z,$+$28                     ; 040EFD || 040F05 28 26       3037  			JR      Z,ONPROC
	push	de                        ; 040F07 || 	push	de                        ; 040EFF || 040F07 D5          3038  			PUSH    DE
	call	$04032a                   ; 040F08 || 	call	$040325                   ; 040F00 || 040F08 CD 2A 03 04 3039  			CALL    ITEMI           ;LINE NUMBER
	pop	de                         ; 040F0C || 	pop	de                         ; 040F04 || 040F0C D1          3040  			POP     DE
	ld	a,d                         ; 040F0D || 	ld	a,d                         ; 040F05 || 040F0D 7A          3041  			LD      A,D
	cp	$e5                         ; 040F0E || 	cp	$e5                         ; 040F06 || 040F0E FE E5       3042  			CP      TGOTO
	jr	z,$+$2f                     ; 040F10 || 	jr	z,$+$2f                     ; 040F08 || 040F10 28 2D       3043  			JR      Z,GOTO2
	call	$0417b9                   ; 040F12 || 	call	$041787                   ; 040F0A || 040F12 CD B9 17 04 3044  			CALL    SPAN            ;SKIP REST OF LIST
	jr	$+$3d                       ; 040F16 || 	jr	$+$3d                       ; 040F0E || 040F16 18 3B       3045  			JR      GOSUB1
	ld	a,(iy)                      ; 040F18 || 	ld	a,(iy)                      ; 040F10 || 040F18 FD 7E 00    3047  ON4:			LD      A,(IY)
	inc	iy                         ; 040F1B || 	inc	iy                         ; 040F13 || 040F1B FD 23       3048  			INC     IY
	cp	$8b                         ; 040F1D || 	cp	$8b                         ; 040F15 || 040F1D FE 8B       3049  			CP      ELSE_
	jp	z,$041353                   ; 040F1F || 	jp	z,$04134b                   ; 040F17 || 040F1F CA 53 13 04 3050  			JP      Z,IF1           ;ELSE CLAUSE
	cp	$0d                         ; 040F23 || 	cp	$0d                         ; 040F1B || 040F23 FE 0D       3051  			CP      CR
	jr	nz,$-$0d                    ; 040F25 || 	jr	nz,$-$0d                    ; 040F1D || 040F25 20 F1       3052  			JR      NZ,ON4
	ld	a,$28                       ; 040F27 || 	ld	a,$28                       ; 040F1F || 040F27 3E 28       3053  			LD      A,40
	jp	$0437b6                     ; 040F29 || 	jp	$043760                     ; 040F21 || 040F29 C3 B6 37 04 3054  ERROR2_EX:			JP      ERROR_           ;"ON range"
	ld	a,$ee                       ; 040F2D || 	ld	a,$ee                       ; 040F25 || 040F2D 3E EE       3056  ONPROC:			LD      A,TON
	jp	$04108c                     ; 040F2F || 	jp	$041084                     ; 040F27 || 040F2F C3 8C 10 04 3057  			JP      PROC_EX
	call	$04032a                   ; 040F33 || 	call	$040325                   ; 040F2B || 040F33 CD 2A 03 04 3061  GOTO_EX:			CALL    ITEMI           	; Fetch the line number
	call	$0417ac                   ; 040F37 || 	call	$04177a                   ; 040F2F || 040F37 CD AC 17 04 3062  GOTO1:			CALL    TERMQ			; Check for terminator
	jp	nz,$040c9f                  ; 040F3B || 	jp	nz,$040c97                  ; 040F33 || 040F3B C2 9F 0C 04 3063  			JP      NZ,SYNTAX		; Throw a "Syntax Error" if not found
	exx                            ; 040F3F || 	exx                            ; 040F37 || 040F3F D9          3064  GOTO2:			EXX
	call	$0439e5                   ; 040F40 || 	call	$04398f                   ; 040F38 || 040F40 CD E5 39 04 3065  			CALL    FINDL			; HL: Line number - Find the line
	push	hl                        ; 040F44 || 	push	hl                        ; 040F3C || 040F44 E5          3066  			PUSH    HL			; HL: Address of the line
	pop	iy                         ; 040F45 || 	pop	iy                         ; 040F3D || 040F45 FD E1       3067  			POP     IY			; IY = HL
	jp	z,$040b9a                   ; 040F47 || 	jp	z,$040b92                   ; 040F3F || 040F47 CA 9A 0B 04 3068  			JP      Z,XEQ0			; If the line is found, then continue execution at that point
	ld	a,$29                       ; 040F4B || 	ld	a,$29                       ; 040F43 || 040F4B 3E 29       3069  			LD      A,41			; Otherwise throw a "No such line" error
	jr	$-$24                       ; 040F4D || 	jr	$-$24                       ; 040F45 || 040F4D 18 DA       3070  			JR      ERROR2_EX
	call	$04032a                   ; 040F4F || 	call	$040325                   ; 040F47 || 040F4F CD 2A 03 04 3077  GOSUB_EX:			CALL    ITEMI			; Fetch the line number
	push	iy                        ; 040F53 || 	push	iy                        ; 040F4B || 040F53 FD E5       3078  GOSUB1:			PUSH    IY              	; Push the current execution address onto the execution stack
	call	$041681                   ; 040F55 || 	call	$04164f                   ; 040F4D || 040F55 CD 81 16 04 3079  			CALL    CHECK           	; Check there is enough room
	call	$040f37                   ; 040F59 || 	call	$040f2f                   ; 040F51 || 040F59 CD 37 0F 04 3080  			CALL    GOTO1           	; Push the marker (address of GOSCHK) onto the execution stack and GOTO the line number
	pop	de                         ; 040F5D || 	pop	de                         ; 040F55 || 040F5D D1          3088  RETURN:			POP     DE			; Pop the marker off the execution stack
	ld	hl,$040f5d                  ; 040F5E || 	ld	hl,$040f55                  ; 040F56 || 040F5E 21 5D 0F 04 3089  			LD      HL,GOSCHK		; Compare with GOSCHK
	or	a                           ; 040F62 || 	or	a                           ; 040F5A || 040F62 B7          3090  			OR      A
	sbc	hl,de                      ; 040F63 || 	sbc	hl,de                      ; 040F5B || 040F63 ED 52       3091  			SBC     HL,DE
	pop	iy                         ; 040F65 || 	pop	iy                         ; 040F5D || 040F65 FD E1       3092  			POP     IY			; Pop the return address off the execution stack
	jp	z,$040b9e                   ; 040F67 || 	jp	z,$040b96                   ; 040F5F || 040F67 CA 9E 0B 04 3093  			JP      Z,XEQ			; Provided this has been called by a GOSUB then continue execution at the return address
	ld	a,$26                       ; 040F6B || 	ld	a,$26                       ; 040F63 || 040F6B 3E 26       3094  			LD      A,38			; Otherwise throw a "No GOSUB" error
	jr	$-$44                       ; 040F6D || 	jr	$-$44                       ; 040F65 || 040F6D 18 BA       3095  			JR      ERROR2_EX
	push	iy                        ; 040F6F || 	push	iy                        ; 040F67 || 040F6F FD E5       3102  REPEAT_EX:			PUSH    IY			; Push the current execution address onto the execution stack
	call	$041681                   ; 040F71 || 	call	$04164f                   ; 040F69 || 040F71 CD 81 16 04 3103  			CALL    CHECK			; Check if there is enough room
	call	$040b9e                   ; 040F75 || 	call	$040b96                   ; 040F6D || 040F75 CD 9E 0B 04 3104  			CALL    XEQ			; Push the marker (address of REPCHK) onto the execution stack and continue execution
	pop	bc                         ; 040F79 || 	pop	bc                         ; 040F71 || 040F79 C1          3113  UNTIL_EX:			POP     BC			; Fetch the marker
	push	bc                        ; 040F7A || 	push	bc                        ; 040F72 || 040F7A C5          3114  			PUSH    BC			; And push it back onto the execution stack
	ld	hl,$040f79                  ; 040F7B || 	ld	hl,$040f71                  ; 040F73 || 040F7B 21 79 0F 04 3115  			LD      HL,REPCHK		; Compare with REPCHK
	or	a                           ; 040F7F || 	or	a                           ; 040F77 || 040F7F B7          3116  			OR      A
	sbc	hl,bc                      ; 040F80 || 	sbc	hl,bc                      ; 040F78 || 040F80 ED 42       3117  			SBC     HL,BC
	ld	a,$2b                       ; 040F82 || 	ld	a,$2b                       ; 040F7A || 040F82 3E 2B       3118  			LD      A,43
	jr	nz,$-$5b                    ; 040F84 || 	jr	nz,$-$5b                    ; 040F7C || 040F84 20 A3       3119  			JR      NZ,ERROR2_EX		; Throw a "No REPEAT" if this value does not match
	call	$04030f                   ; 040F86 || 	call	$04030a                   ; 040F7E || 040F86 CD 0F 03 04 3120  			CALL    EXPRI			; Fetch the expression
	call	$0408e4                   ; 040F8A || 	call	$0408df                   ; 040F82 || 040F8A CD E4 08 04 3121  			CALL    TEST			; Test if the expression evaluates to zero
	pop	bc                         ; 040F8E || 	pop	bc                         ; 040F86 || 040F8E C1          3122  			POP     BC			; Pop the marker
	pop	de                         ; 040F8F || 	pop	de                         ; 040F87 || 040F8F D1          3123  			POP     DE			; Pop the address of the REPEAT instruction
	jr	nz,$+$07                    ; 040F90 || 	jr	nz,$+$07                    ; 040F88 || 040F90 20 05       3124  			JR      NZ,XEQ2         	; If it is TRUE, then continue execution after the UNTIL instruction (we're done looping)
	push	de                        ; 040F92 || 	push	de                        ; 040F8A || 040F92 D5          3125  			PUSH    DE			; Push the address of the REPEAT instruction back on the stack
	push	bc                        ; 040F93 || 	push	bc                        ; 040F8B || 040F93 C5          3126  			PUSH    BC			; Push the marker back on the stack
	push	de                        ; 040F94 || 	push	de                        ; 040F8C || 040F94 D5          3127  			PUSH    DE			; IY = DE
	pop	iy                         ; 040F95 || 	pop	iy                         ; 040F8D || 040F95 FD E1       3128  			POP     IY			; This sets the execution address back to the REPEAT instruction
	jp	$040b9e                     ; 040F97 || 	jp	$040b96                     ; 040F8F || 040F97 C3 9E 0B 04 3129  XEQ2:			JP      XEQ			; Continue execution
	ld	a,$22                       ; 040F9B || 	ld	a,$22                       ; 040F93 || 040F9B 3E 22       3139  FORVAR:			LD      A,34
	jr	$-$74                       ; 040F9D || 	jr	$-$74                       ; 040F95 || 040F9D 18 8A       3140  			JR      ERROR2_EX          	; Throw "FOR variable" error
	call	$0415f0                   ; 040F9F || 	call	$0415be                   ; 040F97 || 040F9F CD F0 15 04 3142  FOR_EX:			CALL    ASSIGN			; Assign the START expression value to a variable
	jr	nz,$-$08                    ; 040FA3 || 	jr	nz,$-$08                    ; 040F9B || 040FA3 20 F6       3143  			JR      NZ,FORVAR       	; If the variable is a string, or invalid, then throw a "FOR variable" error
	push	af                        ; 040FA5 || 	push	af                        ; 040F9D || 040FA5 F5          3144  			PUSH    AF              	; Save the variable type
	ld	a,(iy)                      ; 040FA6 || 	ld	a,(iy)                      ; 040F9E || 040FA6 FD 7E 00    3145  			LD      A,(IY)			; Check the next token
	cp	$b8                         ; 040FA9 || 	cp	$b8                         ; 040FA1 || 040FA9 FE B8       3146  			CP      TO			; Compare with the token value for "TO"
	ld	a,$24                       ; 040FAB || 	ld	a,$24                       ; 040FA3 || 040FAB 3E 24       3147  			LD      A,36			; Set the error code to 36 ("No TO")
	jp	nz,$040f29                  ; 040FAD || 	jp	nz,$040f21                  ; 040FA5 || 040FAD C2 29 0F 04 3148  			JP      NZ,ERROR2_EX       	; And throw the error if that token is missing
	inc	iy                         ; 040FB1 || 	inc	iy                         ; 040FA9 || 040FB1 FD 23       3149  			INC     IY			; Skip to the next token
	push	ix                        ; 040FB3 || 	push	ix                        ; 040FAB || 040FB3 DD E5       3151  			PUSH    IX
	call	$040307                   ; 040FB5 || 	call	$040302                   ; 040FAD || 040FB5 CD 07 03 04 3152  			CALL    EXPRN           	; Fetch the LIMIT expression value
	pop	ix                         ; 040FB9 || 	pop	ix                         ; 040FB1 || 040FB9 DD E1       3153  			POP     IX
	pop	af                         ; 040FBB || 	pop	af                         ; 040FB3 || 040FBB F1          3154  			POP     AF
	ld	b,a                         ; 040FBC || 	ld	b,a                         ; 040FB4 || 040FBC 47          3155  			LD      B,A             	; B: LIMIT value type (04h = Integer, 05h = Float)
	push	bc                        ; 040FBD || 	push	bc                        ; 040FB5 || 040FBD C5          3156  			PUSH    BC              	; Stack the LIMIT value
	push	hl                        ; 040FBE || 	push	hl                        ; 040FB6 || 040FBE E5          3157  			PUSH    HL
	ld	hl,$000000                  ; 040FBF || 	ld	hl,$000000                  ; 040FB7 || 040FBF 21 00 00 00 3158  			LD      HL,0
	ld	c,h                         ; 040FC3 || 	ld	c,h                         ; 040FBB || 040FC3 4C          3159  			LD      C,H
	exx                            ; 040FC4 || 	exx                            ; 040FBC || 040FC4 D9          3160  			EXX
	push	hl                        ; 040FC5 || 	push	hl                        ; 040FBD || 040FC5 E5          3161  			PUSH    HL
	ld	hl,$000001                  ; 040FC6 || 	ld	hl,$000001                  ; 040FBE || 040FC6 21 01 00 00 3163  			LD      HL,1            	; The preset STEP value is 1
	exx                            ; 040FCA || 	exx                            ; 040FC2 || 040FCA D9          3164  			EXX
	ld	a,(iy)                      ; 040FCB || 	ld	a,(iy)                      ; 040FC3 || 040FCB FD 7E 00    3165  			LD      A,(IY)			; Fetch the next token
	cp	$88                         ; 040FCE || 	cp	$88                         ; 040FC6 || 040FCE FE 88       3166  			CP      STEP			; Compare with the token value for "STEP"
	jr	nz,$+$0c                    ; 040FD0 || 	jr	nz,$+$0c                    ; 040FC8 || 040FD0 20 0A       3167  			JR      NZ,FOR1			; If there is no STEP token, then skip the next bit
	inc	iy                         ; 040FD2 || 	inc	iy                         ; 040FCA || 040FD2 FD 23       3169  			INC     IY			; Skip past the STEP token
	push	ix                        ; 040FD4 || 	push	ix                        ; 040FCC || 040FD4 DD E5       3170  			PUSH    IX
	call	$040307                   ; 040FD6 || 	call	$040302                   ; 040FCE || 040FD6 CD 07 03 04 3171  			CALL    EXPRN          		; Fetch the STEP expression value
	pop	ix                         ; 040FDA || 	pop	ix                         ; 040FD2 || 040FDA DD E1       3172  			POP     IX
	push	bc                        ; 040FDC || 	push	bc                        ; 040FD4 || 040FDC C5          3174  FOR1:			PUSH    BC			; Stack the STEP value
	push	hl                        ; 040FDD || 	push	hl                        ; 040FD5 || 040FDD E5          3175  			PUSH    HL
	exx                            ; 040FDE || 	exx                            ; 040FD6 || 040FDE D9          3176  			EXX
	push	hl                        ; 040FDF || 	push	hl                        ; 040FD7 || 040FDF E5          3177  			PUSH    HL
	exx                            ; 040FE0 || 	exx                            ; 040FD8 || 040FE0 D9          3178  			EXX
	push	iy                        ; 040FE1 || 	push	iy                        ; 040FD9 || 040FE1 FD E5       3180  			PUSH    IY              	; Stack the current execution address
	push	ix                        ; 040FE3 || 	push	ix                        ; 040FDB || 040FE3 DD E5       3181  			PUSH    IX              	; Stack the loop variable
	call	$041681                   ; 040FE5 || 	call	$04164f                   ; 040FDD || 040FE5 CD 81 16 04 3182  			CALL    CHECK
	call	$040b9e                   ; 040FE9 || 	call	$040b96                   ; 040FE1 || 040FE9 CD 9E 0B 04 3183  			CALL    XEQ
	pop	bc                         ; 040FED || 	pop	bc                         ; 040FE5 || 040FED C1          3195  NEXT_EX:			POP     BC              	; Pop the marker off the execution stack
	ld	hl,$040fed                  ; 040FEE || 	ld	hl,$040fe5                  ; 040FE6 || 040FEE 21 ED 0F 04 3196  			LD      HL,FORCHK		; Compare with FORCHK
	or	a                           ; 040FF2 || 	or	a                           ; 040FEA || 040FF2 B7          3197  			OR      A
	sbc	hl,bc                      ; 040FF3 || 	sbc	hl,bc                      ; 040FEB || 040FF3 ED 42       3198  			SBC     HL,BC
	ld	a,$20                       ; 040FF5 || 	ld	a,$20                       ; 040FED || 040FF5 3E 20       3199  			LD      A,32
	jp	nz,$041083                  ; 040FF7 || 	jp	nz,$04107b                  ; 040FEF || 040FF7 C2 83 10 04 3200  			JP      NZ,ERROR3_EX      		; If this does not match, throw a "No FOR" error
	call	$0417ac                   ; 040FFB || 	call	$04177a                   ; 040FF3 || 040FFB CD AC 17 04 3201  			CALL    TERMQ			; Check for terminator (a NEXT without a variable)
	pop	hl                         ; 040FFF || 	pop	hl                         ; 040FF7 || 040FFF E1          3202  			POP     HL			; Pop the address of the loop variable off the execution stack
	push	hl                        ; 041000 || 	push	hl                        ; 040FF8 || 041000 E5          3203  			PUSH    HL			; Push it back onto the execution stack
	push	bc                        ; 041001 || 	push	bc                        ; 040FF9 || 041001 C5          3204  			PUSH    BC			; Push the marker back onto the execution stack
	push	hl                        ; 041002 || 	push	hl                        ; 040FFA || 041002 E5          3205  			PUSH    HL			; HL: Address of the loop variable off the stack
	call	nz,$043a90                ; 041003 || 	call	nz,$043a3a                ; 040FFB || 041003 C4 90 3A 04 3206  			CALL    NZ,GETVAR       	; If there is no terminator, get the variable from the args
	pop	de                         ; 041007 || 	pop	de                         ; 040FFF || 041007 D1          3207  			POP     DE			; DE: Address of the loop variable off the stack
	ex	de,hl                       ; 041008 || 	ex	de,hl                       ; 041000 || 041008 EB          3208  			EX      DE,HL			; HL: Address of the loop variable off the stack, DE: Address of the variable from args
	or	a                           ; 041009 || 	or	a                           ; 041001 || 041009 B7          3209  			OR      A
	sbc	hl,de                      ; 04100A || 	sbc	hl,de                      ; 041002 || 04100A ED 52       3210  NEXT0:			SBC     HL,DE			; Compare to make sure that the variables match
	jr	nz,$+$63                    ; 04100C || 	jr	nz,$+$63                    ; 041004 || 04100C 20 61       3211  			JR      NZ,NEXT1		; They don't, so jump to NEXT1
	push	de                        ; 04100E || 	push	de                        ; 041006 || 04100E D5          3212  			PUSH    DE
	ld	ix,$00000c                  ; 04100F || 	ld	ix,$00000c                  ; 041007 || 04100F DD 21 0C 00 3213  			LD      IX,9+3			; IX: Address of the STEP value on the execution stack
	add	ix,sp                      ; 041014 || 	add	ix,sp                      ; 04100C || 041014 DD 39       3214  			ADD     IX,SP
	call	$042a19                   ; 041016 || 	call	$0429e1                   ; 04100E || 041016 CD 19 2A 04 3215  			CALL    DLOAD5_SPL      	; Load the STEP value
	ld	a,(ix+$10)                  ; 04101A || 	ld	a,(ix+$10)                  ; 041012 || 04101A DD 7E 10    3216  			LD      A,(IX+16)       	; Get the STEP type
	pop	ix                         ; 04101D || 	pop	ix                         ; 041015 || 04101D DD E1       3217  			POP     IX
	call	$04041b                   ; 04101F || 	call	$040416                   ; 041017 || 04101F CD 1B 04 04 3218  			CALL    LOADN           	; Load the LOOP variable
	bit	7,d                        ; 041023 || 	bit	7,d                        ; 04101B || 041023 CB 7A       3219  			BIT     7,D             	; Check the sign
	push	af                        ; 041025 || 	push	af                        ; 04101D || 041025 F5          3220  			PUSH    AF
	ld	a,$0b                       ; 041026 || 	ld	a,$0b                       ; 04101E || 041026 3E 0B       3221  			LD      A,'+' & 0FH
	call	$0420a2                   ; 041028 || 	call	$04206a                   ; 041020 || 041028 CD A2 20 04 3222  			CALL    FPP             	; Add the STEP
	jr	c,$+$57                     ; 04102C || 	jr	c,$+$57                     ; 041024 || 04102C 38 55       3223  			JR      C,ERROR3_EX
	pop	af                         ; 04102E || 	pop	af                         ; 041026 || 04102E F1          3224  			POP     AF              	; Restore TYPE
	push	af                        ; 04102F || 	push	af                        ; 041027 || 04102F F5          3225  			PUSH    AF
	call	$041608                   ; 041030 || 	call	$0415d6                   ; 041028 || 041030 CD 08 16 04 3226  			CALL    STORE           	; Update the variable
	ld	ix,$000015                  ; 041034 || 	ld	ix,$000015                  ; 04102C || 041034 DD 21 15 00 3227  			LD      IX,18+3			; IX: Address of the LIMIT value on the execution stack
	add	ix,sp                      ; 041039 || 	add	ix,sp                      ; 041031 || 041039 DD 39       3228  			ADD     IX,SP
	call	$042a19                   ; 04103B || 	call	$0429e1                   ; 041033 || 04103B CD 19 2A 04 3229  			CALL    DLOAD5_SPL      	; Load the LIMIT value
	pop	af                         ; 04103F || 	pop	af                         ; 041037 || 04103F F1          3230  			POP     AF
	call	z,$0408dc                 ; 041040 || 	call	z,$0408d7                 ; 041038 || 041040 CC DC 08 04 3231  			CALL    Z,SWAP			; Swap the arguments if the sign is ?
	ld	a,$08                       ; 041044 || 	ld	a,$08                       ; 04103C || 041044 3E 08       3233  			LD      A,0+'<'-4 & 0FH ; ez80asm doesn't do () in expressions
	call	$0420a2                   ; 041046 || 	call	$04206a                   ; 04103E || 041046 CD A2 20 04 3234  			CALL    FPP             	; Test against the limit
	jr	c,$+$39                     ; 04104A || 	jr	c,$+$39                     ; 041042 || 04104A 38 37       3235  			JR      C,ERROR3_EX		; Throw an error if FPP returns bad
	inc	h                          ; 04104C || 	inc	h                          ; 041044 || 04104C 24          3236  			INC     H
	jr	nz,$+$16                    ; 04104D || 	jr	nz,$+$16                    ; 041045 || 04104D 20 14       3237  			JR      NZ,LOOP_        	; Keep looping
	ld	hl,$00001b                  ; 04104F || 	ld	hl,$00001b                  ; 041047 || 04104F 21 1B 00 00 3238  			LD      HL,27			; Adjust the stack
	add	hl,sp                      ; 041053 || 	add	hl,sp                      ; 04104B || 041053 39          3239  			ADD     HL,SP
	ld	sp,hl                       ; 041054 || 	ld	sp,hl                       ; 04104C || 041054 F9          3240  			LD      SP,HL
	call	$040a78                   ; 041055 || 	call	$040a70                   ; 04104D || 041055 CD 78 0A 04 3241  			CALL    NXT
	cp	$2c                         ; 041059 || 	cp	$2c                         ; 041051 || 041059 FE 2C       3242  			CP      ','			; Check for multiple variables
	jp	nz,$040b9e                  ; 04105B || 	jp	nz,$040b96                  ; 041053 || 04105B C2 9E 0B 04 3243  			JP      NZ,XEQ			; No, so we are done at ths point
	inc	iy                         ; 04105F || 	inc	iy                         ; 041057 || 04105F FD 23       3244  			INC     IY			; Increment to the next variable
	jr	$-$74                       ; 041061 || 	jr	$-$74                       ; 041059 || 041061 18 8A       3245  			JR      NEXT_EX			; And continue
	pop	bc                         ; 041063 || 	pop	bc                         ; 04105B || 041063 C1          3247  LOOP_:			POP     BC
	pop	de                         ; 041064 || 	pop	de                         ; 04105C || 041064 D1          3248  			POP     DE
	pop	iy                         ; 041065 || 	pop	iy                         ; 04105D || 041065 FD E1       3249  			POP     IY
	push	iy                        ; 041067 || 	push	iy                        ; 04105F || 041067 FD E5       3250  			PUSH    IY
	push	de                        ; 041069 || 	push	de                        ; 041061 || 041069 D5          3251  			PUSH    DE
	push	bc                        ; 04106A || 	push	bc                        ; 041062 || 04106A C5          3252  			PUSH    BC
	jp	$040b9e                     ; 04106B || 	jp	$040b96                     ; 041063 || 04106B C3 9E 0B 04 3253  			JP      XEQ
	ld	hl,$00001b                  ; 04106F || 	ld	hl,$00001b                  ; 041067 || 04106F 21 1B 00 00 3255  NEXT1:			LD      HL,27			; TODO: What does this do?
	add	hl,sp                      ; 041073 || 	add	hl,sp                      ; 04106B || 041073 39          3256  			ADD     HL,SP
	ld	sp,hl                       ; 041074 || 	ld	sp,hl                       ; 04106C || 041074 F9          3257  			LD      SP,HL			; Adjust the stack
	pop	bc                         ; 041075 || 	pop	bc                         ; 04106D || 041075 C1          3258  			POP     BC
	ld	hl,$040fed                  ; 041076 || 	ld	hl,$040fe5                  ; 04106E || 041076 21 ED 0F 04 3259  			LD      HL,FORCHK
	sbc	hl,bc                      ; 04107A || 	sbc	hl,bc                      ; 041072 || 04107A ED 42       3260  			SBC     HL,BC
	pop	hl                         ; 04107C || 	pop	hl                         ; 041074 || 04107C E1          3261  			POP     HL              	; Variable pointer
	push	hl                        ; 04107D || 	push	hl                        ; 041075 || 04107D E5          3262  			PUSH    HL
	push	bc                        ; 04107E || 	push	bc                        ; 041076 || 04107E C5          3263  			PUSH    BC
	jr	z,$-$75                     ; 04107F || 	jr	z,$-$75                     ; 041077 || 04107F 28 89       3264  			JR      Z,NEXT0
	ld	a,$21                       ; 041081 || 	ld	a,$21                       ; 041079 || 041081 3E 21       3266  			LD      A,33
	jp	$0437b6                     ; 041083 || 	jp	$043760                     ; 04107B || 041083 C3 B6 37 04 3267  ERROR3_EX:			JP      ERROR_           	; Throw the error "Can't match FOR"
	push	af                        ; 041087 || 	push	af                        ; 04107F || 041087 F5          3272  FN_EX:			PUSH    AF              	; Push A onto the stack; this'll be checked for the token ON (TON) in PROC5
	call	$041091                   ; 041088 || 	call	$041089                   ; 041080 || 041088 CD 91 10 04 3273  			CALL    PROC1
	push	af                        ; 04108C || 	push	af                        ; 041084 || 04108C F5          3282  PROC_EX:			PUSH    AF			; Push A onto the stack; this'll be checked for the token ON (TON) in PROC5,
	call	$041091                   ; 04108D || 	call	$041089                   ; 041085 || 04108D CD 91 10 04 3283  			CALL    PROC1			; and is also space reserved on the stack for the return address
	call	$041681                   ; 041091 || 	call	$04164f                   ; 041089 || 041091 CD 81 16 04 3286  PROC1:			CALL    CHECK			; Check there is space for this
	dec	iy                         ; 041095 || 	dec	iy                         ; 04108D || 041095 FD 2B       3287  			DEC     IY			; Decrement IY to the PROC token
	push	iy                        ; 041097 || 	push	iy                        ; 04108F || 041097 FD E5       3288  			PUSH    IY			; Stack the pointer
	call	$043b51                   ; 041099 || 	call	$043afb                   ; 041091 || 041099 CD 51 3B 04 3289  			CALL    GETDEF			; Search for this PROC/FN entry in the dynamic area
	pop	bc                         ; 04109D || 	pop	bc                         ; 041095 || 04109D C1          3290  			POP     BC			; BC = IY
	jr	z,$+$43                     ; 04109E || 	jr	z,$+$43                     ; 041096 || 04109E 28 41       3291  			JR      Z,PROC4			; If found in the dynamic area then skip to PROC4
	ld	a,$1e                       ; 0410A0 || 	ld	a,$1e                       ; 041098 || 0410A0 3E 1E       3292  			LD      A,30
	jr	c,$-$1f                     ; 0410A2 || 	jr	c,$-$1f                     ; 04109A || 0410A2 38 DF       3293  			JR      C,ERROR3_EX        	; Throw error "Bad call" if invalid PROC/FN call
	push	bc                        ; 0410A4 || 	push	bc                        ; 04109C || 0410A4 C5          3298  			PUSH    BC			; BC: Still pointing to the PROC token in the tokenised line
	ld	hl,($044d14)                ; 0410A5 || 	ld	hl,($044d14)                ; 04109D || 0410A5 2A 14 4D 04 3299  			LD      HL,(PAGE_)		; HL: Start of program memory
	ld	a,$dd                       ; 0410A9 || 	ld	a,$dd                       ; 0410A1 || 0410A9 3E DD       3301  PROC2:			LD      A,DEF_			;  A: The token to search for
	call	$041880                   ; 0410AB || 	call	$04184e                   ; 0410A3 || 0410AB CD 80 18 04 3302  			CALL    SEARCH_EX          	; Look for "DEF" as the first token in a program line
	jr	c,$+$28                     ; 0410AF || 	jr	c,$+$28                     ; 0410A7 || 0410AF 38 26       3303  			JR      C,PROC3			; Not found, so jump to PROC3
	push	hl                        ; 0410B1 || 	push	hl                        ; 0410A9 || 0410B1 E5          3304  			PUSH    HL			; HL: Points to the DEF token in the DEFPROC
	pop	iy                         ; 0410B2 || 	pop	iy                         ; 0410AA || 0410B2 FD E1       3305  			POP     IY			; IY = HL
	inc	iy                         ; 0410B4 || 	inc	iy                         ; 0410AC || 0410B4 FD 23       3306  			INC     IY              	; Skip the DEF token
	call	$040a78                   ; 0410B6 || 	call	$040a70                   ; 0410AE || 0410B6 CD 78 0A 04 3307  			CALL    NXT			; And any whitespace
	call	$043b51                   ; 0410BA || 	call	$043afb                   ; 0410B2 || 0410BA CD 51 3B 04 3308  			CALL    GETDEF			; Search for this PROC/FN entry in the dynamic area
	push	iy                        ; 0410BE || 	push	iy                        ; 0410B6 || 0410BE FD E5       3309  			PUSH    IY
	pop	de                         ; 0410C0 || 	pop	de                         ; 0410B8 || 0410C0 D1          3310  			POP     DE			; DE: Points to the PROC/FN token in tokenised line of the DEFPROC
	jr	c,$+$0b                     ; 0410C1 || 	jr	c,$+$0b                     ; 0410B9 || 0410C1 38 09       3311  			JR      C,PROC6			; Skip if there is an error (neither FN or PROC first)
	call	nz,$043c04                ; 0410C3 || 	call	nz,$043bae                ; 0410BB || 0410C3 C4 04 3C 04 3312  			CALL    NZ,CREATE		; Create an entity in the dynamic area
	push	iy                        ; 0410C7 || 	push	iy                        ; 0410BF || 0410C7 FD E5       3313  			PUSH    IY			; IY: Pointer to the DEFPROC/FN arguments
	pop	de                         ; 0410C9 || 	pop	de                         ; 0410C1 || 0410C9 D1          3314  			POP     DE			; DE = IY
	ld	(hl),de                     ; 0410CA || 	ld	(hl),de                     ; 0410C2 || 0410CA ED 1F       3315  			LD	(HL),DE			; Save address
	ex	de,hl                       ; 0410CC || 	ex	de,hl                       ; 0410C4 || 0410CC EB          3317  PROC6:			EX      DE,HL			; HL: Address of the procedure
	ld	a,$0d                       ; 0410CD || 	ld	a,$0d                       ; 0410C5 || 0410CD 3E 0D       3318  			LD      A,CR			; The character to search for
	ld	bc,$000100                  ; 0410CF || 	ld	bc,$000100                  ; 0410C7 || 0410CF 01 00 01 00 3319  			LD	BC,100h			; Only need to search 256 bytes or so ahead; maximum line length
	cpir                           ; 0410D3 || 	cpir                           ; 0410CB || 0410D3 ED B1       3320  			CPIR                    	; Skip to next line
	jr	$-$2c                       ; 0410D5 || 	jr	$-$2c                       ; 0410CD || 0410D5 18 D2       3321  			JR      PROC2			; Rinse, lather and repeat
	pop	iy                         ; 0410D7 || 	pop	iy                         ; 0410CF || 0410D7 FD E1       3325  PROC3:			POP     IY              	; Restore the execution address
	call	$043b51                   ; 0410D9 || 	call	$043afb                   ; 0410D1 || 0410D9 CD 51 3B 04 3326  			CALL    GETDEF			; Search for this PROC/FN entry in the dynamic area
	ld	a,$1d                       ; 0410DD || 	ld	a,$1d                       ; 0410D5 || 0410DD 3E 1D       3327  			LD      A,29
	jr	nz,$-$5c                    ; 0410DF || 	jr	nz,$-$5c                    ; 0410D7 || 0410DF 20 A2       3328  			JR      NZ,ERROR3_EX      		; Throw error "No such FN/PROC" if not found
	ld	de,(hl)                     ; 0410E1 || 	ld	de,(hl)                     ; 0410D9 || 0410E1 ED 17       3332  PROC4:			LD	DE,(HL)			; HL: Address of pointer; fetch entity address in DE
	ld	hl,$000003                  ; 0410E3 || 	ld	hl,$000003                  ; 0410DB || 0410E3 21 03 00 00 3333  			LD	HL,3
	add	hl,sp                      ; 0410E7 || 	add	hl,sp                      ; 0410DF || 0410E7 39          3334  			ADD     HL,SP
	call	$040a78                   ; 0410E8 || 	call	$040a70                   ; 0410E0 || 0410E8 CD 78 0A 04 3335  			CALL    NXT             	; Allow space before "("
	push	de                        ; 0410EC || 	push	de                        ; 0410E4 || 0410EC D5          3336  			PUSH    DE              	; Exchange DE and IY
	ex	(sp),iy                     ; 0410ED || 	ex	(sp),iy                     ; 0410E5 || 0410ED FD E3       3337  			EX      (SP),IY
	cp	$28                         ; 0410EF || 	cp	$28                         ; 0410E7 || 0410EF FE 28       3338  			CP      '('             	; Arguments?
	pop	de                         ; 0410F1 || 	pop	de                         ; 0410E9 || 0410F1 D1          3339  			POP     DE			; NB: This has been moved after the compare otherwise DE gets corrupted later? IDK why!?!
	jr	nz,$+$22                    ; 0410F2 || 	jr	nz,$+$22                    ; 0410EA || 0410F2 20 20       3340  			JR      NZ,PROC5
	call	$040a78                   ; 0410F4 || 	call	$040a70                   ; 0410EC || 0410F4 CD 78 0A 04 3341  			CALL    NXT             	; Allow space before "("
	cp	$28                         ; 0410F8 || 	cp	$28                         ; 0410F0 || 0410F8 FE 28       3342  			CP      '('
	jp	nz,$040c9f                  ; 0410FA || 	jp	nz,$040c97                  ; 0410F2 || 0410FA C2 9F 0C 04 3343  			JP      NZ,SYNTAX       	; Throw "Syntax error"
	push	iy                        ; 0410FE || 	push	iy                        ; 0410F6 || 0410FE FD E5       3344  			PUSH    IY
	pop	bc                         ; 041100 || 	pop	bc                         ; 0410F8 || 041100 C1          3345  			POP     BC              	; Save IY in BC
	exx                            ; 041101 || 	exx                            ; 0410F9 || 041101 D9          3346  			EXX
	call	$04172c                   ; 041102 || 	call	$0416fa                   ; 0410FA || 041102 CD 2C 17 04 3347  			CALL    SAVLOC          	; Save local parameters
	call	$040a37                   ; 041106 || 	call	$040a2f                   ; 0410FE || 041106 CD 37 0A 04 3348  			CALL    BRAKET          	; Closing bracket
	exx                            ; 04110A || 	exx                            ; 041102 || 04110A D9          3349  			EXX
	push	bc                        ; 04110B || 	push	bc                        ; 041103 || 04110B C5          3350  			PUSH    BC
	pop	iy                         ; 04110C || 	pop	iy                         ; 041104 || 04110C FD E1       3351  			POP     IY              	; Restore IY
	push	hl                        ; 04110E || 	push	hl                        ; 041106 || 04110E E5          3352  			PUSH    HL
	call	$0416a8                   ; 04110F || 	call	$041676                   ; 041107 || 04110F CD A8 16 04 3353  			CALL    ARGUE           	; Transfer arguments
	pop	hl                         ; 041113 || 	pop	hl                         ; 04110B || 041113 E1          3354  			POP     HL
	inc	hl                         ; 041114 || 	inc	hl                         ; 04110C || 041114 23          3356  PROC5:			INC	HL			; Increment to the ON PROC flag address
	ld	a,(hl)                      ; 041115 || 	ld	a,(hl)                      ; 04110D || 041115 7E          3357  			LD	A, (HL)			; And fetch the value
	dec	hl                         ; 041116 || 	dec	hl                         ; 04110E || 041116 2B          3358  			DEC 	HL
	ld	(hl),de                     ; 041117 || 	ld	(hl),de                     ; 04110F || 041117 ED 1F       3359  			LD	(HL), DE		; Save the ENDPROC return address pointer in the BASIC listing
	cp	$ee                         ; 041119 || 	cp	$ee                         ; 041111 || 041119 FE EE       3360  			CP	TON			; Was it "ON PROC"?
	jp	nz,$040b9e                  ; 04111B || 	jp	nz,$040b96                  ; 041113 || 04111B C2 9E 0B 04 3361  			JP	NZ, XEQ			; No, so back to XEQ
	push	de                        ; 04111F || 	push	de                        ; 041117 || 04111F D5          3362  			PUSH    DE			; Exchange DE and IY
	ex	(sp),iy                     ; 041120 || 	ex	(sp),iy                     ; 041118 || 041120 FD E3       3363  			EX      (SP),IY
	call	$0417b9                   ; 041122 || 	call	$041787                   ; 04111A || 041122 CD B9 17 04 3364  			CALL    SPAN            	; Skip rest of ON list
	ex	(sp),iy                     ; 041126 || 	ex	(sp),iy                     ; 04111E || 041126 FD E3       3365  			EX      (SP),IY			; Exchange DE and IY
	pop	de                         ; 041128 || 	pop	de                         ; 041120 || 041128 D1          3366  			POP     DE
	ld	(hl),de                     ; 041129 || 	ld	(hl),de                     ; 041121 || 041129 ED 1F       3367  			LD	(HL), DE		; Save the return address
	jp	$040b9e                     ; 04112B || 	jp	$040b96                     ; 041123 || 04112B C3 9E 0B 04 3368  			JP      XEQ
	pop	bc                         ; 04112F || 	pop	bc                         ; 041127 || 04112F C1          3372  LOCAL_EX_:			POP     BC			; BC: The current check marker (on the stack)
	push	bc                        ; 041130 || 	push	bc                        ; 041128 || 041130 C5          3373  			PUSH    BC
	ld	hl,$04108c                  ; 041131 || 	ld	hl,$041084                  ; 041129 || 041131 21 8C 10 04 3374  			LD      HL,FNCHK		; Check if we are in a FN
	or	a                           ; 041135 || 	or	a                           ; 04112D || 041135 B7          3375  			OR      A
	sbc	hl,bc                      ; 041136 || 	sbc	hl,bc                      ; 04112E || 041136 ED 42       3376  			SBC     HL,BC
	jr	z,$+$18                     ; 041138 || 	jr	z,$+$18                     ; 041130 || 041138 28 16       3377  			JR      Z,LOCAL1		; Yes, so all good, we can use local
	ld	hl,$041091                  ; 04113A || 	ld	hl,$041089                  ; 041132 || 04113A 21 91 10 04 3378  			LD      HL,PROCHK		; Now check if we are in a PROC
	or	a                           ; 04113E || 	or	a                           ; 041136 || 04113E B7          3379  			OR      A
	sbc	hl,bc                      ; 04113F || 	sbc	hl,bc                      ; 041137 || 04113F ED 42       3380  			SBC     HL,BC
	jr	z,$+$0f                     ; 041141 || 	jr	z,$+$0f                     ; 041139 || 041141 28 0D       3381  			JR      Z,LOCAL1		; Again, all good, we can use local
	ld	hl,$04178a                  ; 041143 || 	ld	hl,$041758                  ; 04113B || 041143 21 8A 17 04 3382  			LD      HL,LOCCHK		; Finally check for the local parameters marker
	or	a                           ; 041147 || 	or	a                           ; 04113F || 041147 B7          3383  			OR      A
	sbc	hl,bc                      ; 041148 || 	sbc	hl,bc                      ; 041140 || 041148 ED 42       3384  			SBC     HL,BC			; If it is not present, then
	ld	a,$0c                       ; 04114A || 	ld	a,$0c                       ; 041142 || 04114A 3E 0C       3385  			LD      A,12
	jp	nz,$0437b6                  ; 04114C || 	jp	nz,$043760                  ; 041144 || 04114C C2 B6 37 04 3386  			JP      NZ,ERROR_        	; Then throw a "Not LOCAL" errr
	push	iy                        ; 041150 || 	push	iy                        ; 041148 || 041150 FD E5       3390  LOCAL1:			PUSH    IY			; IY: BASIC pointer
	pop	bc                         ; 041152 || 	pop	bc                         ; 04114A || 041152 C1          3391  			POP     BC			; BC: Copy of the BASIC pointer
	exx                            ; 041153 || 	exx                            ; 04114B || 041153 D9          3392  			EXX
	dec	iy                         ; 041154 || 	dec	iy                         ; 04114C || 041154 FD 2B       3393  			DEC     IY
	call	$04172c                   ; 041156 || 	call	$0416fa                   ; 04114E || 041156 CD 2C 17 04 3394  			CALL    SAVLOC
	exx                            ; 04115A || 	exx                            ; 041152 || 04115A D9          3395  			EXX
	push	bc                        ; 04115B || 	push	bc                        ; 041153 || 04115B C5          3396  			PUSH    BC
	pop	iy                         ; 04115C || 	pop	iy                         ; 041154 || 04115C FD E1       3397  			POP     IY
	call	$043a90                   ; 04115E || 	call	$043a3a                   ; 041156 || 04115E CD 90 3A 04 3399  LOCAL2:			CALL    GETVAR			; Get the variable location
	jp	nz,$040c9f                  ; 041162 || 	jp	nz,$040c97                  ; 04115A || 041162 C2 9F 0C 04 3400  			JP      NZ,SYNTAX
	or	a                           ; 041166 || 	or	a                           ; 04115E || 041166 B7          3401  			OR      A               	; Check the variable type (80h = string)
	ex	af,af'                      ; 041167 || 	ex	af,af'                      ; 04115F || 041167 08          3402  			EX      AF,AF'
	call	$040998                   ; 041168 || 	call	$040993                   ; 041160 || 041168 CD 98 09 04 3403  			CALL    ZERO			; Zero the variable anyway
	ex	af,af'                      ; 04116C || 	ex	af,af'                      ; 041164 || 04116C 08          3404  			EX      AF,AF'
	push	af                        ; 04116D || 	push	af                        ; 041165 || 04116D F5          3405  			PUSH    AF
	call	p,$041608                 ; 04116E || 	call	p,$0415d6                 ; 041166 || 04116E F4 08 16 04 3406  			CALL    P,STORE         	; Call STORE if it is not a string
	pop	af                         ; 041172 || 	pop	af                         ; 04116A || 041172 F1          3407  			POP     AF
	ld	e,c                         ; 041173 || 	ld	e,c                         ; 04116B || 041173 59          3408  			LD      E,C
	call	m,$041636                 ; 041174 || 	call	m,$041604                 ; 04116C || 041174 FC 36 16 04 3409  			CALL    M,STORES		; Call STORES if it is a string
	call	$040a78                   ; 041178 || 	call	$040a70                   ; 041170 || 041178 CD 78 0A 04 3410  			CALL    NXT			; Skip to the next character in the expression
	cp	$2c                         ; 04117C || 	cp	$2c                         ; 041174 || 04117C FE 2C       3411  			CP      ','			; Is it a comma?
	jp	nz,$040b9e                  ; 04117E || 	jp	nz,$040b96                  ; 041176 || 04117E C2 9E 0B 04 3412  			JP      NZ,XEQ			; No, so we're done, carry on executing
	inc	iy                         ; 041182 || 	inc	iy                         ; 04117A || 041182 FD 23       3413  			INC     IY			; Yes, so skip the comma
	call	$040a78                   ; 041184 || 	call	$040a70                   ; 04117C || 041184 CD 78 0A 04 3414  			CALL    NXT			; And any whitespace
	jr	$-$2a                       ; 041188 || 	jr	$-$2a                       ; 041180 || 041188 18 D4       3415  			JR      LOCAL2			; Then loop back and handle any further local variables
	pop	bc                         ; 04118A || 	pop	bc                         ; 041182 || 04118A C1          3419  ENDPRO:			POP     BC			; Pop the check value off the stack
	ld	hl,$04178a                  ; 04118B || 	ld	hl,$041758                  ; 041183 || 04118B 21 8A 17 04 3420  			LD      HL,LOCCHK		; Check if it is the LOCAL Marker
	or	a                           ; 04118F || 	or	a                           ; 041187 || 04118F B7          3421  			OR      A
	sbc	hl,bc                      ; 041190 || 	sbc	hl,bc                      ; 041188 || 041190 ED 42       3422  			SBC     HL,BC
	jr	z,$+$15                     ; 041192 || 	jr	z,$+$15                     ; 04118A || 041192 28 13       3423  			JR      Z,UNSTK         	; Yes, it is, so first need to unstack the local variables
	ld	hl,$041091                  ; 041194 || 	ld	hl,$041089                  ; 04118C || 041194 21 91 10 04 3425  			LD      HL,PROCHK       	; Check if it is the PROC marker
	or	a                           ; 041198 || 	or	a                           ; 041190 || 041198 B7          3426  			OR      A
	sbc	hl,bc                      ; 041199 || 	sbc	hl,bc                      ; 041191 || 041199 ED 42       3427  			SBC     HL,BC
	pop	iy                         ; 04119B || 	pop	iy                         ; 041193 || 04119B FD E1       3428  			POP     IY
	jp	z,$040b9e                   ; 04119D || 	jp	z,$040b96                   ; 041195 || 04119D CA 9E 0B 04 3429  			JP      Z,XEQ			; Yes, it is, so carry on, all is good
	ld	a,$0d                       ; 0411A1 || 	ld	a,$0d                       ; 041199 || 0411A1 3E 0D       3430  			LD      A,13			; Otherwise throw the "No PROC" error
	jp	$0437b6                     ; 0411A3 || 	jp	$043760                     ; 04119B || 0411A3 C3 B6 37 04 3431  			JP      ERROR_
	pop	ix                         ; 0411A7 || 	pop	ix                         ; 04119F || 0411A7 DD E1       3433  UNSTK:			POP     IX			; Unstack a single local variable
	pop	bc                         ; 0411A9 || 	pop	bc                         ; 0411A1 || 0411A9 C1          3434  			POP     BC
	ld	a,b                         ; 0411AA || 	ld	a,b                         ; 0411A2 || 0411AA 78          3435  			LD      A,B
	or	a                           ; 0411AB || 	or	a                           ; 0411A3 || 0411AB B7          3436  			OR      A
	jp	m,$0411ba                   ; 0411AC || 	jp	m,$0411b2                   ; 0411A4 || 0411AC FA BA 11 04 3437  			JP      M,UNSTK1        	; Jump here if it is a string? (80h)
	pop	hl                         ; 0411B0 || 	pop	hl                         ; 0411A8 || 0411B0 E1          3438  			POP     HL			; Unstack a normal variable
	exx                            ; 0411B1 || 	exx                            ; 0411A9 || 0411B1 D9          3439  			EXX
	pop	hl                         ; 0411B2 || 	pop	hl                         ; 0411AA || 0411B2 E1          3440  			POP     HL
	exx                            ; 0411B3 || 	exx                            ; 0411AB || 0411B3 D9          3441  			EXX
	call	$041608                   ; 0411B4 || 	call	$0415d6                   ; 0411AC || 0411B4 CD 08 16 04 3442  			CALL    STORE			; TODO: Not sure why or where it is being stored at this point
	jr	$-$2e                       ; 0411B8 || 	jr	$-$2e                       ; 0411B0 || 0411B8 18 D0       3443  			JR      ENDPRO			; And loop back to ENDPRO
	ld	hl,$000000                  ; 0411BA || 	ld	hl,$000000                  ; 0411B2 || 0411BA 21 00 00 00 3445  UNSTK1:			LD      HL,0			; Unstack a string
	add	hl,sp                      ; 0411BE || 	add	hl,sp                      ; 0411B6 || 0411BE 39          3446  			ADD     HL,SP
	ld	e,c                         ; 0411BF || 	ld	e,c                         ; 0411B7 || 0411BF 59          3447  			LD      E,C
	call	$041636                   ; 0411C0 || 	call	$041604                   ; 0411B8 || 0411C0 CD 36 16 04 3448  			CALL    STORES			; TODO: Not sure why or where it is being stored at this point
	ld	sp,hl                       ; 0411C4 || 	ld	sp,hl                       ; 0411BC || 0411C4 F9          3449  			LD      SP,HL
	jr	$-$3b                       ; 0411C5 || 	jr	$-$3b                       ; 0411BD || 0411C5 18 C3       3450  			JR      ENDPRO
	call	$0418c4                   ; 0411C7 || 	call	$041892                   ; 0411BF || 0411C7 CD C4 18 04 3454  INPUTN:			CALL    CHNL            ;E = CHANNEL NUMBER
	call	$040a78                   ; 0411CB || 	call	$040a70                   ; 0411C3 || 0411CB CD 78 0A 04 3455  INPN1:			CALL    NXT
	cp	$2c                         ; 0411CF || 	cp	$2c                         ; 0411C7 || 0411CF FE 2C       3456  			CP      ','
	jp	nz,$040b9e                  ; 0411D1 || 	jp	nz,$040b96                  ; 0411C9 || 0411D1 C2 9E 0B 04 3457  			JP      NZ,XEQ
	inc	iy                         ; 0411D5 || 	inc	iy                         ; 0411CD || 0411D5 FD 23       3458  			INC     IY
	call	$040a78                   ; 0411D7 || 	call	$040a70                   ; 0411CF || 0411D7 CD 78 0A 04 3459  			CALL    NXT
	push	de                        ; 0411DB || 	push	de                        ; 0411D3 || 0411DB D5          3460  			PUSH    DE
	call	$040c96                   ; 0411DC || 	call	$040c8e                   ; 0411D4 || 0411DC CD 96 0C 04 3461  			CALL    VAR_
	pop	de                         ; 0411E0 || 	pop	de                         ; 0411D8 || 0411E0 D1          3462  			POP     DE
	push	af                        ; 0411E1 || 	push	af                        ; 0411D9 || 0411E1 F5          3463  			PUSH    AF              ;SAVE TYPE
	push	hl                        ; 0411E2 || 	push	hl                        ; 0411DA || 0411E2 E5          3464  			PUSH    HL              ;VARPTR
	or	a                           ; 0411E3 || 	or	a                           ; 0411DB || 0411E3 B7          3465  			OR      A
	jp	m,$041210                   ; 0411E4 || 	jp	m,$041208                   ; 0411DC || 0411E4 FA 10 12 04 3466  			JP      M,INPN2         ;STRING
	call	$04439a                   ; 0411E8 || 	call	$044333                   ; 0411E0 || 0411E8 CD 9A 43 04 3467  			CALL    OSBGET
	exx                            ; 0411EC || 	exx                            ; 0411E4 || 0411EC D9          3468  			EXX
	ld	l,a                         ; 0411ED || 	ld	l,a                         ; 0411E5 || 0411ED 6F          3469  			LD      L,A
	exx                            ; 0411EE || 	exx                            ; 0411E6 || 0411EE D9          3470  			EXX
	call	$04439a                   ; 0411EF || 	call	$044333                   ; 0411E7 || 0411EF CD 9A 43 04 3471  			CALL    OSBGET
	exx                            ; 0411F3 || 	exx                            ; 0411EB || 0411F3 D9          3472  			EXX
	ld	h,a                         ; 0411F4 || 	ld	h,a                         ; 0411EC || 0411F4 67          3473  			LD      H,A
	exx                            ; 0411F5 || 	exx                            ; 0411ED || 0411F5 D9          3474  			EXX
	call	$04439a                   ; 0411F6 || 	call	$044333                   ; 0411EE || 0411F6 CD 9A 43 04 3475  			CALL    OSBGET
	ld	l,a                         ; 0411FA || 	ld	l,a                         ; 0411F2 || 0411FA 6F          3476  			LD      L,A
	call	$04439a                   ; 0411FB || 	call	$044333                   ; 0411F3 || 0411FB CD 9A 43 04 3477  			CALL    OSBGET
	ld	h,a                         ; 0411FF || 	ld	h,a                         ; 0411F7 || 0411FF 67          3478  			LD      H,A
	call	$04439a                   ; 041200 || 	call	$044333                   ; 0411F8 || 041200 CD 9A 43 04 3479  			CALL    OSBGET
	ld	c,a                         ; 041204 || 	ld	c,a                         ; 0411FC || 041204 4F          3480  			LD      C,A
	pop	ix                         ; 041205 || 	pop	ix                         ; 0411FD || 041205 DD E1       3481  			POP     IX
	pop	af                         ; 041207 || 	pop	af                         ; 0411FF || 041207 F1          3482  			POP     AF              ;RESTORE TYPE
	push	de                        ; 041208 || 	push	de                        ; 041200 || 041208 D5          3483  			PUSH    DE              ;SAVE CHANNEL
	call	$041608                   ; 041209 || 	call	$0415d6                   ; 041201 || 041209 CD 08 16 04 3484  			CALL    STORE
	pop	de                         ; 04120D || 	pop	de                         ; 041205 || 04120D D1          3485  			POP     DE
	jr	$-$43                       ; 04120E || 	jr	$-$43                       ; 041206 || 04120E 18 BB       3486  			JR      INPN1
	ld	hl,$044a00                  ; 041210 || 	ld	hl,$044a00                  ; 041208 || 041210 21 00 4A 04 3487  INPN2:			LD      HL,ACCS
	call	$04439a                   ; 041214 || 	call	$044333                   ; 04120C || 041214 CD 9A 43 04 3488  INPN3:			CALL    OSBGET
	cp	$0d                         ; 041218 || 	cp	$0d                         ; 041210 || 041218 FE 0D       3489  			CP      CR
	jr	z,$+$06                     ; 04121A || 	jr	z,$+$06                     ; 041212 || 04121A 28 04       3490  			JR      Z,INPN4
	ld	(hl),a                      ; 04121C || 	ld	(hl),a                      ; 041214 || 04121C 77          3491  			LD      (HL),A
	inc	l                          ; 04121D || 	inc	l                          ; 041215 || 04121D 2C          3492  			INC     L
	jr	nz,$-$0a                    ; 04121E || 	jr	nz,$-$0a                    ; 041216 || 04121E 20 F4       3493  			JR      NZ,INPN3
	pop	ix                         ; 041220 || 	pop	ix                         ; 041218 || 041220 DD E1       3494  INPN4:			POP     IX
	pop	af                         ; 041222 || 	pop	af                         ; 04121A || 041222 F1          3495  			POP     AF
	push	de                        ; 041223 || 	push	de                        ; 04121B || 041223 D5          3496  			PUSH    DE
	ex	de,hl                       ; 041224 || 	ex	de,hl                       ; 04121C || 041224 EB          3497  			EX      DE,HL
	call	$041632                   ; 041225 || 	call	$041600                   ; 04121D || 041225 CD 32 16 04 3498  			CALL    STACCS
	pop	de                         ; 041229 || 	pop	de                         ; 041221 || 041229 D1          3499  			POP     DE
	jr	$-$5f                       ; 04122A || 	jr	$-$5f                       ; 041222 || 04122A 18 9F       3500  			JR      INPN1
	cp	$23                         ; 04122C || 	cp	$23                         ; 041224 || 04122C FE 23       3505  INPUT:			CP      '#'
	jr	z,$-$67                     ; 04122E || 	jr	z,$-$67                     ; 041226 || 04122E 28 97       3506  			JR      Z,INPUTN
	ld	c,$00                       ; 041230 || 	ld	c,$00                       ; 041228 || 041230 0E 00       3507  			LD      C,0             ;FLAG PROMPT
	cp	$86                         ; 041232 || 	cp	$86                         ; 04122A || 041232 FE 86       3508  			CP      LINE_
	jr	nz,$+$06                    ; 041234 || 	jr	nz,$+$06                    ; 04122C || 041234 20 04       3509  			JR      NZ,INPUT0
	inc	iy                         ; 041236 || 	inc	iy                         ; 04122E || 041236 FD 23       3510  			INC     IY              ;SKIP "LINE"
	ld	c,$80                       ; 041238 || 	ld	c,$80                       ; 041230 || 041238 0E 80       3511  			LD      C,80H
	ld	hl,$044b00                  ; 04123A || 	ld	hl,$044b00                  ; 041232 || 04123A 21 00 4B 04 3512  INPUT0:			LD      HL,BUFFER
	ld	(hl),$0d                    ; 04123E || 	ld	(hl),$0d                    ; 041236 || 04123E 36 0D       3513  			LD      (HL),CR         ;INITIALISE EMPTY
	call	$0417ac                   ; 041240 || 	call	$04177a                   ; 041238 || 041240 CD AC 17 04 3514  INPUT1:			CALL    TERMQ
	jp	z,$040b9e                   ; 041244 || 	jp	z,$040b96                   ; 04123C || 041244 CA 9E 0B 04 3515  			JP      Z,XEQ           ;DONE
	inc	iy                         ; 041248 || 	inc	iy                         ; 041240 || 041248 FD 23       3516  			INC     IY
	cp	$2c                         ; 04124A || 	cp	$2c                         ; 041242 || 04124A FE 2C       3517  			CP      ','
	jr	z,$+$5e                     ; 04124C || 	jr	z,$+$5e                     ; 041244 || 04124C 28 5C       3518  			JR      Z,INPUT3        ;SKIP COMMA
	cp	$3b                         ; 04124E || 	cp	$3b                         ; 041246 || 04124E FE 3B       3519  			CP      ';'
	jr	z,$+$5a                     ; 041250 || 	jr	z,$+$5a                     ; 041248 || 041250 28 58       3520  			JR      Z,INPUT3
	push	hl                        ; 041252 || 	push	hl                        ; 04124A || 041252 E5          3521  			PUSH    HL              ;SAVE BUFFER POINTER
	cp	$22                         ; 041253 || 	cp	$22                         ; 04124B || 041253 FE 22       3522  			CP      34		;ASCII ""
	jr	nz,$+$0e                    ; 041255 || 	jr	nz,$+$0e                    ; 04124D || 041255 20 0C       3523  			JR      NZ,INPUT6
	push	bc                        ; 041257 || 	push	bc                        ; 04124F || 041257 C5          3524  			PUSH    BC
	call	$04046c                   ; 041258 || 	call	$040467                   ; 041250 || 041258 CD 6C 04 04 3525  			CALL    CONS
	pop	bc                         ; 04125C || 	pop	bc                         ; 041254 || 04125C C1          3526  			POP     BC
	call	$041830                   ; 04125D || 	call	$0417fe                   ; 041255 || 04125D CD 30 18 04 3527  			CALL    PTEXT           ;PRINT PROMPT
	jr	$+$08                       ; 041261 || 	jr	$+$08                       ; 041259 || 041261 18 06       3528  			JR      INPUT9
	call	$0417d1                   ; 041263 || 	call	$04179f                   ; 04125B || 041263 CD D1 17 04 3529  INPUT6:			CALL    FORMAT          ;SPC, TAB, '
	jr	nz,$+$07                    ; 041267 || 	jr	nz,$+$07                    ; 04125F || 041267 20 05       3530  			JR      NZ,INPUT2
	pop	hl                         ; 041269 || 	pop	hl                         ; 041261 || 041269 E1          3531  INPUT9:			POP     HL
	set	0,c                        ; 04126A || 	set	0,c                        ; 041262 || 04126A CB C1       3532  			SET     0,C             ;FLAG NO PROMPT
	jr	$-$32                       ; 04126C || 	jr	$-$32                       ; 041264 || 04126C 18 CC       3533  			JR      INPUT0
	dec	iy                         ; 04126E || 	dec	iy                         ; 041266 || 04126E FD 2B       3534  INPUT2:			DEC     IY
	push	bc                        ; 041270 || 	push	bc                        ; 041268 || 041270 C5          3535  			PUSH    BC
	call	$040c96                   ; 041271 || 	call	$040c8e                   ; 041269 || 041271 CD 96 0C 04 3536  			CALL    VAR_
	pop	bc                         ; 041275 || 	pop	bc                         ; 04126D || 041275 C1          3537  			POP     BC
	pop	hl                         ; 041276 || 	pop	hl                         ; 04126E || 041276 E1          3538  			POP     HL
	push	af                        ; 041277 || 	push	af                        ; 04126F || 041277 F5          3539  			PUSH    AF              ;SAVE TYPE
	ld	a,(hl)                      ; 041278 || 	ld	a,(hl)                      ; 041270 || 041278 7E          3540  			LD      A,(HL)
	inc	hl                         ; 041279 || 	inc	hl                         ; 041271 || 041279 23          3541  			INC     HL
	cp	$0d                         ; 04127A || 	cp	$0d                         ; 041272 || 04127A FE 0D       3542  			CP      CR              ;BUFFER EMPTY?
	call	z,$0412ae                 ; 04127C || 	call	z,$0412a6                 ; 041274 || 04127C CC AE 12 04 3543  			CALL    Z,REFILL
	bit	7,c                        ; 041280 || 	bit	7,c                        ; 041278 || 041280 CB 79       3544  			BIT     7,C
	push	af                        ; 041282 || 	push	af                        ; 04127A || 041282 F5          3545  			PUSH    AF
	call	nz,$041852                ; 041283 || 	call	nz,$041820                ; 04127B || 041283 C4 52 18 04 3546  			CALL    NZ,LINES
	pop	af                         ; 041287 || 	pop	af                         ; 04127F || 041287 F1          3547  			POP     AF
	call	z,$04183f                 ; 041288 || 	call	z,$04180d                 ; 041280 || 041288 CC 3F 18 04 3548  			CALL    Z,FETCHS
	pop	af                         ; 04128C || 	pop	af                         ; 041284 || 04128C F1          3549  			POP     AF              ;RESTORE TYPE
	push	bc                        ; 04128D || 	push	bc                        ; 041285 || 04128D C5          3550  			PUSH    BC
	push	hl                        ; 04128E || 	push	hl                        ; 041286 || 04128E E5          3551  			PUSH    HL
	or	a                           ; 04128F || 	or	a                           ; 041287 || 04128F B7          3552  			OR      A
	jp	m,$0412a4                   ; 041290 || 	jp	m,$04129c                   ; 041288 || 041290 FA A4 12 04 3553  			JP      M,INPUT4        ;STRING
	push	af                        ; 041294 || 	push	af                        ; 04128C || 041294 F5          3554  			PUSH    AF
	push	ix                        ; 041295 || 	push	ix                        ; 04128D || 041295 DD E5       3555  			PUSH    IX
	call	$040673                   ; 041297 || 	call	$04066e                   ; 04128F || 041297 CD 73 06 04 3556  			CALL    VAL0
	pop	ix                         ; 04129B || 	pop	ix                         ; 041293 || 04129B DD E1       3557  			POP     IX
	pop	af                         ; 04129D || 	pop	af                         ; 041295 || 04129D F1          3558  			POP     AF
	call	$041608                   ; 04129E || 	call	$0415d6                   ; 041296 || 04129E CD 08 16 04 3559  			CALL    STORE
	jr	$+$06                       ; 0412A2 || 	jr	$+$06                       ; 04129A || 0412A2 18 04       3560  			JR      INPUT5
	call	$041632                   ; 0412A4 || 	call	$041600                   ; 04129C || 0412A4 CD 32 16 04 3561  INPUT4:			CALL    STACCS
	pop	hl                         ; 0412A8 || 	pop	hl                         ; 0412A0 || 0412A8 E1          3562  INPUT5:			POP     HL
	pop	bc                         ; 0412A9 || 	pop	bc                         ; 0412A1 || 0412A9 C1          3563  			POP     BC
	res	0,c                        ; 0412AA || 	res	0,c                        ; 0412A2 || 0412AA CB 81       3564  INPUT3:			RES     0,C
	jr	$-$6c                       ; 0412AC || 	jr	$-$6c                       ; 0412A4 || 0412AC 18 92       3565  			JR      INPUT1
	bit	0,c                        ; 0412AE || 	bit	0,c                        ; 0412A6 || 0412AE CB 41       3567  REFILL:			BIT     0,C
	jr	nz,$+$0e                    ; 0412B0 || 	jr	nz,$+$0e                    ; 0412A8 || 0412B0 20 0C       3568  			JR      NZ,REFIL0       ;NO PROMPT
	ld	a,$3f                       ; 0412B2 || 	ld	a,$3f                       ; 0412AA || 0412B2 3E 3F       3569  			LD      A,'?'
	call	$0439a5                   ; 0412B4 || 	call	$04394f                   ; 0412AC || 0412B4 CD A5 39 04 3570  			CALL    OUTCHR          ;PROMPT
	ld	a,$20                       ; 0412B8 || 	ld	a,$20                       ; 0412B0 || 0412B8 3E 20       3571  			LD      A,' '
	call	$0439a5                   ; 0412BA || 	call	$04394f                   ; 0412B2 || 0412BA CD A5 39 04 3572  			CALL    OUTCHR
	ld	hl,$044b00                  ; 0412BE || 	ld	hl,$044b00                  ; 0412B6 || 0412BE 21 00 4B 04 3573  REFIL0:			LD      HL,BUFFER
	push	bc                        ; 0412C2 || 	push	bc                        ; 0412BA || 0412C2 C5          3574  			PUSH    BC
	push	hl                        ; 0412C3 || 	push	hl                        ; 0412BB || 0412C3 E5          3575  			PUSH    HL
	push	ix                        ; 0412C4 || 	push	ix                        ; 0412BC || 0412C4 DD E5       3576  			PUSH    IX
	call	$043eb5                   ; 0412C6 || 	call	$043e5f                   ; 0412BE || 0412C6 CD B5 3E 04 3577  			CALL    OSLINE
	pop	ix                         ; 0412CA || 	pop	ix                         ; 0412C2 || 0412CA DD E1       3578  			POP     IX
	pop	hl                         ; 0412CC || 	pop	hl                         ; 0412C4 || 0412CC E1          3579  			POP     HL
	pop	bc                         ; 0412CD || 	pop	bc                         ; 0412C5 || 0412CD C1          3580  			POP     BC
	ld	b,a                         ; 0412CE || 	ld	b,a                         ; 0412C6 || 0412CE 47          3581  			LD      B,A             ;POS AT ENTRY
	xor	a                          ; 0412CF || 	xor	a                          ; 0412C7 || 0412CF AF          3582  			XOR     A
	ld	($044d3d),a                 ; 0412D0 || 	ld	($044d3d),a                 ; 0412C8 || 0412D0 32 3D 4D 04 3583  			LD      (COUNT),A
	cp	b                           ; 0412D4 || 	cp	b                           ; 0412CC || 0412D4 B8          3584  			CP      B
	ret	z                          ; 0412D5 || 	ret	z                          ; 0412CD || 0412D5 C8          3585  			RET     Z
	ld	a,(hl)                      ; 0412D6 || 	ld	a,(hl)                      ; 0412CE || 0412D6 7E          3586  REFIL1:			LD      A,(HL)
	cp	$0d                         ; 0412D7 || 	cp	$0d                         ; 0412CF || 0412D7 FE 0D       3587  			CP      CR
	ret	z                          ; 0412D9 || 	ret	z                          ; 0412D1 || 0412D9 C8          3588  			RET     Z
	inc	hl                         ; 0412DA || 	inc	hl                         ; 0412D2 || 0412DA 23          3589  			INC     HL
	djnz	$-$05                     ; 0412DB || 	djnz	$-$05                     ; 0412D3 || 0412DB 10 F9       3590  			DJNZ    REFIL1
	ret                            ; 0412DD || 	ret                            ; 0412D5 || 0412DD C9          3591  			RET
	cp	$23                         ; 0412DE || 	cp	$23                         ; 0412D6 || 0412DE FE 23       3595  READ:			CP      '#'
	jp	z,$0411c7                   ; 0412E0 || 	jp	z,$0411bf                   ; 0412D8 || 0412E0 CA C7 11 04 3596  			JP      Z,INPUTN
	ld	hl,($044d31)                ; 0412E4 || 	ld	hl,($044d31)                ; 0412DC || 0412E4 2A 31 4D 04 3597  			LD      HL,(DATPTR)
	ld	a,(hl)                      ; 0412E8 || 	ld	a,(hl)                      ; 0412E0 || 0412E8 7E          3598  READ0:			LD      A,(HL)
	inc	hl                         ; 0412E9 || 	inc	hl                         ; 0412E1 || 0412E9 23          3599  			INC     HL              ;SKIP COMMA OR "DATA"
	cp	$0d                         ; 0412EA || 	cp	$0d                         ; 0412E2 || 0412EA FE 0D       3600  			CP      CR              ;END OF DATA STMT?
	call	z,$041330                 ; 0412EC || 	call	z,$041328                 ; 0412E4 || 0412EC CC 30 13 04 3601  			CALL    Z,GETDAT
	push	hl                        ; 0412F0 || 	push	hl                        ; 0412E8 || 0412F0 E5          3602  			PUSH    HL
	call	$040c96                   ; 0412F1 || 	call	$040c8e                   ; 0412E9 || 0412F1 CD 96 0C 04 3603  			CALL    VAR_
	pop	hl                         ; 0412F5 || 	pop	hl                         ; 0412ED || 0412F5 E1          3604  			POP     HL
	or	a                           ; 0412F6 || 	or	a                           ; 0412EE || 0412F6 B7          3605  			OR      A
	jp	m,$041310                   ; 0412F7 || 	jp	m,$041308                   ; 0412EF || 0412F7 FA 10 13 04 3606  			JP      M,READ1         ;STRING
	push	hl                        ; 0412FB || 	push	hl                        ; 0412F3 || 0412FB E5          3607  			PUSH    HL
	ex	(sp),iy                     ; 0412FC || 	ex	(sp),iy                     ; 0412F4 || 0412FC FD E3       3608  			EX      (SP),IY
	push	af                        ; 0412FE || 	push	af                        ; 0412F6 || 0412FE F5          3609  			PUSH    AF              ;SAVE TYPE
	push	ix                        ; 0412FF || 	push	ix                        ; 0412F7 || 0412FF DD E5       3610  			PUSH    IX
	call	$040307                   ; 041301 || 	call	$040302                   ; 0412F9 || 041301 CD 07 03 04 3611  			CALL    EXPRN
	pop	ix                         ; 041305 || 	pop	ix                         ; 0412FD || 041305 DD E1       3612  			POP     IX
	pop	af                         ; 041307 || 	pop	af                         ; 0412FF || 041307 F1          3613  			POP     AF
	call	$041608                   ; 041308 || 	call	$0415d6                   ; 041300 || 041308 CD 08 16 04 3614  			CALL    STORE
	ex	(sp),iy                     ; 04130C || 	ex	(sp),iy                     ; 041304 || 04130C FD E3       3615  			EX      (SP),IY
	jr	$+$0b                       ; 04130E || 	jr	$+$0b                       ; 041306 || 04130E 18 09       3616  			JR      READ2
	call	$04183f                   ; 041310 || 	call	$04180d                   ; 041308 || 041310 CD 3F 18 04 3617  READ1:			CALL    FETCHS
	push	hl                        ; 041314 || 	push	hl                        ; 04130C || 041314 E5          3618  			PUSH    HL
	call	$041632                   ; 041315 || 	call	$041600                   ; 04130D || 041315 CD 32 16 04 3619  			CALL    STACCS
	pop	hl                         ; 041319 || 	pop	hl                         ; 041311 || 041319 E1          3620  READ2:			POP     HL
	ld	($044d31),hl                ; 04131A || 	ld	($044d31),hl                ; 041312 || 04131A 22 31 4D 04 3621  			LD      (DATPTR),HL
	call	$040a78                   ; 04131E || 	call	$040a70                   ; 041316 || 04131E CD 78 0A 04 3622  			CALL    NXT
	cp	$2c                         ; 041322 || 	cp	$2c                         ; 04131A || 041322 FE 2C       3623  			CP      ','
	jp	nz,$040b9e                  ; 041324 || 	jp	nz,$040b96                  ; 04131C || 041324 C2 9E 0B 04 3624  			JP      NZ,XEQ
	inc	iy                         ; 041328 || 	inc	iy                         ; 041320 || 041328 FD 23       3625  			INC     IY
	call	$040a78                   ; 04132A || 	call	$040a70                   ; 041322 || 04132A CD 78 0A 04 3626  			CALL    NXT
	jr	$-$46                       ; 04132E || 	jr	$-$46                       ; 041326 || 04132E 18 B8       3627  			JR      READ0
	ld	a,$dc                       ; 041330 || 	ld	a,$dc                       ; 041328 || 041330 3E DC       3629  GETDAT:			LD      A,DATA_
	call	$041880                   ; 041332 || 	call	$04184e                   ; 04132A || 041332 CD 80 18 04 3630  			CALL    SEARCH_EX
	inc	hl                         ; 041336 || 	inc	hl                         ; 04132E || 041336 23          3631  			INC     HL
	ret	nc                         ; 041337 || 	ret	nc                         ; 04132F || 041337 D0          3632  			RET     NC
	ld	a,$2a                       ; 041338 || 	ld	a,$2a                       ; 041330 || 041338 3E 2A       3633  			LD      A,42
	jp	$0437b6                     ; 04133A || 	jp	$043760                     ; 041332 || 04133A C3 B6 37 04 3634  ERROR4:			JP      ERROR_           ;"Out of DATA"
	call	$04030f                   ; 04133E || 	call	$04030a                   ; 041336 || 04133E CD 0F 03 04 3640  IF_:			CALL    EXPRI
	call	$0408e4                   ; 041342 || 	call	$0408df                   ; 04133A || 041342 CD E4 08 04 3641  			CALL    TEST
	jr	z,$+$1b                     ; 041346 || 	jr	z,$+$1b                     ; 04133E || 041346 28 19       3642  			JR      Z,IFNOT         ;FALSE
	ld	a,(iy)                      ; 041348 || 	ld	a,(iy)                      ; 041340 || 041348 FD 7E 00    3643  			LD      A,(IY)
	cp	$8c                         ; 04134B || 	cp	$8c                         ; 041343 || 04134B FE 8C       3644  			CP      THEN
	jp	nz,$040b9e                  ; 04134D || 	jp	nz,$040b96                  ; 041345 || 04134D C2 9E 0B 04 3645  			JP      NZ,XEQ
	inc	iy                         ; 041351 || 	inc	iy                         ; 041349 || 041351 FD 23       3646  			INC     IY              ;SKIP "THEN"
	call	$040a78                   ; 041353 || 	call	$040a70                   ; 04134B || 041353 CD 78 0A 04 3647  IF1:			CALL    NXT
	cp	$8d                         ; 041357 || 	cp	$8d                         ; 04134F || 041357 FE 8D       3648  			CP      LINO
	jp	nz,$040b9e                  ; 041359 || 	jp	nz,$040b96                  ; 041351 || 041359 C2 9E 0B 04 3649  			JP      NZ,XEQ          ;STATEMENT FOLLOWS
	jp	$040f33                     ; 04135D || 	jp	$040f2b                     ; 041355 || 04135D C3 33 0F 04 3650  			JP      GOTO_EX            ;LINE NO. FOLLOWS
	ld	a,(iy)                      ; 041361 || 	ld	a,(iy)                      ; 041359 || 041361 FD 7E 00    3651  IFNOT:			LD      A,(IY)
	cp	$0d                         ; 041364 || 	cp	$0d                         ; 04135C || 041364 FE 0D       3652  			CP      CR
	inc	iy                         ; 041366 || 	inc	iy                         ; 04135E || 041366 FD 23       3653  			INC     IY
	jp	z,$040b9a                   ; 041368 || 	jp	z,$040b92                   ; 041360 || 041368 CA 9A 0B 04 3654  			JP      Z,XEQ0          ;END OF LINE
	cp	$8b                         ; 04136C || 	cp	$8b                         ; 041364 || 04136C FE 8B       3655  			CP      ELSE_
	jr	nz,$-$0d                    ; 04136E || 	jr	nz,$-$0d                    ; 041366 || 04136E 20 F1       3656  			JR      NZ,IFNOT
	jr	$-$1d                       ; 041370 || 	jr	$-$1d                       ; 041368 || 041370 18 E1       3657  			JR      IF1
	call	$044428                   ; 041372 || 	call	$0443cc                   ; 04136A || 041372 CD 28 44 04 3661  CLS:		CALL    CLRSCN
	xor	a                          ; 041376 || 	xor	a                          ; 04136E || 041376 AF          3662  			XOR     A
	ld	($044d3d),a                 ; 041377 || 	ld	($044d3d),a                 ; 04136F || 041377 32 3D 4D 04 3663  			LD      (COUNT),A
	jp	$040b9e                     ; 04137B || 	jp	$040b96                     ; 041373 || 04137B C3 9E 0B 04 3664  			JP      XEQ
	call	$043de6                   ; 04137F || 	call	$043d90                   ; 041377 || 04137F CD E6 3D 04 3668  STOP:			CALL    TELL
	dec	c                          ; 041383 || 	dec	c                          ; 04137B || 041383 0D          3669  			DB	CR
	ld	a,(bc)                      ; 041384 || 	ld	a,(bc)                      ; 04137C || 041384 0A          3670  			DB	LF
	jp	m,$04cd00                   ; 041385 || 	jp	m,$aecd00                   ; 04137D || 041385 FA          3671  			DB	TSTOP
	ld	a,($38cd04)                 ; 041389
	ld	a,($9dcd04)                 ; 04138D
	add	hl,sp                      ; 041391
	inc	b                          ; 041392
	jp	$0430d6                     ; 041393 || 	jp	$043080                     ; 04138B || 041393 C3 D6 30 04 3676  			JP      CLOOP
	call	$043dd8                   ; 041397 || 	call	$043d82                   ; 04138F || 041397 CD D8 3D 04 3680  REPOR:			CALL    REPORT
	jp	$040b9e                     ; 04139B || 	jp	$040b96                     ; 041393 || 04139B C3 9E 0B 04 3681  			JP      XEQ
	call	$0438cc                   ; 04139F || 	call	$043876                   ; 041397 || 04139F CD CC 38 04 3685  CLR:			CALL    CLEAR
	ld	hl,($044d14)                ; 0413A3 || 	ld	hl,($044d14)                ; 04139B || 0413A3 2A 14 4D 04 3686  			LD      HL,(PAGE_)
	jr	$+$1b                       ; 0413A7 || 	jr	$+$1b                       ; 04139F || 0413A7 18 19       3687  			JR      RESTR1
	ld	hl,($044d14)                ; 0413A9 || 	ld	hl,($044d14)                ; 0413A1 || 0413A9 2A 14 4D 04 3691  RESTOR_EX:			LD      HL,(PAGE_)
	call	$0417ac                   ; 0413AD || 	call	$04177a                   ; 0413A5 || 0413AD CD AC 17 04 3692  			CALL    TERMQ
	jr	z,$+$11                     ; 0413B1 || 	jr	z,$+$11                     ; 0413A9 || 0413B1 28 0F       3693  			JR      Z,RESTR1
	call	$04032a                   ; 0413B3 || 	call	$040325                   ; 0413AB || 0413B3 CD 2A 03 04 3694  			CALL    ITEMI
	exx                            ; 0413B7 || 	exx                            ; 0413AF || 0413B7 D9          3695  			EXX
	call	$0439e5                   ; 0413B8 || 	call	$04398f                   ; 0413B0 || 0413B8 CD E5 39 04 3696  			CALL    FINDL           ;SEARCH FOR LINE
	ld	a,$29                       ; 0413BC || 	ld	a,$29                       ; 0413B4 || 0413BC 3E 29       3697  			LD      A,41
	jp	nz,$04133a                  ; 0413BE || 	jp	nz,$041332                  ; 0413B6 || 0413BE C2 3A 13 04 3698  			JP      NZ,ERROR4       ;"No such line"
	ld	a,$dc                       ; 0413C2 || 	ld	a,$dc                       ; 0413BA || 0413C2 3E DC       3699  RESTR1:			LD      A,DATA_
	call	$041880                   ; 0413C4 || 	call	$04184e                   ; 0413BC || 0413C4 CD 80 18 04 3700  			CALL    SEARCH_EX
	ld	($044d31),hl                ; 0413C8 || 	ld	($044d31),hl                ; 0413C0 || 0413C8 22 31 4D 04 3701  			LD      (DATPTR),HL
	jp	$040b9e                     ; 0413CC || 	jp	$040b96                     ; 0413C4 || 0413CC C3 9E 0B 04 3702  			JP      XEQ
	call	$0418b8                   ; 0413D0 || 	call	$041886                   ; 0413C8 || 0413D0 CD B8 18 04 3710  PTR_EX:			CALL    CHANEL
	call	$0417c2                   ; 0413D4 || 	call	$041790                   ; 0413CC || 0413D4 CD C2 17 04 3711  			CALL    EQUALS
	ld	a,e                         ; 0413D8 || 	ld	a,e                         ; 0413D0 || 0413D8 7B          3712  			LD      A,E
	push	af                        ; 0413D9 || 	push	af                        ; 0413D1 || 0413D9 F5          3713  			PUSH    AF
	call	$04030f                   ; 0413DA || 	call	$04030a                   ; 0413D2 || 0413DA CD 0F 03 04 3714  			CALL    EXPRI
	push	hl                        ; 0413DE || 	push	hl                        ; 0413D6 || 0413DE E5          3715  			PUSH    HL
	exx                            ; 0413DF || 	exx                            ; 0413D7 || 0413DF D9          3716  			EXX
	pop	de                         ; 0413E0 || 	pop	de                         ; 0413D8 || 0413E0 D1          3717  			POP     DE
	pop	af                         ; 0413E1 || 	pop	af                         ; 0413D9 || 0413E1 F1          3718  			POP     AF
	call	$0443ce                   ; 0413E2 || 	call	$044367                   ; 0413DA || 0413E2 CD CE 43 04 3719  			CALL    PUTPTR
	jp	$040b9e                     ; 0413E6 || 	jp	$040b96                     ; 0413DE || 0413E6 C3 9E 0B 04 3720  			JP      XEQ
	call	$0417c2                   ; 0413EA || 	call	$041790                   ; 0413E2 || 0413EA CD C2 17 04 3722  PAGEV_EX:			CALL    EQUALS
	call	$04030f                   ; 0413EE || 	call	$04030a                   ; 0413E6 || 0413EE CD 0F 03 04 3723  			CALL    EXPRI
	exx                            ; 0413F2 || 	exx                            ; 0413EA || 0413F2 D9          3724  			EXX
	ld	l,$00                       ; 0413F3 || 	ld	l,$00                       ; 0413EB || 0413F3 2E 00       3725  			LD      L,0
	ld	($044d14),hl                ; 0413F5 || 	ld	($044d14),hl                ; 0413ED || 0413F5 22 14 4D 04 3726  			LD      (PAGE_),HL
	jp	$040b9e                     ; 0413F9 || 	jp	$040b96                     ; 0413F1 || 0413F9 C3 9E 0B 04 3727  			JP      XEQ
	cp	$24                         ; 0413FD || 	cp	$24                         ; 0413F5 || 0413FD FE 24       3729  TIMEV_EX:			CP      '$'
	jr	z,$+$15                     ; 0413FF || 	jr	z,$+$15                     ; 0413F7 || 0413FF 28 13       3730  			JR      Z,TIMEVS_EX
	call	$0417c2                   ; 041401 || 	call	$041790                   ; 0413F9 || 041401 CD C2 17 04 3731  			CALL    EQUALS
	call	$04030f                   ; 041405 || 	call	$04030a                   ; 0413FD || 041405 CD 0F 03 04 3732  			CALL    EXPRI
	push	hl                        ; 041409 || 	push	hl                        ; 041401 || 041409 E5          3733  			PUSH    HL
	exx                            ; 04140A || 	exx                            ; 041402 || 04140A D9          3734  			EXX
	pop	de                         ; 04140B || 	pop	de                         ; 041403 || 04140B D1          3735  			POP     DE
	call	$043eed                   ; 04140C || 	call	$043e97                   ; 041404 || 04140C CD ED 3E 04 3736  			CALL    PUTIME
	jp	$040b9e                     ; 041410 || 	jp	$040b96                     ; 041408 || 041410 C3 9E 0B 04 3737  			JP      XEQ
	inc	iy                         ; 041414 || 	inc	iy                         ; 04140C || 041414 FD 23       3739  TIMEVS_EX:			INC     IY              ;SKIP '$'
	call	$0417c2                   ; 041416 || 	call	$041790                   ; 04140E || 041416 CD C2 17 04 3740  			CALL    EQUALS
	call	$04031a                   ; 04141A || 	call	$040315                   ; 041412 || 04141A CD 1A 03 04 3741  			CALL    EXPRS
	call	$0449a2                   ; 04141E || 	call	$0443b7                   ; 041416 || 04141E CD A2 49 04 3742  			CALL    PUTIMS
	jp	$040b9e                     ; 041422 || 	jp	$040b96                     ; 04141A || 041422 C3 9E 0B 04 3743  			JP      XEQ
	call	$0417c2                   ; 041426 || 	call	$041790                   ; 04141E || 041426 CD C2 17 04 3745  LOMEMV_EX:			CALL    EQUALS
	call	$04030f                   ; 04142A || 	call	$04030a                   ; 041422 || 04142A CD 0F 03 04 3746  			CALL    EXPRI
	call	$0438cc                   ; 04142E || 	call	$043876                   ; 041426 || 04142E CD CC 38 04 3747  			CALL    CLEAR
	exx                            ; 041432 || 	exx                            ; 04142A || 041432 D9          3748  			EXX
	ld	($044d1a),hl                ; 041433 || 	ld	($044d1a),hl                ; 04142B || 041433 22 1A 4D 04 3749  			LD      (LOMEM),HL
	ld	($044d1d),hl                ; 041437                                         || 041437 22 1D 4D 04 3750  			LD      (FREE),HL
	jp	$040b9e                     ; 04143B                                         || 04143B C3 9E 0B 04 3751  			JP      XEQ
	call	$0417c2                   ; 04143F                                         || 04143F CD C2 17 04 3753  HIMEMV_EX:			CALL    EQUALS			; Check for '=' and throw an error if not found
	call	$04030f                   ; 041443                                         || 041443 CD 0F 03 04 3754  			CALL    EXPRI			; Load the expression into registers
	ld	a,l                         ; 041447                                         || 041447 7D          3755  			LD	A,L			;  A: The MSB of the 24-bit value
	exx                            ; 041448                                         || 041448 D9          3756  			EXX				; HL: The LSW of the 24-bit value
	ld	($044d4a),hl                ; 041449                                         || 041449 22 4A 4D 04 3757  			LD	(R0),HL
	ld	($044d4c),a                 ; 04144D                                         || 04144D 32 4C 4D 04 3758  			LD	(R0+2),A
	ld	hl,($044d1d)                ; 041451                                         || 041451 2A 1D 4D 04 3759  			LD	HL,(FREE)
	ld	de,$000100                  ; 041455                                         || 041455 11 00 01 00 3760  			LD      DE,256
	add	hl,de                      ; 041459                                         || 041459 19          3761  			ADD	HL,DE
	ex	de,hl                       ; 04145A                                         || 04145A EB          3762  			EX	DE,HL			; DE: FREE + 256
	ld	hl,($044d4a)                ; 04145B                                         || 04145B 2A 4A 4D 04 3763  			LD	HL,(R0)			; HL: The passed expression
	xor	a                          ; 04145F                                         || 04145F AF          3764  			XOR     A
	sbc	hl,de                      ; 041460                                         || 041460 ED 52       3765  			SBC     HL,DE
	add	hl,de                      ; 041462                                         || 041462 19          3766  			ADD     HL,DE			; Do a bounds check
	jp	c,$0437b6                   ; 041463 || 	jp	c,$043760                   ; 04144A || 041463 DA B6 37 04 3767  			JP      C,ERROR_         	; Throw the error: "No room"
	ld	de,($044d20)                ; 041467 || 	ld	de,($044d20)                ; 04144E || 041467 ED 5B 20 4D 3768  			LD      DE,(HIMEM)
	ld	($044d20),hl                ; 04146C || 	ld	($044d20),hl                ; 041453 || 04146C 22 20 4D 04 3769  			LD      (HIMEM),HL
	ex	de,hl                       ; 041470 || 	ex	de,hl                       ; 041457 || 041470 EB          3770  			EX      DE,HL
	sbc	hl,sp                      ; 041471 || 	sbc	hl,sp                      ; 041458 || 041471 ED 72       3771  			SBC     HL,SP			; Adjust the stack
	jp	nz,$040b9e                  ; 041473 || 	jp	nz,$040b96                  ; 04145A || 041473 C2 9E 0B 04 3772  			JP      NZ,XEQ
	ex	de,hl                       ; 041477 || 	ex	de,hl                       ; 04145E || 041477 EB          3773  			EX      DE,HL
	ld	sp,hl                       ; 041478 || 	ld	sp,hl                       ; 04145F || 041478 F9          3774  			LD      SP,HL           	; Load the SP
	jp	$040b9e                     ; 041479 || 	jp	$040b96                     ; 041460 || 041479 C3 9E 0B 04 3775  			JP      XEQ
	call	$04030f                   ; 04147D || 	call	$04030a                   ; 041464 || 04147D CD 0F 03 04 3779  WIDTHV:			CALL    EXPRI
	exx                            ; 041481 || 	exx                            ; 041468 || 041481 D9          3780  			EXX
	ld	a,l                         ; 041482 || 	ld	a,l                         ; 041469 || 041482 7D          3781  			LD      A,L
	ld	($044d3e),a                 ; 041483 || 	ld	($044d3e),a                 ; 04146A || 041483 32 3E 4D 04 3782  			LD      (WIDTH),A
	jp	$040b9e                     ; 041487 || 	jp	$040b96                     ; 04146E || 041487 C3 9E 0B 04 3783  			JP      XEQ
	inc	iy                         ; 04148B || 	inc	iy                         ; 041472 || 04148B FD 23       3789  TRACE_EX:			INC     IY
	ld	hl,$000000                  ; 04148D || 	ld	hl,$000000                  ; 041474 || 04148D 21 00 00 00 3790  			LD      HL,0
	cp	$ee                         ; 041491 || 	cp	$ee                         ; 041478 || 041491 FE EE       3791  			CP      TON
	jr	z,$+$0d                     ; 041493 || 	jr	z,$+$0d                     ; 04147A || 041493 28 0B       3792  			JR      Z,TRACE0
	cp	$87                         ; 041495 || 	cp	$87                         ; 04147C || 041495 FE 87       3793  			CP      OFF_
	jr	z,$+$0a                     ; 041497 || 	jr	z,$+$0a                     ; 04147E || 041497 28 08       3794  			JR      Z,TRACE1
	dec	iy                         ; 041499 || 	dec	iy                         ; 041480 || 041499 FD 2B       3795  			DEC     IY
	call	$04030f                   ; 04149B || 	call	$04030a                   ; 041482 || 04149B CD 0F 03 04 3796  			CALL    EXPRI
	exx                            ; 04149F || 	exx                            ; 041486 || 04149F D9          3797  			EXX
	dec	hl                         ; 0414A0 || 	dec	hl                         ; 041487 || 0414A0 2B          3798  TRACE0:			DEC     HL
	ld	($044d26),hl                ; 0414A1 || 	ld	($044d26),hl                ; 041488 || 0414A1 22 26 4D 04 3799  TRACE1:			LD      (TRACEN),HL
	jp	$040b9e                     ; 0414A5 || 	jp	$040b96                     ; 04148C || 0414A5 C3 9E 0B 04 3800  			JP      XEQ
	ld	ix,$044b00                  ; 0414A9                                         || 0414A9 DD 21 00 4B 3804  VDU:			LD	IX,BUFFER		; Storage for the VDU stream
	push	ix                        ; 0414AE                                         || 0414AE DD E5       3805  VDU1:			PUSH	IX
	call	$04030f                   ; 0414B0                                         || 0414B0 CD 0F 03 04 3806  			CALL    EXPRI			; Fetch the VDU character
	pop	ix                         ; 0414B4                                         || 0414B4 DD E1       3807  			POP	IX
	exx                            ; 0414B6                                         || 0414B6 D9          3808  			EXX
	ld	(ix),l                      ; 0414B7                                         || 0414B7 DD 75 00    3809  			LD	(IX+0),L		; Write out the character to the buffer
	inc	ix                         ; 0414BA                                         || 0414BA DD 23       3810  			INC	IX
	ld	a,(iy)                      ; 0414BC                                         || 0414BC FD 7E 00    3811  			LD      A,(IY)			;  A: The separator character
	cp	$2c                         ; 0414BF                                         || 0414BF FE 2C       3812  			CP      ','			; Is it a comma?
	jr	z,$+$0b                     ; 0414C1                                         || 0414C1 28 09       3813  			JR      Z,VDU2			; Yes, so it's a byte value - skip to next expression
	cp	$3b                         ; 0414C3                                         || 0414C3 FE 3B       3814  			CP      ';'			; Is it a semicolon?
	jr	nz,$+$09                    ; 0414C5                                         || 0414C5 20 07       3815  			JR      NZ,VDU3			; No, so skip to the next expression
	ld	(ix),h                      ; 0414C7                                         || 0414C7 DD 74 00    3816  			LD	(IX+0),H		; Write out the high byte to the buffer
	inc	ix                         ; 0414CA                                         || 0414CA DD 23       3817  			INC	IX
	inc	iy                         ; 0414CC                                         || 0414CC FD 23       3818  VDU2:			INC     IY			; Skip to the next character
	call	$0417ac                   ; 0414CE                                         || 0414CE CD AC 17 04 3819  VDU3:			CALL    TERMQ			; Skip past white space
	jr	nz,$-$24                    ; 0414D2                                         || 0414D2 20 DA       3820  			JR      NZ,VDU1			; Loop unti reached end of the VDU command
	ld	a,ixl                       ; 0414D4                                         || 0414D4 DD 7D       3821  			LD	A,IXL			;  A: Number of bytes to write out
	or	a                           ; 0414D6                                         || 0414D6 B7          3822  			OR	A
	jr	z,$+$0d                     ; 0414D7                                         || 0414D7 28 0B       3823  			JR 	Z,VDU4			; No bytes to write, so skip the next bit
	ld	hl,$044b00                  ; 0414D9                                         || 0414D9 21 00 4B 04 3824  			LD	HL,BUFFER		; HL: Start of stream
	ld	bc,$000000                  ; 0414DD                                         || 0414DD 01 00 00 00 3825  			LD	BC,0
	ld	c,a                         ; 0414E1                                         || 0414E1 4F          3826  			LD	C,A			; BC: Number of bytes to write out
	rst.lil	$18                    ; 0414E2                                         || 0414E2 5B DF       3827  			RST.LIL	18h			; Output the buffer to MOS
	jp	$040b9e                     ; 0414E4 || 	jp	$040b96                     ; 0414B2 || 0414E4 C3 9E 0B 04 3828  VDU4:			JP      XEQ
	call	$0418b8                   ; 0414E8 || 	call	$041886                   ; 0414B6 || 0414E8 CD B8 18 04 3832  CLOSE:			CALL    CHANEL			; Fetch the channel number
	call	$044392                   ; 0414EC || 	call	$04432b                   ; 0414BA || 0414EC CD 92 43 04 3833  			CALL    OSSHUT			; Close the channel
	jp	$040b9e                     ; 0414F0 || 	jp	$040b96                     ; 0414BE || 0414F0 C3 9E 0B 04 3834  			JP      XEQ
	call	$0418b8                   ; 0414F4 || 	call	$041886                   ; 0414C2 || 0414F4 CD B8 18 04 3838  BPUT:			CALL    CHANEL          	; Fetch the channel number
	push	de                        ; 0414F8 || 	push	de                        ; 0414C6 || 0414F8 D5          3839  			PUSH    DE			; DE: Channel number
	call	$040a2a                   ; 0414F9 || 	call	$040a22                   ; 0414C7 || 0414F9 CD 2A 0A 04 3840  			CALL    COMMA			; Skip to the next expression
	call	$04030f                   ; 0414FD || 	call	$04030a                   ; 0414CB || 0414FD CD 0F 03 04 3841  			CALL    EXPRI           	; Feth the data
	exx                            ; 041501 || 	exx                            ; 0414CF || 041501 D9          3842  			EXX
	ld	a,l                         ; 041502 || 	ld	a,l                         ; 0414D0 || 041502 7D          3843  			LD      A,L			; A: The byte to write
	pop	de                         ; 041503 || 	pop	de                         ; 0414D1 || 041503 D1          3844  			POP     DE
	call	$0443a2                   ; 041504 || 	call	$04433b                   ; 0414D2 || 041504 CD A2 43 04 3845  			CALL    OSBPUT			; Write the byte out
	jp	$040b9e                     ; 041508 || 	jp	$040b96                     ; 0414D6 || 041508 C3 9E 0B 04 3846  			JP      XEQ
	call	$04030f                   ; 04150C || 	call	$04030a                   ; 0414DA || 04150C CD 0F 03 04 3859  CALL_:			CALL    EXPRI           	; Fetch the address
	ld	a,l                         ; 041510 || 	ld	a,l                         ; 0414DE || 041510 7D          3860  			LD	A,L			;  A: MSB of address
	exx                            ; 041511 || 	exx                            ; 0414DF || 041511 D9          3861  			EXX
	ld	($044d4a),hl                ; 041512 || 	ld	($044d4a),hl                ; 0414E0 || 041512 22 4A 4D 04 3862  			LD	(R0+0),HL		; HL: LSW of address
	ld	($044d4c),a                 ; 041516 || 	ld	($044d4c),a                 ; 0414E4 || 041516 32 4C 4D 04 3863  			LD	(R0+2),A
	ld	b,$00                       ; 04151A || 	ld	b,$00                       ; 0414E8 || 04151A 06 00       3864  			LD      B,0             	;  B: The parameter counter
	ld	de,$044b00                  ; 04151C || 	ld	de,$044b00                  ; 0414EA || 04151C 11 00 4B 04 3865  			LD      DE,BUFFER       	; DE: Vector
	call	$040a78                   ; 041520 || 	call	$040a70                   ; 0414EE || 041520 CD 78 0A 04 3867  CALL1:			CALL    NXT			; Skip whitespace
	cp	$2c                         ; 041524 || 	cp	$2c                         ; 0414F2 || 041524 FE 2C       3868  			CP      ','			; Check for comma
	jr	nz,$+$1d                    ; 041526 || 	jr	nz,$+$1d                    ; 0414F4 || 041526 20 1B       3869  			JR      NZ,CALL2		; If no more parameters, then jump here
	inc	iy                         ; 041528 || 	inc	iy                         ; 0414F6 || 041528 FD 23       3870  			INC     IY			; Skip to the next character
	inc	b                          ; 04152A || 	inc	b                          ; 0414F8 || 04152A 04          3871  			INC     B			; Increment the parameter count
	call	$040a78                   ; 04152B || 	call	$040a70                   ; 0414F9 || 04152B CD 78 0A 04 3872  			CALL    NXT			; Skip whitespace
	push	bc                        ; 04152F || 	push	bc                        ; 0414FD || 04152F C5          3873  			PUSH    BC
	push	de                        ; 041530 || 	push	de                        ; 0414FE || 041530 D5          3874  			PUSH    DE
	call	$040c96                   ; 041531 || 	call	$040c8e                   ; 0414FF || 041531 CD 96 0C 04 3875  			CALL    VAR_
	pop	de                         ; 041535 || 	pop	de                         ; 041503 || 041535 D1          3876  			POP     DE
	pop	bc                         ; 041536 || 	pop	bc                         ; 041504 || 041536 C1          3877  			POP     BC
	inc	de                         ; 041537 || 	inc	de                         ; 041505 || 041537 13          3878  			INC     DE
	ld	(de),a                      ; 041538 || 	ld	(de),a                      ; 041506 || 041538 12          3879  			LD      (DE),A			; Save the parameter type
	inc	de                         ; 041539 || 	inc	de                         ; 041507 || 041539 13          3880  			INC     DE
	ex	de,hl                       ; 04153A || 	ex	de,hl                       ; 041508 || 04153A EB          3881  			EX      DE,HL
	ld	(hl),de                     ; 04153B || 	ld	(hl),de                     ; 041509 || 04153B ED 1F       3882  			LD	(HL),DE			; Save the parameter address (3 bytes)
	inc	hl                         ; 04153D || 	inc	hl                         ; 04150B || 04153D 23          3883  			INC	HL
	inc	hl                         ; 04153E || 	inc	hl                         ; 04150C || 04153E 23          3884  			INC	HL
	inc	hl                         ; 04153F || 	inc	hl                         ; 04150D || 04153F 23          3885  			INC	HL
	ex	de,hl                       ; 041540 || 	ex	de,hl                       ; 04150E || 041540 EB          3886  			EX      DE,HL
	jr	$-$21                       ; 041541 || 	jr	$-$21                       ; 04150F || 041541 18 DD       3887  			JR      CALL1
	ld	a,b                         ; 041543 || 	ld	a,b                         ; 041511 || 041543 78          3889  CALL2:			LD      A,B
	ld	($044b00),a                 ; 041544 || 	ld	($044b00),a                 ; 041512 || 041544 32 00 4B 04 3890  			LD      (BUFFER),A      	; Save the parameter count
	ld	hl,($044d4a)                ; 041548 || 	ld	hl,($044d4a)                ; 041516 || 041548 2A 4A 4D 04 3891  			LD	HL,(R0)			; HL: Address of the code
	call	$041566                   ; 04154C || 	call	$041534                   ; 04151A || 04154C CD 66 15 04 3892  			CALL    USR1			; And call it
	jp	$040b9e                     ; 041550 || 	jp	$040b96                     ; 04151E || 041550 C3 9E 0B 04 3893  			JP      XEQ
	call	$04032a                   ; 041554 || 	call	$040325                   ; 041522 || 041554 CD 2A 03 04 3897  USR:			CALL    ITEMI			; Evaluate the expression
	ld	a,l                         ; 041558 || 	ld	a,l                         ; 041526 || 041558 7D          3898  			LD	A,L			;  A: MSB of address
	exx                            ; 041559 || 	exx                            ; 041527 || 041559 D9          3899  			EXX
	ld	($044d4a),hl                ; 04155A || 	ld	($044d4a),hl                ; 041528 || 04155A 22 4A 4D 04 3900  			LD	(R0+0),HL		; HL: LSW of address
	ld	($044d4c),a                 ; 04155E || 	ld	($044d4c),a                 ; 04152C || 04155E 32 4C 4D 04 3901  			LD	(R0+2),A
	ld	hl,($044d4a)                ; 041562 || 	ld	hl,($044d4a)                ; 041530 || 041562 2A 4A 4D 04 3902  			LD	HL,(R0)			; Get the 24-bit address in HL
	push	hl                        ; 041566 || 	push	hl                        ; 041534 || 041566 E5          3904  USR1:			PUSH    HL              	; Address on stack
	ex	(sp),iy                     ; 041567 || 	ex	(sp),iy                     ; 041535 || 041567 FD E3       3905  			EX      (SP),IY
	inc	h                          ; 041569 || 	inc	h                          ; 041537 || 041569 24          3906  			INC     H               	; Check for PAGE &00FFxx
	or	h                           ; 04156A || 	or	h                           ; 041538 || 04156A B4          3907  			OR	H
	ld	hl,$0415d5                  ; 04156B || 	ld	hl,$0415a3                  ; 041539 || 04156B 21 D5 15 04 3908  			LD      HL,USR2         	; Return address
	push	hl                        ; 04156F || 	push	hl                        ; 04153D || 04156F E5          3909  			PUSH    HL
	ld	ix,$044c00                  ; 041570 || 	ld	ix,$044c00                  ; 04153E || 041570 DD 21 00 4C 3910  			LD      IX,STAVAR
	call	z,$044358                 ; 041575 || 	call	z,$0442f1                 ; 041543 || 041575 CC 58 43 04 3911  			CALL    Z,OSCALL        	; Intercept &00FFxx
	ld	c,(ix+$18)                  ; 041579 || 	ld	c,(ix+$18)                  ; 041547 || 041579 DD 4E 18    3913  			LD      C, (IX+24)		; F%
	push	bc                        ; 04157C || 	push	bc                        ; 04154A || 04157C C5          3914  			PUSH    BC
	ld	a,(ix+$08)                  ; 04157D || 	ld	a,(ix+$08)                  ; 04154B || 04157D DD 7E 08    3916  			LD	A, (IX+8)		; B% -> MSW
	ld	($044d4b),a                 ; 041580 || 	ld	($044d4b),a                 ; 04154E || 041580 32 4B 4D 04 3917  			LD	(R0+1), A
	ld	a,(ix+$09)                  ; 041584 || 	ld	a,(ix+$09)                  ; 041552 || 041584 DD 7E 09    3918  			LD	A, (IX+9)
	ld	($044d4c),a                 ; 041587 || 	ld	($044d4c),a                 ; 041555 || 041587 32 4C 4D 04 3919  			LD	(R0+2), A
	ld	a,(ix+$0c)                  ; 04158B || 	ld	a,(ix+$0c)                  ; 041559 || 04158B DD 7E 0C    3920  			LD	A, (IX+12)		; C% -> LSB
	ld	($044d4a),a                 ; 04158E || 	ld	($044d4a),a                 ; 04155C || 04158E 32 4A 4D 04 3921  			LD	(R0+0), A
	ld	bc,($044d4a)                ; 041592 || 	ld	bc,($044d4a)                ; 041560 || 041592 ED 4B 4A 4D 3922  			LD	BC, (R0)
	ld	a,(ix+$10)                  ; 041597 || 	ld	a,(ix+$10)                  ; 041565 || 041597 DD 7E 10    3924  			LD	A, (IX+16)		; D% -> MSW
	ld	($044d4b),a                 ; 04159A || 	ld	($044d4b),a                 ; 041568 || 04159A 32 4B 4D 04 3925  			LD	(R0+1), A
	ld	a,(ix+$11)                  ; 04159E || 	ld	a,(ix+$11)                  ; 04156C || 04159E DD 7E 11    3926  			LD	A, (IX+17)
	ld	($044d4c),a                 ; 0415A1 || 	ld	($044d4c),a                 ; 04156F || 0415A1 32 4C 4D 04 3927  			LD	(R0+2), A
	ld	a,(ix+$14)                  ; 0415A5 || 	ld	a,(ix+$14)                  ; 041573 || 0415A5 DD 7E 14    3928  			LD	A, (IX+20)		; E% -> LSB
	ld	($044d4a),a                 ; 0415A8 || 	ld	($044d4a),a                 ; 041576 || 0415A8 32 4A 4D 04 3929  			LD	(R0+0), A
	ld	de,($044d4a)                ; 0415AC || 	ld	de,($044d4a)                ; 04157A || 0415AC ED 5B 4A 4D 3930  			LD	DE, (R0)
	ld	a,(ix+$20)                  ; 0415B1 || 	ld	a,(ix+$20)                  ; 04157F || 0415B1 DD 7E 20    3932  			LD	A, (IX+32)		; H% -> MSW
	ld	($044d4b),a                 ; 0415B4 || 	ld	($044d4b),a                 ; 041582 || 0415B4 32 4B 4D 04 3933  			LD	(R0+1), A
	ld	a,(ix+$21)                  ; 0415B8 || 	ld	a,(ix+$21)                  ; 041586 || 0415B8 DD 7E 21    3934  			LD	A, (IX+33)
	ld	($044d4c),a                 ; 0415BB || 	ld	($044d4c),a                 ; 041589 || 0415BB 32 4C 4D 04 3935  			LD	(R0+2), A
	ld	a,(ix+$30)                  ; 0415BF || 	ld	a,(ix+$30)                  ; 04158D || 0415BF DD 7E 30    3936  			LD	A, (IX+48)		; L% -> LSB
	ld	($044d4a),a                 ; 0415C2 || 	ld	($044d4a),a                 ; 041590 || 0415C2 32 4A 4D 04 3937  			LD	(R0+0), A
	ld	hl,($044d4a)                ; 0415C6 || 	ld	hl,($044d4a)                ; 041594 || 0415C6 2A 4A 4D 04 3938  			LD	HL, (R0)
	pop	af                         ; 0415CA || 	pop	af                         ; 041598 || 0415CA F1          3940  			POP     AF			; F%
	ld	a,(ix+$04)                  ; 0415CB || 	ld	a,(ix+$04)                  ; 041599 || 0415CB DD 7E 04    3941  			LD      A, (IX+4)        	; A%
	ld	ix,$044b00                  ; 0415CE || 	ld	ix,$044b00                  ; 04159C || 0415CE DD 21 00 4B 3943  			LD      IX,BUFFER
	jp	(iy)                        ; 0415D3 || 	jp	(iy)                        ; 0415A1 || 0415D3 FD E9       3944  			JP      (IY)            	; Off to user routine
	pop	iy                         ; 0415D5 || 	pop	iy                         ; 0415A3 || 0415D5 FD E1       3946  USR2:			POP     IY
	xor	a                          ; 0415D7 || 	xor	a                          ; 0415A5 || 0415D7 AF          3947  			XOR     A
	ld	c,a                         ; 0415D8 || 	ld	c,a                         ; 0415A6 || 0415D8 4F          3948  			LD      C,A
	ret                            ; 0415D9 || 	ret                            ; 0415A7 || 0415D9 C9          3949  			RET
	call	$04030f                   ; 0415DA || 	call	$04030a                   ; 0415A8 || 0415DA CD 0F 03 04 3953  PUT:			CALL    EXPRI           ;PORT ADDRESS
	exx                            ; 0415DE || 	exx                            ; 0415AC || 0415DE D9          3954  			EXX
	push	hl                        ; 0415DF || 	push	hl                        ; 0415AD || 0415DF E5          3955  			PUSH    HL
	call	$040a2a                   ; 0415E0 || 	call	$040a22                   ; 0415AE || 0415E0 CD 2A 0A 04 3956  			CALL    COMMA
	call	$04030f                   ; 0415E4 || 	call	$04030a                   ; 0415B2 || 0415E4 CD 0F 03 04 3957  			CALL    EXPRI           ;DATA
	exx                            ; 0415E8 || 	exx                            ; 0415B6 || 0415E8 D9          3958  			EXX
	pop	bc                         ; 0415E9 || 	pop	bc                         ; 0415B7 || 0415E9 C1          3959  			POP     BC
	out	(bc),l                     ; 0415EA || 	out	(bc),l                     ; 0415B8 || 0415EA ED 69       3960  			OUT     (C),L           ;OUTPUT TO PORT BC
	jp	$040b9e                     ; 0415EC || 	jp	$040b96                     ; 0415BA || 0415EC C3 9E 0B 04 3961  			JP      XEQ
	call	$043a90                   ; 0415F0 || 	call	$043a3a                   ; 0415BE || 0415F0 CD 90 3A 04 3970  ASSIGN:			CALL    GETVAR          	; Try to get the variable
	ret	c                          ; 0415F4 || 	ret	c                          ; 0415C2 || 0415F4 D8          3971  			RET     C               	; Return with C if it is an illegal variable
	call	nz,$043a7f                ; 0415F5 || 	call	nz,$043a29                ; 0415C3 || 0415F5 C4 7F 3A 04 3972  			CALL    NZ,PUTVAR		; If it does not exist, then create the variable
	or	a                           ; 0415F9 || 	or	a                           ; 0415C7 || 0415F9 B7          3973  			OR      A
	ret	m                          ; 0415FA || 	ret	m                          ; 0415C8 || 0415FA F8          3974  			RET     M               	; Return if type is string (81h)
	push	af                        ; 0415FB || 	push	af                        ; 0415C9 || 0415FB F5          3975  			PUSH    AF              	; It's a numeric type from this point on
	call	$0417c2                   ; 0415FC || 	call	$041790                   ; 0415CA || 0415FC CD C2 17 04 3976  			CALL    EQUALS			; Check if the variable is followed by an '=' symbol; this will throw a 'Mistake' error if not
	push	hl                        ; 041600 || 	push	hl                        ; 0415CE || 041600 E5          3977  			PUSH    HL
	call	$040307                   ; 041601 || 	call	$040302                   ; 0415CF || 041601 CD 07 03 04 3978  			CALL    EXPRN
	pop	ix                         ; 041605 || 	pop	ix                         ; 0415D3 || 041605 DD E1       3979  			POP     IX
	pop	af                         ; 041607 || 	pop	af                         ; 0415D5 || 041607 F1          3980  			POP     AF
	bit	0,a                        ; 041608 || 	bit	0,a                        ; 0415D6 || 041608 CB 47       3981  STORE:			BIT     0,A
	jr	z,$+$15                     ; 04160A || 	jr	z,$+$15                     ; 0415D8 || 04160A 28 13       3982  			JR      Z,STOREI
	cp	a                           ; 04160C || 	cp	a                           ; 0415DA || 04160C BF          3983  			CP      A               	; Set the variable to 0
	ld	(ix+$04),c                  ; 04160D || 	ld	(ix+$04),c                  ; 0415DB || 04160D DD 71 04    3984  STORE5:			LD      (IX+4),C
	exx                            ; 041610 || 	exx                            ; 0415DE || 041610 D9          3985  STORE4:			EXX
	ld	(ix),l                      ; 041611 || 	ld	(ix),l                      ; 0415DF || 041611 DD 75 00    3986  			LD      (IX+0),L
	ld	(ix+$01),h                  ; 041614 || 	ld	(ix+$01),h                  ; 0415E2 || 041614 DD 74 01    3987  			LD      (IX+1),H
	exx                            ; 041617 || 	exx                            ; 0415E5 || 041617 D9          3988  			EXX
	ld	(ix+$02),l                  ; 041618 || 	ld	(ix+$02),l                  ; 0415E6 || 041618 DD 75 02    3989  			LD      (IX+2),L
	ld	(ix+$03),h                  ; 04161B || 	ld	(ix+$03),h                  ; 0415E9 || 04161B DD 74 03    3990  			LD      (IX+3),H
	ret                            ; 04161E || 	ret                            ; 0415EC || 04161E C9          3991  			RET
	push	af                        ; 04161F || 	push	af                        ; 0415ED || 04161F F5          3992  STOREI:			PUSH    AF
	inc	c                          ; 041620 || 	inc	c                          ; 0415EE || 041620 0C          3993  			INC     C               ;SPEED - & PRESERVE F'
	dec	c                          ; 041621 || 	dec	c                          ; 0415EF || 041621 0D          3994  			DEC     C               ; WHEN CALLED BY FNEND0
	call	nz,$040667                ; 041622 || 	call	nz,$040662                ; 0415F0 || 041622 C4 67 06 04 3995  			CALL    NZ,SFIX         ;CONVERT TO INTEGER
	pop	af                         ; 041626 || 	pop	af                         ; 0415F4 || 041626 F1          3996  			POP     AF
	cp	$04                         ; 041627 || 	cp	$04                         ; 0415F5 || 041627 FE 04       3997  			CP      4
	jr	z,$-$19                     ; 041629 || 	jr	z,$-$19                     ; 0415F7 || 041629 28 E5       3998  			JR      Z,STORE4
	cp	a                           ; 04162B || 	cp	a                           ; 0415F9 || 04162B BF          3999  			CP      A               ;SET ZERO
	exx                            ; 04162C || 	exx                            ; 0415FA || 04162C D9          4000  STORE1:			EXX
	ld	(ix),l                      ; 04162D || 	ld	(ix),l                      ; 0415FB || 04162D DD 75 00    4001  			LD      (IX+0),L
	exx                            ; 041630 || 	exx                            ; 0415FE || 041630 D9          4002  			EXX
	ret                            ; 041631 || 	ret                            ; 0415FF || 041631 C9          4003  			RET
	ld	hl,$044a00                  ; 041632 || 	ld	hl,$044a00                  ; 041600 || 041632 21 00 4A 04 4010  STACCS:			LD      HL,ACCS			; HL: Pointer to the string accumulator
	rra                            ; 041636 || 	rra                            ; 041604 || 041636 1F          4026  STORES:			RRA				; Rotate right to shift bit 0 into carry
	jr	nc,$+$5f                    ; 041637 || 	jr	nc,$+$5f                    ; 041605 || 041637 30 5D       4027  			JR      NC,STORS3		; It's a fixed/static string, so skip the next bit
	push	hl                        ; 041639 || 	push	hl                        ; 041607 || 041639 E5          4028  			PUSH    HL			; Stack ACCS
	exx                            ; 04163A || 	exx                            ; 041608 || 04163A D9          4032  			EXX				; This block was a call to LOAD4
	ld	l,(ix)                      ; 04163B || 	ld	l,(ix)                      ; 041609 || 04163B DD 6E 00    4033  			LD      L,(IX+0)		; The length of the string currently stored in the allocated space
	ld	h,(ix+$01)                  ; 04163E || 	ld	h,(ix+$01)                  ; 04160C || 04163E DD 66 01    4034  			LD      H,(IX+1)		; The maximum original string length
	exx                            ; 041641 || 	exx                            ; 04160F || 041641 D9          4035  			EXX
	ld	hl,(ix+$02)                 ; 041642 || 	ld	hl,(ix+$02)                 ; 041610 || 041642 DD 27 02    4036  			LD	HL,(IX+2)		; Address of the string (24-bit)
	ld	a,e                         ; 041645 || 	ld	a,e                         ; 041613 || 041645 7B          4038  			LD      A,E             	; E : Length of string in ACCS (as passed to the function)
	exx                            ; 041646 || 	exx                            ; 041614 || 041646 D9          4039  			EXX
	ld	l,a                         ; 041647 || 	ld	l,a                         ; 041615 || 041647 6F          4040  			LD      L,A			; L': Length of string currently stored on the stack
	ld	a,h                         ; 041648 || 	ld	a,h                         ; 041616 || 041648 7C          4041  			LD      A,H             	; H': The maximum (original) string length
	exx                            ; 041649 || 	exx                            ; 041617 || 041649 D9          4042  			EXX
	cp	e                           ; 04164A || 	cp	e                           ; 041618 || 04164A BB          4043  			CP      E			; Check whether there is enough room for the string in ACCS in the allocated space
	jr	nc,$+$19                    ; 04164B || 	jr	nc,$+$19                    ; 041619 || 04164B 30 17       4044  			JR      NC,STORS1       	; Yes there is, so skip the next bit
	exx                            ; 04164D || 	exx                            ; 04161B || 04164D D9          4050  			EXX
	ld	h,l                         ; 04164E || 	ld	h,l                         ; 04161C || 04164E 65          4051  			LD      H,L			; H: Set the maximum string length to the string length
	exx                            ; 04164F || 	exx                            ; 04161D || 04164F D9          4052  			EXX
	push	hl                        ; 041650 || 	push	hl                        ; 04161E || 041650 E5          4053  			PUSH    HL
	ld	bc,$000000                  ; 041651 || 	ld	bc,$000000                  ; 04161F || 041651 01 00 00 00 4054  			LD	BC, 0
	ld	c,a                         ; 041655 || 	ld	c,a                         ; 041623 || 041655 4F          4055  			LD      C,A			; BC: The maximum (original) string length
	add	hl,bc                      ; 041656 || 	add	hl,bc                      ; 041624 || 041656 09          4056  			ADD     HL,BC			; Work out whether this is the last string in memory
	ld	bc,($044d1d)                ; 041657 || 	ld	bc,($044d1d)                ; 041625 || 041657 ED 4B 1D 4D 4057  			LD      BC,(FREE)
	sbc	hl,bc                      ; 04165C || 	sbc	hl,bc                      ; 04162A || 04165C ED 42       4058  			SBC     HL,BC			; Is string last?
	pop	hl                         ; 04165E || 	pop	hl                         ; 04162C || 04165E E1          4059  			POP     HL
	scf                            ; 04165F || 	scf                            ; 04162D || 04165F 37          4060  			SCF
	jr	z,$+$04                     ; 041660 || 	jr	z,$+$04                     ; 04162E || 041660 28 02       4061  			JR      Z,STORS1
	push	bc                        ; 041662 || 	push	bc                        ; 041630 || 041662 C5          4063  			push bc
	pop	hl                         ; 041663 || 	pop	hl                         ; 041631 || 041663 E1          4064  			pop hl
	exx                            ; 041664 || 	exx                            ; 041632 || 041664 D9          4071  STORS1:			EXX				; This block was a call to STORE4
	ld	(ix),l                      ; 041665 || 	ld	(ix),l                      ; 041633 || 041665 DD 75 00    4072  			LD      (IX+0),L		; The actual string length (must be less then H')
	ld	(ix+$01),h                  ; 041668 || 	ld	(ix+$01),h                  ; 041636 || 041668 DD 74 01    4073  			LD      (IX+1),H		; The maximum (original) string length
	exx                            ; 04166B || 	exx                            ; 041639 || 04166B D9          4074  			EXX
	ld	(ix+$02),hl                 ; 04166C || 	ld	(ix+$02),hl                 ; 04163A || 04166C DD 2F 02    4075  			LD	(IX+2),HL		; The pointer to the original string
	ld	bc,$000000                  ; 04166F || 	ld	bc,$000000                  ; 04163D || 04166F 01 00 00 00 4077  			LD	BC, 0
	ld	c,e                         ; 041673 || 	ld	c,e                         ; 041641 || 041673 4B          4078  			LD      C,E			; BC: The new string length
	ex	de,hl                       ; 041674 || 	ex	de,hl                       ; 041642 || 041674 EB          4079  			EX      DE,HL
	pop	hl                         ; 041675 || 	pop	hl                         ; 041643 || 041675 E1          4080  			POP     HL
	dec	c                          ; 041676 || 	dec	c                          ; 041644 || 041676 0D          4081  			DEC     C			; Strings can only be 255 bytes long, so this is a quick way to
	inc	c                          ; 041677 || 	inc	c                          ; 041645 || 041677 0C          4082  			INC     C			; check whether BC is 0 without affecting the carry flag
	ret	z                          ; 041678 || 	ret	z                          ; 041646 || 041678 C8          4083  			RET     Z               	; It is, so it's a NULL string, don't need to do anything else here
	ldir                           ; 041679 || 	ldir                           ; 041647 || 041679 ED B0       4084  			LDIR				; Replace the string in memory
	ret	nc                         ; 04167B || 	ret	nc                         ; 041649 || 04167B D0          4085  			RET     NC
	ld	($044d1d),de                ; 04167C || 	ld	($044d1d),de                ; 04164A || 04167C ED 53 1D 4D 4086  			LD      (FREE),DE		; Set the new value of FREE and fall through to CHECK
	push	hl                        ; 041681 || 	push	hl                        ; 04164F || 041681 E5          4090  CHECK:			PUSH    HL
	push	bc                        ; 041682 || 	push	bc                        ; 041650 || 041682 C5          4091  			PUSH	BC
	ld	hl,($044d1d)                ; 041683 || 	ld	hl,($044d1d)                ; 041651 || 041683 2A 1D 4D 04 4092  			LD      HL,(FREE)		; HL: Address of first free space byte
	ld	bc,$000100                  ; 041687 || 	ld	bc,$000100                  ; 041655 || 041687 01 00 01 00 4093  			LD	BC,100h			; BC: One page of memory
	add	hl,bc                      ; 04168B || 	add	hl,bc                      ; 041659 || 04168B 09          4094  			ADD	HL,BC			; Add a page to FREE
	sbc	hl,sp                      ; 04168C || 	sbc	hl,sp                      ; 04165A || 04168C ED 72       4095  			SBC     HL,SP			; And subtract the current SP
	pop	bc                         ; 04168E || 	pop	bc                         ; 04165C || 04168E C1          4096  			POP	BC
	pop	hl                         ; 04168F || 	pop	hl                         ; 04165D || 04168F E1          4097  			POP     HL
	ret	c                          ; 041690 || 	ret	c                          ; 04165E || 041690 D8          4098  			RET     C			; The SP is not in the same page, so just return
	xor	a                          ; 041691 || 	xor	a                          ; 04165F || 041691 AF          4099  			XOR     A			; Otherwise
	jp	$0437b6                     ; 041692 || 	jp	$043760                     ; 041660 || 041692 C3 B6 37 04 4100  			JP      ERROR_			; Throw error "No room"
	ld	bc,$000000                  ; 041696 || 	ld	bc,$000000                  ; 041664 || 041696 01 00 00 00 4102  STORS3:			LD	BC,0
	ld	c,e                         ; 04169A || 	ld	c,e                         ; 041668 || 04169A 4B          4103  			LD      C,E			; BC: String length
	push	ix                        ; 04169B || 	push	ix                        ; 041669 || 04169B DD E5       4104  			PUSH    IX
	pop	de                         ; 04169D || 	pop	de                         ; 04166B || 04169D D1          4105  			POP     DE			; DE: Destination
	xor	a                          ; 04169E || 	xor	a                          ; 04166C || 04169E AF          4106  			XOR     A			; Check if string length is 0
	cp	c                           ; 04169F || 	cp	c                           ; 04166D || 04169F B9          4107  			CP      C
	jr	z,$+$04                     ; 0416A0 || 	jr	z,$+$04                     ; 04166E || 0416A0 28 02       4108  			JR      Z,STORS5		; Yes, so don't copy
	ldir                           ; 0416A2 || 	ldir                           ; 041670 || 0416A2 ED B0       4109  			LDIR
	ld	a,$0d                       ; 0416A4 || 	ld	a,$0d                       ; 041672 || 0416A4 3E 0D       4110  STORS5:			LD      A,CR			; Finally add the terminator
	ld	(de),a                      ; 0416A6 || 	ld	(de),a                      ; 041674 || 0416A6 12          4111  			LD      (DE),A
	ret                            ; 0416A7 || 	ret                            ; 041675 || 0416A7 C9          4112  			RET
	ld	a,$ff                       ; 0416A8 || 	ld	a,$ff                       ; 041676 || 0416A8 3E FF       4123  ARGUE:			LD      A,-1
	push	af                        ; 0416AA || 	push	af                        ; 041678 || 0416AA F5          4124  			PUSH    AF              	; Put marker on the stack
	inc	iy                         ; 0416AB || 	inc	iy                         ; 041679 || 0416AB FD 23       4125  ARGUE1:			INC     IY              	; Bump past '(' or ',''
	inc	de                         ; 0416AD || 	inc	de                         ; 04167B || 0416AD 13          4126  			INC     DE
	push	de                        ; 0416AE || 	push	de                        ; 04167C || 0416AE D5          4127  			PUSH    DE
	call	$040a78                   ; 0416AF || 	call	$040a70                   ; 04167D || 0416AF CD 78 0A 04 4128  			CALL    NXT			; Skip any whitespace
	call	$043a90                   ; 0416B3 || 	call	$043a3a                   ; 041681 || 0416B3 CD 90 3A 04 4129  			CALL    GETVAR			; Get the location of the variable in HL/IX
	jr	c,$+$41                     ; 0416B7 || 	jr	c,$+$41                     ; 041685 || 0416B7 38 3F       4130  			JR      C,ARGERR		; If the parameter contains an illegal character then throw an error
	call	nz,$043a7f                ; 0416B9 || 	call	nz,$043a29                ; 041687 || 0416B9 C4 7F 3A 04 4131  			CALL    NZ,PUTVAR
	pop	de                         ; 0416BD || 	pop	de                         ; 04168B || 0416BD D1          4132  			POP     DE
	push	hl                        ; 0416BE || 	push	hl                        ; 04168C || 0416BE E5          4133  			PUSH    HL              	; VARPTR
	or	a                           ; 0416BF || 	or	a                           ; 04168D || 0416BF B7          4134  			OR      A               	; Check the variable type
	push	af                        ; 0416C0 || 	push	af                        ; 04168E || 0416C0 F5          4135  			PUSH    AF
	push	de                        ; 0416C1 || 	push	de                        ; 04168F || 0416C1 D5          4136  			PUSH    DE
	ex	(sp),iy                     ; 0416C2 || 	ex	(sp),iy                     ; 041690 || 0416C2 FD E3       4137  			EX      (SP),IY
	jp	m,$0416dc                   ; 0416C4 || 	jp	m,$0416aa                   ; 041692 || 0416C4 FA DC 16 04 4138  			JP      M,ARGUE2        	; Jump here if it is a string
	call	$040307                   ; 0416C8 || 	call	$040302                   ; 041696 || 0416C8 CD 07 03 04 4140  			CALL    EXPRN           	; At this point it is numeric, so get the numeric expression value
	ex	(sp),iy                     ; 0416CC || 	ex	(sp),iy                     ; 04169A || 0416CC FD E3       4141  			EX      (SP),IY
	pop	de                         ; 0416CE || 	pop	de                         ; 04169C || 0416CE D1          4142  			POP     DE
	pop	af                         ; 0416CF || 	pop	af                         ; 04169D || 0416CF F1          4143  			POP     AF
	exx                            ; 0416D0 || 	exx                            ; 04169E || 0416D0 D9          4144  			EXX
	push	hl                        ; 0416D1 || 	push	hl                        ; 04169F || 0416D1 E5          4145  			PUSH    HL
	exx                            ; 0416D2 || 	exx                            ; 0416A0 || 0416D2 D9          4146  			EXX
	push	hl                        ; 0416D3 || 	push	hl                        ; 0416A1 || 0416D3 E5          4147  			PUSH    HL
	ld	b,a                         ; 0416D4 || 	ld	b,a                         ; 0416A2 || 0416D4 47          4148  			LD      B,A
	push	bc                        ; 0416D5 || 	push	bc                        ; 0416A3 || 0416D5 C5          4149  			PUSH    BC
	call	$041681                   ; 0416D6 || 	call	$04164f                   ; 0416A4 || 0416D6 CD 81 16 04 4150  			CALL    CHECK           	; Check room
	jr	$+$11                       ; 0416DA || 	jr	$+$11                       ; 0416A8 || 0416DA 18 0F       4151  			JR      ARGUE4
	call	$04031a                   ; 0416DC || 	call	$040315                   ; 0416AA || 0416DC CD 1A 03 04 4153  ARGUE2:			CALL    EXPRS			; At this point it is a string variable, so get the string expression value
	ex	(sp),iy                     ; 0416E0 || 	ex	(sp),iy                     ; 0416AE || 0416E0 FD E3       4154  			EX      (SP),IY
	exx                            ; 0416E2 || 	exx                            ; 0416B0 || 0416E2 D9          4155  			EXX
	pop	de                         ; 0416E3 || 	pop	de                         ; 0416B1 || 0416E3 D1          4156  			POP     DE
	exx                            ; 0416E4 || 	exx                            ; 0416B2 || 0416E4 D9          4157  			EXX
	pop	af                         ; 0416E5 || 	pop	af                         ; 0416B3 || 0416E5 F1          4158  			POP     AF
	call	$0409b9                   ; 0416E6 || 	call	$0409b4                   ; 0416B4 || 0416E6 CD B9 09 04 4159  			CALL    PUSHS
	exx                            ; 0416EA || 	exx                            ; 0416B8 || 0416EA D9          4160  			EXX
	call	$040a78                   ; 0416EB || 	call	$040a70                   ; 0416B9 || 0416EB CD 78 0A 04 4162  ARGUE4:			CALL    NXT			; Skip whitespace
	cp	$2c                         ; 0416EF || 	cp	$2c                         ; 0416BD || 0416EF FE 2C       4163  			CP      ','			; Check to see if the next value is a comma
	jr	nz,$+$0d                    ; 0416F1 || 	jr	nz,$+$0d                    ; 0416BF || 0416F1 20 0B       4164  			JR      NZ,ARGUE5		; No, so jump here
	ld	a,(de)                      ; 0416F3 || 	ld	a,(de)                      ; 0416C1 || 0416F3 1A          4165  			LD      A,(DE)
	cp	$2c                         ; 0416F4 || 	cp	$2c                         ; 0416C2 || 0416F4 FE 2C       4166  			CP      ','			; Are there any more arguments?
	jr	z,$-$4b                     ; 0416F6 || 	jr	z,$-$4b                     ; 0416C4 || 0416F6 28 B3       4167  			JR      Z,ARGUE1        	; Yes, so loop
	ld	a,$1f                       ; 0416F8 || 	ld	a,$1f                       ; 0416C6 || 0416F8 3E 1F       4169  ARGERR:			LD      A,31
	jp	$0437b6                     ; 0416FA || 	jp	$043760                     ; 0416C8 || 0416FA C3 B6 37 04 4170  			JP      ERROR_           	; Throw error "Arguments"
	call	$040a37                   ; 0416FE || 	call	$040a2f                   ; 0416CC || 0416FE CD 37 0A 04 4172  ARGUE5:			CALL    BRAKET			; Check for end bracket (throws an error if missing)
	ld	a,(de)                      ; 041702 || 	ld	a,(de)                      ; 0416D0 || 041702 1A          4173  			LD      A,(DE)
	cp	$29                         ; 041703 || 	cp	$29                         ; 0416D1 || 041703 FE 29       4174  			CP      ')'
	jr	nz,$-$0d                    ; 041705 || 	jr	nz,$-$0d                    ; 0416D3 || 041705 20 F1       4175  			JR      NZ,ARGERR
	inc	de                         ; 041707 || 	inc	de                         ; 0416D5 || 041707 13          4176  			INC     DE
	exx                            ; 041708 || 	exx                            ; 0416D6 || 041708 D9          4177  			EXX
	pop	bc                         ; 041709 || 	pop	bc                         ; 0416D7 || 041709 C1          4178  ARGUE6:			POP     BC
	ld	a,b                         ; 04170A || 	ld	a,b                         ; 0416D8 || 04170A 78          4179  			LD      A,B
	inc	a                          ; 04170B || 	inc	a                          ; 0416D9 || 04170B 3C          4180  			INC     A
	exx                            ; 04170C || 	exx                            ; 0416DA || 04170C D9          4181  			EXX
	ret	z                          ; 04170D || 	ret	z                          ; 0416DB || 04170D C8          4182  			RET     Z               	; Marker popped
	exx                            ; 04170E || 	exx                            ; 0416DC || 04170E D9          4183  			EXX
	dec	a                          ; 04170F || 	dec	a                          ; 0416DD || 04170F 3D          4184  			DEC     A
	jp	m,$041720                   ; 041710 || 	jp	m,$0416ee                   ; 0416DE || 041710 FA 20 17 04 4185  			JP      M,ARGUE7        	; If it is a string, then jump here
	pop	hl                         ; 041714 || 	pop	hl                         ; 0416E2 || 041714 E1          4186  			POP     HL
	exx                            ; 041715 || 	exx                            ; 0416E3 || 041715 D9          4187  			EXX
	pop	hl                         ; 041716 || 	pop	hl                         ; 0416E4 || 041716 E1          4188  			POP     HL
	exx                            ; 041717 || 	exx                            ; 0416E5 || 041717 D9          4189  			EXX
	pop	ix                         ; 041718 || 	pop	ix                         ; 0416E6 || 041718 DD E1       4190  			POP     IX
	call	$041608                   ; 04171A || 	call	$0415d6                   ; 0416E8 || 04171A CD 08 16 04 4191  			CALL    STORE	           	; Write to dummy variable
	jr	$-$15                       ; 04171E || 	jr	$-$15                       ; 0416EC || 04171E 18 E9       4192  			JR      ARGUE6
	call	$0409e6                   ; 041720 || 	call	$0409de                   ; 0416EE || 041720 CD E6 09 04 4194  ARGUE7:			CALL    POPS
	pop	ix                         ; 041724 || 	pop	ix                         ; 0416F2 || 041724 DD E1       4195  			POP     IX
	call	$041632                   ; 041726 || 	call	$041600                   ; 0416F4 || 041726 CD 32 16 04 4196  			CALL    STACCS
	jr	$-$21                       ; 04172A || 	jr	$-$21                       ; 0416F8 || 04172A 18 DD       4197  			JR      ARGUE6
	pop	de                         ; 04172C || 	pop	de                         ; 0416FA || 04172C D1          4206  SAVLOC:			POP     DE              	; DE: Return address (from the CALL)
	inc	iy                         ; 04172D || 	inc	iy                         ; 0416FB || 04172D FD 23       4208  SAVLO1:			INC     IY              	; Bump past '(' or ','
	call	$040a78                   ; 04172F || 	call	$040a70                   ; 0416FD || 04172F CD 78 0A 04 4209  			CALL    NXT			; And also any whitespace
	push	de                        ; 041733 || 	push	de                        ; 041701 || 041733 D5          4210  			PUSH    DE			; Push the return address back onto the stack
	exx                            ; 041734 || 	exx                            ; 041702 || 041734 D9          4211  			EXX
	push	bc                        ; 041735 || 	push	bc                        ; 041703 || 041735 C5          4212  			PUSH    BC
	push	de                        ; 041736 || 	push	de                        ; 041704 || 041736 D5          4213  			PUSH    DE
	push	hl                        ; 041737 || 	push	hl                        ; 041705 || 041737 E5          4214  			PUSH    HL
	exx                            ; 041738 || 	exx                            ; 041706 || 041738 D9          4215  			EXX
	call	$040c96                   ; 041739 || 	call	$040c8e                   ; 041707 || 041739 CD 96 0C 04 4216  			CALL    VAR_             	; Dummy variable
	exx                            ; 04173D || 	exx                            ; 04170B || 04173D D9          4217  			EXX
	pop	hl                         ; 04173E || 	pop	hl                         ; 04170C || 04173E E1          4218  			POP     HL
	pop	de                         ; 04173F || 	pop	de                         ; 04170D || 04173F D1          4219  			POP     DE
	pop	bc                         ; 041740 || 	pop	bc                         ; 04170E || 041740 C1          4220  			POP     BC
	exx                            ; 041741 || 	exx                            ; 04170F || 041741 D9          4221  			EXX
	pop	de                         ; 041742 || 	pop	de                         ; 041710 || 041742 D1          4222  			POP     DE
	or	a                           ; 041743 || 	or	a                           ; 041711 || 041743 B7          4223  			OR      A               	; Check the variable type
	jp	m,$041757                   ; 041744 || 	jp	m,$041725                   ; 041712 || 041744 FA 57 17 04 4224  			JP      M,SAVLO2        	; 80h = string, so jump to save a local string
	exx                            ; 041748 || 	exx                            ; 041716 || 041748 D9          4225  			EXX
	push	hl                        ; 041749 || 	push	hl                        ; 041717 || 041749 E5          4226  			PUSH    HL              	; Save H'L'
	exx                            ; 04174A || 	exx                            ; 041718 || 04174A D9          4227  			EXX
	ld	b,a                         ; 04174B || 	ld	b,a                         ; 041719 || 04174B 47          4228  			LD      B,A             	;  B: Variable type
	call	$04041b                   ; 04174C || 	call	$040416                   ; 04171A || 04174C CD 1B 04 04 4229  			CALL    LOADN
	exx                            ; 041750 || 	exx                            ; 04171E || 041750 D9          4230  			EXX
	ex	(sp),hl                     ; 041751 || 	ex	(sp),hl                     ; 04171F || 041751 E3          4231  			EX      (SP),HL
	exx                            ; 041752 || 	exx                            ; 041720 || 041752 D9          4232  			EXX
	push	hl                        ; 041753 || 	push	hl                        ; 041721 || 041753 E5          4233  			PUSH    HL
	push	bc                        ; 041754 || 	push	bc                        ; 041722 || 041754 C5          4234  			PUSH    BC
	jr	$+$2f                       ; 041755 || 	jr	$+$2f                       ; 041723 || 041755 18 2D       4235  			JR      SAVLO4
	push	af                        ; 041757 || 	push	af                        ; 041725 || 041757 F5          4237  SAVLO2:			PUSH    AF              	; Save the type (string)
	push	de                        ; 041758 || 	push	de                        ; 041726 || 041758 D5          4238  			PUSH    DE
	exx                            ; 041759 || 	exx                            ; 041727 || 041759 D9          4239  			EXX
	push	hl                        ; 04175A || 	push	hl                        ; 041728 || 04175A E5          4240  			PUSH    HL
	exx                            ; 04175B || 	exx                            ; 041729 || 04175B D9          4241  			EXX
	call	$0404a5                   ; 04175C || 	call	$0404a0                   ; 04172A || 04175C CD A5 04 04 4242  			CALL    LOADS
	exx                            ; 041760 || 	exx                            ; 04172E || 041760 D9          4243  			EXX
	pop	hl                         ; 041761 || 	pop	hl                         ; 04172F || 041761 E1          4244  			POP     HL
	exx                            ; 041762 || 	exx                            ; 041730 || 041762 D9          4245  			EXX
	ld	bc,$000000                  ; 041763 || 	ld	bc,$000000                  ; 041731 || 041763 01 00 00 00 4246  			LD	BC,0
	ld	c,e                         ; 041767 || 	ld	c,e                         ; 041735 || 041767 4B          4247  			LD      C,E			; BC: String length
	pop	de                         ; 041768 || 	pop	de                         ; 041736 || 041768 D1          4248  			POP     DE
	call	$041681                   ; 041769 || 	call	$04164f                   ; 041737 || 041769 CD 81 16 04 4249  			CALL    CHECK			; Check if there is space on the stack
	pop	af                         ; 04176D || 	pop	af                         ; 04173B || 04176D F1          4250  			POP     AF              	; Level stack
	ld	hl,$000000                  ; 04176E || 	ld	hl,$000000                  ; 04173C || 04176E 21 00 00 00 4251  			LD      HL,0
	sbc	hl,bc                      ; 041772 || 	sbc	hl,bc                      ; 041740 || 041772 ED 42       4252  			SBC     HL,BC			; HL: Number of bytes required on the stack for the string
	add	hl,sp                      ; 041774 || 	add	hl,sp                      ; 041742 || 041774 39          4253  			ADD     HL,SP			; Make space for the string on the stack
	ld	sp,hl                       ; 041775 || 	ld	sp,hl                       ; 041743 || 041775 F9          4254  			LD      SP,HL
	ld	b,a                         ; 041776 || 	ld	b,a                         ; 041744 || 041776 47          4255  			LD      B,A             	;  B: Variable type
	push	bc                        ; 041777 || 	push	bc                        ; 041745 || 041777 C5          4256  			PUSH    BC
	jr	z,$+$0c                     ; 041778 || 	jr	z,$+$0c                     ; 041746 || 041778 28 0A       4257  			JR      Z,SAVLO4
	push	de                        ; 04177A || 	push	de                        ; 041748 || 04177A D5          4258  			PUSH    DE
	ld	de,$044a00                  ; 04177B || 	ld	de,$044a00                  ; 041749 || 04177B 11 00 4A 04 4259  			LD      DE,ACCS
	ex	de,hl                       ; 04177F || 	ex	de,hl                       ; 04174D || 04177F EB          4260  			EX      DE,HL
	ld	b,l                         ; 041780 || 	ld	b,l                         ; 04174E || 041780 45          4261  			LD      B,L
	ldir                           ; 041781 || 	ldir                           ; 04174F || 041781 ED B0       4262  			LDIR                    	; Save the string onto the stack
	pop	de                         ; 041783 || 	pop	de                         ; 041751 || 041783 D1          4263  			POP     DE
	push	ix                        ; 041784 || 	push	ix                        ; 041752 || 041784 DD E5       4265  SAVLO4:			PUSH    IX			; VARPTR
	call	$04178a                   ; 041786 || 	call	$041758                   ; 041754 || 041786 CD 8A 17 04 4266  			CALL    SAVLO5
	call	$041681                   ; 04178A || 	call	$04164f                   ; 041758 || 04178A CD 81 16 04 4268  SAVLO5:			CALL    CHECK
	call	$040a78                   ; 04178E || 	call	$040a70                   ; 04175C || 04178E CD 78 0A 04 4269  			CALL    NXT
	cp	$2c                         ; 041792 || 	cp	$2c                         ; 041760 || 041792 FE 2C       4270  			CP      ','             	; Are there any more local variables?
	jr	z,$-$67                     ; 041794 || 	jr	z,$-$67                     ; 041762 || 041794 28 97       4271  			JR      Z,SAVLO1		; Yes, so loop
	ex	de,hl                       ; 041796 || 	ex	de,hl                       ; 041764 || 041796 EB          4272  			EX      DE,HL			; DE -> HL: The return address
	jp	(hl)                        ; 041797 || 	jp	(hl)                        ; 041765 || 041797 E9          4273  			JP      (HL)            	; And effectvely return
	ld	a,(iy)                      ; 041798 || 	ld	a,(iy)                      ; 041766 || 041798 FD 7E 00    4275  DELIM:			LD      A,(IY)          	; Assembler delimiter
	cp	$20                         ; 04179B || 	cp	$20                         ; 041769 || 04179B FE 20       4276  			CP      ' '
	ret	z                          ; 04179D || 	ret	z                          ; 04176B || 04179D C8          4277  			RET     Z
	cp	$2c                         ; 04179E || 	cp	$2c                         ; 04176C || 04179E FE 2C       4278  			CP      ','
	ret	z                          ; 0417A0 || 	ret	z                          ; 04176E || 0417A0 C8          4279  			RET     Z
	cp	$29                         ; 0417A1 || 	cp	$29                         ; 04176F || 0417A1 FE 29       4280  			CP      ')'
	ret	z                          ; 0417A3 || 	ret	z                          ; 041771 || 0417A3 C8          4281  			RET     Z
	cp	$3b                         ; 0417A4 || 	cp	$3b                         ; 041772 || 0417A4 FE 3B       4282  TERM:			CP      ';'             	; Assembler terminator
	ret	z                          ; 0417A6 || 	ret	z                          ; 041774 || 0417A6 C8          4283  			RET     Z
	cp	$5c                         ; 0417A7 || 	cp	$5c                         ; 041775 || 0417A7 FE 5C       4284  			CP      '\'
	ret	z                          ; 0417A9 || 	ret	z                          ; 041777 || 0417A9 C8          4285  			RET     Z
	jr	$+$09                       ; 0417AA || 	jr	$+$09                       ; 041778 || 0417AA 18 07       4286  			JR      TERM0
	call	$040a78                   ; 0417AC || 	call	$040a70                   ; 04177A || 0417AC CD 78 0A 04 4288  TERMQ:			CALL    NXT
	cp	$8b                         ; 0417B0 || 	cp	$8b                         ; 04177E || 0417B0 FE 8B       4289  			CP      ELSE_
	ret	nc                         ; 0417B2 || 	ret	nc                         ; 041780 || 0417B2 D0          4290  			RET     NC
	cp	$3a                         ; 0417B3 || 	cp	$3a                         ; 041781 || 0417B3 FE 3A       4291  TERM0:			CP      ':'             	; Assembler seperator
	ret	nc                         ; 0417B5 || 	ret	nc                         ; 041783 || 0417B5 D0          4292  			RET     NC
	cp	$0d                         ; 0417B6 || 	cp	$0d                         ; 041784 || 0417B6 FE 0D       4293  			CP      CR
	ret                            ; 0417B8 || 	ret                            ; 041786 || 0417B8 C9          4294  			RET
	call	$0417ac                   ; 0417B9 || 	call	$04177a                   ; 041787 || 0417B9 CD AC 17 04 4296  SPAN:			CALL    TERMQ
	ret	z                          ; 0417BD || 	ret	z                          ; 04178B || 0417BD C8          4297  			RET     Z
	inc	iy                         ; 0417BE || 	inc	iy                         ; 04178C || 0417BE FD 23       4298  			INC     IY
	jr	$-$07                       ; 0417C0 || 	jr	$-$07                       ; 04178E || 0417C0 18 F7       4299  			JR      SPAN
	call	$040a78                   ; 0417C2 || 	call	$040a70                   ; 041790 || 0417C2 CD 78 0A 04 4303  EQUALS:			CALL    NXT			; Skip whitespace
	inc	iy                         ; 0417C6 || 	inc	iy                         ; 041794 || 0417C6 FD 23       4304  			INC     IY			; Skip past the character in question
	cp	$3d                         ; 0417C8 || 	cp	$3d                         ; 041796 || 0417C8 FE 3D       4305  			CP      '='			; Is it '='
	ret	z                          ; 0417CA || 	ret	z                          ; 041798 || 0417CA C8          4306  			RET     Z			; Yes, so return
	ld	a,$04                       ; 0417CB || 	ld	a,$04                       ; 041799 || 0417CB 3E 04       4307  			LD      A,4			; Otherwise
	jp	$0437b6                     ; 0417CD || 	jp	$043760                     ; 04179B || 0417CD C3 B6 37 04 4308  			JP      ERROR_           	; Throw error "Mistake"
	cp	$8a                         ; 0417D1 || 	cp	$8a                         ; 04179F || 0417D1 FE 8A       4310  FORMAT:			CP      TAB
	jr	z,$+$0f                     ; 0417D3 || 	jr	z,$+$0f                     ; 0417A1 || 0417D3 28 0D       4311  			JR      Z,DOTAB
	cp	$89                         ; 0417D5 || 	cp	$89                         ; 0417A3 || 0417D5 FE 89       4312  			CP      SPC
	jr	z,$+$42                     ; 0417D7 || 	jr	z,$+$42                     ; 0417A5 || 0417D7 28 40       4313  			JR      Z,DOSPC
	cp	$27                         ; 0417D9 || 	cp	$27                         ; 0417A7 || 0417D9 FE 27       4314  			CP      '''
	ret	nz                         ; 0417DB || 	ret	nz                         ; 0417A9 || 0417DB C0          4315  			RET     NZ
	call	$04399d                   ; 0417DC || 	call	$043947                   ; 0417AA || 0417DC CD 9D 39 04 4316  			CALL    CRLF
	xor	a                          ; 0417E0 || 	xor	a                          ; 0417AE || 0417E0 AF          4317  			XOR     A
	ret                            ; 0417E1 || 	ret                            ; 0417AF || 0417E1 C9          4318  			RET
	push	bc                        ; 0417E2 || 	push	bc                        ; 0417B0 || 0417E2 C5          4320  DOTAB:			PUSH    BC
	call	$04030f                   ; 0417E3 || 	call	$04030a                   ; 0417B1 || 0417E3 CD 0F 03 04 4321  			CALL    EXPRI
	exx                            ; 0417E7 || 	exx                            ; 0417B5 || 0417E7 D9          4322  			EXX
	pop	bc                         ; 0417E8 || 	pop	bc                         ; 0417B6 || 0417E8 C1          4323  			POP     BC
	ld	a,(iy)                      ; 0417E9 || 	ld	a,(iy)                      ; 0417B7 || 0417E9 FD 7E 00    4324  			LD      A,(IY)
	cp	$2c                         ; 0417EC || 	cp	$2c                         ; 0417BA || 0417EC FE 2C       4325  			CP      ','
	jr	z,$+$16                     ; 0417EE || 	jr	z,$+$16                     ; 0417BC || 0417EE 28 14       4326  			JR      Z,DOTAB1
	call	$040a37                   ; 0417F0 || 	call	$040a2f                   ; 0417BE || 0417F0 CD 37 0A 04 4327  			CALL    BRAKET
	ld	a,l                         ; 0417F4 || 	ld	a,l                         ; 0417C2 || 0417F4 7D          4328  			LD      A,L
	ld	hl,$044d3d                  ; 0417F5 || 	ld	hl,$044d3d                  ; 0417C3 || 0417F5 21 3D 4D 04 4329  TABIT:			LD      HL,COUNT
	cp	(hl)                        ; 0417F9 || 	cp	(hl)                        ; 0417C7 || 0417F9 BE          4330  			CP      (HL)
	ret	z                          ; 0417FA || 	ret	z                          ; 0417C8 || 0417FA C8          4331  			RET     Z
	push	af                        ; 0417FB || 	push	af                        ; 0417C9 || 0417FB F5          4332  			PUSH    AF
	call	c,$04399d                 ; 0417FC || 	call	c,$043947                 ; 0417CA || 0417FC DC 9D 39 04 4333  			CALL    C,CRLF
	pop	af                         ; 041800 || 	pop	af                         ; 0417CE || 041800 F1          4334  			POP     AF
	sub	(hl)                       ; 041801 || 	sub	(hl)                       ; 0417CF || 041801 96          4335  			SUB     (HL)
	jr	$+$1f                       ; 041802 || 	jr	$+$1f                       ; 0417D0 || 041802 18 1D       4336  			JR      FILL
	inc	iy                         ; 041804 || 	inc	iy                         ; 0417D2 || 041804 FD 23       4337  DOTAB1:			INC     IY
	push	bc                        ; 041806 || 	push	bc                        ; 0417D4 || 041806 C5          4338  			PUSH    BC
	push	hl                        ; 041807 || 	push	hl                        ; 0417D5 || 041807 E5          4339  			PUSH    HL
	call	$04030f                   ; 041808 || 	call	$04030a                   ; 0417D6 || 041808 CD 0F 03 04 4340  			CALL    EXPRI
	exx                            ; 04180C || 	exx                            ; 0417DA || 04180C D9          4341  			EXX
	pop	de                         ; 04180D || 	pop	de                         ; 0417DB || 04180D D1          4342  			POP     DE
	pop	bc                         ; 04180E || 	pop	bc                         ; 0417DC || 04180E C1          4343  			POP     BC
	call	$040a37                   ; 04180F || 	call	$040a2f                   ; 0417DD || 04180F CD 37 0A 04 4344  			CALL    BRAKET
	call	$043f17                   ; 041813 || 	call	$043ec1                   ; 0417E1 || 041813 CD 17 3F 04 4345  			CALL    PUTCSR
	xor	a                          ; 041817 || 	xor	a                          ; 0417E5 || 041817 AF          4346  			XOR     A
	ret                            ; 041818 || 	ret                            ; 0417E6 || 041818 C9          4347  			RET
	push	bc                        ; 041819 || 	push	bc                        ; 0417E7 || 041819 C5          4349  DOSPC:			PUSH    BC
	call	$04032a                   ; 04181A || 	call	$040325                   ; 0417E8 || 04181A CD 2A 03 04 4350  			CALL    ITEMI
	exx                            ; 04181E || 	exx                            ; 0417EC || 04181E D9          4351  			EXX
	ld	a,l                         ; 04181F || 	ld	a,l                         ; 0417ED || 04181F 7D          4352  			LD      A,L
	pop	bc                         ; 041820 || 	pop	bc                         ; 0417EE || 041820 C1          4353  			POP     BC
	or	a                           ; 041821 || 	or	a                           ; 0417EF || 041821 B7          4354  FILL:			OR      A
	ret	z                          ; 041822 || 	ret	z                          ; 0417F0 || 041822 C8          4355  			RET     Z
	push	bc                        ; 041823 || 	push	bc                        ; 0417F1 || 041823 C5          4356  			PUSH    BC
	ld	b,a                         ; 041824 || 	ld	b,a                         ; 0417F2 || 041824 47          4357  			LD      B,A
	ld	a,$20                       ; 041825 || 	ld	a,$20                       ; 0417F3 || 041825 3E 20       4358  FILL1:			LD      A,' '
	call	$0439a5                   ; 041827 || 	call	$04394f                   ; 0417F5 || 041827 CD A5 39 04 4359  			CALL    OUTCHR
	djnz	$-$06                     ; 04182B || 	djnz	$-$06                     ; 0417F9 || 04182B 10 F8       4360  			DJNZ    FILL1
	pop	bc                         ; 04182D || 	pop	bc                         ; 0417FB || 04182D C1          4361  			POP     BC
	xor	a                          ; 04182E || 	xor	a                          ; 0417FC || 04182E AF          4362  			XOR     A
	ret                            ; 04182F || 	ret                            ; 0417FD || 04182F C9          4363  			RET
	ld	hl,$044a00                  ; 041830 || 	ld	hl,$044a00                  ; 0417FE || 041830 21 00 4A 04 4365  PTEXT:			LD      HL,ACCS
	inc	e                          ; 041834 || 	inc	e                          ; 041802 || 041834 1C          4366  			INC     E
	dec	e                          ; 041835 || 	dec	e                          ; 041803 || 041835 1D          4367  PTEXT1:			DEC     E
	ret	z                          ; 041836 || 	ret	z                          ; 041804 || 041836 C8          4368  			RET     Z
	ld	a,(hl)                      ; 041837 || 	ld	a,(hl)                      ; 041805 || 041837 7E          4369  			LD      A,(HL)
	inc	hl                         ; 041838 || 	inc	hl                         ; 041806 || 041838 23          4370  			INC     HL
	call	$0439a5                   ; 041839 || 	call	$04394f                   ; 041807 || 041839 CD A5 39 04 4371  			CALL    OUTCHR
	jr	$-$08                       ; 04183D || 	jr	$-$08                       ; 04180B || 04183D 18 F6       4372  			JR      PTEXT1
	push	af                        ; 04183F || 	push	af                        ; 04180D || 04183F F5          4374  FETCHS:			PUSH    AF
	push	bc                        ; 041840 || 	push	bc                        ; 04180E || 041840 C5          4375  			PUSH    BC
	push	hl                        ; 041841 || 	push	hl                        ; 04180F || 041841 E5          4376  			PUSH    HL
	ex	(sp),iy                     ; 041842 || 	ex	(sp),iy                     ; 041810 || 041842 FD E3       4377  			EX      (SP),IY
	call	$04185f                   ; 041844 || 	call	$04182d                   ; 041812 || 041844 CD 5F 18 04 4378  			CALL    XTRACT
	call	$040a78                   ; 041848 || 	call	$040a70                   ; 041816 || 041848 CD 78 0A 04 4379  			CALL    NXT
	ex	(sp),iy                     ; 04184C || 	ex	(sp),iy                     ; 04181A || 04184C FD E3       4380  			EX      (SP),IY
	pop	hl                         ; 04184E || 	pop	hl                         ; 04181C || 04184E E1          4381  			POP     HL
	pop	bc                         ; 04184F || 	pop	bc                         ; 04181D || 04184F C1          4382  			POP     BC
	pop	af                         ; 041850 || 	pop	af                         ; 04181E || 041850 F1          4383  			POP     AF
	ret                            ; 041851 || 	ret                            ; 04181F || 041851 C9          4384  			RET
	ld	de,$044a00                  ; 041852 || 	ld	de,$044a00                  ; 041820 || 041852 11 00 4A 04 4386  LINES:			LD      DE,ACCS
	ld	a,(hl)                      ; 041856 || 	ld	a,(hl)                      ; 041824 || 041856 7E          4387  LINE1S:			LD      A,(HL)
	ld	(de),a                      ; 041857 || 	ld	(de),a                      ; 041825 || 041857 12          4388  			LD      (DE),A
	cp	$0d                         ; 041858 || 	cp	$0d                         ; 041826 || 041858 FE 0D       4389  			CP      CR
	ret	z                          ; 04185A || 	ret	z                          ; 041828 || 04185A C8          4390  			RET     Z
	inc	hl                         ; 04185B || 	inc	hl                         ; 041829 || 04185B 23          4391  			INC     HL
	inc	e                          ; 04185C || 	inc	e                          ; 04182A || 04185C 1C          4392  			INC     E
	jr	$-$07                       ; 04185D || 	jr	$-$07                       ; 04182B || 04185D 18 F7       4393  			JR      LINE1S
	call	$040a78                   ; 04185F || 	call	$040a70                   ; 04182D || 04185F CD 78 0A 04 4395  XTRACT:			CALL    NXT
	cp	$22                         ; 041863 || 	cp	$22                         ; 041831 || 041863 FE 22       4396  			CP      '"'
	inc	iy                         ; 041865 || 	inc	iy                         ; 041833 || 041865 FD 23       4397  			INC     IY
	jp	z,$04046c                   ; 041867 || 	jp	z,$040467                   ; 041835 || 041867 CA 6C 04 04 4398  			JP      Z,CONS
	dec	iy                         ; 04186B || 	dec	iy                         ; 041839 || 04186B FD 2B       4399  			DEC     IY
	ld	de,$044a00                  ; 04186D || 	ld	de,$044a00                  ; 04183B || 04186D 11 00 4A 04 4400  			LD      DE,ACCS
	ld	a,(iy)                      ; 041871 || 	ld	a,(iy)                      ; 04183F || 041871 FD 7E 00    4401  XTRAC1:			LD      A,(IY)
	ld	(de),a                      ; 041874 || 	ld	(de),a                      ; 041842 || 041874 12          4402  			LD      (DE),A
	cp	$2c                         ; 041875 || 	cp	$2c                         ; 041843 || 041875 FE 2C       4403  			CP      ','
	ret	z                          ; 041877 || 	ret	z                          ; 041845 || 041877 C8          4404  			RET     Z
	cp	$0d                         ; 041878 || 	cp	$0d                         ; 041846 || 041878 FE 0D       4405  			CP      CR
	ret	z                          ; 04187A || 	ret	z                          ; 041848 || 04187A C8          4406  			RET     Z
	inc	iy                         ; 04187B || 	inc	iy                         ; 041849 || 04187B FD 23       4407  			INC     IY
	inc	e                          ; 04187D || 	inc	e                          ; 04184B || 04187D 1C          4408  			INC     E
	jr	$-$0d                       ; 04187E || 	jr	$-$0d                       ; 04184C || 04187E 18 F1       4409  			JR      XTRAC1
	ld	bc,$000000                  ; 041880 || 	ld	bc,$000000                  ; 04184E || 041880 01 00 00 00 4419  SEARCH_EX:			LD      BC,0			; Clear BC
	ld	c,(hl)                      ; 041884 || 	ld	c,(hl)                      ; 041852 || 041884 4E          4421  SRCH1_EX:			LD      C,(HL)			;  C: Fetch the line length
	inc	c                          ; 041885 || 	inc	c                          ; 041853 || 041885 0C          4422  			INC     C			; Check for 0, i.e. end of program marker
	dec	c                          ; 041886 || 	dec	c                          ; 041854 || 041886 0D          4423  			DEC     C
	jr	z,$+$0d                     ; 041887 || 	jr	z,$+$0d                     ; 041855 || 041887 28 0B       4424  			JR      Z,SRCH2_EX         	; Not found the token, so end
	inc	hl                         ; 041889 || 	inc	hl                         ; 041857 || 041889 23          4425  			INC     HL			; Skip the line length and line number
	inc	hl                         ; 04188A || 	inc	hl                         ; 041858 || 04188A 23          4426  			INC     HL
	inc	hl                         ; 04188B || 	inc	hl                         ; 041859 || 04188B 23          4427  			INC     HL
	cp	(hl)                        ; 04188C || 	cp	(hl)                        ; 04185A || 04188C BE          4428  			CP      (HL)			; Compare with the token
	ret	z                          ; 04188D || 	ret	z                          ; 04185B || 04188D C8          4429  			RET     Z			; Found it, so return with carry not set
	dec	c                          ; 04188E || 	dec	c                          ; 04185C || 04188E 0D          4430  			DEC     C			; Skip to the next line
	dec	c                          ; 04188F || 	dec	c                          ; 04185D || 04188F 0D          4431  			DEC     C
	dec	c                          ; 041890 || 	dec	c                          ; 04185E || 041890 0D          4432  			DEC     C
	add	hl,bc                      ; 041891 || 	add	hl,bc                      ; 04185F || 041891 09          4433  			ADD     HL,BC
	jr	$-$0e                       ; 041892 || 	jr	$-$0e                       ; 041860 || 041892 18 F0       4434  			JR      SRCH1_EX			; Rinse, lather and repeat
	dec	hl                         ; 041894 || 	dec	hl                         ; 041862 || 041894 2B          4436  SRCH2_EX:			DEC     HL              	; Token not found, so back up to the CR at the end of the last line
	scf                            ; 041895 || 	scf                            ; 041863 || 041895 37          4437  			SCF				; And set the carry flag
	ret                            ; 041896 || 	ret                            ; 041864 || 041896 C9          4438  			RET
	cp	$04                         ; 041897 || 	cp	$04                         ; 041865 || 041897 FE 04       4452  X4OR5:			CP      4			; Check A = 4 (Z flag is used later)
	push	de                        ; 041899 || 	push	de                        ; 041867 || 041899 D5          4454  			push de
	pop	hl                         ; 04189A || 	pop	hl                         ; 041868 || 04189A E1          4455  			pop hl
	add	hl,hl                      ; 04189B || 	add	hl,hl                      ; 041869 || 04189B 29          4456  			ADD     HL,HL			; Multiply by 2 (note this operation preserves the zero flag)
	ret	c                          ; 04189C || 	ret	c                          ; 04186A || 04189C D8          4457  			RET     C			; Exit if overflow
	add	hl,hl                      ; 04189D || 	add	hl,hl                      ; 04186B || 04189D 29          4458  			ADD     HL,HL			; Multiply by 2 again
	ret	c                          ; 04189E || 	ret	c                          ; 04186C || 04189E D8          4459  			RET     C			; Exit if overflow
	ex	de,hl                       ; 04189F || 	ex	de,hl                       ; 04186D || 04189F EB          4460  			EX      DE,HL			; DE: Product
	ret	z                          ; 0418A0 || 	ret	z                          ; 04186E || 0418A0 C8          4461  			RET     Z			; Exit if A = 4
	add	hl,de                      ; 0418A1 || 	add	hl,de                      ; 04186F || 0418A1 19          4462  			ADD     HL,DE			; Add original value to HL (effectively multiplying by 5)
	ex	de,hl                       ; 0418A2 || 	ex	de,hl                       ; 041870 || 0418A2 EB          4463  			EX      DE,HL			; DE: Product
	ret                            ; 0418A3 || 	ret                            ; 041871 || 0418A3 C9          4464  			RET
	push	bc                        ; 0418A4 || 	push	bc                        ; 041872 || 0418A4 C5          4473  MUL16:			PUSH	BC
	ld	d,c                         ; 0418A5 || 	ld	d,c                         ; 041873 || 0418A5 51          4474  			LD	D, C			; Set up the registers for the multiplies
	ld	e,l                         ; 0418A6 || 	ld	e,l                         ; 041874 || 0418A6 5D          4475  			LD	E, L
	ld	l,c                         ; 0418A7 || 	ld	l,c                         ; 041875 || 0418A7 69          4476  			LD	L, C
	ld	c,e                         ; 0418A8 || 	ld	c,e                         ; 041876 || 0418A8 4B          4477  			LD	C, E
	mlt	hl                         ; 0418A9 || 	mlt	hl                         ; 041877 || 0418A9 ED 6C       4478  			MLT	HL			; HL = H * C (*256)
	mlt	de                         ; 0418AB || 	mlt	de                         ; 041879 || 0418AB ED 5C       4479  			MLT	DE			; DE = L * C
	mlt	bc                         ; 0418AD || 	mlt	bc                         ; 04187B || 0418AD ED 4C       4480  			MLT	BC			; BC = B * L (*256)
	add	hl,bc                      ; 0418AF || 	add	hl,bc                      ; 04187D || 0418AF 09          4481  			ADD	HL, BC			; HL = The sum of the two most significant multiplications
	pop	bc                         ; 0418B0 || 	pop	bc                         ; 04187E || 0418B0 C1          4482  			POP	BC
	xor	a                          ; 0418B1 || 	xor	a                          ; 04187F || 0418B1 AF          4483  			XOR	A
	sbc	a,h                        ; 0418B2 || 	sbc	a,h                        ; 041880 || 0418B2 9C          4484  			SBC	H			; If H is not zero then it's an overflow
	ret	c                          ; 0418B3 || 	ret	c                          ; 041881 || 0418B3 D8          4485  			RET	C
	ld	h,l                         ; 0418B4 || 	ld	h,l                         ; 041882 || 0418B4 65          4486  			LD	H, L			; HL = ((H * C) + (B * L) * 256) + (L * C)
	ld	l,a                         ; 0418B5 || 	ld	l,a                         ; 041883 || 0418B5 6F          4487  			LD	L, A
	add	hl,de                      ; 0418B6 || 	add	hl,de                      ; 041884 || 0418B6 19          4488  			ADD	HL, DE
	ret                            ; 0418B7 || 	ret                            ; 041885 || 0418B7 C9          4489  			RET
	call	$040a78                   ; 0418B8 || 	call	$040a70                   ; 041886 || 0418B8 CD 78 0A 04 4491  CHANEL:			CALL    NXT			; Skip whitespace
	cp	$23                         ; 0418BC || 	cp	$23                         ; 04188A || 0418BC FE 23       4492  			CP      '#'			; Check for the '#' symbol
	ld	a,$2d                       ; 0418BE || 	ld	a,$2d                       ; 04188C || 0418BE 3E 2D       4493  			LD      A,45
	jp	nz,$0437b6                  ; 0418C0 || 	jp	nz,$043760                  ; 04188E || 0418C0 C2 B6 37 04 4494  			JP      NZ,ERROR_        	; If it is missing, then throw a "Missing #" error
	inc	iy                         ; 0418C4 || 	inc	iy                         ; 041892 || 0418C4 FD 23       4495  CHNL:			INC     IY             		; Bump past the '#'
	call	$04032a                   ; 0418C6 || 	call	$040325                   ; 041894 || 0418C6 CD 2A 03 04 4496  			CALL    ITEMI			; Get the channel number
	exx                            ; 0418CA || 	exx                            ; 041898 || 0418CA D9          4497  			EXX
	ex	de,hl                       ; 0418CB || 	ex	de,hl                       ; 041899 || 0418CB EB          4498  			EX      DE,HL			; DE: The channel number
	ret                            ; 0418CC || 	ret                            ; 04189A || 0418CC C9          4499  			RET
	call	$041ded                   ; 0418CD || 	call	$041db5                   ; 04189B || 0418CD CD ED 1D 04 4506  ASSEM:			CALL    SKIP
	inc	iy                         ; 0418D1 || 	inc	iy                         ; 04189F || 0418D1 FD 23       4507  			INC     IY
	cp	$3a                         ; 0418D3 || 	cp	$3a                         ; 0418A1 || 0418D3 FE 3A       4508  			CP      ':'
	jr	z,$-$08                     ; 0418D5 || 	jr	z,$-$08                     ; 0418A3 || 0418D5 28 F6       4509  			JR      Z,ASSEM
	cp	$5d                         ; 0418D7 || 	cp	$5d                         ; 0418A5 || 0418D7 FE 5D       4510  			CP      ']'
	ret	z                          ; 0418D9 || 	ret	z                          ; 0418A7 || 0418D9 C8          4511  			RET     Z
	cp	$0d                         ; 0418DA || 	cp	$0d                         ; 0418A8 || 0418DA FE 0D       4512  			CP      CR
	ret	z                          ; 0418DC || 	ret	z                          ; 0418AA || 0418DC C8          4513  			RET     Z
	dec	iy                         ; 0418DD || 	dec	iy                         ; 0418AB || 0418DD FD 2B       4514  			DEC     IY
	ld	ix,($044c40)                ; 0418DF || 	ld	ix,($044c40)                ; 0418AD || 0418DF DD 2A 40 4C 4515  			LD      IX,(PC)         	; Program counter (P% - defined in equs.inc)
	ld	hl,$044d40                  ; 0418E4 || 	ld	hl,$044d40                  ; 0418B2 || 0418E4 21 40 4D 04 4516  			LD      HL,LISTON
	bit	6,(hl)                     ; 0418E8 || 	bit	6,(hl)                     ; 0418B6 || 0418E8 CB 76       4517  			BIT     6,(HL)
	jr	z,$+$07                     ; 0418EA || 	jr	z,$+$07                     ; 0418B8 || 0418EA 28 05       4518  			JR      Z,ASSEM0
	ld	ix,($044c3c)                ; 0418EC || 	ld	ix,($044c3c)                ; 0418BA || 0418EC DD 2A 3C 4C 4519  			LD      IX,(OC)         	; Code origin (O% - defined in equs.inc)
	push	ix                        ; 0418F1 || 	push	ix                        ; 0418BF || 0418F1 DD E5       4520  ASSEM0:			PUSH    IX
	push	iy                        ; 0418F3 || 	push	iy                        ; 0418C1 || 0418F3 FD E5       4521  			PUSH    IY
	call	$0419a5                   ; 0418F5 || 	call	$041973                   ; 0418C3 || 0418F5 CD A5 19 04 4522  			CALL    ASMB
	pop	bc                         ; 0418F9 || 	pop	bc                         ; 0418C7 || 0418F9 C1          4523  			POP     BC
	pop	de                         ; 0418FA || 	pop	de                         ; 0418C8 || 0418FA D1          4524  			POP     DE
	ret	c                          ; 0418FB || 	ret	c                          ; 0418C9 || 0418FB D8          4525  			RET     C
	call	$041ded                   ; 0418FC || 	call	$041db5                   ; 0418CA || 0418FC CD ED 1D 04 4526  			CALL    SKIP
	scf                            ; 041900 || 	scf                            ; 0418CE || 041900 37          4527  			SCF
	ret	nz                         ; 041901 || 	ret	nz                         ; 0418CF || 041901 C0          4528  			RET     NZ
	dec	iy                         ; 041902 || 	dec	iy                         ; 0418D0 || 041902 FD 2B       4529  			DEC     IY
	inc	iy                         ; 041904 || 	inc	iy                         ; 0418D2 || 041904 FD 23       4530  ASSEM3:			INC     IY
	ld	a,(iy)                      ; 041906 || 	ld	a,(iy)                      ; 0418D4 || 041906 FD 7E 00    4531  			LD      A,(IY)
	call	$0417b3                   ; 041909 || 	call	$041781                   ; 0418D7 || 041909 CD B3 17 04 4532  			CALL    TERM0
	jr	nz,$-$09                    ; 04190D || 	jr	nz,$-$09                    ; 0418DB || 04190D 20 F5       4533  			JR      NZ,ASSEM3
	ld	a,($044d40)                 ; 04190F || 	ld	a,($044d40)                 ; 0418DD || 04190F 3A 40 4D 04 4534  			LD      A,(LISTON)
	push	ix                        ; 041913 || 	push	ix                        ; 0418E1 || 041913 DD E5       4535  			PUSH    IX
	pop	hl                         ; 041915 || 	pop	hl                         ; 0418E3 || 041915 E1          4536  			POP     HL
	or	a                           ; 041916 || 	or	a                           ; 0418E4 || 041916 B7          4537  			OR      A
	sbc	hl,de                      ; 041917 || 	sbc	hl,de                      ; 0418E5 || 041917 ED 52       4538  			SBC     HL,DE
	ex	de,hl                       ; 041919 || 	ex	de,hl                       ; 0418E7 || 041919 EB          4539  			EX      DE,HL           	; DE: Number of bytes
	push	hl                        ; 04191A || 	push	hl                        ; 0418E8 || 04191A E5          4540  			PUSH    HL
	ld	hl,($044c40)                ; 04191B || 	ld	hl,($044c40)                ; 0418E9 || 04191B 2A 40 4C 04 4541  			LD      HL,(PC)
	push	hl                        ; 04191F || 	push	hl                        ; 0418ED || 04191F E5          4542  			PUSH    HL
	add	hl,de                      ; 041920 || 	add	hl,de                      ; 0418EE || 041920 19          4543  			ADD     HL,DE
	ld	($044c40),hl                ; 041921 || 	ld	($044c40),hl                ; 0418EF || 041921 22 40 4C 04 4544  			LD      (PC),HL         	; Update PC
	bit	6,a                        ; 041925 || 	bit	6,a                        ; 0418F3 || 041925 CB 77       4545  			BIT     6,A
	jr	z,$+$0b                     ; 041927 || 	jr	z,$+$0b                     ; 0418F5 || 041927 28 09       4546  			JR      Z,ASSEM5
	ld	hl,($044c3c)                ; 041929 || 	ld	hl,($044c3c)                ; 0418F7 || 041929 2A 3C 4C 04 4547  			LD      HL,(OC)
	add	hl,de                      ; 04192D || 	add	hl,de                      ; 0418FB || 04192D 19          4548  			ADD     HL,DE
	ld	($044c3c),hl                ; 04192E || 	ld	($044c3c),hl                ; 0418FC || 04192E 22 3C 4C 04 4549  			LD      (OC),HL         	; Update OC
	pop	hl                         ; 041932 || 	pop	hl                         ; 041900 || 041932 E1          4550  ASSEM5:			POP     HL              	; Old PC
	pop	ix                         ; 041933 || 	pop	ix                         ; 041901 || 041933 DD E1       4551  			POP     IX              	; Code here
	bit	4,a                        ; 041935 || 	bit	4,a                        ; 041903 || 041935 CB 67       4552  			BIT     4,A
	jr	z,$-$6a                     ; 041937 || 	jr	z,$-$6a                     ; 041905 || 041937 28 94       4553  			JR      Z,ASSEM
	ld	($044d4a),hl                ; 041939 || 	ld	($044d4a),hl                ; 041907 || 041939 22 4A 4D 04 4554  			LD	(R0),HL			; Store HL in R0 so we can access the MSB
	ld	a,($044d4c)                 ; 04193D || 	ld	a,($044d4c)                 ; 04190B || 04193D 3A 4C 4D 04 4555  			LD	A,(R0+2)		; Print out the address
	call	$04198f                   ; 041941 || 	call	$04195d                   ; 04190F || 041941 CD 8F 19 04 4556  			CALL	HEX_EX
	ld	a,h                         ; 041945 || 	ld	a,h                         ; 041913 || 041945 7C          4557  			LD      A,H
	call	$04198f                   ; 041946 || 	call	$04195d                   ; 041914 || 041946 CD 8F 19 04 4558  			CALL    HEX_EX
	ld	a,l                         ; 04194A || 	ld	a,l                         ; 041918 || 04194A 7D          4559  			LD      A,L
	call	$041987                   ; 04194B || 	call	$041955                   ; 041919 || 04194B CD 87 19 04 4560  			CALL    HEXSP
	xor	a                          ; 04194F || 	xor	a                          ; 04191D || 04194F AF          4561  			XOR     A
	cp	e                           ; 041950 || 	cp	e                           ; 04191E || 041950 BB          4562  			CP      E
	jr	z,$+$1a                     ; 041951 || 	jr	z,$+$1a                     ; 04191F || 041951 28 18       4563  			JR      Z,ASSEM2
	ld	a,($044d3d)                 ; 041953 || 	ld	a,($044d3d)                 ; 041921 || 041953 3A 3D 4D 04 4565  ASSEM1:			LD      A,(COUNT)
	cp	$14                         ; 041957 || 	cp	$14                         ; 041925 || 041957 FE 14       4566  			CP      20
	ld	a,$07                       ; 041959 || 	ld	a,$07                       ; 041927 || 041959 3E 07       4567  			LD      A,7
	call	nc,$0417f5                ; 04195B || 	call	nc,$0417c3                ; 041929 || 04195B D4 F5 17 04 4568  			CALL    NC,TABIT        	; Next line
	ld	a,(ix)                      ; 04195F || 	ld	a,(ix)                      ; 04192D || 04195F DD 7E 00    4569  			LD      A,(IX)
	call	$041987                   ; 041962 || 	call	$041955                   ; 041930 || 041962 CD 87 19 04 4570  			CALL    HEXSP
	inc	ix                         ; 041966 || 	inc	ix                         ; 041934 || 041966 DD 23       4571  			INC     IX
	dec	e                          ; 041968 || 	dec	e                          ; 041936 || 041968 1D          4572  			DEC     E
	jr	nz,$-$16                    ; 041969 || 	jr	nz,$-$16                    ; 041937 || 041969 20 E8       4573  			JR      NZ,ASSEM1
	ld	a,$16                       ; 04196B || 	ld	a,$16                       ; 041939 || 04196B 3E 16       4575  ASSEM2:			LD      A,22			; Tab to the disassembly field
	call	$0417f5                   ; 04196D || 	call	$0417c3                   ; 04193B || 04196D CD F5 17 04 4576  			CALL    TABIT
	push	iy                        ; 041971 || 	push	iy                        ; 04193F || 041971 FD E5       4577  			PUSH    IY
	pop	hl                         ; 041973 || 	pop	hl                         ; 041941 || 041973 E1          4578  			POP     HL
	sbc	hl,bc                      ; 041974 || 	sbc	hl,bc                      ; 041942 || 041974 ED 42       4579  			SBC     HL,BC
	ld	a,(bc)                      ; 041976 || 	ld	a,(bc)                      ; 041944 || 041976 0A          4580  ASSEM4:			LD      A,(BC)
	call	$0439c2                   ; 041977 || 	call	$04396c                   ; 041945 || 041977 CD C2 39 04 4581  			CALL    OUT_
	inc	bc                         ; 04197B || 	inc	bc                         ; 041949 || 04197B 03          4582  			INC     BC
	dec	l                          ; 04197C || 	dec	l                          ; 04194A || 04197C 2D          4583  			DEC     L
	jr	nz,$-$07                    ; 04197D || 	jr	nz,$-$07                    ; 04194B || 04197D 20 F7       4584  			JR      NZ,ASSEM4
	call	$04399d                   ; 04197F || 	call	$043947                   ; 04194D || 04197F CD 9D 39 04 4585  			CALL    CRLF
	jp	$0418cd                     ; 041983 || 	jp	$04189b                     ; 041951 || 041983 C3 CD 18 04 4586  			JP      ASSEM
	call	$04198f                   ; 041987 || 	call	$04195d                   ; 041955 || 041987 CD 8F 19 04 4588  HEXSP:			CALL    HEX_EX
	ld	a,$20                       ; 04198B || 	ld	a,$20                       ; 041959 || 04198B 3E 20       4589  			LD      A,' '
	jr	$+$14                       ; 04198D || 	jr	$+$14                       ; 04195B || 04198D 18 12       4590  			JR      OUTCH1
	push	af                        ; 04198F || 	push	af                        ; 04195D || 04198F F5          4591  HEX_EX:			PUSH    AF
	rrca                           ; 041990 || 	rrca                           ; 04195E || 041990 0F          4592  			RRCA
	rrca                           ; 041991 || 	rrca                           ; 04195F || 041991 0F          4593  			RRCA
	rrca                           ; 041992 || 	rrca                           ; 041960 || 041992 0F          4594  			RRCA
	rrca                           ; 041993 || 	rrca                           ; 041961 || 041993 0F          4595  			RRCA
	call	$041999                   ; 041994 || 	call	$041967                   ; 041962 || 041994 CD 99 19 04 4596  			CALL    HEXOUT
	pop	af                         ; 041998 || 	pop	af                         ; 041966 || 041998 F1          4597  			POP     AF
	and	$0f                        ; 041999 || 	and	$0f                        ; 041967 || 041999 E6 0F       4598  HEXOUT:			AND     0FH
	add	a,$90                      ; 04199B || 	add	a,$90                      ; 041969 || 04199B C6 90       4599  			ADD     A,90H
	daa                            ; 04199D || 	daa                            ; 04196B || 04199D 27          4600  			DAA
	adc	a,$40                      ; 04199E || 	adc	a,$40                      ; 04196C || 04199E CE 40       4601  			ADC     A,40H
	daa                            ; 0419A0 || 	daa                            ; 04196E || 0419A0 27          4602  			DAA
	jp	$0439c2                     ; 0419A1 || 	jp	$04396c                     ; 04196F || 0419A1 C3 C2 39 04 4603  OUTCH1:			JP      OUT_
	cp	$2e                         ; 0419A5 || 	cp	$2e                         ; 041973 || 0419A5 FE 2E       4619  ASMB:			CP      '.'			; Check for a dot; this indicates a label
	jr	nz,$+$21                    ; 0419A7 || 	jr	nz,$+$21                    ; 041975 || 0419A7 20 1F       4620  			JR      NZ,ASMB1		; No, so just process the instruction
	inc	iy                         ; 0419A9 || 	inc	iy                         ; 041977 || 0419A9 FD 23       4621  			INC     IY			; Skip past the dot to the label name
	push	ix                        ; 0419AB || 	push	ix                        ; 041979 || 0419AB DD E5       4622  			PUSH    IX			; Store the code destination pointer
	call	$040c96                   ; 0419AD || 	call	$040c8e                   ; 04197B || 0419AD CD 96 0C 04 4623  			CALL    VAR_			; Create a variable
	push	af                        ; 0419B1 || 	push	af                        ; 04197F || 0419B1 F5          4624  			PUSH    AF
	call	$040998                   ; 0419B2 || 	call	$040993                   ; 041980 || 0419B2 CD 98 09 04 4625  			CALL    ZERO			; Zero it
	ld	a,($044c42)                 ; 0419B6 || 	ld	a,($044c42)                 ; 041984 || 0419B6 3A 42 4C 04 4626  			LD	A,(PC+2)
	ld	l,a                         ; 0419BA || 	ld	l,a                         ; 041988 || 0419BA 6F          4627  			LD	L,A			; The MSB of the 24-bit address
	exx                            ; 0419BB || 	exx                            ; 041989 || 0419BB D9          4628  			EXX
	ld	hl,($044c40)                ; 0419BC || 	ld	hl,($044c40)                ; 04198A || 0419BC 2A 40 4C 04 4629  			LD      HL,(PC)			; The LSW of the 24-bit address (only 16-bits used)
	exx                            ; 0419C0 || 	exx                            ; 04198E || 0419C0 D9          4630  			EXX
	pop	af                         ; 0419C1 || 	pop	af                         ; 04198F || 0419C1 F1          4631  			POP     AF
	call	$041608                   ; 0419C2 || 	call	$0415d6                   ; 041990 || 0419C2 CD 08 16 04 4632  			CALL    STORE			; Store the program counter
	pop	ix                         ; 0419C6 || 	pop	ix                         ; 041994 || 0419C6 DD E1       4633  			POP     IX			; Restore the code destination pointer
	ld	a,($044d40)                 ; 0419C8 || 	ld	a,($044d40)                 ; 041996 || 0419C8 3A 40 4D 04 4635  ASMB1:			LD	A,(LISTON)		; Get the OPT flags
	and	$80                        ; 0419CC || 	and	$80                        ; 04199A || 0419CC E6 80       4636  			AND	80H
	ld	d,a                         ; 0419CE || 	ld	d,a                         ; 04199C || 0419CE 57          4637  			LD      D,A     		;  D: Clear the flags and set the initial ADL mode (copied from bit 7 of LISTON)
	call	$041ded                   ; 0419CF || 	call	$041db5                   ; 04199D || 0419CF CD ED 1D 04 4638  			CALL    SKIP			; Skip any whitespace
	ret	z                          ; 0419D3 || 	ret	z                          ; 0419A1 || 0419D3 C8          4639  			RET     Z			; And return if there is nothing further to process
	cp	$d6                         ; 0419D4 || 	cp	$d6                         ; 0419A2 || 0419D4 FE D6       4640  			CP      TCALL			; Check if it is the token CALL (it will have been tokenised by BASIC)
	ld	c,$c4                       ; 0419D6 || 	ld	c,$c4                       ; 0419A4 || 0419D6 0E C4       4641  			LD      C,0C4H			;  A: The base operand
	inc	iy                         ; 0419D8 || 	inc	iy                         ; 0419A6 || 0419D8 FD 23       4642  			INC     IY			; Skip past the token
	jp	z,$041b22                   ; 0419DA || 	jp	z,$041aea                   ; 0419A8 || 0419DA CA 22 1B 04 4643  			JP      Z,GROUP13_1		; And jump to GROUP13, which handles CALL
	dec	iy                         ; 0419DE || 	dec	iy                         ; 0419AC || 0419DE FD 2B       4644  			DEC     IY			; Skip back, as we're not doing the above at this point
	ld	hl,$041e04                  ; 0419E0 || 	ld	hl,$041dcc                  ; 0419AE || 0419E0 21 04 1E 04 4645  			LD      HL,OPCODS		; HL: Pointer to the eZ80 opcodes table
	call	$041d9c                   ; 0419E4 || 	call	$041d64                   ; 0419B2 || 0419E4 CD 9C 1D 04 4646  			CALL    FIND			; Find the opcode
	ret	c                          ; 0419E8 || 	ret	c                          ; 0419B6 || 0419E8 D8          4647  			RET     C			; If not found, then return; carry indicates an error condition
	ld	c,b                         ; 0419E9 || 	ld	c,b                         ; 0419B7 || 0419E9 48          4648  			LD      C,B     		;  C: A copy of the opcode
	sub	$44                        ; 0419EA || 	sub	$44                        ; 0419B8 || 0419EA D6 44       4653  			SUB     68			; The number of opcodes in GROUP0 and GROUP1
	jr	nc,$+$0a                    ; 0419EC || 	jr	nc,$+$0a                    ; 0419BA || 0419EC 30 08       4654  			JR      NC,GROUP02		; If not in that range, then check GROUP2
	cp	$cb                         ; 0419EE || 	cp	$cb                         ; 0419BC || 0419EE FE CB       4655  			CP      15-68			; Anything between 15 and 68 (neat compare trick here)
	call	nc,$041cf5                ; 0419F0 || 	call	nc,$041cbd                ; 0419BE || 0419F0 D4 F5 1C 04 4656  			CALL    NC,ED			; Needs to be prefixed with ED
	jr	$+$78                       ; 0419F4 || 	jr	$+$78                       ; 0419C2 || 0419F4 18 76       4657  			JR      BYTE0			; Then write the opcode byte
	sub	$0a                        ; 0419F6 || 	sub	$0a                        ; 0419C4 || 0419F6 D6 0A       4662  GROUP02:		SUB     10			; The number of opcodes in GROUP2 and GROUP3
	jr	nc,$+$14                    ; 0419F8 || 	jr	nc,$+$14                    ; 0419C6 || 0419F8 30 12       4663  			JR      NC,GROUP04		; If not in that range, then check GROUP4
	cp	$f9                         ; 0419FA || 	cp	$f9                         ; 0419C8 || 0419FA FE F9       4664  			CP      3-10			;
	call	c,$041d8a                 ; 0419FC || 	call	c,$041d52                 ; 0419CA || 0419FC DC 8A 1D 04 4665  			CALL    C,BIT_
	ret	c                          ; 041A00 || 	ret	c                          ; 0419CE || 041A00 D8          4666  			RET     C
	call	$041d5b                   ; 041A01 || 	call	$041d23                   ; 0419CF || 041A01 CD 5B 1D 04 4667  			CALL    REGLO
	ret	c                          ; 041A05 || 	ret	c                          ; 0419D3 || 041A05 D8          4668  			RET     C
	call	$041cf9                   ; 041A06 || 	call	$041cc1                   ; 0419D4 || 041A06 CD F9 1C 04 4669  			CALL    CB
	jr	$+$62                       ; 041A0A || 	jr	$+$62                       ; 0419D8 || 041A0A 18 60       4670  			JR      BYTE0
	sub	$03                        ; 041A0C || 	sub	$03                        ; 0419DA || 041A0C D6 03       4674  GROUP04:		SUB     3			; The number of opcodes in GROUP4
	jr	nc,$+$09                    ; 041A0E || 	jr	nc,$+$09                    ; 0419DC || 041A0E 30 07       4675  			JR      NC,GROUP05		; If not in that range, then check GROUP5
	call	$041d7d                   ; 041A10 || 	call	$041d45                   ; 0419DE || 041A10 CD 7D 1D 04 4676  GROUP04_1:		CALL    PAIR_EX
	ret	c                          ; 041A14 || 	ret	c                          ; 0419E2 || 041A14 D8          4677  			RET     C
	jr	$+$57                       ; 041A15 || 	jr	$+$57                       ; 0419E3 || 041A15 18 55       4678  			JR      BYTE0
	sub	$0a                        ; 041A17 || 	sub	$0a                        ; 0419E5 || 041A17 D6 0A       4683  GROUP05:		SUB     8+2			; The number of opcodes in GROUP5 and GROUP6
	jr	nc,$+$3b                    ; 041A19 || 	jr	nc,$+$3b                    ; 0419E7 || 041A19 30 39       4684  			JR      NC,GROUP07
	cp	$fd                         ; 041A1B || 	cp	$fd                         ; 0419E9 || 041A1B FE FD       4685  			CP      5-8
	ld	b,$07                       ; 041A1D || 	ld	b,$07                       ; 0419EB || 041A1D 06 07       4686  			LD      B,7
	call	nc,$041d09                ; 041A1F || 	call	nc,$041cd1                ; 0419ED || 041A1F D4 09 1D 04 4687  			CALL    NC,OPND			; Get the first operand
	ld	a,b                         ; 041A23 || 	ld	a,b                         ; 0419F1 || 041A23 78          4688  			LD      A,B
	cp	$07                         ; 041A24 || 	cp	$07                         ; 0419F2 || 041A24 FE 07       4689  			CP      7			; Is the operand 'A'?
	jr	nz,$+$17                    ; 041A26 || 	jr	nz,$+$17                    ; 0419F4 || 041A26 20 15       4690  			JR      NZ,GROUP05_HL		; No, so check for HL, IX or IY
	call	$041d5b                   ; 041A28 || 	call	$041d23                   ; 0419F6 || 041A28 CD 5B 1D 04 4692  GROUP05_1:		CALL    REGLO			; Handle ADD A,?
	ld	a,c                         ; 041A2C || 	ld	a,c                         ; 0419FA || 041A2C 79          4693  			LD      A,C
	jr	nc,$+$30                    ; 041A2D || 	jr	nc,$+$30                    ; 0419FB || 041A2D 30 2E       4694  			JR      NC,BIND1		; If it is a register, then write that out
	xor	$46                        ; 041A2F || 	xor	$46                        ; 0419FD || 041A2F EE 46       4695  			XOR     46H			; Handle ADD A,n
	call	$041cfb                   ; 041A31 || 	call	$041cc3                   ; 0419FF || 041A31 CD FB 1C 04 4696  			CALL    BIND
	call	$041d3b                   ; 041A35 || 	call	$041d03                   ; 041A03 || 041A35 CD 3B 1D 04 4697  DB_:			CALL    NUMBER
	jp	$041af4                     ; 041A39 || 	jp	$041abc                     ; 041A07 || 041A39 C3 F4 1A 04 4698  			JP      VAL8
	and	$3f                        ; 041A3D || 	and	$3f                        ; 041A0B || 041A3D E6 3F       4700  GROUP05_HL:		AND     3FH
	cp	$0c                         ; 041A3F || 	cp	$0c                         ; 041A0D || 041A3F FE 0C       4701  			CP      12
	scf                            ; 041A41 || 	scf                            ; 041A0F || 041A41 37          4702  			SCF
	ret	nz                         ; 041A42 || 	ret	nz                         ; 041A10 || 041A42 C0          4703  			RET     NZ
	ld	a,c                         ; 041A43 || 	ld	a,c                         ; 041A11 || 041A43 79          4704  			LD      A,C
	cp	$80                         ; 041A44 || 	cp	$80                         ; 041A12 || 041A44 FE 80       4705  			CP      80H
	ld	c,$09                       ; 041A46 || 	ld	c,$09                       ; 041A14 || 041A46 0E 09       4706  			LD      C,9
	jr	z,$-$38                     ; 041A48 || 	jr	z,$-$38                     ; 041A16 || 041A48 28 C6       4707  			JR      Z,GROUP04_1
	xor	$1c                        ; 041A4A || 	xor	$1c                        ; 041A18 || 041A4A EE 1C       4708  			XOR     1CH
	rrca                           ; 041A4C || 	rrca                           ; 041A1A || 041A4C 0F          4709  			RRCA
	ld	c,a                         ; 041A4D || 	ld	c,a                         ; 041A1B || 041A4D 4F          4710  			LD      C,A
	call	$041cf5                   ; 041A4E || 	call	$041cbd                   ; 041A1C || 041A4E CD F5 1C 04 4711  			CALL    ED
	jr	$-$42                       ; 041A52 || 	jr	$-$42                       ; 041A20 || 041A52 18 BC       4712  			JR      GROUP04_1
	sub	$02                        ; 041A54 || 	sub	$02                        ; 041A22 || 041A54 D6 02       4716  GROUP07:		SUB     2			; The number of opcodes in GROUP7
	jr	nc,$+$1b                    ; 041A56 || 	jr	nc,$+$1b                    ; 041A24 || 041A56 30 19       4717  			JR      NC,GROUP08
	call	$041d62                   ; 041A58 || 	call	$041d2a                   ; 041A26 || 041A58 CD 62 1D 04 4718  			CALL    REGHI
	ld	a,c                         ; 041A5C || 	ld	a,c                         ; 041A2A || 041A5C 79          4719  			LD      A,C
	jp	nc,$041cfb                  ; 041A5D || 	jp	nc,$041cc3                  ; 041A2B || 041A5D D2 FB 1C 04 4720  BIND1:			JP      NC,BIND
	xor	$64                        ; 041A61 || 	xor	$64                        ; 041A2F || 041A61 EE 64       4721  			XOR     64H
	rlca                           ; 041A63 || 	rlca                           ; 041A31 || 041A63 07          4722  			RLCA
	rlca                           ; 041A64 || 	rlca                           ; 041A32 || 041A64 07          4723  			RLCA
	rlca                           ; 041A65 || 	rlca                           ; 041A33 || 041A65 07          4724  			RLCA
	ld	c,a                         ; 041A66 || 	ld	c,a                         ; 041A34 || 041A66 4F          4725  			LD      C,A
	call	$041d82                   ; 041A67 || 	call	$041d4a                   ; 041A35 || 041A67 CD 82 1D 04 4726  			CALL    PAIR1_EX
	ret	c                          ; 041A6B || 	ret	c                          ; 041A39 || 041A6B D8          4727  			RET     C
	ld	a,c                         ; 041A6C || 	ld	a,c                         ; 041A3A || 041A6C 79          4728  BYTE0:			LD      A,C
	jp	$041d2a                     ; 041A6D || 	jp	$041cf2                     ; 041A3B || 041A6D C3 2A 1D 04 4729  			JP      BYTE_
	sub	$02                        ; 041A71 || 	sub	$02                        ; 041A3F || 041A71 D6 02       4733  GROUP08:		SUB	2			; The number of opcodes in GROUP8
	jr	nc,$+$2e                    ; 041A73 || 	jr	nc,$+$28                    ; 041A41 || 041A73 30 2C       4734  			JR	NC,GROUP09
	cp	$ff                         ; 041A75 || 	cp	$ff                         ; 041A43 || 041A75 FE FF       4735  			CP	1-2
	call	z,$041d3b                 ; 041A77 || 	call	z,$041d03                 ; 041A45 || 041A77 CC 3B 1D 04 4736  			CALL    Z,NUMBER		; Fetch number first if OUT
	ex	af,af'                      ; 041A7B || 	ex	af,af'                      ; 041A49 || 041A7B 08          4737  			EX      AF,AF'			; Save flags
	call	$041d4f                   ; 041A7C || 	call	$041d17                   ; 041A4A || 041A7C CD 4F 1D 04 4738  			CALL    REG			; Get the register value regardless
	ret	c                          ; 041A80 || 	ret	c                          ; 041A4E || 041A80 D8          4739  			RET     C			; Return if not a register
	ex	af,af'                      ; 041A81 || 	ex	af,af'                      ; 041A4F || 041A81 08          4740  			EX      AF,AF'			; Restore the flags
	call	c,$041d3b                 ; 041A82 || 	call	c,$041d03                 ; 041A50 || 041A82 DC 3B 1D 04 4741  			CALL    C,NUMBER		; Fetch number last if IN
	ld	a,b                         ; 041A86 || 	ld	a,b                         ; 041A54 || 041A86 78          4742  			LD	A,B			; Get the register number
	cp	$06                         ; 041A87 || 	cp	$06                         ; 041A55 || 041A87 FE 06       4743  			CP	6			; Fail on (HL)
	scf                            ; 041A89 || 	scf                            ; 041A57 || 041A89 37          4744  			SCF
	ret	z                          ; 041A8A || 	ret	z                          ; 041A58 || 041A8A C8          4745  			RET	Z
	cp	$08                         ; 041A8B || 	cp	$08                         ; 041A59 || 041A8B FE 08       4746  			CP	8			; Check it is just single pairs only
	ccf                            ; 041A8D || 	ccf                            ; 041A5B || 041A8D 3F          4747  			CCF
	ret	c                          ; 041A8E || 	ret	c                          ; 041A5C || 041A8E D8          4748  			RET	C			; And return if it is an invalid register
	rlca                           ; 041A8F || 	rlca                           ; 041A5D || 041A8F 07          4749  			RLCA				; Bind with the operand
	rlca                           ; 041A90 || 	rlca                           ; 041A5E || 041A90 07          4750  			RLCA
	rlca                           ; 041A91 || 	rlca                           ; 041A5F || 041A91 07          4751  			RLCA
	add	a,c                        ; 041A92 || 	add	a,c                        ; 041A60 || 041A92 81          4752  			ADD	A,C
	ld	c,a                         ; 041A93                                         || 041A93 4F          4753  			LD	C,A
	call	$041cf5                   ; 041A94                                         || 041A94 CD F5 1C 04 4754  			CALL	ED			; Prefix with ED
	ld	a,c                         ; 041A98                                         || 041A98 79          4755  			LD	A,C
	call	$041d2a                   ; 041A99 || 	call	$041cf2                   ; 041A61 || 041A99 CD 2A 1D 04 4756  			CALL	BYTE_			; Write out the operand
	jp	$041af4                     ; 041A9D || 	jp	$041abc                     ; 041A65 || 041A9D C3 F4 1A 04 4757  			JP	VAL8			; Write out the value
	sub	$02                        ; 041AA1 || 	sub	$02                        ; 041A69 || 041AA1 D6 02       4762  GROUP09:		SUB     2			; The number of opcodes in GROUP09 amd GROUP10
	jr	nc,$+$27                    ; 041AA3 || 	jr	nc,$+$27                    ; 041A6B || 041AA3 30 25       4763  			JR      NC,GROUP11
	cp	$ff                         ; 041AA5 || 	cp	$ff                         ; 041A6D || 041AA5 FE FF       4764  			CP      1-2			; Check if Group 9 or Group 1
	call	z,$041ce9                 ; 041AA7 || 	call	z,$041cb1                 ; 041A6F || 041AA7 CC E9 1C 04 4765  			CALL    Z,CORN			; Call CORN if Group 10 (OUT)
	ex	af,af'                      ; 041AAB || 	ex	af,af'                      ; 041A73 || 041AAB 08          4766  			EX      AF,AF'			; Save flags
	call	$041d62                   ; 041AAC || 	call	$041d2a                   ; 041A74 || 041AAC CD 62 1D 04 4767  			CALL    REGHI			; Get the register value regardless
	ret	c                          ; 041AB0 || 	ret	c                          ; 041A78 || 041AB0 D8          4768  			RET     C			; Return if not a register
	ex	af,af'                      ; 041AB1 || 	ex	af,af'                      ; 041A79 || 041AB1 08          4769  			EX      AF,AF'			; Restore the flags
	call	c,$041ce9                 ; 041AB2 || 	call	c,$041cb1                 ; 041A7A || 041AB2 DC E9 1C 04 4770  			CALL    C,CORN			; Call CORN if Group 9 (IN)
	inc	h                          ; 041AB6 || 	inc	h                          ; 041A7E || 041AB6 24          4771  			INC     H			; If it is IN r,(C) or OUT (C),r then
	jr	z,$-$4b                     ; 041AB7 || 	jr	z,$-$45                     ; 041A7F || 041AB7 28 B3       4772  			JR      Z,BYTE0			; Just write the operand out
	ld	a,b                         ; 041AB9 || 	ld	a,b                         ; 041A81 || 041AB9 78          4774  			LD      A,B			; Check the register
	cp	$07                         ; 041ABA || 	cp	$07                         ; 041A82 || 041ABA FE 07       4775  			CP      7
	scf                            ; 041ABC || 	scf                            ; 041A84 || 041ABC 37          4776  			SCF
	ret	nz                         ; 041ABD || 	ret	nz                         ; 041A85 || 041ABD C0          4777  			RET     NZ			; If it is not A, then return
	ld	a,c                         ; 041ABE || 	ld	a,c                         ; 041A86 || 041ABE 79          4779  			LD      A,C			; Bind the register with the operand
	xor	$03                        ; 041ABF || 	xor	$03                        ; 041A87 || 041ABF EE 03       4780  			XOR     3
	rlca                           ; 041AC1 || 	rlca                           ; 041A89 || 041AC1 07          4781  			RLCA
	rlca                           ; 041AC2 || 	rlca                           ; 041A8A || 041AC2 07          4782  			RLCA
	rlca                           ; 041AC3 || 	rlca                           ; 041A8B || 041AC3 07          4783  			RLCA
	call	$041d2a                   ; 041AC4 || 	call	$041cf2                   ; 041A8C || 041AC4 CD 2A 1D 04 4784  			CALL    BYTE_			; Write out the operand
	jr	$+$2c                       ; 041AC8 || 	jr	$+$2c                       ; 041A90 || 041AC8 18 2A       4785  			JR      VAL8			; And the value
	sub	$02                        ; 041ACA || 	sub	$02                        ; 041A92 || 041ACA D6 02       4789  GROUP11:		SUB     2			; The number of opcodes in GROUP11
	jr	nc,$+$2d                    ; 041ACC || 	jr	nc,$+$2d                    ; 041A94 || 041ACC 30 2B       4790  			JR      NC,GROUP12
	cp	$ff                         ; 041ACE || 	cp	$ff                         ; 041A96 || 041ACE FE FF       4791  			CP      1-2
	call	nz,$041d69                ; 041AD0 || 	call	nz,$041d31                ; 041A98 || 041AD0 C4 69 1D 04 4792  			CALL    NZ,COND_
	ld	a,c                         ; 041AD4 || 	ld	a,c                         ; 041A9C || 041AD4 79          4793  			LD      A,C
	jr	nc,$+$04                    ; 041AD5 || 	jr	nc,$+$04                    ; 041A9D || 041AD5 30 02       4794  			JR      NC,@F
	ld	a,$18                       ; 041AD7 || 	ld	a,$18                       ; 041A9F || 041AD7 3E 18       4795  			LD      A,18H
	call	$041d2a                   ; 041AD9 || 	call	$041cf2                   ; 041AA1 || 041AD9 CD 2A 1D 04 4796  @@:			CALL    BYTE_
	call	$041d3b                   ; 041ADD || 	call	$041d03                   ; 041AA5 || 041ADD CD 3B 1D 04 4797  			CALL    NUMBER
	ld	de,($044c40)                ; 041AE1 || 	ld	de,($044c40)                ; 041AA9 || 041AE1 ED 5B 40 4C 4798  			LD      DE,(PC)
	inc	de                         ; 041AE6 || 	inc	de                         ; 041AAE || 041AE6 13          4799  			INC     DE
	scf                            ; 041AE7 || 	scf                            ; 041AAF || 041AE7 37          4800  			SCF
	sbc	hl,de                      ; 041AE8 || 	sbc	hl,de                      ; 041AB0 || 041AE8 ED 52       4801  			SBC     HL,DE
	ld	a,l                         ; 041AEA || 	ld	a,l                         ; 041AB2 || 041AEA 7D          4802  			LD      A,L
	rla                            ; 041AEB || 	rla                            ; 041AB3 || 041AEB 17          4803  			RLA
	sbc	a,a                        ; 041AEC || 	sbc	a,a                        ; 041AB4 || 041AEC 9F          4804  			SBC     A,A
	cp	h                           ; 041AED || 	cp	h                           ; 041AB5 || 041AED BC          4805  			CP      H
	ld	a,$01                       ; 041AEE || 	ld	a,$01                       ; 041AB6 || 041AEE 3E 01       4806  TOOFAR:			LD      A,1
	jp	nz,$0437b6                  ; 041AF0 || 	jp	nz,$043760                  ; 041AB8 || 041AF0 C2 B6 37 04 4807  			JP      NZ,ERROR_		; Throw an "Out of range" error
	ld	a,l                         ; 041AF4 || 	ld	a,l                         ; 041ABC || 041AF4 7D          4808  VAL8:			LD      A,L
	jp	$041d2a                     ; 041AF5 || 	jp	$041cf2                     ; 041ABD || 041AF5 C3 2A 1D 04 4809  			JP      BYTE_
	sub	$01                        ; 041AF9 || 	sub	$01                        ; 041AC1 || 041AF9 D6 01       4813  GROUP12:		SUB	1			; The number of opcodes in GROUP12
	jr	nc,$+$23                    ; 041AFB || 	jr	nc,$+$23                    ; 041AC3 || 041AFB 30 21       4814  			JR	NC,GROUP13
	call	$041c4f                   ; 041AFD || 	call	$041c17                   ; 041AC5 || 041AFD CD 4F 1C 04 4815  			CALL	EZ80SF_PART		; Evaluate the suffix (just LIL and SIS)
	ret	c                          ; 041B01 || 	ret	c                          ; 041AC9 || 041B01 D8          4816  			RET	C			; Exit if an invalid suffix is provided
	call	$041d69                   ; 041B02 || 	call	$041d31                   ; 041ACA || 041B02 CD 69 1D 04 4817  			CALL    COND_			; Evaluate the conditions
	ld	a,c                         ; 041B06 || 	ld	a,c                         ; 041ACE || 041B06 79          4818  			LD      A,C
	jr	nc,$+$0f                    ; 041B07 || 	jr	nc,$+$0f                    ; 041ACF || 041B07 30 0D       4819  			JR      NC,GROUP12_1
	ld	a,b                         ; 041B09 || 	ld	a,b                         ; 041AD1 || 041B09 78          4820  			LD      A,B
	and	$3f                        ; 041B0A || 	and	$3f                        ; 041AD2 || 041B0A E6 3F       4821  			AND     3FH
	cp	$06                         ; 041B0C || 	cp	$06                         ; 041AD4 || 041B0C FE 06       4822  			CP      6
	ld	a,$e9                       ; 041B0E || 	ld	a,$e9                       ; 041AD6 || 041B0E 3E E9       4823  			LD      A,0E9H
	jp	z,$041d2a                   ; 041B10 || 	jp	z,$041cf2                   ; 041AD8 || 041B10 CA 2A 1D 04 4824  			JP      Z,BYTE_
	ld	a,$c3                       ; 041B14 || 	ld	a,$c3                       ; 041ADC || 041B14 3E C3       4825  			LD      A,0C3H
	call	$041d2a                   ; 041B16 || 	call	$041cf2                   ; 041ADE || 041B16 CD 2A 1D 04 4826  GROUP12_1:		CALL    BYTE_			; Output the opcode (with conditions)
	jp	$041ca4                     ; 041B1A || 	jp	$041c6c                     ; 041AE2 || 041B1A C3 A4 1C 04 4827  			JP	ADDR_			; Output the address
	sub	$01                        ; 041B1E || 	sub	$01                        ; 041AE6 || 041B1E D6 01       4831  GROUP13:		SUB	1			; The number of opcodes in GROUP13
	jr	nc,$+$0e                    ; 041B20 || 	jr	nc,$+$0e                    ; 041AE8 || 041B20 30 0C       4832  			JR	NC,GROUP14
	call	$041c67                   ; 041B22 || 	call	$041c2f                   ; 041AEA || 041B22 CD 67 1C 04 4833  GROUP13_1:		CALL	EZ80SF_FULL		; Evaluate the suffix
	call	$041b49                   ; 041B26 || 	call	$041b11                   ; 041AEE || 041B26 CD 49 1B 04 4834  			CALL    GROUP15_1		; Output the opcode (with conditions)
	jp	$041ca4                     ; 041B2A || 	jp	$041c6c                     ; 041AF2 || 041B2A C3 A4 1C 04 4835  			JP	ADDR_			; Output the address
	sub	$01                        ; 041B2E || 	sub	$01                        ; 041AF6 || 041B2E D6 01       4839  GROUP14:		SUB	1			; The number of opcodes in GROUP14
	jr	nc,$+$15                    ; 041B30 || 	jr	nc,$+$15                    ; 041AF8 || 041B30 30 13       4840  			JR	NC,GROUP15
	call	$041c67                   ; 041B32 || 	call	$041c2f                   ; 041AFA || 041B32 CD 67 1C 04 4841  			CALL	EZ80SF_FULL		; Evaluate the suffix
	ret	c                          ; 041B36 || 	ret	c                          ; 041AFE || 041B36 D8          4842  			RET	C			; Exit if an invalid suffix provided
	call	$041d3b                   ; 041B37 || 	call	$041d03                   ; 041AFF || 041B37 CD 3B 1D 04 4843  			CALL    NUMBER
	and	c                          ; 041B3B || 	and	c                          ; 041B03 || 041B3B A1          4844  			AND     C
	or	h                           ; 041B3C || 	or	h                           ; 041B04 || 041B3C B4          4845  			OR      H
	jr	nz,$-$4f                    ; 041B3D || 	jr	nz,$-$4f                    ; 041B05 || 041B3D 20 AF       4846  			JR      NZ,TOOFAR
	ld	a,l                         ; 041B3F || 	ld	a,l                         ; 041B07 || 041B3F 7D          4847  			LD      A,L
	or	c                           ; 041B40 || 	or	c                           ; 041B08 || 041B40 B1          4848  			OR      C
	jp	$041d2a                     ; 041B41 || 	jp	$041cf2                     ; 041B09 || 041B41 C3 2A 1D 04 4849  	  		JP      BYTE_
	sub	$01                        ; 041B45 || 	sub	$01                        ; 041B0D || 041B45 D6 01       4853  GROUP15:		SUB	1			; The number of opcodes in GROUP15
	jr	nc,$+$11                    ; 041B47 || 	jr	nc,$+$11                    ; 041B0F || 041B47 30 0F       4854  			JR	NC,GROUP16
	call	$041d69                   ; 041B49 || 	call	$041d31                   ; 041B11 || 041B49 CD 69 1D 04 4855  GROUP15_1:		CALL    COND_
	ld	a,c                         ; 041B4D || 	ld	a,c                         ; 041B15 || 041B4D 79          4856  			LD      A,C
	jp	nc,$041d2a                  ; 041B4E || 	jp	nc,$041cf2                  ; 041B16 || 041B4E D2 2A 1D 04 4857  			JP      NC,BYTE_
	or	$09                         ; 041B52 || 	or	$09                         ; 041B1A || 041B52 F6 09       4858  			OR      9
	jp	$041d2a                     ; 041B54 || 	jp	$041cf2                     ; 041B1C || 041B54 C3 2A 1D 04 4859  			JP      BYTE_
	sub	$01                        ; 041B58 || 	sub	$01                        ; 041B20 || 041B58 D6 01       4863  GROUP16:		SUB	1			; The number of opcodes in GROUP16
	jr	nc,$+$76                    ; 041B5A || 	jr	nc,$+$76                    ; 041B22 || 041B5A 30 74       4864  			JR	NC,GROUP17
	call	$041c67                   ; 041B5C || 	call	$041c2f                   ; 041B24 || 041B5C CD 67 1C 04 4865  			CALL	EZ80SF_FULL		; Evaluate the suffix
	call	$041d98                   ; 041B60 || 	call	$041d60                   ; 041B28 || 041B60 CD 98 1D 04 4866  			CALL    LDOP			; Check for accumulator loads
	jp	nc,$041cc4                  ; 041B64 || 	jp	nc,$041c8c                  ; 041B2C || 041B64 D2 C4 1C 04 4867  			JP      NC,LDA			; Yes, so jump here
	call	$041d62                   ; 041B68 || 	call	$041d2a                   ; 041B30 || 041B68 CD 62 1D 04 4868  			CALL    REGHI
	ex	af,af'                      ; 041B6C || 	ex	af,af'                      ; 041B34 || 041B6C 08          4869  			EX      AF,AF'
	call	$041ded                   ; 041B6D || 	call	$041db5                   ; 041B35 || 041B6D CD ED 1D 04 4870  			CALL    SKIP
	cp	$28                         ; 041B71 || 	cp	$28                         ; 041B39 || 041B71 FE 28       4871  			CP      '('			; Check for bracket
	jr	z,$+$26                     ; 041B73 || 	jr	z,$+$26                     ; 041B3B || 041B73 28 24       4872  			JR      Z,LDIN			; Yes, so we're doing an indirect load from memory
	ex	af,af'                      ; 041B75 || 	ex	af,af'                      ; 041B3D || 041B75 08          4873  			EX      AF,AF'
	jp	nc,$041a28                  ; 041B76 || 	jp	nc,$0419f6                  ; 041B3E || 041B76 D2 28 1A 04 4874  			JP      NC,GROUP05_1		; Load single register direct; go here
	ld	c,$01                       ; 041B7A || 	ld	c,$01                       ; 041B42 || 041B7A 0E 01       4875  			LD      C,1
	call	$041d82                   ; 041B7C || 	call	$041d4a                   ; 041B44 || 041B7C CD 82 1D 04 4876  			CALL    PAIR1_EX
	ret	c                          ; 041B80 || 	ret	c                          ; 041B48 || 041B80 D8          4877  			RET     C
	ld	a,$0e                       ; 041B81 || 	ld	a,$0e                       ; 041B49 || 041B81 3E 0E       4878  			LD      A,14
	cp	b                           ; 041B83 || 	cp	b                           ; 041B4B || 041B83 B8          4879  			CP      B
	ld	b,a                         ; 041B84 || 	ld	b,a                         ; 041B4C || 041B84 47          4880  			LD      B,A
	call	z,$041d7d                 ; 041B85 || 	call	z,$041d45                 ; 041B4D || 041B85 CC 7D 1D 04 4881  			CALL    Z,PAIR_EX
	ld	a,b                         ; 041B89 || 	ld	a,b                         ; 041B51 || 041B89 78          4882  			LD      A,B
	and	$3f                        ; 041B8A || 	and	$3f                        ; 041B52 || 041B8A E6 3F       4883  			AND     3FH
	cp	$0c                         ; 041B8C || 	cp	$0c                         ; 041B54 || 041B8C FE 0C       4884  			CP      12
	ld	a,c                         ; 041B8E || 	ld	a,c                         ; 041B56 || 041B8E 79          4885  			LD      A,C
	jp	nz,$041b16                  ; 041B8F || 	jp	nz,$041ade                  ; 041B57 || 041B8F C2 16 1B 04 4886  			JP      NZ,GROUP12_1		; Load register pair direct; go here
	ld	a,$f9                       ; 041B93 || 	ld	a,$f9                       ; 041B5B || 041B93 3E F9       4887  			LD      A,0F9H
	jp	$041d2a                     ; 041B95 || 	jp	$041cf2                     ; 041B5D || 041B95 C3 2A 1D 04 4888  			JP      BYTE_
	ex	af,af'                      ; 041B99 || 	ex	af,af'                      ; 041B61 || 041B99 08          4890  LDIN:			EX      AF,AF'
	push	bc                        ; 041B9A || 	push	bc                        ; 041B62 || 041B9A C5          4891  			PUSH    BC
	call	nc,$041d5b                ; 041B9B || 	call	nc,$041d23                ; 041B63 || 041B9B D4 5B 1D 04 4892  			CALL    NC,REGLO
	ld	a,c                         ; 041B9F || 	ld	a,c                         ; 041B67 || 041B9F 79          4893  			LD      A,C
	pop	bc                         ; 041BA0 || 	pop	bc                         ; 041B68 || 041BA0 C1          4894  			POP     BC
	jp	nc,$041cfb                  ; 041BA1 || 	jp	nc,$041cc3                  ; 041B69 || 041BA1 D2 FB 1C 04 4895  			JP      NC,BIND
	ld	c,$0a                       ; 041BA5 || 	ld	c,$0a                       ; 041B6D || 041BA5 0E 0A       4896  			LD      C,0AH
	call	$041d82                   ; 041BA7 || 	call	$041d4a                   ; 041B6F || 041BA7 CD 82 1D 04 4897  			CALL    PAIR1_EX
	call	$041ccf                   ; 041BAB || 	call	$041c97                   ; 041B73 || 041BAB CD CF 1C 04 4898  			CALL    LD16
	jp	nc,$041b16                  ; 041BAF || 	jp	nc,$041ade                  ; 041B77 || 041BAF D2 16 1B 04 4899  			JP      NC,GROUP12_1
	call	$041d3b                   ; 041BB3 || 	call	$041d03                   ; 041B7B || 041BB3 CD 3B 1D 04 4900  			CALL    NUMBER
	ld	c,$02                       ; 041BB7 || 	ld	c,$02                       ; 041B7F || 041BB7 0E 02       4901  			LD      C,2
	call	$041d7d                   ; 041BB9 || 	call	$041d45                   ; 041B81 || 041BB9 CD 7D 1D 04 4902  			CALL    PAIR_EX
	call	$041ccf                   ; 041BBD || 	call	$041c97                   ; 041B85 || 041BBD CD CF 1C 04 4903  			CALL    LD16
	ret	c                          ; 041BC1 || 	ret	c                          ; 041B89 || 041BC1 D8          4904  			RET     C
	call	$041d2a                   ; 041BC2 || 	call	$041cf2                   ; 041B8A || 041BC2 CD 2A 1D 04 4905  			CALL    BYTE_
	bit	7,d                        ; 041BC6 || 	bit	7,d                        ; 041B8E || 041BC6 CB 7A       4906  			BIT	7,D			; Check the ADL flag
	jp	nz,$041cb9                  ; 041BC8 || 	jp	nz,$041c81                  ; 041B90 || 041BC8 C2 B9 1C 04 4907  			JP	NZ,VAL24 		; If it is set, then use 24-bit addresses
	jp	$041cac                     ; 041BCC || 	jp	$041c74                     ; 041B94 || 041BCC C3 AC 1C 04 4908  			JP      VAL16			; Otherwise use 16-bit addresses
	sub	$01                        ; 041BD0 || 	sub	$01                        ; 041B98 || 041BD0 D6 01       4912  GROUP17:		SUB	1			; The number of opcodes in GROUP17
	jr	nc,$+$27                    ; 041BD2 || 	jr	nc,$+$27                    ; 041B9A || 041BD2 30 25       4913  			JR	NC,OPTS
	call	$041cf5                   ; 041BD4 || 	call	$041cbd                   ; 041B9C || 041BD4 CD F5 1C 04 4914  			CALL	ED			; Needs to be prefixed with ED
	call	$041d4f                   ; 041BD8 || 	call	$041d17                   ; 041BA0 || 041BD8 CD 4F 1D 04 4915  			CALL	REG			; Fetch the register
	jr	nc,$+$10                    ; 041BDC || 	jr	nc,$+$10                    ; 041BA4 || 041BDC 30 0E       4916  			JR	NC,GROUP17_1		; It's just a register
	ld	a,$64                       ; 041BDE || 	ld	a,$64                       ; 041BA6 || 041BDE 3E 64       4918  			LD	A,64H			; Opcode for TST n
	call	$041d2a                   ; 041BE0 || 	call	$041cf2                   ; 041BA8 || 041BE0 CD 2A 1D 04 4919  			CALL	BYTE_			; Write out the opcode
	call	$041d3b                   ; 041BE4 || 	call	$041d03                   ; 041BAC || 041BE4 CD 3B 1D 04 4920  			CALL	NUMBER			; Get the number
	jp	$041af4                     ; 041BE8 || 	jp	$041abc                     ; 041BB0 || 041BE8 C3 F4 1A 04 4921  			JP	VAL8			; And write that out
	ld	a,b                         ; 041BEC || 	ld	a,b                         ; 041BB4 || 041BEC 78          4923  GROUP17_1:		LD	A,B			; Check the register rangs
	cp	$08                         ; 041BED || 	cp	$08                         ; 041BB5 || 041BED FE 08       4924  			CP	8
	ccf                            ; 041BEF || 	ccf                            ; 041BB7 || 041BEF 3F          4925  			CCF
	ret	c                          ; 041BF0 || 	ret	c                          ; 041BB8 || 041BF0 D8          4926  			RET	C			; Ret with carry flag set for error if out of range
	rlca                           ; 041BF1 || 	rlca                           ; 041BB9 || 041BF1 07          4927  			RLCA				; Get the opcode value
	rlca                           ; 041BF2 || 	rlca                           ; 041BBA || 041BF2 07          4928  			RLCA
	rlca                           ; 041BF3 || 	rlca                           ; 041BBB || 041BF3 07          4929  			RLCA
	add	a,c                        ; 041BF4 || 	add	a,c                        ; 041BBC || 041BF4 81          4930  			ADD	A,C			; Add the opcode base in
	jp	$041d2a                     ; 041BF5 || 	jp	$041cf2                     ; 041BBD || 041BF5 C3 2A 1D 04 4931  			JP	BYTE_
	sub	$02                        ; 041BF9 || 	sub	$02                        ; 041BC1 || 041BF9 D6 02       4936  OPTS:			SUB	2
	jr	nc,$+$2d                    ; 041BFB || 	jr	nc,$+$2d                    ; 041BC3 || 041BFB 30 2B       4937  			JR	NC, DEFS
	cp	$ff                         ; 041BFD || 	cp	$ff                         ; 041BC5 || 041BFD FE FF       4938  			CP	1-2			; Check for ADL opcode
	jr	z,$+$15                     ; 041BFF || 	jr	z,$+$15                     ; 041BC7 || 041BFF 28 13       4939  			JR	Z, ADL_
	call	$041d3b                   ; 041C01 || 	call	$041d03                   ; 041BC9 || 041C01 CD 3B 1D 04 4941  OPT:			CALL    NUMBER			; Fetch the OPT value
	ld	hl,$044d40                  ; 041C05 || 	ld	hl,$044d40                  ; 041BCD || 041C05 21 40 4D 04 4942  			LD      HL,LISTON		; Address of the LISTON/OPT flag
	and	$07                        ; 041C09 || 	and	$07                        ; 041BD1 || 041C09 E6 07       4943  			AND	7			; Only interested in the first three bits
	ld	c,a                         ; 041C0B || 	ld	c,a                         ; 041BD3 || 041C0B 4F          4944  			LD      C,A			; Store the new OPT value in C
	rld                            ; 041C0C || 	rld                            ; 041BD4 || 041C0C ED 6F       4945  			RLD				; Shift the top nibble of LISTON (OPT) into A
	and	$08                        ; 041C0E || 	and	$08                        ; 041BD6 || 041C0E E6 08       4946  			AND	8			; Clear the bottom three bits, preserving the ADL bit
	or	c                           ; 041C10 || 	or	c                           ; 041BD8 || 041C10 B1          4947  			OR	C			; OR in the new value
	rrd                            ; 041C11 || 	rrd                            ; 041BD9 || 041C11 ED 67       4948  			RRD				; And shift the nibble back in
	ret                            ; 041C13 || 	ret                            ; 041BDB || 041C13 C9          4949  			RET
	call	$041d3b                   ; 041C14 || 	call	$041d03                   ; 041BDC || 041C14 CD 3B 1D 04 4951  ADL_:			CALL	NUMBER			; Fetch the ADL value
	and	$01                        ; 041C18 || 	and	$01                        ; 041BE0 || 041C18 E6 01       4952  			AND	1			; Only interested if it is 0 or 1
	rrca                           ; 041C1A || 	rrca                           ; 041BE2 || 041C1A 0F          4953  			RRCA				; Rotate to bit 7
	ld	c,a                         ; 041C1B || 	ld	c,a                         ; 041BE3 || 041C1B 4F          4954  			LD	C,A			; Store in C
	ld	a,($044d40)                 ; 041C1C || 	ld	a,($044d40)                 ; 041BE4 || 041C1C 3A 40 4D 04 4955  			LD	A,(LISTON)		; Get the LISTON system variable
	and	$7f                        ; 041C20 || 	and	$7f                        ; 041BE8 || 041C20 E6 7F       4956  			AND	7Fh			; Clear bit 7
	or	c                           ; 041C22 || 	or	c                           ; 041BEA || 041C22 B1          4957  			OR	C			; OR in the ADL value
	ld	($044d40),a                 ; 041C23 || 	ld	($044d40),a                 ; 041BEB || 041C23 32 40 4D 04 4958  			LD	(LISTON),A		; Store
	ret                            ; 041C27 || 	ret                            ; 041BEF || 041C27 C9          4959  			RET
	or	a                           ; 041C28 || 	or	a                           ; 041BF0 || 041C28 B7          4963  DEFS:			OR	A			; Handle DEFB
	jp	z,$041a35                   ; 041C29 || 	jp	z,$041a03                   ; 041BF1 || 041C29 CA 35 1A 04 4964  			JP	Z, DB_
	dec	a                          ; 041C2D || 	dec	a                          ; 041BF5 || 041C2D 3D          4965  			DEC	A			; Handle DEFW
	jp	z,$041ca8                   ; 041C2E || 	jp	z,$041c70                   ; 041BF6 || 041C2E CA A8 1C 04 4966  			JP	Z, ADDR16
	dec	a                          ; 041C32 || 	dec	a                          ; 041BFA || 041C32 3D          4967  			DEC	A			; Handle DEFL
	jp	z,$041cb5                   ; 041C33 || 	jp	z,$041c7d                   ; 041BFB || 041C33 CA B5 1C 04 4968  			JP	Z, ADDR24
	push	ix                        ; 041C37 || 	push	ix                        ; 041BFF || 041C37 DD E5       4970  			PUSH    IX			; Handle DEFM
	call	$04031a                   ; 041C39 || 	call	$040315                   ; 041C01 || 041C39 CD 1A 03 04 4971  			CALL    EXPRS
	pop	ix                         ; 041C3D || 	pop	ix                         ; 041C05 || 041C3D DD E1       4972  			POP     IX
	ld	hl,$044a00                  ; 041C3F || 	ld	hl,$044a00                  ; 041C07 || 041C3F 21 00 4A 04 4973  			LD      HL,ACCS
	xor	a                          ; 041C43 || 	xor	a                          ; 041C0B || 041C43 AF          4974  @@:			XOR     A
	cp	e                           ; 041C44 || 	cp	e                           ; 041C0C || 041C44 BB          4975  			CP      E
	ret	z                          ; 041C45 || 	ret	z                          ; 041C0D || 041C45 C8          4976  			RET     Z
	ld	a,(hl)                      ; 041C46 || 	ld	a,(hl)                      ; 041C0E || 041C46 7E          4977  			LD      A,(HL)
	inc	hl                         ; 041C47 || 	inc	hl                         ; 041C0F || 041C47 23          4978  			INC     HL
	call	$041d2a                   ; 041C48 || 	call	$041cf2                   ; 041C10 || 041C48 CD 2A 1D 04 4979  			CALL    BYTE_
	dec	e                          ; 041C4C || 	dec	e                          ; 041C14 || 041C4C 1D          4980  			DEC     E
	jr	$-$0a                       ; 041C4D || 	jr	$-$0a                       ; 041C15 || 041C4D 18 F4       4981  			JR      @B
	ld	a,(iy)                      ; 041C4F || 	ld	a,(iy)                      ; 041C17 || 041C4F FD 7E 00    4986  EZ80SF_PART:		LD	A,(IY)			; Check for a dot
	cp	$2e                         ; 041C52 || 	cp	$2e                         ; 041C1A || 041C52 FE 2E       4987  			CP	'.'
	jr	z,$+$04                     ; 041C54 || 	jr	z,$+$04                     ; 041C1C || 041C54 28 02       4988  			JR	Z, @F			; If present, then carry on processing the eZ80 suffix
	or	a                           ; 041C56 || 	or	a                           ; 041C1E || 041C56 B7          4989  			OR	A			; Reset the carry flag (no error)
	ret                            ; 041C57 || 	ret                            ; 041C1F || 041C57 C9          4990  			RET				; And return
	inc	iy                         ; 041C58 || 	inc	iy                         ; 041C20 || 041C58 FD 23       4991  @@:			INC	IY			; Skip the dot
	push	bc                        ; 041C5A || 	push	bc                        ; 041C22 || 041C5A C5          4992  			PUSH	BC			; Push the operand
	ld	hl,$042083                  ; 041C5B || 	ld	hl,$04204b                  ; 041C23 || 041C5B 21 83 20 04 4993  			LD	HL,EZ80SFS_2		; Check the shorter fully qualified table (just LIL and SIS)
	call	$041d9c                   ; 041C5F || 	call	$041d64                   ; 041C27 || 041C5F CD 9C 1D 04 4994  			CALL	FIND			; Look up the operand
	jr	nc,$+$26                    ; 041C63 || 	jr	nc,$+$26                    ; 041C2B || 041C63 30 24       4995  			JR	NC,EZ80SF_OK
	pop	bc                         ; 041C65 || 	pop	bc                         ; 041C2D || 041C65 C1          4996  			POP	BC			; Not found at this point, so will return with a C (error)
	ret                            ; 041C66 || 	ret                            ; 041C2E || 041C66 C9          4997  			RET
	ld	a,(iy)                      ; 041C67 || 	ld	a,(iy)                      ; 041C2F || 041C67 FD 7E 00    4999  EZ80SF_FULL:		LD	A,(IY)			; Check for a dot
	cp	$2e                         ; 041C6A || 	cp	$2e                         ; 041C32 || 041C6A FE 2E       5000  			CP	'.'
	jr	z,$+$04                     ; 041C6C || 	jr	z,$+$04                     ; 041C34 || 041C6C 28 02       5001  			JR	Z,@F			; If present, then carry on processing the eZ80 suffix
	or	a                           ; 041C6E || 	or	a                           ; 041C36 || 041C6E B7          5002  			OR	A			; Reset the carry flag (no error)
	ret                            ; 041C6F || 	ret                            ; 041C37 || 041C6F C9          5003  			RET				; And return
	inc	iy                         ; 041C70 || 	inc	iy                         ; 041C38 || 041C70 FD 23       5004  @@:			INC	IY 			; Skip the dot
	push	bc                        ; 041C72 || 	push	bc                        ; 041C3A || 041C72 C5          5005  			PUSH	BC			; Push the operand
	ld	hl,$04207b                  ; 041C73 || 	ld	hl,$042043                  ; 041C3B || 041C73 21 7B 20 04 5006  			LD	HL,EZ80SFS_1		; First check the fully qualified table
	call	$041d9c                   ; 041C77 || 	call	$041d64                   ; 041C3F || 041C77 CD 9C 1D 04 5007  			CALL	FIND 			; Look up the operand
	jr	nc,$+$0e                    ; 041C7B || 	jr	nc,$+$0e                    ; 041C43 || 041C7B 30 0C       5008  			JR	NC,EZ80SF_OK		; Yes, we've found it, so go write it out
	call	$041c98                   ; 041C7D || 	call	$041c60                   ; 041C45 || 041C7D CD 98 1C 04 5009  			CALL	EZ80SF_TABLE		; Get the correct shortcut table in HL based upon the ADL mode
	call	$041d9c                   ; 041C81 || 	call	$041d64                   ; 041C49 || 041C81 CD 9C 1D 04 5010  			CALL	FIND
	jr	nc,$+$04                    ; 041C85 || 	jr	nc,$+$04                    ; 041C4D || 041C85 30 02       5011  			JR	NC,EZ80SF_OK
	pop	bc                         ; 041C87 || 	pop	bc                         ; 041C4F || 041C87 C1          5012  			POP	BC			; Not found at this point, so will return with a C (error)
	ret                            ; 041C88 || 	ret                            ; 041C50 || 041C88 C9          5013  			RET
	ld	a,b                         ; 041C89 || 	ld	a,b                         ; 041C51 || 041C89 78          5015  EZ80SF_OK:		LD	A,B			; The operand value
	call	nc,$041d2a                ; 041C8A || 	call	nc,$041cf2                ; 041C52 || 041C8A D4 2A 1D 04 5016  			CALL	NC,BYTE_ 		; Write it out if found
	res	7,d                        ; 041C8E || 	res	7,d                        ; 041C56 || 041C8E CB BA       5017  			RES	7,D			; Clear the default ADL mode from the flags
	and	$02                        ; 041C90 || 	and	$02                        ; 041C58 || 041C90 E6 02       5018  			AND	2			; Check the second half of the suffix (.xxL)
	rrca                           ; 041C92 || 	rrca                           ; 041C5A || 041C92 0F          5019  			RRCA				; Shift into bit 7
	rrca                           ; 041C93 || 	rrca                           ; 041C5B || 041C93 0F          5020  			RRCA
	or	d                           ; 041C94 || 	or	d                           ; 041C5C || 041C94 B2          5021  			OR	D			; Or into bit 7 of D
	ld	d,a                         ; 041C95 || 	ld	d,a                         ; 041C5D || 041C95 57          5022  			LD	D,A
	pop	bc                         ; 041C96 || 	pop	bc                         ; 041C5E || 041C96 C1          5023  			POP	BC 			; Restore the operand
	ret                            ; 041C97 || 	ret                            ; 041C5F || 041C97 C9          5024  			RET
	ld	hl,$04208c                  ; 041C98 || 	ld	hl,$042054                  ; 041C60 || 041C98 21 8C 20 04 5026  EZ80SF_TABLE:		LD	HL,EZ80SFS_ADL0		; Return with the ADL0 lookup table
	bit	7,d                        ; 041C9C || 	bit	7,d                        ; 041C64 || 041C9C CB 7A       5027  			BIT 	7,D			; if bit 7 of D is 0
	ret	z                          ; 041C9E || 	ret	z                          ; 041C66 || 041C9E C8          5028  			RET	Z
	ld	hl,$042097                  ; 041C9F || 	ld	hl,$04205f                  ; 041C67 || 041C9F 21 97 20 04 5029  			LD	HL,EZ80SFS_ADL1		; Otherwise return with the ADL1 lookup table
	ret                            ; 041CA3 || 	ret                            ; 041C6B || 041CA3 C9          5030  			RET
	bit	7,d                        ; 041CA4 || 	bit	7,d                        ; 041C6C || 041CA4 CB 7A       5032  ADDR_:			BIT	7,D			; Check the ADL flag
	jr	nz,$+$0f                    ; 041CA6 || 	jr	nz,$+$0f                    ; 041C6E || 041CA6 20 0D       5033  			JR	NZ,ADDR24 		; If it is set, then use 24-bit addresses
	call	$041d3b                   ; 041CA8 || 	call	$041d03                   ; 041C70 || 041CA8 CD 3B 1D 04 5035  ADDR16:			CALL	NUMBER			; Fetch an address (16-bit) and fall through to VAL16
	call	$041af4                   ; 041CAC || 	call	$041abc                   ; 041C74 || 041CAC CD F4 1A 04 5036  VAL16:			CALL    VAL8			; Write out a 16-bit value (HL)
	ld	a,h                         ; 041CB0 || 	ld	a,h                         ; 041C78 || 041CB0 7C          5037  			LD      A,H
	jp	$041d2a                     ; 041CB1 || 	jp	$041cf2                     ; 041C79 || 041CB1 C3 2A 1D 04 5038  			JP      BYTE_
	call	$041d3b                   ; 041CB5 || 	call	$041d03                   ; 041C7D || 041CB5 CD 3B 1D 04 5040  ADDR24:			CALL    NUMBER			; Fetch an address (24-bit) and fall through to VAL24
	call	$041cac                   ; 041CB9 || 	call	$041c74                   ; 041C81 || 041CB9 CD AC 1C 04 5041  VAL24:			CALL	VAL16			; Lower 16-bits are in HL
	exx                            ; 041CBD || 	exx                            ; 041C85 || 041CBD D9          5042  			EXX
	ld	a,l                         ; 041CBE || 	ld	a,l                         ; 041C86 || 041CBE 7D          5043  			LD	A,L			; Upper 16-bits are in HL', just need L' to make up 24-bit value
	exx                            ; 041CBF || 	exx                            ; 041C87 || 041CBF D9          5044  			EXX
	jp	$041d2a                     ; 041CC0 || 	jp	$041cf2                     ; 041C88 || 041CC0 C3 2A 1D 04 5045  			JP	BYTE_
	cp	$04                         ; 041CC4 || 	cp	$04                         ; 041C8C || 041CC4 FE 04       5047  LDA:			CP      4
	call	c,$041cf5                 ; 041CC6 || 	call	c,$041cbd                 ; 041C8E || 041CC6 DC F5 1C 04 5048  			CALL    C,ED
	ld	a,b                         ; 041CCA || 	ld	a,b                         ; 041C92 || 041CCA 78          5049  			LD      A,B
	jp	$041d2a                     ; 041CCB || 	jp	$041cf2                     ; 041C93 || 041CCB C3 2A 1D 04 5050  			JP      BYTE_
	ld	a,b                         ; 041CCF || 	ld	a,b                         ; 041C97 || 041CCF 78          5052  LD16:			LD      A,B
	jr	c,$+$11                     ; 041CD0 || 	jr	c,$+$11                     ; 041C98 || 041CD0 38 0F       5053  			JR      C,LD8
	ld	a,b                         ; 041CD2 || 	ld	a,b                         ; 041C9A || 041CD2 78          5054  			LD      A,B
	and	$3f                        ; 041CD3 || 	and	$3f                        ; 041C9B || 041CD3 E6 3F       5055  			AND     3FH
	cp	$0c                         ; 041CD5 || 	cp	$0c                         ; 041C9D || 041CD5 FE 0C       5056  			CP      12
	ld	a,c                         ; 041CD7 || 	ld	a,c                         ; 041C9F || 041CD7 79          5057  			LD      A,C
	ret	z                          ; 041CD8 || 	ret	z                          ; 041CA0 || 041CD8 C8          5058  			RET     Z
	call	$041cf5                   ; 041CD9 || 	call	$041cbd                   ; 041CA1 || 041CD9 CD F5 1C 04 5059  			CALL    ED
	ld	a,c                         ; 041CDD || 	ld	a,c                         ; 041CA5 || 041CDD 79          5060  			LD      A,C
	or	$43                         ; 041CDE || 	or	$43                         ; 041CA6 || 041CDE F6 43       5061  			OR      43H
	ret                            ; 041CE0 || 	ret                            ; 041CA8 || 041CE0 C9          5062  			RET
	cp	$07                         ; 041CE1 || 	cp	$07                         ; 041CA9 || 041CE1 FE 07       5064  LD8:			CP      7
	scf                            ; 041CE3 || 	scf                            ; 041CAB || 041CE3 37          5065  			SCF
	ret	nz                         ; 041CE4 || 	ret	nz                         ; 041CAC || 041CE4 C0          5066  			RET     NZ
	ld	a,c                         ; 041CE5 || 	ld	a,c                         ; 041CAD || 041CE5 79          5067  			LD      A,C
	or	$30                         ; 041CE6 || 	or	$30                         ; 041CAE || 041CE6 F6 30       5068  			OR      30H
	ret                            ; 041CE8 || 	ret                            ; 041CB0 || 041CE8 C9          5069  			RET
	push	bc                        ; 041CE9 || 	push	bc                        ; 041CB1 || 041CE9 C5          5073  CORN:			PUSH    BC
	call	$041d09                   ; 041CEA || 	call	$041cd1                   ; 041CB2 || 041CEA CD 09 1D 04 5074  			CALL    OPND			; Get the operand
	bit	5,b                        ; 041CEE || 	bit	5,b                        ; 041CB6 || 041CEE CB 68       5075  			BIT     5,B
	pop	bc                         ; 041CF0 || 	pop	bc                         ; 041CB8 || 041CF0 C1          5076  			POP     BC
	jr	z,$+$4a                     ; 041CF1 || 	jr	z,$+$4a                     ; 041CB9 || 041CF1 28 48       5077  			JR      Z,NUMBER		; If bit 5 is clear, then it's IN A,(N) or OUT (N),A, so fetch the port number
	ld	h,$ff                       ; 041CF3 || 	ld	h,$ff                       ; 041CBB || 041CF3 26 FF       5078  			LD      H,-1			; At this point it's IN r,(C) or OUT (C),r, so flag by setting H to &FF
	ld	a,$ed                       ; 041CF5 || 	ld	a,$ed                       ; 041CBD || 041CF5 3E ED       5080  ED:			LD      A,0EDH			; Write an ED prefix out
	jr	$+$33                       ; 041CF7 || 	jr	$+$33                       ; 041CBF || 041CF7 18 31       5081  			JR      BYTE_
	ld	a,$cb                       ; 041CF9 || 	ld	a,$cb                       ; 041CC1 || 041CF9 3E CB       5083  CB:			LD      A,0CBH
	cp	$76                         ; 041CFB || 	cp	$76                         ; 041CC3 || 041CFB FE 76       5084  BIND:			CP      76H
	scf                            ; 041CFD || 	scf                            ; 041CC5 || 041CFD 37          5085  			SCF
	ret	z                          ; 041CFE || 	ret	z                          ; 041CC6 || 041CFE C8          5086  			RET     Z               	; Reject LD (HL),(HL)
	call	$041d2a                   ; 041CFF || 	call	$041cf2                   ; 041CC7 || 041CFF CD 2A 1D 04 5087  			CALL    BYTE_
	bit	6,d                        ; 041D03 || 	bit	6,d                        ; 041CCB || 041D03 CB 72       5088  			BIT	6,D			; Check the index bit in flags
	ret	z                          ; 041D05 || 	ret	z                          ; 041CCD || 041D05 C8          5089  			RET     Z
	ld	a,e                         ; 041D06 || 	ld	a,e                         ; 041CCE || 041D06 7B          5090  			LD      A,E			; If there is an index, output the offset
	jr	$+$23                       ; 041D07 || 	jr	$+$23                       ; 041CCF || 041D07 18 21       5091  			JR      BYTE_
	push	hl                        ; 041D09 || 	push	hl                        ; 041CD1 || 041D09 E5          5100  OPND:			PUSH    HL			; Preserve HL
	ld	hl,$04200d                  ; 041D0A || 	ld	hl,$041fd5                  ; 041CD2 || 041D0A 21 0D 20 04 5101  			LD      HL,OPRNDS		; The operands table
	call	$041d9c                   ; 041D0E || 	call	$041d64                   ; 041CD6 || 041D0E CD 9C 1D 04 5102  			CALL    FIND			; Find the operand
	pop	hl                         ; 041D12 || 	pop	hl                         ; 041CDA || 041D12 E1          5103  			POP     HL
	ret	c                          ; 041D13 || 	ret	c                          ; 041CDB || 041D13 D8          5104  			RET     C			; Return if not found
	bit	7,b                        ; 041D14 || 	bit	7,b                        ; 041CDC || 041D14 CB 78       5105  			BIT     7,B			; Check if it is an index register (IX, IY)
	ret	z                          ; 041D16 || 	ret	z                          ; 041CDE || 041D16 C8          5106  			RET     Z			; Return if it isn't
	set	6,d                        ; 041D17 || 	set	6,d                        ; 041CDF || 041D17 CB F2       5107  			SET	6,D			; Set flag to indicate we've got an index
	bit	3,b                        ; 041D19 || 	bit	3,b                        ; 041CE1 || 041D19 CB 58       5108  			BIT     3,B			; Check if an offset is required
	push	hl                        ; 041D1B || 	push	hl                        ; 041CE3 || 041D1B E5          5109  			PUSH    HL
	call	z,$041d31                 ; 041D1C || 	call	z,$041cf9                 ; 041CE4 || 041D1C CC 31 1D 04 5110  			CALL    Z,OFFSET_EX		; If bit 3 of B is zero, then get the offset
	ld	e,l                         ; 041D20 || 	ld	e,l                         ; 041CE8 || 041D20 5D          5111  			LD      E,L			; E: The offset
	pop	hl                         ; 041D21 || 	pop	hl                         ; 041CE9 || 041D21 E1          5112  			POP     HL
	ld	a,$dd                       ; 041D22 || 	ld	a,$dd                       ; 041CEA || 041D22 3E DD       5113  			LD	A,DDH			; IX prefix
	bit	6,b                        ; 041D24 || 	bit	6,b                        ; 041CEC || 041D24 CB 70       5114  			BIT     6,B			; If bit 6 is reset then
	jr	z,$+$04                     ; 041D26 || 	jr	z,$+$04                     ; 041CEE || 041D26 28 02       5115  			JR      Z,BYTE_			; It's an IX instruction, otherwise set
	ld	a,$fd                       ; 041D28 || 	ld	a,$fd                       ; 041CF0 || 041D28 3E FD       5116  			LD	A,FDH			; IY prefix
	ld	(ix),a                      ; 041D2A || 	ld	(ix),a                      ; 041CF2 || 041D2A DD 77 00    5118  BYTE_:			LD      (IX),A			; Write a byte out
	inc	ix                         ; 041D2D || 	inc	ix                         ; 041CF5 || 041D2D DD 23       5119  			INC     IX
	or	a                           ; 041D2F || 	or	a                           ; 041CF7 || 041D2F B7          5120  			OR      A
	ret                            ; 041D30 || 	ret                            ; 041CF8 || 041D30 C9          5121  			RET
	ld	a,(iy)                      ; 041D31 || 	ld	a,(iy)                      ; 041CF9 || 041D31 FD 7E 00    5123  OFFSET_EX:			LD      A,(IY)
	cp	$29                         ; 041D34 || 	cp	$29                         ; 041CFC || 041D34 FE 29       5124  			CP      ')'
	ld	hl,$000000                  ; 041D36 || 	ld	hl,$000000                  ; 041CFE || 041D36 21 00 00 00 5125  			LD      HL,0
	ret	z                          ; 041D3A || 	ret	z                          ; 041D02 || 041D3A C8          5126  			RET     Z
	call	$041ded                   ; 041D3B || 	call	$041db5                   ; 041D03 || 041D3B CD ED 1D 04 5127  NUMBER:			CALL    SKIP
	push	bc                        ; 041D3F || 	push	bc                        ; 041D07 || 041D3F C5          5128  			PUSH    BC
	push	de                        ; 041D40 || 	push	de                        ; 041D08 || 041D40 D5          5129  			PUSH    DE
	push	ix                        ; 041D41 || 	push	ix                        ; 041D09 || 041D41 DD E5       5130  			PUSH    IX
	call	$04030f                   ; 041D43 || 	call	$04030a                   ; 041D0B || 041D43 CD 0F 03 04 5131  			CALL    EXPRI
	pop	ix                         ; 041D47 || 	pop	ix                         ; 041D0F || 041D47 DD E1       5132  			POP     IX
	exx                            ; 041D49 || 	exx                            ; 041D11 || 041D49 D9          5133  			EXX
	pop	de                         ; 041D4A || 	pop	de                         ; 041D12 || 041D4A D1          5134  			POP     DE
	pop	bc                         ; 041D4B || 	pop	bc                         ; 041D13 || 041D4B C1          5135  			POP     BC
	ld	a,l                         ; 041D4C || 	ld	a,l                         ; 041D14 || 041D4C 7D          5136  			LD      A,L
	or	a                           ; 041D4D || 	or	a                           ; 041D15 || 041D4D B7          5137  			OR      A
	ret                            ; 041D4E || 	ret                            ; 041D16 || 041D4E C9          5138  			RET
	call	$041d09                   ; 041D4F || 	call	$041cd1                   ; 041D17 || 041D4F CD 09 1D 04 5140  REG:			CALL    OPND
	ret	c                          ; 041D53 || 	ret	c                          ; 041D1B || 041D53 D8          5141  			RET     C
	ld	a,b                         ; 041D54 || 	ld	a,b                         ; 041D1C || 041D54 78          5142  			LD      A,B
	and	$3f                        ; 041D55 || 	and	$3f                        ; 041D1D || 041D55 E6 3F       5143  			AND     3FH
	cp	$08                         ; 041D57 || 	cp	$08                         ; 041D1F || 041D57 FE 08       5144  			CP      8
	ccf                            ; 041D59 || 	ccf                            ; 041D21 || 041D59 3F          5145  			CCF
	ret                            ; 041D5A || 	ret                            ; 041D22 || 041D5A C9          5146  			RET
	call	$041d4f                   ; 041D5B || 	call	$041d17                   ; 041D23 || 041D5B CD 4F 1D 04 5148  REGLO:			CALL    REG
	ret	c                          ; 041D5F || 	ret	c                          ; 041D27 || 041D5F D8          5149  			RET     C
	jr	$+$35                       ; 041D60 || 	jr	$+$35                       ; 041D28 || 041D60 18 33       5150  			JR      ORC
	call	$041d4f                   ; 041D62 || 	call	$041d17                   ; 041D2A || 041D62 CD 4F 1D 04 5152  REGHI:			CALL    REG
	ret	c                          ; 041D66 || 	ret	c                          ; 041D2E || 041D66 D8          5153  			RET     C
	jr	$+$2b                       ; 041D67 || 	jr	$+$2b                       ; 041D2F || 041D67 18 29       5154  			JR      SHL3
	call	$041d09                   ; 041D69 || 	call	$041cd1                   ; 041D31 || 041D69 CD 09 1D 04 5156  COND_:			CALL    OPND
	ret	c                          ; 041D6D || 	ret	c                          ; 041D35 || 041D6D D8          5157  			RET     C
	ld	a,b                         ; 041D6E || 	ld	a,b                         ; 041D36 || 041D6E 78          5158  			LD      A,B
	and	$1f                        ; 041D6F || 	and	$1f                        ; 041D37 || 041D6F E6 1F       5159  			AND     1FH
	sub	$10                        ; 041D71 || 	sub	$10                        ; 041D39 || 041D71 D6 10       5160  			SUB     16
	jr	nc,$+$1f                    ; 041D73 || 	jr	nc,$+$1f                    ; 041D3B || 041D73 30 1D       5161  			JR      NC,SHL3
	cp	$f1                         ; 041D75 || 	cp	$f1                         ; 041D3D || 041D75 FE F1       5162  			CP      -15
	scf                            ; 041D77 || 	scf                            ; 041D3F || 041D77 37          5163  			SCF
	ret	nz                         ; 041D78 || 	ret	nz                         ; 041D40 || 041D78 C0          5164  			RET     NZ
	ld	a,$03                       ; 041D79 || 	ld	a,$03                       ; 041D41 || 041D79 3E 03       5165  			LD      A,3
	jr	$+$17                       ; 041D7B || 	jr	$+$17                       ; 041D43 || 041D7B 18 15       5166  			JR      SHL3
	call	$041d09                   ; 041D7D || 	call	$041cd1                   ; 041D45 || 041D7D CD 09 1D 04 5168  PAIR_EX:			CALL    OPND
	ret	c                          ; 041D81 || 	ret	c                          ; 041D49 || 041D81 D8          5169  			RET     C
	ld	a,b                         ; 041D82 || 	ld	a,b                         ; 041D4A || 041D82 78          5170  PAIR1_EX:			LD      A,B
	and	$0f                        ; 041D83 || 	and	$0f                        ; 041D4B || 041D83 E6 0F       5171  			AND     0FH
	sub	$08                        ; 041D85 || 	sub	$08                        ; 041D4D || 041D85 D6 08       5172  			SUB     8
	ret	c                          ; 041D87 || 	ret	c                          ; 041D4F || 041D87 D8          5173  			RET     C
	jr	$+$0a                       ; 041D88 || 	jr	$+$0a                       ; 041D50 || 041D88 18 08       5174  			JR      SHL3
	call	$041d3b                   ; 041D8A || 	call	$041d03                   ; 041D52 || 041D8A CD 3B 1D 04 5176  BIT_:			CALL    NUMBER
	cp	$08                         ; 041D8E || 	cp	$08                         ; 041D56 || 041D8E FE 08       5177  			CP      8
	ccf                            ; 041D90 || 	ccf                            ; 041D58 || 041D90 3F          5178  			CCF
	ret	c                          ; 041D91 || 	ret	c                          ; 041D59 || 041D91 D8          5179  			RET     C
	rlca                           ; 041D92 || 	rlca                           ; 041D5A || 041D92 07          5180  SHL3:			RLCA
	rlca                           ; 041D93 || 	rlca                           ; 041D5B || 041D93 07          5181  			RLCA
	rlca                           ; 041D94 || 	rlca                           ; 041D5C || 041D94 07          5182  			RLCA
	or	c                           ; 041D95 || 	or	c                           ; 041D5D || 041D95 B1          5183  ORC:			OR      C
	ld	c,a                         ; 041D96 || 	ld	c,a                         ; 041D5E || 041D96 4F          5184  			LD      C,A
	ret                            ; 041D97 || 	ret                            ; 041D5F || 041D97 C9          5185  			RET
	ld	hl,$042052                  ; 041D98 || 	ld	hl,$04201a                  ; 041D60 || 041D98 21 52 20 04 5187  LDOP:			LD      HL,LDOPS
	call	$041ded                   ; 041D9C || 	call	$041db5                   ; 041D64 || 041D9C CD ED 1D 04 5198  FIND:			CALL    SKIP			; Skip delimiters
	ld	b,$00                       ; 041DA0 || 	ld	b,$00                       ; 041D68 || 041DA0 06 00       5200  EXIT_:			LD      B,0			; Set B to 0
	scf                            ; 041DA2 || 	scf                            ; 041D6A || 041DA2 37          5201  			SCF				; Set the carry flag
	ret	z                          ; 041DA3 || 	ret	z                          ; 041D6B || 041DA3 C8          5202  			RET     Z			; Returns if Z
	cp	$dd                         ; 041DA4 || 	cp	$dd                         ; 041D6C || 041DA4 FE DD       5204  			CP      DEF_			; Special case for token DEF (used in DEFB, DEFW, DEFL, DEFM)
	jr	z,$+$06                     ; 041DA6 || 	jr	z,$+$06                     ; 041D6E || 041DA6 28 04       5205  			JR      Z,FIND0
	cp	$85                         ; 041DA8 || 	cp	$85                         ; 041D70 || 041DA8 FE 85       5206  			CP      TOR+1			; Special case for tokens AND and OR
	ccf                            ; 041DAA || 	ccf                            ; 041D72 || 041DAA 3F          5207  			CCF
	ret	c                          ; 041DAB || 	ret	c                          ; 041D73 || 041DAB D8          5208  			RET     C
	ld	a,(hl)                      ; 041DAC || 	ld	a,(hl)                      ; 041D74 || 041DAC 7E          5209  FIND0:			LD      A,(HL)			; Check for the end of the table (0 byte marker)
	or	a                           ; 041DAD || 	or	a                           ; 041D75 || 041DAD B7          5210  			OR      A
	jr	z,$-$0e                     ; 041DAE || 	jr	z,$-$0e                     ; 041D76 || 041DAE 28 F0       5211  			JR      Z,EXIT_			; Exit
	xor	(iy)                       ; 041DB0 || 	xor	(iy)                       ; 041D78 || 041DB0 FD AE 00    5212  			XOR     (IY)
	and	$5f                        ; 041DB3 || 	and	$5f                        ; 041D7B || 041DB3 E6 5F       5213  			AND     01011111B
	jr	z,$+$0b                     ; 041DB5 || 	jr	z,$+$0b                     ; 041D7D || 041DB5 28 09       5214  			JR      Z,FIND2
	bit	7,(hl)                     ; 041DB7 || 	bit	7,(hl)                     ; 041D7F || 041DB7 CB 7E       5215  FIND1:			BIT     7,(HL)
	inc	hl                         ; 041DB9 || 	inc	hl                         ; 041D81 || 041DB9 23          5216  			INC     HL
	jr	z,$-$03                     ; 041DBA || 	jr	z,$-$03                     ; 041D82 || 041DBA 28 FB       5217  			JR      Z,FIND1
	inc	hl                         ; 041DBC || 	inc	hl                         ; 041D84 || 041DBC 23          5218  			INC     HL
	inc	b                          ; 041DBD || 	inc	b                          ; 041D85 || 041DBD 04          5219  			INC     B
	jr	$-$12                       ; 041DBE || 	jr	$-$12                       ; 041D86 || 041DBE 18 EC       5220  			JR      FIND0
	push	iy                        ; 041DC0 || 	push	iy                        ; 041D88 || 041DC0 FD E5       5222  FIND2:			PUSH    IY
	bit	7,(hl)                     ; 041DC2 || 	bit	7,(hl)                     ; 041D8A || 041DC2 CB 7E       5223  FIND3:			BIT     7,(HL)			; Is this the end of token marker?
	inc	iy                         ; 041DC4 || 	inc	iy                         ; 041D8C || 041DC4 FD 23       5224  			INC     IY
	inc	hl                         ; 041DC6 || 	inc	hl                         ; 041D8E || 041DC6 23          5225  			INC     HL
	jr	nz,$+$13                    ; 041DC7 || 	jr	nz,$+$13                    ; 041D8F || 041DC7 20 11       5226  			JR      NZ,FIND5		; Yes
	cp	(hl)                        ; 041DC9 || 	cp	(hl)                        ; 041D91 || 041DC9 BE          5227  			CP      (HL)
	call	z,$041dec                 ; 041DCA || 	call	z,$041db4                 ; 041D92 || 041DCA CC EC 1D 04 5228  			CALL    Z,SKIP0
	ld	a,(hl)                      ; 041DCE || 	ld	a,(hl)                      ; 041D96 || 041DCE 7E          5229  			LD      A,(HL)
	xor	(iy)                       ; 041DCF || 	xor	(iy)                       ; 041D97 || 041DCF FD AE 00    5230  			XOR     (IY)
	and	$5f                        ; 041DD2 || 	and	$5f                        ; 041D9A || 041DD2 E6 5F       5231  			AND     01011111B
	jr	z,$-$12                     ; 041DD4 || 	jr	z,$-$12                     ; 041D9C || 041DD4 28 EC       5232  			JR      Z,FIND3
	pop	iy                         ; 041DD6 || 	pop	iy                         ; 041D9E || 041DD6 FD E1       5233  FIND4:			POP     IY
	jr	$-$21                       ; 041DD8 || 	jr	$-$21                       ; 041DA0 || 041DD8 18 DD       5234  			JR      FIND1
	call	$041798                   ; 041DDA || 	call	$041766                   ; 041DA2 || 041DDA CD 98 17 04 5236  FIND5:			CALL    DELIM			; Is it a delimiter?
	call	nz,$041e01                ; 041DDE || 	call	nz,$041dc9                ; 041DA6 || 041DDE C4 01 1E 04 5237  			CALL	NZ,DOT 			; No, so also check whether it is a dot character (for suffixes)
	call	nz,$041dfb                ; 041DE2 || 	call	nz,$041dc3                ; 041DAA || 041DE2 C4 FB 1D 04 5238  			CALL    NZ,SIGN			; No, so also check whether it is a SIGN character ('+' or '-')
	jr	nz,$-$10                    ; 041DE6 || 	jr	nz,$-$10                    ; 041DAE || 041DE6 20 EE       5239  			JR      NZ,FIND4		; If it is not a sign or a delimiter, then loop
	ld	a,b                         ; 041DE8 || 	ld	a,b                         ; 041DB0 || 041DE8 78          5241  FIND6:			LD      A,B			; At this point we have a token
	ld	b,(hl)                      ; 041DE9 || 	ld	b,(hl)                      ; 041DB1 || 041DE9 46          5242  			LD      B,(HL)			; Fetch the token type code
	pop	hl                         ; 041DEA || 	pop	hl                         ; 041DB2 || 041DEA E1          5243  			POP     HL			; Restore the stack
	ret                            ; 041DEB || 	ret                            ; 041DB3 || 041DEB C9          5244  			RET
	inc	hl                         ; 041DEC || 	inc	hl                         ; 041DB4 || 041DEC 23          5246  SKIP0:			INC     HL
	call	$041798                   ; 041DED || 	call	$041766                   ; 041DB5 || 041DED CD 98 17 04 5247  SKIP:			CALL    DELIM			; Is it a delimiter?
	ret	nz                         ; 041DF1 || 	ret	nz                         ; 041DB9 || 041DF1 C0          5248  			RET     NZ			; No, so return
	call	$0417a4                   ; 041DF2 || 	call	$041772                   ; 041DBA || 041DF2 CD A4 17 04 5249  			CALL    TERM			; Is it a terminator?
	ret	z                          ; 041DF6 || 	ret	z                          ; 041DBE || 041DF6 C8          5250  			RET     Z			; Yes, so return
	inc	iy                         ; 041DF7 || 	inc	iy                         ; 041DBF || 041DF7 FD 23       5251  			INC     IY			; Increment the basic program counter
	jr	$-$0c                       ; 041DF9 || 	jr	$-$0c                       ; 041DC1 || 041DF9 18 F2       5252  			JR      SKIP			; And loop
	cp	$2b                         ; 041DFB || 	cp	$2b                         ; 041DC3 || 041DFB FE 2B       5254  SIGN:			CP      '+'			; Check whether the character is a sign symbol
	ret	z                          ; 041DFD || 	ret	z                          ; 041DC5 || 041DFD C8          5255  			RET     Z
	cp	$2d                         ; 041DFE || 	cp	$2d                         ; 041DC6 || 041DFE FE 2D       5256  			CP      '-'
	ret                            ; 041E00 || 	ret                            ; 041DC8 || 041E00 C9          5257  			RET
	cp	$2e                         ; 041E01 || 	cp	$2e                         ; 041DC9 || 041E01 FE 2E       5259  DOT:			CP	'.'			; Check if it is a dot character
	ret                            ; 041E03 || 	ret                            ; 041DCB || 041E03 C9          5260  			RET
	ld	c,(hl)                      ; 041E04 || 	ld	c,(hl)                      ; 041DCC || 041E04 4E 4F 50 00 5266  OPCODS:			DB	"NO","P"+80H,00h	; # 00h
	ld	c,a                         ; 041E05 || 	ld	c,a                         ; 041DCD
	ld	d,b                         ; 041E06
	nop                            ; 041E07 || 	nop                            ; 041DCF
	ld.sil	c,h                     ; 041E08 || 	ld.sil	c,h                     ; 041DD0 || 041E08 52 4C 43 41 5267  			DB	"RLC","A"+80H,07h
	ld	b,e                         ; 041E0A || 	ld	b,e                         ; 041DD2
	ld	b,c                         ; 041E0B
	rlca                           ; 041E0C || 	rlca                           ; 041DD4
	ld	b,l                         ; 041E0D || 	ld	b,l                         ; 041DD5 || 041E0D 45 58 00 41 5268  			DB	"EX",0,"AF",0,"AF","'"+80H,08h
	ld	e,b                         ; 041E0E || 	ld	e,b                         ; 041DD6
	nop                            ; 041E0F || 	nop                            ; 041DD7
	ld	b,c                         ; 041E10 || 	ld	b,c                         ; 041DD8
	ld	b,(hl)                      ; 041E11 || 	ld	b,(hl)                      ; 041DD9
	nop                            ; 041E12 || 	nop                            ; 041DDA
	ld	b,c                         ; 041E13 || 	ld	b,c                         ; 041DDB
	ld	b,(hl)                      ; 041E14 || 	ld	b,(hl)                      ; 041DDC
	daa                            ; 041E15
	ex	af,af'                      ; 041E16 || 	ex	af,af'                      ; 041DDE
	noni.sil                       ; 041E17 || 	noni.sil                       ; 041DDF || 041E17 52 52 43 41 5269  			DB	"RRC","A"+80H,0FH
	ld.sil	b,e                     ; 041E18 || 	ld.sil	b,e                     ; 041DE0
	ld	b,c                         ; 041E1A
	rrca                           ; 041E1B || 	rrca                           ; 041DE3
	ld.sil	c,h                     ; 041E1C || 	ld.sil	c,h                     ; 041DE4 || 041E1C 52 4C 41 17 5270  			DB	"RL","A"+80H,17H
	ld	b,c                         ; 041E1E
	rla                            ; 041E1F || 	rla                            ; 041DE7
	noni.sil                       ; 041E20 || 	noni.sil                       ; 041DE8 || 041E20 52 52 41 1F 5271  			DB	"RR","A"+80H,1FH
	ld.sil	b,c                     ; 041E21
	rra                            ; 041E23 || 	rra                            ; 041DEB
	ld	b,h                         ; 041E24 || 	ld	b,h                         ; 041DEC || 041E24 44 41 41 27 5272  			DB	"DA","A"+80H,27H
	ld	b,c                         ; 041E25 || 	ld	b,c                         ; 041DED
	ld	b,c                         ; 041E26
	daa                            ; 041E27 || 	daa                            ; 041DEF
	ld	b,e                         ; 041E28 || 	ld	b,e                         ; 041DF0 || 041E28 43 50 4C 2F 5273  			DB	"CP","L"+80H,2FH
	ld	d,b                         ; 041E29
	ld	c,h                         ; 041E2A
	cpl                            ; 041E2B
	ld	d,e                         ; 041E2C                                         || 041E2C 53 43 46 37 5274  			DB	"SC","F"+80H,37H
	ld	b,e                         ; 041E2D
	ld	b,(hl)                      ; 041E2E
	scf                            ; 041E2F
	ld	b,e                         ; 041E30                                         || 041E30 43 43 46 3F 5275  			DB	"CC","F"+80H,3FH
	ld	b,e                         ; 041E31
	ld	b,(hl)                      ; 041E32
	ccf                            ; 041E33
	ld	c,b                         ; 041E34                                         || 041E34 48 41 4C 54 5276  			DB	"HAL","T"+80H,76H
	ld	b,c                         ; 041E35
	ld	c,h                         ; 041E36
	ld	d,h                         ; 041E37
	halt                           ; 041E38
	ld	b,l                         ; 041E39                                         || 041E39 45 58 58 D9 5277  			DB	"EX","X"+80H,D9H
	ld	e,b                         ; 041E3A
	ld	e,b                         ; 041E3B
	exx                            ; 041E3C
	ld	b,l                         ; 041E3D                                         || 041E3D 45 58 00 44 5278  			DB	"EX",0,"DE",0,"H","L"+80H,EBH
	ld	e,b                         ; 041E3E
	nop                            ; 041E3F
	ld	b,h                         ; 041E40
	ld	b,l                         ; 041E41
	nop                            ; 041E42
	ld	c,b                         ; 041E43
	ld	c,h                         ; 041E44
	ex	de,hl                       ; 041E45
	ld	b,h                         ; 041E46                                         || 041E46 44 49 F3    5279  			DB	"D","I"+80H,F3H
	di.lis                         ; 041E47
	ld	b,l                         ; 041E49                                         || 041E49 45 49 FB    5280  			DB	"E","I"+80H,FBH
	ei.lis                         ; 041E4A
	ld	c,(hl)                      ; 041E4C                                         || 041E4C 4E 45 47 44 5285  			DB	"NE","G"+80H,44H	; 0Fh
	ld	b,l                         ; 041E4D
	ld	b,a                         ; 041E4E
	ld	b,h                         ; 041E4F
	ld.lis	c,l                     ; 041E50                                         || 041E50 49 4D 00 30 5286  			DB	"IM",0,"0"+80H,46H
	nop                            ; 041E52
	jr	nc,$+$48                    ; 041E53
	ld.sil	b,l                     ; 041E55                                         || 041E55 52 45 54 4E 5287  			DB	"RET","N"+80H,45H
	ld	d,h                         ; 041E57
	ld	c,(hl)                      ; 041E58
	ld	b,l                         ; 041E59
	ld	c,l                         ; 041E5A                                         || 041E5A 4D 4C 54 00 5288  			DB	"MLT",0,"B","C"+80H,4CH
	ld	c,h                         ; 041E5B
	ld	d,h                         ; 041E5C
	nop                            ; 041E5D
	ld	b,d                         ; 041E5E
	ld	b,e                         ; 041E5F
	ld	c,h                         ; 041E60
	ld.sil	b,l                     ; 041E61                                         || 041E61 52 45 54 49 5289  			DB	"RET","I"+80H,4DH
	ld	d,h                         ; 041E63
	ld.lis	c,l                     ; 041E64
	ld.lis	c,l                     ; 041E66                                         || 041E66 49 4D 00 31 5290  			DB	"IM",0,"1"+80H,56H
	nop                            ; 041E68
	ld	sp,$4c4d56                  ; 041E69
	ld	d,h                         ; 041E6D
	nop                            ; 041E6E
	ld	b,h                         ; 041E6F
	ld	b,l                         ; 041E70
	ld	e,h                         ; 041E71
	ld.lis	c,l                     ; 041E72                                         || 041E72 49 4D 00 32 5292  			DB	"IM",0,"2"+80H,5EH
	nop                            ; 041E74
	ld	($52525e),a                 ; 041E75
	ld	b,h                         ; 041E79
	ld	h,a                         ; 041E7A
	ld	c,l                         ; 041E7B                                         || 041E7B 4D 4C 54 00 5294  			DB	"MLT",0,"H","L"+80H,6CH
	ld	c,h                         ; 041E7C
	ld	d,h                         ; 041E7D
	nop                            ; 041E7E
	ld	c,b                         ; 041E7F
	ld	c,h                         ; 041E80
	ld	l,h                         ; 041E81
	ld	c,h                         ; 041E82                                         || 041E82 4C 44 00 4D 5295  			DB	"LD",0,"MB",0,"A"+80H,6DH
	ld	b,h                         ; 041E83
	nop                            ; 041E84
	ld	c,l                         ; 041E85
	ld	b,d                         ; 041E86
	nop                            ; 041E87
	ld	b,c                         ; 041E88
	ld	l,l                         ; 041E89
	ld	c,h                         ; 041E8A                                         || 041E8A 4C 44 00 41 5296  			DB	"LD",0,"A",0,"M","B"+80H,6EH
	ld	b,h                         ; 041E8B
	nop                            ; 041E8C
	ld	b,c                         ; 041E8D
	nop                            ; 041E8E
	ld	c,l                         ; 041E8F
	ld	b,d                         ; 041E90
	ld	l,(hl)                      ; 041E91
	ld.sil	c,h                     ; 041E92                                         || 041E92 52 4C 44 6F 5297  			DB	"RL","D"+80H,6FH
	ld	b,h                         ; 041E94
	ld	l,a                         ; 041E95
	ld	d,e                         ; 041E96                                         || 041E96 53 4C 50 76 5298  			DB	"SL","P"+80H,76H
	ld	c,h                         ; 041E97
	ld	d,b                         ; 041E98
	halt                           ; 041E99 || 	halt                           ; 041E61
	ld	c,l                         ; 041E9A || 	ld	c,l                         ; 041E62 || 041E9A 4D 4C 54 00 5299  			DB	"MLT",0,"S","P"+80H,7CH
	ld	c,h                         ; 041E9B || 	ld	c,h                         ; 041E63
	ld	d,h                         ; 041E9C || 	ld	d,h                         ; 041E64
	nop                            ; 041E9D || 	nop                            ; 041E65
	ld	d,e                         ; 041E9E || 	ld	d,e                         ; 041E66
	ld	d,b                         ; 041E9F
	ld	a,h                         ; 041EA0 || 	ld	a,h                         ; 041E68
	ld	d,e                         ; 041EA1 || 	ld	d,e                         ; 041E69 || 041EA1 53 54 4D 49 5300  			DB	"STMI","X"+80H,7DH
	ld	d,h                         ; 041EA2 || 	ld	d,h                         ; 041E6A
	ld	c,l                         ; 041EA3 || 	ld	c,l                         ; 041E6B
	ld.lis	e,b                     ; 041EA4
	ld	a,l                         ; 041EA6 || 	ld	a,l                         ; 041E6E
	ld.sil	d,e                     ; 041EA7 || 	ld.sil	d,e                     ; 041E6F || 041EA7 52 53 4D 49 5301  			DB	"RSMI","X"+80H,7EH
	ld	c,l                         ; 041EA9 || 	ld	c,l                         ; 041E71
	ld.lis	e,b                     ; 041EAA
	ld	a,(hl)                      ; 041EAC
	ld.lis	c,(hl)                  ; 041EAD                                         || 041EAD 49 4E 49 4D 5302  			DB	"INI","M"+80H,82H
	ld.lis	c,l                     ; 041EAF
	add	a,d                        ; 041EB1
	ld	c,a                         ; 041EB2                                         || 041EB2 4F 54 49 4D 5303  			DB	"OTI","M"+80H,83H
	ld	d,h                         ; 041EB3
	ld.lis	c,l                     ; 041EB4
	add	a,e                        ; 041EB6
	ld.lis	c,(hl)                  ; 041EB7                                         || 041EB7 49 4E 49 32 5304  			DB	"INI","2"+80H,84H
	ld.lis	($4984),a               ; 041EB9
	ld	c,(hl)                      ; 041EBD
	ld	b,h                         ; 041EBE
	ld	c,l                         ; 041EBF
	adc	a,d                        ; 041EC0
	ld	c,a                         ; 041EC1                                         || 041EC1 4F 54 44 4D 5306  			DB	"OTD","M"+80H,8BH
	ld	d,h                         ; 041EC2
	ld	b,h                         ; 041EC3
	ld	c,l                         ; 041EC4
	adc	a,e                        ; 041EC5
	ld.lis	c,(hl)                  ; 041EC6                                         || 041EC6 49 4E 44 32 5307  			DB	"IND","2"+80H,8CH
	ld	b,h                         ; 041EC8
	ld	($4e498c),a                 ; 041EC9
	ld.lis	c,l                     ; 041ECD
	sub.sil	d                      ; 041ECF
	ld	c,a                         ; 041ED1                                         || 041ED1 4F 54 49 4D 5309  			DB	"OTIM","R"+80H,93H
	ld	d,h                         ; 041ED2
	ld.lis	c,l                     ; 041ED3
	sub.sil	e                      ; 041ED5
	ld.lis	c,(hl)                  ; 041ED7                                         || 041ED7 49 4E 49 32 5310  			DB	"INI2","R"+80H,94H
	ld.lis	($9452),a               ; 041ED9
	ld.lis	c,(hl)                  ; 041EDD                                         || 041EDD 49 4E 44 4D 5311  			DB	"INDM","R"+80H,9AH
	ld	b,h                         ; 041EDF
	ld	c,l                         ; 041EE0
	sbc.sil	a,d                    ; 041EE1
	ld	c,a                         ; 041EE3                                         || 041EE3 4F 54 44 4D 5312  			DB	"OTDM","R"+80H,9BH
	ld	d,h                         ; 041EE4
	ld	b,h                         ; 041EE5
	ld	c,l                         ; 041EE6
	sbc.sil	a,e                    ; 041EE7
	ld.lis	c,(hl)                  ; 041EE9                                         || 041EE9 49 4E 44 32 5313  			DB	"IND2","R"+80H,9CH
	ld	b,h                         ; 041EEB
	ld	($4c9c52),a                 ; 041EEC
	ld	b,h                         ; 041EF0
	and.lis	b                      ; 041EF1
	ld	b,e                         ; 041EF3                                         || 041EF3 43 50 49 A1 5315  			DB	"CP","I"+80H,A1H
	ld	d,b                         ; 041EF4
	and.lis	c                      ; 041EF5
	ld.lis	c,(hl)                  ; 041EF7                                         || 041EF7 49 4E 49 A2 5316  			DB	"IN","I"+80H,A2H
	and.lis	d                      ; 041EF9
	ld	c,a                         ; 041EFB                                         || 041EFB 4F 55 54 49 5317  			DB	"OUTI","2"+80H,A4H	; These are swapped round so that FIND will find
	ld	d,l                         ; 041EFC
	ld	d,h                         ; 041EFD
	ld.lis	($4fa4),a               ; 041EFE
	ld	d,l                         ; 041F02
	ld	d,h                         ; 041F03
	and.lis	e                      ; 041F04
	ld	c,h                         ; 041F06                                         || 041F06 4C 44 44 A8 5319  			DB	"LD","D"+80H,A8H
	ld	b,h                         ; 041F07
	ld	b,h                         ; 041F08
	xor	b                          ; 041F09
	ld	b,e                         ; 041F0A                                         || 041F0A 43 50 44 A9 5320  			DB	"CP","D"+80H,A9H
	ld	d,b                         ; 041F0B
	ld	b,h                         ; 041F0C
	xor	c                          ; 041F0D
	ld.lis	c,(hl)                  ; 041F0E                                         || 041F0E 49 4E 44 AA 5321  			DB	"IN","D"+80H,AAH
	ld	b,h                         ; 041F10
	xor	d                          ; 041F11
	ld	c,a                         ; 041F12                                         || 041F12 4F 55 54 44 5322  			DB	"OUTD","2"+80H,ACH	; Similarly these are swapped round so that FIND
	ld	d,l                         ; 041F13
	ld	d,h                         ; 041F14
	ld	b,h                         ; 041F15
	ld	($554fac),a                 ; 041F16
	ld	d,h                         ; 041F1A
	ld	b,h                         ; 041F1B
	xor	e                          ; 041F1C
	ld	c,h                         ; 041F1D                                         || 041F1D 4C 44 49 52 5324  			DB	"LDI","R"+80H,B0H
	ld	b,h                         ; 041F1E
	noni.lis                       ; 041F1F
	or.sil	b                       ; 041F20
	ld	b,e                         ; 041F22                                         || 041F22 43 50 49 52 5325  			DB	"CPI","R"+80H,B1H
	ld	d,b                         ; 041F23
	noni.lis                       ; 041F24
	or.sil	c                       ; 041F25
	ld.lis	c,(hl)                  ; 041F27                                         || 041F27 49 4E 49 52 5326  			DB	"INI","R"+80H,B2H
	noni.lis                       ; 041F29
	or.sil	d                       ; 041F2A
	ld	c,a                         ; 041F2C                                         || 041F2C 4F 54 49 52 5327  			DB	"OTI","R"+80H,B3H
	ld	d,h                         ; 041F2D
	noni.lis                       ; 041F2E
	or.sil	e                       ; 041F2F
	ld	c,a                         ; 041F31                                         || 041F31 4F 54 49 32 5328  			DB	"OTI2","R"+80H,B4H
	ld	d,h                         ; 041F32
	ld.lis	($b452),a               ; 041F33
	ld	c,h                         ; 041F37                                         || 041F37 4C 44 44 52 5329  			DB	"LDD","R"+80H,B8H
	ld	b,h                         ; 041F38
	ld	b,h                         ; 041F39
	cp.sil	b                       ; 041F3A
	ld	b,e                         ; 041F3C                                         || 041F3C 43 50 44 52 5330  			DB	"CPD","R"+80H,B9H
	ld	d,b                         ; 041F3D
	ld	b,h                         ; 041F3E
	cp.sil	c                       ; 041F3F
	ld.lis	c,(hl)                  ; 041F41                                         || 041F41 49 4E 44 52 5331  			DB	"IND","R"+80H,BAH
	ld	b,h                         ; 041F43
	cp.sil	d                       ; 041F44
	ld	c,a                         ; 041F46                                         || 041F46 4F 54 44 52 5332  			DB	"OTD","R"+80H,BBH
	ld	d,h                         ; 041F47
	ld	b,h                         ; 041F48
	cp.sil	e                       ; 041F49
	ld	c,a                         ; 041F4B                                         || 041F4B 4F 54 44 32 5333  			DB	"OTD2","R"+80H,BCH
	ld	d,h                         ; 041F4C
	ld	b,h                         ; 041F4D
	ld	($49bc52),a                 ; 041F4E
	ld	c,(hl)                      ; 041F52
	noni.lis                       ; 041F53
	ld.sil	e,b                     ; 041F54
	jp	nz,$49544f                  ; 041F56
	ld.sil	e,b                     ; 041F5A
	jp	$444e49                     ; 041F5C
	ld.sil	e,b                     ; 041F60
	jp	z,$44544f                   ; 041F62
	ld.sil	e,b                     ; 041F66
	bit	0,d                        ; 041F68
	ld.lis	d,h                     ; 041F6A
	noni.sis                       ; 041F6C
	ld.sil	b,l                     ; 041F6D                                         || 041F6D 52 45 53 80 5342  			DB	"RE","S"+80H,80H
	ld	d,e                         ; 041F6F
	add	a,b                        ; 041F70
	ld	d,e                         ; 041F71                                         || 041F71 53 45 54 C0 5343  			DB	"SE","T"+80H,C0H
	ld	b,l                         ; 041F72
	ld	d,h                         ; 041F73
	ret	nz                         ; 041F74
	ld.sil	c,h                     ; 041F75                                         || 041F75 52 4C 43 00 5347  			DB	"RL","C"+80H,00H	; 47h
	ld	b,e                         ; 041F77
	nop                            ; 041F78
	noni.sil                       ; 041F79                                         || 041F79 52 52 43 08 5348  			DB	"RR","C"+80H,08H
	ld.sil	b,e                     ; 041F7A
	ex	af,af'                      ; 041F7C
	ld.sil	c,h                     ; 041F7D                                         || 041F7D 52 4C 10    5349  			DB	"R","L"+80H,10H
	djnz	$+$54                     ; 041F7F
	jr.sil	$+$56                   ; 041F81
	ld	c,h                         ; 041F84
	ld	b,c                         ; 041F85
	jr	nz,$+$55                    ; 041F86
	ld.sil	b,c                     ; 041F88
	jr	z,$+$55                     ; 041F8A
	ld.sil	c,h                     ; 041F8C
	jr	c,$+$52                     ; 041F8E
	ld	c,a                         ; 041F90
	ld	d,b                         ; 041F91
	pop	bc                         ; 041F92
	ld	d,b                         ; 041F93                                         || 041F93 50 55 53 48 5358  			DB	"PUS","H"+80H,C5H
	ld	d,l                         ; 041F94
	ld	d,e                         ; 041F95
	ld	c,b                         ; 041F96
	push	bc                        ; 041F97
	ld	b,l                         ; 041F98                                         || 041F98 45 58 00 28 5359  			DB	"EX",0,"(S","P"+80H,E3H
	ld	e,b                         ; 041F99
	nop                            ; 041F9A
	jr	z,$+$55                     ; 041F9B
	ld	d,b                         ; 041F9D
	ex	(sp),hl                     ; 041F9E
	ld	d,e                         ; 041F9F                                         || 041F9F 53 55 42 90 5363  			DB	"SU","B"+80H,90H	; 51h
	ld	d,l                         ; 041FA0
	ld	b,d                         ; 041FA1
	sub	b                          ; 041FA2
	ld	b,c                         ; 041FA3                                         || 041FA3 41 4E 44 A0 5364  			DB	"AN","D"+80H,A0H
	ld	c,(hl)                      ; 041FA4
	ld	b,h                         ; 041FA5
	and	b                          ; 041FA6
	ld	e,b                         ; 041FA7                                         || 041FA7 58 4F 52 A8 5365  			DB	"XO","R"+80H,A8H
	ld	c,a                         ; 041FA8
	xor.sil	b                      ; 041FA9
	ld	c,a                         ; 041FAB                                         || 041FAB 4F 52 B0    5366  			DB	"O","R"+80H,B0H
	or.sil	b                       ; 041FAC
	ld	b,e                         ; 041FAE                                         || 041FAE 43 50 B8    5367  			DB	"C","P"+80H,B8H
	ld	d,b                         ; 041FAF
	cp	b                           ; 041FB0
	add	a,b                        ; 041FB1                                         || 041FB1 80 A0       5368  			DB	TAND,A0H		; 56h TAND: Tokenised AND
	and	b                          ; 041FB2
	add	a,h                        ; 041FB3                                         || 041FB3 84 B0       5369  			DB	TOR,B0H			; 57h TOR: Tokenised OR
	or	b                           ; 041FB4
	ld	b,c                         ; 041FB5                                         || 041FB5 41 44 44 80 5373  			DB	"AD","D"+80H,80H	; 58h
	ld	b,h                         ; 041FB6
	ld	b,h                         ; 041FB7
	add	a,b                        ; 041FB8
	ld	b,c                         ; 041FB9                                         || 041FB9 41 44 43 88 5374  			DB	"AD","C"+80H,88H
	ld	b,h                         ; 041FBA
	ld	b,e                         ; 041FBB
	adc	a,b                        ; 041FBC
	ld	d,e                         ; 041FBD                                         || 041FBD 53 42 43 98 5375  			DB	"SB","C"+80H,98H
	ld	b,d                         ; 041FBE
	ld	b,e                         ; 041FBF
	sbc	a,b                        ; 041FC0
	ld.lis	c,(hl)                  ; 041FC1                                         || 041FC1 49 4E 43 04 5379  			DB	"IN","C"+80H,04H	; 5Bh
	ld	b,e                         ; 041FC3
	inc	b                          ; 041FC4
	ld	b,h                         ; 041FC5                                         || 041FC5 44 45 43 05 5380  			DB	"DE","C"+80H,05H
	ld	b,l                         ; 041FC6
	ld	b,e                         ; 041FC7
	dec	b                          ; 041FC8
	ld.lis	c,(hl)                  ; 041FC9                                         || 041FC9 49 4E 30 00 5384  			DB	"IN","0"+80H,00H	; 5Dh
	jr	nc,$+$02                    ; 041FCB
	ld	c,a                         ; 041FCD                                         || 041FCD 4F 55 54 30 5385  			DB	"OUT","0"+80H,01H
	ld	d,l                         ; 041FCE
	ld	d,h                         ; 041FCF
	jr	nc,$+$03                    ; 041FD0
	ld.lis	c,(hl)                  ; 041FD2                                         || 041FD2 49 4E 40    5389  			DB	"I","N"+80H,40H		; 5Fh
	ld.sis	c,a                     ; 041FD4
	ld	d,l                         ; 041FD6
	ld	d,h                         ; 041FD7
	ld	b,c                         ; 041FD8
	ld	c,d                         ; 041FD9                                         || 041FD9 4A 52 20    5397  			DB	"J","R"+80H,20H		; 61h
	jr.sil	nz,$+$47                ; 041FDA
	ld	c,d                         ; 041FDD
	ld	c,(hl)                      ; 041FDE
	ld	e,d                         ; 041FDF
	djnz	$+$4c                     ; 041FE0
	ld	d,b                         ; 041FE2
	jp	nz,$4c4143                  ; 041FE3
	ld	c,h                         ; 041FE7
	call	nz,$545352                ; 041FE8
	rst	$00                        ; 041FEC
	ld.sil	b,l                     ; 041FED                                         || 041FED 52 45 54 C0 5414  			DB	"RE","T"+80H,C0H	; 66h
	ld	d,h                         ; 041FEF
	ret	nz                         ; 041FF0
	ld	c,h                         ; 041FF1                                         || 041FF1 4C 44 40    5418  			DB	"L","D"+80H,40H		; 67h
	ld	b,h                         ; 041FF2
	ld.sis	d,h                     ; 041FF3
	ld	d,e                         ; 041FF5
	ld	d,h                         ; 041FF6
	inc	b                          ; 041FF7
	ld	c,a                         ; 041FF8                                         || 041FF8 4F 50 54 00 5427  			DB	"OP","T"+80H,00H	; 69h OPT
	ld	d,b                         ; 041FF9
	ld	d,h                         ; 041FFA
	nop                            ; 041FFB
	ld	b,c                         ; 041FFC                                         || 041FFC 41 44 4C 00 5428  			DB	"AD","L"+80H,00H	; 6Ah ADL
	ld	b,h                         ; 041FFD
	ld	c,h                         ; 041FFE
	nop                            ; 041FFF
	ld	e,l                         ; 042000                                         || 042000 5D 42 00    5430  			DB	DEF_ & 7FH,"B"+80H,00H	; 6Bh Tokenised DEF + B
	ld	b,d                         ; 042001
	nop                            ; 042002
	ld	e,l                         ; 042003                                         || 042003 5D 57 00    5431  			DB	DEF_ & 7FH,"W"+80H,00H	; 6Ch Tokenised DEF + W
	ld	d,a                         ; 042004
	nop                            ; 042005
	ld	e,l                         ; 042006                                         || 042006 5D 4C 00    5432  			DB	DEF_ & 7FH,"L"+80H,00H	; 6Dh Tokenised DEF + L
	ld	c,h                         ; 042007
	nop                            ; 042008
	ld	e,l                         ; 042009                                         || 042009 5D 4D 00    5433  			DB 	DEF_ & 7FH,"M"+80H,00H	; 6Eh Tokenised DEF + M
	ld	c,l                         ; 04200A
	nop                            ; 04200B
	nop                            ; 04200C                                         || 04200C 00          5435  			DB	0
	ld	b,d                         ; 04200D                                         || 04200D 42 00       5439  OPRNDS:			DB	"B"+80H, 00H
	nop                            ; 04200E
	ld	b,e                         ; 04200F                                         || 04200F 43 01       5440  			DB	"C"+80H, 01H
	ld	bc,$450244                  ; 042010
	inc	bc                         ; 042014
	ld	c,b                         ; 042015                                         || 042015 48 04       5443  			DB	"H"+80H, 04H
	inc	b                          ; 042016
	ld	c,h                         ; 042017                                         || 042017 4C 05       5444  			DB	"L"+80H, 05H
	dec	b                          ; 042018
	jr	z,$+$4a                     ; 042019                                         || 042019 28 48 4C 06 5445  			DB	"(H","L"+80H,06H
	ld	c,h                         ; 04201B
	ld	b,$41                       ; 04201C
	rlca                           ; 04201E
	jr	z,$+$4b                     ; 04201F                                         || 04201F 28 49 58 86 5447  			DB	"(I","X"+80H,86H
	ld	e,b                         ; 042021
	add	a,(hl)                     ; 042022
	jr	z,$+$4b                     ; 042023                                         || 042023 28 49 59 C6 5448  			DB	"(I","Y"+80H,C6H
	ld	e,c                         ; 042025
	add	a,$42                      ; 042026
	ld	b,e                         ; 042028
	ex	af,af'                      ; 042029
	ld	b,h                         ; 04202A                                         || 04202A 44 45 0A    5451  			DB	"D","E"+80H,0AH
	ld	b,l                         ; 04202B
	ld	a,(bc)                      ; 04202C
	ld	c,b                         ; 04202D                                         || 04202D 48 4C 0C    5452  			DB	"H","L"+80H,0CH
	ld	c,h                         ; 04202E
	inc	c                          ; 04202F
	ld.lis	e,b                     ; 042030                                         || 042030 49 58 8C    5453  			DB	"I","X"+80H,8CH
	adc	a,h                        ; 042032
	ld.lis	e,c                     ; 042033                                         || 042033 49 59 CC    5454  			DB	"I","Y"+80H,CCH
	call	z,$0e4641                 ; 042035
	ld	d,e                         ; 042039                                         || 042039 53 50 0E    5456  			DB	"S","P"+80H,0EH
	ld	d,b                         ; 04203A
	ld	c,$4e                       ; 04203B
	ld	e,d                         ; 04203D
	djnz	$+$5c                     ; 04203E
	ld	de,$12434e                  ; 042040
	ld	d,b                         ; 042044                                         || 042044 50 4F 14    5461  			DB	"P","O"+80H,14H
	ld	c,a                         ; 042045
	inc	d                          ; 042046
	ld	d,b                         ; 042047                                         || 042047 50 45 15    5462  			DB	"P","E"+80H,15H
	ld	b,l                         ; 042048
	dec	d                          ; 042049
	ld	d,b                         ; 04204A                                         || 04204A 50 16       5463  			DB	"P"+80H,16H
	ld	d,$4d                       ; 04204B
	rla                            ; 04204D
	jr	z,$+$45                     ; 04204E                                         || 04204E 28 43 20    5466  			DB	"(","C"+80H,20H
	jr	nz,$+$02                    ; 042050
	nop.lis                        ; 042052                                         || 042052 49 00 41 47 5472  LDOPS:			DB	"I",0,"A"+80H,47H
	ld	b,c                         ; 042054
	ld	b,a                         ; 042055
	nop.sil                        ; 042056                                         || 042056 52 00 41 4F 5473  			DB	"R",0,"A"+80H,4FH
	ld	b,c                         ; 042058
	ld	c,a                         ; 042059
	ld	b,c                         ; 04205A                                         || 04205A 41 00 49 57 5474  			DB	"A",0,"I"+80H,57H
	nop                            ; 04205B
	ld.lis	d,a                     ; 04205C
	ld	b,c                         ; 04205E                                         || 04205E 41 00 52 5F 5475  			DB	"A",0,"R"+80H,5FH
	nop                            ; 04205F
	ld.sil	e,a                     ; 042060
	jr	z,$+$44                     ; 042062                                         || 042062 28 42 43 00 5476  			DB	"(BC",0,"A"+80H,02h
	ld	b,e                         ; 042064
	nop                            ; 042065
	ld	b,c                         ; 042066
	ld	(bc),a                      ; 042067
	jr	z,$+$46                     ; 042068                                         || 042068 28 44 45 00 5477  			DB	"(DE",0,"A"+80H,12H
	ld	b,l                         ; 04206A
	nop                            ; 04206B
	ld	b,c                         ; 04206C
	ld	(de),a                      ; 04206D
	ld	b,c                         ; 04206E                                         || 04206E 41 00 28 42 5478  			DB	"A",0,"(B","C"+80H,0AH
	nop                            ; 04206F
	jr	z,$+$44                     ; 042070
	ld	b,e                         ; 042072
	ld	a,(bc)                      ; 042073
	ld	b,c                         ; 042074                                         || 042074 41 00 28 44 5479  			DB	"A",0,"(D","E"+80H,1AH
	nop                            ; 042075
	jr	z,$+$46                     ; 042076
	ld	b,l                         ; 042078
	ld	a,(de)                      ; 042079
	nop                            ; 04207A                                         || 04207A 00          5481  			DB	0
	ld	c,h                         ; 04207B                                         || 04207B 4C 49 53 49 5487  EZ80SFS_1:		DB	"LI","S"+80H,49H
	ld.lis	d,e                     ; 04207C
	ld.lis	d,e                     ; 04207E
	ld.lis	c,h                     ; 042080
	ld.sil	d,e                     ; 042082
	ld.lis	d,e                     ; 042084
	ld.sis	c,h                     ; 042086
	ld.lis	c,h                     ; 042088
	nop.lil                        ; 04208A
	ld	d,e                         ; 04208C                                         || 04208C 53 40       5496  EZ80SFS_ADL0:		DB	"S"+80H,40H		; Equivalent to .SIS
	ld.sis	c,h                     ; 04208D
	noni.lis                       ; 04208F
	ld.lis	d,e                     ; 042090                                         || 042090 49 53 40    5498  			DB	"I","S"+80H,40H		; Equivalent to .SIS
	noni.sis                       ; 042092
	ld.lis	c,h                     ; 042093                                         || 042093 49 4C 52    5499  			DB	"I","L"+80H,52H		; Equivalent to .SIL
	nop.sil                        ; 042095
	ld	d,e                         ; 042097                                         || 042097 53 52       5505  EZ80SFS_ADL1:		DB	"S"+80H,52H		; Equivalent to .SIL
	ld.sil	c,h                     ; 042098
	noni.lil                       ; 04209A
	ld.lis	d,e                     ; 04209B                                         || 04209B 49 53 49    5507  			DB	"I","S"+80H,49H		; Equivalent to .LIS
	noni.lis                       ; 04209D
	ld.lis	c,h                     ; 04209E                                         || 04209E 49 4C 5B    5508  			DB	"I","L"+80H,5BH		; Equivalent to .LIL
	nop.lil                        ; 0420A0
	push	iy                        ; 0420A2 || 	push	iy                        ; 04206A || 0420A2 FD E5       5570  FPP:			PUSH    IY              ;Save IY
	ld	iy,$000000                  ; 0420A4 || 	ld	iy,$000000                  ; 04206C || 0420A4 FD 21 00 00 5571          		LD      IY,0
	add	iy,sp                      ; 0420A9 || 	add	iy,sp                      ; 042071 || 0420A9 FD 39       5572          		ADD     IY,SP           ;Save SP in IY
	call	$0420bb                   ; 0420AB || 	call	$042083                   ; 042073 || 0420AB CD BB 20 04 5573          		CALL    OP              ;Perform operation
	cp	a                           ; 0420AF || 	cp	a                           ; 042077 || 0420AF BF          5574          		CP      A               ;Good return (Z, NC)
	pop	iy                         ; 0420B0 || 	pop	iy                         ; 042078 || 0420B0 FD E1       5575  EXIT_FP_:			POP     IY              ;Restore IY
	ret                            ; 0420B2 || 	ret                            ; 04207A || 0420B2 C9          5576          		RET                     ;Return to caller
	ld	a,$01                       ; 0420B3 || 	ld	a,$01                       ; 04207B || 0420B3 3E 01       5580  BAD_FP:			LD      A,BADOP         ;"Bad operation code"
	ld	sp,iy                       ; 0420B5 || 	ld	sp,iy                       ; 04207D || 0420B5 FD F9       5581  ERROR_FP_:			LD      SP,IY           ;Restore SP from IY
	or	a                           ; 0420B7 || 	or	a                           ; 04207F || 0420B7 B7          5582          		OR      A               ;Set NZ
	scf                            ; 0420B8 || 	scf                            ; 042080 || 0420B8 37          5583          		SCF                     ;Set C
	jr	$-$09                       ; 0420B9 || 	jr	$-$09                       ; 042081 || 0420B9 18 F5       5584          		JR      EXIT_FP_
	cp	$2a                         ; 0420BB || 	cp	$2a                         ; 042083 || 0420BB FE 2A       5589  OP:				CP      RTABLE-DTABLE/3 ; ez80asm doesn't do nested expressions
	jr	nc,$-$0a                    ; 0420BD || 	jr	nc,$-$0a                    ; 042085 || 0420BD 30 F4       5591          		JR      NC,BAD_FP
	cp	$10                         ; 0420BF || 	cp	$10                         ; 042087 || 0420BF FE 10       5593  				CP      FTABLE-DTABLE/3 ; ditto
	jr	nc,$+$0a                    ; 0420C1 || 	jr	nc,$+$0a                    ; 042089 || 0420C1 30 08       5594          		JR      NC,DISPAT_FP
	ex	af,af'                      ; 0420C3 || 	ex	af,af'                      ; 04208B || 0420C3 08          5595          		EX      AF,AF'
	ld	a,b                         ; 0420C4 || 	ld	a,b                         ; 04208C || 0420C4 78          5596          		LD      A,B
	or	c                           ; 0420C5 || 	or	c                           ; 04208D || 0420C5 B1          5597          		OR      C               ;Both integer?
	call	nz,$042bce                ; 0420C6 || 	call	nz,$042b96                ; 04208E || 0420C6 C4 CE 2B 04 5598          		CALL    NZ,FLOATA       ;No, so float both
	ex	af,af'                      ; 0420CA || 	ex	af,af'                      ; 042092 || 0420CA 08          5599          		EX      AF,AF'
	push	hl                        ; 0420CB || 	push	hl                        ; 042093 || 0420CB E5          5600  DISPAT_FP:			PUSH    HL
	ld	hl,$0420de                  ; 0420CC || 	ld	hl,$0420a6                  ; 042094 || 0420CC 21 DE 20 04 5601          		LD      HL,DTABLE
	push	bc                        ; 0420D0 || 	push	bc                        ; 042098 || 0420D0 C5          5602          		PUSH    BC
	ld	bc,$000003                  ; 0420D1 || 	ld	bc,$000003                  ; 042099 || 0420D1 01 03 00 00 5603  			LD	BC, 3		; C = 3
	ld	b,a                         ; 0420D5 || 	ld	b,a                         ; 04209D || 0420D5 47          5604  			LD	B, A 		; B = op-code
	mlt	bc                         ; 0420D6 || 	mlt	bc                         ; 04209E || 0420D6 ED 4C       5605  			MLT 	BC 		;BC = op-code * 3
	add	hl,bc                      ; 0420D8 || 	add	hl,bc                      ; 0420A0 || 0420D8 09          5606  			ADD	HL, BC 		;Add to table base
	ld	hl,(hl)                     ; 0420D9 || 	ld	hl,(hl)                     ; 0420A1 || 0420D9 ED 27       5607  			LD	HL, (HL)	;Get the routine address (24-bit)
	pop	bc                         ; 0420DB || 	pop	bc                         ; 0420A3 || 0420DB C1          5618          		POP     BC
	ex	(sp),hl                     ; 0420DC || 	ex	(sp),hl                     ; 0420A4 || 0420DC E3          5619          		EX      (SP),HL
	ret                            ; 0420DD || 	ret                            ; 0420A5 || 0420DD C9          5620          		RET                     ;Off to routine
	sub	b                          ; 0420DE                                         || 0420DE 90 21 04    5624  DTABLE:			DW24  IAND            ;AND (INTEGER)
	ld	hl,$21fe04                  ; 0420DF || 	ld	hl,$21c604                  ; 0420A7
	inc	b                          ; 0420E3 || 	inc	b                          ; 0420AB
	and	e                          ; 0420E4                                         || 0420E4 A3 21 04    5626          		DW24  IEOR            ;EOR
	ld	hl,$21c904                  ; 0420E5 || 	ld	hl,$219104                  ; 0420AD
	inc	b                          ; 0420E9 || 	inc	b                          ; 0420B1
	or	(hl)                        ; 0420EA                                         || 0420EA B6 21 04    5628          		DW24  IOR             ;OR
	ld	hl,$248404                  ; 0420EB || 	ld	hl,$244c04                  ; 0420B3
	inc	b                          ; 0420EF || 	inc	b                          ; 0420B7
	sub	e                          ; 0420F0                                         || 0420F0 93 24 04    5630          		DW24  INE             ;<>
	inc	h                          ; 0420F1
	inc	b                          ; 0420F2
	ld	(hl),a                      ; 0420F3                                         || 0420F3 77 24 04    5631          		DW24  IGE             ;>=
	inc	h                          ; 0420F4
	inc	b                          ; 0420F5
	ld	e,h                         ; 0420F6                                         || 0420F6 5C 24 04    5632          		DW24  ILT             ;<
	inc	h                          ; 0420F7
	inc	b                          ; 0420F8
	and	b                          ; 0420F9                                         || 0420F9 A0 24 04    5633          		DW24  IEQ             ;=
	inc	h                          ; 0420FA
	inc	b                          ; 0420FB
	call	pe,$270422                ; 0420FC                                         || 0420FC EC 22 04    5634          		DW24  IMUL            ;*
	ld	($246904),hl                ; 042100
	inc	b                          ; 042104
	ld	c,$22                       ; 042105                                         || 042105 0E 22 04    5637          		DW24  ISUB            ;-
	inc	b                          ; 042107
	and	e                          ; 042108                                         || 042108 A3 23 04    5638          		DW24  IPOW            ;^
	inc	hl                         ; 042109
	inc	b                          ; 04210A
	sbc	a,c                        ; 04210B                                         || 04210B 99 22 04    5639          		DW24  IDIV            ;/
	ld	($24b204),hl                ; 04210C
	inc	b                          ; 042110
	sbc	a,b                        ; 042111                                         || 042111 98 28 04    5643          		DW24  ACS_FP             ;ACS
	jr	z,$+$06                     ; 042112
	sub	$27                        ; 042114                                         || 042114 D6 27 04    5644          		DW24  ASN_FP             ;ASN
	inc	b                          ; 042116
	ld	b,$28                       ; 042117                                         || 042117 06 28 04    5645          		DW24  ATN_FP             ;ATN
	inc	b                          ; 042119
	pop	de                         ; 04211A                                         || 04211A D1 25 04    5646          		DW24  COS_FP             ;COS
	dec	h                          ; 04211B
	inc	b                          ; 04211C
	ret	po                         ; 04211D                                         || 04211D E0 24 04    5647          		DW24  DEG_FP             ;DEG
	inc	h                          ; 04211E
	inc	b                          ; 04211F
	adc	a,l                        ; 042120                                         || 042120 8D 26 04    5648          		DW24  EXP_FP             ;EXP
	ld	h,$04                       ; 042121
	inc	(hl)                       ; 042123                                         || 042123 34 25 04    5649          		DW24  INT_FP_            ;INT
	dec	h                          ; 042124
	inc	b                          ; 042125
	dec	hl                         ; 042126                                         || 042126 2B 27 04    5650          		DW24  LN_FP              ;LN
	daa                            ; 042127
	inc	b                          ; 042128
	ret	nz                         ; 042129                                         || 042129 C0 27 04    5651          		DW24  LOG_FP             ;LOG
	daa                            ; 04212A
	inc	b                          ; 04212B
	cp	(hl)                        ; 04212C                                         || 04212C BE 24 04    5652          		DW24  NOTK_FP            ;NOT
	inc	h                          ; 04212D
	inc	b                          ; 04212E
	jp	pe,$050424                  ; 04212F                                         || 04212F EA 24 04    5653          		DW24  RAD_FP             ;RAD
	dec	h                          ; 042133
	inc	b                          ; 042134
	sbc	a,$25                      ; 042135                                         || 042135 DE 25 04    5655          		DW24  SIN_FP             ;SIN
	inc	b                          ; 042137
	ld	c,l                         ; 042138                                         || 042138 4D 25 04    5656          		DW24  SQR_FP             ;SQR
	dec	h                          ; 042139
	inc	b                          ; 04213A
	xor	e                          ; 04213B                                         || 04213B AB 25 04    5657          		DW24  TAN_FP             ;TAN
	dec	h                          ; 04213C
	inc	b                          ; 04213D
	inc.lil	l                      ; 04213E                                         || 04213E 5B 2C 04    5659  		        DW24  ZERO_FP            ;ZERO
	inc	b                          ; 042140
	ld	h,(hl)                      ; 042141                                         || 042141 66 26 04    5660          		DW24  FONE_FP            ;FONE
	ld	h,$04                       ; 042142
	and	l                          ; 042144                                         || 042144 A5 24 04    5661          		DW24  TRUE_FP            ;TRUE
	inc	h                          ; 042145
	inc	b                          ; 042146
	jp	nc,$190424                  ; 042147                                         || 042147 D2 24 04    5662          		DW24  PI_FP              ;PI
	dec	h                          ; 04214B
	inc	b                          ; 04214C
	and	c                          ; 04214D                                         || 04214D A1 28 04    5665          		DW24  STR_FP             ;STR$
	jr	z,$+$06                     ; 04214E
	ld	(bc),a                      ; 042150                                         || 042150 02 2B 04    5667          		DW24  SFIX_FP            ;FIX
	dec	hl                         ; 042151
	inc	b                          ; 042152
	sbc	a,$2b                      ; 042153                                         || 042153 DE 2B 04    5668          		DW24  SFLOAT_FP          ;FLOAT
	inc	b                          ; 042155
	inc	l                          ; 042156                                         || 042156 2C 2C 04    5670  		        DW24  FTEST_FP           ;TEST
	inc	l                          ; 042157
	inc	b                          ; 042158
	ld	a,$2c                       ; 042159                                         || 042159 3E 2C 04    5671          		DW24  FCOMP_FP           ;COMPARE
	inc	b                          ; 04215B
	adc	a,h                        ; 04215C                                         || 04215C 8C 21 04    5673  RTABLE:			DW24  FAND            ;AND (FLOATING-POINT)
	ld	hl,$21fa04                  ; 04215D || 	ld	hl,$21c204                  ; 042125
	inc	b                          ; 042161 || 	inc	b                          ; 042129
	sbc	a,a                        ; 042162                                         || 042162 9F 21 04    5675          		DW24  FEOR            ;EOR
	ld	hl,$21c504                  ; 042163 || 	ld	hl,$218d04                  ; 04212B
	inc	b                          ; 042167 || 	inc	b                          ; 04212F
	or	d                           ; 042168                                         || 042168 B2 21 04    5677          		DW24  FFOR             ;OR
	ld	hl,$247e04                  ; 042169 || 	ld	hl,$244604                  ; 042131
	inc	b                          ; 04216D || 	inc	b                          ; 042135
	adc	a,l                        ; 04216E                                         || 04216E 8D 24 04    5679          		DW24  FNE             ;<>
	inc	h                          ; 04216F || 	inc	h                          ; 042137
	inc	b                          ; 042170 || 	inc	b                          ; 042138
	ld	(hl),c                      ; 042171                                         || 042171 71 24 04    5680          		DW24  FGE             ;>=
	inc	h                          ; 042172 || 	inc	h                          ; 04213A
	inc	b                          ; 042173 || 	inc	b                          ; 04213B
	ld	d,(hl)                      ; 042174                                         || 042174 56 24 04    5681          		DW24  FLT             ;<
	inc	h                          ; 042175
	inc	b                          ; 042176
	sbc	a,d                        ; 042177                                         || 042177 9A 24 04    5682          		DW24  FEQ             ;=
	inc	h                          ; 042178
	inc	b                          ; 042179
	ld	b,(hl)                      ; 04217A                                         || 04217A 46 23 04    5683          		DW24  FMUL            ;*
	inc	hl                         ; 04217B
	inc	b                          ; 04217C
	inc	(hl)                       ; 04217D                                         || 04217D 34 22 04    5684          		DW24  FADD            ;+
	ld	($246304),hl                ; 04217E
	inc	b                          ; 042182
	dec	de                         ; 042183                                         || 042183 1B 22 04    5686          		DW24  FSUB            ;-
	ld	($242304),hl                ; 042184
	inc	b                          ; 042188
	sbc	a,l                        ; 042189                                         || 042189 9D 22 04    5688          		DW24  FDIV            ;/
	ld	($f6cd04),hl                ; 04218A
	ld	hl,($a27c04)                ; 04218E
	ld	h,a                         ; 042192 || 	ld	h,a                         ; 04215A || 042192 67          5704          		LD      H,A
	ld	a,l                         ; 042193 || 	ld	a,l                         ; 04215B || 042193 7D          5705          		LD      A,L
	and	e                          ; 042194 || 	and	e                          ; 04215C || 042194 A3          5706          		AND     E
	ld	l,a                         ; 042195 || 	ld	l,a                         ; 04215D || 042195 6F          5707          		LD      L,A
	exx                            ; 042196 || 	exx                            ; 04215E || 042196 D9          5708          		EXX
	ld	a,h                         ; 042197 || 	ld	a,h                         ; 04215F || 042197 7C          5709          		LD      A,H
	and	d                          ; 042198 || 	and	d                          ; 042160 || 042198 A2          5710          		AND     D
	ld	h,a                         ; 042199 || 	ld	h,a                         ; 042161 || 042199 67          5711          		LD      H,A
	ld	a,l                         ; 04219A || 	ld	a,l                         ; 042162 || 04219A 7D          5712          		LD      A,L
	and	e                          ; 04219B || 	and	e                          ; 042163 || 04219B A3          5713          		AND     E
	ld	l,a                         ; 04219C || 	ld	l,a                         ; 042164 || 04219C 6F          5714          		LD      L,A
	exx                            ; 04219D || 	exx                            ; 042165 || 04219D D9          5715          		EXX
	ret                            ; 04219E || 	ret                            ; 042166 || 04219E C9          5716          		RET
	call	$042af6                   ; 04219F || 	call	$042abe                   ; 042167 || 04219F CD F6 2A 04 5721  FEOR:			CALL    FIX2
	ld	a,h                         ; 0421A3 || 	ld	a,h                         ; 04216B || 0421A3 7C          5722  IEOR:			LD      A,H
	xor	d                          ; 0421A4 || 	xor	d                          ; 04216C || 0421A4 AA          5723          		XOR     D
	ld	h,a                         ; 0421A5 || 	ld	h,a                         ; 04216D || 0421A5 67          5724          		LD      H,A
	ld	a,l                         ; 0421A6 || 	ld	a,l                         ; 04216E || 0421A6 7D          5725          		LD      A,L
	xor	e                          ; 0421A7 || 	xor	e                          ; 04216F || 0421A7 AB          5726          		XOR     E
	ld	l,a                         ; 0421A8 || 	ld	l,a                         ; 042170 || 0421A8 6F          5727          		LD      L,A
	exx                            ; 0421A9 || 	exx                            ; 042171 || 0421A9 D9          5728          		EXX
	ld	a,h                         ; 0421AA || 	ld	a,h                         ; 042172 || 0421AA 7C          5729          		LD      A,H
	xor	d                          ; 0421AB || 	xor	d                          ; 042173 || 0421AB AA          5730          		XOR     D
	ld	h,a                         ; 0421AC || 	ld	h,a                         ; 042174 || 0421AC 67          5731          		LD      H,A
	ld	a,l                         ; 0421AD || 	ld	a,l                         ; 042175 || 0421AD 7D          5732          		LD      A,L
	xor	e                          ; 0421AE || 	xor	e                          ; 042176 || 0421AE AB          5733          		XOR     E
	ld	l,a                         ; 0421AF || 	ld	l,a                         ; 042177 || 0421AF 6F          5734          		LD      L,A
	exx                            ; 0421B0 || 	exx                            ; 042178 || 0421B0 D9          5735          		EXX
	ret                            ; 0421B1 || 	ret                            ; 042179 || 0421B1 C9          5736          		RET
	call	$042af6                   ; 0421B2 || 	call	$042abe                   ; 04217A || 0421B2 CD F6 2A 04 5741  FFOR:			CALL    FIX2
	ld	a,h                         ; 0421B6 || 	ld	a,h                         ; 04217E || 0421B6 7C          5742  IOR:			LD      A,H
	or	d                           ; 0421B7 || 	or	d                           ; 04217F || 0421B7 B2          5743          		OR      D
	ld	h,a                         ; 0421B8 || 	ld	h,a                         ; 042180 || 0421B8 67          5744          		LD      H,A
	ld	a,l                         ; 0421B9 || 	ld	a,l                         ; 042181 || 0421B9 7D          5745          		LD      A,L
	or	e                           ; 0421BA || 	or	e                           ; 042182 || 0421BA B3          5746          		OR      E
	ld	l,a                         ; 0421BB || 	ld	l,a                         ; 042183 || 0421BB 6F          5747          		LD      L,A
	exx                            ; 0421BC || 	exx                            ; 042184 || 0421BC D9          5748          		EXX
	ld	a,h                         ; 0421BD || 	ld	a,h                         ; 042185 || 0421BD 7C          5749          		LD      A,H
	or	d                           ; 0421BE || 	or	d                           ; 042186 || 0421BE B2          5750          		OR      D
	ld	h,a                         ; 0421BF || 	ld	h,a                         ; 042187 || 0421BF 67          5751          		LD      H,A
	ld	a,l                         ; 0421C0 || 	ld	a,l                         ; 042188 || 0421C0 7D          5752          		LD      A,L
	or	e                           ; 0421C1 || 	or	e                           ; 042189 || 0421C1 B3          5753          		OR      E
	ld	l,a                         ; 0421C2 || 	ld	l,a                         ; 04218A || 0421C2 6F          5754          		LD      L,A
	exx                            ; 0421C3 || 	exx                            ; 04218B || 0421C3 D9          5755          		EXX
	ret                            ; 0421C4 || 	ret                            ; 04218C || 0421C4 C9          5756          		RET
	call	$042af6                   ; 0421C5 || 	call	$042abe                   ; 04218D || 0421C5 CD F6 2A 04 5761  FMOD:			CALL    FIX2
	ld	a,h                         ; 0421C9 || 	ld	a,h                         ; 042191 || 0421C9 7C          5762  IMOD:			LD      A,H
	xor	d                          ; 0421CA || 	xor	d                          ; 042192 || 0421CA AA          5763          		XOR     D               ;DIV RESULT SIGN
	bit	7,h                        ; 0421CB || 	bit	7,h                        ; 042193 || 0421CB CB 7C       5764          		BIT     7,H
	ex	af,af'                      ; 0421CD || 	ex	af,af'                      ; 042195 || 0421CD 08          5765          		EX      AF,AF'
	bit	7,h                        ; 0421CE || 	bit	7,h                        ; 042196 || 0421CE CB 7C       5766          		BIT     7,H
	call	nz,$042b12                ; 0421D0 || 	call	nz,$042ada                ; 042198 || 0421D0 C4 12 2B 04 5767          		CALL    NZ,NEGATE       ;MAKE ARGUMENTS +VE
	call	$042c0f                   ; 0421D4 || 	call	$042bd7                   ; 04219C || 0421D4 CD 0F 2C 04 5768          		CALL    SWAP_FP
	bit	7,h                        ; 0421D8 || 	bit	7,h                        ; 0421A0 || 0421D8 CB 7C       5769          		BIT     7,H
	call	nz,$042b12                ; 0421DA || 	call	nz,$042ada                ; 0421A2 || 0421DA C4 12 2B 04 5770          		CALL    NZ,NEGATE
	ld	b,h                         ; 0421DE || 	ld	b,h                         ; 0421A6 || 0421DE 44          5771          		LD      B,H
	ld	c,l                         ; 0421DF || 	ld	c,l                         ; 0421A7 || 0421DF 4D          5772          		LD      C,L
	ld	hl,$000000                  ; 0421E0 || 	ld	hl,$000000                  ; 0421A8 || 0421E0 21 00 00 00 5773          		LD      HL,0
	exx                            ; 0421E4 || 	exx                            ; 0421AC || 0421E4 D9          5774          		EXX
	ld	b,h                         ; 0421E5 || 	ld	b,h                         ; 0421AD || 0421E5 44          5775          		LD      B,H
	ld	c,l                         ; 0421E6 || 	ld	c,l                         ; 0421AE || 0421E6 4D          5776          		LD      C,L
	ld	hl,$000000                  ; 0421E7 || 	ld	hl,$000000                  ; 0421AF || 0421E7 21 00 00 00 5777          		LD      HL,0
	ld	a,$df                       ; 0421EB || 	ld	a,$df                       ; 0421B3 || 0421EB 3E DF       5778          		LD      A,-33
	call	$042d9c                   ; 0421ED || 	call	$042d64                   ; 0421B5 || 0421ED CD 9C 2D 04 5779          		CALL    DIVA            ;DIVIDE
	exx                            ; 0421F1 || 	exx                            ; 0421B9 || 0421F1 D9          5780          		EXX
	ld	c,$00                       ; 0421F2 || 	ld	c,$00                       ; 0421BA || 0421F2 0E 00       5781          		LD      C,0             ;INTEGER MARKER
	ex	af,af'                      ; 0421F4 || 	ex	af,af'                      ; 0421BC || 0421F4 08          5782          		EX      AF,AF'
	ret	z                          ; 0421F5 || 	ret	z                          ; 0421BD || 0421F5 C8          5783          		RET     Z
	jp	$042b12                     ; 0421F6 || 	jp	$042ada                     ; 0421BE || 0421F6 C3 12 2B 04 5784          		JP      NEGATE
	call	$042af6                   ; 0421FA || 	call	$042abe                   ; 0421C2 || 0421FA CD F6 2A 04 5788  FBDIV:			CALL    FIX2
	call	$0421c9                   ; 0421FE || 	call	$042191                   ; 0421C6 || 0421FE CD C9 21 04 5789  IBDIV:			CALL    IMOD
	or	a                           ; 042202 || 	or	a                           ; 0421CA || 042202 B7          5790          		OR      A
	call	$042c0f                   ; 042203 || 	call	$042bd7                   ; 0421CB || 042203 CD 0F 2C 04 5791          		CALL    SWAP_FP
	ld	c,$00                       ; 042207 || 	ld	c,$00                       ; 0421CF || 042207 0E 00       5792          		LD      C,0
	ret	p                          ; 042209 || 	ret	p                          ; 0421D1 || 042209 F0          5793          		RET     P
	jp	$042b12                     ; 04220A || 	jp	$042ada                     ; 0421D2 || 04220A C3 12 2B 04 5794          		JP      NEGATE
	call	$042caa                   ; 04220E || 	call	$042c72                   ; 0421D6 || 04220E CD AA 2C 04 5799  ISUB:			CALL    SUB_
	ret	po                         ; 042212 || 	ret	po                         ; 0421DA || 042212 E0          5800          		RET     PO
	call	$042ca2                   ; 042213 || 	call	$042c6a                   ; 0421DB || 042213 CD A2 2C 04 5801          		CALL    ADD_
	call	$042bd2                   ; 042217 || 	call	$042b9a                   ; 0421DF || 042217 CD D2 2B 04 5802          		CALL    FLOAT2
	ld	a,d                         ; 04221B || 	ld	a,d                         ; 0421E3 || 04221B 7A          5803  FSUB:			LD      A,D
	xor	$80                        ; 04221C || 	xor	$80                        ; 0421E4 || 04221C EE 80       5804          		XOR     80H             ;CHANGE SIGN THEN ADD
	ld	d,a                         ; 04221E || 	ld	d,a                         ; 0421E6 || 04221E 57          5805          		LD      D,A
	jr	$+$15                       ; 04221F || 	jr	$+$15                       ; 0421E7 || 04221F 18 13       5806          		JR      FADD
	ld	a,h                         ; 042221 || 	ld	a,h                         ; 0421E9 || 042221 7C          5810  RSUB:			LD      A,H
	xor	$80                        ; 042222 || 	xor	$80                        ; 0421EA || 042222 EE 80       5811          		XOR     80H
	ld	h,a                         ; 042224 || 	ld	h,a                         ; 0421EC || 042224 67          5812          		LD      H,A
	jr	$+$0f                       ; 042225 || 	jr	$+$0f                       ; 0421ED || 042225 18 0D       5813          		JR      FADD
	call	$042ca2                   ; 042227 || 	call	$042c6a                   ; 0421EF || 042227 CD A2 2C 04 5818  IADD:			CALL    ADD_
	ret	po                         ; 04222B || 	ret	po                         ; 0421F3 || 04222B E0          5819          		RET     PO
	call	$042caa                   ; 04222C || 	call	$042c72                   ; 0421F4 || 04222C CD AA 2C 04 5820          		CALL    SUB_
	call	$042bd2                   ; 042230 || 	call	$042b9a                   ; 0421F8 || 042230 CD D2 2B 04 5821          		CALL    FLOAT2
	dec	b                          ; 042234 || 	dec	b                          ; 0421FC || 042234 05          5822  FADD:			DEC     B
	inc	b                          ; 042235 || 	inc	b                          ; 0421FD || 042235 04          5823          		INC     B
	ret	z                          ; 042236 || 	ret	z                          ; 0421FE || 042236 C8          5824          		RET     Z               ;ARG 2 ZERO
	dec	c                          ; 042237 || 	dec	c                          ; 0421FF || 042237 0D          5825          		DEC     C
	inc	c                          ; 042238 || 	inc	c                          ; 042200 || 042238 0C          5826          		INC     C
	jp	z,$042c0f                   ; 042239 || 	jp	z,$042bd7                   ; 042201 || 042239 CA 0F 2C 04 5827          		JP      Z,SWAP_FP          ;ARG 1 ZERO
	exx                            ; 04223D || 	exx                            ; 042205 || 04223D D9          5828          		EXX
	ld	bc,$000000                  ; 04223E || 	ld	bc,$000000                  ; 042206 || 04223E 01 00 00 00 5829          		LD      BC,0            ;INITIALISE
	exx                            ; 042242 || 	exx                            ; 04220A || 042242 D9          5830          		EXX
	ld	a,h                         ; 042243 || 	ld	a,h                         ; 04220B || 042243 7C          5831          		LD      A,H
	xor	d                          ; 042244 || 	xor	d                          ; 04220C || 042244 AA          5832          		XOR     D               ;XOR SIGNS
	push	af                        ; 042245 || 	push	af                        ; 04220D || 042245 F5          5833          		PUSH    AF
	ld	a,b                         ; 042246 || 	ld	a,b                         ; 04220E || 042246 78          5834          		LD      A,B
	cp	c                           ; 042247 || 	cp	c                           ; 04220F || 042247 B9          5835          		CP      C               ;COMPARE EXPONENTS
	call	c,$042c0f                 ; 042248 || 	call	c,$042bd7                 ; 042210 || 042248 DC 0F 2C 04 5836          		CALL    C,SWAP_FP          ;MAKE DED'E'B LARGEST
	ld	a,b                         ; 04224C || 	ld	a,b                         ; 042214 || 04224C 78          5837          		LD      A,B
	set	7,h                        ; 04224D || 	set	7,h                        ; 042215 || 04224D CB FC       5838          		SET     7,H             ;IMPLIED 1
	call	nz,$042ae3                ; 04224F || 	call	nz,$042aab                ; 042217 || 04224F C4 E3 2A 04 5839          		CALL    NZ,FIX          ;ALIGN
	pop	af                         ; 042253 || 	pop	af                         ; 04221B || 042253 F1          5840          		POP     AF
	ld	a,d                         ; 042254 || 	ld	a,d                         ; 04221C || 042254 7A          5841          		LD      A,D             ;SIGN OF LARGER
	set	7,d                        ; 042255 || 	set	7,d                        ; 04221D || 042255 CB FA       5842          		SET     7,D             ;IMPLIED 1
	jp	m,$042267                   ; 042257 || 	jp	m,$04222f                   ; 04221F || 042257 FA 67 22 04 5843          		JP      M,FADD3         ;SIGNS DIFFERENT
	call	$042ca2                   ; 04225B || 	call	$042c6a                   ; 042223 || 04225B CD A2 2C 04 5844          		CALL    ADD_             ;HLH'L'=HLH'L'+DED'E'
	call	c,$042c17                 ; 04225F || 	call	c,$042bdf                 ; 042227 || 04225F DC 17 2C 04 5845          		CALL    C,DIV2          ;NORMALISE
	set	7,h                        ; 042263 || 	set	7,h                        ; 04222B || 042263 CB FC       5846          		SET     7,H
	jr	$+$0f                       ; 042265 || 	jr	$+$0f                       ; 04222D || 042265 18 0D       5847          		JR      FADD4
	call	$042caa                   ; 042267 || 	call	$042c72                   ; 04222F || 042267 CD AA 2C 04 5849  FADD3:			CALL    SUB_             ;HLH'L'=HLH'L'-DED'E'
	call	c,$042b2a                 ; 04226B || 	call	c,$042af2                 ; 042233 || 04226B DC 2A 2B 04 5850          		CALL    C,NEG_           ;NEGATE HLH'L'B'C'
	call	$042ba9                   ; 04226F || 	call	$042b71                   ; 042237 || 04226F CD A9 2B 04 5851          		CALL    FLO48
	cpl                            ; 042273 || 	cpl                            ; 04223B || 042273 2F          5852          		CPL                     ;CHANGE RESULT SIGN
	exx                            ; 042274 || 	exx                            ; 04223C || 042274 D9          5853  FADD4:			EXX
	ex	de,hl                       ; 042275 || 	ex	de,hl                       ; 04223D || 042275 EB          5854          		EX      DE,HL
	ld	hl,$008000                  ; 042276 || 	ld	hl,$008000                  ; 04223E || 042276 21 00 80 00 5855          		LD      HL,8000H
	or	a                           ; 04227A || 	or	a                           ; 042242 || 04227A B7          5856          		OR      A               ;CLEAR CARRY
	sbc.sil	hl,bc                  ; 04227B || 	sbc.sil	hl,bc                  ; 042243 || 04227B 52 ED 42    5857          		SBC.S   HL,BC
	ex	de,hl                       ; 04227E || 	ex	de,hl                       ; 042246 || 04227E EB          5858          		EX      DE,HL
	exx                            ; 04227F || 	exx                            ; 042247 || 04227F D9          5859          		EXX
	call	z,$042c09                 ; 042280 || 	call	z,$042bd1                 ; 042248 || 042280 CC 09 2C 04 5860          		CALL    Z,ODD           ;ROUND UNBIASSED
	call	c,$042bf7                 ; 042284 || 	call	c,$042bbf                 ; 04224C || 042284 DC F7 2B 04 5861          		CALL    C,ADD1_FP          ;ROUND UP
	call	c,$042c24                 ; 042288 || 	call	c,$042bec                 ; 042250 || 042288 DC 24 2C 04 5862          		CALL    C,INCC
	res	7,h                        ; 04228C || 	res	7,h                        ; 042254 || 04228C CB BC       5863          		RES     7,H
	dec	c                          ; 04228E || 	dec	c                          ; 042256 || 04228E 0D          5864          		DEC     C
	inc	c                          ; 04228F || 	inc	c                          ; 042257 || 04228F 0C          5865          		INC     C
	jp	z,$042c5b                   ; 042290 || 	jp	z,$042c23                   ; 042258 || 042290 CA 5B 2C 04 5866          		JP      Z,ZERO_FP
	or	a                           ; 042294 || 	or	a                           ; 04225C || 042294 B7          5867          		OR      A               ;RESULT SIGNQ
	ret	p                          ; 042295 || 	ret	p                          ; 04225D || 042295 F0          5868          		RET     P               ;POSITIVE
	set	7,h                        ; 042296 || 	set	7,h                        ; 04225E || 042296 CB FC       5869          		SET     7,H             ;NEGATIVE
	ret                            ; 042298 || 	ret                            ; 042260 || 042298 C9          5870          		RET
	call	$042bd2                   ; 042299 || 	call	$042b9a                   ; 042261 || 042299 CD D2 2B 04 5875  IDIV:			CALL    FLOAT2
	dec	b                          ; 04229D || 	dec	b                          ; 042265 || 04229D 05          5876  FDIV:			DEC     B               ;TEST FOR ZERO
	inc	b                          ; 04229E || 	inc	b                          ; 042266 || 04229E 04          5877          		INC     B
	ld	a,$12                       ; 04229F || 	ld	a,$12                       ; 042267 || 04229F 3E 12       5878          		LD      A,DIVBY0
	jp	z,$0420b5                   ; 0422A1 || 	jp	z,$04207d                   ; 042269 || 0422A1 CA B5 20 04 5879          		JP      Z,ERROR_FP_         ;"Division by zero"
	dec	c                          ; 0422A5 || 	dec	c                          ; 04226D || 0422A5 0D          5880          		DEC     C               ;TEST FOR ZERO
	inc	c                          ; 0422A6 || 	inc	c                          ; 04226E || 0422A6 0C          5881          		INC     C
	ret	z                          ; 0422A7 || 	ret	z                          ; 04226F || 0422A7 C8          5882          		RET     Z
	ld	a,h                         ; 0422A8 || 	ld	a,h                         ; 042270 || 0422A8 7C          5883          		LD      A,H
	xor	d                          ; 0422A9 || 	xor	d                          ; 042271 || 0422A9 AA          5884          		XOR     D               ;CALC. RESULT SIGN
	ex	af,af'                      ; 0422AA || 	ex	af,af'                      ; 042272 || 0422AA 08          5885          		EX      AF,AF'          ;SAVE SIGN
	set	7,d                        ; 0422AB || 	set	7,d                        ; 042273 || 0422AB CB FA       5886          		SET     7,D             ;REPLACE IMPLIED 1's
	set	7,h                        ; 0422AD || 	set	7,h                        ; 042275 || 0422AD CB FC       5887          		SET     7,H
	push	bc                        ; 0422AF || 	push	bc                        ; 042277 || 0422AF C5          5888          		PUSH    BC              ;SAVE EXPONENTS
	ld	b,d                         ; 0422B0 || 	ld	b,d                         ; 042278 || 0422B0 42          5889          		LD      B,D             ;LOAD REGISTERS
	ld	c,e                         ; 0422B1 || 	ld	c,e                         ; 042279 || 0422B1 4B          5890          		LD      C,E
	ld	de,$000000                  ; 0422B2 || 	ld	de,$000000                  ; 04227A || 0422B2 11 00 00 00 5891          		LD      DE,0
	exx                            ; 0422B6 || 	exx                            ; 04227E || 0422B6 D9          5892          		EXX
	ld	b,d                         ; 0422B7 || 	ld	b,d                         ; 04227F || 0422B7 42          5893          		LD      B,D
	ld	c,e                         ; 0422B8 || 	ld	c,e                         ; 042280 || 0422B8 4B          5894          		LD      C,E
	ld	de,$000000                  ; 0422B9 || 	ld	de,$000000                  ; 042281 || 0422B9 11 00 00 00 5895          		LD      DE,0
	ld	a,$e0                       ; 0422BD || 	ld	a,$e0                       ; 042285 || 0422BD 3E E0       5896          		LD      A,-32           ;LOOP COUNTER
	call	$042d9c                   ; 0422BF || 	call	$042d64                   ; 042287 || 0422BF CD 9C 2D 04 5897          		CALL    DIVA            ;DIVIDE
	exx                            ; 0422C3 || 	exx                            ; 04228B || 0422C3 D9          5898          		EXX
	bit	7,d                        ; 0422C4 || 	bit	7,d                        ; 04228C || 0422C4 CB 7A       5899          		BIT     7,D
	exx                            ; 0422C6 || 	exx                            ; 04228E || 0422C6 D9          5900          		EXX
	call	z,$042dbb                 ; 0422C7 || 	call	z,$042d83                 ; 04228F || 0422C7 CC BB 2D 04 5901          		CALL    Z,DIVB          ;NORMALISE & INC A
	ex	de,hl                       ; 0422CB || 	ex	de,hl                       ; 042293 || 0422CB EB          5902          		EX      DE,HL
	exx                            ; 0422CC || 	exx                            ; 042294 || 0422CC D9          5903          		EXX
	srl	b                          ; 0422CD || 	srl	b                          ; 042295 || 0422CD CB 38       5904          		SRL     B               ;DIVISOR/2
	rr	c                           ; 0422CF || 	rr	c                           ; 042297 || 0422CF CB 19       5905          		RR      C
	or	a                           ; 0422D1 || 	or	a                           ; 042299 || 0422D1 B7          5906          		OR      A               ;CLEAR CARRY
	sbc.sil	hl,bc                  ; 0422D2 || 	sbc.sil	hl,bc                  ; 04229A || 0422D2 52 ED 42    5907          		SBC.S   HL,BC           ;REMAINDER-DIVISOR/2
	ccf                            ; 0422D5 || 	ccf                            ; 04229D || 0422D5 3F          5908          		CCF
	ex	de,hl                       ; 0422D6 || 	ex	de,hl                       ; 04229E || 0422D6 EB          5909          		EX      DE,HL           ;RESULT IN HLH'L'
	call	z,$042c09                 ; 0422D7 || 	call	z,$042bd1                 ; 04229F || 0422D7 CC 09 2C 04 5910          		CALL    Z,ODD           ;ROUND UNBIASSED
	call	c,$042bf7                 ; 0422DB || 	call	c,$042bbf                 ; 0422A3 || 0422DB DC F7 2B 04 5911          		CALL    C,ADD1_FP          ;ROUND UP
	pop	bc                         ; 0422DF || 	pop	bc                         ; 0422A7 || 0422DF C1          5912          		POP     BC              ;RESTORE EXPONENTS
	call	c,$042c24                 ; 0422E0 || 	call	c,$042bec                 ; 0422A8 || 0422E0 DC 24 2C 04 5913          		CALL    C,INCC
	rra                            ; 0422E4 || 	rra                            ; 0422AC || 0422E4 1F          5914          		RRA                     ;LSB OF A TO CARRY
	ld	a,c                         ; 0422E5 || 	ld	a,c                         ; 0422AD || 0422E5 79          5915          		LD      A,C             ;COMPUTE NEW EXPONENT
	sbc	a,b                        ; 0422E6 || 	sbc	a,b                        ; 0422AE || 0422E6 98          5916          		SBC     A,B
	ccf                            ; 0422E7 || 	ccf                            ; 0422AF || 0422E7 3F          5917          		CCF
	jp	$042389                     ; 0422E8 || 	jp	$042351                     ; 0422B0 || 0422E8 C3 89 23 04 5918          		JP      CHKOVF
	ld	a,h                         ; 0422EC || 	ld	a,h                         ; 0422B4 || 0422EC 7C          5922  IMUL:			LD      A,H
	xor	d                          ; 0422ED || 	xor	d                          ; 0422B5 || 0422ED AA          5923          		XOR     D
	ex	af,af'                      ; 0422EE || 	ex	af,af'                      ; 0422B6 || 0422EE 08          5924          		EX      AF,AF'          ;SAVE RESULT SIGN
	bit	7,h                        ; 0422EF || 	bit	7,h                        ; 0422B7 || 0422EF CB 7C       5925          		BIT     7,H
	call	nz,$042b12                ; 0422F1 || 	call	nz,$042ada                ; 0422B9 || 0422F1 C4 12 2B 04 5926          		CALL    NZ,NEGATE
	call	$042c0f                   ; 0422F5 || 	call	$042bd7                   ; 0422BD || 0422F5 CD 0F 2C 04 5927          		CALL    SWAP_FP
	bit	7,h                        ; 0422F9 || 	bit	7,h                        ; 0422C1 || 0422F9 CB 7C       5928          		BIT     7,H
	call	nz,$042b12                ; 0422FB || 	call	nz,$042ada                ; 0422C3 || 0422FB C4 12 2B 04 5929          		CALL    NZ,NEGATE
	ld	b,h                         ; 0422FF || 	ld	b,h                         ; 0422C7 || 0422FF 44          5930          		LD      B,H
	ld	c,l                         ; 042300 || 	ld	c,l                         ; 0422C8 || 042300 4D          5931          		LD      C,L
	ld	hl,$000000                  ; 042301 || 	ld	hl,$000000                  ; 0422C9 || 042301 21 00 00 00 5932          		LD      HL,0
	exx                            ; 042305 || 	exx                            ; 0422CD || 042305 D9          5933          		EXX
	ld	b,h                         ; 042306 || 	ld	b,h                         ; 0422CE || 042306 44          5934          		LD      B,H
	ld	c,l                         ; 042307 || 	ld	c,l                         ; 0422CF || 042307 4D          5935          		LD      C,L
	ld	hl,$000000                  ; 042308 || 	ld	hl,$000000                  ; 0422D0 || 042308 21 00 00 00 5936          		LD      HL,0
	ld	a,$df                       ; 04230C || 	ld	a,$df                       ; 0422D4 || 04230C 3E DF       5937          		LD      A,-33
	call	$042dd3                   ; 04230E || 	call	$042d9b                   ; 0422D6 || 04230E CD D3 2D 04 5938          		CALL    MULA            ;MULTIPLY
	exx                            ; 042312 || 	exx                            ; 0422DA || 042312 D9          5939          		EXX
	ld	c,$bf                       ; 042313 || 	ld	c,$bf                       ; 0422DB || 042313 0E BF       5940          		LD      C,191           ;PRESET EXPONENT
	call	$042c37                   ; 042315 || 	call	$042bff                   ; 0422DD || 042315 CD 37 2C 04 5941          		CALL    TEST_FP            ;TEST RANGE
	jr	nz,$+$11                    ; 042319 || 	jr	nz,$+$11                    ; 0422E1 || 042319 20 0F       5942          		JR      NZ,IMUL1        ;TOO BIG
	bit	7,d                        ; 04231B || 	bit	7,d                        ; 0422E3 || 04231B CB 7A       5943          		BIT     7,D
	jr	nz,$+$0d                    ; 04231D || 	jr	nz,$+$0d                    ; 0422E5 || 04231D 20 0B       5944          		JR      NZ,IMUL1
	call	$042c0f                   ; 04231F || 	call	$042bd7                   ; 0422E7 || 04231F CD 0F 2C 04 5945          		CALL    SWAP_FP
	ld	c,d                         ; 042323 || 	ld	c,d                         ; 0422EB || 042323 4A          5946          		LD      C,D             ;INTEGER MARKER
	ex	af,af'                      ; 042324 || 	ex	af,af'                      ; 0422EC || 042324 08          5947          		EX      AF,AF'
	ret	p                          ; 042325 || 	ret	p                          ; 0422ED || 042325 F0          5948          		RET     P
	jp	$042b12                     ; 042326 || 	jp	$042ada                     ; 0422EE || 042326 C3 12 2B 04 5949          		JP      NEGATE
	dec	c                          ; 04232A || 	dec	c                          ; 0422F2 || 04232A 0D          5951  IMUL1:			DEC     C
	exx                            ; 04232B || 	exx                            ; 0422F3 || 04232B D9          5952          		EXX
	sla	e                          ; 04232C || 	sla	e                          ; 0422F4 || 04232C CB 23       5953          		SLA     E
	rl	d                           ; 04232E || 	rl	d                           ; 0422F6 || 04232E CB 12       5954          		RL      D
	exx                            ; 042330 || 	exx                            ; 0422F8 || 042330 D9          5955          		EXX
	rl	e                           ; 042331 || 	rl	e                           ; 0422F9 || 042331 CB 13       5956          		RL      E
	rl	d                           ; 042333 || 	rl	d                           ; 0422FB || 042333 CB 12       5957          		RL      D
	exx                            ; 042335 || 	exx                            ; 0422FD || 042335 D9          5958          		EXX
	adc.sil	hl,hl                  ; 042336 || 	adc.sil	hl,hl                  ; 0422FE || 042336 52 ED 6A    5959          		ADC.S   HL,HL
	exx                            ; 042339 || 	exx                            ; 042301 || 042339 D9          5960          		EXX
	adc.sil	hl,hl                  ; 04233A || 	adc.sil	hl,hl                  ; 042302 || 04233A 52 ED 6A    5961          		ADC.S   HL,HL
	jp	p,$04232a                   ; 04233D || 	jp	p,$0422f2                   ; 042305 || 04233D F2 2A 23 04 5962          		JP      P,IMUL1         ;NORMALISE
	ex	af,af'                      ; 042341 || 	ex	af,af'                      ; 042309 || 042341 08          5963          		EX      AF,AF'
	ret	m                          ; 042342 || 	ret	m                          ; 04230A || 042342 F8          5964          		RET     M
	res	7,h                        ; 042343 || 	res	7,h                        ; 04230B || 042343 CB BC       5965          		RES     7,H             ;POSITIVE
	ret                            ; 042345 || 	ret                            ; 04230D || 042345 C9          5966          		RET
	dec	b                          ; 042346 || 	dec	b                          ; 04230E || 042346 05          5970  FMUL:			DEC     B               ;TEST FOR ZERO
	inc	b                          ; 042347 || 	inc	b                          ; 04230F || 042347 04          5971          		INC     B
	jp	z,$042c5b                   ; 042348 || 	jp	z,$042c23                   ; 042310 || 042348 CA 5B 2C 04 5972          		JP      Z,ZERO_FP
	dec	c                          ; 04234C || 	dec	c                          ; 042314 || 04234C 0D          5973          		DEC     C               ;TEST FOR ZERO
	inc	c                          ; 04234D || 	inc	c                          ; 042315 || 04234D 0C          5974          		INC     C
	ret	z                          ; 04234E || 	ret	z                          ; 042316 || 04234E C8          5975          		RET     Z
	ld	a,h                         ; 04234F || 	ld	a,h                         ; 042317 || 04234F 7C          5976          		LD      A,H
	xor	d                          ; 042350 || 	xor	d                          ; 042318 || 042350 AA          5977          		XOR     D               ;CALC. RESULT SIGN
	ex	af,af'                      ; 042351 || 	ex	af,af'                      ; 042319 || 042351 08          5978          		EX      AF,AF'
	set	7,d                        ; 042352 || 	set	7,d                        ; 04231A || 042352 CB FA       5979          		SET     7,D             ;REPLACE IMPLIED 1's
	set	7,h                        ; 042354 || 	set	7,h                        ; 04231C || 042354 CB FC       5980          		SET     7,H
	push	bc                        ; 042356 || 	push	bc                        ; 04231E || 042356 C5          5981          		PUSH    BC              ;SAVE EXPONENTS
	ld	b,h                         ; 042357 || 	ld	b,h                         ; 04231F || 042357 44          5982          		LD      B,H             ;LOAD REGISTERS
	ld	c,l                         ; 042358 || 	ld	c,l                         ; 042320 || 042358 4D          5983          		LD      C,L
	ld	hl,$000000                  ; 042359 || 	ld	hl,$000000                  ; 042321 || 042359 21 00 00 00 5984          		LD      HL,0
	exx                            ; 04235D || 	exx                            ; 042325 || 04235D D9          5985          		EXX
	ld	b,h                         ; 04235E || 	ld	b,h                         ; 042326 || 04235E 44          5986          		LD      B,H
	ld	c,l                         ; 04235F || 	ld	c,l                         ; 042327 || 04235F 4D          5987          		LD      C,L
	ld	hl,$000000                  ; 042360 || 	ld	hl,$000000                  ; 042328 || 042360 21 00 00 00 5988          		LD      HL,0
	ld	a,$e0                       ; 042364 || 	ld	a,$e0                       ; 04232C || 042364 3E E0       5989          		LD      A,-32           ;LOOP COUNTER
	call	$042dd3                   ; 042366 || 	call	$042d9b                   ; 04232E || 042366 CD D3 2D 04 5990          		CALL    MULA            ;MULTIPLY
	call	c,$042de9                 ; 04236A || 	call	c,$042db1                 ; 042332 || 04236A DC E9 2D 04 5991          		CALL    C,MULB          ;NORMALISE & INC A
	exx                            ; 04236E || 	exx                            ; 042336 || 04236E D9          5992          		EXX
	push	hl                        ; 04236F || 	push	hl                        ; 042337 || 04236F E5          5993          		PUSH    HL
	ld	hl,$008000                  ; 042370 || 	ld	hl,$008000                  ; 042338 || 042370 21 00 80 00 5994          		LD      HL,8000H
	or	a                           ; 042374 || 	or	a                           ; 04233C || 042374 B7          5995          		OR      A               ;CLEAR CARRY
	sbc.sil	hl,de                  ; 042375 || 	sbc.sil	hl,de                  ; 04233D || 042375 52 ED 52    5996          		SBC.S   HL,DE
	pop	hl                         ; 042378 || 	pop	hl                         ; 042340 || 042378 E1          5997          		POP     HL
	call	z,$042c09                 ; 042379 || 	call	z,$042bd1                 ; 042341 || 042379 CC 09 2C 04 5998          		CALL    Z,ODD           ;ROUND UNBIASSED
	call	c,$042bf7                 ; 04237D || 	call	c,$042bbf                 ; 042345 || 04237D DC F7 2B 04 5999          		CALL    C,ADD1_FP          ;ROUND UP
	pop	bc                         ; 042381 || 	pop	bc                         ; 042349 || 042381 C1          6000          		POP     BC              ;RESTORE EXPONENTS
	call	c,$042c24                 ; 042382 || 	call	c,$042bec                 ; 04234A || 042382 DC 24 2C 04 6001          		CALL    C,INCC
	rra                            ; 042386 || 	rra                            ; 04234E || 042386 1F          6002          		RRA                     ;LSB OF A TO CARRY
	ld	a,c                         ; 042387 || 	ld	a,c                         ; 04234F || 042387 79          6003          		LD      A,C             ;COMPUTE NEW EXPONENT
	adc	a,b                        ; 042388 || 	adc	a,b                        ; 042350 || 042388 88          6004          		ADC     A,B
	jr	c,$+$08                     ; 042389 || 	jr	c,$+$08                     ; 042351 || 042389 38 06       6005  CHKOVF:			JR      C,CHKO1
	jp	p,$042c5b                   ; 04238B || 	jp	p,$042c23                   ; 042353 || 04238B F2 5B 2C 04 6006          		JP      P,ZERO_FP          ;UNDERFLOW
	jr	$+$06                       ; 04238F || 	jr	$+$06                       ; 042357 || 04238F 18 04       6007          		JR      CHKO2
	jp	m,$042c26                   ; 042391 || 	jp	m,$042bee                   ; 042359 || 042391 FA 26 2C 04 6008  CHKO1:			JP      M,OFLOW         ;OVERFLOW
	add	a,$80                      ; 042395 || 	add	a,$80                      ; 04235D || 042395 C6 80       6009  CHKO2:			ADD     A,80H
	ld	c,a                         ; 042397 || 	ld	c,a                         ; 04235F || 042397 4F          6010          		LD      C,A
	jp	z,$042c5b                   ; 042398 || 	jp	z,$042c23                   ; 042360 || 042398 CA 5B 2C 04 6011          		JP      Z,ZERO_FP
	ex	af,af'                      ; 04239C || 	ex	af,af'                      ; 042364 || 04239C 08          6012          		EX      AF,AF'          ;RESTORE SIGN BIT
	res	7,h                        ; 04239D || 	res	7,h                        ; 042365 || 04239D CB BC       6013          		RES     7,H
	ret	p                          ; 04239F || 	ret	p                          ; 042367 || 04239F F0          6014          		RET     P
	set	7,h                        ; 0423A0 || 	set	7,h                        ; 042368 || 0423A0 CB FC       6015          		SET     7,H
	ret                            ; 0423A2 || 	ret                            ; 04236A || 0423A2 C9          6016          		RET
	call	$042c0f                   ; 0423A3 || 	call	$042bd7                   ; 04236B || 0423A3 CD 0F 2C 04 6020  IPOW:			CALL    SWAP_FP
	bit	7,h                        ; 0423A7 || 	bit	7,h                        ; 04236F || 0423A7 CB 7C       6021          		BIT     7,H
	push	af                        ; 0423A9 || 	push	af                        ; 042371 || 0423A9 F5          6022          		PUSH    AF              ;SAVE SIGN
	call	nz,$042b12                ; 0423AA || 	call	nz,$042ada                ; 042372 || 0423AA C4 12 2B 04 6023          		CALL    NZ,NEGATE
	ld	c,b                         ; 0423AE || 	ld	c,b                         ; 042376 || 0423AE 48          6024  IPOW0:			LD      C,B
	ld	b,$20                       ; 0423AF || 	ld	b,$20                       ; 042377 || 0423AF 06 20       6025          		LD      B,32            ;LOOP COUNTER
	call	$042cc7                   ; 0423B1 || 	call	$042c8f                   ; 042379 || 0423B1 CD C7 2C 04 6026  IPOW1:			CALL    X2
	jr	c,$+$0a                     ; 0423B5 || 	jr	c,$+$0a                     ; 04237D || 0423B5 38 08       6027          		JR      C,IPOW2
	djnz	$-$06                     ; 0423B7 || 	djnz	$-$06                     ; 04237F || 0423B7 10 F8       6028          		DJNZ    IPOW1
	pop	af                         ; 0423B9 || 	pop	af                         ; 042381 || 0423B9 F1          6029          		POP     AF
	exx                            ; 0423BA || 	exx                            ; 042382 || 0423BA D9          6030          		EXX
	inc	l                          ; 0423BB || 	inc	l                          ; 042383 || 0423BB 2C          6031          		INC     L               ;RESULT=1
	exx                            ; 0423BC || 	exx                            ; 042384 || 0423BC D9          6032          		EXX
	ld	c,h                         ; 0423BD || 	ld	c,h                         ; 042385 || 0423BD 4C          6033          		LD      C,H
	ret                            ; 0423BE || 	ret                            ; 042386 || 0423BE C9          6034          		RET
	pop	af                         ; 0423BF || 	pop	af                         ; 042387 || 0423BF F1          6036  IPOW2:			POP     AF
	push	bc                        ; 0423C0 || 	push	bc                        ; 042388 || 0423C0 C5          6037          		PUSH    BC
	ex	de,hl                       ; 0423C1 || 	ex	de,hl                       ; 042389 || 0423C1 EB          6038          		EX      DE,HL
	push	hl                        ; 0423C2 || 	push	hl                        ; 04238A || 0423C2 E5          6039          		PUSH    HL
	exx                            ; 0423C3 || 	exx                            ; 04238B || 0423C3 D9          6040          		EXX
	ex	de,hl                       ; 0423C4 || 	ex	de,hl                       ; 04238C || 0423C4 EB          6041          		EX      DE,HL
	push	hl                        ; 0423C5 || 	push	hl                        ; 04238D || 0423C5 E5          6042          		PUSH    HL
	exx                            ; 0423C6 || 	exx                            ; 04238E || 0423C6 D9          6043          		EXX
	ld	ix,$000000                  ; 0423C7 || 	ld	ix,$000000                  ; 04238F || 0423C7 DD 21 00 00 6044          		LD      IX,0
	add	ix,sp                      ; 0423CC || 	add	ix,sp                      ; 042394 || 0423CC DD 39       6045          		ADD     IX,SP
	jr	z,$+$4a                     ; 0423CE || 	jr	z,$+$4a                     ; 042396 || 0423CE 28 48       6046          		JR      Z,IPOW4
	push	bc                        ; 0423D0 || 	push	bc                        ; 042398 || 0423D0 C5          6047          		PUSH    BC
	exx                            ; 0423D1 || 	exx                            ; 042399 || 0423D1 D9          6048          		EXX
	push	de                        ; 0423D2 || 	push	de                        ; 04239A || 0423D2 D5          6049          		PUSH    DE
	exx                            ; 0423D3 || 	exx                            ; 04239B || 0423D3 D9          6050          		EXX
	push	de                        ; 0423D4 || 	push	de                        ; 04239C || 0423D4 D5          6051          		PUSH    DE
	call	$042bde                   ; 0423D5 || 	call	$042ba6                   ; 04239D || 0423D5 CD DE 2B 04 6052          		CALL    SFLOAT_FP
	call	$042712                   ; 0423D9 || 	call	$0426da                   ; 0423A1 || 0423D9 CD 12 27 04 6053          		CALL    RECIP
	ld	(ix+$04),c                  ; 0423DD || 	ld	(ix+$04),c                  ; 0423A5 || 0423DD DD 71 04    6054          		LD      (IX+4),C
	exx                            ; 0423E0 || 	exx                            ; 0423A8 || 0423E0 D9          6055          		EXX
	ld	(ix),l                      ; 0423E1 || 	ld	(ix),l                      ; 0423A9 || 0423E1 DD 75 00    6056          		LD      (IX+0),L
	ld	(ix+$01),h                  ; 0423E4 || 	ld	(ix+$01),h                  ; 0423AC || 0423E4 DD 74 01    6057          		LD      (IX+1),H
	exx                            ; 0423E7 || 	exx                            ; 0423AF || 0423E7 D9          6058          		EXX
	ld	(ix+$02),l                  ; 0423E8 || 	ld	(ix+$02),l                  ; 0423B0 || 0423E8 DD 75 02    6059          		LD      (IX+2),L
	ld	(ix+$03),h                  ; 0423EB || 	ld	(ix+$03),h                  ; 0423B3 || 0423EB DD 74 03    6060          		LD      (IX+3),H
	jr	$+$23                       ; 0423EE || 	jr	$+$23                       ; 0423B6 || 0423EE 18 21       6061          		JR      IPOW5
	push	bc                        ; 0423F0 || 	push	bc                        ; 0423B8 || 0423F0 C5          6063  IPOW3:			PUSH    BC
	exx                            ; 0423F1 || 	exx                            ; 0423B9 || 0423F1 D9          6064          		EXX
	sla	e                          ; 0423F2 || 	sla	e                          ; 0423BA || 0423F2 CB 23       6065          		SLA     E
	rl	d                           ; 0423F4 || 	rl	d                           ; 0423BC || 0423F4 CB 12       6066          		RL      D
	push	de                        ; 0423F6 || 	push	de                        ; 0423BE || 0423F6 D5          6067          		PUSH    DE
	exx                            ; 0423F7 || 	exx                            ; 0423BF || 0423F7 D9          6068          		EXX
	rl	e                           ; 0423F8 || 	rl	e                           ; 0423C0 || 0423F8 CB 13       6069          		RL      E
	rl	d                           ; 0423FA || 	rl	d                           ; 0423C2 || 0423FA CB 12       6070          		RL      D
	push	de                        ; 0423FC || 	push	de                        ; 0423C4 || 0423FC D5          6071          		PUSH    DE
	ld	a,$0a                       ; 0423FD || 	ld	a,$0a                       ; 0423C5 || 0423FD 3E 0A       6072          		LD      A,'*' & 0FH
	push	af                        ; 0423FF || 	push	af                        ; 0423C7 || 0423FF F5          6073          		PUSH    AF
	call	$042cdb                   ; 042400 || 	call	$042ca3                   ; 0423C8 || 042400 CD DB 2C 04 6074          		CALL    COPY_
	call	$0420bb                   ; 042404 || 	call	$042083                   ; 0423CC || 042404 CD BB 20 04 6075          		CALL    OP              ;SQUARE
	pop	af                         ; 042408 || 	pop	af                         ; 0423D0 || 042408 F1          6076          		POP     AF
	call	$042a07                   ; 042409 || 	call	$0429cf                   ; 0423D1 || 042409 CD 07 2A 04 6077          		CALL    DLOAD5
	call	c,$0420bb                 ; 04240D || 	call	c,$042083                 ; 0423D5 || 04240D DC BB 20 04 6078          		CALL    C,OP            ;MULTIPLY BY X
	pop	de                         ; 042411 || 	pop	de                         ; 0423D9 || 042411 D1          6079  IPOW5:			POP     DE
	exx                            ; 042412 || 	exx                            ; 0423DA || 042412 D9          6080          		EXX
	pop	de                         ; 042413 || 	pop	de                         ; 0423DB || 042413 D1          6081          		POP     DE
	exx                            ; 042414 || 	exx                            ; 0423DC || 042414 D9          6082          		EXX
	ld	a,c                         ; 042415 || 	ld	a,c                         ; 0423DD || 042415 79          6083          		LD      A,C
	pop	bc                         ; 042416 || 	pop	bc                         ; 0423DE || 042416 C1          6084          		POP     BC
	ld	c,a                         ; 042417 || 	ld	c,a                         ; 0423DF || 042417 4F          6085          		LD      C,A
	djnz	$-$28                     ; 042418 || 	djnz	$-$28                     ; 0423E0 || 042418 10 D6       6086  IPOW4:			DJNZ    IPOW3
	pop	af                         ; 04241A || 	pop	af                         ; 0423E2 || 04241A F1          6087          		POP     AF
	pop	af                         ; 04241B || 	pop	af                         ; 0423E3 || 04241B F1          6088          		POP     AF
	pop	af                         ; 04241C || 	pop	af                         ; 0423E4 || 04241C F1          6089          		POP     AF
	ret                            ; 04241D || 	ret                            ; 0423E5 || 04241D C9          6090          		RET
	pop	af                         ; 04241E || 	pop	af                         ; 0423E6 || 04241E F1          6092  FPOW0:			POP     AF
	pop	af                         ; 04241F || 	pop	af                         ; 0423E7 || 04241F F1          6093          		POP     AF
	pop	af                         ; 042420 || 	pop	af                         ; 0423E8 || 042420 F1          6094          		POP     AF
	jr	$-$73                       ; 042421 || 	jr	$-$73                       ; 0423E9 || 042421 18 8B       6095          		JR      IPOW0
	bit	7,d                        ; 042423 || 	bit	7,d                        ; 0423EB || 042423 CB 7A       6099  FPOW:			BIT     7,D
	push	af                        ; 042425 || 	push	af                        ; 0423ED || 042425 F5          6100          		PUSH    AF
	call	$042c0f                   ; 042426 || 	call	$042bd7                   ; 0423EE || 042426 CD 0F 2C 04 6101          		CALL    SWAP_FP
	call	$042ceb                   ; 04242A || 	call	$042cb3                   ; 0423F2 || 04242A CD EB 2C 04 6102          		CALL    PUSH5
	dec	c                          ; 04242E || 	dec	c                          ; 0423F6 || 04242E 0D          6103          		DEC     C
	inc	c                          ; 04242F || 	inc	c                          ; 0423F7 || 04242F 0C          6104          		INC     C
	jr	z,$-$12                     ; 042430 || 	jr	z,$-$12                     ; 0423F8 || 042430 28 EC       6105          		JR      Z,FPOW0
	ld	a,$9e                       ; 042432 || 	ld	a,$9e                       ; 0423FA || 042432 3E 9E       6106          		LD      A,158
	cp	c                           ; 042434 || 	cp	c                           ; 0423FC || 042434 B9          6107          		CP      C
	jr	c,$+$0c                     ; 042435 || 	jr	c,$+$0c                     ; 0423FD || 042435 38 0A       6108          		JR      C,FPOW1
	inc	a                          ; 042437 || 	inc	a                          ; 0423FF || 042437 3C          6109          		INC     A
	call	$042ae3                   ; 042438 || 	call	$042aab                   ; 042400 || 042438 CD E3 2A 04 6110          		CALL    FIX
	ex	af,af'                      ; 04243C || 	ex	af,af'                      ; 042404 || 04243C 08          6111          		EX      AF,AF'
	jp	p,$04241e                   ; 04243D || 	jp	p,$0423e6                   ; 042405 || 04243D F2 1E 24 04 6112          		JP      P,FPOW0
	call	$042c0f                   ; 042441 || 	call	$042bd7                   ; 042409 || 042441 CD 0F 2C 04 6113  FPOW1:			CALL    SWAP_FP
	call	$04272f                   ; 042445 || 	call	$0426f7                   ; 04240D || 042445 CD 2F 27 04 6114          		CALL    LN0
	call	$042cf4                   ; 042449 || 	call	$042cbc                   ; 042411 || 042449 CD F4 2C 04 6115          		CALL    POP5
	pop	af                         ; 04244D || 	pop	af                         ; 042415 || 04244D F1          6116          		POP     AF
	call	$042346                   ; 04244E || 	call	$04230e                   ; 042416 || 04244E CD 46 23 04 6117          		CALL    FMUL
	jp	$042691                     ; 042452 || 	jp	$042659                     ; 04241A || 042452 C3 91 26 04 6118          		JP      EXP0
	call	$042c65                   ; 042456 || 	call	$042c2d                   ; 04241E || 042456 CD 65 2C 04 6123  FLT:			CALL    FCP
	jr	$+$06                       ; 04245A || 	jr	$+$06                       ; 042422 || 04245A 18 04       6124          		JR      ILT1
	call	$042c57                   ; 04245C || 	call	$042c1f                   ; 042424 || 04245C CD 57 2C 04 6125  ILT:			CALL    ICP
	ret	nc                         ; 042460 || 	ret	nc                         ; 042428 || 042460 D0          6126  ILT1:			RET     NC
	jr	$+$44                       ; 042461 || 	jr	$+$44                       ; 042429 || 042461 18 42       6127          		JR      TRUE_FP
	call	$042c65                   ; 042463 || 	call	$042c2d                   ; 04242B || 042463 CD 65 2C 04 6129  FGT:			CALL    FCP
	jr	$+$06                       ; 042467 || 	jr	$+$06                       ; 04242F || 042467 18 04       6130          		JR      IGT1
	call	$042c57                   ; 042469 || 	call	$042c1f                   ; 042431 || 042469 CD 57 2C 04 6131  IGT:			CALL    ICP
	ret	z                          ; 04246D || 	ret	z                          ; 042435 || 04246D C8          6132  IGT1:			RET     Z
	ret	c                          ; 04246E || 	ret	c                          ; 042436 || 04246E D8          6133          		RET     C
	jr	$+$36                       ; 04246F || 	jr	$+$36                       ; 042437 || 04246F 18 34       6134          		JR      TRUE_FP
	call	$042c65                   ; 042471 || 	call	$042c2d                   ; 042439 || 042471 CD 65 2C 04 6136  FGE:			CALL    FCP
	jr	$+$06                       ; 042475 || 	jr	$+$06                       ; 04243D || 042475 18 04       6137          		JR      IGE1
	call	$042c57                   ; 042477 || 	call	$042c1f                   ; 04243F || 042477 CD 57 2C 04 6138  IGE:			CALL    ICP
	ret	c                          ; 04247B || 	ret	c                          ; 042443 || 04247B D8          6139  IGE1:			RET     C
	jr	$+$29                       ; 04247C || 	jr	$+$29                       ; 042444 || 04247C 18 27       6140          		JR      TRUE_FP
	call	$042c65                   ; 04247E || 	call	$042c2d                   ; 042446 || 04247E CD 65 2C 04 6142  FLE:			CALL    FCP
	jr	$+$06                       ; 042482 || 	jr	$+$06                       ; 04244A || 042482 18 04       6143          		JR      ILE1
	call	$042c57                   ; 042484 || 	call	$042c1f                   ; 04244C || 042484 CD 57 2C 04 6144  ILE:			CALL    ICP
	jr	z,$+$1d                     ; 042488 || 	jr	z,$+$1d                     ; 042450 || 042488 28 1B       6145  ILE1:			JR      Z,TRUE_FP
	ret	nc                         ; 04248A || 	ret	nc                         ; 042452 || 04248A D0          6146          		RET     NC
	jr	$+$1a                       ; 04248B || 	jr	$+$1a                       ; 042453 || 04248B 18 18       6147          		JR      TRUE_FP
	call	$042c65                   ; 04248D || 	call	$042c2d                   ; 042455 || 04248D CD 65 2C 04 6149  FNE:			CALL    FCP
	jr	$+$06                       ; 042491 || 	jr	$+$06                       ; 042459 || 042491 18 04       6150          		JR      INE1
	call	$042c57                   ; 042493 || 	call	$042c1f                   ; 04245B || 042493 CD 57 2C 04 6151  INE:			CALL    ICP
	ret	z                          ; 042497 || 	ret	z                          ; 04245F || 042497 C8          6152  INE1:			RET     Z
	jr	$+$0d                       ; 042498 || 	jr	$+$0d                       ; 042460 || 042498 18 0B       6153          		JR      TRUE_FP
	call	$042c65                   ; 04249A || 	call	$042c2d                   ; 042462 || 04249A CD 65 2C 04 6155  FEQ:			CALL    FCP
	jr	$+$06                       ; 04249E || 	jr	$+$06                       ; 042466 || 04249E 18 04       6156          		JR      IEQ1
	call	$042c57                   ; 0424A0 || 	call	$042c1f                   ; 042468 || 0424A0 CD 57 2C 04 6157  IEQ:			CALL    ICP
	ret	nz                         ; 0424A4 || 	ret	nz                         ; 04246C || 0424A4 C0          6158  IEQ1:			RET     NZ
	ld	hl,$ffffff                  ; 0424A5 || 	ld	hl,$ffffff                  ; 04246D || 0424A5 21 FF FF FF 6159  TRUE_FP:			LD      HL,-1
	exx                            ; 0424A9 || 	exx                            ; 042471 || 0424A9 D9          6160          		EXX
	ld	hl,$ffffff                  ; 0424AA || 	ld	hl,$ffffff                  ; 042472 || 0424AA 21 FF FF FF 6161          		LD      HL,-1
	exx                            ; 0424AE || 	exx                            ; 042476 || 0424AE D9          6162          		EXX
	xor	a                          ; 0424AF || 	xor	a                          ; 042477 || 0424AF AF          6163          		XOR     A
	ld	c,a                         ; 0424B0 || 	ld	c,a                         ; 042478 || 0424B0 4F          6164          		LD      C,A
	ret                            ; 0424B1 || 	ret                            ; 042479 || 0424B1 C9          6165          		RET
	bit	7,h                        ; 0424B2 || 	bit	7,h                        ; 04247A || 0424B2 CB 7C       6176  ABSV_FP:			BIT     7,H
	ret	z                          ; 0424B4 || 	ret	z                          ; 04247C || 0424B4 C8          6177          		RET     Z               ;POSITIVE/ZERO
	dec	c                          ; 0424B5 || 	dec	c                          ; 04247D || 0424B5 0D          6178          		DEC     C
	inc	c                          ; 0424B6 || 	inc	c                          ; 04247E || 0424B6 0C          6179          		INC     C
	jp	z,$042b12                   ; 0424B7 || 	jp	z,$042ada                   ; 04247F || 0424B7 CA 12 2B 04 6180          		JP      Z,NEGATE        ;INTEGER
	res	7,h                        ; 0424BB || 	res	7,h                        ; 042483 || 0424BB CB BC       6181          		RES     7,H
	ret                            ; 0424BD || 	ret                            ; 042485 || 0424BD C9          6182          		RET
	call	$042b02                   ; 0424BE || 	call	$042aca                   ; 042486 || 0424BE CD 02 2B 04 6187  NOTK_FP:			CALL    SFIX_FP
	ld	a,h                         ; 0424C2 || 	ld	a,h                         ; 04248A || 0424C2 7C          6188          		LD      A,H
	cpl                            ; 0424C3 || 	cpl                            ; 04248B || 0424C3 2F          6189          		CPL
	ld	h,a                         ; 0424C4 || 	ld	h,a                         ; 04248C || 0424C4 67          6190          		LD      H,A
	ld	a,l                         ; 0424C5 || 	ld	a,l                         ; 04248D || 0424C5 7D          6191          		LD      A,L
	cpl                            ; 0424C6 || 	cpl                            ; 04248E || 0424C6 2F          6192          		CPL
	ld	l,a                         ; 0424C7 || 	ld	l,a                         ; 04248F || 0424C7 6F          6193          		LD      L,A
	exx                            ; 0424C8 || 	exx                            ; 042490 || 0424C8 D9          6194          		EXX
	ld	a,h                         ; 0424C9 || 	ld	a,h                         ; 042491 || 0424C9 7C          6195          		LD      A,H
	cpl                            ; 0424CA || 	cpl                            ; 042492 || 0424CA 2F          6196          		CPL
	ld	h,a                         ; 0424CB || 	ld	h,a                         ; 042493 || 0424CB 67          6197          		LD      H,A
	ld	a,l                         ; 0424CC || 	ld	a,l                         ; 042494 || 0424CC 7D          6198          		LD      A,L
	cpl                            ; 0424CD || 	cpl                            ; 042495 || 0424CD 2F          6199          		CPL
	ld	l,a                         ; 0424CE || 	ld	l,a                         ; 042496 || 0424CE 6F          6200          		LD      L,A
	exx                            ; 0424CF || 	exx                            ; 042497 || 0424CF D9          6201          		EXX
	xor	a                          ; 0424D0 || 	xor	a                          ; 042498 || 0424D0 AF          6202          		XOR     A               ;NUMERIC MARKER
	ret                            ; 0424D1 || 	ret                            ; 042499 || 0424D1 C9          6203          		RET
	ld	hl,$00490f                  ; 0424D2 || 	ld	hl,$00490f                  ; 04249A || 0424D2 21 0F 49 00 6208  PI_FP:			LD      HL,490FH
	exx                            ; 0424D6 || 	exx                            ; 04249E || 0424D6 D9          6209          		EXX
	ld	hl,$00daa2                  ; 0424D7 || 	ld	hl,$00daa2                  ; 04249F || 0424D7 21 A2 DA 00 6210          		LD      HL,0DAA2H
	exx                            ; 0424DB || 	exx                            ; 0424A3 || 0424DB D9          6211          		EXX
	ld	c,$81                       ; 0424DC || 	ld	c,$81                       ; 0424A4 || 0424DC 0E 81       6212          		LD      C,81H
	xor	a                          ; 0424DE || 	xor	a                          ; 0424A6 || 0424DE AF          6213          		XOR     A               ;NUMERIC MARKER
	ret                            ; 0424DF || 	ret                            ; 0424A7 || 0424DF C9          6214          		RET
	call	$0424f4                   ; 0424E0 || 	call	$0424bc                   ; 0424A8 || 0424E0 CD F4 24 04 6219  DEG_FP:			CALL    FPI180
	call	$042346                   ; 0424E4 || 	call	$04230e                   ; 0424AC || 0424E4 CD 46 23 04 6220          		CALL    FMUL
	xor	a                          ; 0424E8 || 	xor	a                          ; 0424B0 || 0424E8 AF          6221          		XOR     A
	ret                            ; 0424E9 || 	ret                            ; 0424B1 || 0424E9 C9          6222          		RET
	call	$0424f4                   ; 0424EA || 	call	$0424bc                   ; 0424B2 || 0424EA CD F4 24 04 6227  RAD_FP:			CALL    FPI180
	call	$04229d                   ; 0424EE || 	call	$042265                   ; 0424B6 || 0424EE CD 9D 22 04 6228          		CALL    FDIV
	xor	a                          ; 0424F2 || 	xor	a                          ; 0424BA || 0424F2 AF          6229          		XOR     A
	ret                            ; 0424F3 || 	ret                            ; 0424BB || 0424F3 C9          6230          		RET
	call	$042bde                   ; 0424F4 || 	call	$042ba6                   ; 0424BC || 0424F4 CD DE 2B 04 6234  FPI180:			CALL    SFLOAT_FP
	ld	de,$00652e                  ; 0424F8 || 	ld	de,$00652e                  ; 0424C0 || 0424F8 11 2E 65 00 6235          		LD      DE,652EH
	exx                            ; 0424FC || 	exx                            ; 0424C4 || 0424FC D9          6236          		EXX
	ld	de,$00e0d3                  ; 0424FD || 	ld	de,$00e0d3                  ; 0424C5 || 0424FD 11 D3 E0 00 6237          		LD      DE,0E0D3H
	exx                            ; 042501 || 	exx                            ; 0424C9 || 042501 D9          6238          		EXX
	ld	b,$85                       ; 042502 || 	ld	b,$85                       ; 0424CA || 042502 06 85       6239          		LD      B,85H
	ret                            ; 042504 || 	ret                            ; 0424CC || 042504 C9          6240          		RET
	call	$042c37                   ; 042505 || 	call	$042bff                   ; 0424CD || 042505 CD 37 2C 04 6245  SGN_FP:			CALL    TEST_FP
	or	c                           ; 042509 || 	or	c                           ; 0424D1 || 042509 B1          6246          		OR      C
	ret	z                          ; 04250A || 	ret	z                          ; 0424D2 || 04250A C8          6247          		RET     Z               ;ZERO
	bit	7,h                        ; 04250B || 	bit	7,h                        ; 0424D3 || 04250B CB 7C       6248          		BIT     7,H
	jp	nz,$0424a5                  ; 04250D || 	jp	nz,$04246d                  ; 0424D5 || 04250D C2 A5 24 04 6249          		JP      NZ,TRUE_FP         ;-1
	call	$042c5b                   ; 042511 || 	call	$042c23                   ; 0424D9 || 042511 CD 5B 2C 04 6250          		CALL    ZERO_FP
	jp	$042bf7                     ; 042515 || 	jp	$042bbf                     ; 0424DD || 042515 C3 F7 2B 04 6251          		JP      ADD1_FP            ;1
	call	$042e75                   ; 042519 || 	call	$042e3d                   ; 0424E1 || 042519 CD 75 2E 04 6257  VAL_FP:			CALL    SIGNQ
	push	af                        ; 04251D || 	push	af                        ; 0424E5 || 04251D F5          6258          		PUSH    AF
	call	$042a25                   ; 04251E || 	call	$0429ed                   ; 0424E6 || 04251E CD 25 2A 04 6259          		CALL    CON_FP
	pop	af                         ; 042522 || 	pop	af                         ; 0424EA || 042522 F1          6260          		POP     AF
	cp	$2d                         ; 042523 || 	cp	$2d                         ; 0424EB || 042523 FE 2D       6261          		CP      '-'
	ld	a,$00                       ; 042525 || 	ld	a,$00                       ; 0424ED || 042525 3E 00       6262          		LD      A,0             ;NUMERIC MARKER
	ret	nz                         ; 042527 || 	ret	nz                         ; 0424EF || 042527 C0          6263          		RET     NZ
	dec	c                          ; 042528 || 	dec	c                          ; 0424F0 || 042528 0D          6264          		DEC     C
	inc	c                          ; 042529 || 	inc	c                          ; 0424F1 || 042529 0C          6265          		INC     C
	jp	z,$042b12                   ; 04252A || 	jp	z,$042ada                   ; 0424F2 || 04252A CA 12 2B 04 6266          		JP      Z,NEGATE        ;ZERO/INTEGER
	ld	a,h                         ; 04252E || 	ld	a,h                         ; 0424F6 || 04252E 7C          6267          		LD      A,H
	xor	$80                        ; 04252F || 	xor	$80                        ; 0424F7 || 04252F EE 80       6268          		XOR     80H             ;CHANGE SIGN (FP)
	ld	h,a                         ; 042531 || 	ld	h,a                         ; 0424F9 || 042531 67          6269          		LD      H,A
	xor	a                          ; 042532 || 	xor	a                          ; 0424FA || 042532 AF          6270          		XOR     A
	ret                            ; 042533 || 	ret                            ; 0424FB || 042533 C9          6271          		RET
	dec	c                          ; 042534 || 	dec	c                          ; 0424FC || 042534 0D          6276  INT_FP_:			DEC     C
	inc	c                          ; 042535 || 	inc	c                          ; 0424FD || 042535 0C          6277          		INC     C
	ret	z                          ; 042536 || 	ret	z                          ; 0424FE || 042536 C8          6278          		RET     Z               ;ZERO/INTEGER
	ld	a,$9f                       ; 042537 || 	ld	a,$9f                       ; 0424FF || 042537 3E 9F       6279          		LD      A,159
	ld	b,h                         ; 042539 || 	ld	b,h                         ; 042501 || 042539 44          6280          		LD      B,H             ;B7=SIGN BIT
	call	$042ae3                   ; 04253A || 	call	$042aab                   ; 042502 || 04253A CD E3 2A 04 6281          		CALL    FIX
	ex	af,af'                      ; 04253E || 	ex	af,af'                      ; 042506 || 04253E 08          6282          		EX      AF,AF'
	and	b                          ; 04253F || 	and	b                          ; 042507 || 04253F A0          6283          		AND     B
	call	m,$042bf7                 ; 042540 || 	call	m,$042bbf                 ; 042508 || 042540 FC F7 2B 04 6284          		CALL    M,ADD1_FP          ;NEGATIVE NON-INTEGER
	ld	a,b                         ; 042544 || 	ld	a,b                         ; 04250C || 042544 78          6285          		LD      A,B
	or	a                           ; 042545 || 	or	a                           ; 04250D || 042545 B7          6286          		OR      A
	call	m,$042b12                 ; 042546 || 	call	m,$042ada                 ; 04250E || 042546 FC 12 2B 04 6287          		CALL    M,NEGATE
	xor	a                          ; 04254A || 	xor	a                          ; 042512 || 04254A AF          6288          		XOR     A
	ld	c,a                         ; 04254B || 	ld	c,a                         ; 042513 || 04254B 4F          6289          		LD      C,A
	ret                            ; 04254C || 	ret                            ; 042514 || 04254C C9          6290          		RET
	call	$042bde                   ; 04254D || 	call	$042ba6                   ; 042515 || 04254D CD DE 2B 04 6295  SQR_FP:			CALL    SFLOAT_FP
	bit	7,h                        ; 042551 || 	bit	7,h                        ; 042519 || 042551 CB 7C       6296  SQR0:			BIT     7,H
	ld	a,$15                       ; 042553 || 	ld	a,$15                       ; 04251B || 042553 3E 15       6297          		LD      A,NGROOT
	jp	nz,$0420b5                  ; 042555 || 	jp	nz,$04207d                  ; 04251D || 042555 C2 B5 20 04 6298          		JP      NZ,ERROR_FP_        ;"-ve root"
	dec	c                          ; 042559 || 	dec	c                          ; 042521 || 042559 0D          6299          		DEC     C
	inc	c                          ; 04255A || 	inc	c                          ; 042522 || 04255A 0C          6300          		INC     C
	ret	z                          ; 04255B || 	ret	z                          ; 042523 || 04255B C8          6301          		RET     Z               ;ZERO
	set	7,h                        ; 04255C || 	set	7,h                        ; 042524 || 04255C CB FC       6302          		SET     7,H             ;IMPLIED 1
	bit	0,c                        ; 04255E || 	bit	0,c                        ; 042526 || 04255E CB 41       6303          		BIT     0,C
	call	z,$042c17                 ; 042560 || 	call	z,$042bdf                 ; 042528 || 042560 CC 17 2C 04 6304          		CALL    Z,DIV2          ;MAKE EXPONENT ODD
	ld	a,c                         ; 042564 || 	ld	a,c                         ; 04252C || 042564 79          6305          		LD      A,C
	sub	$80                        ; 042565 || 	sub	$80                        ; 04252D || 042565 D6 80       6306          		SUB     80H
	sra	a                          ; 042567 || 	sra	a                          ; 04252F || 042567 CB 2F       6307          		SRA     A               ;HALVE EXPONENT
	add	a,$80                      ; 042569 || 	add	a,$80                      ; 042531 || 042569 C6 80       6308          		ADD     A,80H
	ld	c,a                         ; 04256B || 	ld	c,a                         ; 042533 || 04256B 4F          6309          		LD      C,A
	push	bc                        ; 04256C || 	push	bc                        ; 042534 || 04256C C5          6310          		PUSH    BC              ;SAVE EXPONENT
	ex	de,hl                       ; 04256D || 	ex	de,hl                       ; 042535 || 04256D EB          6311          		EX      DE,HL
	ld	hl,$000000                  ; 04256E || 	ld	hl,$000000                  ; 042536 || 04256E 21 00 00 00 6312          		LD      HL,0
	ld	b,h                         ; 042572 || 	ld	b,h                         ; 04253A || 042572 44          6313          		LD      B,H
	ld	c,l                         ; 042573 || 	ld	c,l                         ; 04253B || 042573 4D          6314          		LD      C,L
	exx                            ; 042574 || 	exx                            ; 04253C || 042574 D9          6315          		EXX
	ex	de,hl                       ; 042575 || 	ex	de,hl                       ; 04253D || 042575 EB          6316          		EX      DE,HL
	ld	hl,$000000                  ; 042576 || 	ld	hl,$000000                  ; 04253E || 042576 21 00 00 00 6317          		LD      HL,0
	ld	b,h                         ; 04257A || 	ld	b,h                         ; 042542 || 04257A 44          6318          		LD      B,H
	ld	c,l                         ; 04257B || 	ld	c,l                         ; 042543 || 04257B 4D          6319          		LD      C,L
	ld	a,$e1                       ; 04257C || 	ld	a,$e1                       ; 042544 || 04257C 3E E1       6320          		LD      A,-31
	call	$042e0d                   ; 04257E || 	call	$042dd5                   ; 042546 || 04257E CD 0D 2E 04 6321          		CALL    SQRA            ;ROOT
	exx                            ; 042582 || 	exx                            ; 04254A || 042582 D9          6322          		EXX
	bit	7,b                        ; 042583 || 	bit	7,b                        ; 04254B || 042583 CB 78       6323          		BIT     7,B
	exx                            ; 042585 || 	exx                            ; 04254D || 042585 D9          6324          		EXX
	call	z,$042e0d                 ; 042586 || 	call	z,$042dd5                 ; 04254E || 042586 CC 0D 2E 04 6325          		CALL    Z,SQRA          ;NORMALISE & INC A
	call	$042e4e                   ; 04258A || 	call	$042e16                   ; 042552 || 04258A CD 4E 2E 04 6326          		CALL    SQRB
	or	a                           ; 04258E || 	or	a                           ; 042556 || 04258E B7          6327          		OR      A               ;CLEAR CARRY
	call	$042dbb                   ; 04258F || 	call	$042d83                   ; 042557 || 04258F CD BB 2D 04 6328          		CALL    DIVB
	rr	e                           ; 042593 || 	rr	e                           ; 04255B || 042593 CB 1B       6329          		RR      E               ;LSB TO CARRY
	ld	h,b                         ; 042595 || 	ld	h,b                         ; 04255D || 042595 60          6330          		LD      H,B
	ld	l,c                         ; 042596 || 	ld	l,c                         ; 04255E || 042596 69          6331          		LD      L,C
	exx                            ; 042597 || 	exx                            ; 04255F || 042597 D9          6332          		EXX
	ld	h,b                         ; 042598 || 	ld	h,b                         ; 042560 || 042598 60          6333          		LD      H,B
	ld	l,c                         ; 042599 || 	ld	l,c                         ; 042561 || 042599 69          6334          		LD      L,C
	call	c,$042bf7                 ; 04259A || 	call	c,$042bbf                 ; 042562 || 04259A DC F7 2B 04 6335          		CALL    C,ADD1_FP          ;ROUND UP
	pop	bc                         ; 04259E || 	pop	bc                         ; 042566 || 04259E C1          6336          		POP     BC              ;RESTORE EXPONENT
	call	c,$042c24                 ; 04259F || 	call	c,$042bec                 ; 042567 || 04259F DC 24 2C 04 6337          		CALL    C,INCC
	rra                            ; 0425A3 || 	rra                            ; 04256B || 0425A3 1F          6338          		RRA
	sbc	a,a                        ; 0425A4 || 	sbc	a,a                        ; 04256C || 0425A4 9F          6339          		SBC     A,A
	add	a,c                        ; 0425A5 || 	add	a,c                        ; 04256D || 0425A5 81          6340          		ADD     A,C
	ld	c,a                         ; 0425A6 || 	ld	c,a                         ; 04256E || 0425A6 4F          6341          		LD      C,A
	res	7,h                        ; 0425A7 || 	res	7,h                        ; 04256F || 0425A7 CB BC       6342          		RES     7,H             ;POSITIVE
	xor	a                          ; 0425A9 || 	xor	a                          ; 042571 || 0425A9 AF          6343          		XOR     A
	ret                            ; 0425AA || 	ret                            ; 042572 || 0425AA C9          6344          		RET
	call	$042bde                   ; 0425AB || 	call	$042ba6                   ; 042573 || 0425AB CD DE 2B 04 6349  TAN_FP:			CALL    SFLOAT_FP
	call	$042ceb                   ; 0425AF || 	call	$042cb3                   ; 042577 || 0425AF CD EB 2C 04 6350          		CALL    PUSH5
	call	$0425d5                   ; 0425B3 || 	call	$04259d                   ; 04257B || 0425B3 CD D5 25 04 6351          		CALL    COS0
	call	$042cf4                   ; 0425B7 || 	call	$042cbc                   ; 04257F || 0425B7 CD F4 2C 04 6352          		CALL    POP5
	call	$042ceb                   ; 0425BB || 	call	$042cb3                   ; 042583 || 0425BB CD EB 2C 04 6353          		CALL    PUSH5
	call	$042c0f                   ; 0425BF || 	call	$042bd7                   ; 042587 || 0425BF CD 0F 2C 04 6354          		CALL    SWAP_FP
	call	$0425e2                   ; 0425C3 || 	call	$0425aa                   ; 04258B || 0425C3 CD E2 25 04 6355          		CALL    SIN0
	call	$042cf4                   ; 0425C7 || 	call	$042cbc                   ; 04258F || 0425C7 CD F4 2C 04 6356          		CALL    POP5
	call	$04229d                   ; 0425CB || 	call	$042265                   ; 042593 || 0425CB CD 9D 22 04 6357          		CALL    FDIV
	xor	a                          ; 0425CF || 	xor	a                          ; 042597 || 0425CF AF          6358          		XOR     A               ;NUMERIC MARKER
	ret                            ; 0425D0 || 	ret                            ; 042598 || 0425D0 C9          6359          		RET
	call	$042bde                   ; 0425D1 || 	call	$042ba6                   ; 042599 || 0425D1 CD DE 2B 04 6364  COS_FP:			CALL    SFLOAT_FP
	call	$042b3a                   ; 0425D5 || 	call	$042b02                   ; 04259D || 0425D5 CD 3A 2B 04 6365  COS0:			CALL    SCALE
	inc	e                          ; 0425D9 || 	inc	e                          ; 0425A1 || 0425D9 1C          6366          		INC     E
	inc	e                          ; 0425DA || 	inc	e                          ; 0425A2 || 0425DA 1C          6367          		INC     E
	ld	a,e                         ; 0425DB || 	ld	a,e                         ; 0425A3 || 0425DB 7B          6368          		LD      A,E
	jr	$+$12                       ; 0425DC || 	jr	$+$12                       ; 0425A4 || 0425DC 18 10       6369          		JR      SIN1
	call	$042bde                   ; 0425DE || 	call	$042ba6                   ; 0425A6 || 0425DE CD DE 2B 04 6374  SIN_FP:			CALL    SFLOAT_FP
	push	hl                        ; 0425E2 || 	push	hl                        ; 0425AA || 0425E2 E5          6375  SIN0:			PUSH    HL              ;H7=SIGN
	call	$042b3a                   ; 0425E3 || 	call	$042b02                   ; 0425AB || 0425E3 CD 3A 2B 04 6376          		CALL    SCALE
	pop	af                         ; 0425E7 || 	pop	af                         ; 0425AF || 0425E7 F1          6377          		POP     AF
	rlca                           ; 0425E8 || 	rlca                           ; 0425B0 || 0425E8 07          6378          		RLCA
	rlca                           ; 0425E9 || 	rlca                           ; 0425B1 || 0425E9 07          6379          		RLCA
	rlca                           ; 0425EA || 	rlca                           ; 0425B2 || 0425EA 07          6380          		RLCA
	and	$04                        ; 0425EB || 	and	$04                        ; 0425B3 || 0425EB E6 04       6381          		AND     4
	xor	e                          ; 0425ED || 	xor	e                          ; 0425B5 || 0425ED AB          6382          		XOR     E
	push	af                        ; 0425EE || 	push	af                        ; 0425B6 || 0425EE F5          6383  SIN1:			PUSH    AF              ;OCTANT
	res	7,h                        ; 0425EF || 	res	7,h                        ; 0425B7 || 0425EF CB BC       6384          		RES     7,H
	rra                            ; 0425F1 || 	rra                            ; 0425B9 || 0425F1 1F          6385          		RRA
	call	$042680                   ; 0425F2 || 	call	$042648                   ; 0425BA || 0425F2 CD 80 26 04 6386          		CALL    PIBY4
	call	c,$042221                 ; 0425F6 || 	call	c,$0421e9                 ; 0425BE || 0425F6 DC 21 22 04 6387          		CALL    C,RSUB          ;X=(PI/4)-X
	pop	af                         ; 0425FA || 	pop	af                         ; 0425C2 || 0425FA F1          6388          		POP     AF
	push	af                        ; 0425FB || 	push	af                        ; 0425C3 || 0425FB F5          6389          		PUSH    AF
	and	$03                        ; 0425FC || 	and	$03                        ; 0425C4 || 0425FC E6 03       6390          		AND     3
	jp	po,$042637                  ; 0425FE || 	jp	po,$0425ff                  ; 0425C6 || 0425FE E2 37 26 04 6391          		JP      PO,SIN2         ;USE COSINE APPROX.
	call	$042ceb                   ; 042602 || 	call	$042cb3                   ; 0425CA || 042602 CD EB 2C 04 6392          		CALL    PUSH5           ;SAVE X
	call	$042ce3                   ; 042606 || 	call	$042cab                   ; 0425CE || 042606 CD E3 2C 04 6393          		CALL    SQUARE          ;PUSH X*X
	call	$042d28                   ; 04260A || 	call	$042cf0                   ; 0425D2 || 04260A CD 28 2D 04 6394          		CALL    POLY
	or	a                           ; 04260E || 	or	a                           ; 0425D6 || 04260E B7 A8       6395          		DW	0A8B7H          ;a(8)
	xor	b                          ; 04260F || 	xor	b                          ; 0425D7
	ld	de,$266d36                  ; 042610 || 	ld	de,$266d36                  ; 0425D8 || 042610 11 36       6396          		DW	3611H
	sbc	a,$05                      ; 042614 || 	sbc	a,$05                      ; 0425DC
	ret	nc                         ; 042616 || 	ret	nc                         ; 0425DE
	ld	(hl),e                      ; 042617 || 	ld	(hl),e                      ; 0425DF || 042617 73          6400          		DB	73H
	ret	nz                         ; 042618 || 	ret	nz                         ; 0425E0 || 042618 C0 80       6401          		DW	80C0H           ;a(4)
	add	a,b                        ; 042619 || 	add	a,b                        ; 0425E1
	adc	a,b                        ; 04261A || 	adc	a,b                        ; 0425E2 || 04261A 88 08       6402          		DW	888H
	ex	af,af'                      ; 04261B || 	ex	af,af'                      ; 0425E3
	ld	a,c                         ; 04261C || 	ld	a,c                         ; 0425E4 || 04261C 79          6403          		DB	79H
	sbc	a,l                        ; 04261D || 	sbc	a,l                        ; 0425E5 || 04261D 9D AA       6404          		DW	0AA9DH          ;a(2)
	xor	d                          ; 04261E || 	xor	d                          ; 0425E6
	xor	d                          ; 04261F || 	xor	d                          ; 0425E7 || 04261F AA AA       6405          		DW	0AAAAH
	xor	d                          ; 042620 || 	xor	d                          ; 0425E8
	ld	a,l                         ; 042621 || 	ld	a,l                         ; 0425E9 || 042621 7D          6406          		DB	7DH
	nop                            ; 042622 || 	nop                            ; 0425EA || 042622 00 00       6407          		DW	0               ;a(0)
	nop                            ; 042623 || 	nop                            ; 0425EB
	nop                            ; 042624 || 	nop                            ; 0425EC || 042624 00 00       6408          		DW	0
	nop                            ; 042625 || 	nop                            ; 0425ED
	add	a,b                        ; 042626 || 	add	a,b                        ; 0425EE || 042626 80          6409          		DB	80H
	call	$042cf4                   ; 042627 || 	call	$042cbc                   ; 0425EF || 042627 CD F4 2C 04 6410          		CALL    POP5
	call	$042cf4                   ; 04262B || 	call	$042cbc                   ; 0425F3 || 04262B CD F4 2C 04 6411          		CALL    POP5
	call	$042346                   ; 04262F || 	call	$04230e                   ; 0425F7 || 04262F CD 46 23 04 6412          		CALL    FMUL
	jp	$04265c                     ; 042633 || 	jp	$042624                     ; 0425FB || 042633 C3 5C 26 04 6413          		JP      SIN3
	call	$042ce3                   ; 042637 || 	call	$042cab                   ; 0425FF || 042637 CD E3 2C 04 6415  SIN2:			CALL    SQUARE          ;PUSH X*X
	call	$042d28                   ; 04263B || 	call	$042cf0                   ; 042603 || 04263B CD 28 2D 04 6416          		CALL    POLY
	ld	(hl),c                      ; 04263F || 	ld	(hl),c                      ; 042607 || 04263F 71 D5       6417          		DW	0D571H          ;b(8)
	push	de                        ; 042640 || 	push	de                        ; 042608
	ld	a,b                         ; 042641 || 	ld	a,b                         ; 042609 || 042641 78 4C       6418          		DW	4C78H
	ld	c,h                         ; 042642 || 	ld	c,h                         ; 04260A
	ld	(hl),b                      ; 042643 || 	ld	(hl),b                      ; 04260B || 042643 70          6419          		DB	70H
	xor	a                          ; 042644 || 	xor	a                          ; 04260C || 042644 AF 94       6420          		DW	94AFH           ;b(6)
	sub	h                          ; 042645 || 	sub	h                          ; 04260D
	inc	bc                         ; 042646 || 	inc	bc                         ; 04260E || 042646 03 B6       6421          		DW	0B603H
	or	(hl)                        ; 042647 || 	or	(hl)                        ; 04260F
	halt                           ; 042648 || 	halt                           ; 042610 || 042648 76          6422          		DB	76H
	ret	z                          ; 042649 || 	ret	z                          ; 042611 || 042649 C8 9C       6423          		DW	9CC8H           ;b(4)
	sbc	a,h                        ; 04264A || 	sbc	a,h                        ; 042612
	xor	d                          ; 04264B || 	xor	d                          ; 042613 || 04264B AA 2A       6424          		DW	2AAAH
	ld	hl,($ffdd7b)                ; 04264C || 	ld	hl,($ffdd7b)                ; 042614
	rst	$38                        ; 042650 || 	rst	$38                        ; 042618 || 042650 FF FF       6427          		DW	0FFFFH
	rst	$38                        ; 042651 || 	rst	$38                        ; 042619
	ld	a,(hl)                      ; 042652 || 	ld	a,(hl)                      ; 04261A || 042652 7E          6428          		DB	7EH
	nop                            ; 042653 || 	nop                            ; 04261B || 042653 00 00       6429          		DW	0               ;b(0)
	nop                            ; 042654 || 	nop                            ; 04261C
	nop                            ; 042655 || 	nop                            ; 04261D || 042655 00 00       6430          		DW	0
	nop                            ; 042656 || 	nop                            ; 04261E
	add	a,b                        ; 042657 || 	add	a,b                        ; 04261F || 042657 80          6431          		DB	80H
	call	$042cf4                   ; 042658 || 	call	$042cbc                   ; 042620 || 042658 CD F4 2C 04 6432          		CALL    POP5
	pop	af                         ; 04265C || 	pop	af                         ; 042624 || 04265C F1          6433  SIN3:			POP     AF
	and	$04                        ; 04265D || 	and	$04                        ; 042625 || 04265D E6 04       6434          		AND     4
	ret	z                          ; 04265F || 	ret	z                          ; 042627 || 04265F C8          6435          		RET     Z
	dec	c                          ; 042660 || 	dec	c                          ; 042628 || 042660 0D          6436          		DEC     C
	inc	c                          ; 042661 || 	inc	c                          ; 042629 || 042661 0C          6437          		INC     C
	ret	z                          ; 042662 || 	ret	z                          ; 04262A || 042662 C8          6438          		RET     Z               ;ZERO
	set	7,h                        ; 042663 || 	set	7,h                        ; 04262B || 042663 CB FC       6439          		SET     7,H             ;MAKE NEGATIVE
	ret                            ; 042665 || 	ret                            ; 04262D || 042665 C9          6440          		RET
	ld	hl,$000000                  ; 042666 || 	ld	hl,$000000                  ; 04262E || 042666 21 00 00 00 6444  FONE_FP:			LD      HL,0
	exx                            ; 04266A || 	exx                            ; 042632 || 04266A D9          6445          		EXX
	ld	hl,$000000                  ; 04266B || 	ld	hl,$000000                  ; 042633 || 04266B 21 00 00 00 6446          		LD      HL,0
	exx                            ; 04266F || 	exx                            ; 042637 || 04266F D9          6447          		EXX
	ld	c,$80                       ; 042670 || 	ld	c,$80                       ; 042638 || 042670 0E 80       6448          		LD      C,80H
	ret                            ; 042672 || 	ret                            ; 04263A || 042672 C9          6449          		RET
	ld	de,$000000                  ; 042673 || 	ld	de,$000000                  ; 04263B || 042673 11 00 00 00 6451  DONE:			LD      DE,0
	exx                            ; 042677 || 	exx                            ; 04263F || 042677 D9          6452          		EXX
	ld	de,$000000                  ; 042678 || 	ld	de,$000000                  ; 042640 || 042678 11 00 00 00 6453          		LD      DE,0
	exx                            ; 04267C || 	exx                            ; 042644 || 04267C D9          6454          		EXX
	ld	b,$80                       ; 04267D || 	ld	b,$80                       ; 042645 || 04267D 06 80       6455          		LD      B,80H
	ret                            ; 04267F || 	ret                            ; 042647 || 04267F C9          6456          		RET
	ld	de,$00490f                  ; 042680 || 	ld	de,$00490f                  ; 042648 || 042680 11 0F 49 00 6458  PIBY4:			LD      DE,490FH
	exx                            ; 042684 || 	exx                            ; 04264C || 042684 D9          6459          		EXX
	ld	de,$00daa2                  ; 042685 || 	ld	de,$00daa2                  ; 04264D || 042685 11 A2 DA 00 6460          		LD      DE,0DAA2H
	exx                            ; 042689 || 	exx                            ; 042651 || 042689 D9          6461          		EXX
	ld	b,$7f                       ; 04268A || 	ld	b,$7f                       ; 042652 || 04268A 06 7F       6462          		LD      B,7FH
	ret                            ; 04268C || 	ret                            ; 042654 || 04268C C9          6463          		RET
	call	$042bde                   ; 04268D || 	call	$042ba6                   ; 042655 || 04268D CD DE 2B 04 6468  EXP_FP:			CALL    SFLOAT_FP
	call	$04271e                   ; 042691 || 	call	$0426e6                   ; 042659 || 042691 CD 1E 27 04 6469  EXP0:			CALL    LN2             ;LN(2)
	exx                            ; 042695 || 	exx                            ; 04265D || 042695 D9          6470          		EXX
	dec	e                          ; 042696 || 	dec	e                          ; 04265E || 042696 1D          6471  	        	DEC     E
	ld	bc,$00d1cf                  ; 042697 || 	ld	bc,$00d1cf                  ; 04265F || 042697 01 CF D1 00 6472  		        LD      BC,0D1CFH       ;0.6931471805599453
	exx                            ; 04269B || 	exx                            ; 042663 || 04269B D9          6473          		EXX
	push	hl                        ; 04269C || 	push	hl                        ; 042664 || 04269C E5          6474          		PUSH    HL              ;H7=SIGN
	call	$042b4d                   ; 04269D || 	call	$042b15                   ; 042665 || 04269D CD 4D 2B 04 6475          		CALL    MOD48           ;"MODULUS"
	pop	af                         ; 0426A1 || 	pop	af                         ; 042669 || 0426A1 F1          6476          		POP     AF
	bit	7,e                        ; 0426A2 || 	bit	7,e                        ; 04266A || 0426A2 CB 7B       6477          		BIT     7,E
	jr	z,$+$0d                     ; 0426A4 || 	jr	z,$+$0d                     ; 04266C || 0426A4 28 0B       6478          		JR      Z,EXP1
	rla                            ; 0426A6 || 	rla                            ; 04266E || 0426A6 17          6479          		RLA
	jp	c,$042c5b                   ; 0426A7 || 	jp	c,$042c23                   ; 04266F || 0426A7 DA 5B 2C 04 6480          		JP      C,ZERO_FP
	ld	a,$18                       ; 0426AB || 	ld	a,$18                       ; 042673 || 0426AB 3E 18       6481          		LD      A,EXPRNG
	jp	$0420b5                     ; 0426AD || 	jp	$04207d                     ; 042675 || 0426AD C3 B5 20 04 6482          		JP      ERROR_FP_           ;"Exp range"
	and	$80                        ; 0426B1 || 	and	$80                        ; 042679 || 0426B1 E6 80       6484  EXP1:			AND     80H
	or	e                           ; 0426B3 || 	or	e                           ; 04267B || 0426B3 B3          6485          		OR      E
	push	af                        ; 0426B4 || 	push	af                        ; 04267C || 0426B4 F5          6486          		PUSH    AF              ;INTEGER PART
	res	7,h                        ; 0426B5 || 	res	7,h                        ; 04267D || 0426B5 CB BC       6487          		RES     7,H
	call	$042ceb                   ; 0426B7 || 	call	$042cb3                   ; 04267F || 0426B7 CD EB 2C 04 6488          		CALL    PUSH5           ;PUSH X*LN(2)
	call	$042d28                   ; 0426BB || 	call	$042cf0                   ; 042683 || 0426BB CD 28 2D 04 6489          		CALL    POLY
	ld	(hl),d                      ; 0426BF || 	ld	(hl),d                      ; 042687 || 0426BF 72 40       6490          		DW	4072H           ;a(7)
	ld.sis	l,$94                   ; 0426C0 || 	ld.sis	l,$94                   ; 042688
	ld	(hl),e                      ; 0426C3 || 	ld	(hl),e                      ; 04268B || 0426C3 73          6492          		DB	73H
	ld	h,l                         ; 0426C4 || 	ld	h,l                         ; 04268C || 0426C4 65 6F       6493          		DW	6F65H           ;a(6)
	ld	l,a                         ; 0426C5 || 	ld	l,a                         ; 04268D
	ld	c,a                         ; 0426C6 || 	ld	c,a                         ; 04268E || 0426C6 4F 2E       6494          		DW	2E4FH
	ld	l,$76                       ; 0426C7 || 	ld	l,$76                       ; 04268F
	scf                            ; 0426C9 || 	scf                            ; 042691 || 0426C9 37 6D       6496          		DW	6D37H           ;a(5)
	ld	l,l                         ; 0426CA || 	ld	l,l                         ; 042692
	ld	(bc),a                      ; 0426CB || 	ld	(bc),a                      ; 042693 || 0426CB 02 88       6497          		DW	8802H
	adc	a,b                        ; 0426CC || 	adc	a,b                        ; 042694
	ld	a,c                         ; 0426CD || 	ld	a,c                         ; 042695 || 0426CD 79          6498          		DB	79H
	ld	(de),a                      ; 0426CE || 	ld	(de),a                      ; 042696 || 0426CE 12 E5       6499          		DW	0E512H          ;a(4)
	push	hl                        ; 0426CF || 	push	hl                        ; 042697
	and	b                          ; 0426D0 || 	and	b                          ; 042698 || 0426D0 A0 2A       6500          		DW	2AA0H
	ld	hl,($4f147b)                ; 0426D1 || 	ld	hl,($4f147b)                ; 042699
	xor	d                          ; 0426D5 || 	xor	d                          ; 04269D || 0426D5 AA AA       6503          		DW	0AAAAH
	xor	d                          ; 0426D6 || 	xor	d                          ; 04269E
	ld	a,l                         ; 0426D7 || 	ld	a,l                         ; 04269F || 0426D7 7D          6504          		DB	7DH
	ld	d,(hl)                      ; 0426D8 || 	ld	d,(hl)                      ; 0426A0 || 0426D8 56 FD       6505          		DW	0FD56H          ;a(2)
	trap                           ; 0426D9 || 	trap                           ; 0426A1
	ld	a,a                         ; 0426DB || 	ld	a,a                         ; 0426A3
	ld	a,(hl)                      ; 0426DC || 	ld	a,(hl)                      ; 0426A4 || 0426DC 7E          6507          		DB	7EH
	cp	$ff                         ; 0426DD || 	cp	$ff                         ; 0426A5 || 0426DD FE FF       6508          		DW	0FFFEH          ;a(1)
	rst	$38                        ; 0426DF || 	rst	$38                        ; 0426A7 || 0426DF FF FF       6509          		DW	0FFFFH
	rst	$38                        ; 0426E0 || 	rst	$38                        ; 0426A8
	ld	a,a                         ; 0426E1 || 	ld	a,a                         ; 0426A9 || 0426E1 7F          6510          		DB	7FH
	nop                            ; 0426E2 || 	nop                            ; 0426AA || 0426E2 00 00       6511          		DW	0               ;a(0)
	nop                            ; 0426E3 || 	nop                            ; 0426AB
	nop                            ; 0426E4 || 	nop                            ; 0426AC || 0426E4 00 00       6512          		DW	0
	nop                            ; 0426E5 || 	nop                            ; 0426AD
	add	a,b                        ; 0426E6 || 	add	a,b                        ; 0426AE || 0426E6 80          6513          		DB	80H
	call	$042cf4                   ; 0426E7 || 	call	$042cbc                   ; 0426AF || 0426E7 CD F4 2C 04 6514          		CALL    POP5
	pop	af                         ; 0426EB || 	pop	af                         ; 0426B3 || 0426EB F1          6515          		POP     AF
	push	af                        ; 0426EC || 	push	af                        ; 0426B4 || 0426EC F5          6516          		PUSH    AF
	call	p,$042712                 ; 0426ED || 	call	p,$0426da                 ; 0426B5 || 0426ED F4 12 27 04 6517          		CALL    P,RECIP         ;X=1/X
	pop	af                         ; 0426F1 || 	pop	af                         ; 0426B9 || 0426F1 F1          6518          		POP     AF
	jp	p,$0426fa                   ; 0426F2 || 	jp	p,$0426c2                   ; 0426BA || 0426F2 F2 FA 26 04 6519          		JP      P,EXP4
	and	$7f                        ; 0426F6 || 	and	$7f                        ; 0426BE || 0426F6 E6 7F       6520          		AND     7FH
	neg                            ; 0426F8 || 	neg                            ; 0426C0 || 0426F8 ED 44       6521          		NEG
	add	a,$80                      ; 0426FA || 	add	a,$80                      ; 0426C2 || 0426FA C6 80       6522  EXP4:			ADD     A,80H
	add	a,c                        ; 0426FC || 	add	a,c                        ; 0426C4 || 0426FC 81          6523          		ADD     A,C
	jr	c,$+$08                     ; 0426FD || 	jr	c,$+$08                     ; 0426C5 || 0426FD 38 06       6524          		JR      C,EXP2
	jp	p,$042c5b                   ; 0426FF || 	jp	p,$042c23                   ; 0426C7 || 0426FF F2 5B 2C 04 6525          		JP      P,ZERO_FP          ;UNDERFLOW
	jr	$+$06                       ; 042703 || 	jr	$+$06                       ; 0426CB || 042703 18 04       6526          		JR      EXP3
	jp	m,$042c26                   ; 042705 || 	jp	m,$042bee                   ; 0426CD || 042705 FA 26 2C 04 6527  EXP2:			JP      M,OFLOW         ;OVERFLOW
	add	a,$80                      ; 042709 || 	add	a,$80                      ; 0426D1 || 042709 C6 80       6528  EXP3:			ADD     A,80H
	jp	z,$042c5b                   ; 04270B || 	jp	z,$042c23                   ; 0426D3 || 04270B CA 5B 2C 04 6529          		JP      Z,ZERO_FP
	ld	c,a                         ; 04270F || 	ld	c,a                         ; 0426D7 || 04270F 4F          6530          		LD      C,A
	xor	a                          ; 042710 || 	xor	a                          ; 0426D8 || 042710 AF          6531          		XOR     A               ;NUMERIC MARKER
	ret                            ; 042711 || 	ret                            ; 0426D9 || 042711 C9          6532          		RET
	call	$042673                   ; 042712 || 	call	$04263b                   ; 0426DA || 042712 CD 73 26 04 6534  RECIP:			CALL    DONE
	call	$042c0f                   ; 042716 || 	call	$042bd7                   ; 0426DE || 042716 CD 0F 2C 04 6535  RDIV:			CALL    SWAP_FP
	jp	$04229d                     ; 04271A || 	jp	$042265                     ; 0426E2 || 04271A C3 9D 22 04 6536          		JP      FDIV            ;RECIPROCAL
	ld	de,$003172                  ; 04271E || 	ld	de,$003172                  ; 0426E6 || 04271E 11 72 31 00 6538  LN2:			LD      DE,3172H        ;LN(2)
	exx                            ; 042722 || 	exx                            ; 0426EA || 042722 D9          6539          		EXX
	ld	de,$0017f8                  ; 042723 || 	ld	de,$0017f8                  ; 0426EB || 042723 11 F8 17 00 6540          		LD      DE,17F8H
	exx                            ; 042727 || 	exx                            ; 0426EF || 042727 D9          6541          		EXX
	ld	b,$7f                       ; 042728 || 	ld	b,$7f                       ; 0426F0 || 042728 06 7F       6542          		LD      B,7FH
	ret                            ; 04272A || 	ret                            ; 0426F2 || 04272A C9          6543          		RET
	call	$042bde                   ; 04272B || 	call	$042ba6                   ; 0426F3 || 04272B CD DE 2B 04 6548  LN_FP:			CALL    SFLOAT_FP
	ld	a,$16                       ; 04272F || 	ld	a,$16                       ; 0426F7 || 04272F 3E 16       6549  LN0:			LD      A,LOGRNG
	bit	7,h                        ; 042731 || 	bit	7,h                        ; 0426F9 || 042731 CB 7C       6550          		BIT     7,H
	jp	nz,$0420b5                  ; 042733 || 	jp	nz,$04207d                  ; 0426FB || 042733 C2 B5 20 04 6551          		JP      NZ,ERROR_FP_        ;"Log range"
	inc	c                          ; 042737 || 	inc	c                          ; 0426FF || 042737 0C          6552          		INC     C
	dec	c                          ; 042738 || 	dec	c                          ; 042700 || 042738 0D          6553          		DEC     C
	jp	z,$0420b5                   ; 042739 || 	jp	z,$04207d                   ; 042701 || 042739 CA B5 20 04 6554          		JP      Z,ERROR_FP_
	ld	de,$003504                  ; 04273D || 	ld	de,$003504                  ; 042705 || 04273D 11 04 35 00 6555          		LD      DE,3504H        ;SQR(2)
	exx                            ; 042741 || 	exx                            ; 042709 || 042741 D9          6556          		EXX
	ld	de,$00f333                  ; 042742 || 	ld	de,$00f333                  ; 04270A || 042742 11 33 F3 00 6557          		LD      DE,0F333H       ;1.41421356237
	exx                            ; 042746 || 	exx                            ; 04270E || 042746 D9          6558          		EXX
	call	$042c6e                   ; 042747 || 	call	$042c36                   ; 04270F || 042747 CD 6E 2C 04 6559          		CALL    ICP0            ;MANTISSA>SQR(2)?
	ld	a,c                         ; 04274B || 	ld	a,c                         ; 042713 || 04274B 79          6560          		LD      A,C             ;EXPONENT
	ld	c,$80                       ; 04274C || 	ld	c,$80                       ; 042714 || 04274C 0E 80       6561          		LD      C,80H           ;1 <= X < 2
	jr	c,$+$04                     ; 04274E || 	jr	c,$+$04                     ; 042716 || 04274E 38 02       6562          		JR      C,LN4
	dec	c                          ; 042750 || 	dec	c                          ; 042718 || 042750 0D          6563          		DEC     C
	inc	a                          ; 042751 || 	inc	a                          ; 042719 || 042751 3C          6564          		INC     A
	push	af                        ; 042752 || 	push	af                        ; 04271A || 042752 F5          6565  LN4:			PUSH    AF              ;SAVE EXPONENT
	call	$042d00                   ; 042753 || 	call	$042cc8                   ; 04271B || 042753 CD 00 2D 04 6566          		CALL    RATIO           ;X=(X-1)/(X+1)
	call	$042ceb                   ; 042757 || 	call	$042cb3                   ; 04271F || 042757 CD EB 2C 04 6567          		CALL    PUSH5
	call	$042ce3                   ; 04275B || 	call	$042cab                   ; 042723 || 04275B CD E3 2C 04 6568  		        CALL    SQUARE          ;PUSH X*X
	call	$042d28                   ; 04275F || 	call	$042cf0                   ; 042727 || 04275F CD 28 2D 04 6569          		CALL    POLY
	ld	c,b                         ; 042763 || 	ld	c,b                         ; 04272B || 042763 48 CC       6570          		DW	0CC48H          ;a(9)
	call	z,$7d74fb                 ; 042764 || 	call	z,$7d74fb                 ; 04272C
	xor	a                          ; 042768 || 	xor	a                          ; 042730 || 042768 AF AE       6573          		DW	0AEAFH          ;a(7)
	xor	(hl)                       ; 042769 || 	xor	(hl)                       ; 042731
	rst	$38                        ; 04276A || 	rst	$38                        ; 042732 || 04276A FF 11       6574          		DW	11FFH
	ld	de,$d98c7e                  ; 04276B || 	ld	de,$d98c7e                  ; 042733
	call	$e37e4c                   ; 04276F || 	call	$e37e4c                   ; 042737 || 04276F CD 4C       6577          		DW	4CCDH
	xor	c                          ; 042773 || 	xor	c                          ; 04273B
	xor	d                          ; 042774 || 	xor	d                          ; 04273C || 042774 AA 2A       6580          		DW	2AAAH
	ld	hl,($00007f)                ; 042775 || 	ld	hl,($00007f)                ; 04273D
	nop                            ; 042779 || 	nop                            ; 042741 || 042779 00 00       6583          		DW	0
	nop                            ; 04277A || 	nop                            ; 042742
	add	a,c                        ; 04277B || 	add	a,c                        ; 042743 || 04277B 81          6584          		DB	81H
	call	$042cf4                   ; 04277C || 	call	$042cbc                   ; 042744 || 04277C CD F4 2C 04 6585          		CALL    POP5
	call	$042cf4                   ; 042780 || 	call	$042cbc                   ; 042748 || 042780 CD F4 2C 04 6586          		CALL    POP5
	call	$042346                   ; 042784 || 	call	$04230e                   ; 04274C || 042784 CD 46 23 04 6587          		CALL    FMUL
	pop	af                         ; 042788 || 	pop	af                         ; 042750 || 042788 F1          6588          		POP     AF              ;EXPONENT
	call	$042ceb                   ; 042789 || 	call	$042cb3                   ; 042751 || 042789 CD EB 2C 04 6589          		CALL    PUSH5
	ex	af,af'                      ; 04278D || 	ex	af,af'                      ; 042755 || 04278D 08          6590          		EX      AF,AF'
	call	$042c5b                   ; 04278E || 	call	$042c23                   ; 042756 || 04278E CD 5B 2C 04 6591          		CALL    ZERO_FP
	ex	af,af'                      ; 042792 || 	ex	af,af'                      ; 04275A || 042792 08          6592          		EX      AF,AF'
	sub	$80                        ; 042793 || 	sub	$80                        ; 04275B || 042793 D6 80       6593          		SUB     80H
	jr	z,$+$21                     ; 042795 || 	jr	z,$+$21                     ; 04275D || 042795 28 1F       6594          		JR      Z,LN3
	jr	nc,$+$04                    ; 042797 || 	jr	nc,$+$04                    ; 04275F || 042797 30 02       6595          		JR      NC,LN1
	cpl                            ; 042799 || 	cpl                            ; 042761 || 042799 2F          6596          		CPL
	inc	a                          ; 04279A || 	inc	a                          ; 042762 || 04279A 3C          6597          		INC     A
	ld	h,a                         ; 04279B || 	ld	h,a                         ; 042763 || 04279B 67          6598  LN1:			LD      H,A
	ld	c,$87                       ; 04279C || 	ld	c,$87                       ; 042764 || 04279C 0E 87       6599          		LD      C,87H
	push	af                        ; 04279E || 	push	af                        ; 042766 || 04279E F5          6600          		PUSH    AF
	call	$042bbe                   ; 04279F || 	call	$042b86                   ; 042767 || 04279F CD BE 2B 04 6601          		CALL    FLOAT_
	res	7,h                        ; 0427A3 || 	res	7,h                        ; 04276B || 0427A3 CB BC       6602          		RES     7,H
	call	$04271e                   ; 0427A5 || 	call	$0426e6                   ; 04276D || 0427A5 CD 1E 27 04 6603          		CALL    LN2
	call	$042346                   ; 0427A9 || 	call	$04230e                   ; 042771 || 0427A9 CD 46 23 04 6604          		CALL    FMUL
	pop	af                         ; 0427AD || 	pop	af                         ; 042775 || 0427AD F1          6605          		POP     AF
	jr	nc,$+$08                    ; 0427AE || 	jr	nc,$+$08                    ; 042776 || 0427AE 30 06       6606          		JR      NC,LN3
	jp	m,$0427b6                   ; 0427B0 || 	jp	m,$04277e                   ; 042778 || 0427B0 FA B6 27 04 6607          		JP      M,LN3
	set	7,h                        ; 0427B4 || 	set	7,h                        ; 04277C || 0427B4 CB FC       6608          		SET     7,H
	call	$042cf4                   ; 0427B6 || 	call	$042cbc                   ; 04277E || 0427B6 CD F4 2C 04 6609  LN3:			CALL    POP5
	call	$042234                   ; 0427BA || 	call	$0421fc                   ; 042782 || 0427BA CD 34 22 04 6610          		CALL    FADD
	xor	a                          ; 0427BE || 	xor	a                          ; 042786 || 0427BE AF          6611          		XOR     A
	ret                            ; 0427BF || 	ret                            ; 042787 || 0427BF C9          6612          		RET
	call	$04272b                   ; 0427C0 || 	call	$0426f3                   ; 042788 || 0427C0 CD 2B 27 04 6617  LOG_FP:			CALL    LN_FP
	ld	de,$005e5b                  ; 0427C4 || 	ld	de,$005e5b                  ; 04278C || 0427C4 11 5B 5E 00 6618          		LD      DE,5E5BH        ;LOG(e)
	exx                            ; 0427C8 || 	exx                            ; 042790 || 0427C8 D9          6619          		EXX
	ld	de,$00d8a9                  ; 0427C9 || 	ld	de,$00d8a9                  ; 042791 || 0427C9 11 A9 D8 00 6620          		LD      DE,0D8A9H
	exx                            ; 0427CD || 	exx                            ; 042795 || 0427CD D9          6621          		EXX
	ld	b,$7e                       ; 0427CE || 	ld	b,$7e                       ; 042796 || 0427CE 06 7E       6622          		LD      B,7EH
	call	$042346                   ; 0427D0 || 	call	$04230e                   ; 042798 || 0427D0 CD 46 23 04 6623          		CALL    FMUL
	xor	a                          ; 0427D4 || 	xor	a                          ; 04279C || 0427D4 AF          6624          		XOR     A
	ret                            ; 0427D5 || 	ret                            ; 04279D || 0427D5 C9          6625          		RET
	call	$042bde                   ; 0427D6 || 	call	$042ba6                   ; 04279E || 0427D6 CD DE 2B 04 6630  ASN_FP:			CALL    SFLOAT_FP
	call	$042ceb                   ; 0427DA || 	call	$042cb3                   ; 0427A2 || 0427DA CD EB 2C 04 6631          		CALL    PUSH5
	call	$042cdb                   ; 0427DE || 	call	$042ca3                   ; 0427A6 || 0427DE CD DB 2C 04 6632          		CALL    COPY_
	call	$042346                   ; 0427E2 || 	call	$04230e                   ; 0427AA || 0427E2 CD 46 23 04 6633          		CALL    FMUL
	call	$042673                   ; 0427E6 || 	call	$04263b                   ; 0427AE || 0427E6 CD 73 26 04 6634          		CALL    DONE
	call	$042221                   ; 0427EA || 	call	$0421e9                   ; 0427B2 || 0427EA CD 21 22 04 6635          		CALL    RSUB
	call	$042551                   ; 0427EE || 	call	$042519                   ; 0427B6 || 0427EE CD 51 25 04 6636          		CALL    SQR0
	call	$042cf4                   ; 0427F2 || 	call	$042cbc                   ; 0427BA || 0427F2 CD F4 2C 04 6637          		CALL    POP5
	inc	c                          ; 0427F6 || 	inc	c                          ; 0427BE || 0427F6 0C          6638          		INC     C
	dec	c                          ; 0427F7 || 	dec	c                          ; 0427BF || 0427F7 0D          6639          		DEC     C
	ld	a,$02                       ; 0427F8 || 	ld	a,$02                       ; 0427C0 || 0427F8 3E 02       6640          		LD      A,2
	push	de                        ; 0427FA || 	push	de                        ; 0427C2 || 0427FA D5          6641          		PUSH    DE
	jp	z,$042880                   ; 0427FB || 	jp	z,$042848                   ; 0427C3 || 0427FB CA 80 28 04 6642          		JP      Z,ACS1
	pop	de                         ; 0427FF || 	pop	de                         ; 0427C7 || 0427FF D1          6643          		POP     DE
	call	$042716                   ; 042800 || 	call	$0426de                   ; 0427C8 || 042800 CD 16 27 04 6644          		CALL    RDIV
	jr	$+$06                       ; 042804 || 	jr	$+$06                       ; 0427CC || 042804 18 04       6645          		JR      ATN0
	call	$042bde                   ; 042806 || 	call	$042ba6                   ; 0427CE || 042806 CD DE 2B 04 6650  ATN_FP:			CALL    SFLOAT_FP
	push	hl                        ; 04280A || 	push	hl                        ; 0427D2 || 04280A E5          6651  ATN0:			PUSH    HL              ;SAVE SIGN
	res	7,h                        ; 04280B || 	res	7,h                        ; 0427D3 || 04280B CB BC       6652          		RES     7,H
	ld	de,$005413                  ; 04280D || 	ld	de,$005413                  ; 0427D5 || 04280D 11 13 54 00 6653          		LD      DE,5413H        ;TAN(PI/8)=SQR(2)-1
	exx                            ; 042811 || 	exx                            ; 0427D9 || 042811 D9          6654          		EXX
	ld	de,$00ccd0                  ; 042812 || 	ld	de,$00ccd0                  ; 0427DA || 042812 11 D0 CC 00 6655          		LD      DE,0CCD0H
	exx                            ; 042816 || 	exx                            ; 0427DE || 042816 D9          6656          		EXX
	ld	b,$7e                       ; 042817 || 	ld	b,$7e                       ; 0427DF || 042817 06 7E       6657          		LD      B,7EH
	call	$042c6b                   ; 042819 || 	call	$042c33                   ; 0427E1 || 042819 CD 6B 2C 04 6658          		CALL    FCP0            ;COMPARE
	ld	b,$00                       ; 04281D || 	ld	b,$00                       ; 0427E5 || 04281D 06 00       6659          		LD      B,0
	jr	c,$+$24                     ; 04281F || 	jr	c,$+$24                     ; 0427E7 || 04281F 38 22       6660          		JR      C,ATN2
	ld	de,$001a82                  ; 042821 || 	ld	de,$001a82                  ; 0427E9 || 042821 11 82 1A 00 6661          		LD      DE,1A82H        ;TAN(3*PI/8)=SQR(2)+1
	exx                            ; 042825 || 	exx                            ; 0427ED || 042825 D9          6662          		EXX
	ld	de,$00799a                  ; 042826 || 	ld	de,$00799a                  ; 0427EE || 042826 11 9A 79 00 6663          		LD      DE,799AH
	exx                            ; 04282A || 	exx                            ; 0427F2 || 04282A D9          6664          		EXX
	ld	b,$81                       ; 04282B || 	ld	b,$81                       ; 0427F3 || 04282B 06 81       6665          		LD      B,81H
	call	$042c6b                   ; 04282D || 	call	$042c33                   ; 0427F5 || 04282D CD 6B 2C 04 6666          		CALL    FCP0            ;COMPARE
	jr	c,$+$0c                     ; 042831 || 	jr	c,$+$0c                     ; 0427F9 || 042831 38 0A       6667          		JR      C,ATN1
	call	$042712                   ; 042833 || 	call	$0426da                   ; 0427FB || 042833 CD 12 27 04 6668          		CALL    RECIP           ;X=1/X
	ld	b,$02                       ; 042837 || 	ld	b,$02                       ; 0427FF || 042837 06 02       6669          		LD      B,2
	jp	$042843                     ; 042839 || 	jp	$04280b                     ; 042801 || 042839 C3 43 28 04 6670          		JP      ATN2
	call	$042d00                   ; 04283D || 	call	$042cc8                   ; 042805 || 04283D CD 00 2D 04 6671  ATN1:			CALL    RATIO           ;X=(X-1)/(X+1)
	ld	b,$01                       ; 042841 || 	ld	b,$01                       ; 042809 || 042841 06 01       6672          		LD      B,1
	push	bc                        ; 042843 || 	push	bc                        ; 04280B || 042843 C5          6673  ATN2:			PUSH    BC              ;SAVE FLAG
	call	$042ceb                   ; 042844 || 	call	$042cb3                   ; 04280C || 042844 CD EB 2C 04 6674          		CALL    PUSH5
	call	$042ce3                   ; 042848 || 	call	$042cab                   ; 042810 || 042848 CD E3 2C 04 6675          		CALL    SQUARE          ;PUSH X*X
	call	$042d28                   ; 04284C || 	call	$042cf0                   ; 042814 || 04284C CD 28 2D 04 6676          		CALL    POLY
	dec	(hl)                       ; 042850 || 	dec	(hl)                       ; 042818 || 042850 35 F3       6677          		DW	0F335H          ;a(13)
	di                             ; 042851 || 	di                             ; 042819
	ret	c                          ; 042852 || 	ret	c                          ; 04281A || 042852 D8 37       6678          		DW	37D8H
	scf                            ; 042853 || 	scf                            ; 04281B
	ld	a,e                         ; 042854 || 	ld	a,e                         ; 04281C || 042854 7B          6679          		DB	7BH
	sub	c                          ; 042855 || 	sub	c                          ; 04281D || 042855 91 6B       6680          		DW	6B91H           ;a(11)
	ld	l,e                         ; 042856 || 	ld	l,e                         ; 04281E
	cp	c                           ; 042857 || 	cp	c                           ; 04281F || 042857 B9 AA       6681          		DW	0AAB9H
	xor	d                          ; 042858 || 	xor	d                          ; 042820
	ld	a,h                         ; 042859 || 	ld	a,h                         ; 042821 || 042859 7C          6682          		DB	7CH
	sbc	a,$41                      ; 04285A || 	sbc	a,$41                      ; 042822 || 04285A DE 41       6683          		DW	41DEH           ;a(9)
	sub	a                          ; 04285C || 	sub	a                          ; 042824 || 04285C 97 61       6684          		DW	6197H
	ld	h,c                         ; 04285D || 	ld	h,c                         ; 042825
	ld	a,h                         ; 04285E || 	ld	a,h                         ; 042826 || 04285E 7C          6685          		DB	7CH
	ld	a,e                         ; 04285F || 	ld	a,e                         ; 042827 || 04285F 7B 9D       6686          		DW	9D7BH           ;a(7)
	sbc	a,l                        ; 042860 || 	sbc	a,l                        ; 042828
	scf                            ; 042861 || 	scf                            ; 042829 || 042861 37 92       6687          		DW	9237H
	sub	d                          ; 042862 || 	sub	d                          ; 04282A
	ld	a,l                         ; 042863 || 	ld	a,l                         ; 04282B || 042863 7D          6688          		DB	7DH
	ld	e,d                         ; 042864 || 	ld	e,d                         ; 04282C || 042864 5A 2A       6689          		DW	2A5AH           ;a(5)
	ld	hl,($7d4ccc)                ; 042865 || 	ld	hl,($7d4ccc)                ; 04282D
	ld	e,h                         ; 042869 || 	ld	e,h                         ; 042831 || 042869 5C A9       6692          		DW	0A95CH          ;a(3)
	xor	c                          ; 04286A || 	xor	c                          ; 042832
	xor	d                          ; 04286B || 	xor	d                          ; 042833 || 04286B AA AA       6693          		DW	0AAAAH
	xor	d                          ; 04286C || 	xor	d                          ; 042834
	ld	a,(hl)                      ; 04286D || 	ld	a,(hl)                      ; 042835 || 04286D 7E          6694          		DB	7EH
	nop                            ; 04286E || 	nop                            ; 042836 || 04286E 00 00       6695          		DW	0               ;a(1)
	nop                            ; 04286F || 	nop                            ; 042837
	nop                            ; 042870 || 	nop                            ; 042838 || 042870 00 00       6696          		DW	0
	nop                            ; 042871 || 	nop                            ; 042839
	add	a,b                        ; 042872 || 	add	a,b                        ; 04283A || 042872 80          6697          		DB	80H
	call	$042cf4                   ; 042873 || 	call	$042cbc                   ; 04283B || 042873 CD F4 2C 04 6698          		CALL    POP5
	call	$042cf4                   ; 042877 || 	call	$042cbc                   ; 04283F || 042877 CD F4 2C 04 6699          		CALL    POP5
	call	$042346                   ; 04287B || 	call	$04230e                   ; 042843 || 04287B CD 46 23 04 6700          		CALL    FMUL
	pop	af                         ; 04287F || 	pop	af                         ; 042847 || 04287F F1          6701          		POP     AF
	call	$042680                   ; 042880 || 	call	$042648                   ; 042848 || 042880 CD 80 26 04 6702  ACS1:			CALL    PIBY4           ;PI/4
	rra                            ; 042884 || 	rra                            ; 04284C || 042884 1F          6703          		RRA
	push	af                        ; 042885 || 	push	af                        ; 04284D || 042885 F5          6704          		PUSH    AF
	call	c,$042234                 ; 042886 || 	call	c,$0421fc                 ; 04284E || 042886 DC 34 22 04 6705          		CALL    C,FADD
	pop	af                         ; 04288A || 	pop	af                         ; 042852 || 04288A F1          6706          		POP     AF
	inc	b                          ; 04288B || 	inc	b                          ; 042853 || 04288B 04          6707          		INC     B
	rra                            ; 04288C || 	rra                            ; 042854 || 04288C 1F          6708          		RRA
	call	c,$042221                 ; 04288D || 	call	c,$0421e9                 ; 042855 || 04288D DC 21 22 04 6709          		CALL    C,RSUB
	pop	af                         ; 042891 || 	pop	af                         ; 042859 || 042891 F1          6710          		POP     AF
	or	a                           ; 042892 || 	or	a                           ; 04285A || 042892 B7          6711          		OR      A
	ret	p                          ; 042893 || 	ret	p                          ; 04285B || 042893 F0          6712          		RET     P
	set	7,h                        ; 042894 || 	set	7,h                        ; 04285C || 042894 CB FC       6713          		SET     7,H             ;MAKE NEGATIVE
	xor	a                          ; 042896 || 	xor	a                          ; 04285E || 042896 AF          6714          		XOR     A
	ret                            ; 042897 || 	ret                            ; 04285F || 042897 C9          6715          		RET
	call	$0427d6                   ; 042898 || 	call	$04279e                   ; 042860 || 042898 CD D6 27 04 6720  ACS_FP:			CALL    ASN_FP
	ld	a,$02                       ; 04289C || 	ld	a,$02                       ; 042864 || 04289C 3E 02       6721          		LD      A,2
	push	af                        ; 04289E || 	push	af                        ; 042866 || 04289E F5          6722          		PUSH    AF
	jr	$-$1f                       ; 04289F || 	jr	$-$1f                       ; 042867 || 04289F 18 DF       6723          		JR      ACS1
	call	$042bde                   ; 0428A1 || 	call	$042ba6                   ; 042869 || 0428A1 CD DE 2B 04 6733  STR_FP:			CALL    SFLOAT_FP
	ld	b,$00                       ; 0428A5 || 	ld	b,$00                       ; 04286D || 0428A5 06 00       6734          		LD      B,0             ;DEFAULT PT. POSITION
	bit	7,h                        ; 0428A7 || 	bit	7,h                        ; 04286F || 0428A7 CB 7C       6735          		BIT     7,H             ;NEGATIVE?
	jr	z,$+$08                     ; 0428A9 || 	jr	z,$+$08                     ; 042871 || 0428A9 28 06       6736          		JR      Z,STR10
	res	7,h                        ; 0428AB || 	res	7,h                        ; 042873 || 0428AB CB BC       6737          		RES     7,H
	ld	a,$2d                       ; 0428AD || 	ld	a,$2d                       ; 042875 || 0428AD 3E 2D       6738          		LD      A,'-'
	ld	(de),a                      ; 0428AF || 	ld	(de),a                      ; 042877 || 0428AF 12          6739          		LD      (DE),A          ;STORE SIGN
	inc	de                         ; 0428B0 || 	inc	de                         ; 042878 || 0428B0 13          6740          		INC     DE
	xor	a                          ; 0428B1 || 	xor	a                          ; 042879 || 0428B1 AF          6741  STR10:			XOR     A               ;CLEAR A
	cp	c                           ; 0428B2 || 	cp	c                           ; 04287A || 0428B2 B9          6742          		CP      C
	jr	z,$+$50                     ; 0428B3 || 	jr	z,$+$50                     ; 04287B || 0428B3 28 4E       6743          		JR      Z,STR02          ;ZERO
	push	de                        ; 0428B5 || 	push	de                        ; 04287D || 0428B5 D5          6744          		PUSH    DE              ;SAVE TEXT POINTER
	ld	a,b                         ; 0428B6 || 	ld	a,b                         ; 04287E || 0428B6 78          6745          		LD      A,B
	push	af                        ; 0428B7 || 	push	af                        ; 04287F || 0428B7 F5          6746  STR11:			PUSH    AF              ;SAVE DECIMAL COUNTER
	ld	a,c                         ; 0428B8 || 	ld	a,c                         ; 042880 || 0428B8 79          6747          		LD      A,C             ;BINARY EXPONENT
	cp	$a1                         ; 0428B9 || 	cp	$a1                         ; 042881 || 0428B9 FE A1       6748          		CP      161
	jr	nc,$+$1e                    ; 0428BB || 	jr	nc,$+$1e                    ; 042883 || 0428BB 30 1C       6749          		JR      NC,STR14
	cp	$9b                         ; 0428BD || 	cp	$9b                         ; 042885 || 0428BD FE 9B       6750          		CP      155
	jr	nc,$+$2b                    ; 0428BF || 	jr	nc,$+$2b                    ; 042887 || 0428BF 30 29       6751          		JR      NC,STR15
	cpl                            ; 0428C1 || 	cpl                            ; 042889 || 0428C1 2F          6752          		CPL
	cp	$e1                         ; 0428C2 || 	cp	$e1                         ; 04288A || 0428C2 FE E1       6753          		CP      225
	jr	c,$+$04                     ; 0428C4 || 	jr	c,$+$04                     ; 04288C || 0428C4 38 02       6754          		JR      C,STR13
	ld	a,$f8                       ; 0428C6 || 	ld	a,$f8                       ; 04288E || 0428C6 3E F8       6755          		LD      A,-8
	add	a,$1c                      ; 0428C8 || 	add	a,$1c                      ; 042890 || 0428C8 C6 1C       6756  STR13:			ADD     A,28
	call	$042d57                   ; 0428CA || 	call	$042d1f                   ; 042892 || 0428CA CD 57 2D 04 6757          		CALL    POWR10
	push	af                        ; 0428CE || 	push	af                        ; 042896 || 0428CE F5          6758          		PUSH    AF
	call	$042346                   ; 0428CF || 	call	$04230e                   ; 042897 || 0428CF CD 46 23 04 6759          		CALL    FMUL
	pop	af                         ; 0428D3 || 	pop	af                         ; 04289B || 0428D3 F1          6760          		POP     AF
	ld	b,a                         ; 0428D4 || 	ld	b,a                         ; 04289C || 0428D4 47          6761          		LD      B,A
	pop	af                         ; 0428D5 || 	pop	af                         ; 04289D || 0428D5 F1          6762          		POP     AF
	sub	b                          ; 0428D6 || 	sub	b                          ; 04289E || 0428D6 90          6763          		SUB     B
	jr	$-$20                       ; 0428D7 || 	jr	$-$20                       ; 04289F || 0428D7 18 DE       6764          		JR      STR11
	sub	$20                        ; 0428D9 || 	sub	$20                        ; 0428A1 || 0428D9 D6 20       6765  STR14:			SUB     32
	call	$042d57                   ; 0428DB || 	call	$042d1f                   ; 0428A3 || 0428DB CD 57 2D 04 6766          		CALL    POWR10
	push	af                        ; 0428DF || 	push	af                        ; 0428A7 || 0428DF F5          6767          		PUSH    AF
	call	$04229d                   ; 0428E0 || 	call	$042265                   ; 0428A8 || 0428E0 CD 9D 22 04 6768          		CALL    FDIV
	pop	af                         ; 0428E4 || 	pop	af                         ; 0428AC || 0428E4 F1          6769          		POP     AF
	ld	b,a                         ; 0428E5 || 	ld	b,a                         ; 0428AD || 0428E5 47          6770          		LD      B,A
	pop	af                         ; 0428E6 || 	pop	af                         ; 0428AE || 0428E6 F1          6771          		POP     AF
	add	a,b                        ; 0428E7 || 	add	a,b                        ; 0428AF || 0428E7 80          6772          		ADD     A,B
	jr	$-$31                       ; 0428E8 || 	jr	$-$31                       ; 0428B0 || 0428E8 18 CD       6773          		JR      STR11
	ld	a,$09                       ; 0428EA || 	ld	a,$09                       ; 0428B2 || 0428EA 3E 09       6774  STR15:			LD      A,9
	call	$042d57                   ; 0428EC || 	call	$042d1f                   ; 0428B4 || 0428EC CD 57 2D 04 6775          		CALL    POWR10          ;10^9
	call	$042c6b                   ; 0428F0 || 	call	$042c33                   ; 0428B8 || 0428F0 CD 6B 2C 04 6776          		CALL    FCP0
	ld	a,c                         ; 0428F4 || 	ld	a,c                         ; 0428BC || 0428F4 79          6777          		LD      A,C
	pop	bc                         ; 0428F5 || 	pop	bc                         ; 0428BD || 0428F5 C1          6778          		POP     BC
	ld	c,a                         ; 0428F6 || 	ld	c,a                         ; 0428BE || 0428F6 4F          6779          		LD      C,A
	set	7,h                        ; 0428F7 || 	set	7,h                        ; 0428BF || 0428F7 CB FC       6780          		SET     7,H             ;IMPLIED 1
	call	c,$042c93                 ; 0428F9 || 	call	c,$042c5b                 ; 0428C1 || 0428F9 DC 93 2C 04 6781          		CALL    C,X10B          ;X10, DEC B
	pop	de                         ; 0428FD || 	pop	de                         ; 0428C5 || 0428FD D1          6782          		POP     DE              ;RESTORE TEXT POINTER
	res	7,c                        ; 0428FE || 	res	7,c                        ; 0428C6 || 0428FE CB B9       6783          		RES     7,C
	ld	a,$00                       ; 042900 || 	ld	a,$00                       ; 0428C8 || 042900 3E 00       6784          		LD      A,0
	rla                            ; 042902 || 	rla                            ; 0428CA || 042902 17          6785          		RLA                     ;PUT CARRY IN LSB
	inc	c                          ; 042903 || 	inc	c                          ; 0428CB || 042903 0C          6793  STR02:			INC     C
	ex	af,af'                      ; 042904 || 	ex	af,af'                      ; 0428CC || 042904 08          6794          		EX      AF,AF'          ;SAVE A
	ld	a,b                         ; 042905 || 	ld	a,b                         ; 0428CD || 042905 78          6795          		LD      A,B
	bit	1,(ix+$02)                 ; 042906 || 	bit	1,(ix+$02)                 ; 0428CE || 042906 DD CB 02 4E 6796          		BIT     1,(IX+2)
	jr	nz,$+$0a                    ; 04290A || 	jr	nz,$+$0a                    ; 0428D2 || 04290A 20 08       6797          		JR      NZ,STR20
	xor	a                          ; 04290C || 	xor	a                          ; 0428D4 || 04290C AF          6798          		XOR     A
	cp	(ix+$01)                    ; 04290D || 	cp	(ix+$01)                    ; 0428D5 || 04290D DD BE 01    6799          		CP      (IX+1)
	jr	z,$+$0d                     ; 042910 || 	jr	z,$+$0d                     ; 0428D8 || 042910 28 0B       6800          		JR      Z,STR21
	ld	a,$f6                       ; 042912 || 	ld	a,$f6                       ; 0428DA || 042912 3E F6       6801          		LD      A,-10
	add	a,(ix+$01)                 ; 042914 || 	add	a,(ix+$01)                 ; 0428DC || 042914 DD 86 01    6802  STR20:			ADD     A,(IX+1)        ;SIG. FIG. COUNT
	or	a                           ; 042917 || 	or	a                           ; 0428DF || 042917 B7          6803          		OR      A               ;CLEAR CARRY
	jp	m,$04291d                   ; 042918 || 	jp	m,$0428e5                   ; 0428E0 || 042918 FA 1D 29 04 6804          		JP      M,STR21
	xor	a                          ; 04291C || 	xor	a                          ; 0428E4 || 04291C AF          6805          		XOR     A
	push	af                        ; 04291D || 	push	af                        ; 0428E5 || 04291D F5          6806  STR21:			PUSH    AF
	ex	af,af'                      ; 04291E || 	ex	af,af'                      ; 0428E6 || 04291E 08          6807          		EX      AF,AF'          ;RESTORE A
	call	$042cc7                   ; 04291F || 	call	$042c8f                   ; 0428E7 || 04291F CD C7 2C 04 6808  STR22:			CALL    X2              ;RL AHLH'L'
	adc	a,a                        ; 042923 || 	adc	a,a                        ; 0428EB || 042923 8F          6809          		ADC     A,A
	cp	$0a                         ; 042924 || 	cp	$0a                         ; 0428EC || 042924 FE 0A       6810          		CP      10
	jr	c,$+$07                     ; 042926 || 	jr	c,$+$07                     ; 0428EE || 042926 38 05       6811          		JR      C,STR23
	sub	$0a                        ; 042928 || 	sub	$0a                        ; 0428F0 || 042928 D6 0A       6812          		SUB     10
	exx                            ; 04292A || 	exx                            ; 0428F2 || 04292A D9          6813          		EXX
	inc	l                          ; 04292B || 	inc	l                          ; 0428F3 || 04292B 2C          6814          		INC     L               ;SET RESULT BIT
	exx                            ; 04292C || 	exx                            ; 0428F4 || 04292C D9          6815          		EXX
	dec	c                          ; 04292D || 	dec	c                          ; 0428F5 || 04292D 0D          6816  STR23:			DEC     C
	jr	nz,$-$0f                    ; 04292E || 	jr	nz,$-$0f                    ; 0428F6 || 04292E 20 EF       6817          		JR      NZ,STR22        ;32 TIMES
	ld	c,a                         ; 042930 || 	ld	c,a                         ; 0428F8 || 042930 4F          6818          		LD      C,A             ;REMAINDER
	ld	a,h                         ; 042931 || 	ld	a,h                         ; 0428F9 || 042931 7C          6819          		LD      A,H
	and	$3f                        ; 042932 || 	and	$3f                        ; 0428FA || 042932 E6 3F       6820          		AND     3FH             ;CLEAR OUT JUNK
	ld	h,a                         ; 042934 || 	ld	h,a                         ; 0428FC || 042934 67          6821          		LD      H,A
	pop	af                         ; 042935 || 	pop	af                         ; 0428FD || 042935 F1          6822          		POP     AF
	jp	p,$042944                   ; 042936 || 	jp	p,$04290c                   ; 0428FE || 042936 F2 44 29 04 6823          		JP      P,STR24
	inc	a                          ; 04293A || 	inc	a                          ; 042902 || 04293A 3C          6824          		INC     A
	jr	nz,$+$1e                    ; 04293B || 	jr	nz,$+$1e                    ; 042903 || 04293B 20 1C       6825          		JR      NZ,STR26
	ld	a,$04                       ; 04293D || 	ld	a,$04                       ; 042905 || 04293D 3E 04       6826          		LD      A,4
	cp	c                           ; 04293F || 	cp	c                           ; 042907 || 04293F B9          6827          		CP      C               ;ROUND UP?
	ld	a,$00                       ; 042940 || 	ld	a,$00                       ; 042908 || 042940 3E 00       6828          		LD      A,0
	jr	$+$17                       ; 042942 || 	jr	$+$17                       ; 04290A || 042942 18 15       6829          		JR      STR26
	push	af                        ; 042944 || 	push	af                        ; 04290C || 042944 F5          6830  STR24:			PUSH    AF
	ld	a,c                         ; 042945 || 	ld	a,c                         ; 04290D || 042945 79          6831          		LD      A,C
	adc	a,$30                      ; 042946 || 	adc	a,$30                      ; 04290E || 042946 CE 30       6832          		ADC     A,'0'           ;ADD CARRY
	cp	$30                         ; 042948 || 	cp	$30                         ; 042910 || 042948 FE 30       6833          		CP      '0'
	jr	z,$+$07                     ; 04294A || 	jr	z,$+$07                     ; 042912 || 04294A 28 05       6834          		JR      Z,STR25         ;SUPPRESS ZERO
	cp	$3a                         ; 04294C || 	cp	$3a                         ; 042914 || 04294C FE 3A       6835          		CP      '9'+1
	ccf                            ; 04294E || 	ccf                            ; 042916 || 04294E 3F          6836          		CCF
	jr	nc,$+$0a                    ; 04294F || 	jr	nc,$+$0a                    ; 042917 || 04294F 30 08       6837          		JR      NC,STR26
	ex	(sp),hl                     ; 042951 || 	ex	(sp),hl                     ; 042919 || 042951 E3          6838  STR25:			EX      (SP),HL
	bit	6,l                        ; 042952 || 	bit	6,l                        ; 04291A || 042952 CB 75       6839          		BIT     6,L             ;ZERO FLAG
	ex	(sp),hl                     ; 042954 || 	ex	(sp),hl                     ; 04291C || 042954 E3          6840  		        EX      (SP),HL
	jr	nz,$+$07                    ; 042955 || 	jr	nz,$+$07                    ; 04291D || 042955 20 05       6841          		JR      NZ,STR27
	ld	a,$30                       ; 042957 || 	ld	a,$30                       ; 04291F || 042957 3E 30       6842          		LD      A,'0'
	inc	a                          ; 042959 || 	inc	a                          ; 042921 || 042959 3C          6843  STR26:			INC     A               ;SET +VE
	dec	a                          ; 04295A || 	dec	a                          ; 042922 || 04295A 3D          6844          		DEC     A
	push	af                        ; 04295B || 	push	af                        ; 042923 || 04295B F5          6845          		PUSH    AF              ;PUT ON STACK + CARRY
	inc	b                          ; 04295C || 	inc	b                          ; 042924 || 04295C 04          6846  STR27:			INC     B
	call	$042c37                   ; 04295D || 	call	$042bff                   ; 042925 || 04295D CD 37 2C 04 6847          		CALL    TEST_FP            ;IS HLH'L' ZERO?
	ld	c,$20                       ; 042961 || 	ld	c,$20                       ; 042929 || 042961 0E 20       6848          		LD      C,32
	ld	a,$00                       ; 042963 || 	ld	a,$00                       ; 04292B || 042963 3E 00       6849          		LD      A,0
	jr	nz,$-$46                    ; 042965 || 	jr	nz,$-$46                    ; 04292D || 042965 20 B8       6850          		JR      NZ,STR22
	pop	af                         ; 042967 || 	pop	af                         ; 04292F || 042967 F1          6851          		POP     AF
	push	af                        ; 042968 || 	push	af                        ; 042930 || 042968 F5          6852          		PUSH    AF
	ld	a,$00                       ; 042969 || 	ld	a,$00                       ; 042931 || 042969 3E 00       6853          		LD      A,0
	jr	c,$-$4c                     ; 04296B || 	jr	c,$-$4c                     ; 042933 || 04296B 38 B2       6854          		JR      C,STR22
	ex	de,hl                       ; 04296D || 	ex	de,hl                       ; 042935 || 04296D EB          6862  STR3:			EX      DE,HL           ;STRING POINTER
	ld	c,$ff                       ; 04296E || 	ld	c,$ff                       ; 042936 || 04296E 0E FF       6863          		LD      C,-1            ;FLAG "E"
	ld	d,$01                       ; 042970 || 	ld	d,$01                       ; 042938 || 042970 16 01       6864          		LD      D,1
	ld	e,(ix+$01)                  ; 042972 || 	ld	e,(ix+$01)                  ; 04293A || 042972 DD 5E 01    6865          		LD      E,(IX+1)        ;f2
	bit	0,(ix+$02)                 ; 042975 || 	bit	0,(ix+$02)                 ; 04293D || 042975 DD CB 02 46 6866          		BIT     0,(IX+2)
	jr	nz,$+$37                    ; 042979 || 	jr	nz,$+$37                    ; 042941 || 042979 20 35       6867          		JR      NZ,STR34        ;E MODE
	bit	1,(ix+$02)                 ; 04297B || 	bit	1,(ix+$02)                 ; 042943 || 04297B DD CB 02 4E 6868          		BIT     1,(IX+2)
	jr	z,$+$14                     ; 04297F || 	jr	z,$+$14                     ; 042947 || 04297F 28 12       6869          		JR      Z,STR31
	ld	a,b                         ; 042981 || 	ld	a,b                         ; 042949 || 042981 78          6870          		LD      A,B             ;F MODE
	or	a                           ; 042982 || 	or	a                           ; 04294A || 042982 B7          6871          		OR      A
	jr	z,$+$07                     ; 042983 || 	jr	z,$+$07                     ; 04294B || 042983 28 05       6872          		JR      Z,STR30
	jp	m,$04298a                   ; 042985 || 	jp	m,$042952                   ; 04294D || 042985 FA 8A 29 04 6873          		JP      M,STR30
	ld	d,b                         ; 042989 || 	ld	d,b                         ; 042951 || 042989 50          6874          		LD      D,B
	ld	a,d                         ; 04298A || 	ld	a,d                         ; 042952 || 04298A 7A          6875  STR30:			LD      A,D
	add	a,(ix+$01)                 ; 04298B || 	add	a,(ix+$01)                 ; 042953 || 04298B DD 86 01    6876          		ADD     A,(IX+1)
	ld	e,a                         ; 04298E || 	ld	e,a                         ; 042956 || 04298E 5F          6877          		LD      E,A
	cp	$0b                         ; 04298F || 	cp	$0b                         ; 042957 || 04298F FE 0B       6878          		CP      11
	jr	c,$+$1b                     ; 042991 || 	jr	c,$+$1b                     ; 042959 || 042991 38 19       6879          		JR      C,STR32
	ld	a,b                         ; 042993 || 	ld	a,b                         ; 04295B || 042993 78          6880  STR31:			LD      A,B             ;G MODE
	ld	de,$000101                  ; 042994 || 	ld	de,$000101                  ; 04295C || 042994 11 01 01 00 6881          		LD      DE,101H
	or	a                           ; 042998 || 	or	a                           ; 042960 || 042998 B7          6882          		OR      A
	jp	m,$0429b0                   ; 042999 || 	jp	m,$042978                   ; 042961 || 042999 FA B0 29 04 6883          		JP      M,STR34
	jr	z,$+$0f                     ; 04299D || 	jr	z,$+$0f                     ; 042965 || 04299D 28 0D       6884          		JR      Z,STR32
	ld	a,(ix+$01)                  ; 04299F || 	ld	a,(ix+$01)                  ; 042967 || 04299F DD 7E 01    6885          		LD      A,(IX+1)
	or	a                           ; 0429A2 || 	or	a                           ; 04296A || 0429A2 B7          6886          		OR      A
	jr	nz,$+$04                    ; 0429A3 || 	jr	nz,$+$04                    ; 04296B || 0429A3 20 02       6887          		JR      NZ,STR3A
	ld	a,$0a                       ; 0429A5 || 	ld	a,$0a                       ; 04296D || 0429A5 3E 0A       6888          		LD      A,10
	cp	b                           ; 0429A7 || 	cp	b                           ; 04296F || 0429A7 B8          6889  STR3A:			CP      B
	jr	c,$+$08                     ; 0429A8 || 	jr	c,$+$08                     ; 042970 || 0429A8 38 06       6890          		JR      C,STR34
	ld	d,b                         ; 0429AA || 	ld	d,b                         ; 042972 || 0429AA 50          6891          		LD      D,B
	ld	e,b                         ; 0429AB || 	ld	e,b                         ; 042973 || 0429AB 58          6892          		LD      E,B
	ld	a,b                         ; 0429AC || 	ld	a,b                         ; 042974 || 0429AC 78          6893  STR32:			LD      A,B
	add	a,$81                      ; 0429AD || 	add	a,$81                      ; 042975 || 0429AD C6 81       6894          		ADD     A,129
	ld	c,a                         ; 0429AF || 	ld	c,a                         ; 042977 || 0429AF 4F          6895          		LD      C,A
	set	7,d                        ; 0429B0 || 	set	7,d                        ; 042978 || 0429B0 CB FA       6896  STR34:			SET     7,D
	dec	e                          ; 0429B2 || 	dec	e                          ; 04297A || 0429B2 1D          6897          		DEC     E
	ld	a,d                         ; 0429B3 || 	ld	a,d                         ; 04297B || 0429B3 7A          6898  STR35:			LD      A,D
	cp	c                           ; 0429B4 || 	cp	c                           ; 04297C || 0429B4 B9          6899          		CP      C
	jr	nc,$+$10                    ; 0429B5 || 	jr	nc,$+$10                    ; 04297D || 0429B5 30 0E       6900          		JR      NC,STR33
	pop	af                         ; 0429B7 || 	pop	af                         ; 04297F || 0429B7 F1          6901  STR36:			POP     AF
	jr	z,$+$06                     ; 0429B8 || 	jr	z,$+$06                     ; 042980 || 0429B8 28 04       6902          		JR      Z,STR37
	jp	p,$0429c7                   ; 0429BA || 	jp	p,$04298f                   ; 042982 || 0429BA F2 C7 29 04 6903          		JP      P,STR38
	push	af                        ; 0429BE || 	push	af                        ; 042986 || 0429BE F5          6904  STR37:			PUSH    AF
	inc	e                          ; 0429BF || 	inc	e                          ; 042987 || 0429BF 1C          6905          		INC     E
	dec	e                          ; 0429C0 || 	dec	e                          ; 042988 || 0429C0 1D          6906          		DEC     E
	jp	m,$0429d8                   ; 0429C1 || 	jp	m,$0429a0                   ; 042989 || 0429C1 FA D8 29 04 6907          		JP      M,STR4
	ld	a,$30                       ; 0429C5 || 	ld	a,$30                       ; 04298D || 0429C5 3E 30       6908  STR33:			LD      A,'0'
	dec	d                          ; 0429C7 || 	dec	d                          ; 04298F || 0429C7 15          6909  STR38:			DEC     D
	jp	po,$0429cf                  ; 0429C8 || 	jp	po,$042997                  ; 042990 || 0429C8 E2 CF 29 04 6910          		JP      PO,STR39
	ld	(hl),$2e                    ; 0429CC || 	ld	(hl),$2e                    ; 042994 || 0429CC 36 2E       6911          		LD      (HL),'.'
	inc	hl                         ; 0429CE || 	inc	hl                         ; 042996 || 0429CE 23          6912          		INC     HL
	ld	(hl),a                      ; 0429CF || 	ld	(hl),a                      ; 042997 || 0429CF 77          6913  STR39:			LD      (HL),A
	inc	hl                         ; 0429D0 || 	inc	hl                         ; 042998 || 0429D0 23          6914          		INC     HL
	dec	e                          ; 0429D1 || 	dec	e                          ; 042999 || 0429D1 1D          6915          		DEC     E
	jp	p,$0429b3                   ; 0429D2 || 	jp	p,$04297b                   ; 04299A || 0429D2 F2 B3 29 04 6916          		JP      P,STR35
	jr	$-$1f                       ; 0429D6 || 	jr	$-$1f                       ; 04299E || 0429D6 18 DF       6917          		JR      STR36
	pop	af                         ; 0429D8 || 	pop	af                         ; 0429A0 || 0429D8 F1          6919  STR4:			POP     AF
	inc	c                          ; 0429D9 || 	inc	c                          ; 0429A1 || 0429D9 0C          6920  STR40:			INC     C
	ld	c,l                         ; 0429DA || 	ld	c,l                         ; 0429A2 || 0429DA 4D          6921          		LD      C,L
	jr	nz,$+$2a                    ; 0429DB || 	jr	nz,$+$2a                    ; 0429A3 || 0429DB 20 28       6922          		JR      NZ,STR44
	ld	(hl),$45                    ; 0429DD || 	ld	(hl),$45                    ; 0429A5 || 0429DD 36 45       6923          		LD      (HL),'E'        ;EXPONENT
	inc	hl                         ; 0429DF || 	inc	hl                         ; 0429A7 || 0429DF 23          6924          		INC     HL
	ld	a,b                         ; 0429E0 || 	ld	a,b                         ; 0429A8 || 0429E0 78          6925          		LD      A,B
	dec	a                          ; 0429E1 || 	dec	a                          ; 0429A9 || 0429E1 3D          6926          		DEC     A
	jp	p,$0429eb                   ; 0429E2 || 	jp	p,$0429b3                   ; 0429AA || 0429E2 F2 EB 29 04 6927          		JP      P,STR41
	ld	(hl),$2d                    ; 0429E6 || 	ld	(hl),$2d                    ; 0429AE || 0429E6 36 2D       6928          		LD      (HL),'-'
	inc	hl                         ; 0429E8 || 	inc	hl                         ; 0429B0 || 0429E8 23          6929          		INC     HL
	neg                            ; 0429E9 || 	neg                            ; 0429B1 || 0429E9 ED 44       6930          		NEG
	ld	(hl),$30                    ; 0429EB || 	ld	(hl),$30                    ; 0429B3 || 0429EB 36 30       6931  STR41:			LD      (HL),'0'
	jr	z,$+$17                     ; 0429ED || 	jr	z,$+$17                     ; 0429B5 || 0429ED 28 15       6932          		JR      Z,STR47
	cp	$0a                         ; 0429EF || 	cp	$0a                         ; 0429B7 || 0429EF FE 0A       6933          		CP      10
	ld	b,a                         ; 0429F1 || 	ld	b,a                         ; 0429B9 || 0429F1 47          6934          		LD      B,A
	ld	a,$3a                       ; 0429F2 || 	ld	a,$3a                       ; 0429BA || 0429F2 3E 3A       6935          		LD      A,':'
	jr	c,$+$05                     ; 0429F4 || 	jr	c,$+$05                     ; 0429BC || 0429F4 38 03       6936          		JR      C,STR42
	inc	hl                         ; 0429F6 || 	inc	hl                         ; 0429BE || 0429F6 23          6937          		INC     HL
	ld	(hl),$30                    ; 0429F7 || 	ld	(hl),$30                    ; 0429BF || 0429F7 36 30       6938          		LD      (HL),'0'
	inc	(hl)                       ; 0429F9 || 	inc	(hl)                       ; 0429C1 || 0429F9 34          6939  STR42:			INC     (HL)
	cp	(hl)                        ; 0429FA || 	cp	(hl)                        ; 0429C2 || 0429FA BE          6940          		CP      (HL)
	jr	nz,$+$07                    ; 0429FB || 	jr	nz,$+$07                    ; 0429C3 || 0429FB 20 05       6941          		JR      NZ,STR43
	ld	(hl),$30                    ; 0429FD || 	ld	(hl),$30                    ; 0429C5 || 0429FD 36 30       6942          		LD      (HL),'0'
	dec	hl                         ; 0429FF || 	dec	hl                         ; 0429C7 || 0429FF 2B          6943          		DEC     HL
	inc	(hl)                       ; 042A00 || 	inc	(hl)                       ; 0429C8 || 042A00 34          6944          		INC     (HL)
	inc	hl                         ; 042A01 || 	inc	hl                         ; 0429C9 || 042A01 23          6945          		INC     HL
	djnz	$-$09                     ; 042A02 || 	djnz	$-$09                     ; 0429CA || 042A02 10 F5       6946  STR43:			DJNZ    STR42
	inc	hl                         ; 042A04 || 	inc	hl                         ; 0429CC || 042A04 23          6947  STR47:			INC     HL
	ex	de,hl                       ; 042A05 || 	ex	de,hl                       ; 0429CD || 042A05 EB          6948  STR44:			EX      DE,HL
	ret                            ; 042A06 || 	ret                            ; 0429CE || 042A06 C9          6949        			RET
	ld	b,(ix+$04)                  ; 042A07 || 	ld	b,(ix+$04)                  ; 0429CF || 042A07 DD 46 04    6953  DLOAD5:			LD      B,(IX+4)
	exx                            ; 042A0A || 	exx                            ; 0429D2 || 042A0A D9          6954          		EXX
	ld	e,(ix)                      ; 042A0B || 	ld	e,(ix)                      ; 0429D3 || 042A0B DD 5E 00    6955          		LD      E,(IX+0)
	ld	d,(ix+$01)                  ; 042A0E || 	ld	d,(ix+$01)                  ; 0429D6 || 042A0E DD 56 01    6956          		LD      D,(IX+1)
	exx                            ; 042A11 || 	exx                            ; 0429D9 || 042A11 D9          6957          		EXX
	ld	e,(ix+$02)                  ; 042A12 || 	ld	e,(ix+$02)                  ; 0429DA || 042A12 DD 5E 02    6958          		LD      E,(IX+2)
	ld	d,(ix+$03)                  ; 042A15 || 	ld	d,(ix+$03)                  ; 0429DD || 042A15 DD 56 03    6959          		LD      D,(IX+3)
	ret                            ; 042A18 || 	ret                            ; 0429E0 || 042A18 C9          6960          		RET
	ld	b,(ix+$06)                  ; 042A19 || 	ld	b,(ix+$06)                  ; 0429E1 || 042A19 DD 46 06    6962  DLOAD5_SPL:		LD      B,(IX+6)
	exx                            ; 042A1C || 	exx                            ; 0429E4 || 042A1C D9          6963  			EXX
	ld	de,(ix)                     ; 042A1D || 	ld	de,(ix)                     ; 0429E5 || 042A1D DD 17 00    6964  			LD	DE, (IX+0)
	exx                            ; 042A20 || 	exx                            ; 0429E8 || 042A20 D9          6965  			EXX
	ld	de,(ix+$03)                 ; 042A21 || 	ld	de,(ix+$03)                 ; 0429E9 || 042A21 DD 17 03    6966  			LD	DE, (IX+3)
	ret                            ; 042A24 || 	ret                            ; 0429EC || 042A24 C9          6967  			RET
	call	$042c5b                   ; 042A25 || 	call	$042c23                   ; 0429ED || 042A25 CD 5B 2C 04 6975  CON_FP:			CALL    ZERO_FP            ;INITIALISE TO ZERO
	ld	c,$00                       ; 042A29 || 	ld	c,$00                       ; 0429F1 || 042A29 0E 00       6976          		LD      C,0             ;TRUNCATION COUNTER
	call	$042ab9                   ; 042A2B || 	call	$042a81                   ; 0429F3 || 042A2B CD B9 2A 04 6977          		CALL    UINT          ;GET INTEGER PART
	cp	$2e                         ; 042A2F || 	cp	$2e                         ; 0429F7 || 042A2F FE 2E       6978          		CP      '.'
	ld	b,$00                       ; 042A31 || 	ld	b,$00                       ; 0429F9 || 042A31 06 00       6979          		LD      B,0             ;DECL. PLACE COUNTER
	call	z,$042ab7                 ; 042A33 || 	call	z,$042a7f                 ; 0429FB || 042A33 CC B7 2A 04 6980          		CALL    Z,NUMBIX        ;GET FRACTION PART
	cp	$45                         ; 042A37 || 	cp	$45                         ; 0429FF || 042A37 FE 45       6981          		CP      'E'
	ld	a,$00                       ; 042A39 || 	ld	a,$00                       ; 042A01 || 042A39 3E 00       6982          		LD      A,0             ;INITIALISE EXPONENT
	call	z,$042a85                 ; 042A3B || 	call	z,$042a4d                 ; 042A03 || 042A3B CC 85 2A 04 6983          		CALL    Z,GETEXP        ;GET EXPONENT
	bit	7,h                        ; 042A3F || 	bit	7,h                        ; 042A07 || 042A3F CB 7C       6984          		BIT     7,H
	jr	nz,$+$0a                    ; 042A41 || 	jr	nz,$+$0a                    ; 042A09 || 042A41 20 08       6985          		JR      NZ,CON0         ;INTEGER OVERFLOW
	or	a                           ; 042A43 || 	or	a                           ; 042A0B || 042A43 B7          6986          		OR      A
	jr	nz,$+$07                    ; 042A44 || 	jr	nz,$+$07                    ; 042A0C || 042A44 20 05       6987          		JR      NZ,CON0         ;EXPONENT NON-ZERO
	cp	b                           ; 042A46 || 	cp	b                           ; 042A0E || 042A46 B8          6988          		CP      B
	jr	nz,$+$04                    ; 042A47 || 	jr	nz,$+$04                    ; 042A0F || 042A47 20 02       6989          		JR      NZ,CON0         ;DECIMAL POINT
	cp	c                           ; 042A49 || 	cp	c                           ; 042A11 || 042A49 B9          6990          		CP      C
	ret	z                          ; 042A4A || 	ret	z                          ; 042A12 || 042A4A C8          6991          		RET     Z               ;INTEGER
	sub	b                          ; 042A4B || 	sub	b                          ; 042A13 || 042A4B 90          6992  CON0:			SUB     B
	add	a,c                        ; 042A4C || 	add	a,c                        ; 042A14 || 042A4C 81          6993          		ADD     A,C
	ld	c,$9f                       ; 042A4D || 	ld	c,$9f                       ; 042A15 || 042A4D 0E 9F       6994          		LD      C,159
	call	$042bbe                   ; 042A4F || 	call	$042b86                   ; 042A17 || 042A4F CD BE 2B 04 6995          		CALL    FLOAT_
	res	7,h                        ; 042A53 || 	res	7,h                        ; 042A1B || 042A53 CB BC       6996          		RES     7,H             ;DITCH IMPLIED 1
	or	a                           ; 042A55 || 	or	a                           ; 042A1D || 042A55 B7          6997          		OR      A
	ret	z                          ; 042A56 || 	ret	z                          ; 042A1E || 042A56 C8          6998          		RET     Z               ;DONE
	jp	m,$042a65                   ; 042A57 || 	jp	m,$042a2d                   ; 042A1F || 042A57 FA 65 2A 04 6999          		JP      M,CON2          ;NEGATIVE EXPONENT
	call	$042d57                   ; 042A5B || 	call	$042d1f                   ; 042A23 || 042A5B CD 57 2D 04 7000          		CALL    POWR10
	call	$042346                   ; 042A5F || 	call	$04230e                   ; 042A27 || 042A5F CD 46 23 04 7001          		CALL    FMUL            ;SCALE
	xor	a                          ; 042A63 || 	xor	a                          ; 042A2B || 042A63 AF          7002          		XOR     A
	ret                            ; 042A64 || 	ret                            ; 042A2C || 042A64 C9          7003          		RET
	cp	$da                         ; 042A65 || 	cp	$da                         ; 042A2D || 042A65 FE DA       7004  CON2:			CP      -38
	jr	c,$+$0e                     ; 042A67 || 	jr	c,$+$0e                     ; 042A2F || 042A67 38 0C       7005          		JR      C,CON3          ;CAN'T SCALE IN ONE GO
	neg                            ; 042A69 || 	neg                            ; 042A31 || 042A69 ED 44       7006          		NEG
	call	$042d57                   ; 042A6B || 	call	$042d1f                   ; 042A33 || 042A6B CD 57 2D 04 7007          		CALL    POWR10
	call	$04229d                   ; 042A6F || 	call	$042265                   ; 042A37 || 042A6F CD 9D 22 04 7008          		CALL    FDIV            ;SCALE
	xor	a                          ; 042A73 || 	xor	a                          ; 042A3B || 042A73 AF          7009          		XOR     A
	ret                            ; 042A74 || 	ret                            ; 042A3C || 042A74 C9          7010          		RET
	push	af                        ; 042A75 || 	push	af                        ; 042A3D || 042A75 F5          7011  CON3:			PUSH    AF
	ld	a,$26                       ; 042A76 || 	ld	a,$26                       ; 042A3E || 042A76 3E 26       7012          		LD      A,38
	call	$042d57                   ; 042A78 || 	call	$042d1f                   ; 042A40 || 042A78 CD 57 2D 04 7013          		CALL    POWR10
	call	$04229d                   ; 042A7C || 	call	$042265                   ; 042A44 || 042A7C CD 9D 22 04 7014          		CALL    FDIV
	pop	af                         ; 042A80 || 	pop	af                         ; 042A48 || 042A80 F1          7015          		POP     AF
	add	a,$26                      ; 042A81 || 	add	a,$26                      ; 042A49 || 042A81 C6 26       7016          		ADD     A,38
	jr	$-$1e                       ; 042A83 || 	jr	$-$1e                       ; 042A4B || 042A83 18 E0       7017          		JR      CON2
	push	bc                        ; 042A85 || 	push	bc                        ; 042A4D || 042A85 C5          7027  GETEXP:			PUSH    BC              ;SAVE REGISTERS
	ld	b,a                         ; 042A86 || 	ld	b,a                         ; 042A4E || 042A86 47          7028          		LD      B,A             ;INITIAL VALUE
	ld	c,$02                       ; 042A87 || 	ld	c,$02                       ; 042A4F || 042A87 0E 02       7029          		LD      C,2             ;2 DIGITS MAX
	inc	ix                         ; 042A89 || 	inc	ix                         ; 042A51 || 042A89 DD 23       7030          		INC     IX              ;BUMP PAST 'E'
	call	$042e75                   ; 042A8B || 	call	$042e3d                   ; 042A53 || 042A8B CD 75 2E 04 7031          		CALL    SIGNQ
	ex	af,af'                      ; 042A8F || 	ex	af,af'                      ; 042A57 || 042A8F 08          7032          		EX      AF,AF'          ;SAVE EXPONENT SIGN
	call	$042e6b                   ; 042A90 || 	call	$042e33                   ; 042A58 || 042A90 CD 6B 2E 04 7033  GETEX1:			CALL    DIGITQ
	jr	c,$+$1a                     ; 042A94 || 	jr	c,$+$1a                     ; 042A5C || 042A94 38 18       7034          		JR      C,GETEX2
	ld	a,b                         ; 042A96 || 	ld	a,b                         ; 042A5E || 042A96 78          7035          		LD      A,B             ;B=B*10
	add	a,a                        ; 042A97 || 	add	a,a                        ; 042A5F || 042A97 87          7036          		ADD     A,A
	add	a,a                        ; 042A98 || 	add	a,a                        ; 042A60 || 042A98 87          7037          		ADD     A,A
	add	a,b                        ; 042A99 || 	add	a,b                        ; 042A61 || 042A99 80          7038          		ADD     A,B
	add	a,a                        ; 042A9A || 	add	a,a                        ; 042A62 || 042A9A 87          7039          		ADD     A,A
	ld	b,a                         ; 042A9B || 	ld	b,a                         ; 042A63 || 042A9B 47          7040          		LD      B,A
	ld	a,(ix)                      ; 042A9C || 	ld	a,(ix)                      ; 042A64 || 042A9C DD 7E 00    7041          		LD      A,(IX)          ;GET BACK DIGIT
	inc	ix                         ; 042A9F || 	inc	ix                         ; 042A67 || 042A9F DD 23       7042          		INC     IX
	and	$0f                        ; 042AA1 || 	and	$0f                        ; 042A69 || 042AA1 E6 0F       7043          		AND     0FH             ;MASK UNWANTED BITS
	add	a,b                        ; 042AA3 || 	add	a,b                        ; 042A6B || 042AA3 80          7044          		ADD     A,B             ;ADD IN DIGIT
	ld	b,a                         ; 042AA4 || 	ld	b,a                         ; 042A6C || 042AA4 47          7045          		LD      B,A
	dec	c                          ; 042AA5 || 	dec	c                          ; 042A6D || 042AA5 0D          7046          		DEC     C
	jp	p,$042a90                   ; 042AA6 || 	jp	p,$042a58                   ; 042A6E || 042AA6 F2 90 2A 04 7047          		JP      P,GETEX1
	ld	b,$64                       ; 042AAA || 	ld	b,$64                       ; 042A72 || 042AAA 06 64       7048          		LD      B,100           ;FORCE OVERFLOW
	jr	$-$1c                       ; 042AAC || 	jr	$-$1c                       ; 042A74 || 042AAC 18 E2       7049          		JR      GETEX1
	ex	af,af'                      ; 042AAE || 	ex	af,af'                      ; 042A76 || 042AAE 08          7050  GETEX2:			EX      AF,AF'          ;RESTORE SIGN
	cp	$2d                         ; 042AAF || 	cp	$2d                         ; 042A77 || 042AAF FE 2D       7051          		CP      '-'
	ld	a,b                         ; 042AB1 || 	ld	a,b                         ; 042A79 || 042AB1 78          7052          		LD      A,B
	pop	bc                         ; 042AB2 || 	pop	bc                         ; 042A7A || 042AB2 C1          7053          		POP     BC              ;RESTORE
	ret	nz                         ; 042AB3 || 	ret	nz                         ; 042A7B || 042AB3 C0          7054          		RET     NZ
	neg                            ; 042AB4 || 	neg                            ; 042A7C || 042AB4 ED 44       7055          		NEG                     ;NEGATE EXPONENT
	ret                            ; 042AB6 || 	ret                            ; 042A7E || 042AB6 C9          7056          		RET
	inc	ix                         ; 042AB7 || 	inc	ix                         ; 042A7F || 042AB7 DD 23       7069  NUMBIX:			INC     IX
	call	$042e6b                   ; 042AB9 || 	call	$042e33                   ; 042A81 || 042AB9 CD 6B 2E 04 7070  UINT:			CALL    DIGITQ
	ret	c                          ; 042ABD || 	ret	c                          ; 042A85 || 042ABD D8          7071          		RET     C
	inc	b                          ; 042ABE || 	inc	b                          ; 042A86 || 042ABE 04          7072          		INC     B               ;INCREMENT DIGIT COUNT
	inc	ix                         ; 042ABF || 	inc	ix                         ; 042A87 || 042ABF DD 23       7073          		INC     IX
	call	$042cb4                   ; 042AC1 || 	call	$042c7c                   ; 042A89 || 042AC1 CD B4 2C 04 7074          		CALL    X10             ;*10 & COPY OLD VALUE
	jr	c,$+$17                     ; 042AC5 || 	jr	c,$+$17                     ; 042A8D || 042AC5 38 15       7075          		JR      C,NUMB1         ;OVERFLOW
	dec	c                          ; 042AC7 || 	dec	c                          ; 042A8F || 042AC7 0D          7076          		DEC     C               ;SEE IF TRUNCATED
	inc	c                          ; 042AC8 || 	inc	c                          ; 042A90 || 042AC8 0C          7077          		INC     C
	jr	nz,$+$13                    ; 042AC9 || 	jr	nz,$+$13                    ; 042A91 || 042AC9 20 11       7078          		JR      NZ,NUMB1        ;IMPORTANT!
	and	$0f                        ; 042ACB || 	and	$0f                        ; 042A93 || 042ACB E6 0F       7079          		AND     0FH
	exx                            ; 042ACD || 	exx                            ; 042A95 || 042ACD D9          7080          		EXX
	ld	b,$00                       ; 042ACE || 	ld	b,$00                       ; 042A96 || 042ACE 06 00       7081          		LD      B,0
	ld	c,a                         ; 042AD0 || 	ld	c,a                         ; 042A98 || 042AD0 4F          7082          		LD      C,A
	add.sil	hl,bc                  ; 042AD1 || 	add.sil	hl,bc                  ; 042A99 || 042AD1 52 09       7083          		ADD.S   HL,BC           ;ADD IN DIGIT
	exx                            ; 042AD3 || 	exx                            ; 042A9B || 042AD3 D9          7084          		EXX
	jr	nc,$-$1b                    ; 042AD4 || 	jr	nc,$-$1b                    ; 042A9C || 042AD4 30 E3       7085          		JR      NC,UINT
	inc.sil	hl                     ; 042AD6 || 	inc.sil	hl                     ; 042A9E || 042AD6 52 23       7086          		INC.S   HL              ;CARRY
	ld	a,h                         ; 042AD8 || 	ld	a,h                         ; 042AA0 || 042AD8 7C          7087          		LD      A,H
	or	l                           ; 042AD9 || 	or	l                           ; 042AA1 || 042AD9 B5          7088          		OR      L
	jr	nz,$-$21                    ; 042ADA || 	jr	nz,$-$21                    ; 042AA2 || 042ADA 20 DD       7089          		JR      NZ,UINT
	inc	c                          ; 042ADC || 	inc	c                          ; 042AA4 || 042ADC 0C          7090  NUMB1:			INC     C               ;TRUNCATION COUNTER
	call	$042c12                   ; 042ADD || 	call	$042bda                   ; 042AA5 || 042ADD CD 12 2C 04 7091          		CALL    SWAP1           ;RESTORE PREVIOUS VALUE
	jr	$-$28                       ; 042AE1 || 	jr	$-$28                       ; 042AA9 || 042AE1 18 D6       7092          		JR      UINT
	ex	af,af'                      ; 042AE3 || 	ex	af,af'                      ; 042AAB || 042AE3 08          7102  FIX:			EX      AF,AF'
	xor	a                          ; 042AE4 || 	xor	a                          ; 042AAC || 042AE4 AF          7103          		XOR     A
	ex	af,af'                      ; 042AE5 || 	ex	af,af'                      ; 042AAD || 042AE5 08          7104          		EX      AF,AF'
	set	7,h                        ; 042AE6 || 	set	7,h                        ; 042AAE || 042AE6 CB FC       7105          		SET     7,H             ;IMPLIED 1
	call	$042c17                   ; 042AE8 || 	call	$042bdf                   ; 042AB0 || 042AE8 CD 17 2C 04 7106  FIX1:			CALL    DIV2
	cp	c                           ; 042AEC || 	cp	c                           ; 042AB4 || 042AEC B9          7107          		CP      C
	ret	z                          ; 042AED || 	ret	z                          ; 042AB5 || 042AED C8          7108          		RET     Z
	jp	nc,$042ae8                  ; 042AEE || 	jp	nc,$042ab0                  ; 042AB6 || 042AEE D2 E8 2A 04 7109          		JP      NC,FIX1
	jp	$042c26                     ; 042AF2 || 	jp	$042bee                     ; 042ABA || 042AF2 C3 26 2C 04 7110          		JP      OFLOW
	call	$042c0f                   ; 042AF6 || 	call	$042bd7                   ; 042ABE || 042AF6 CD 0F 2C 04 7120  FIX2:			CALL    SWAP_FP
	call	$042b02                   ; 042AFA || 	call	$042aca                   ; 042AC2 || 042AFA CD 02 2B 04 7121          		CALL    SFIX_FP
	call	$042c0f                   ; 042AFE || 	call	$042bd7                   ; 042AC6 || 042AFE CD 0F 2C 04 7122          		CALL    SWAP_FP
	dec	c                          ; 042B02 || 	dec	c                          ; 042ACA || 042B02 0D          7123  SFIX_FP:			DEC     C
	inc	c                          ; 042B03 || 	inc	c                          ; 042ACB || 042B03 0C          7124          		INC     C
	ret	z                          ; 042B04 || 	ret	z                          ; 042ACC || 042B04 C8          7125          		RET     Z               ;INTEGER/ZERO
	bit	7,h                        ; 042B05 || 	bit	7,h                        ; 042ACD || 042B05 CB 7C       7126          		BIT     7,H             ;SIGN
	push	af                        ; 042B07 || 	push	af                        ; 042ACF || 042B07 F5          7127          		PUSH    AF
	ld	a,$9f                       ; 042B08 || 	ld	a,$9f                       ; 042AD0 || 042B08 3E 9F       7128          		LD      A,159
	call	$042ae3                   ; 042B0A || 	call	$042aab                   ; 042AD2 || 042B0A CD E3 2A 04 7129          		CALL    FIX
	pop	af                         ; 042B0E || 	pop	af                         ; 042AD6 || 042B0E F1          7130          		POP     AF
	ld	c,$00                       ; 042B0F || 	ld	c,$00                       ; 042AD7 || 042B0F 0E 00       7131          		LD      C,0
	ret	z                          ; 042B11 || 	ret	z                          ; 042AD9 || 042B11 C8          7132          		RET     Z
	or	a                           ; 042B12 || 	or	a                           ; 042ADA || 042B12 B7          7133  NEGATE:			OR      A               ;CLEAR CARRY
	exx                            ; 042B13 || 	exx                            ; 042ADB || 042B13 D9          7134          		EXX
	push	de                        ; 042B14 || 	push	de                        ; 042ADC || 042B14 D5          7135  NEG0:			PUSH    DE
	ex	de,hl                       ; 042B15 || 	ex	de,hl                       ; 042ADD || 042B15 EB          7136          		EX      DE,HL
	ld	hl,$000000                  ; 042B16 || 	ld	hl,$000000                  ; 042ADE || 042B16 21 00 00 00 7137          		LD      HL,0
	sbc.sil	hl,de                  ; 042B1A || 	sbc.sil	hl,de                  ; 042AE2 || 042B1A 52 ED 52    7138          		SBC.S   HL,DE
	pop	de                         ; 042B1D || 	pop	de                         ; 042AE5 || 042B1D D1          7139          		POP     DE
	exx                            ; 042B1E || 	exx                            ; 042AE6 || 042B1E D9          7140          		EXX
	push	de                        ; 042B1F || 	push	de                        ; 042AE7 || 042B1F D5          7141          		PUSH    DE
	ex	de,hl                       ; 042B20 || 	ex	de,hl                       ; 042AE8 || 042B20 EB          7142          		EX      DE,HL
	ld	hl,$000000                  ; 042B21 || 	ld	hl,$000000                  ; 042AE9 || 042B21 21 00 00 00 7143          		LD      HL,0
	sbc.sil	hl,de                  ; 042B25 || 	sbc.sil	hl,de                  ; 042AED || 042B25 52 ED 52    7144          		SBC.S   HL,DE
	pop	de                         ; 042B28 || 	pop	de                         ; 042AF0 || 042B28 D1          7145          		POP     DE
	ret                            ; 042B29 || 	ret                            ; 042AF1 || 042B29 C9          7146          		RET
	exx                            ; 042B2A || 	exx                            ; 042AF2 || 042B2A D9          7152  NEG_:			EXX
	cpl                            ; 042B2B || 	cpl                            ; 042AF3 || 042B2B 2F          7153          		CPL
	push	hl                        ; 042B2C || 	push	hl                        ; 042AF4 || 042B2C E5          7154          		PUSH    HL
	or	a                           ; 042B2D || 	or	a                           ; 042AF5 || 042B2D B7          7155          		OR      A               ;CLEAR CARRY
	ld	hl,$000000                  ; 042B2E || 	ld	hl,$000000                  ; 042AF6 || 042B2E 21 00 00 00 7156          		LD      HL,0
	sbc.sil	hl,bc                  ; 042B32 || 	sbc.sil	hl,bc                  ; 042AFA || 042B32 52 ED 42    7157          		SBC.S   HL,BC
	ld	b,h                         ; 042B35 || 	ld	b,h                         ; 042AFD || 042B35 44          7158          		LD      B,H
	ld	c,l                         ; 042B36 || 	ld	c,l                         ; 042AFE || 042B36 4D          7159          		LD      C,L
	pop	hl                         ; 042B37 || 	pop	hl                         ; 042AFF || 042B37 E1          7160          		POP     HL
	jr	$-$24                       ; 042B38 || 	jr	$-$24                       ; 042B00 || 042B38 18 DA       7161          		JR      NEG0
	ld	a,$96                       ; 042B3A || 	ld	a,$96                       ; 042B02 || 042B3A 3E 96       7174  SCALE:			LD      A,150
	cp	c                           ; 042B3C || 	cp	c                           ; 042B04 || 042B3C B9          7175          		CP      C
	ld	a,$17                       ; 042B3D || 	ld	a,$17                       ; 042B05 || 042B3D 3E 17       7176          		LD      A,ACLOST
	jp	c,$0420b5                   ; 042B3F || 	jp	c,$04207d                   ; 042B07 || 042B3F DA B5 20 04 7177          		JP      C,ERROR_FP_         ;"Accuracy lost"
	call	$042680                   ; 042B43 || 	call	$042648                   ; 042B0B || 042B43 CD 80 26 04 7178          		CALL    PIBY4
	exx                            ; 042B47 || 	exx                            ; 042B0F || 042B47 D9          7179          		EXX
	ld	bc,$002169                  ; 042B48 || 	ld	bc,$002169                  ; 042B10 || 042B48 01 69 21 00 7180          		LD      BC,2169H        ;3.141592653589793238
	exx                            ; 042B4C || 	exx                            ; 042B14 || 042B4C D9          7181          		EXX
	set	7,d                        ; 042B4D || 	set	7,d                        ; 042B15 || 042B4D CB FA       7182  MOD48:			SET     7,D             ;IMPLIED 1
	set	7,h                        ; 042B4F || 	set	7,h                        ; 042B17 || 042B4F CB FC       7183          		SET     7,H
	ld	a,c                         ; 042B51 || 	ld	a,c                         ; 042B19 || 042B51 79          7184          		LD      A,C
	ld	c,$00                       ; 042B52 || 	ld	c,$00                       ; 042B1A || 042B52 0E 00       7185          		LD      C,0             ;INIT QUOTIENT
	ld	ix,$000000                  ; 042B54 || 	ld	ix,$000000                  ; 042B1C || 042B54 DD 21 00 00 7186          		LD      IX,0
	push	ix                        ; 042B59 || 	push	ix                        ; 042B21 || 042B59 DD E5       7187          		PUSH    IX              ;PUT ZERO ON STACK
	cp	b                           ; 042B5B || 	cp	b                           ; 042B23 || 042B5B B8          7188          		CP      B
	jr	c,$+$48                     ; 042B5C || 	jr	c,$+$48                     ; 042B24 || 042B5C 38 46       7189          		JR      C,MOD485        ;DIVIDEND<DIVISOR
	exx                            ; 042B5E || 	exx                            ; 042B26 || 042B5E D9          7190  MOD481:			EXX                     ;CARRY=0 HERE
	ex	(sp),hl                     ; 042B5F || 	ex	(sp),hl                     ; 042B27 || 042B5F E3          7191          		EX      (SP),HL
	sbc.sil	hl,bc                  ; 042B60 || 	sbc.sil	hl,bc                  ; 042B28 || 042B60 52 ED 42    7192          		SBC.S   HL,BC
	ex	(sp),hl                     ; 042B63 || 	ex	(sp),hl                     ; 042B2B || 042B63 E3          7193          		EX      (SP),HL
	sbc.sil	hl,de                  ; 042B64 || 	sbc.sil	hl,de                  ; 042B2C || 042B64 52 ED 52    7194          		SBC.S   HL,DE
	exx                            ; 042B67 || 	exx                            ; 042B2F || 042B67 D9          7195          		EXX
	sbc.sil	hl,de                  ; 042B68 || 	sbc.sil	hl,de                  ; 042B30 || 042B68 52 ED 52    7196          		SBC.S   HL,DE
	jr	nc,$+$0e                    ; 042B6B || 	jr	nc,$+$0e                    ; 042B33 || 042B6B 30 0C       7197          		JR      NC,MOD482       ;DIVIDEND>=DIVISOR
	exx                            ; 042B6D || 	exx                            ; 042B35 || 042B6D D9          7198          		EXX
	ex	(sp),hl                     ; 042B6E || 	ex	(sp),hl                     ; 042B36 || 042B6E E3          7199          		EX      (SP),HL
	add.sil	hl,bc                  ; 042B6F || 	add.sil	hl,bc                  ; 042B37 || 042B6F 52 09       7200          		ADD.S   HL,BC
	ex	(sp),hl                     ; 042B71 || 	ex	(sp),hl                     ; 042B39 || 042B71 E3          7201          		EX      (SP),HL
	adc.sil	hl,de                  ; 042B72 || 	adc.sil	hl,de                  ; 042B3A || 042B72 52 ED 5A    7202          		ADC.S   HL,DE
	exx                            ; 042B75 || 	exx                            ; 042B3D || 042B75 D9          7203          		EXX
	adc.sil	hl,de                  ; 042B76 || 	adc.sil	hl,de                  ; 042B3E || 042B76 52 ED 5A    7204          		ADC.S   HL,DE
	ccf                            ; 042B79 || 	ccf                            ; 042B41 || 042B79 3F          7205  MOD482:			CCF
	rl	c                           ; 042B7A || 	rl	c                           ; 042B42 || 042B7A CB 11       7206          		RL      C               ;QUOTIENT
	jr	nc,$+$04                    ; 042B7C || 	jr	nc,$+$04                    ; 042B44 || 042B7C 30 02       7207          		JR      NC,MOD483
	set	7,c                        ; 042B7E || 	set	7,c                        ; 042B46 || 042B7E CB F9       7208          		SET     7,C             ;STICKY BIT
	dec	a                          ; 042B80 || 	dec	a                          ; 042B48 || 042B80 3D          7209  MOD483:			DEC     A
	cp	b                           ; 042B81 || 	cp	b                           ; 042B49 || 042B81 B8          7210          		CP      B
	jr	c,$+$21                     ; 042B82 || 	jr	c,$+$21                     ; 042B4A || 042B82 38 1F       7211          		JR      C,MOD484        ;DIVIDEND<DIVISOR
	ex	(sp),hl                     ; 042B84 || 	ex	(sp),hl                     ; 042B4C || 042B84 E3          7212          		EX      (SP),HL
	add.sil	hl,hl                  ; 042B85 || 	add.sil	hl,hl                  ; 042B4D || 042B85 52 29       7213          		ADD.S   HL,HL           ;DIVIDEND * 2
	ex	(sp),hl                     ; 042B87 || 	ex	(sp),hl                     ; 042B4F || 042B87 E3          7214          		EX      (SP),HL
	exx                            ; 042B88 || 	exx                            ; 042B50 || 042B88 D9          7215          		EXX
	adc.sil	hl,hl                  ; 042B89 || 	adc.sil	hl,hl                  ; 042B51 || 042B89 52 ED 6A    7216          		ADC.S   HL,HL
	exx                            ; 042B8C || 	exx                            ; 042B54 || 042B8C D9          7217          		EXX
	adc.sil	hl,hl                  ; 042B8D || 	adc.sil	hl,hl                  ; 042B55 || 042B8D 52 ED 6A    7218          		ADC.S   HL,HL
	jr	nc,$-$32                    ; 042B90 || 	jr	nc,$-$32                    ; 042B58 || 042B90 30 CC       7219          		JR      NC,MOD481       ;AGAIN
	or	a                           ; 042B92 || 	or	a                           ; 042B5A || 042B92 B7          7220          		OR      A
	exx                            ; 042B93 || 	exx                            ; 042B5B || 042B93 D9          7221          		EXX
	ex	(sp),hl                     ; 042B94 || 	ex	(sp),hl                     ; 042B5C || 042B94 E3          7222          		EX      (SP),HL
	sbc.sil	hl,bc                  ; 042B95 || 	sbc.sil	hl,bc                  ; 042B5D || 042B95 52 ED 42    7223          		SBC.S   HL,BC           ;OVERFLOW, SO SUBTRACT
	ex	(sp),hl                     ; 042B98 || 	ex	(sp),hl                     ; 042B60 || 042B98 E3          7224          		EX      (SP),HL
	sbc.sil	hl,de                  ; 042B99 || 	sbc.sil	hl,de                  ; 042B61 || 042B99 52 ED 52    7225          		SBC.S   HL,DE
	exx                            ; 042B9C || 	exx                            ; 042B64 || 042B9C D9          7226          		EXX
	sbc.sil	hl,de                  ; 042B9D || 	sbc.sil	hl,de                  ; 042B65 || 042B9D 52 ED 52    7227          		SBC.S   HL,DE
	or	a                           ; 042BA0 || 	or	a                           ; 042B68 || 042BA0 B7          7228          		OR      A
	jr	$-$28                       ; 042BA1 || 	jr	$-$28                       ; 042B69 || 042BA1 18 D6       7229          		JR      MOD482
	inc	a                          ; 042BA3 || 	inc	a                          ; 042B6B || 042BA3 3C          7231  MOD484:			INC     A
	ld	e,c                         ; 042BA4 || 	ld	e,c                         ; 042B6C || 042BA4 59          7232  MOD485:			LD      E,C             ;QUOTIENT
	ld	c,a                         ; 042BA5 || 	ld	c,a                         ; 042B6D || 042BA5 4F          7233          		LD      C,A             ;REMAINDER EXPONENT
	exx                            ; 042BA6 || 	exx                            ; 042B6E || 042BA6 D9          7234          		EXX
	pop	bc                         ; 042BA7 || 	pop	bc                         ; 042B6F || 042BA7 C1          7235          		POP     BC
	exx                            ; 042BA8 || 	exx                            ; 042B70 || 042BA8 D9          7236          		EXX
	bit	7,h                        ; 042BA9 || 	bit	7,h                        ; 042B71 || 042BA9 CB 7C       7237  FLO48:			BIT     7,H
	ret	nz                         ; 042BAB || 	ret	nz                         ; 042B73 || 042BAB C0          7238          		RET     NZ
	exx                            ; 042BAC || 	exx                            ; 042B74 || 042BAC D9          7239          		EXX
	sla	c                          ; 042BAD || 	sla	c                          ; 042B75 || 042BAD CB 21       7240          		SLA     C
	rl	b                           ; 042BAF || 	rl	b                           ; 042B77 || 042BAF CB 10       7241          		RL      B
	adc.sil	hl,hl                  ; 042BB1 || 	adc.sil	hl,hl                  ; 042B79 || 042BB1 52 ED 6A    7242          		ADC.S   HL,HL
	exx                            ; 042BB4 || 	exx                            ; 042B7C || 042BB4 D9          7243          		EXX
	adc.sil	hl,hl                  ; 042BB5 || 	adc.sil	hl,hl                  ; 042B7D || 042BB5 52 ED 6A    7244          		ADC.S   HL,HL
	dec	c                          ; 042BB8 || 	dec	c                          ; 042B80 || 042BB8 0D          7245          		DEC     C
	jp	nz,$042ba9                  ; 042BB9 || 	jp	nz,$042b71                  ; 042B81 || 042BB9 C2 A9 2B 04 7246          		JP      NZ,FLO48
	ret                            ; 042BBD || 	ret                            ; 042B85 || 042BBD C9          7247          		RET
	bit	7,h                        ; 042BBE || 	bit	7,h                        ; 042B86 || 042BBE CB 7C       7253  FLOAT_:			BIT     7,H
	ret	nz                         ; 042BC0 || 	ret	nz                         ; 042B88 || 042BC0 C0          7254          		RET     NZ
	exx                            ; 042BC1 || 	exx                            ; 042B89 || 042BC1 D9          7255          		EXX                     ;SAME AS "X2"
	add.sil	hl,hl                  ; 042BC2 || 	add.sil	hl,hl                  ; 042B8A || 042BC2 52 29       7256          		ADD.S   HL,HL           ;TIME-CRITICAL
	exx                            ; 042BC4 || 	exx                            ; 042B8C || 042BC4 D9          7257          		EXX                     ;REGION
	adc.sil	hl,hl                  ; 042BC5 || 	adc.sil	hl,hl                  ; 042B8D || 042BC5 52 ED 6A    7258          		ADC.S   HL,HL           ;(BENCHMARKS)
	dec	c                          ; 042BC8 || 	dec	c                          ; 042B90 || 042BC8 0D          7259          		DEC     C
	jp	nz,$042bbe                  ; 042BC9 || 	jp	nz,$042b86                  ; 042B91 || 042BC9 C2 BE 2B 04 7260          		JP      NZ,FLOAT_
	ret                            ; 042BCD || 	ret                            ; 042B95 || 042BCD C9          7261          		RET
	ex	af,af'                      ; 042BCE || 	ex	af,af'                      ; 042B96 || 042BCE 08          7268  FLOATA:			EX      AF,AF'
	add	a,$2a                      ; 042BCF || 	add	a,$2a                      ; 042B97 || 042BCF C6 2A       7270          		ADD     A,RTABLE-DTABLE/3 ; ez80asm doesn't do nested expressions
	ex	af,af'                      ; 042BD1 || 	ex	af,af'                      ; 042B99 || 042BD1 08          7271          		EX      AF,AF'
	call	$042c0f                   ; 042BD2 || 	call	$042bd7                   ; 042B9A || 042BD2 CD 0F 2C 04 7272  FLOAT2:			CALL    SWAP_FP
	call	$042bde                   ; 042BD6 || 	call	$042ba6                   ; 042B9E || 042BD6 CD DE 2B 04 7273          		CALL    SFLOAT_FP
	call	$042c0f                   ; 042BDA || 	call	$042bd7                   ; 042BA2 || 042BDA CD 0F 2C 04 7274          		CALL    SWAP_FP
	dec	c                          ; 042BDE || 	dec	c                          ; 042BA6 || 042BDE 0D          7275  SFLOAT_FP:			DEC     C
	inc	c                          ; 042BDF || 	inc	c                          ; 042BA7 || 042BDF 0C          7276          		INC     C
	ret	nz                         ; 042BE0 || 	ret	nz                         ; 042BA8 || 042BE0 C0          7277          		RET     NZ              ;ALREADY FLOATING-POINT
	call	$042c37                   ; 042BE1 || 	call	$042bff                   ; 042BA9 || 042BE1 CD 37 2C 04 7278          		CALL    TEST_FP
	ret	z                          ; 042BE5 || 	ret	z                          ; 042BAD || 042BE5 C8          7279          		RET     Z               ;ZERO
	ld	a,h                         ; 042BE6 || 	ld	a,h                         ; 042BAE || 042BE6 7C          7280          		LD      A,H
	or	a                           ; 042BE7 || 	or	a                           ; 042BAF || 042BE7 B7          7281          		OR      A
	call	m,$042b12                 ; 042BE8 || 	call	m,$042ada                 ; 042BB0 || 042BE8 FC 12 2B 04 7282          		CALL    M,NEGATE
	ld	c,$9f                       ; 042BEC || 	ld	c,$9f                       ; 042BB4 || 042BEC 0E 9F       7283          		LD      C,159
	call	$042bbe                   ; 042BEE || 	call	$042b86                   ; 042BB6 || 042BEE CD BE 2B 04 7284          		CALL    FLOAT_
	or	a                           ; 042BF2 || 	or	a                           ; 042BBA || 042BF2 B7          7285          		OR      A
	ret	m                          ; 042BF3 || 	ret	m                          ; 042BBB || 042BF3 F8          7286          		RET     M               ;NEGATIVE
	res	7,h                        ; 042BF4 || 	res	7,h                        ; 042BBC || 042BF4 CB BC       7287          		RES     7,H
	ret                            ; 042BF6 || 	ret                            ; 042BBE || 042BF6 C9          7288          		RET
	exx                            ; 042BF7 || 	exx                            ; 042BBF || 042BF7 D9          7294  ADD1_FP:			EXX
	ld	bc,$000001                  ; 042BF8 || 	ld	bc,$000001                  ; 042BC0 || 042BF8 01 01 00 00 7295          		LD      BC,1
	add.sil	hl,bc                  ; 042BFC || 	add.sil	hl,bc                  ; 042BC4 || 042BFC 52 09       7296          		ADD.S   HL,BC
	exx                            ; 042BFE || 	exx                            ; 042BC6 || 042BFE D9          7297          		EXX
	ret	nc                         ; 042BFF || 	ret	nc                         ; 042BC7 || 042BFF D0          7298          		RET     NC
	push	bc                        ; 042C00 || 	push	bc                        ; 042BC8 || 042C00 C5          7299          		PUSH    BC
	ld	bc,$000001                  ; 042C01 || 	ld	bc,$000001                  ; 042BC9 || 042C01 01 01 00 00 7300          		LD      BC,1
	add.sil	hl,bc                  ; 042C05 || 	add.sil	hl,bc                  ; 042BCD || 042C05 52 09       7301          		ADD.S   HL,BC
	pop	bc                         ; 042C07 || 	pop	bc                         ; 042BCF || 042C07 C1          7302          		POP     BC
	ret                            ; 042C08 || 	ret                            ; 042BD0 || 042C08 C9          7303          		RET
	or	a                           ; 042C09 || 	or	a                           ; 042BD1 || 042C09 B7          7310  ODD:			OR      A               ;CLEAR CARRY
	exx                            ; 042C0A || 	exx                            ; 042BD2 || 042C0A D9          7311          		EXX
	set	0,l                        ; 042C0B || 	set	0,l                        ; 042BD3 || 042C0B CB C5       7312          		SET     0,L             ;MAKE ODD
	exx                            ; 042C0D || 	exx                            ; 042BD5 || 042C0D D9          7313          		EXX
	ret                            ; 042C0E || 	ret                            ; 042BD6 || 042C0E C9          7314          		RET
	ld	a,c                         ; 042C0F || 	ld	a,c                         ; 042BD7 || 042C0F 79          7322  SWAP_FP:			LD      A,C
	ld	c,b                         ; 042C10 || 	ld	c,b                         ; 042BD8 || 042C10 48          7323          		LD      C,B
	ld	b,a                         ; 042C11 || 	ld	b,a                         ; 042BD9 || 042C11 47          7324          		LD      B,A
	ex	de,hl                       ; 042C12 || 	ex	de,hl                       ; 042BDA || 042C12 EB          7325  SWAP1:			EX      DE,HL
	exx                            ; 042C13 || 	exx                            ; 042BDB || 042C13 D9          7326          		EXX
	ex	de,hl                       ; 042C14 || 	ex	de,hl                       ; 042BDC || 042C14 EB          7327          		EX      DE,HL
	exx                            ; 042C15 || 	exx                            ; 042BDD || 042C15 D9          7328          		EXX
	ret                            ; 042C16 || 	ret                            ; 042BDE || 042C16 C9          7329          		RET
	call	$042cd0                   ; 042C17 || 	call	$042c98                   ; 042BDF || 042C17 CD D0 2C 04 7335  DIV2:			CALL    D2
	exx                            ; 042C1B || 	exx                            ; 042BE3 || 042C1B D9          7336          		EXX
	rr	b                           ; 042C1C || 	rr	b                           ; 042BE4 || 042C1C CB 18       7337          		RR      B
	rr	c                           ; 042C1E || 	rr	c                           ; 042BE6 || 042C1E CB 19       7338          		RR      C
	ex	af,af'                      ; 042C20 || 	ex	af,af'                      ; 042BE8 || 042C20 08          7339          		EX      AF,AF'
	or	b                           ; 042C21 || 	or	b                           ; 042BE9 || 042C21 B0          7340          		OR      B
	ex	af,af'                      ; 042C22 || 	ex	af,af'                      ; 042BEA || 042C22 08          7341          		EX      AF,AF'
	exx                            ; 042C23 || 	exx                            ; 042BEB || 042C23 D9          7342          		EXX
	inc	c                          ; 042C24 || 	inc	c                          ; 042BEC || 042C24 0C          7343  INCC:			INC     C
	ret	nz                         ; 042C25 || 	ret	nz                         ; 042BED || 042C25 C0          7344          		RET     NZ
	ld	a,$14                       ; 042C26 || 	ld	a,$14                       ; 042BEE || 042C26 3E 14       7345  OFLOW:			LD      A,TOOBIG_FP
	jp	$0420b5                     ; 042C28 || 	jp	$04207d                     ; 042BF0 || 042C28 C3 B5 20 04 7346          		JP      ERROR_FP_           ;"Too big"
	call	$042c37                   ; 042C2C || 	call	$042bff                   ; 042BF4 || 042C2C CD 37 2C 04 7351  FTEST_FP:			CALL    TEST_FP
	ret	z                          ; 042C30 || 	ret	z                          ; 042BF8 || 042C30 C8          7352          		RET     Z
	ld	a,h                         ; 042C31 || 	ld	a,h                         ; 042BF9 || 042C31 7C          7353          		LD      A,H
	and	$80                        ; 042C32 || 	and	$80                        ; 042BFA || 042C32 E6 80       7354          		AND     10000000B
	or	$40                         ; 042C34 || 	or	$40                         ; 042BFC || 042C34 F6 40       7355          		OR      01000000B
	ret                            ; 042C36 || 	ret                            ; 042BFE || 042C36 C9          7356          		RET
	ld	a,h                         ; 042C37 || 	ld	a,h                         ; 042BFF || 042C37 7C          7362  TEST_FP:			LD      A,H
	or	l                           ; 042C38 || 	or	l                           ; 042C00 || 042C38 B5          7363          		OR      L
	exx                            ; 042C39 || 	exx                            ; 042C01 || 042C39 D9          7364          		EXX
	or	h                           ; 042C3A || 	or	h                           ; 042C02 || 042C3A B4          7365          		OR      H
	or	l                           ; 042C3B || 	or	l                           ; 042C03 || 042C3B B5          7366          		OR      L
	exx                            ; 042C3C || 	exx                            ; 042C04 || 042C3C D9          7367          		EXX
	ret                            ; 042C3D || 	ret                            ; 042C05 || 042C3D C9          7368          		RET
	ld	a,b                         ; 042C3E || 	ld	a,b                         ; 042C06 || 042C3E 78          7373  FCOMP_FP:			LD      A,B
	or	c                           ; 042C3F || 	or	c                           ; 042C07 || 042C3F B1          7374          		OR      C               ;Both integer?
	jr	nz,$+$0d                    ; 042C40 || 	jr	nz,$+$0d                    ; 042C08 || 042C40 20 0B       7375          		JR      NZ,FCOMP1
	call	$042c57                   ; 042C42 || 	call	$042c1f                   ; 042C0A || 042C42 CD 57 2C 04 7376          		CALL    ICP
	ld	a,$00                       ; 042C46 || 	ld	a,$00                       ; 042C0E || 042C46 3E 00       7377  FCOMP0:			LD      A,0
	ret	z                          ; 042C48 || 	ret	z                          ; 042C10 || 042C48 C8          7378          		RET     Z               ;Equal
	ld	a,$80                       ; 042C49 || 	ld	a,$80                       ; 042C11 || 042C49 3E 80       7379          		LD      A,80H
	rra                            ; 042C4B || 	rra                            ; 042C13 || 042C4B 1F          7380          		RRA
	ret                            ; 042C4C || 	ret                            ; 042C14 || 042C4C C9          7381          		RET
	call	$042bd2                   ; 042C4D || 	call	$042b9a                   ; 042C15 || 042C4D CD D2 2B 04 7383  FCOMP1:			CALL    FLOAT2          ;Float both
	call	$042c65                   ; 042C51 || 	call	$042c2d                   ; 042C19 || 042C51 CD 65 2C 04 7384          		CALL    FCP
	jr	$-$0f                       ; 042C55 || 	jr	$-$0f                       ; 042C1D || 042C55 18 EF       7385          		JR      FCOMP0
	call	$042c8a                   ; 042C57 || 	call	$042c52                   ; 042C1F || 042C57 CD 8A 2C 04 7395  ICP:			CALL    ICP1
	ld	a,$00                       ; 042C5B || 	ld	a,$00                       ; 042C23 || 042C5B 3E 00       7396  ZERO_FP:			LD      A,0
	exx                            ; 042C5D || 	exx                            ; 042C25 || 042C5D D9          7397          		EXX
	ld	h,a                         ; 042C5E || 	ld	h,a                         ; 042C26 || 042C5E 67          7398          		LD      H,A
	ld	l,a                         ; 042C5F || 	ld	l,a                         ; 042C27 || 042C5F 6F          7399  	       		LD      L,A
	exx                            ; 042C60 || 	exx                            ; 042C28 || 042C60 D9          7400          		EXX
	ld	h,a                         ; 042C61 || 	ld	h,a                         ; 042C29 || 042C61 67          7401        			LD      H,A
	ld	l,a                         ; 042C62 || 	ld	l,a                         ; 042C2A || 042C62 6F          7402       			LD      L,A
	ld	c,a                         ; 042C63 || 	ld	c,a                         ; 042C2B || 042C63 4F          7403  	    		LD      C,A
	ret                            ; 042C64 || 	ret                            ; 042C2C || 042C64 C9          7404          		RET
	call	$042c7c                   ; 042C65 || 	call	$042c44                   ; 042C2D || 042C65 CD 7C 2C 04 7406  FCP:			CALL    FCP1
	jr	$-$0e                       ; 042C69 || 	jr	$-$0e                       ; 042C31 || 042C69 18 F0       7407          		JR      ZERO_FP            ;PRESET FALSE
	ld	a,c                         ; 042C6B || 	ld	a,c                         ; 042C33 || 042C6B 79          7409  FCP0:			LD      A,C
	cp	b                           ; 042C6C || 	cp	b                           ; 042C34 || 042C6C B8          7410          		CP      B               ;COMPARE EXPONENTS
	ret	nz                         ; 042C6D || 	ret	nz                         ; 042C35 || 042C6D C0          7411          		RET     NZ
	sbc.sil	hl,de                  ; 042C6E || 	sbc.sil	hl,de                  ; 042C36 || 042C6E 52 ED 52    7413  			SBC.S   HL,DE           ;COMP MANTISSA MSB
	add.sil	hl,de                  ; 042C71 || 	add.sil	hl,de                  ; 042C39 || 042C71 52 19       7414          		ADD.S   HL,DE
	ret	nz                         ; 042C73 || 	ret	nz                         ; 042C3B || 042C73 C0          7415          		RET     NZ
	exx                            ; 042C74 || 	exx                            ; 042C3C || 042C74 D9          7416          		EXX
	sbc.sil	hl,de                  ; 042C75 || 	sbc.sil	hl,de                  ; 042C3D || 042C75 52 ED 52    7417          		SBC.S   HL,DE           ;COMP MANTISSA LSB
	add.sil	hl,de                  ; 042C78 || 	add.sil	hl,de                  ; 042C40 || 042C78 52 19       7418          		ADD.S   HL,DE
	exx                            ; 042C7A || 	exx                            ; 042C42 || 042C7A D9          7419          		EXX
	ret                            ; 042C7B || 	ret                            ; 042C43 || 042C7B C9          7420          		RET
	ld	a,h                         ; 042C7C || 	ld	a,h                         ; 042C44 || 042C7C 7C          7422  FCP1:			LD      A,H
	xor	d                          ; 042C7D || 	xor	d                          ; 042C45 || 042C7D AA          7423          		XOR     D
	ld	a,h                         ; 042C7E || 	ld	a,h                         ; 042C46 || 042C7E 7C          7424          		LD      A,H
	rla                            ; 042C7F || 	rla                            ; 042C47 || 042C7F 17          7425          		RLA
	ret	m                          ; 042C80 || 	ret	m                          ; 042C48 || 042C80 F8          7426          		RET     M
	jr	nc,$-$16                    ; 042C81 || 	jr	nc,$-$16                    ; 042C49 || 042C81 30 E8       7427          		JR      NC,FCP0
	call	$042c6b                   ; 042C83 || 	call	$042c33                   ; 042C4B || 042C83 CD 6B 2C 04 7428          		CALL    FCP0
	ret	z                          ; 042C87 || 	ret	z                          ; 042C4F || 042C87 C8          7429          		RET     Z               ;** V0.1 BUG FIX
	ccf                            ; 042C88 || 	ccf                            ; 042C50 || 042C88 3F          7430          		CCF
	ret                            ; 042C89 || 	ret                            ; 042C51 || 042C89 C9          7431          		RET
	ld	a,h                         ; 042C8A || 	ld	a,h                         ; 042C52 || 042C8A 7C          7433  ICP1:			LD      A,H
	xor	d                          ; 042C8B || 	xor	d                          ; 042C53 || 042C8B AA          7434          		XOR     D
	jp	p,$042c6e                   ; 042C8C || 	jp	p,$042c36                   ; 042C54 || 042C8C F2 6E 2C 04 7435          		JP      P,ICP0
	ld	a,h                         ; 042C90 || 	ld	a,h                         ; 042C58 || 042C90 7C          7436          		LD      A,H
	rla                            ; 042C91 || 	rla                            ; 042C59 || 042C91 17          7437          		RLA
	ret                            ; 042C92 || 	ret                            ; 042C5A || 042C92 C9          7438          		RET
	dec	b                          ; 042C93 || 	dec	b                          ; 042C5B || 042C93 05          7444  X10B:			DEC     B
	inc	c                          ; 042C94 || 	inc	c                          ; 042C5C || 042C94 0C          7445          		INC     C
	call	$042cdc                   ; 042C95 || 	call	$042ca4                   ; 042C5D || 042C95 CD DC 2C 04 7446  X5:			CALL    COPY0
	call	$042ccf                   ; 042C99 || 	call	$042c97                   ; 042C61 || 042C99 CD CF 2C 04 7447          		CALL    D2C
	call	$042ccf                   ; 042C9D || 	call	$042c97                   ; 042C65 || 042C9D CD CF 2C 04 7448          		CALL    D2C
	ex	af,af'                      ; 042CA1 || 	ex	af,af'                      ; 042C69 || 042CA1 08          7449          		EX      AF,AF'          ;SAVE CARRY
	exx                            ; 042CA2 || 	exx                            ; 042C6A || 042CA2 D9          7450  ADD_:			EXX
	add.sil	hl,de                  ; 042CA3 || 	add.sil	hl,de                  ; 042C6B || 042CA3 52 19       7451          		ADD.S   HL,DE
	exx                            ; 042CA5 || 	exx                            ; 042C6D || 042CA5 D9          7452          		EXX
	adc.sil	hl,de                  ; 042CA6 || 	adc.sil	hl,de                  ; 042C6E || 042CA6 52 ED 5A    7453          		ADC.S   HL,DE
	ret                            ; 042CA9 || 	ret                            ; 042C71 || 042CA9 C9          7454          		RET
	exx                            ; 042CAA || 	exx                            ; 042C72 || 042CAA D9          7460  SUB_:			EXX
	or	a                           ; 042CAB || 	or	a                           ; 042C73 || 042CAB B7          7461          		OR      A
	sbc.sil	hl,de                  ; 042CAC || 	sbc.sil	hl,de                  ; 042C74 || 042CAC 52 ED 52    7462          		SBC.S   HL,DE
	exx                            ; 042CAF || 	exx                            ; 042C77 || 042CAF D9          7463          		EXX
	sbc.sil	hl,de                  ; 042CB0 || 	sbc.sil	hl,de                  ; 042C78 || 042CB0 52 ED 52    7464          		SBC.S   HL,DE
	ret                            ; 042CB3 || 	ret                            ; 042C7B || 042CB3 C9          7465          		RET
	call	$042cdc                   ; 042CB4 || 	call	$042ca4                   ; 042C7C || 042CB4 CD DC 2C 04 7478  X10:			CALL    COPY0           ;DED'E'=HLH'L'
	call	$042cc7                   ; 042CB8 || 	call	$042c8f                   ; 042C80 || 042CB8 CD C7 2C 04 7479          		CALL    X2
	ret	c                          ; 042CBC || 	ret	c                          ; 042C84 || 042CBC D8          7480          		RET     C               ;TOO BIG
	call	$042cc7                   ; 042CBD || 	call	$042c8f                   ; 042C85 || 042CBD CD C7 2C 04 7481          		CALL    X2
	ret	c                          ; 042CC1 || 	ret	c                          ; 042C89 || 042CC1 D8          7482          		RET     C
	call	$042ca2                   ; 042CC2 || 	call	$042c6a                   ; 042C8A || 042CC2 CD A2 2C 04 7483          		CALL    ADD_
	ret	c                          ; 042CC6 || 	ret	c                          ; 042C8E || 042CC6 D8          7484          		RET     C
	exx                            ; 042CC7 || 	exx                            ; 042C8F || 042CC7 D9          7485  X2:			EXX
	add.sil	hl,hl                  ; 042CC8 || 	add.sil	hl,hl                  ; 042C90 || 042CC8 52 29       7486          		ADD.S   HL,HL
	exx                            ; 042CCA || 	exx                            ; 042C92 || 042CCA D9          7487          		EXX
	adc.sil	hl,hl                  ; 042CCB || 	adc.sil	hl,hl                  ; 042C93 || 042CCB 52 ED 6A    7488          		ADC.S   HL,HL
	ret                            ; 042CCE || 	ret                            ; 042C96 || 042CCE C9          7489          		RET
	inc	c                          ; 042CCF || 	inc	c                          ; 042C97 || 042CCF 0C          7495  D2C:			INC     C
	srl	h                          ; 042CD0 || 	srl	h                          ; 042C98 || 042CD0 CB 3C       7496  D2:			SRL     H
	rr	l                           ; 042CD2 || 	rr	l                           ; 042C9A || 042CD2 CB 1D       7497          		RR      L
	exx                            ; 042CD4 || 	exx                            ; 042C9C || 042CD4 D9          7498          		EXX
	rr	h                           ; 042CD5 || 	rr	h                           ; 042C9D || 042CD5 CB 1C       7499          		RR      H
	rr	l                           ; 042CD7 || 	rr	l                           ; 042C9F || 042CD7 CB 1D       7500          		RR      L
	exx                            ; 042CD9 || 	exx                            ; 042CA1 || 042CD9 D9          7501          		EXX
	ret                            ; 042CDA || 	ret                            ; 042CA2 || 042CDA C9          7502          		RET
	ld	b,c                         ; 042CDB || 	ld	b,c                         ; 042CA3 || 042CDB 41          7507  COPY_:			LD      B,C
	ld	d,h                         ; 042CDC || 	ld	d,h                         ; 042CA4 || 042CDC 54          7508  COPY0:			LD      D,H
	ld	e,l                         ; 042CDD || 	ld	e,l                         ; 042CA5 || 042CDD 5D          7509          		LD      E,L
	exx                            ; 042CDE || 	exx                            ; 042CA6 || 042CDE D9          7510          		EXX
	ld	d,h                         ; 042CDF || 	ld	d,h                         ; 042CA7 || 042CDF 54          7511          		LD      D,H
	ld	e,l                         ; 042CE0 || 	ld	e,l                         ; 042CA8 || 042CE0 5D          7512          		LD      E,L
	exx                            ; 042CE1 || 	exx                            ; 042CA9 || 042CE1 D9          7513          		EXX
	ret                            ; 042CE2 || 	ret                            ; 042CAA || 042CE2 C9          7514          		RET
	call	$042cdb                   ; 042CE3 || 	call	$042ca3                   ; 042CAB || 042CE3 CD DB 2C 04 7520  SQUARE:			CALL    COPY_
	call	$042346                   ; 042CE7 || 	call	$04230e                   ; 042CAF || 042CE7 CD 46 23 04 7521          		CALL    FMUL
	pop	ix                         ; 042CEB || 	pop	ix                         ; 042CB3 || 042CEB DD E1       7522  PUSH5:			POP     IX              ;RETURN ADDRESS
	push	bc                        ; 042CED || 	push	bc                        ; 042CB5 || 042CED C5          7523          		PUSH    BC
	push	hl                        ; 042CEE || 	push	hl                        ; 042CB6 || 042CEE E5          7524          		PUSH    HL
	exx                            ; 042CEF || 	exx                            ; 042CB7 || 042CEF D9          7525          		EXX
	push	hl                        ; 042CF0 || 	push	hl                        ; 042CB8 || 042CF0 E5          7526          		PUSH    HL
	exx                            ; 042CF1 || 	exx                            ; 042CB9 || 042CF1 D9          7527          		EXX
	jp	(ix)                        ; 042CF2 || 	jp	(ix)                        ; 042CBA || 042CF2 DD E9       7528          		JP      (IX)            ;"RETURN"
	pop	ix                         ; 042CF4 || 	pop	ix                         ; 042CBC || 042CF4 DD E1       7533  POP5:			POP     IX              ;RETURN ADDRESS
	exx                            ; 042CF6 || 	exx                            ; 042CBE || 042CF6 D9          7534          		EXX
	pop	de                         ; 042CF7 || 	pop	de                         ; 042CBF || 042CF7 D1          7535          		POP     DE
	exx                            ; 042CF8 || 	exx                            ; 042CC0 || 042CF8 D9          7536          		EXX
	pop	de                         ; 042CF9 || 	pop	de                         ; 042CC1 || 042CF9 D1          7537          		POP     DE
	ld	a,c                         ; 042CFA || 	ld	a,c                         ; 042CC2 || 042CFA 79          7538          		LD      A,C
	pop	bc                         ; 042CFB || 	pop	bc                         ; 042CC3 || 042CFB C1          7539          		POP     BC
	ld	b,c                         ; 042CFC || 	ld	b,c                         ; 042CC4 || 042CFC 41          7540          		LD      B,C
	ld	c,a                         ; 042CFD || 	ld	c,a                         ; 042CC5 || 042CFD 4F          7541          		LD      C,A
	jp	(ix)                        ; 042CFE || 	jp	(ix)                        ; 042CC6 || 042CFE DD E9       7542          		JP      (IX)            ;"RETURN"
	call	$042ceb                   ; 042D00 || 	call	$042cb3                   ; 042CC8 || 042D00 CD EB 2C 04 7549  RATIO:			CALL    PUSH5           ;SAVE X
	call	$042673                   ; 042D04 || 	call	$04263b                   ; 042CCC || 042D04 CD 73 26 04 7550          		CALL    DONE
	call	$042234                   ; 042D08 || 	call	$0421fc                   ; 042CD0 || 042D08 CD 34 22 04 7551          		CALL    FADD
	call	$042cf4                   ; 042D0C || 	call	$042cbc                   ; 042CD4 || 042D0C CD F4 2C 04 7552          		CALL    POP5            ;RESTORE X
	call	$042ceb                   ; 042D10 || 	call	$042cb3                   ; 042CD8 || 042D10 CD EB 2C 04 7553          		CALL    PUSH5           ;SAVE X+1
	call	$042c0f                   ; 042D14 || 	call	$042bd7                   ; 042CDC || 042D14 CD 0F 2C 04 7554          		CALL    SWAP_FP
	call	$042673                   ; 042D18 || 	call	$04263b                   ; 042CE0 || 042D18 CD 73 26 04 7555          		CALL    DONE
	call	$04221b                   ; 042D1C || 	call	$0421e3                   ; 042CE4 || 042D1C CD 1B 22 04 7556          		CALL    FSUB
	call	$042cf4                   ; 042D20 || 	call	$042cbc                   ; 042CE8 || 042D20 CD F4 2C 04 7557          		CALL    POP5            ;RESTORE X+1
	jp	$04229d                     ; 042D24 || 	jp	$042265                     ; 042CEC || 042D24 C3 9D 22 04 7558          		JP      FDIV
	ld	ix,$000003                  ; 042D28 || 	ld	ix,$000003                  ; 042CF0 || 042D28 DD 21 03 00 7569  POLY:			LD      IX, 3				; Advance the SP to the return address
	add	ix,sp                      ; 042D2D || 	add	ix,sp                      ; 042CF5 || 042D2D DD 39       7570          		ADD     IX, SP
	ex	(sp),ix                     ; 042D2F || 	ex	(sp),ix                     ; 042CF7 || 042D2F DD E3       7571          		EX      (SP), IX			; IX: Points to the inline list of coefficients
	call	$042a07                   ; 042D31 || 	call	$0429cf                   ; 042CF9 || 042D31 CD 07 2A 04 7573          		CALL    DLOAD5          		; Load the first coefficient from (IX)
	call	$042346                   ; 042D35 || 	call	$04230e                   ; 042CFD || 042D35 CD 46 23 04 7574  POLY1:			CALL    FMUL
	ld	de,$000005                  ; 042D39 || 	ld	de,$000005                  ; 042D01 || 042D39 11 05 00 00 7575          		LD      DE, 5				; Skip to the next coefficient
	add	ix,de                      ; 042D3D || 	add	ix,de                      ; 042D05 || 042D3D DD 19       7576          		ADD     IX, DE
	call	$042a07                   ; 042D3F || 	call	$0429cf                   ; 042D07 || 042D3F CD 07 2A 04 7577          		CALL    DLOAD5          		; Load the second coefficient from (IX)
	ex	(sp),ix                     ; 042D43 || 	ex	(sp),ix                     ; 042D0B || 042D43 DD E3       7578          		EX      (SP), IX			; Restore the SP just in case we need to return
	inc	b                          ; 042D45 || 	inc	b                          ; 042D0D || 042D45 04          7579          		INC     B
	dec	b                          ; 042D46 || 	dec	b                          ; 042D0E || 042D46 05          7580          		DEC     B               		; Test B for end byte (80h)
	jp	m,$042234                   ; 042D47 || 	jp	m,$0421fc                   ; 042D0F || 042D47 FA 34 22 04 7581          		JP      M,FADD				; Yes, so add and return
	call	$042234                   ; 042D4B || 	call	$0421fc                   ; 042D13 || 042D4B CD 34 22 04 7582          		CALL    FADD				; No, so add
	call	$042a19                   ; 042D4F || 	call	$0429e1                   ; 042D17 || 042D4F CD 19 2A 04 7583          		CALL    DLOAD5_SPL			; Load X from SP
	ex	(sp),ix                     ; 042D53 || 	ex	(sp),ix                     ; 042D1B || 042D53 DD E3       7584          		EX      (SP), IX			; IX: Points to the inline list of coefficients
	jr	$-$20                       ; 042D55 || 	jr	$-$20                       ; 042D1D || 042D55 18 DE       7585          		JR      POLY1				; And loop
	inc	a                          ; 042D57 || 	inc	a                          ; 042D1F || 042D57 3C          7594  POWR10:			INC     A
	ex	af,af'                      ; 042D58 || 	ex	af,af'                      ; 042D20 || 042D58 08          7595          		EX      AF,AF'
	push	hl                        ; 042D59 || 	push	hl                        ; 042D21 || 042D59 E5          7596          		PUSH    HL
	exx                            ; 042D5A || 	exx                            ; 042D22 || 042D5A D9          7597          		EXX
	push	hl                        ; 042D5B || 	push	hl                        ; 042D23 || 042D5B E5          7598          		PUSH    HL
	exx                            ; 042D5C || 	exx                            ; 042D24 || 042D5C D9          7599          		EXX
	call	$042673                   ; 042D5D || 	call	$04263b                   ; 042D25 || 042D5D CD 73 26 04 7600          		CALL    DONE
	call	$042c0f                   ; 042D61 || 	call	$042bd7                   ; 042D29 || 042D61 CD 0F 2C 04 7601          		CALL    SWAP_FP
	xor	a                          ; 042D65 || 	xor	a                          ; 042D2D || 042D65 AF          7602          		XOR     A
	ex	af,af'                      ; 042D66 || 	ex	af,af'                      ; 042D2E || 042D66 08          7603  POWR11:			EX      AF,AF'
	dec	a                          ; 042D67 || 	dec	a                          ; 042D2F || 042D67 3D          7604          		DEC     A
	jr	z,$+$28                     ; 042D68 || 	jr	z,$+$28                     ; 042D30 || 042D68 28 26       7605          		JR      Z,POWR14        ;EXIT TYPE 1
	jp	p,$042d72                   ; 042D6A || 	jp	p,$042d3a                   ; 042D32 || 042D6A F2 72 2D 04 7606          		JP      P,POWR13
	cp	c                           ; 042D6E || 	cp	c                           ; 042D36 || 042D6E B9          7607          		CP      C
	jr	c,$+$21                     ; 042D6F || 	jr	c,$+$21                     ; 042D37 || 042D6F 38 1F       7608          		JR      C,POWR14        ;EXIT TYPE 2
	inc	a                          ; 042D71 || 	inc	a                          ; 042D39 || 042D71 3C          7609          		INC     A
	ex	af,af'                      ; 042D72 || 	ex	af,af'                      ; 042D3A || 042D72 08          7610  POWR13:			EX      AF,AF'
	inc	a                          ; 042D73 || 	inc	a                          ; 042D3B || 042D73 3C          7611          		INC     A
	set	7,h                        ; 042D74 || 	set	7,h                        ; 042D3C || 042D74 CB FC       7612          		SET     7,H
	call	$042c95                   ; 042D76 || 	call	$042c5d                   ; 042D3E || 042D76 CD 95 2C 04 7613          		CALL    X5
	jr	nc,$+$08                    ; 042D7A || 	jr	nc,$+$08                    ; 042D42 || 042D7A 30 06       7614          		JR      NC,POWR12
	ex	af,af'                      ; 042D7C || 	ex	af,af'                      ; 042D44 || 042D7C 08          7615          		EX      AF,AF'
	call	$042ccf                   ; 042D7D || 	call	$042c97                   ; 042D45 || 042D7D CD CF 2C 04 7616          		CALL    D2C
	ex	af,af'                      ; 042D81 || 	ex	af,af'                      ; 042D49 || 042D81 08          7617          		EX      AF,AF'
	ex	af,af'                      ; 042D82 || 	ex	af,af'                      ; 042D4A || 042D82 08          7618  POWR12:			EX      AF,AF'
	call	c,$042bf7                 ; 042D83 || 	call	c,$042bbf                 ; 042D4B || 042D83 DC F7 2B 04 7619          		CALL    C,ADD1_FP          ;ROUND UP
	inc	c                          ; 042D87 || 	inc	c                          ; 042D4F || 042D87 0C          7620          		INC     C
	jp	m,$042d66                   ; 042D88 || 	jp	m,$042d2e                   ; 042D50 || 042D88 FA 66 2D 04 7621          		JP      M,POWR11
	jp	$042c26                     ; 042D8C || 	jp	$042bee                     ; 042D54 || 042D8C C3 26 2C 04 7622          		JP      OFLOW
	call	$042c0f                   ; 042D90 || 	call	$042bd7                   ; 042D58 || 042D90 CD 0F 2C 04 7623  POWR14:			CALL    SWAP_FP
	res	7,d                        ; 042D94 || 	res	7,d                        ; 042D5C || 042D94 CB BA       7624          		RES     7,D
	exx                            ; 042D96 || 	exx                            ; 042D5E || 042D96 D9          7625          		EXX
	pop	hl                         ; 042D97 || 	pop	hl                         ; 042D5F || 042D97 E1          7626          		POP     HL
	exx                            ; 042D98 || 	exx                            ; 042D60 || 042D98 D9          7627          		EXX
	pop	hl                         ; 042D99 || 	pop	hl                         ; 042D61 || 042D99 E1          7628          		POP     HL
	ex	af,af'                      ; 042D9A || 	ex	af,af'                      ; 042D62 || 042D9A 08          7629          		EX      AF,AF'
	ret                            ; 042D9B || 	ret                            ; 042D63 || 042D9B C9          7630          		RET
	or	a                           ; 042D9C || 	or	a                           ; 042D64 || 042D9C B7          7638  DIVA:			OR      A               ;CLEAR CARRY
	sbc.sil	hl,bc                  ; 042D9D || 	sbc.sil	hl,bc                  ; 042D65 || 042D9D 52 ED 42    7640  			SBC.S   HL,BC           ;DIVIDEND-DIVISOR
	exx                            ; 042DA0 || 	exx                            ; 042D68 || 042DA0 D9          7641          		EXX
	sbc.sil	hl,bc                  ; 042DA1 || 	sbc.sil	hl,bc                  ; 042D69 || 042DA1 52 ED 42    7642          		SBC.S   HL,BC
	exx                            ; 042DA4 || 	exx                            ; 042D6C || 042DA4 D9          7643          		EXX
	jr	nc,$+$09                    ; 042DA5 || 	jr	nc,$+$09                    ; 042D6D || 042DA5 30 07       7644          		JR      NC,DIV1
	add.sil	hl,bc                  ; 042DA7 || 	add.sil	hl,bc                  ; 042D6F || 042DA7 52 09       7645          		ADD.S   HL,BC           ;DIVIDEND+DIVISOR
	exx                            ; 042DA9 || 	exx                            ; 042D71 || 042DA9 D9          7646          		EXX
	adc.sil	hl,bc                  ; 042DAA || 	adc.sil	hl,bc                  ; 042D72 || 042DAA 52 ED 4A    7647          		ADC.S   HL,BC
	exx                            ; 042DAD || 	exx                            ; 042D75 || 042DAD D9          7648          		EXX
	ccf                            ; 042DAE || 	ccf                            ; 042D76 || 042DAE 3F          7649  DIV1:			CCF
	rl	e                           ; 042DAF || 	rl	e                           ; 042D77 || 042DAF CB 13       7650  DIVC:			RL      E               ;SHIFT RESULT INTO DE
	rl	d                           ; 042DB1 || 	rl	d                           ; 042D79 || 042DB1 CB 12       7651          		RL      D
	exx                            ; 042DB3 || 	exx                            ; 042D7B || 042DB3 D9          7652          		EXX
	rl	e                           ; 042DB4 || 	rl	e                           ; 042D7C || 042DB4 CB 13       7653          		RL      E
	rl	d                           ; 042DB6 || 	rl	d                           ; 042D7E || 042DB6 CB 12       7654          		RL      D
	exx                            ; 042DB8 || 	exx                            ; 042D80 || 042DB8 D9          7655          		EXX
	inc	a                          ; 042DB9 || 	inc	a                          ; 042D81 || 042DB9 3C          7656          		INC     A
	ret	p                          ; 042DBA || 	ret	p                          ; 042D82 || 042DBA F0          7657          		RET     P
	adc.sil	hl,hl                  ; 042DBB || 	adc.sil	hl,hl                  ; 042D83 || 042DBB 52 ED 6A    7659  			ADC.S   HL,HL           ;DIVIDEND*2
	exx                            ; 042DBE || 	exx                            ; 042D86 || 042DBE D9          7660          		EXX
	adc.sil	hl,hl                  ; 042DBF || 	adc.sil	hl,hl                  ; 042D87 || 042DBF 52 ED 6A    7661          		ADC.S   HL,HL
	exx                            ; 042DC2 || 	exx                            ; 042D8A || 042DC2 D9          7662          		EXX
	jr	nc,$-$26                    ; 042DC3 || 	jr	nc,$-$26                    ; 042D8B || 042DC3 30 D8       7663          		JR      NC,DIV0
	or	a                           ; 042DC5 || 	or	a                           ; 042D8D || 042DC5 B7          7664          		OR      A
	sbc.sil	hl,bc                  ; 042DC6 || 	sbc.sil	hl,bc                  ; 042D8E || 042DC6 52 ED 42    7665          		SBC.S   HL,BC           ;DIVIDEND-DIVISOR
	exx                            ; 042DC9 || 	exx                            ; 042D91 || 042DC9 D9          7666          		EXX
	sbc.sil	hl,bc                  ; 042DCA || 	sbc.sil	hl,bc                  ; 042D92 || 042DCA 52 ED 42    7667          		SBC.S   HL,BC
	exx                            ; 042DCD || 	exx                            ; 042D95 || 042DCD D9          7668          		EXX
	scf                            ; 042DCE || 	scf                            ; 042D96 || 042DCE 37          7669          		SCF
	jp	$042daf                     ; 042DCF || 	jp	$042d77                     ; 042D97 || 042DCF C3 AF 2D 04 7670          		JP      DIVC
	or	a                           ; 042DD3 || 	or	a                           ; 042D9B || 042DD3 B7          7678  MULA:			OR      A               ;CLEAR CARRY
	exx                            ; 042DD4 || 	exx                            ; 042D9C || 042DD4 D9          7679  MUL0:			EXX
	rr	d                           ; 042DD5 || 	rr	d                           ; 042D9D || 042DD5 CB 1A       7680          		RR      D               ;MULTIPLIER/2
	rr	e                           ; 042DD7 || 	rr	e                           ; 042D9F || 042DD7 CB 1B       7681          		RR      E
	exx                            ; 042DD9 || 	exx                            ; 042DA1 || 042DD9 D9          7682          		EXX
	rr	d                           ; 042DDA || 	rr	d                           ; 042DA2 || 042DDA CB 1A       7683          		RR      D
	rr	e                           ; 042DDC || 	rr	e                           ; 042DA4 || 042DDC CB 1B       7684          		RR      E
	jr	nc,$+$09                    ; 042DDE || 	jr	nc,$+$09                    ; 042DA6 || 042DDE 30 07       7685          		JR      NC,MUL1
	add.sil	hl,bc                  ; 042DE0 || 	add.sil	hl,bc                  ; 042DA8 || 042DE0 52 09       7686          		ADD.S   HL,BC           ;ADD IN MULTIPLICAND
	exx                            ; 042DE2 || 	exx                            ; 042DAA || 042DE2 D9          7687          		EXX
	adc.sil	hl,bc                  ; 042DE3 || 	adc.sil	hl,bc                  ; 042DAB || 042DE3 52 ED 4A    7688          		ADC.S   HL,BC
	exx                            ; 042DE6 || 	exx                            ; 042DAE || 042DE6 D9          7689          		EXX
	inc	a                          ; 042DE7 || 	inc	a                          ; 042DAF || 042DE7 3C          7690  MUL1:			INC     A
	ret	p                          ; 042DE8 || 	ret	p                          ; 042DB0 || 042DE8 F0          7691          		RET     P
	exx                            ; 042DE9 || 	exx                            ; 042DB1 || 042DE9 D9          7692  MULB:			EXX
	rr	h                           ; 042DEA || 	rr	h                           ; 042DB2 || 042DEA CB 1C       7693          		RR      H               ;PRODUCT/2
	rr	l                           ; 042DEC || 	rr	l                           ; 042DB4 || 042DEC CB 1D       7694          		RR      L
	exx                            ; 042DEE || 	exx                            ; 042DB6 || 042DEE D9          7695          		EXX
	rr	h                           ; 042DEF || 	rr	h                           ; 042DB7 || 042DEF CB 1C       7696          		RR      H
	rr	l                           ; 042DF1 || 	rr	l                           ; 042DB9 || 042DF1 CB 1D       7697          		RR      L
	jp	$042dd4                     ; 042DF3 || 	jp	$042d9c                     ; 042DBB || 042DF3 C3 D4 2D 04 7698          		JP      MUL0
	sbc.sil	hl,bc                  ; 042DF7 || 	sbc.sil	hl,bc                  ; 042DBF || 042DF7 52 ED 42    7707  			SBC.S   HL,BC
	exx                            ; 042DFA || 	exx                            ; 042DC2 || 042DFA D9          7708          		EXX
	sbc.sil	hl,bc                  ; 042DFB || 	sbc.sil	hl,bc                  ; 042DC3 || 042DFB 52 ED 42    7709          		SBC.S   HL,BC
	exx                            ; 042DFE || 	exx                            ; 042DC6 || 042DFE D9          7710          		EXX
	inc	c                          ; 042DFF || 	inc	c                          ; 042DC7 || 042DFF 0C          7711          		INC     C
	jr	nc,$+$0b                    ; 042E00 || 	jr	nc,$+$0b                    ; 042DC8 || 042E00 30 09       7712          		JR      NC,SQR2
	dec	c                          ; 042E02 || 	dec	c                          ; 042DCA || 042E02 0D          7713          		DEC     C
	add.sil	hl,bc                  ; 042E03 || 	add.sil	hl,bc                  ; 042DCB || 042E03 52 09       7714          		ADD.S   HL,BC
	exx                            ; 042E05 || 	exx                            ; 042DCD || 042E05 D9          7715          		EXX
	adc.sil	hl,bc                  ; 042E06 || 	adc.sil	hl,bc                  ; 042DCE || 042E06 52 ED 4A    7716          		ADC.S   HL,BC
	exx                            ; 042E09 || 	exx                            ; 042DD1 || 042E09 D9          7717          		EXX
	dec	c                          ; 042E0A || 	dec	c                          ; 042DD2 || 042E0A 0D          7718          		DEC     C
	inc	a                          ; 042E0B || 	inc	a                          ; 042DD3 || 042E0B 3C          7719  SQR2:			INC     A
	ret	p                          ; 042E0C || 	ret	p                          ; 042DD4 || 042E0C F0          7720          		RET     P
	sla	c                          ; 042E0D || 	sla	c                          ; 042DD5 || 042E0D CB 21       7721  SQRA:			SLA     C
	rl	b                           ; 042E0F || 	rl	b                           ; 042DD7 || 042E0F CB 10       7722          		RL      B
	exx                            ; 042E11 || 	exx                            ; 042DD9 || 042E11 D9          7723          		EXX
	rl	c                           ; 042E12 || 	rl	c                           ; 042DDA || 042E12 CB 11       7724          		RL      C
	rl	b                           ; 042E14 || 	rl	b                           ; 042DDC || 042E14 CB 10       7725          		RL      B
	exx                            ; 042E16 || 	exx                            ; 042DDE || 042E16 D9          7726          		EXX
	inc	c                          ; 042E17 || 	inc	c                          ; 042DDF || 042E17 0C          7727          		INC     C
	sla	e                          ; 042E18 || 	sla	e                          ; 042DE0 || 042E18 CB 23       7728          		SLA     E
	rl	d                           ; 042E1A || 	rl	d                           ; 042DE2 || 042E1A CB 12       7729          		RL      D
	exx                            ; 042E1C || 	exx                            ; 042DE4 || 042E1C D9          7730          		EXX
	rl	e                           ; 042E1D || 	rl	e                           ; 042DE5 || 042E1D CB 13       7731          		RL      E
	rl	d                           ; 042E1F || 	rl	d                           ; 042DE7 || 042E1F CB 12       7732          		RL      D
	exx                            ; 042E21 || 	exx                            ; 042DE9 || 042E21 D9          7733          		EXX
	adc.sil	hl,hl                  ; 042E22 || 	adc.sil	hl,hl                  ; 042DEA || 042E22 52 ED 6A    7734          		ADC.S   HL,HL
	exx                            ; 042E25 || 	exx                            ; 042DED || 042E25 D9          7735          		EXX
	adc.sil	hl,hl                  ; 042E26 || 	adc.sil	hl,hl                  ; 042DEE || 042E26 52 ED 6A    7736          		ADC.S   HL,HL
	exx                            ; 042E29 || 	exx                            ; 042DF1 || 042E29 D9          7737          		EXX
	sla	e                          ; 042E2A || 	sla	e                          ; 042DF2 || 042E2A CB 23       7738          		SLA     E
	rl	d                           ; 042E2C || 	rl	d                           ; 042DF4 || 042E2C CB 12       7739          		RL      D
	exx                            ; 042E2E || 	exx                            ; 042DF6 || 042E2E D9          7740          		EXX
	rl	e                           ; 042E2F || 	rl	e                           ; 042DF7 || 042E2F CB 13       7741          		RL      E
	rl	d                           ; 042E31 || 	rl	d                           ; 042DF9 || 042E31 CB 12       7742          		RL      D
	exx                            ; 042E33 || 	exx                            ; 042DFB || 042E33 D9          7743          		EXX
	adc.sil	hl,hl                  ; 042E34 || 	adc.sil	hl,hl                  ; 042DFC || 042E34 52 ED 6A    7744          		ADC.S   HL,HL
	exx                            ; 042E37 || 	exx                            ; 042DFF || 042E37 D9          7745          		EXX
	adc.sil	hl,hl                  ; 042E38 || 	adc.sil	hl,hl                  ; 042E00 || 042E38 52 ED 6A    7746          		ADC.S   HL,HL
	exx                            ; 042E3B || 	exx                            ; 042E03 || 042E3B D9          7747          		EXX
	jp	nc,$042df7                  ; 042E3C || 	jp	nc,$042dbf                  ; 042E04 || 042E3C D2 F7 2D 04 7748          		JP      NC,SQR1
	or	a                           ; 042E40 || 	or	a                           ; 042E08 || 042E40 B7          7749  SQR3:			OR      A
	sbc.sil	hl,bc                  ; 042E41 || 	sbc.sil	hl,bc                  ; 042E09 || 042E41 52 ED 42    7750          		SBC.S   HL,BC
	exx                            ; 042E44 || 	exx                            ; 042E0C || 042E44 D9          7751          		EXX
	sbc.sil	hl,bc                  ; 042E45 || 	sbc.sil	hl,bc                  ; 042E0D || 042E45 52 ED 42    7752          		SBC.S   HL,BC
	exx                            ; 042E48 || 	exx                            ; 042E10 || 042E48 D9          7753          		EXX
	inc	c                          ; 042E49 || 	inc	c                          ; 042E11 || 042E49 0C          7754          		INC     C
	jp	$042e0b                     ; 042E4A || 	jp	$042dd3                     ; 042E12 || 042E4A C3 0B 2E 04 7755          		JP      SQR2
	add.sil	hl,hl                  ; 042E4E || 	add.sil	hl,hl                  ; 042E16 || 042E4E 52 29       7758  			ADD.S   HL,HL
	exx                            ; 042E50 || 	exx                            ; 042E18 || 042E50 D9          7759          		EXX
	adc.sil	hl,hl                  ; 042E51 || 	adc.sil	hl,hl                  ; 042E19 || 042E51 52 ED 6A    7760          		ADC.S   HL,HL
	exx                            ; 042E54 || 	exx                            ; 042E1C || 042E54 D9          7761          		EXX
	jr	c,$-$15                     ; 042E55 || 	jr	c,$-$15                     ; 042E1D || 042E55 38 E9       7762          		JR      C,SQR3
	inc	a                          ; 042E57 || 	inc	a                          ; 042E1F || 042E57 3C          7763          		INC     A
	inc	c                          ; 042E58 || 	inc	c                          ; 042E20 || 042E58 0C          7764          		INC     C
	sbc.sil	hl,bc                  ; 042E59 || 	sbc.sil	hl,bc                  ; 042E21 || 042E59 52 ED 42    7765          		SBC.S   HL,BC
	exx                            ; 042E5C || 	exx                            ; 042E24 || 042E5C D9          7766          		EXX
	sbc.sil	hl,bc                  ; 042E5D || 	sbc.sil	hl,bc                  ; 042E25 || 042E5D 52 ED 42    7767          		SBC.S   HL,BC
	exx                            ; 042E60 || 	exx                            ; 042E28 || 042E60 D9          7768          		EXX
	ret	nc                         ; 042E61 || 	ret	nc                         ; 042E29 || 042E61 D0          7769          		RET     NC
	add.sil	hl,bc                  ; 042E62 || 	add.sil	hl,bc                  ; 042E2A || 042E62 52 09       7770          		ADD.S   HL,BC
	exx                            ; 042E64 || 	exx                            ; 042E2C || 042E64 D9          7771          		EXX
	adc.sil	hl,bc                  ; 042E65 || 	adc.sil	hl,bc                  ; 042E2D || 042E65 52 ED 4A    7772          		ADC.S   HL,BC
	exx                            ; 042E68 || 	exx                            ; 042E30 || 042E68 D9          7773          		EXX
	dec	c                          ; 042E69 || 	dec	c                          ; 042E31 || 042E69 0D          7774          		DEC     C
	ret                            ; 042E6A || 	ret                            ; 042E32 || 042E6A C9          7775          		RET
	ld	a,(ix)                      ; 042E6B || 	ld	a,(ix)                      ; 042E33 || 042E6B DD 7E 00    7777  DIGITQ:			LD      A,(IX)
	cp	$3a                         ; 042E6E || 	cp	$3a                         ; 042E36 || 042E6E FE 3A       7778          		CP      '9'+1
	ccf                            ; 042E70 || 	ccf                            ; 042E38 || 042E70 3F          7779          		CCF
	ret	c                          ; 042E71 || 	ret	c                          ; 042E39 || 042E71 D8          7780          		RET     C
	cp	$30                         ; 042E72 || 	cp	$30                         ; 042E3A || 042E72 FE 30       7781          		CP      '0'
	ret                            ; 042E74 || 	ret                            ; 042E3C || 042E74 C9          7782          		RET
	ld	a,(ix)                      ; 042E75 || 	ld	a,(ix)                      ; 042E3D || 042E75 DD 7E 00    7784  SIGNQ:			LD      A,(IX)
	inc	ix                         ; 042E78 || 	inc	ix                         ; 042E40 || 042E78 DD 23       7785          		INC     IX
	cp	$20                         ; 042E7A || 	cp	$20                         ; 042E42 || 042E7A FE 20       7786          		CP      ' '
	jr	z,$-$07                     ; 042E7C || 	jr	z,$-$07                     ; 042E44 || 042E7C 28 F7       7787          		JR      Z,SIGNQ
	cp	$2b                         ; 042E7E || 	cp	$2b                         ; 042E46 || 042E7E FE 2B       7788          		CP      '+'
	ret	z                          ; 042E80 || 	ret	z                          ; 042E48 || 042E80 C8          7789          		RET     Z
	cp	$2d                         ; 042E81 || 	cp	$2d                         ; 042E49 || 042E81 FE 2D       7790          		CP      '-'
	ret	z                          ; 042E83 || 	ret	z                          ; 042E4B || 042E83 C8          7791          		RET     Z
	dec	ix                         ; 042E84 || 	dec	ix                         ; 042E4C || 042E84 DD 2B       7792          		DEC     IX
	ret                            ; 042E86 || 	ret                            ; 042E4E || 042E86 C9          7793          		RET; --- End fpp.asm ---
	call	$043e4a                   ; 042E87 || 	call	$043df4                   ; 042E4F || 042E87 CD 4A 3E 04 7818  GPIOB_SETMODE:		CALL	SWITCH_A
	sbc	a,a                        ; 042E8B                                         || 042E8B 9F 2E       7819  			DW	GPIOB_M0	; Output
	ld	l,$c4                       ; 042E8C || 	ld	l,$8c                       ; 042E54
	ld	l,$e4                       ; 042E8E || 	ld	l,$ac                       ; 042E56
	ld	l,$04                       ; 042E90
	cpl                            ; 042E92
	rra                            ; 042E93                                         || 042E93 1F 2F       7823  			DW	GPIOB_M4	; Interrupt, Dual Edge
	cpl                            ; 042E94
	ld	c,e                         ; 042E95                                         || 042E95 4B 2F       7824  			DW	GPIOB_M5	; Alt Function
	cpl                            ; 042E96
	ld	h,(hl)                      ; 042E97                                         || 042E97 66 2F       7825  			DW	GPIOB_M6	; Interrupt, Active Low
	cpl                            ; 042E98
	adc	a,l                        ; 042E99                                         || 042E99 8D 2F       7826  			DW	GPIOB_M7	; Interrupt, Active High
	cpl                            ; 042E9A
	xor	a                          ; 042E9B                                         || 042E9B AF 2F       7827  			DW	GPIOB_M8	; Interrupt, Falling Edge
	cpl                            ; 042E9C
	pop	de                         ; 042E9D                                         || 042E9D D1 2F       7828  			DW	GPIOB_M9	; Interrupt, Rising Edge
	cpl                            ; 042E9E
	push	bc                        ; 042E9F                                         || 042E9F C5          0001M 		PUSH	BC
	ld	a,b                         ; 042EA0                                         || 042EA0 78          0002M 		LD	A, val
	cpl                            ; 042EA1 || 	cpl                            ; 042E69 || 042EA1 2F          0003M 		CPL
	ld	c,a                         ; 042EA2 || 	ld	c,a                         ; 042E6A || 042EA2 4F          0004M 		LD	C, A
	in0	a,($9b)                    ; 042EA3 || 	in0	a,($9b)                    ; 042E6B || 042EA3 ED 38 9B    0005M 		IN0	A, (reg)
	and	c                          ; 042EA6 || 	and	c                          ; 042E6E || 042EA6 A1          0006M 		AND	C
	out0	($9b),a                   ; 042EA7 || 	out0	($9b),a                   ; 042E6F || 042EA7 ED 39 9B    0007M 		OUT0	(reg), A
	pop	bc                         ; 042EAA || 	pop	bc                         ; 042E72 || 042EAA C1          0008M 		POP	BC
	push	bc                        ; 042EAB || 	push	bc                        ; 042E73 || 042EAB C5          0001M 		PUSH	BC
	ld	a,b                         ; 042EAC || 	ld	a,b                         ; 042E74 || 042EAC 78          0002M 		LD	A, val
	cpl                            ; 042EAD || 	cpl                            ; 042E75 || 042EAD 2F          0003M 		CPL
	ld	c,a                         ; 042EAE || 	ld	c,a                         ; 042E76 || 042EAE 4F          0004M 		LD	C, A
	in0	a,($9c)                    ; 042EAF || 	in0	a,($9c)                    ; 042E77 || 042EAF ED 38 9C    0005M 		IN0	A, (reg)
	and	c                          ; 042EB2 || 	and	c                          ; 042E7A || 042EB2 A1          0006M 		AND	C
	out0	($9c),a                   ; 042EB3 || 	out0	($9c),a                   ; 042E7B || 042EB3 ED 39 9C    0007M 		OUT0	(reg), A
	pop	bc                         ; 042EB6 || 	pop	bc                         ; 042E7E || 042EB6 C1          0008M 		POP	BC
	push	bc                        ; 042EB7 || 	push	bc                        ; 042E7F || 042EB7 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042EB8 || 	ld	a,b                         ; 042E80 || 042EB8 78          0002M 		LD	A, val
	cpl                            ; 042EB9 || 	cpl                            ; 042E81 || 042EB9 2F          0003M 		CPL
	ld	c,a                         ; 042EBA || 	ld	c,a                         ; 042E82 || 042EBA 4F          0004M 		LD	C, A
	in0	a,($9d)                    ; 042EBB || 	in0	a,($9d)                    ; 042E83 || 042EBB ED 38 9D    0005M 		IN0	A, (reg)
	and	c                          ; 042EBE || 	and	c                          ; 042E86 || 042EBE A1          0006M 		AND	C
	out0	($9d),a                   ; 042EBF || 	out0	($9d),a                   ; 042E87 || 042EBF ED 39 9D    0007M 		OUT0	(reg), A
	pop	bc                         ; 042EC2 || 	pop	bc                         ; 042E8A || 042EC2 C1          0008M 		POP	BC
	ret                            ; 042EC3 || 	ret                            ; 042E8B || 042EC3 C9          7835  			RET
	in0	a,($9b)                    ; 042EC4 || 	in0	a,($9b)                    ; 042E8C || 042EC4 ED 38 9B    0001M 		IN0	A, (reg)
	or	b                           ; 042EC7 || 	or	b                           ; 042E8F || 042EC7 B0          0002M 		OR	val
	out0	($9b),a                   ; 042EC8 || 	out0	($9b),a                   ; 042E90 || 042EC8 ED 39 9B    0003M 		OUT0	(reg), A
	push	bc                        ; 042ECB || 	push	bc                        ; 042E93 || 042ECB C5          0001M 		PUSH	BC
	ld	a,b                         ; 042ECC || 	ld	a,b                         ; 042E94 || 042ECC 78          0002M 		LD	A, val
	cpl                            ; 042ECD || 	cpl                            ; 042E95 || 042ECD 2F          0003M 		CPL
	ld	c,a                         ; 042ECE || 	ld	c,a                         ; 042E96 || 042ECE 4F          0004M 		LD	C, A
	in0	a,($9c)                    ; 042ECF || 	in0	a,($9c)                    ; 042E97 || 042ECF ED 38 9C    0005M 		IN0	A, (reg)
	and	c                          ; 042ED2 || 	and	c                          ; 042E9A || 042ED2 A1          0006M 		AND	C
	out0	($9c),a                   ; 042ED3 || 	out0	($9c),a                   ; 042E9B || 042ED3 ED 39 9C    0007M 		OUT0	(reg), A
	pop	bc                         ; 042ED6 || 	pop	bc                         ; 042E9E || 042ED6 C1          0008M 		POP	BC
	push	bc                        ; 042ED7 || 	push	bc                        ; 042E9F || 042ED7 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042ED8 || 	ld	a,b                         ; 042EA0 || 042ED8 78          0002M 		LD	A, val
	cpl                            ; 042ED9 || 	cpl                            ; 042EA1 || 042ED9 2F          0003M 		CPL
	ld	c,a                         ; 042EDA || 	ld	c,a                         ; 042EA2 || 042EDA 4F          0004M 		LD	C, A
	in0	a,($9d)                    ; 042EDB || 	in0	a,($9d)                    ; 042EA3 || 042EDB ED 38 9D    0005M 		IN0	A, (reg)
	and	c                          ; 042EDE || 	and	c                          ; 042EA6 || 042EDE A1          0006M 		AND	C
	out0	($9d),a                   ; 042EDF || 	out0	($9d),a                   ; 042EA7 || 042EDF ED 39 9D    0007M 		OUT0	(reg), A
	pop	bc                         ; 042EE2 || 	pop	bc                         ; 042EAA || 042EE2 C1          0008M 		POP	BC
	ret                            ; 042EE3 || 	ret                            ; 042EAB || 042EE3 C9          7842  			RET
	push	bc                        ; 042EE4 || 	push	bc                        ; 042EAC || 042EE4 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042EE5 || 	ld	a,b                         ; 042EAD || 042EE5 78          0002M 		LD	A, val
	cpl                            ; 042EE6 || 	cpl                            ; 042EAE || 042EE6 2F          0003M 		CPL
	ld	c,a                         ; 042EE7 || 	ld	c,a                         ; 042EAF || 042EE7 4F          0004M 		LD	C, A
	in0	a,($9b)                    ; 042EE8 || 	in0	a,($9b)                    ; 042EB0 || 042EE8 ED 38 9B    0005M 		IN0	A, (reg)
	and	c                          ; 042EEB || 	and	c                          ; 042EB3 || 042EEB A1          0006M 		AND	C
	out0	($9b),a                   ; 042EEC || 	out0	($9b),a                   ; 042EB4 || 042EEC ED 39 9B    0007M 		OUT0	(reg), A
	pop	bc                         ; 042EEF || 	pop	bc                         ; 042EB7 || 042EEF C1          0008M 		POP	BC
	in0	a,($9c)                    ; 042EF0 || 	in0	a,($9c)                    ; 042EB8 || 042EF0 ED 38 9C    0001M 		IN0	A, (reg)
	or	b                           ; 042EF3 || 	or	b                           ; 042EBB || 042EF3 B0          0002M 		OR	val
	out0	($9c),a                   ; 042EF4 || 	out0	($9c),a                   ; 042EBC || 042EF4 ED 39 9C    0003M 		OUT0	(reg), A
	push	bc                        ; 042EF7 || 	push	bc                        ; 042EBF || 042EF7 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042EF8 || 	ld	a,b                         ; 042EC0 || 042EF8 78          0002M 		LD	A, val
	cpl                            ; 042EF9 || 	cpl                            ; 042EC1 || 042EF9 2F          0003M 		CPL
	ld	c,a                         ; 042EFA || 	ld	c,a                         ; 042EC2 || 042EFA 4F          0004M 		LD	C, A
	in0	a,($9d)                    ; 042EFB || 	in0	a,($9d)                    ; 042EC3 || 042EFB ED 38 9D    0005M 		IN0	A, (reg)
	and	c                          ; 042EFE || 	and	c                          ; 042EC6 || 042EFE A1          0006M 		AND	C
	out0	($9d),a                   ; 042EFF || 	out0	($9d),a                   ; 042EC7 || 042EFF ED 39 9D    0007M 		OUT0	(reg), A
	pop	bc                         ; 042F02 || 	pop	bc                         ; 042ECA || 042F02 C1          0008M 		POP	BC
	ret                            ; 042F03 || 	ret                            ; 042ECB || 042F03 C9          7849  			RET
	in0	a,($9b)                    ; 042F04 || 	in0	a,($9b)                    ; 042ECC || 042F04 ED 38 9B    0001M 		IN0	A, (reg)
	or	b                           ; 042F07 || 	or	b                           ; 042ECF || 042F07 B0          0002M 		OR	val
	out0	($9b),a                   ; 042F08 || 	out0	($9b),a                   ; 042ED0 || 042F08 ED 39 9B    0003M 		OUT0	(reg), A
	in0	a,($9c)                    ; 042F0B || 	in0	a,($9c)                    ; 042ED3 || 042F0B ED 38 9C    0001M 		IN0	A, (reg)
	or	b                           ; 042F0E || 	or	b                           ; 042ED6 || 042F0E B0          0002M 		OR	val
	out0	($9c),a                   ; 042F0F || 	out0	($9c),a                   ; 042ED7 || 042F0F ED 39 9C    0003M 		OUT0	(reg), A
	push	bc                        ; 042F12 || 	push	bc                        ; 042EDA || 042F12 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042F13 || 	ld	a,b                         ; 042EDB || 042F13 78          0002M 		LD	A, val
	cpl                            ; 042F14 || 	cpl                            ; 042EDC || 042F14 2F          0003M 		CPL
	ld	c,a                         ; 042F15 || 	ld	c,a                         ; 042EDD || 042F15 4F          0004M 		LD	C, A
	in0	a,($9d)                    ; 042F16 || 	in0	a,($9d)                    ; 042EDE || 042F16 ED 38 9D    0005M 		IN0	A, (reg)
	and	c                          ; 042F19 || 	and	c                          ; 042EE1 || 042F19 A1          0006M 		AND	C
	out0	($9d),a                   ; 042F1A || 	out0	($9d),a                   ; 042EE2 || 042F1A ED 39 9D    0007M 		OUT0	(reg), A
	pop	bc                         ; 042F1D || 	pop	bc                         ; 042EE5 || 042F1D C1          0008M 		POP	BC
	ret                            ; 042F1E || 	ret                            ; 042EE6 || 042F1E C9          7856  			RET
	in0	a,($9a)                    ; 042F1F || 	in0	a,($9a)                    ; 042EE7 || 042F1F ED 38 9A    0001M 		IN0	A, (reg)
	or	b                           ; 042F22 || 	or	b                           ; 042EEA || 042F22 B0          0002M 		OR	val
	out0	($9a),a                   ; 042F23 || 	out0	($9b),a                   ; 042E90 || 042F23 ED 39 9A    0003M 		OUT0	(reg), A
	push	bc                        ; 042F26 || 	push	bc                        ; 042E93 || 042F26 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042F27 || 	ld	a,b                         ; 042E94 || 042F27 78          0002M 		LD	A, val
	cpl                            ; 042F28 || 	cpl                            ; 042E95 || 042F28 2F          0003M 		CPL
	ld	c,a                         ; 042F29 || 	ld	c,a                         ; 042E96 || 042F29 4F          0004M 		LD	C, A
	in0	a,($9b)                    ; 042F2A || 	in0	a,($9c)                    ; 042E97 || 042F2A ED 38 9B    0005M 		IN0	A, (reg)
	and	c                          ; 042F2D || 	and	c                          ; 042E9A || 042F2D A1          0006M 		AND	C
	out0	($9b),a                   ; 042F2E || 	out0	($9c),a                   ; 042E9B || 042F2E ED 39 9B    0007M 		OUT0	(reg), A
	pop	bc                         ; 042F31 || 	pop	bc                         ; 042E9E || 042F31 C1          0008M 		POP	BC
	push	bc                        ; 042F32 || 	push	bc                        ; 042E9F || 042F32 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042F33 || 	ld	a,b                         ; 042EA0 || 042F33 78          0002M 		LD	A, val
	cpl                            ; 042F34 || 	cpl                            ; 042EA1 || 042F34 2F          0003M 		CPL
	ld	c,a                         ; 042F35 || 	ld	c,a                         ; 042EA2 || 042F35 4F          0004M 		LD	C, A
	in0	a,($9c)                    ; 042F36 || 	in0	a,($9d)                    ; 042EA3 || 042F36 ED 38 9C    0005M 		IN0	A, (reg)
	and	c                          ; 042F39 || 	and	c                          ; 042EA6 || 042F39 A1          0006M 		AND	C
	out0	($9c),a                   ; 042F3A || 	out0	($9d),a                   ; 042EA7 || 042F3A ED 39 9C    0007M 		OUT0	(reg), A
	pop	bc                         ; 042F3D || 	pop	bc                         ; 042E7E || 042F3D C1          0008M 		POP	BC
	push	bc                        ; 042F3E || 	push	bc                        ; 042E7F || 042F3E C5          0001M 		PUSH	BC
	ld	a,b                         ; 042F3F || 	ld	a,b                         ; 042E80 || 042F3F 78          0002M 		LD	A, val
	cpl                            ; 042F40 || 	cpl                            ; 042E81 || 042F40 2F          0003M 		CPL
	ld	c,a                         ; 042F41 || 	ld	c,a                         ; 042E82 || 042F41 4F          0004M 		LD	C, A
	in0	a,($9d)                    ; 042F42 || 	in0	a,($9d)                    ; 042E83 || 042F42 ED 38 9D    0005M 		IN0	A, (reg)
	and	c                          ; 042F45 || 	and	c                          ; 042E86 || 042F45 A1          0006M 		AND	C
	out0	($9d),a                   ; 042F46 || 	out0	($9d),a                   ; 042E87 || 042F46 ED 39 9D    0007M 		OUT0	(reg), A
	pop	bc                         ; 042F49 || 	pop	bc                         ; 042E8A || 042F49 C1          0008M 		POP	BC
	ret                            ; 042F4A || 	ret                            ; 042E8B || 042F4A C9          7864  			RET
	in0	a,($9b)                    ; 042F4B || 	in0	a,($9b)                    ; 042E8C || 042F4B ED 38 9B    0001M 		IN0	A, (reg)
	or	b                           ; 042F4E || 	or	b                           ; 042E8F || 042F4E B0          0002M 		OR	val
	out0	($9b),a                   ; 042F4F || 	out0	($9b),a                   ; 042E90 || 042F4F ED 39 9B    0003M 		OUT0	(reg), A
	push	bc                        ; 042F52 || 	push	bc                        ; 042E93 || 042F52 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042F53 || 	ld	a,b                         ; 042E94 || 042F53 78          0002M 		LD	A, val
	cpl                            ; 042F54 || 	cpl                            ; 042E95 || 042F54 2F          0003M 		CPL
	ld	c,a                         ; 042F55 || 	ld	c,a                         ; 042F1D || 042F55 4F          0004M 		LD	C, A
	in0	a,($9c)                    ; 042F56 || 	in0	a,($9c)                    ; 042F1E || 042F56 ED 38 9C    0005M 		IN0	A, (reg)
	and	c                          ; 042F59 || 	and	c                          ; 042F21 || 042F59 A1          0006M 		AND	C
	out0	($9c),a                   ; 042F5A || 	out0	($9c),a                   ; 042F22 || 042F5A ED 39 9C    0007M 		OUT0	(reg), A
	pop	bc                         ; 042F5D || 	pop	bc                         ; 042F25 || 042F5D C1          0008M 		POP	BC
	in0	a,($9d)                    ; 042F5E || 	in0	a,($9d)                    ; 042F26 || 042F5E ED 38 9D    0001M 		IN0	A, (reg)
	or	b                           ; 042F61 || 	or	b                           ; 042F29 || 042F61 B0          0002M 		OR	val
	out0	($9d),a                   ; 042F62 || 	out0	($9d),a                   ; 042F2A || 042F62 ED 39 9D    0003M 		OUT0	(reg), A
	ret                            ; 042F65 || 	ret                            ; 042F2D || 042F65 C9          7871  			RET
	push	bc                        ; 042F66 || 	push	bc                        ; 042F2E || 042F66 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042F67 || 	ld	a,b                         ; 042F2F || 042F67 78          0002M 		LD	A, val
	cpl                            ; 042F68 || 	cpl                            ; 042F30 || 042F68 2F          0003M 		CPL
	ld	c,a                         ; 042F69 || 	ld	c,a                         ; 042F31 || 042F69 4F          0004M 		LD	C, A
	in0	a,($9a)                    ; 042F6A || 	in0	a,($9a)                    ; 042F32 || 042F6A ED 38 9A    0005M 		IN0	A, (reg)
	and	c                          ; 042F6D || 	and	c                          ; 042F35 || 042F6D A1          0006M 		AND	C
	out0	($9a),a                   ; 042F6E || 	out0	($9a),a                   ; 042F36 || 042F6E ED 39 9A    0007M 		OUT0	(reg), A
	pop	bc                         ; 042F71 || 	pop	bc                         ; 042F39 || 042F71 C1          0008M 		POP	BC
	push	bc                        ; 042F72 || 	push	bc                        ; 042F3A || 042F72 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042F73 || 	ld	a,b                         ; 042F3B || 042F73 78          0002M 		LD	A, val
	cpl                            ; 042F74 || 	cpl                            ; 042F3C || 042F74 2F          0003M 		CPL
	ld	c,a                         ; 042F75 || 	ld	c,a                         ; 042F3D || 042F75 4F          0004M 		LD	C, A
	in0	a,($9b)                    ; 042F76 || 	in0	a,($9b)                    ; 042F3E || 042F76 ED 38 9B    0005M 		IN0	A, (reg)
	and	c                          ; 042F79 || 	and	c                          ; 042F41 || 042F79 A1          0006M 		AND	C
	out0	($9b),a                   ; 042F7A || 	out0	($9b),a                   ; 042F42 || 042F7A ED 39 9B    0007M 		OUT0	(reg), A
	pop	bc                         ; 042F7D || 	pop	bc                         ; 042F45 || 042F7D C1          0008M 		POP	BC
	in0	a,($9c)                    ; 042F7E || 	in0	a,($9c)                    ; 042F46 || 042F7E ED 38 9C    0001M 		IN0	A, (reg)
	or	b                           ; 042F81 || 	or	b                           ; 042F49 || 042F81 B0          0002M 		OR	val
	out0	($9c),a                   ; 042F82 || 	out0	($9c),a                   ; 042F4A || 042F82 ED 39 9C    0003M 		OUT0	(reg), A
	in0	a,($9d)                    ; 042F85 || 	in0	a,($9d)                    ; 042F4D || 042F85 ED 38 9D    0001M 		IN0	A, (reg)
	or	b                           ; 042F88 || 	or	b                           ; 042F50 || 042F88 B0          0002M 		OR	val
	out0	($9d),a                   ; 042F89 || 	out0	($9d),a                   ; 042F51 || 042F89 ED 39 9D    0003M 		OUT0	(reg), A
	ret                            ; 042F8C || 	ret                            ; 042F54 || 042F8C C9          7879  			RET
	in0	a,($9a)                    ; 042F8D || 	in0	a,($9a)                    ; 042F55 || 042F8D ED 38 9A    0001M 		IN0	A, (reg)
	or	b                           ; 042F90 || 	or	b                           ; 042F58 || 042F90 B0          0002M 		OR	val
	out0	($9a),a                   ; 042F91 || 	out0	($9a),a                   ; 042F59 || 042F91 ED 39 9A    0003M 		OUT0	(reg), A
	push	bc                        ; 042F94 || 	push	bc                        ; 042F5C || 042F94 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042F95 || 	ld	a,b                         ; 042F5D || 042F95 78          0002M 		LD	A, val
	cpl                            ; 042F96 || 	cpl                            ; 042F5E || 042F96 2F          0003M 		CPL
	ld	c,a                         ; 042F97 || 	ld	c,a                         ; 042F5F || 042F97 4F          0004M 		LD	C, A
	in0	a,($9b)                    ; 042F98 || 	in0	a,($9b)                    ; 042F60 || 042F98 ED 38 9B    0005M 		IN0	A, (reg)
	and	c                          ; 042F9B || 	and	c                          ; 042F63 || 042F9B A1          0006M 		AND	C
	out0	($9b),a                   ; 042F9C || 	out0	($9b),a                   ; 042F64 || 042F9C ED 39 9B    0007M 		OUT0	(reg), A
	pop	bc                         ; 042F9F || 	pop	bc                         ; 042F67 || 042F9F C1          0008M 		POP	BC
	in0	a,($9c)                    ; 042FA0 || 	in0	a,($9c)                    ; 042F68 || 042FA0 ED 38 9C    0001M 		IN0	A, (reg)
	or	b                           ; 042FA3 || 	or	b                           ; 042F6B || 042FA3 B0          0002M 		OR	val
	out0	($9c),a                   ; 042FA4 || 	out0	($9c),a                   ; 042F6C || 042FA4 ED 39 9C    0003M 		OUT0	(reg), A
	in0	a,($9d)                    ; 042FA7 || 	in0	a,($9d)                    ; 042F6F || 042FA7 ED 38 9D    0001M 		IN0	A, (reg)
	or	b                           ; 042FAA || 	or	b                           ; 042F72 || 042FAA B0          0002M 		OR	val
	out0	($9d),a                   ; 042FAB || 	out0	($9d),a                   ; 042F73 || 042FAB ED 39 9D    0003M 		OUT0	(reg), A
	ret                            ; 042FAE || 	ret                            ; 042F76 || 042FAE C9          7888  			RET
	push	bc                        ; 042FAF || 	push	bc                        ; 042F77 || 042FAF C5          0001M 		PUSH	BC
	ld	a,b                         ; 042FB0 || 	ld	a,b                         ; 042F78 || 042FB0 78          0002M 		LD	A, val
	cpl                            ; 042FB1 || 	cpl                            ; 042F79 || 042FB1 2F          0003M 		CPL
	ld	c,a                         ; 042FB2 || 	ld	c,a                         ; 042F7A || 042FB2 4F          0004M 		LD	C, A
	in0	a,($9a)                    ; 042FB3 || 	in0	a,($9a)                    ; 042F7B || 042FB3 ED 38 9A    0005M 		IN0	A, (reg)
	and	c                          ; 042FB6 || 	and	c                          ; 042F7E || 042FB6 A1          0006M 		AND	C
	out0	($9a),a                   ; 042FB7 || 	out0	($9a),a                   ; 042F7F || 042FB7 ED 39 9A    0007M 		OUT0	(reg), A
	pop	bc                         ; 042FBA || 	pop	bc                         ; 042F82 || 042FBA C1          0008M 		POP	BC
	in0	a,($9b)                    ; 042FBB || 	in0	a,($9b)                    ; 042F83 || 042FBB ED 38 9B    0001M 		IN0	A, (reg)
	or	b                           ; 042FBE || 	or	b                           ; 042F86 || 042FBE B0          0002M 		OR	val
	out0	($9b),a                   ; 042FBF || 	out0	($9b),a                   ; 042F87 || 042FBF ED 39 9B    0003M 		OUT0	(reg), A
	in0	a,($9c)                    ; 042FC2 || 	in0	a,($9c)                    ; 042F8A || 042FC2 ED 38 9C    0001M 		IN0	A, (reg)
	or	b                           ; 042FC5 || 	or	b                           ; 042F8D || 042FC5 B0          0002M 		OR	val
	out0	($9c),a                   ; 042FC6 || 	out0	($9c),a                   ; 042F8E || 042FC6 ED 39 9C    0003M 		OUT0	(reg), A
	in0	a,($9d)                    ; 042FC9 || 	in0	a,($9d)                    ; 042F91 || 042FC9 ED 38 9D    0001M 		IN0	A, (reg)
	or	b                           ; 042FCC || 	or	b                           ; 042F94 || 042FCC B0          0002M 		OR	val
	out0	($9d),a                   ; 042FCD || 	out0	($9d),a                   ; 042F95 || 042FCD ED 39 9D    0003M 		OUT0	(reg), A
	ret                            ; 042FD0 || 	ret                            ; 042F98 || 042FD0 C9          7897  			RET
	in0	a,($9a)                    ; 042FD1 || 	in0	a,($9a)                    ; 042F99 || 042FD1 ED 38 9A    0001M 		IN0	A, (reg)
	or	b                           ; 042FD4 || 	or	b                           ; 042F9C || 042FD4 B0          0002M 		OR	val
	out0	($9a),a                   ; 042FD5 || 	out0	($9a),a                   ; 042F9D || 042FD5 ED 39 9A    0003M 		OUT0	(reg), A
	in0	a,($9b)                    ; 042FD8 || 	in0	a,($9b)                    ; 042FA0 || 042FD8 ED 38 9B    0001M 		IN0	A, (reg)
	or	b                           ; 042FDB || 	or	b                           ; 042FA3 || 042FDB B0          0002M 		OR	val
	out0	($9b),a                   ; 042FDC || 	out0	($9b),a                   ; 042FA4 || 042FDC ED 39 9B    0003M 		OUT0	(reg), A
	in0	a,($9c)                    ; 042FDF || 	in0	a,($9c)                    ; 042FA7 || 042FDF ED 38 9C    0001M 		IN0	A, (reg)
	or	b                           ; 042FE2 || 	or	b                           ; 042FAA || 042FE2 B0          0002M 		OR	val
	out0	($9c),a                   ; 042FE3 || 	out0	($9c),a                   ; 042FAB || 042FE3 ED 39 9C    0003M 		OUT0	(reg), A
	in0	a,($9d)                    ; 042FE6 || 	in0	a,($9d)                    ; 042FAE || 042FE6 ED 38 9D    0001M 		IN0	A, (reg)
	or	b                           ; 042FE9 || 	or	b                           ; 042FB1 || 042FE9 B0          0002M 		OR	val
	out0	($9d),a                   ; 042FEA || 	out0	($9d),a                   ; 042FB2 || 042FEA ED 39 9D    0003M 		OUT0	(reg), A
	ret                            ; 042FED || 	ret                            ; 042FB5 || 042FED C9          7905  			RET	; --- End gpio.asm ---
	ld	hl,$044a00                  ; 042FEE || 	ld	hl,$044a00                  ; 042FB6 || 042FEE 21 00 4A 04 8055  _main:			LD	HL, ACCS		; Clear the ACCS
	ld	(hl),$00                    ; 042FF2 || 	ld	(hl),$00                    ; 042FBA || 042FF2 36 00       8056  			LD	(HL), 0
	ld	a,c                         ; 042FF4 || 	ld	a,c                         ; 042FBC || 042FF4 79          8057  			LD	A, C
	cp	$02                         ; 042FF5 || 	cp	$02                         ; 042FBD || 042FF5 FE 02       8058  			CP	2
	jr	z,$+$2f                     ; 042FF7 || 	jr	z,$+$2f                     ; 042FBF || 042FF7 28 2D       8059  			JR	Z, AUTOLOAD		; 2 parameters = autoload
	jr	c,$+$41                     ; 042FF9 || 	jr	c,$+$41                     ; 042FC1 || 042FF9 38 3F       8060  			JR	C, COLD			; 1 parameter = normal start
	call	$04409f                   ; 042FFB || 	call	$044038                   ; 042FC3 || 042FFB CD 9F 40 04 8061  			CALL	STAR_VERSION
	call	$043de6                   ; 042FFF || 	call	$043d90                   ; 042FC7 || 042FFF CD E6 3D 04 8062  			CALL	TELL
	ld	d,l                         ; 043003 || 	ld	d,l                         ; 042FCB || 043003 55 73 61 67 8063  			DB	"Usage:\n\r"
	ld	(hl),e                      ; 043004 || 	ld	(hl),e                      ; 042FCC
	ld	h,c                         ; 043005 || 	ld	h,c                         ; 042FCD
	ld	h,a                         ; 043006 || 	ld	h,a                         ; 042FCE
	ld	h,l                         ; 043007 || 	ld	h,l                         ; 042FCF
	ld	a,($520d0a)                 ; 043008 || 	ld	a,($520d0a)                 ; 042FD0
	ld	d,l                         ; 04300C || 	ld	d,l                         ; 042FD4
	ld	c,(hl)                      ; 04300D || 	ld	c,(hl)                      ; 042FD5
	jr	nz,$+$30                    ; 04300E || 	jr	nz,$+$30                    ; 042FD6
	jr	nz,$+$3e                    ; 043010 || 	jr	nz,$+$3e                    ; 042FD8
	ld	h,(hl)                      ; 043012 || 	ld	h,(hl)                      ; 042FDA
	ld	l,c                         ; 043013 || 	ld	l,c                         ; 042FDB
	ld	l,h                         ; 043014 || 	ld	l,h                         ; 042FDC
	ld	h,l                         ; 043015 || 	ld	h,l                         ; 042FDD
	ld	l,(hl)                      ; 043016 || 	ld	l,(hl)                      ; 042FDE
	ld	h,c                         ; 043017 || 	ld	h,c                         ; 042FDF
	ld	l,l                         ; 043018 || 	ld	l,l                         ; 042FE0
	ld	h,l                         ; 043019 || 	ld	h,l                         ; 042FE1
	ld	a,$0a                       ; 04301A || 	ld	a,$0a                       ; 042FE2
	dec	c                          ; 04301C || 	dec	c                          ; 042FE4
	nop                            ; 04301D || 	nop                            ; 042FE5
	ld	hl,$000000                  ; 04301E || 	ld	hl,$000000                  ; 042FE6 || 04301E 21 00 00 00 8065  			LD	HL, 0			; The error code
	jp	$040068                     ; 043022 || 	jp	$040068                     ; 042FEA || 043022 C3 68 00 04 8066  			JP	_end
	ld	hl,(ix+$03)                 ; 043026 || 	ld	hl,(ix+$03)                 ; 042FEE || 043026 DD 27 03    8068  AUTOLOAD:		LD	HL, (IX+3)		; HLU: Address of filename
	ld	de,$044a00                  ; 043029 || 	ld	de,$044a00                  ; 042FF1 || 043029 11 00 4A 04 8069  			LD	DE, ACCS		;  DE: Destination address
	ld	a,(hl)                      ; 04302D || 	ld	a,(hl)                      ; 042FF5 || 04302D 7E          8070  AUTOLOAD_1:		LD	A, (HL)			; Fetch the filename byte
	ld	(de),a                      ; 04302E || 	ld	(de),a                      ; 042FF6 || 04302E 12          8071  			LD	(DE), A			;
	inc	hl                         ; 04302F || 	inc	hl                         ; 042FF7 || 04302F 23          8072  			INC	HL			; Increase the source pointer
	inc	e                          ; 043030 || 	inc	e                          ; 042FF8 || 043030 1C          8073  			INC	E			; We only need to increase E as ACCS is on a page boundary
	jr	z,$+$05                     ; 043031 || 	jr	z,$+$05                     ; 042FF9 || 043031 28 03       8074  			JR	Z, AUTOLOAD_2		; End if we hit the page boundary
	or	a                           ; 043033 || 	or	a                           ; 042FFB || 043033 B7          8075  			OR	A
	jr	nz,$-$07                    ; 043034 || 	jr	nz,$-$07                    ; 042FFC || 043034 20 F7       8076  			JR	NZ, AUTOLOAD_1		; Loop until we hit a 0 byte
	dec	e                          ; 043036 || 	dec	e                          ; 042FFE || 043036 1D          8077  AUTOLOAD_2:		DEC	E
	ld	a,$0d                       ; 043037 || 	ld	a,$0d                       ; 042FFF || 043037 3E 0D       8078  			LD	A, CR
	ld	(de),a                      ; 043039 || 	ld	(de),a                      ; 043001 || 043039 12          8079  			LD	(DE), A			; Replace the 0 byte with a CR for BBC BASIC
	pop	hl                         ; 04303A || 	pop	hl                         ; 043002 || 04303A E1          8081  COLD:			POP	HL			; Pop the return address to init off SPS
	push	hl                        ; 04303B || 	push	hl                        ; 043003 || 04303B E5          8082  			PUSH	HL 			; Stack it on SPL (*BYE will use this as the return address)
	ld	hl,$044c00                  ; 04303C || 	ld	hl,$044c00                  ; 043004 || 04303C 21 00 4C 04 8083  			LD	HL, STAVAR		; Cold start
	ld	sp,hl                       ; 043040 || 	ld	sp,hl                       ; 043008 || 043040 F9          8084  			LD	SP, HL
	ld	(hl),$0a                    ; 043041 || 	ld	(hl),$0a                    ; 043009 || 043041 36 0A       8085  			LD	(HL), 10
	inc	hl                         ; 043043 || 	inc	hl                         ; 04300B || 043043 23          8086  			INC	HL
	ld	(hl),$09                    ; 043044 || 	ld	(hl),$09                    ; 04300C || 043044 36 09       8087  			LD	(HL),9
	call	$043fd7                   ; 043046 || 	call	$043f81                   ; 04300E || 043046 CD D7 3F 04 8088  			CALL    OSINIT			; Call the machine specific OS initialisation routines
	ld	($044d20),de                ; 04304A || 	ld	($044d20),de                ; 043012 || 04304A ED 53 20 4D 8089  			LD      (HIMEM),DE		; This returns HIMEM (ramtop) in DE - store in the HIMEM sysvar
	ld	($044d14),hl                ; 04304F || 	ld	($044d14),hl                ; 043017 || 04304F 22 14 4D 04 8090  			LD      (PAGE_),HL		; And PAGE in HL (where BASIC program storage starts) - store in PAGE sysvar
	ld	a,$b7                       ; 043053 || 	ld	a,$b7                       ; 04301B || 043053 3E B7       8091  			LD      A,B7H           	; Set LISTO sysvar; the bottom nibble is LISTO (7), top nibble is OPT (B)
	ld	($044d40),a                 ; 043055 || 	ld	($044d40),a                 ; 04301D || 043055 32 40 4D 04 8092  			LD      (LISTON),A
	ld	hl,$0430b2                  ; 043059 || 	ld	hl,$04305c                  ; 043021 || 043059 21 B2 30 04 8093  			LD      HL,NOTICE
	ld	($044d2f),hl                ; 04305D || 	ld	($044d2f),hl                ; 043025 || 04305D 22 2F 4D 04 8094  			LD      (ERRTXT),HL
	call	$0438c2                   ; 043061 || 	call	$04386c                   ; 043029 || 043061 CD C2 38 04 8095  			CALL    NEWIT			; From what I can determine, NEWIT always returns with Z flag set
	ld	a,($044a00)                 ; 043065 || 	ld	a,($044a00)                 ; 04302D || 043065 3A 00 4A 04 8096  			LD	A,(ACCS)		; Check if there is a filename in ACCS
	or	a                           ; 043069 || 	or	a                           ; 043031 || 043069 B7          8097  			OR	A
	jp	nz,$040b5b                  ; 04306A || 	jp	nz,$040b53                  ; 043032 || 04306A C2 5B 0B 04 8098  			JP	NZ,CHAIN0		; Yes, so load and run
	call	$04409f                   ; 04306E || 	call	$044038                   ; 043036 || 04306E CD 9F 40 04 8099  			CALL	STAR_VERSION		;
	call	$043de6                   ; 043072 || 	call	$043d90                   ; 04303A || 043072 CD E6 3D 04 8100  			CALL    TELL			; Output the welcome message
	ld	b,d                         ; 043076 || 	ld	b,d                         ; 04303E || 043076 42 42 43 20 8101  			DB    	"BBC BASIC (Z80) Version 3.00\n\r"
	ld	b,d                         ; 043077 || 	ld	b,d                         ; 04303F
	ld	b,e                         ; 043078 || 	ld	b,e                         ; 043040
	jr	nz,$+$44                    ; 043079 || 	jr	nz,$+$44                    ; 043041
	ld	b,c                         ; 04307B || 	ld	b,c                         ; 043043
	ld	d,e                         ; 04307C || 	ld	d,e                         ; 043044
	ld.lis	b,e                     ; 04307D || 	ld.lis	b,e                     ; 043045
	jr	nz,$+$2a                    ; 04307F || 	jr	nz,$+$2a                    ; 043047
	ld	e,d                         ; 043081 || 	ld	e,d                         ; 043049
	jr	c,$+$32                     ; 043082 || 	jr	c,$+$32                     ; 04304A
	add	hl,hl                      ; 043084 || 	add	hl,hl                      ; 04304C
	jr	nz,$+$58                    ; 043085 || 	jr	nz,$+$58                    ; 04304D
	ld	h,l                         ; 043087 || 	ld	h,l                         ; 04304F
	ld	(hl),d                      ; 043088 || 	ld	(hl),d                      ; 043050
	ld	(hl),e                      ; 043089 || 	ld	(hl),e                      ; 043051
	ld	l,c                         ; 04308A || 	ld	l,c                         ; 043052
	ld	l,a                         ; 04308B
	ld	l,(hl)                      ; 04308C
	jr	nz,$+$35                    ; 04308D
	ld	l,$30                       ; 04308F
	jr	nc,$+$0c                    ; 043091
	dec	c                          ; 043093
	ld	b,l                         ; 043094                                         || 043094 45 5A 38 30 8102  			db      "EZ80ASM ADL Version 0.01beta\n\r"
	ld	e,d                         ; 043095
	jr	c,$+$32                     ; 043096
	ld	b,c                         ; 043098
	ld	d,e                         ; 043099
	ld	c,l                         ; 04309A
	jr	nz,$+$43                    ; 04309B
	ld	b,h                         ; 04309D
	ld	c,h                         ; 04309E
	jr	nz,$+$58                    ; 04309F
	ld	h,l                         ; 0430A1
	ld	(hl),d                      ; 0430A2
	ld	(hl),e                      ; 0430A3
	ld	l,c                         ; 0430A4
	ld	l,a                         ; 0430A5
	ld	l,(hl)                      ; 0430A6
	jr	nz,$+$32                    ; 0430A7
	ld	l,$30                       ; 0430A9
	ld	sp,$746562                  ; 0430AB
	ld	h,c                         ; 0430AF
	ld	a,(bc)                      ; 0430B0
	dec	c                          ; 0430B1
	jr	z,$+$45                     ; 0430B2                                         || 0430B2 28 43 29 20 8103  NOTICE:			DB    	"(C) Copyright R.T.Russell 1987\n\r"
	add	hl,hl                      ; 0430B4
	jr	nz,$+$45                    ; 0430B5
	ld	l,a                         ; 0430B7
	ld	(hl),b                      ; 0430B8 || 	ld	(hl),b                      ; 043062
	ld	a,c                         ; 0430B9 || 	ld	a,c                         ; 043063
	ld	(hl),d                      ; 0430BA || 	ld	(hl),d                      ; 043064
	ld	l,c                         ; 0430BB || 	ld	l,c                         ; 043065
	ld	h,a                         ; 0430BC || 	ld	h,a                         ; 043066
	ld	l,b                         ; 0430BD || 	ld	l,b                         ; 043067
	ld	(hl),h                      ; 0430BE || 	ld	(hl),h                      ; 043068
	jr	nz,$+$54                    ; 0430BF || 	jr	nz,$+$54                    ; 043069
	ld	l,$54                       ; 0430C1 || 	ld	l,$54                       ; 04306B
	ld	l,$52                       ; 0430C3 || 	ld	l,$52                       ; 04306D
	ld	(hl),l                      ; 0430C5 || 	ld	(hl),l                      ; 04306F
	ld	(hl),e                      ; 0430C6 || 	ld	(hl),e                      ; 043070
	ld	(hl),e                      ; 0430C7 || 	ld	(hl),e                      ; 043071
	ld	h,l                         ; 0430C8 || 	ld	h,l                         ; 043072
	ld	l,h                         ; 0430C9 || 	ld	l,h                         ; 043073
	ld	l,h                         ; 0430CA || 	ld	l,h                         ; 043074
	jr	nz,$+$33                    ; 0430CB || 	jr	nz,$+$33                    ; 043075
	add	hl,sp                      ; 0430CD || 	add	hl,sp                      ; 043077
	jr	c,$+$39                     ; 0430CE || 	jr	c,$+$39                     ; 043078
	ld	a,(bc)                      ; 0430D0 || 	ld	a,(bc)                      ; 04307A
	dec	c                          ; 0430D1 || 	dec	c                          ; 04307B
	ld	a,(bc)                      ; 0430D2 || 	ld	a,(bc)                      ; 04307C || 0430D2 0A 0D 00    8104  			DB	"\n\r", 0
	dec	c                          ; 0430D3 || 	dec	c                          ; 04307D
	nop                            ; 0430D4 || 	nop                            ; 04307E
	or	$37                         ; 0430D5 || 	or	$37                         ; 04307F || 0430D5 F6          8106  WARM:			DB 	F6H			; Opcode for OR? Maybe to CCF (the following SCF will be the operand)
	ld	sp,($044d20)                ; 0430D7 || 	ld	sp,($044d20)                ; 043081 || 0430D7 ED 7B 20 4D 8111  			LD      SP,(HIMEM)
	call	$043f50                   ; 0430DC || 	call	$043efa                   ; 043086 || 0430DC CD 50 3F 04 8112  			CALL    PROMPT          	; Prompt user
	ld	hl,$044d40                  ; 0430E0 || 	ld	hl,$044d40                  ; 04308A || 0430E0 21 40 4D 04 8113  			LD      HL,LISTON		; Pointer to the LISTO/OPT sysvar
	ld	a,(hl)                      ; 0430E4 || 	ld	a,(hl)                      ; 04308E || 0430E4 7E          8114  			LD      A,(HL)			; Fetch the value
	and	$0f                        ; 0430E5 || 	and	$0f                        ; 04308F || 0430E5 E6 0F       8115  			AND     0FH             	; Bottom nibble: LISTO
	or	$b0                         ; 0430E7 || 	or	$b0                         ; 043091 || 0430E7 F6 B0       8116  			OR      B0H             	; Top nibble: Default to OPT (3) with ADL mode bit set to 1 for assembler
	ld	(hl),a                      ; 0430E9 || 	ld	(hl),a                      ; 043093 || 0430E9 77          8117  			LD      (HL),A			; Store back in
	sbc	hl,hl                      ; 0430EA || 	sbc	hl,hl                      ; 043094 || 0430EA ED 62       8118  			SBC     HL,HL           	; HL: 0
	ld	($044d2c),hl                ; 0430EC || 	ld	($044d2c),hl                ; 043096 || 0430EC 22 2C 4D 04 8119  			LD      (ERRTRP),HL		; Clear ERRTRP sysvar
	ld	($044d35),hl                ; 0430F0 || 	ld	($044d35),hl                ; 04309A || 0430F0 22 35 4D 04 8120  			LD      (ERRLIN),HL		; Clear ERRLIN sysvar (ON ERROR)
	ld	hl,($044d29)                ; 0430F4 || 	ld	hl,($044d29)                ; 04309E || 0430F4 2A 29 4D 04 8122  			LD      HL,(AUTONO)		; Get the auto line number
	ld	($044d23),hl                ; 0430F8 || 	ld	($044d23),hl                ; 0430A2 || 0430F8 22 23 4D 04 8123  			LD      (LINENO),HL		; Store in line number
	ld	a,h                         ; 0430FC || 	ld	a,h                         ; 0430A6 || 0430FC 7C          8124  			LD      A,H			; If the auto line number is zero then
	or	l                           ; 0430FD || 	or	l                           ; 0430A7 || 0430FD B5          8125  			OR      L
	jr	z,$+$20                     ; 0430FE || 	jr	z,$+$20                     ; 0430A8 || 0430FE 28 1E       8126  			JR      Z,NOAUTO		; We're not auto line numbering, so skip the next bit
	push	hl                        ; 043100 || 	push	hl                        ; 0430AA || 043100 E5          8130  			PUSH    HL			; Stack the line number
	call	$043a51                   ; 043101 || 	call	$0439fb                   ; 0430AB || 043101 CD 51 3A 04 8131  			CALL    PBCD           	 	; Output the line number
	pop	hl                         ; 043105 || 	pop	hl                         ; 0430AF || 043105 E1          8132  			POP     HL			; Pop the line number back off the stack
	ld	bc,$000000                  ; 043106 || 	ld	bc,$000000                  ; 0430B0 || 043106 01 00 00 00 8135  			LD	BC, 0			; Load BC with Increment
	ld	a,($044d41)                 ; 04310A || 	ld	a,($044d41)                 ; 0430B4 || 04310A 3A 41 4D 04 8136  			LD	A,(INCREM)
	ld	c,a                         ; 04310E || 	ld	c,a                         ; 0430B8 || 04310E 4F          8137  			LD	C, A
	add	hl,bc                      ; 04310F || 	add	hl,bc                      ; 0430B9 || 04310F 09          8138  			ADD     HL,BC			; Add the increment to the line number
	jp	c,$043c7b                   ; 043110 || 	jp	c,$043c25                   ; 0430BA || 043110 DA 7B 3C 04 8139  			JP      C,TOOBIG		; And error if we wrap
	ld	($044d29),hl                ; 043114 || 	ld	($044d29),hl                ; 0430BE || 043114 22 29 4D 04 8140  			LD      (AUTONO),HL		; Store the new auto line number
	ld	a,$20                       ; 043118 || 	ld	a,$20                       ; 0430C2 || 043118 3E 20       8141  			LD      A,' '			; Print a space
	call	$0439a5                   ; 04311A || 	call	$04394f                   ; 0430C4 || 04311A CD A5 39 04 8142  			CALL    OUTCHR
	ld	hl,$044a00                  ; 04311E || 	ld	hl,$044a00                  ; 0430C8 || 04311E 21 00 4A 04 8146  NOAUTO:			LD      HL,ACCS			; Storage for the line editor (256 bytes)
	call	$043eb5                   ; 043122 || 	call	$043e5f                   ; 0430CC || 043122 CD B5 3E 04 8147  			CALL    OSLINE          	; Call the line editor in MOS
	call	$043132                   ; 043126 || 	call	$0430dc                   ; 0430D0 || 043126 CD 32 31 04 8148  ONEDIT:			CALL	ONEDIT1			; Enter the line into memory
	call	c,$043895                 ; 04312A || 	call	c,$04383f                 ; 0430D4 || 04312A DC 95 38 04 8149  			CALL    C,CLEAN			; Set TOP, write out &FFFF end of program marker
	jp	$0430d6                     ; 04312E || 	jp	$043080                     ; 0430D8 || 04312E C3 D6 30 04 8150  			JP      CLOOP			; Jump back to immediate mode
	xor	a                          ; 043132 || 	xor	a                          ; 0430DC || 043132 AF          8157  ONEDIT1:		XOR     A			; Entry point after *EDIT
	ld	($044d3d),a                 ; 043133 || 	ld	($044d3d),a                 ; 0430DD || 043133 32 3D 4D 04 8158  			LD      (COUNT),A
	ld	iy,$044a00                  ; 043137 || 	ld	iy,$044a00                  ; 0430E1 || 043137 FD 21 00 4A 8159  			LD      IY,ACCS
	call	$043c4f                   ; 04313C || 	call	$043bf9                   ; 0430E6 || 04313C CD 4F 3C 04 8160  			CALL    LINNUM			; HL: The line number from the input buffer
	call	$040a78                   ; 043140 || 	call	$040a70                   ; 0430EA || 043140 CD 78 0A 04 8161  			CALL    NXT			; Skip spaces
	ld	a,h                         ; 043144 || 	ld	a,h                         ; 0430EE || 043144 7C          8162  			LD      A,H			; HL: The line number will be 0 for immediate mode or when auto line numbering is used
	or	l                           ; 043145 || 	or	l                           ; 0430EF || 043145 B5          8163  			OR      L
	jr	z,$+$06                     ; 043146 || 	jr	z,$+$06                     ; 0430F0 || 043146 28 04       8164  			JR      Z,LNZERO        	; Skip if there is no line number in the input buffer
	ld	($044d23),hl                ; 043148 || 	ld	($044d23),hl                ; 0430F2 || 043148 22 23 4D 04 8165  			LD      (LINENO),HL		; Otherwise store it
	ld	c,$01                       ; 04314C || 	ld	c,$01                       ; 0430F6 || 04314C 0E 01       8169  LNZERO:			LD	C,1			; Left mode
	ld	de,$044b00                  ; 04314E || 	ld	de,$044b00                  ; 0430F8 || 04314E 11 00 4B 04 8170  			LD      DE,BUFFER		; Buffer for tokenised BASIC
	call	$043cf5                   ; 043152 || 	call	$043c9f                   ; 0430FC || 043152 CD F5 3C 04 8171  			CALL    LEXAN2          	; Lexical analysis on the user input
	ld	(de),a                      ; 043156 || 	ld	(de),a                      ; 043100 || 043156 12          8172  			LD      (DE),A          	; Terminator
	xor	a                          ; 043157 || 	xor	a                          ; 043101 || 043157 AF          8173  			XOR     A
	ld	bc,$000000                  ; 043158 || 	ld	bc,$000000                  ; 043102 || 043158 01 00 00 00 8176  			LD	BC,0
	ld	c,e                         ; 04315C || 	ld	c,e                         ; 043106 || 04315C 4B          8177  			LD	C,E			; BC: Line length
	inc	de                         ; 04315D || 	inc	de                         ; 043107 || 04315D 13          8178  			INC     DE
	ld	(de),a                      ; 04315E || 	ld	(de),a                      ; 043108 || 04315E 12          8179  			LD      (DE),A          	; Zero next
	ld	hl,($044d23)                ; 04315F || 	ld	hl,($044d23)                ; 043109 || 04315F 2A 23 4D 04 8180  			LD      HL,(LINENO)		; Get the line number
	ld	a,h                         ; 043163 || 	ld	a,h                         ; 04310D || 043163 7C          8181  			LD      A,H			; Is it zero, i.e. a command with no line number?
	or	l                           ; 043164 || 	or	l                           ; 04310E || 043164 B5          8182  			OR      L
	ld	iy,$044b00                  ; 043165 || 	ld	iy,$044b00                  ; 04310F || 043165 FD 21 00 4B 8183  			LD      IY,BUFFER       	; Yes, so we're in immediate mode
	jp	z,$040b9e                   ; 04316A || 	jp	z,$040b96                   ; 043114 || 04316A CA 9E 0B 04 8184  			JP      Z,XEQ           	; Execute it
	push	bc                        ; 04316E || 	push	bc                        ; 043118 || 04316E C5          8188  			PUSH    BC
	push	hl                        ; 04316F || 	push	hl                        ; 043119 || 04316F E5          8189  			PUSH    HL
	call	$0438a1                   ; 043170 || 	call	$04384b                   ; 04311A || 043170 CD A1 38 04 8190  			CALL    SETTOP          	; Set TOP sysvar
	pop	hl                         ; 043174 || 	pop	hl                         ; 04311E || 043174 E1          8191  			POP     HL
	call	$0439e5                   ; 043175 || 	call	$04398f                   ; 04311F || 043175 CD E5 39 04 8192  			CALL    FINDL			; Find the address of the line
	call	z,$043858                 ; 043179 || 	call	z,$043802                 ; 043123 || 043179 CC 58 38 04 8193  			CALL    Z,DEL			; Delete the existing line if found
	pop	bc                         ; 04317D || 	pop	bc                         ; 043127 || 04317D C1          8194  			POP     BC
	ld	a,c                         ; 04317E || 	ld	a,c                         ; 043128 || 04317E 79          8195  			LD      A,C			; Check for the line length being zero, i.e.
	or	a                           ; 04317F || 	or	a                           ; 043129 || 04317F B7          8196  			OR      A			; the user has just entered a line number in the command line
	ret	z                          ; 043180 || 	ret	z                          ; 04312A || 043180 C8          8197  			RET	Z 	         	; If so, then don't do anything else
	add	a,$04                      ; 043181 || 	add	a,$04                      ; 04312B || 043181 C6 04       8198  			ADD     A,4
	ld	c,a                         ; 043183 || 	ld	c,a                         ; 04312D || 043183 4F          8199  			LD      C,A             	; Length inclusive
	push	de                        ; 043184 || 	push	de                        ; 04312E || 043184 D5          8200  			PUSH    DE              	; DE: Line number (fetched from the call to FINDL)
	push	bc                        ; 043185 || 	push	bc                        ; 04312F || 043185 C5          8201  			PUSH    BC              	; BC: Line length
	ex	de,hl                       ; 043186 || 	ex	de,hl                       ; 043130 || 043186 EB          8202  			EX      DE,HL			; DE: Address of the line in memory
	ld	hl,($044d17)                ; 043187 || 	ld	hl,($044d17)                ; 043131 || 043187 2A 17 4D 04 8203  			LD      HL,(TOP)		; HL: TOP (the first free location after the end of the BASIC program)
	push	hl                        ; 04318B || 	push	hl                        ; 043135 || 04318B E5          8204  			PUSH    HL			; Stack TOP (current TOP value)
	add	hl,bc                      ; 04318C || 	add	hl,bc                      ; 043136 || 04318C 09          8205  			ADD     HL,BC			; Add the line length to HL, the new TOP value
	push	hl                        ; 04318D || 	push	hl                        ; 043137 || 04318D E5          8206  			PUSH    HL			; Stack HL (new TOP value)
	inc	h                          ; 04318E || 	inc	h                          ; 043138 || 04318E 24          8207  			INC     H			; Add 256 to HL
	xor	a                          ; 04318F || 	xor	a                          ; 043139 || 04318F AF          8208  			XOR     A
	sbc	hl,sp                      ; 043190 || 	sbc	hl,sp                      ; 04313A || 043190 ED 72       8209  			SBC     HL,SP			; Check whether HL is in the same page as the current stack pointer
	pop	hl                         ; 043192 || 	pop	hl                         ; 04313C || 043192 E1          8210  			POP     HL			; Pop HL (new TOP value)
	jp	nc,$0437b6                  ; 043193 || 	jp	nc,$043760                  ; 04313D || 043193 D2 B6 37 04 8211  			JP      NC,ERROR_        	; If HL is in the stack page, then error: "No room"
	ld	($044d17),hl                ; 043197 || 	ld	($044d17),hl                ; 043141 || 043197 22 17 4D 04 8212  			LD      (TOP),HL		; Store new value of TOP
	ex	(sp),hl                     ; 04319B || 	ex	(sp),hl                     ; 043145 || 04319B E3          8213  			EX      (SP),HL			; HL: TOP (current TOP value), top of stack now contains new TOP value
	push	hl                        ; 04319C || 	push	hl                        ; 043146 || 04319C E5          8214  			PUSH    HL			; PUSH current TOP value
	inc	hl                         ; 04319D || 	inc	hl                         ; 043147 || 04319D 23          8215  			INC     HL
	or	a                           ; 04319E || 	or	a                           ; 043148 || 04319E B7          8216  			OR      A
	sbc	hl,de                      ; 04319F || 	sbc	hl,de                      ; 043149 || 04319F ED 52       8217  			SBC     HL,DE			; DE: Address of the line in memory
	ld	b,h                         ; 0431A1 || 	ld	b,h                         ; 04314B || 0431A1 44          8218  			LD      B,H             	; BC: Amount to move
	ld	c,l                         ; 0431A2 || 	ld	c,l                         ; 04314C || 0431A2 4D          8219  			LD      C,L
	pop	hl                         ; 0431A3 || 	pop	hl                         ; 04314D || 0431A3 E1          8220  			POP     HL			; HL: Destination (current TOP value)
	pop	de                         ; 0431A4 || 	pop	de                         ; 04314E || 0431A4 D1          8221  			POP     DE			; DE: Source (new TOP value)
	jr	z,$+$04                     ; 0431A5 || 	jr	z,$+$04                     ; 04314F || 0431A5 28 02       8222  			JR      Z,ATEND			; If current TOP and new TOP are the same, i.e. adding a line at the end, then skip...
	lddr                           ; 0431A7 || 	lddr                           ; 043151 || 0431A7 ED B8       8223  			LDDR                    	; Otherwise, make space for the new line in the program
	pop	bc                         ; 0431A9 || 	pop	bc                         ; 043153 || 0431A9 C1          8224  ATEND:			POP     BC              	; BC: Line length
	pop	de                         ; 0431AA || 	pop	de                         ; 043154 || 0431AA D1          8225  			POP     DE              	; DE: Line number
	inc	hl                         ; 0431AB || 	inc	hl                         ; 043155 || 0431AB 23          8226  			INC     HL			; HL: Destination address
	ld	(hl),c                      ; 0431AC || 	ld	(hl),c                      ; 043156 || 0431AC 71          8227  			LD      (HL),C          	; Store length
	inc	hl                         ; 0431AD || 	inc	hl                         ; 043157 || 0431AD 23          8228  			INC     HL
	ld	(hl),e                      ; 0431AE || 	ld	(hl),e                      ; 043158 || 0431AE 73          8229  			LD      (HL),E          	; Store line number
	inc	hl                         ; 0431AF || 	inc	hl                         ; 043159 || 0431AF 23          8230  			INC     HL
	ld	(hl),d                      ; 0431B0 || 	ld	(hl),d                      ; 04315A || 0431B0 72          8231  			LD      (HL),D
	inc	hl                         ; 0431B1 || 	inc	hl                         ; 04315B || 0431B1 23          8232  			INC     HL
	ld	de,$044b00                  ; 0431B2 || 	ld	de,$044b00                  ; 04315C || 0431B2 11 00 4B 04 8233  			LD      DE,BUFFER		; DE: Location of the new, tokenised line
	ex	de,hl                       ; 0431B6 || 	ex	de,hl                       ; 043160 || 0431B6 EB          8234  			EX      DE,HL			; HL: Location of the new, tokensied line, DE: Destination address in BASIC program
	dec	c                          ; 0431B7 || 	dec	c                          ; 043161 || 0431B7 0D          8235  			DEC     C			; Subtract 3 from the number of bytes to copy to
	dec	c                          ; 0431B8 || 	dec	c                          ; 043162 || 0431B8 0D          8236  			DEC     C			; compensate for the 3 bytes stored above (length and line number)
	dec	c                          ; 0431B9 || 	dec	c                          ; 043163 || 0431B9 0D          8237  			DEC     C
	ldir                           ; 0431BA || 	ldir                           ; 043164 || 0431BA ED B0       8238  			LDIR                    	; Add the line to the BASIC program
	scf                            ; 0431BC || 	scf                            ; 043166 || 0431BC 37          8239  			SCF				; To flag we need to call CLEAN
	ret                            ; 0431BD || 	ret                            ; 043167 || 0431BD C9          8240  			RET
	add	a,b                        ; 0431BE || 	add	a,b                        ; 043168 || 0431BE 80 41 4E 44 8246  KEYWDS:			DB    80H, "AND"
	ld	b,c                         ; 0431BF || 	ld	b,c                         ; 043169
	ld	c,(hl)                      ; 0431C0 || 	ld	c,(hl)                      ; 04316A
	ld	b,h                         ; 0431C1 || 	ld	b,h                         ; 04316B
	sub	h                          ; 0431C2 || 	sub	h                          ; 04316C || 0431C2 94 41 42 53 8247  			DB    94H, "ABS"
	ld	b,c                         ; 0431C3 || 	ld	b,c                         ; 04316D
	ld	b,d                         ; 0431C4 || 	ld	b,d                         ; 04316E
	ld	d,e                         ; 0431C5 || 	ld	d,e                         ; 04316F
	sub	l                          ; 0431C6 || 	sub	l                          ; 043170 || 0431C6 95 41 43 53 8248  			DB    95H, "ACS"
	ld	b,c                         ; 0431C7 || 	ld	b,c                         ; 043171
	ld	b,e                         ; 0431C8 || 	ld	b,e                         ; 043172
	ld	d,e                         ; 0431C9 || 	ld	d,e                         ; 043173
	sub	(hl)                       ; 0431CA || 	sub	(hl)                       ; 043174 || 0431CA 96 41 44 56 8249  			DB    96H, "ADVAL"
	ld	b,c                         ; 0431CB || 	ld	b,c                         ; 043175
	ld	b,h                         ; 0431CC || 	ld	b,h                         ; 043176
	ld	d,(hl)                      ; 0431CD || 	ld	d,(hl)                      ; 043177
	ld	b,c                         ; 0431CE || 	ld	b,c                         ; 043178
	ld	c,h                         ; 0431CF || 	ld	c,h                         ; 043179
	sub	a                          ; 0431D0 || 	sub	a                          ; 04317A || 0431D0 97 41 53 43 8250  			DB    97H, "ASC"
	ld	b,c                         ; 0431D1 || 	ld	b,c                         ; 04317B
	ld	d,e                         ; 0431D2 || 	ld	d,e                         ; 04317C
	ld	b,e                         ; 0431D3 || 	ld	b,e                         ; 04317D
	sbc	a,b                        ; 0431D4 || 	sbc	a,b                        ; 04317E || 0431D4 98 41 53 4E 8251  			DB    98H, "ASN"
	ld	b,c                         ; 0431D5 || 	ld	b,c                         ; 04317F
	ld	d,e                         ; 0431D6 || 	ld	d,e                         ; 043180
	ld	c,(hl)                      ; 0431D7 || 	ld	c,(hl)                      ; 043181
	sbc	a,c                        ; 0431D8 || 	sbc	a,c                        ; 043182 || 0431D8 99 41 54 4E 8252  			DB    99H, "ATN"
	ld	b,c                         ; 0431D9 || 	ld	b,c                         ; 043183
	ld	d,h                         ; 0431DA || 	ld	d,h                         ; 043184
	ld	c,(hl)                      ; 0431DB || 	ld	c,(hl)                      ; 043185
	add	a,$41                      ; 0431DC || 	add	a,$41                      ; 043186 || 0431DC C6 41 55 54 8253  			DB    C6H, "AUTO"
	ld	d,l                         ; 0431DE || 	ld	d,l                         ; 043188
	ld	d,h                         ; 0431DF || 	ld	d,h                         ; 043189
	ld	c,a                         ; 0431E0 || 	ld	c,a                         ; 04318A
	sbc	a,d                        ; 0431E1 || 	sbc	a,d                        ; 04318B || 0431E1 9A 42 47 45 8254  			DB    9AH, "BGET", 0
	ld	b,d                         ; 0431E2 || 	ld	b,d                         ; 04318C
	ld	b,a                         ; 0431E3 || 	ld	b,a                         ; 04318D
	ld	b,l                         ; 0431E4 || 	ld	b,l                         ; 04318E
	ld	d,h                         ; 0431E5 || 	ld	d,h                         ; 04318F
	nop                            ; 0431E6 || 	nop                            ; 043190
	push	de                        ; 0431E7 || 	push	de                        ; 043191 || 0431E7 D5 42 50 55 8255  			DB    D5H, "BPUT", 0
	ld	b,d                         ; 0431E8 || 	ld	b,d                         ; 043192
	ld	d,b                         ; 0431E9 || 	ld	d,b                         ; 043193
	ld	d,l                         ; 0431EA || 	ld	d,l                         ; 043194
	ld	d,h                         ; 0431EB || 	ld	d,h                         ; 043195
	nop                            ; 0431EC || 	nop                            ; 043196
	ei                             ; 0431ED || 	ei                             ; 043197 || 0431ED FB 43 4F 4C 8256  			DB    FBH, "COLOUR"
	ld	b,e                         ; 0431EE || 	ld	b,e                         ; 043198
	ld	c,a                         ; 0431EF || 	ld	c,a                         ; 043199
	ld	c,h                         ; 0431F0 || 	ld	c,h                         ; 04319A
	ld	c,a                         ; 0431F1 || 	ld	c,a                         ; 04319B
	ld	d,l                         ; 0431F2 || 	ld	d,l                         ; 04319C
	ei.sil                         ; 0431F3 || 	ei.sil                         ; 04319D
	ld	b,e                         ; 0431F5 || 	ld	b,e                         ; 04319F
	ld	c,a                         ; 0431F6 || 	ld	c,a                         ; 0431A0
	ld	c,h                         ; 0431F7 || 	ld	c,h                         ; 0431A1
	ld	c,a                         ; 0431F8 || 	ld	c,a                         ; 0431A2
	sub.sil	$43                    ; 0431F9 || 	sub.sil	$43                    ; 0431A3
	ld	b,c                         ; 0431FC || 	ld	b,c                         ; 0431A6
	ld	c,h                         ; 0431FD || 	ld	c,h                         ; 0431A7
	ld	c,h                         ; 0431FE || 	ld	c,h                         ; 0431A8
	rst	$10                        ; 0431FF || 	rst	$10                        ; 0431A9 || 0431FF D7 43 48 41 8259  			DB    D7H, "CHAIN"
	ld	b,e                         ; 043200 || 	ld	b,e                         ; 0431AA
	ld	c,b                         ; 043201 || 	ld	c,b                         ; 0431AB
	ld	b,c                         ; 043202 || 	ld	b,c                         ; 0431AC
	ld.lis	c,(hl)                  ; 043203 || 	ld.lis	c,(hl)                  ; 0431AD
	cp	l                           ; 043205 || 	cp	l                           ; 0431AF || 043205 BD 43 48 52 8260  			DB    BDH, "CHR$"
	ld	b,e                         ; 043206 || 	ld	b,e                         ; 0431B0
	ld	c,b                         ; 043207 || 	ld	c,b                         ; 0431B1
	inc.sil	h                      ; 043208 || 	inc.sil	h                      ; 0431B2
	ret	c                          ; 04320A || 	ret	c                          ; 0431B4 || 04320A D8 43 4C 45 8261  			DB    D8H, "CLEAR", 0
	ld	b,e                         ; 04320B || 	ld	b,e                         ; 0431B5
	ld	c,h                         ; 04320C || 	ld	c,h                         ; 0431B6
	ld	b,l                         ; 04320D || 	ld	b,l                         ; 0431B7
	ld	b,c                         ; 04320E || 	ld	b,c                         ; 0431B8
	nop.sil                        ; 04320F || 	nop.sil                        ; 0431B9
	exx                            ; 043211 || 	exx                            ; 0431BB || 043211 D9 43 4C 4F 8262  			DB    D9H, "CLOSE", 0
	ld	b,e                         ; 043212 || 	ld	b,e                         ; 0431BC
	ld	c,h                         ; 043213 || 	ld	c,h                         ; 0431BD
	ld	c,a                         ; 043214 || 	ld	c,a                         ; 0431BE
	ld	d,e                         ; 043215 || 	ld	d,e                         ; 0431BF
	ld	b,l                         ; 043216 || 	ld	b,l                         ; 0431C0
	nop                            ; 043217 || 	nop                            ; 0431C1
	jp	c,$474c43                   ; 043218 || 	jp	c,$474c43                   ; 0431C2 || 043218 DA 43 4C 47 8263  			DB    DAH, "CLG", 0
	nop                            ; 04321C || 	nop                            ; 0431C6
	in	a,($43)                     ; 04321D || 	in	a,($43)                     ; 0431C7 || 04321D DB 43 4C 53 8264  			DB    DBH, "CLS", 0
	ld	c,h                         ; 04321F || 	ld	c,h                         ; 0431C9
	ld	d,e                         ; 043220 || 	ld	d,e                         ; 0431CA
	nop                            ; 043221 || 	nop                            ; 0431CB
	sbc	a,e                        ; 043222 || 	sbc	a,e                        ; 0431CC || 043222 9B 43 4F 53 8265  			DB    9BH, "COS"
	ld	b,e                         ; 043223 || 	ld	b,e                         ; 0431CD
	ld	c,a                         ; 043224 || 	ld	c,a                         ; 0431CE
	ld	d,e                         ; 043225 || 	ld	d,e                         ; 0431CF
	sbc	a,h                        ; 043226 || 	sbc	a,h                        ; 0431D0 || 043226 9C 43 4F 55 8266  			DB    9CH, "COUNT", 0
	ld	b,e                         ; 043227 || 	ld	b,e                         ; 0431D1
	ld	c,a                         ; 043228 || 	ld	c,a                         ; 0431D2
	ld	d,l                         ; 043229 || 	ld	d,l                         ; 0431D3
	ld	c,(hl)                      ; 04322A || 	ld	c,(hl)                      ; 0431D4
	ld	d,h                         ; 04322B || 	ld	d,h                         ; 0431D5
	nop                            ; 04322C || 	nop                            ; 0431D6
	call	c,$544144                 ; 04322D || 	call	c,$544144                 ; 0431D7 || 04322D DC 44 41 54 8267  			DB    DCH, "DATA"
	ld	b,c                         ; 043231 || 	ld	b,c                         ; 0431DB
	sbc	a,l                        ; 043232 || 	sbc	a,l                        ; 0431DC || 043232 9D 44 45 47 8268  			DB    9DH, "DEG"
	ld	b,h                         ; 043233 || 	ld	b,h                         ; 0431DD
	ld	b,l                         ; 043234 || 	ld	b,l                         ; 0431DE
	ld	b,a                         ; 043235 || 	ld	b,a                         ; 0431DF
	ld	b,ixh                       ; 043236 || 	ld	b,ixh                       ; 0431E0 || 043236 DD 44 45 46 8269  			DB    DDH, "DEF"
	ld	b,l                         ; 043238 || 	ld	b,l                         ; 0431E2
	ld	b,(hl)                      ; 043239 || 	ld	b,(hl)                      ; 0431E3
	rst	$00                        ; 04323A || 	rst	$00                        ; 0431E4 || 04323A C7 44 45 4C 8270  			DB    C7H, "DELETE"
	ld	b,h                         ; 04323B || 	ld	b,h                         ; 0431E5
	ld	b,l                         ; 04323C || 	ld	b,l                         ; 0431E6
	ld	c,h                         ; 04323D || 	ld	c,h                         ; 0431E7
	ld	b,l                         ; 04323E || 	ld	b,l                         ; 0431E8
	ld	d,h                         ; 04323F || 	ld	d,h                         ; 0431E9
	ld	b,l                         ; 043240 || 	ld	b,l                         ; 0431EA
	add	a,c                        ; 043241 || 	add	a,c                        ; 0431EB || 043241 81 44 49 56 8271  			DB    81H, "DIV"
	ld	b,h                         ; 043242 || 	ld	b,h                         ; 0431EC
	ld.lis	d,(hl)                  ; 043243 || 	ld.lis	d,(hl)                  ; 0431ED
	sbc	a,$44                      ; 043245 || 	sbc	a,$44                      ; 0431EF || 043245 DE 44 49 4D 8272  			DB    DEH, "DIM"
	ld.lis	c,l                     ; 043247 || 	ld.lis	c,l                     ; 0431F1
	rst	$18                        ; 043249 || 	rst	$18                        ; 0431F3 || 043249 DF 44 52 41 8273  			DB    DFH, "DRAW"
	ld	b,h                         ; 04324A || 	ld	b,h                         ; 0431F4
	ld.sil	b,c                     ; 04324B || 	ld.sil	b,c                     ; 0431F5
	ld	d,a                         ; 04324D || 	ld	d,a                         ; 0431F7
	pop	hl                         ; 04324E || 	pop	hl                         ; 0431F8 || 04324E E1 45 4E 44 8274  			DB    E1H, "ENDPROC", 0
	ld	b,l                         ; 04324F || 	ld	b,l                         ; 0431F9
	ld	c,(hl)                      ; 043250 || 	ld	c,(hl)                      ; 0431FA
	ld	b,h                         ; 043251 || 	ld	b,h                         ; 0431FB
	ld	d,b                         ; 043252 || 	ld	d,b                         ; 0431FC
	ld.sil	c,a                     ; 043253 || 	ld.sil	c,a                     ; 0431FD
	ld	b,e                         ; 043255 || 	ld	b,e                         ; 0431FF
	nop                            ; 043256 || 	nop                            ; 043200
	ret	po                         ; 043257 || 	ret	po                         ; 043201 || 043257 E0 45 4E 44 8275  			DB    E0H, "END", 0
	ld	b,l                         ; 043258 || 	ld	b,l                         ; 043202
	ld	c,(hl)                      ; 043259 || 	ld	c,(hl)                      ; 043203
	ld	b,h                         ; 04325A || 	ld	b,h                         ; 043204
	nop                            ; 04325B || 	nop                            ; 043205
	jp	po,$564e45                  ; 04325C || 	jp	po,$564e45                  ; 043206 || 04325C E2 45 4E 56 8276  			DB    E2H, "ENVELOPE"
	ld	b,l                         ; 043260 || 	ld	b,l                         ; 04320A
	ld	c,h                         ; 043261 || 	ld	c,h                         ; 04320B
	ld	c,a                         ; 043262 || 	ld	c,a                         ; 04320C
	ld	d,b                         ; 043263 || 	ld	d,b                         ; 04320D
	ld	b,l                         ; 043264 || 	ld	b,l                         ; 04320E
	adc	a,e                        ; 043265 || 	adc	a,e                        ; 04320F || 043265 8B 45 4C 53 8277  			DB    8BH, "ELSE"
	ld	b,l                         ; 043266 || 	ld	b,l                         ; 043210
	ld	c,h                         ; 043267 || 	ld	c,h                         ; 043211
	ld	d,e                         ; 043268 || 	ld	d,e                         ; 043212
	ld	b,l                         ; 043269 || 	ld	b,l                         ; 043213
	and	b                          ; 04326A || 	and	b                          ; 043214 || 04326A A0 45 56 41 8278  			DB    A0H, "EVAL"
	ld	b,l                         ; 04326B || 	ld	b,l                         ; 043215
	ld	d,(hl)                      ; 04326C || 	ld	d,(hl)                      ; 043216
	ld	b,c                         ; 04326D || 	ld	b,c                         ; 043217
	ld	c,h                         ; 04326E || 	ld	c,h                         ; 043218
	sbc	a,(hl)                     ; 04326F || 	sbc	a,(hl)                     ; 043219 || 04326F 9E 45 52 4C 8279  			DB    9EH, "ERL", 0
	ld	b,l                         ; 043270 || 	ld	b,l                         ; 04321A
	ld.sil	c,h                     ; 043271 || 	ld.sil	c,h                     ; 04321B
	nop                            ; 043273 || 	nop                            ; 04321D
	add	a,l                        ; 043274 || 	add	a,l                        ; 04321E || 043274 85 45 52 52 8280  			DB    85H, "ERROR"
	ld	b,l                         ; 043275 || 	ld	b,l                         ; 04321F
	noni.sil                       ; 043276 || 	noni.sil                       ; 043220
	ld.sil	c,a                     ; 043277 || 	ld.sil	c,a                     ; 043221
	push.sil	bc                    ; 043279 || 	push.sil	bc                    ; 043223
	ld	b,l                         ; 04327B || 	ld	b,l                         ; 043225
	ld	c,a                         ; 04327C || 	ld	c,a                         ; 043226
	ld	b,(hl)                      ; 04327D || 	ld	b,(hl)                      ; 043227
	nop                            ; 04327E || 	nop                            ; 043228
	add	a,d                        ; 04327F || 	add	a,d                        ; 043229 || 04327F 82 45 4F 52 8282  			DB    82H, "EOR"
	ld	b,l                         ; 043280 || 	ld	b,l                         ; 04322A
	ld	c,a                         ; 043281 || 	ld	c,a                         ; 04322B
	sbc.sil	a,a                    ; 043282 || 	sbc.sil	a,a                    ; 04322C
	ld	b,l                         ; 043284 || 	ld	b,l                         ; 04322E
	noni.sil                       ; 043285 || 	noni.sil                       ; 04322F
	nop.sil                        ; 043286 || 	nop.sil                        ; 043230
	and	c                          ; 043288 || 	and	c                          ; 043232 || 043288 A1 45 58 50 8284  			DB    A1H, "EXP"
	ld	b,l                         ; 043289 || 	ld	b,l                         ; 043233
	ld	e,b                         ; 04328A || 	ld	e,b                         ; 043234
	ld	d,b                         ; 04328B || 	ld	d,b                         ; 043235
	and	d                          ; 04328C || 	and	d                          ; 043236 || 04328C A2 45 58 54 8285  			DB    A2H, "EXT", 0
	ld	b,l                         ; 04328D || 	ld	b,l                         ; 043237
	ld	e,b                         ; 04328E || 	ld	e,b                         ; 043238
	ld	d,h                         ; 04328F || 	ld	d,h                         ; 043239
	nop                            ; 043290 || 	nop                            ; 04323A
	ex	(sp),hl                     ; 043291 || 	ex	(sp),hl                     ; 04323B || 043291 E3 46 4F 52 8286  			DB    E3H, "FOR"
	ld	b,(hl)                      ; 043292 || 	ld	b,(hl)                      ; 04323C
	ld	c,a                         ; 043293 || 	ld	c,a                         ; 04323D
	and.sil	e                      ; 043294 || 	and.sil	e                      ; 04323E
	ld	b,(hl)                      ; 043296 || 	ld	b,(hl)                      ; 043240
	ld	b,c                         ; 043297 || 	ld	b,c                         ; 043241
	ld	c,h                         ; 043298 || 	ld	c,h                         ; 043242
	ld	d,e                         ; 043299 || 	ld	d,e                         ; 043243
	ld	b,l                         ; 04329A || 	ld	b,l                         ; 043244
	nop                            ; 04329B || 	nop                            ; 043245
	and	h                          ; 04329C || 	and	h                          ; 043246 || 04329C A4 46 4E    8288  			DB    A4H, "FN"
	ld	b,(hl)                      ; 04329D || 	ld	b,(hl)                      ; 043247
	ld	c,(hl)                      ; 04329E || 	ld	c,(hl)                      ; 043248
	push	hl                        ; 04329F || 	push	hl                        ; 043249 || 04329F E5 47 4F 54 8289  			DB    E5H, "GOTO"
	ld	b,a                         ; 0432A0 || 	ld	b,a                         ; 04324A
	ld	c,a                         ; 0432A1 || 	ld	c,a                         ; 04324B
	ld	d,h                         ; 0432A2 || 	ld	d,h                         ; 04324C
	ld	c,a                         ; 0432A3 || 	ld	c,a                         ; 04324D
	cp	(hl)                        ; 0432A4 || 	cp	(hl)                        ; 04324E || 0432A4 BE 47 45 54 8290  			DB    BEH, "GET$"
	ld	b,a                         ; 0432A5 || 	ld	b,a                         ; 04324F
	ld	b,l                         ; 0432A6 || 	ld	b,l                         ; 043250
	ld	d,h                         ; 0432A7 || 	ld	d,h                         ; 043251
	inc	h                          ; 0432A8 || 	inc	h                          ; 043252
	and	l                          ; 0432A9 || 	and	l                          ; 043253 || 0432A9 A5 47 45 54 8291  			DB    A5H, "GET"
	ld	b,a                         ; 0432AA || 	ld	b,a                         ; 043254
	ld	b,l                         ; 0432AB || 	ld	b,l                         ; 043255
	ld	d,h                         ; 0432AC || 	ld	d,h                         ; 043256
	call	po,$534f47                ; 0432AD || 	call	po,$534f47                ; 043257 || 0432AD E4 47 4F 53 8292  			DB    E4H, "GOSUB"
	ld	d,l                         ; 0432B1 || 	ld	d,l                         ; 04325B
	ld	b,d                         ; 0432B2 || 	ld	b,d                         ; 04325C
	and	$47                        ; 0432B3 || 	and	$47                        ; 04325D || 0432B3 E6 47 43 4F 8293  			DB    E6H, "GCOL"
	ld	b,e                         ; 0432B5 || 	ld	b,e                         ; 04325F
	ld	c,a                         ; 0432B6 || 	ld	c,a                         ; 043260
	ld	c,h                         ; 0432B7 || 	ld	c,h                         ; 043261
	sub	e                          ; 0432B8 || 	sub	e                          ; 043262 || 0432B8 93 48 49 4D 8294  			DB    93H, "HIMEM", 0
	ld	c,b                         ; 0432B9 || 	ld	c,b                         ; 043263
	ld.lis	c,l                     ; 0432BA || 	ld.lis	c,l                     ; 043264
	ld	b,l                         ; 0432BC || 	ld	b,l                         ; 043266
	ld	c,l                         ; 0432BD || 	ld	c,l                         ; 043267
	nop                            ; 0432BE || 	nop                            ; 043268
	ret	pe                         ; 0432BF || 	ret	pe                         ; 043269 || 0432BF E8 49 4E 50 8295  			DB    E8H, "INPUT"
	ld.lis	c,(hl)                  ; 0432C0 || 	ld.lis	c,(hl)                  ; 04326A
	ld	d,b                         ; 0432C2 || 	ld	d,b                         ; 04326C
	ld	d,l                         ; 0432C3 || 	ld	d,l                         ; 04326D
	ld	d,h                         ; 0432C4 || 	ld	d,h                         ; 04326E
	rst	$20                        ; 0432C5 || 	rst	$20                        ; 04326F || 0432C5 E7 49 46    8296  			DB    E7H, "IF"
	ld.lis	b,(hl)                  ; 0432C6 || 	ld.lis	b,(hl)                  ; 043270
	cp	a                           ; 0432C8 || 	cp	a                           ; 043272 || 0432C8 BF 49 4E 4B 8297  			DB    BFH, "INKEY$"
	ld.lis	c,(hl)                  ; 0432C9 || 	ld.lis	c,(hl)                  ; 043273
	ld	c,e                         ; 0432CB || 	ld	c,e                         ; 043275
	ld	b,l                         ; 0432CC || 	ld	b,l                         ; 043276
	ld	e,c                         ; 0432CD || 	ld	e,c                         ; 043277
	inc	h                          ; 0432CE || 	inc	h                          ; 043278
	and	(hl)                       ; 0432CF || 	and	(hl)                       ; 043279 || 0432CF A6 49 4E 4B 8298  			DB    A6H, "INKEY"
	ld.lis	c,(hl)                  ; 0432D0 || 	ld.lis	c,(hl)                  ; 04327A
	ld	c,e                         ; 0432D2 || 	ld	c,e                         ; 04327C
	ld	b,l                         ; 0432D3 || 	ld	b,l                         ; 04327D
	ld	e,c                         ; 0432D4 || 	ld	e,c                         ; 04327E
	xor	b                          ; 0432D5 || 	xor	b                          ; 04327F || 0432D5 A8 49 4E 54 8299  			DB    A8H, "INT"
	ld.lis	c,(hl)                  ; 0432D6 || 	ld.lis	c,(hl)                  ; 043280
	ld	d,h                         ; 0432D8 || 	ld	d,h                         ; 043282
	and	a                          ; 0432D9 || 	and	a                          ; 043283 || 0432D9 A7 49 4E 53 8300  			DB    A7H, "INSTR("
	ld.lis	c,(hl)                  ; 0432DA || 	ld.lis	c,(hl)                  ; 043284
	ld	d,e                         ; 0432DC || 	ld	d,e                         ; 043286
	ld	d,h                         ; 0432DD || 	ld	d,h                         ; 043287
	jr.sil	z,$-$34                 ; 0432DE || 	jr.sil	z,$-$34                 ; 043288
	ld	c,h                         ; 0432E1 || 	ld	c,h                         ; 04328B
	ld.lis	d,e                     ; 0432E2 || 	ld.lis	d,e                     ; 04328C
	ld	d,h                         ; 0432E4 || 	ld	d,h                         ; 04328E
	add	a,(hl)                     ; 0432E5 || 	add	a,(hl)                     ; 04328F || 0432E5 86 4C 49 4E 8302  			DB    86H, "LINE"
	ld	c,h                         ; 0432E6 || 	ld	c,h                         ; 043290
	ld.lis	c,(hl)                  ; 0432E7 || 	ld.lis	c,(hl)                  ; 043291
	ld	b,l                         ; 0432E9 || 	ld	b,l                         ; 043293
	ret	z                          ; 0432EA || 	ret	z                          ; 043294 || 0432EA C8 4C 4F 41 8303  			DB    C8H, "LOAD"
	ld	c,h                         ; 0432EB || 	ld	c,h                         ; 043295
	ld	c,a                         ; 0432EC || 	ld	c,a                         ; 043296
	ld	b,c                         ; 0432ED || 	ld	b,c                         ; 043297
	ld	b,h                         ; 0432EE || 	ld	b,h                         ; 043298
	sub	d                          ; 0432EF || 	sub	d                          ; 043299 || 0432EF 92 4C 4F 4D 8304  			DB    92H, "LOMEM", 0
	ld	c,h                         ; 0432F0 || 	ld	c,h                         ; 04329A
	ld	c,a                         ; 0432F1 || 	ld	c,a                         ; 04329B
	ld	c,l                         ; 0432F2 || 	ld	c,l                         ; 04329C
	ld	b,l                         ; 0432F3 || 	ld	b,l                         ; 04329D
	ld	c,l                         ; 0432F4 || 	ld	c,l                         ; 04329E
	nop                            ; 0432F5 || 	nop                            ; 04329F
	jp	pe,$434f4c                  ; 0432F6 || 	jp	pe,$434f4c                  ; 0432A0 || 0432F6 EA 4C 4F 43 8305  			DB    EAH, "LOCAL"
	ld	b,c                         ; 0432FA || 	ld	b,c                         ; 0432A4
	ld	c,h                         ; 0432FB || 	ld	c,h                         ; 0432A5
	ret	nz                         ; 0432FC || 	ret	nz                         ; 0432A6 || 0432FC C0 4C 45 46 8306  			DB    C0H, "LEFT$("
	ld	c,h                         ; 0432FD || 	ld	c,h                         ; 0432A7
	ld	b,l                         ; 0432FE || 	ld	b,l                         ; 0432A8
	ld	b,(hl)                      ; 0432FF || 	ld	b,(hl)                      ; 0432A9
	ld	d,h                         ; 043300 || 	ld	d,h                         ; 0432AA
	inc	h                          ; 043301 || 	inc	h                          ; 0432AB
	jr	z,$-$55                     ; 043302 || 	jr	z,$-$55                     ; 0432AC
	ld	c,h                         ; 043304 || 	ld	c,h                         ; 0432AE
	ld	b,l                         ; 043305 || 	ld	b,l                         ; 0432AF
	ld	c,(hl)                      ; 043306 || 	ld	c,(hl)                      ; 0432B0
	jp	(hl)                        ; 043307 || 	jp	(hl)                        ; 0432B1 || 043307 E9 4C 45 54 8308  			DB    E9H, "LET"
	ld	c,h                         ; 043308 || 	ld	c,h                         ; 0432B2
	ld	b,l                         ; 043309 || 	ld	b,l                         ; 0432B3
	ld	d,h                         ; 04330A || 	ld	d,h                         ; 0432B4
	xor	e                          ; 04330B || 	xor	e                          ; 0432B5 || 04330B AB 4C 4F 47 8309  			DB    ABH, "LOG"
	ld	c,h                         ; 04330C || 	ld	c,h                         ; 0432B6
	ld	c,a                         ; 04330D || 	ld	c,a                         ; 0432B7
	ld	b,a                         ; 04330E || 	ld	b,a                         ; 0432B8
	xor	d                          ; 04330F || 	xor	d                          ; 0432B9 || 04330F AA 4C 4E    8310  			DB    AAH, "LN"
	ld	c,h                         ; 043310 || 	ld	c,h                         ; 0432BA
	ld	c,(hl)                      ; 043311 || 	ld	c,(hl)                      ; 0432BB
	pop	bc                         ; 043312 || 	pop	bc                         ; 0432BC || 043312 C1 4D 49 44 8311  			DB    C1H, "MID$("
	ld	c,l                         ; 043313 || 	ld	c,l                         ; 0432BD
	ld.lis	b,h                     ; 043314 || 	ld.lis	b,h                     ; 0432BE
	inc	h                          ; 043316 || 	inc	h                          ; 0432C0
	jr	z,$-$13                     ; 043317 || 	jr	z,$-$13                     ; 0432C1
	ld	c,l                         ; 043319 || 	ld	c,l                         ; 0432C3
	ld	c,a                         ; 04331A || 	ld	c,a                         ; 0432C4
	ld	b,h                         ; 04331B || 	ld	b,h                         ; 0432C5
	ld	b,l                         ; 04331C || 	ld	b,l                         ; 0432C6
	add	a,e                        ; 04331D || 	add	a,e                        ; 0432C7 || 04331D 83 4D 4F 44 8313  			DB    83H, "MOD"
	ld	c,l                         ; 04331E || 	ld	c,l                         ; 0432C8
	ld	c,a                         ; 04331F || 	ld	c,a                         ; 0432C9
	ld	b,h                         ; 043320 || 	ld	b,h                         ; 0432CA
	call	pe,$564f4d                ; 043321 || 	call	pe,$564f4d                ; 0432CB || 043321 EC 4D 4F 56 8314  			DB    ECH, "MOVE"
	ld	b,l                         ; 043325 || 	ld	b,l                         ; 0432CF
	trap                           ; 043326 || 	trap                           ; 0432D0 || 043326 ED 4E 45 58 8315  			DB    EDH, "NEXT"
	ld	b,l                         ; 043328 || 	ld	b,l                         ; 0432D2
	ld	e,b                         ; 043329 || 	ld	e,b                         ; 0432D3
	ld	d,h                         ; 04332A || 	ld	d,h                         ; 0432D4
	jp	z,$57454e                   ; 04332B || 	jp	z,$57454e                   ; 0432D5 || 04332B CA 4E 45 57 8316  			DB    CAH, "NEW", 0
	nop                            ; 04332F || 	nop                            ; 0432D9
	xor	h                          ; 043330 || 	xor	h                          ; 0432DA || 043330 AC 4E 4F 54 8317  			DB    ACH, "NOT"
	ld	c,(hl)                      ; 043331 || 	ld	c,(hl)                      ; 0432DB
	ld	c,a                         ; 043332 || 	ld	c,a                         ; 0432DC
	ld	d,h                         ; 043333 || 	ld	d,h                         ; 0432DD
	bit	1,a                        ; 043334 || 	bit	1,a                        ; 0432DE || 043334 CB 4F 4C 44 8318  			DB    CBH, "OLD", 0
	ld	c,h                         ; 043336 || 	ld	c,h                         ; 0432E0
	ld	b,h                         ; 043337 || 	ld	b,h                         ; 0432E1
	nop                            ; 043338 || 	nop                            ; 0432E2
	xor	$4f                        ; 043339 || 	xor	$4f                        ; 0432E3 || 043339 EE 4F 4E    8319  			DB    EEH, "ON"
	ld	c,(hl)                      ; 04333B || 	ld	c,(hl)                      ; 0432E5
	add	a,a                        ; 04333C || 	add	a,a                        ; 0432E6 || 04333C 87 4F 46 46 8320  			DB    87H, "OFF"
	ld	c,a                         ; 04333D || 	ld	c,a                         ; 0432E7
	ld	b,(hl)                      ; 04333E || 	ld	b,(hl)                      ; 0432E8
	ld	b,(hl)                      ; 04333F || 	ld	b,(hl)                      ; 0432E9
	add	a,h                        ; 043340 || 	add	a,h                        ; 0432EA || 043340 84 4F 52    8321  			DB    84H, "OR"
	ld	c,a                         ; 043341 || 	ld	c,a                         ; 0432EB
	adc.sil	a,(hl)                 ; 043342 || 	adc.sil	a,(hl)                 ; 0432EC
	ld	c,a                         ; 043344 || 	ld	c,a                         ; 0432EE
	ld	d,b                         ; 043345 || 	ld	d,b                         ; 0432EF
	ld	b,l                         ; 043346 || 	ld	b,l                         ; 0432F0
	ld	c,(hl)                      ; 043347 || 	ld	c,(hl)                      ; 0432F1
	ld.lis	c,(hl)                  ; 043348 || 	ld.lis	c,(hl)                  ; 0432F2
	xor	(hl)                       ; 04334A || 	xor	(hl)                       ; 0432F4 || 04334A AE 4F 50 45 8323  			DB    AEH, "OPENOUT"
	ld	c,a                         ; 04334B || 	ld	c,a                         ; 0432F5
	ld	d,b                         ; 04334C || 	ld	d,b                         ; 0432F6
	ld	b,l                         ; 04334D || 	ld	b,l                         ; 0432F7
	ld	c,(hl)                      ; 04334E || 	ld	c,(hl)                      ; 0432F8
	ld	c,a                         ; 04334F || 	ld	c,a                         ; 0432F9
	ld	d,l                         ; 043350 || 	ld	d,l                         ; 0432FA
	ld	d,h                         ; 043351 || 	ld	d,h                         ; 0432FB
	xor	l                          ; 043352 || 	xor	l                          ; 0432FC || 043352 AD 4F 50 45 8324  			DB    ADH, "OPENUP"
	ld	c,a                         ; 043353 || 	ld	c,a                         ; 0432FD
	ld	d,b                         ; 043354 || 	ld	d,b                         ; 0432FE
	ld	b,l                         ; 043355 || 	ld	b,l                         ; 0432FF
	ld	c,(hl)                      ; 043356 || 	ld	c,(hl)                      ; 043300
	ld	d,l                         ; 043357 || 	ld	d,l                         ; 043301
	ld	d,b                         ; 043358 || 	ld	d,b                         ; 043302
	rst	$38                        ; 043359 || 	rst	$38                        ; 043303 || 043359 FF 4F 53 43 8325  			DB    FFH, "OSCLI"
	ld	c,a                         ; 04335A || 	ld	c,a                         ; 043304
	ld	d,e                         ; 04335B || 	ld	d,e                         ; 043305
	ld	b,e                         ; 04335C || 	ld	b,e                         ; 043306
	ld	c,h                         ; 04335D || 	ld	c,h                         ; 043307
	pop.lis	af                     ; 04335E || 	pop.lis	af                     ; 043308
	ld	d,b                         ; 043360 || 	ld	d,b                         ; 04330A
	noni.sil                       ; 043361 || 	noni.sil                       ; 04330B
	ld.lis	c,(hl)                  ; 043362 || 	ld.lis	c,(hl)                  ; 04330C
	ld	d,h                         ; 043364 || 	ld	d,h                         ; 04330E
	sub	b                          ; 043365 || 	sub	b                          ; 04330F || 043365 90 50 41 47 8327  			DB    90H, "PAGE", 0
	ld	d,b                         ; 043366 || 	ld	d,b                         ; 043310
	ld	b,c                         ; 043367 || 	ld	b,c                         ; 043311
	ld	b,a                         ; 043368 || 	ld	b,a                         ; 043312
	ld	b,l                         ; 043369 || 	ld	b,l                         ; 043313
	nop                            ; 04336A || 	nop                            ; 043314
	adc	a,a                        ; 04336B || 	adc	a,a                        ; 043315 || 04336B 8F 50 54 52 8328  			DB    8FH, "PTR", 0
	ld	d,b                         ; 04336C || 	ld	d,b                         ; 043316
	ld	d,h                         ; 04336D || 	ld	d,h                         ; 043317
	nop.sil                        ; 04336E || 	nop.sil                        ; 043318
	xor	a                          ; 043370 || 	xor	a                          ; 04331A || 043370 AF 50 49 00 8329  			DB    AFH, "PI", 0
	ld	d,b                         ; 043371 || 	ld	d,b                         ; 04331B
	nop.lis                        ; 043372 || 	nop.lis                        ; 04331C
	ret	p                          ; 043374 || 	ret	p                          ; 04331E || 043374 F0 50 4C 4F 8330  			DB    F0H, "PLOT"
	ld	d,b                         ; 043375 || 	ld	d,b                         ; 04331F
	ld	c,h                         ; 043376 || 	ld	c,h                         ; 043320
	ld	c,a                         ; 043377 || 	ld	c,a                         ; 043321
	ld	d,h                         ; 043378 || 	ld	d,h                         ; 043322
	or	b                           ; 043379 || 	or	b                           ; 043323 || 043379 B0 50 4F 49 8331  			DB    B0H, "POINT("
	ld	d,b                         ; 04337A || 	ld	d,b                         ; 043324
	ld	c,a                         ; 04337B || 	ld	c,a                         ; 043325
	ld.lis	c,(hl)                  ; 04337C || 	ld.lis	c,(hl)                  ; 043326
	ld	d,h                         ; 04337E || 	ld	d,h                         ; 043328
	jr	z,$-$0c                     ; 04337F || 	jr	z,$-$0c                     ; 043329
	ld	d,b                         ; 043381 || 	ld	d,b                         ; 04332B
	ld.sil	c,a                     ; 043382 || 	ld.sil	c,a                     ; 04332C
	ld	b,e                         ; 043384 || 	ld	b,e                         ; 04332E
	or	c                           ; 043385 || 	or	c                           ; 04332F || 043385 B1 50 4F 53 8333  			DB    B1H, "POS", 0
	ld	d,b                         ; 043386 || 	ld	d,b                         ; 043330
	ld	c,a                         ; 043387 || 	ld	c,a                         ; 043331
	ld	d,e                         ; 043388 || 	ld	d,e                         ; 043332
	nop                            ; 043389 || 	nop                            ; 043333
	adc	a,$50                      ; 04338A || 	adc	a,$50                      ; 043334 || 04338A CE 50 55 54 8334  			DB    CEH, "PUT"
	ld	d,l                         ; 04338C || 	ld	d,l                         ; 043336
	ld	d,h                         ; 04338D || 	ld	d,h                         ; 043337
	ret	m                          ; 04338E || 	ret	m                          ; 043338 || 04338E F8 52 45 54 8335  			DB    F8H, "RETURN", 0
	ld.sil	b,l                     ; 04338F || 	ld.sil	b,l                     ; 043339
	ld	d,h                         ; 043391 || 	ld	d,h                         ; 04333B
	ld	d,l                         ; 043392 || 	ld	d,l                         ; 04333C
	ld.sil	c,(hl)                  ; 043393 || 	ld.sil	c,(hl)                  ; 04333D
	nop                            ; 043395 || 	nop                            ; 04333F
	push	af                        ; 043396 || 	push	af                        ; 043340 || 043396 F5 52 45 50 8336  			DB    F5H, "REPEAT"
	ld.sil	b,l                     ; 043397 || 	ld.sil	b,l                     ; 043341
	ld	d,b                         ; 043399 || 	ld	d,b                         ; 043343
	ld	b,l                         ; 04339A || 	ld	b,l                         ; 043344
	ld	b,c                         ; 04339B || 	ld	b,c                         ; 043345
	ld	d,h                         ; 04339C || 	ld	d,h                         ; 043346
	or	$52                         ; 04339D || 	or	$52                         ; 043347 || 04339D F6 52 45 50 8337  			DB    F6H, "REPORT", 0
	ld	b,l                         ; 04339F || 	ld	b,l                         ; 043349
	ld	d,b                         ; 0433A0 || 	ld	d,b                         ; 04334A
	ld	c,a                         ; 0433A1 || 	ld	c,a                         ; 04334B
	ld.sil	d,h                     ; 0433A2 || 	ld.sil	d,h                     ; 04334C
	nop                            ; 0433A4 || 	nop                            ; 04334E
	di                             ; 0433A5 || 	di                             ; 04334F || 0433A5 F3 52 45 41 8338  			DB    F3H, "READ"
	ld.sil	b,l                     ; 0433A6 || 	ld.sil	b,l                     ; 043350
	ld	b,c                         ; 0433A8 || 	ld	b,c                         ; 043352
	ld	b,h                         ; 0433A9 || 	ld	b,h                         ; 043353
	call	p,$4d4552                 ; 0433AA || 	call	p,$4d4552                 ; 043354 || 0433AA F4 52 45 4D 8339  			DB    F4H, "REM"
	ld	sp,hl                       ; 0433AE || 	ld	sp,hl                       ; 043358 || 0433AE F9 52 55 4E 8340  			DB    F9H, "RUN", 0
	ld.sil	d,l                     ; 0433AF || 	ld.sil	d,l                     ; 043359
	ld	c,(hl)                      ; 0433B1 || 	ld	c,(hl)                      ; 04335B
	nop                            ; 0433B2 || 	nop                            ; 04335C
	or	d                           ; 0433B3 || 	or	d                           ; 04335D || 0433B3 B2 52 41 44 8341  			DB    B2H, "RAD"
	ld.sil	b,c                     ; 0433B4 || 	ld.sil	b,c                     ; 04335E
	ld	b,h                         ; 0433B6 || 	ld	b,h                         ; 043360
	rst	$30                        ; 0433B7 || 	rst	$30                        ; 043361 || 0433B7 F7 52 45 53 8342  			DB    F7H, "RESTORE"
	ld.sil	b,l                     ; 0433B8 || 	ld.sil	b,l                     ; 043362
	ld	d,e                         ; 0433BA || 	ld	d,e                         ; 043364
	ld	d,h                         ; 0433BB || 	ld	d,h                         ; 043365
	ld	c,a                         ; 0433BC || 	ld	c,a                         ; 043366
	ld.sil	b,l                     ; 0433BD || 	ld.sil	b,l                     ; 043367
	jp	nz,$474952                  ; 0433BF || 	jp	nz,$474952                  ; 043369 || 0433BF C2 52 49 47 8343  			DB    C2H, "RIGHT$("
	ld	c,b                         ; 0433C3 || 	ld	c,b                         ; 04336D
	ld	d,h                         ; 0433C4 || 	ld	d,h                         ; 04336E
	inc	h                          ; 0433C5 || 	inc	h                          ; 04336F
	jr	z,$-$4b                     ; 0433C6 || 	jr	z,$-$4b                     ; 043370
	ld.sil	c,(hl)                  ; 0433C8 || 	ld.sil	c,(hl)                  ; 043372
	ld	b,h                         ; 0433CA || 	ld	b,h                         ; 043374
	nop                            ; 0433CB || 	nop                            ; 043375
	call	z,$4e4552                 ; 0433CC || 	call	z,$4e4552                 ; 043376 || 0433CC CC 52 45 4E 8345  			DB    CCH, "RENUMBER"
	ld	d,l                         ; 0433D0 || 	ld	d,l                         ; 04337A
	ld	c,l                         ; 0433D1 || 	ld	c,l                         ; 04337B
	ld	b,d                         ; 0433D2 || 	ld	b,d                         ; 04337C
	ld	b,l                         ; 0433D3 || 	ld	b,l                         ; 04337D
	adc.sil	a,b                    ; 0433D4 || 	adc.sil	a,b                    ; 04337E
	ld	d,e                         ; 0433D6 || 	ld	d,e                         ; 043380
	ld	d,h                         ; 0433D7 || 	ld	d,h                         ; 043381
	ld	b,l                         ; 0433D8 || 	ld	b,l                         ; 043382
	ld	d,b                         ; 0433D9 || 	ld	d,b                         ; 043383
	call	$564153                   ; 0433DA || 	call	$564153                   ; 043384 || 0433DA CD 53 41 56 8347  			DB    CDH, "SAVE"
	ld	b,l                         ; 0433DE || 	ld	b,l                         ; 043388
	or	h                           ; 0433DF || 	or	h                           ; 043389 || 0433DF B4 53 47 4E 8348  			DB    B4H, "SGN"
	ld	d,e                         ; 0433E0 || 	ld	d,e                         ; 04338A
	ld	b,a                         ; 0433E1 || 	ld	b,a                         ; 04338B
	ld	c,(hl)                      ; 0433E2 || 	ld	c,(hl)                      ; 04338C
	or	l                           ; 0433E3 || 	or	l                           ; 04338D || 0433E3 B5 53 49 4E 8349  			DB    B5H, "SIN"
	ld	d,e                         ; 0433E4 || 	ld	d,e                         ; 04338E
	ld.lis	c,(hl)                  ; 0433E5 || 	ld.lis	c,(hl)                  ; 04338F
	or	(hl)                        ; 0433E7 || 	or	(hl)                        ; 043391 || 0433E7 B6 53 51 52 8350  			DB    B6H, "SQR"
	ld	d,e                         ; 0433E8 || 	ld	d,e                         ; 043392
	ld	d,c                         ; 0433E9 || 	ld	d,c                         ; 043393
	adc.sil	a,c                    ; 0433EA || 	adc.sil	a,c                    ; 043394
	ld	d,e                         ; 0433EC || 	ld	d,e                         ; 043396
	ld	d,b                         ; 0433ED || 	ld	d,b                         ; 043397
	ld	b,e                         ; 0433EE || 	ld	b,e                         ; 043398
	jp	$525453                     ; 0433EF || 	jp	$525453                     ; 043399 || 0433EF C3 53 54 52 8352  			DB    C3H, "STR$"
	inc	h                          ; 0433F3 || 	inc	h                          ; 04339D
	call	nz,$525453                ; 0433F4 || 	call	nz,$525453                ; 04339E || 0433F4 C4 53 54 52 8353  			DB    C4H, "STRING$("
	ld.lis	c,(hl)                  ; 0433F8 || 	ld.lis	c,(hl)                  ; 0433A2
	ld	b,a                         ; 0433FA || 	ld	b,a                         ; 0433A4
	inc	h                          ; 0433FB || 	inc	h                          ; 0433A5
	jr	z,$-$2a                     ; 0433FC || 	jr	z,$-$2a                     ; 0433A6
	ld	d,e                         ; 0433FE || 	ld	d,e                         ; 0433A8
	ld	c,a                         ; 0433FF || 	ld	c,a                         ; 0433A9
	ld	d,l                         ; 043400 || 	ld	d,l                         ; 0433AA
	ld	c,(hl)                      ; 043401 || 	ld	c,(hl)                      ; 0433AB
	ld	b,h                         ; 043402 || 	ld	b,h                         ; 0433AC
	jp	m,$4f5453                   ; 043403 || 	jp	m,$4f5453                   ; 0433AD || 043403 FA 53 54 4F 8355  			DB    FAH, "STOP", 0
	ld	d,b                         ; 043407 || 	ld	d,b                         ; 0433B1
	nop                            ; 043408 || 	nop                            ; 0433B2
	or	a                           ; 043409 || 	or	a                           ; 0433B3 || 043409 B7 54 41 4E 8356  			DB    B7H, "TAN"
	ld	d,h                         ; 04340A || 	ld	d,h                         ; 0433B4
	ld	b,c                         ; 04340B || 	ld	b,c                         ; 0433B5
	ld	c,(hl)                      ; 04340C || 	ld	c,(hl)                      ; 0433B6
	adc	a,h                        ; 04340D || 	adc	a,h                        ; 0433B7 || 04340D 8C 54 48 45 8357  			DB    8CH, "THEN"
	ld	d,h                         ; 04340E || 	ld	d,h                         ; 0433B8
	ld	c,b                         ; 04340F || 	ld	c,b                         ; 0433B9
	ld	b,l                         ; 043410 || 	ld	b,l                         ; 0433BA
	ld	c,(hl)                      ; 043411 || 	ld	c,(hl)                      ; 0433BB
	cp	b                           ; 043412 || 	cp	b                           ; 0433BC || 043412 B8 54 4F    8358  			DB    B8H, "TO"
	ld	d,h                         ; 043413 || 	ld	d,h                         ; 0433BD
	ld	c,a                         ; 043414 || 	ld	c,a                         ; 0433BE
	adc	a,d                        ; 043415 || 	adc	a,d                        ; 0433BF || 043415 8A 54 41 42 8359  			DB    8AH, "TAB("
	ld	d,h                         ; 043416 || 	ld	d,h                         ; 0433C0
	ld	b,c                         ; 043417 || 	ld	b,c                         ; 0433C1
	ld	b,d                         ; 043418 || 	ld	b,d                         ; 0433C2
	jr	z,$-$02                     ; 043419 || 	jr	z,$-$02                     ; 0433C3
	ld	d,h                         ; 04341B || 	ld	d,h                         ; 0433C5
	ld.sil	b,c                     ; 04341C || 	ld.sil	b,c                     ; 0433C6
	ld	b,e                         ; 04341E || 	ld	b,e                         ; 0433C8
	ld	b,l                         ; 04341F || 	ld	b,l                         ; 0433C9
	sub	c                          ; 043420 || 	sub	c                          ; 0433CA || 043420 91 54 49 4D 8361  			DB    91H, "TIME", 0
	ld	d,h                         ; 043421 || 	ld	d,h                         ; 0433CB
	ld.lis	c,l                     ; 043422 || 	ld.lis	c,l                     ; 0433CC
	ld	b,l                         ; 043424 || 	ld	b,l                         ; 0433CE
	nop                            ; 043425 || 	nop                            ; 0433CF
	cp	c                           ; 043426 || 	cp	c                           ; 0433D0 || 043426 B9 54 52 55 8362  			DB    B9H, "TRUE", 0
	ld	d,h                         ; 043427 || 	ld	d,h                         ; 0433D1
	ld.sil	d,l                     ; 043428 || 	ld.sil	d,l                     ; 0433D2
	ld	b,l                         ; 04342A || 	ld	b,l                         ; 0433D4
	nop                            ; 04342B || 	nop                            ; 0433D5
	ld	d,iyl                       ; 04342C || 	ld	d,iyl                       ; 0433D6 || 04342C FD 55 4E 54 8363  			DB    FDH, "UNTIL"
	ld	c,(hl)                      ; 04342E || 	ld	c,(hl)                      ; 0433D8
	ld	d,h                         ; 04342F || 	ld	d,h                         ; 0433D9
	ld.lis	c,h                     ; 043430 || 	ld.lis	c,h                     ; 0433DA
	cp	d                           ; 043432 || 	cp	d                           ; 0433DC || 043432 BA 55 53 52 8364  			DB    BAH, "USR"
	ld	d,l                         ; 043433 || 	ld	d,l                         ; 0433DD
	ld	d,e                         ; 043434 || 	ld	d,e                         ; 0433DE
	rst.sil	$28                    ; 043435 || 	rst.sil	$28                    ; 0433DF
	ld	d,(hl)                      ; 043437 || 	ld	d,(hl)                      ; 0433E1
	ld	b,h                         ; 043438 || 	ld	b,h                         ; 0433E2
	ld	d,l                         ; 043439 || 	ld	d,l                         ; 0433E3
	cp	e                           ; 04343A || 	cp	e                           ; 0433E4 || 04343A BB 56 41 4C 8366  			DB    BBH, "VAL"
	ld	d,(hl)                      ; 04343B || 	ld	d,(hl)                      ; 0433E5
	ld	b,c                         ; 04343C || 	ld	b,c                         ; 0433E6
	ld	c,h                         ; 04343D || 	ld	c,h                         ; 0433E7
	cp	h                           ; 04343E || 	cp	h                           ; 0433E8 || 04343E BC 56 50 4F 8367  			DB    BCH, "VPOS", 0
	ld	d,(hl)                      ; 04343F || 	ld	d,(hl)                      ; 0433E9
	ld	d,b                         ; 043440 || 	ld	d,b                         ; 0433EA
	ld	c,a                         ; 043441 || 	ld	c,a                         ; 0433EB
	ld	d,e                         ; 043442 || 	ld	d,e                         ; 0433EC
	nop                            ; 043443 || 	nop                            ; 0433ED
	cp	$57                         ; 043444 || 	cp	$57                         ; 0433EE || 043444 FE 57 49 44 8368  			DB    FEH, "WIDTH"
	ld.lis	b,h                     ; 043446 || 	ld.lis	b,h                     ; 0433F0
	ld	d,h                         ; 043448 || 	ld	d,h                         ; 0433F2
	ld	c,b                         ; 043449 || 	ld	c,b                         ; 0433F3
	out	($48),a                    ; 04344A || 	out	($48),a                    ; 0433F4 || 04344A D3 48 49 4D 8369  			DB    D3H, "HIMEM"
	ld.lis	c,l                     ; 04344C || 	ld.lis	c,l                     ; 0433F6
	ld	b,l                         ; 04344E || 	ld	b,l                         ; 0433F8
	ld	c,l                         ; 04344F || 	ld	c,l                         ; 0433F9
	jp	nc,$4d4f4c                  ; 043450 || 	jp	nc,$4d4f4c                  ; 0433FA || 043450 D2 4C 4F 4D 8370  			DB    D2H, "LOMEM"
	ld	b,l                         ; 043454 || 	ld	b,l                         ; 0433FE
	ld	c,l                         ; 043455 || 	ld	c,l                         ; 0433FF
	ret	nc                         ; 043456 || 	ret	nc                         ; 043400 || 043456 D0 50 41 47 8371  			DB    D0H, "PAGE"
	ld	d,b                         ; 043457 || 	ld	d,b                         ; 043401
	ld	b,c                         ; 043458 || 	ld	b,c                         ; 043402
	ld	b,a                         ; 043459 || 	ld	b,a                         ; 043403
	ld	b,l                         ; 04345A || 	ld	b,l                         ; 043404
	rst	$08                        ; 04345B || 	rst	$08                        ; 043405 || 04345B CF 50 54 52 8372  			DB    CFH, "PTR"
	ld	d,b                         ; 04345C || 	ld	d,b                         ; 043406
	ld	d,h                         ; 04345D || 	ld	d,h                         ; 043407
	pop.sil	de                     ; 04345E || 	pop.sil	de                     ; 043408
	ld	d,h                         ; 043460 || 	ld	d,h                         ; 04340A
	ld.lis	c,l                     ; 043461 || 	ld.lis	c,l                     ; 04340B
	ld	b,l                         ; 043463 || 	ld	b,l                         ; 04340D
	ld	bc,$73694d                  ; 043464 || 	ld	bc,$73694d                  ; 04340E || 043464 01 4D 69 73 8377  			DB    01H, "Missing "
	ld	(hl),e                      ; 043468 || 	ld	(hl),e                      ; 043412
	ld	l,c                         ; 043469 || 	ld	l,c                         ; 043413
	ld	l,(hl)                      ; 04346A || 	ld	l,(hl)                      ; 043414
	ld	h,a                         ; 04346B || 	ld	h,a                         ; 043415
	jr	nz,$+$04                    ; 04346C || 	jr	nz,$+$04                    ; 043416
	ld	c,(hl)                      ; 04346E || 	ld	c,(hl)                      ; 043418
	ld	l,a                         ; 04346F || 	ld	l,a                         ; 043419
	jr	nz,$+$75                    ; 043470 || 	jr	nz,$+$75                    ; 04341A
	ld	(hl),l                      ; 043472 || 	ld	(hl),l                      ; 04341C
	ld	h,e                         ; 043473 || 	ld	h,e                         ; 04341D
	ld	l,b                         ; 043474 || 	ld	l,b                         ; 04341E
	jr	nz,$+$05                    ; 043475 || 	jr	nz,$+$05                    ; 04341F
	ld	b,d                         ; 043477 || 	ld	b,d                         ; 043421
	ld	h,c                         ; 043478 || 	ld	h,c                         ; 043422
	ld	h,h                         ; 043479 || 	ld	h,h                         ; 043423
	jr	nz,$+$06                    ; 04347A || 	jr	nz,$+$06                    ; 043424
	jr	nz,$+$74                    ; 04347C || 	jr	nz,$+$74                    ; 043426
	ld	h,c                         ; 04347E || 	ld	h,c                         ; 043428
	ld	l,(hl)                      ; 04347F || 	ld	l,(hl)                      ; 043429
	ld	h,a                         ; 043480 || 	ld	h,a                         ; 04342A
	ld	h,l                         ; 043481 || 	ld	h,l                         ; 04342B
	dec	b                          ; 043482 || 	dec	b                          ; 04342C || 043482 05 76 61 72 8381  			DB    05H, "variable"
	halt                           ; 043483 || 	halt                           ; 04342D
	ld	h,c                         ; 043484 || 	ld	h,c                         ; 04342E
	ld	(hl),d                      ; 043485 || 	ld	(hl),d                      ; 04342F
	ld	l,c                         ; 043486 || 	ld	l,c                         ; 043430
	ld	h,c                         ; 043487 || 	ld	h,c                         ; 043431
	ld	h,d                         ; 043488 || 	ld	h,d                         ; 043432
	ld	l,h                         ; 043489 || 	ld	l,h                         ; 043433
	ld	h,l                         ; 04348A || 	ld	h,l                         ; 043434
	ld	b,$4f                       ; 04348B || 	ld	b,$4f                       ; 043435 || 04348B 06 4F 75 74 8382  			DB    06H, "Out of"
	ld	(hl),l                      ; 04348D || 	ld	(hl),l                      ; 043437
	ld	(hl),h                      ; 04348E || 	ld	(hl),h                      ; 043438
	jr	nz,$+$71                    ; 04348F || 	jr	nz,$+$71                    ; 043439
	ld	h,(hl)                      ; 043491 || 	ld	h,(hl)                      ; 04343B
	rlca                           ; 043492 || 	rlca                           ; 04343C || 043492 07 4E 6F 20 8383  			DB    07H, "No "
	ld	c,(hl)                      ; 043493 || 	ld	c,(hl)                      ; 04343D
	ld	l,a                         ; 043494 || 	ld	l,a                         ; 04343E
	jr	nz,$+$0a                    ; 043495 || 	jr	nz,$+$0a                    ; 04343F
	jr	nz,$+$75                    ; 043497 || 	jr	nz,$+$75                    ; 043441
	ld	(hl),b                      ; 043499 || 	ld	(hl),b                      ; 043443
	ld	h,c                         ; 04349A || 	ld	h,c                         ; 043444
	ld	h,e                         ; 04349B || 	ld	h,e                         ; 043445
	ld	h,l                         ; 04349C || 	ld	h,l                         ; 043446
	rst	$38                        ; 04349D || 	rst	$38                        ; 043447 || 04349D FF FF       8387  			DW    -1
	rst	$38                        ; 04349E || 	rst	$38                        ; 043448
	rlca                           ; 04349F || 	rlca                           ; 043449 || 04349F 07 72 6F 6F 8391  ERRWDS:			DB    7, "room", 0		;  0: No room
	ld	(hl),d                      ; 0434A0 || 	ld	(hl),d                      ; 04344A
	ld	l,a                         ; 0434A1 || 	ld	l,a                         ; 04344B
	ld	l,a                         ; 0434A2 || 	ld	l,a                         ; 04344C
	ld	l,l                         ; 0434A3 || 	ld	l,l                         ; 04344D
	nop                            ; 0434A4 || 	nop                            ; 04344E
	ld	b,$04                       ; 0434A5 || 	ld	b,$04                       ; 04344F || 0434A5 06 04 00    8392  			DB    6, 4, 0			;  1: Out of range
	nop                            ; 0434A7 || 	nop                            ; 043451
	nop                            ; 0434A8 || 	nop                            ; 043452 || 0434A8 00          8393  			DB    0				;  2: *
	nop                            ; 0434A9 || 	nop                            ; 043453 || 0434A9 00          8394  			DB    0				;  3: *
	ld	c,l                         ; 0434AA || 	ld	c,l                         ; 043454 || 0434AA 4D 69 73 74 8395  			DB    "Mistake", 0		;  4: Mistake
	ld	l,c                         ; 0434AB || 	ld	l,c                         ; 043455
	ld	(hl),e                      ; 0434AC || 	ld	(hl),e                      ; 043456
	ld	(hl),h                      ; 0434AD || 	ld	(hl),h                      ; 043457
	ld	h,c                         ; 0434AE || 	ld	h,c                         ; 043458
	ld	l,e                         ; 0434AF || 	ld	l,e                         ; 043459
	ld	h,l                         ; 0434B0 || 	ld	h,l                         ; 04345A
	nop                            ; 0434B1 || 	nop                            ; 04345B
	ld	bc,$54002c                  ; 0434B2 || 	ld	bc,$54002c                  ; 04345C || 0434B2 01 2C 00    8396  			DB    1, ",", 0			;  5: Missing ,
	ld	a,c                         ; 0434B6 || 	ld	a,c                         ; 043460
	ld	(hl),b                      ; 0434B7 || 	ld	(hl),b                      ; 043461
	ld	h,l                         ; 0434B8 || 	ld	h,l                         ; 043462
	jr	nz,$+$6f                    ; 0434B9 || 	jr	nz,$+$6f                    ; 043463
	ld	l,c                         ; 0434BB || 	ld	l,c                         ; 043465
	ld	(hl),e                      ; 0434BC || 	ld	(hl),e                      ; 043466
	ld	l,l                         ; 0434BD || 	ld	l,l                         ; 043467
	ld	h,c                         ; 0434BE || 	ld	h,c                         ; 043468
	ld	(hl),h                      ; 0434BF || 	ld	(hl),h                      ; 043469
	ld	h,e                         ; 0434C0 || 	ld	h,e                         ; 04346A
	ld	l,b                         ; 0434C1 || 	ld	l,b                         ; 04346B
	nop                            ; 0434C2 || 	nop                            ; 04346C
	rlca                           ; 0434C3 || 	rlca                           ; 04346D || 0434C3 07 A4 00    8398  			DB    7, FN, 0			;  7: No FN
	and	h                          ; 0434C4 || 	and	h                          ; 04346E
	nop                            ; 0434C5 || 	nop                            ; 04346F
	nop                            ; 0434C6 || 	nop                            ; 043470 || 0434C6 00          8399  			DB    0				;  8: *
	ld	bc,$030022                  ; 0434C7 || 	ld	bc,$030022                  ; 043471 || 0434C7 01 22 00    8400  			DB    1, 34, 0			;  9: Missing "
	sbc	a,$00                      ; 0434CB || 	sbc	a,$00                      ; 043475
	sbc	a,$08                      ; 0434CD || 	sbc	a,$08                      ; 043477 || 0434CD DE 08 00    8402  			DB    DIM, 8, 0			; 11: DIM space
	nop                            ; 0434CF || 	nop                            ; 043479
	ld	c,(hl)                      ; 0434D0 || 	ld	c,(hl)                      ; 04347A || 0434D0 4E 6F 74 20 8403  			DB    "Not ", LOCAL_, 0		; 12: Not LOCAL
	ld	l,a                         ; 0434D1 || 	ld	l,a                         ; 04347B
	ld	(hl),h                      ; 0434D2 || 	ld	(hl),h                      ; 04347C
	jr	nz,$-$14                    ; 0434D3 || 	jr	nz,$-$14                    ; 04347D
	nop                            ; 0434D5 || 	nop                            ; 04347F
	rlca                           ; 0434D6 || 	rlca                           ; 043480 || 0434D6 07 F2 00    8404  			DB    7, PROC, 0		; 13: No PROC
	jp	p,$724100                   ; 0434D7 || 	jp	p,$724100                   ; 043481
	ld	(hl),d                      ; 0434DB || 	ld	(hl),d                      ; 043485
	ld	h,c                         ; 0434DC || 	ld	h,c                         ; 043486
	ld	a,c                         ; 0434DD || 	ld	a,c                         ; 043487
	nop                            ; 0434DE || 	nop                            ; 043488
	ld	d,e                         ; 0434DF || 	ld	d,e                         ; 043489 || 0434DF 53 75 62 73 8406  			DB    "Subscript", 0		; 15: Subscript
	ld	(hl),l                      ; 0434E0 || 	ld	(hl),l                      ; 04348A
	ld	h,d                         ; 0434E1 || 	ld	h,d                         ; 04348B
	ld	(hl),e                      ; 0434E2 || 	ld	(hl),e                      ; 04348C
	ld	h,e                         ; 0434E3 || 	ld	h,e                         ; 04348D
	ld	(hl),d                      ; 0434E4 || 	ld	(hl),d                      ; 04348E
	ld	l,c                         ; 0434E5 || 	ld	l,c                         ; 04348F
	ld	(hl),b                      ; 0434E6 || 	ld	(hl),b                      ; 043490
	ld	(hl),h                      ; 0434E7 || 	ld	(hl),h                      ; 043491
	nop                            ; 0434E8 || 	nop                            ; 043492
	ld	d,e                         ; 0434E9 || 	ld	d,e                         ; 043493 || 0434E9 53 79 6E 74 8407  			DB    "Syntax error", 0		; 16: Syntax error
	ld	a,c                         ; 0434EA || 	ld	a,c                         ; 043494
	ld	l,(hl)                      ; 0434EB || 	ld	l,(hl)                      ; 043495
	ld	(hl),h                      ; 0434EC || 	ld	(hl),h                      ; 043496
	ld	h,c                         ; 0434ED || 	ld	h,c                         ; 043497
	ld	a,b                         ; 0434EE || 	ld	a,b                         ; 043498
	jr	nz,$+$67                    ; 0434EF || 	jr	nz,$+$67                    ; 043499
	ld	(hl),d                      ; 0434F1 || 	ld	(hl),d                      ; 04349B
	ld	(hl),d                      ; 0434F2 || 	ld	(hl),d                      ; 04349C
	ld	l,a                         ; 0434F3 || 	ld	l,a                         ; 04349D
	ld	(hl),d                      ; 0434F4 || 	ld	(hl),d                      ; 04349E
	nop                            ; 0434F5 || 	nop                            ; 04349F
	ld	b,l                         ; 0434F6 || 	ld	b,l                         ; 0434A0 || 0434F6 45 73 63 61 8408  			DB    "Escape", 0		; 17: Escape
	ld	(hl),e                      ; 0434F7 || 	ld	(hl),e                      ; 0434A1
	ld	h,e                         ; 0434F8 || 	ld	h,e                         ; 0434A2
	ld	h,c                         ; 0434F9 || 	ld	h,c                         ; 0434A3
	ld	(hl),b                      ; 0434FA || 	ld	(hl),b                      ; 0434A4
	ld	h,l                         ; 0434FB || 	ld	h,l                         ; 0434A5
	nop                            ; 0434FC || 	nop                            ; 0434A6
	ld	b,h                         ; 0434FD || 	ld	b,h                         ; 0434A7 || 0434FD 44 69 76 69 8409  			DB    "Division by zero", 0	; 18: Division by zero
	ld	l,c                         ; 0434FE || 	ld	l,c                         ; 0434A8
	halt                           ; 0434FF || 	halt                           ; 0434A9
	ld	l,c                         ; 043500 || 	ld	l,c                         ; 0434AA
	ld	(hl),e                      ; 043501 || 	ld	(hl),e                      ; 0434AB
	ld	l,c                         ; 043502 || 	ld	l,c                         ; 0434AC
	ld	l,a                         ; 043503 || 	ld	l,a                         ; 0434AD
	ld	l,(hl)                      ; 043504 || 	ld	l,(hl)                      ; 0434AE
	jr	nz,$+$64                    ; 043505 || 	jr	nz,$+$64                    ; 0434AF
	ld	a,c                         ; 043507 || 	ld	a,c                         ; 0434B1
	jr	nz,$+$7c                    ; 043508 || 	jr	nz,$+$7c                    ; 0434B2
	ld	h,l                         ; 04350A || 	ld	h,l                         ; 0434B4
	ld	(hl),d                      ; 04350B || 	ld	(hl),d                      ; 0434B5
	ld	l,a                         ; 04350C || 	ld	l,a                         ; 0434B6
	nop                            ; 04350D || 	nop                            ; 0434B7
	ld	d,e                         ; 04350E || 	ld	d,e                         ; 0434B8 || 04350E 53 74 72 69 8410  			DB    "String too long", 0	; 19: String too long
	ld	(hl),h                      ; 04350F || 	ld	(hl),h                      ; 0434B9
	ld	(hl),d                      ; 043510 || 	ld	(hl),d                      ; 0434BA
	ld	l,c                         ; 043511 || 	ld	l,c                         ; 0434BB
	ld	l,(hl)                      ; 043512 || 	ld	l,(hl)                      ; 0434BC
	ld	h,a                         ; 043513 || 	ld	h,a                         ; 0434BD
	jr	nz,$+$76                    ; 043514 || 	jr	nz,$+$76                    ; 0434BE
	ld	l,a                         ; 043516 || 	ld	l,a                         ; 0434C0
	ld	l,a                         ; 043517 || 	ld	l,a                         ; 0434C1
	jr	nz,$+$6e                    ; 043518 || 	jr	nz,$+$6e                    ; 0434C2
	ld	l,a                         ; 04351A || 	ld	l,a                         ; 0434C4
	ld	l,(hl)                      ; 04351B || 	ld	l,(hl)                      ; 0434C5
	ld	h,a                         ; 04351C || 	ld	h,a                         ; 0434C6
	nop                            ; 04351D || 	nop                            ; 0434C7
	ld	d,h                         ; 04351E || 	ld	d,h                         ; 0434C8 || 04351E 54 6F 6F 20 8411  			DB    "Too big", 0		; 20: Too big
	ld	l,a                         ; 04351F || 	ld	l,a                         ; 0434C9
	ld	l,a                         ; 043520 || 	ld	l,a                         ; 0434CA
	jr	nz,$+$64                    ; 043521 || 	jr	nz,$+$64                    ; 0434CB
	ld	l,c                         ; 043523 || 	ld	l,c                         ; 0434CD
	ld	h,a                         ; 043524 || 	ld	h,a                         ; 0434CE
	nop                            ; 043525 || 	nop                            ; 0434CF
	dec	l                          ; 043526 || 	dec	l                          ; 0434D0 || 043526 2D 76 65 20 8412  			DB    "-ve root", 0		; 21: -ve root
	halt                           ; 043527 || 	halt                           ; 0434D1
	ld	h,l                         ; 043528 || 	ld	h,l                         ; 0434D2
	jr	nz,$+$74                    ; 043529 || 	jr	nz,$+$74                    ; 0434D3
	ld	l,a                         ; 04352B || 	ld	l,a                         ; 0434D5
	ld	l,a                         ; 04352C || 	ld	l,a                         ; 0434D6
	ld	(hl),h                      ; 04352D || 	ld	(hl),h                      ; 0434D7
	nop                            ; 04352E || 	nop                            ; 0434D8
	ld	c,h                         ; 04352F || 	ld	c,h                         ; 0434D9 || 04352F 4C 6F 67 04 8413  			DB    "Log", 4, 0		; 22: Log range
	ld	l,a                         ; 043530 || 	ld	l,a                         ; 0434DA
	ld	h,a                         ; 043531 || 	ld	h,a                         ; 0434DB
	inc	b                          ; 043532 || 	inc	b                          ; 0434DC
	nop                            ; 043533 || 	nop                            ; 0434DD
	ld	b,c                         ; 043534 || 	ld	b,c                         ; 0434DE || 043534 41 63 63 75 8414  			DB    "Accuracy lost", 0	; 23: Accuracy lost
	ld	h,e                         ; 043535 || 	ld	h,e                         ; 0434DF
	ld	h,e                         ; 043536 || 	ld	h,e                         ; 0434E0
	ld	(hl),l                      ; 043537 || 	ld	(hl),l                      ; 0434E1
	ld	(hl),d                      ; 043538 || 	ld	(hl),d                      ; 0434E2
	ld	h,c                         ; 043539 || 	ld	h,c                         ; 0434E3
	ld	h,e                         ; 04353A || 	ld	h,e                         ; 0434E4
	ld	a,c                         ; 04353B || 	ld	a,c                         ; 0434E5
	jr	nz,$+$6e                    ; 04353C || 	jr	nz,$+$6e                    ; 0434E6
	ld	l,a                         ; 04353E || 	ld	l,a                         ; 0434E8
	ld	(hl),e                      ; 04353F || 	ld	(hl),e                      ; 0434E9
	ld	(hl),h                      ; 043540 || 	ld	(hl),h                      ; 0434EA
	nop                            ; 043541 || 	nop                            ; 0434EB
	ld	b,l                         ; 043542 || 	ld	b,l                         ; 0434EC || 043542 45 78 70 04 8415  			DB    "Exp", 4, 0		; 24: Exp range
	ld	a,b                         ; 043543 || 	ld	a,b                         ; 0434ED
	ld	(hl),b                      ; 043544 || 	ld	(hl),b                      ; 0434EE
	inc	b                          ; 043545 || 	inc	b                          ; 0434EF
	nop                            ; 043546 || 	nop                            ; 0434F0
	nop                            ; 043547 || 	nop                            ; 0434F1 || 043547 00          8416  			DB    0				; 25: *
	ld	(bc),a                      ; 043548 || 	ld	(bc),a                      ; 0434F2 || 043548 02 05 00    8417  			DB    2, 5, 0			; 26: No such variable
	dec	b                          ; 043549 || 	dec	b                          ; 0434F3
	nop                            ; 04354A || 	nop                            ; 0434F4
	ld	bc,$030029                  ; 04354B || 	ld	bc,$030029                  ; 0434F5 || 04354B 01 29 00    8418  			DB    1, ")", 0			; 27: Missing )
	ld	c,b                         ; 04354F || 	ld	c,b                         ; 0434F9
	ld	b,l                         ; 043550 || 	ld	b,l                         ; 0434FA
	ld	e,b                         ; 043551 || 	ld	e,b                         ; 0434FB
	nop                            ; 043552 || 	nop                            ; 0434FC
	ld	(bc),a                      ; 043553 || 	ld	(bc),a                      ; 0434FD || 043553 02 A4 2F F2 8420  			DB    2, FN, "/", PROC, 0	; 29: No such FN/PROC
	and	h                          ; 043554 || 	and	h                          ; 0434FE
	cpl                            ; 043555 || 	cpl                            ; 0434FF
	jp	p,$630300                   ; 043556 || 	jp	p,$630300                   ; 043500
	ld	h,c                         ; 04355A || 	ld	h,c                         ; 043504
	ld	l,h                         ; 04355B || 	ld	l,h                         ; 043505
	ld	l,h                         ; 04355C || 	ld	l,h                         ; 043506
	nop                            ; 04355D || 	nop                            ; 043507
	ld	b,c                         ; 04355E || 	ld	b,c                         ; 043508 || 04355E 41 72 67 75 8422  			DB    "Arguments", 0		; 31: Arguments
	ld	(hl),d                      ; 04355F || 	ld	(hl),d                      ; 043509
	ld	h,a                         ; 043560 || 	ld	h,a                         ; 04350A
	ld	(hl),l                      ; 043561 || 	ld	(hl),l                      ; 04350B
	ld	l,l                         ; 043562 || 	ld	l,l                         ; 04350C
	ld	h,l                         ; 043563 || 	ld	h,l                         ; 04350D
	ld	l,(hl)                      ; 043564 || 	ld	l,(hl)                      ; 04350E
	ld	(hl),h                      ; 043565 || 	ld	(hl),h                      ; 04350F
	ld	(hl),e                      ; 043566 || 	ld	(hl),e                      ; 043510
	nop                            ; 043567 || 	nop                            ; 043511
	rlca                           ; 043568 || 	rlca                           ; 043512 || 043568 07 E3 00    8423  			DB    7, FOR, 0			; 32: No FOR
	ex	(sp),hl                     ; 043569 || 	ex	(sp),hl                     ; 043513
	nop                            ; 04356A || 	nop                            ; 043514
	ld	b,e                         ; 04356B || 	ld	b,e                         ; 043515 || 04356B 43 61 6E 27 8424  			DB    "Can't match ", FOR, 0	; 33: Can't match FOR
	ld	h,c                         ; 04356C || 	ld	h,c                         ; 043516
	ld	l,(hl)                      ; 04356D || 	ld	l,(hl)                      ; 043517
	daa                            ; 04356E || 	daa                            ; 043518
	ld	(hl),h                      ; 04356F || 	ld	(hl),h                      ; 043519
	jr	nz,$+$6f                    ; 043570 || 	jr	nz,$+$6f                    ; 04351A
	ld	h,c                         ; 043572 || 	ld	h,c                         ; 04351C
	ld	(hl),h                      ; 043573 || 	ld	(hl),h                      ; 04351D
	ld	h,e                         ; 043574 || 	ld	h,e                         ; 04351E
	ld	l,b                         ; 043575 || 	ld	l,b                         ; 04351F
	jr	nz,$-$1b                    ; 043576 || 	jr	nz,$-$1b                    ; 043520
	nop                            ; 043578 || 	nop                            ; 043522
	ex	(sp),hl                     ; 043579 || 	ex	(sp),hl                     ; 043523 || 043579 E3 20 05 00 8425  			DB    FOR, " ", 5, 0		; 34: FOR variable
	jr	nz,$+$07                    ; 04357A || 	jr	nz,$+$07                    ; 043524
	nop                            ; 04357C || 	nop                            ; 043526
	nop                            ; 04357D || 	nop                            ; 043527 || 04357D 00          8426  			DB    0				; 35: *
	rlca                           ; 04357E || 	rlca                           ; 043528 || 04357E 07 B8 00    8427  			DB    7, TO, 0			; 36: No TO
	cp	b                           ; 04357F || 	cp	b                           ; 043529
	nop                            ; 043580 || 	nop                            ; 04352A
	nop                            ; 043581 || 	nop                            ; 04352B || 043581 00          8428  			DB    0				; 37: *
	rlca                           ; 043582 || 	rlca                           ; 04352C || 043582 07 E4 00    8429  			DB    7, GOSUB, 0		; 38: No GOSUB
	call	po,$20ee00                ; 043583 || 	call	po,$20ee00                ; 04352D
	ld	(hl),e                      ; 043587 || 	ld	(hl),e                      ; 043531
	ld	a,c                         ; 043588 || 	ld	a,c                         ; 043532
	ld	l,(hl)                      ; 043589 || 	ld	l,(hl)                      ; 043533
	ld	(hl),h                      ; 04358A || 	ld	(hl),h                      ; 043534
	ld	h,c                         ; 04358B || 	ld	h,c                         ; 043535
	ld	a,b                         ; 04358C || 	ld	a,b                         ; 043536
	nop                            ; 04358D || 	nop                            ; 043537
	xor	$04                        ; 04358E || 	xor	$04                        ; 043538 || 04358E EE 04 00    8431  			DB    ON_, 4, 0			; 40: ON range
	nop                            ; 043590 || 	nop                            ; 04353A
	ld	(bc),a                      ; 043591 || 	ld	(bc),a                      ; 04353B || 043591 02 6C 69 6E 8432  			DB    2, "line", 0		; 41: No such line
	ld	l,h                         ; 043592 || 	ld	l,h                         ; 04353C
	ld	l,c                         ; 043593 || 	ld	l,c                         ; 04353D
	ld	l,(hl)                      ; 043594 || 	ld	l,(hl)                      ; 04353E
	ld	h,l                         ; 043595 || 	ld	h,l                         ; 04353F
	nop                            ; 043596 || 	nop                            ; 043540
	ld	b,$20                       ; 043597 || 	ld	b,$20                       ; 043541 || 043597 06 20 DC 00 8433  			DB    6, " ", DATA_, 0		; 42: Out of DATA
	call	c,$f50700                 ; 043599 || 	call	c,$f50700                 ; 043543
	nop                            ; 04359D || 	nop                            ; 043547
	nop                            ; 04359E || 	nop                            ; 043548 || 04359E 00          8435  			DB    0				; 44: *
	ld	bc,$cd0023                  ; 04359F || 	ld	bc,$cd0023                  ; 043549 || 04359F 01 23 00    8436  			DB    1, "#", 0			; 45: Missing #
	and	c                          ; 0435A3
	jr	c,$+$06                     ; 0435A4 || 	jr	c,$+$06                     ; 04354E
	call	$043ca9                   ; 0435A6 || 	call	$043c53                   ; 043550 || 0435A6 CD A9 3C 04 8443  			CALL    DLPAIR			; Get the line number pair - HL: BASIC program address, BC: second number (or 0 if missing)
	ld	a,(hl)                      ; 0435AA || 	ld	a,(hl)                      ; 043554 || 0435AA 7E          8444  DELET1:			LD      A,(HL)			; Check whether it's the last line
	or	a                           ; 0435AB || 	or	a                           ; 043555 || 0435AB B7          8445  			OR      A
	jp	z,$043633                   ; 0435AC || 	jp	z,$0435dd                   ; 043556 || 0435AC CA 33 36 04 8446  			JP      Z,WARMNC		; Yes, so do nothing
	inc	hl                         ; 0435B0 || 	inc	hl                         ; 04355A || 0435B0 23          8447  			INC     HL			; Skip the line length byte
	ld	de,$000000                  ; 0435B1 || 	ld	de,$000000                  ; 04355B || 0435B1 11 00 00 00 8448  			LD	DE, 0			; Clear DE
	ld	e,(hl)                      ; 0435B5 || 	ld	e,(hl)                      ; 04355F || 0435B5 5E          8449  			LD      E,(HL)			; Fetch the line number in DE
	inc	hl                         ; 0435B6 || 	inc	hl                         ; 043560 || 0435B6 23          8450  			INC     HL
	ld	d,(hl)                      ; 0435B7 || 	ld	d,(hl)                      ; 043561 || 0435B7 56          8451  			LD      D,(HL)
	ld	a,d                         ; 0435B8 || 	ld	a,d                         ; 043562 || 0435B8 7A          8452  			LD      A,D			; If the line number is zero then
	or	e                           ; 0435B9 || 	or	e                           ; 043563 || 0435B9 B3          8453  			OR      E
	jr	z,$+$1f                     ; 0435BA || 	jr	z,$+$1f                     ; 043564 || 0435BA 28 1D       8454  			JR      Z,CLOOP1        	; Do nothing
	dec	hl                         ; 0435BC || 	dec	hl                         ; 043566 || 0435BC 2B          8455  			DEC     HL			; Decrement BASIC program pointer back to length
	dec	hl                         ; 0435BD || 	dec	hl                         ; 043567 || 0435BD 2B          8456  			DEC     HL
	ex	de,hl                       ; 0435BE || 	ex	de,hl                       ; 043568 || 0435BE EB          8457  			EX      DE,HL			; Check if we've gone past the terminating line
	scf                            ; 0435BF || 	scf                            ; 043569 || 0435BF 37          8458  			SCF
	sbc	hl,bc                      ; 0435C0 || 	sbc	hl,bc                      ; 04356A || 0435C0 ED 42       8459  			SBC     HL,BC
	ex	de,hl                       ; 0435C2 || 	ex	de,hl                       ; 04356C || 0435C2 EB          8460  			EX      DE,HL
	jr	nc,$+$70                    ; 0435C3 || 	jr	nc,$+$70                    ; 04356D || 0435C3 30 6E       8461  			JR      NC,WARMNC		; Yes, so exit back to BASIC prompt
	push	bc                        ; 0435C5 || 	push	bc                        ; 04356F || 0435C5 C5          8462  			PUSH    BC
	call	$043858                   ; 0435C6 || 	call	$043802                   ; 043570 || 0435C6 CD 58 38 04 8463  			CALL    DEL			; Delete the line pointed to by HL
	pop	bc                         ; 0435CA || 	pop	bc                         ; 043574 || 0435CA C1          8464  			POP     BC
	jr	$-$21                       ; 0435CB || 	jr	$-$21                       ; 043575 || 0435CB 18 DD       8465  			JR      DELET1			; And loop round to the next line
	inc	iy                         ; 0435CD || 	inc	iy                         ; 043577 || 0435CD FD 23       8469  LISTO:			INC     IY              	; Skip "O" byte
	call	$04030f                   ; 0435CF || 	call	$04030a                   ; 043579 || 0435CF CD 0F 03 04 8470  			CALL    EXPRI			; Get expr
	exx                            ; 0435D3 || 	exx                            ; 04357D || 0435D3 D9          8471  			EXX
	ld	a,l                         ; 0435D4 || 	ld	a,l                         ; 04357E || 0435D4 7D          8472  			LD      A,L
	ld	($044d40),a                 ; 0435D5 || 	ld	($044d40),a                 ; 04357F || 0435D5 32 40 4D 04 8473  			LD      (LISTON),A		; Store in LISTON sysvar
	jp	$0430d6                     ; 0435D9 || 	jp	$043080                     ; 043583 || 0435D9 C3 D6 30 04 8474  CLOOP1:			JP      CLOOP
	cp	$4f                         ; 0435DD || 	cp	$4f                         ; 043587 || 0435DD FE 4F       8482  LIST_:			CP      'O'			; Check for O (LISTO)
	jr	z,$-$12                     ; 0435DF || 	jr	z,$-$12                     ; 043589 || 0435DF 28 EC       8483  			JR      Z,LISTO			; and jump to LISTO if zero
	call	$043ca9                   ; 0435E1 || 	call	$043c53                   ; 04358B || 0435E1 CD A9 3C 04 8484  			CALL    DLPAIR			; Get the line number pair - HL: BASIC program address, BC: second number (or 0 if missing)
	call	$040a78                   ; 0435E5 || 	call	$040a70                   ; 04358F || 0435E5 CD 78 0A 04 8485  			CALL    NXT			; Skip space
	cp	$e7                         ; 0435E9 || 	cp	$e7                         ; 043593 || 0435E9 FE E7       8486  			CP      TIF             	; Check for IF clause (token IF)
	ld	a,$00                       ; 0435EB || 	ld	a,$00                       ; 043595 || 0435EB 3E 00       8487  			LD      A,0             	; Initialise the IF clause string length
	jr	nz,$+$19                    ; 0435ED || 	jr	nz,$+$19                    ; 043597 || 0435ED 20 17       8488  			JR      NZ,LISTB		; If there is no IF clause, skip the next bit
	inc	iy                         ; 0435EF || 	inc	iy                         ; 043599 || 0435EF FD 23       8490  			INC     IY              	; Skip the IF token
	call	$040a78                   ; 0435F1 || 	call	$040a70                   ; 04359B || 0435F1 CD 78 0A 04 8491  			CALL    NXT             	; And skip any spaces
	ex	de,hl                       ; 0435F5 || 	ex	de,hl                       ; 04359F || 0435F5 EB          8492  			EX      DE,HL			; DE: Address in memory
	push	iy                        ; 0435F6 || 	push	iy                        ; 0435A0 || 0435F6 FD E5       8493  			PUSH    IY			; LD IY, HL
	pop	hl                         ; 0435F8 || 	pop	hl                         ; 0435A2 || 0435F8 E1          8494  			POP     HL              	; HL is now the address of the tokenised line
	ld	a,$0d                       ; 0435F9 || 	ld	a,$0d                       ; 0435A3 || 0435F9 3E 0D       8495  			LD      A,CR
	push	bc                        ; 0435FB || 	push	bc                        ; 0435A5 || 0435FB C5          8496  			PUSH    BC			; Stack the second line number arg
	ld	bc,$000100                  ; 0435FC || 	ld	bc,$000100                  ; 0435A6 || 0435FC 01 00 01 00 8497  			LD      BC,256
	cpir                           ; 043600 || 	cpir                           ; 0435AA || 043600 ED B1       8498  			CPIR                    	; Locate CR byte
	ld	a,c                         ; 043602 || 	ld	a,c                         ; 0435AC || 043602 79          8499  			LD      A,C
	cpl                            ; 043603 || 	cpl                            ; 0435AD || 043603 2F          8500  			CPL                    	 	; A: Substring length (of IF clause)
	pop	bc                         ; 043604 || 	pop	bc                         ; 0435AE || 043604 C1          8501  			POP     BC			; Restore the second line number arg
	ex	de,hl                       ; 043605 || 	ex	de,hl                       ; 0435AF || 043605 EB          8502  			EX      DE,HL			; HL: Address in memory
	ld	e,a                         ; 043606 || 	ld	e,a                         ; 0435B0 || 043606 5F          8504  LISTB:			LD      E,A             	; E: IF clause string length
	ld	a,b                         ; 043607 || 	ld	a,b                         ; 0435B1 || 043607 78          8505  			LD      A,B			; Check whether a second line number was passed (BC!=0)
	or	c                           ; 043608 || 	or	c                           ; 0435B2 || 043608 B1          8506  			OR      C
	jr	nz,$+$03                    ; 043609 || 	jr	nz,$+$03                    ; 0435B3 || 043609 20 01       8507  			JR      NZ,LISTA		; If there isn't a second line number
	dec	bc                         ; 04360B || 	dec	bc                         ; 0435B5 || 04360B 0B          8508  			DEC     BC			; then we set it to the maximum of 65535
	exx                            ; 04360C || 	exx                            ; 0435B6 || 04360C D9          8510  LISTA:			EXX
	ld	ix,$044d40                  ; 04360D || 	ld	ix,$044d40                  ; 0435B7 || 04360D DD 21 40 4D 8511  			LD      IX,LISTON		; IX : Pointer to the LISTON (LISTO and OPT) sysvar
	ld	bc,$000000                  ; 043612 || 	ld	bc,$000000                  ; 0435BC || 043612 01 00 00 00 8512  			LD      BC,0            	; BC': Indentation counter (C: FOR/NEXT, B: REPEAT/UNTIL)
	exx                            ; 043616 || 	exx                            ; 0435C0 || 043616 D9          8513  			EXX
	ld	a,$14                       ; 043617 || 	ld	a,$14                       ; 0435C1 || 043617 3E 14       8514  			LD      A,20			; Number of lines to list
	push	bc                        ; 043619 || 	push	bc                        ; 0435C3 || 043619 C5          8516  LISTC:			PUSH    BC              	; Save second line number
	push	de                        ; 04361A || 	push	de                        ; 0435C4 || 04361A D5          8517  			PUSH    DE              	; Save IF clause length
	push	hl                        ; 04361B || 	push	hl                        ; 0435C5 || 04361B E5          8518  			PUSH    HL              	; Save BASIC program counter
	ex	af,af'                      ; 04361C || 	ex	af,af'                      ; 0435C6 || 04361C 08          8519  			EX      AF,AF'
	ld	a,(hl)                      ; 04361D || 	ld	a,(hl)                      ; 0435C7 || 04361D 7E          8528  			LD      A,(HL)			; Check for end of program marker
	or	a                           ; 04361E || 	or	a                           ; 0435C8 || 04361E B7          8529  			OR      A			; If found
	jr	z,$+$14                     ; 04361F || 	jr	z,$+$14                     ; 0435C9 || 04361F 28 12       8530  			JR      Z,WARMNC		; Jump to WARMNC (F=NC, so will jump to WARM)
	ld	a,e                         ; 043621 || 	ld	a,e                         ; 0435CB || 043621 7B          8534  			LD      A,E             	; A: IF clause length
	inc	hl                         ; 043622 || 	inc	hl                         ; 0435CC || 043622 23          8535  			INC     HL			; Skip the length byte
	ld	de,$000000                  ; 043623 || 	ld	de,$000000                  ; 0435CD || 043623 11 00 00 00 8536  			LD	DE,0			; Clear DE
	ld	e,(hl)                      ; 043627 || 	ld	e,(hl)                      ; 0435D1 || 043627 5E          8537  			LD      E,(HL)			; Fetch the line number in DE
	inc	hl                         ; 043628 || 	inc	hl                         ; 0435D2 || 043628 23          8538  			INC     HL
	ld	d,(hl)                      ; 043629 || 	ld	d,(hl)                      ; 0435D3 || 043629 56          8539  			LD      D,(HL)
	dec	hl                         ; 04362A || 	dec	hl                         ; 0435D4 || 04362A 2B          8540  			DEC     HL			; Step HL back to the length byte
	dec	hl                         ; 04362B || 	dec	hl                         ; 0435D5 || 04362B 2B          8541  			DEC     HL
	push	de                        ; 04362C || 	push	de                        ; 0435D6 || 04362C D5          8542  			PUSH    DE             	 	; Push the line number on the stack
	ex	de,hl                       ; 04362D || 	ex	de,hl                       ; 0435D7 || 04362D EB          8543  			EX      DE,HL			; HL: line number
	scf                            ; 04362E || 	scf                            ; 0435D8 || 04362E 37          8544  			SCF				; Do a 16-bit compare of HL and DE
	sbc	hl,bc                      ; 04362F || 	sbc	hl,bc                      ; 0435D9 || 04362F ED 42       8545  			SBC     HL,BC
	ex	de,hl                       ; 043631 || 	ex	de,hl                       ; 0435DB || 043631 EB          8546  			EX      DE,HL
	pop	de                         ; 043632 || 	pop	de                         ; 0435DC || 043632 D1          8547  			POP     DE              	; Restore the line number
	jp	nc,$0430d5                  ; 043633 || 	jp	nc,$04307f                  ; 0435DD || 043633 D2 D5 30 04 8548  WARMNC:			JP      NC,WARM			; If exceeded the terminating line number then jump to WARM
	ld	c,(hl)                      ; 043637 || 	ld	c,(hl)                      ; 0435E1 || 043637 4E          8549  			LD      C,(HL)          	; C: Line length + 4
	ld	b,a                         ; 043638 || 	ld	b,a                         ; 0435E2 || 043638 47          8550  			LD      B,A             	; B: IF clause length
	ld	a,d                         ; 043639 || 	ld	a,d                         ; 0435E3 || 043639 7A          8554  			LD      A,D			; TODO: What is "UNLISTABLE?"
	or	e                           ; 04363A || 	or	e                           ; 0435E4 || 04363A B3          8555  			OR      E
	jp	z,$0430d6                   ; 04363B || 	jp	z,$043080                   ; 0435E5 || 04363B CA D6 30 04 8556  			JP      Z,CLOOP
	inc	hl                         ; 04363F || 	inc	hl                         ; 0435E9 || 04363F 23          8560  			INC     HL			; Skip the length
	inc	hl                         ; 043640 || 	inc	hl                         ; 0435EA || 043640 23          8561  			INC     HL			; Skip the line number
	inc	hl                         ; 043641 || 	inc	hl                         ; 0435EB || 043641 23          8562  			INC     HL              	; HL: Address of the tokenised BASIC line
	dec	c                          ; 043642 || 	dec	c                          ; 0435EC || 043642 0D          8563  			DEC     C			;  C: Line length
	dec	c                          ; 043643 || 	dec	c                          ; 0435ED || 043643 0D          8564  			DEC     C
	dec	c                          ; 043644 || 	dec	c                          ; 0435EE || 043644 0D          8565  			DEC     C
	dec	c                          ; 043645 || 	dec	c                          ; 0435EF || 043645 0D          8566  			DEC     C
	push	de                        ; 043646 || 	push	de                        ; 0435F0 || 043646 D5          8567  			PUSH    DE              	; Save the line number
	push	hl                        ; 043647 || 	push	hl                        ; 0435F1 || 043647 E5          8568  			PUSH    HL              	; Save the BASIC program address
	xor	a                          ; 043648 || 	xor	a                          ; 0435F2 || 043648 AF          8569  			XOR     A               	;
	cp	b                           ; 043649 || 	cp	b                           ; 0435F3 || 043649 B8          8570  			CP      B              	 	; Check for an IF clause (B!=0)
	push	iy                        ; 04364A || 	push	iy                        ; 0435F4 || 04364A FD E5       8571  			PUSH    IY			; LD IY, DE
	pop	de                         ; 04364C || 	pop	de                         ; 0435F6 || 04364C D1          8572  			POP     DE              	; DE: Address of the IF clause string in the input buffer
	call	nz,$04078a                ; 04364D || 	call	nz,$040785                ; 0435F7 || 04364D C4 8A 07 04 8573  			CALL    NZ,SEARCH      		; If there is an IF clause (B!=0) then search for it
	pop	hl                         ; 043651 || 	pop	hl                         ; 0435FB || 043651 E1          8574  			POP     HL              	; Restore BASIC program address
	pop	de                         ; 043652 || 	pop	de                         ; 0435FC || 043652 D1          8575  			POP     DE              	; Restore line number
	push	iy                        ; 043653 || 	push	iy                        ; 0435FD || 043653 FD E5       8576  			PUSH    IY
	call	z,$0438e8                 ; 043655 || 	call	z,$043892                 ; 0435FF || 043655 CC E8 38 04 8577  			CALL    Z,LISTIT        	; List if no IF clause OR there is an IF clause match
	pop	iy                         ; 043659 || 	pop	iy                         ; 043603 || 043659 FD E1       8578  			POP     IY
	ex	af,af'                      ; 04365B || 	ex	af,af'                      ; 043605 || 04365B 08          8580  			EX      AF,AF'
	dec	a                          ; 04365C || 	dec	a                          ; 043606 || 04365C 3D          8581  			DEC     A			; Decrement line list counter
	call	$043fc7                   ; 04365D || 	call	$043f71                   ; 043607 || 04365D CD C7 3F 04 8582  			CALL    LTRAP			; TODO: This destroys A - is this a bug I've introduced in LTRAP?
	pop	hl                         ; 043661 || 	pop	hl                         ; 04360B || 043661 E1          8583  			POP     HL             	 	; Restore BASIC program address to beginning of line
	ld	de,$000000                  ; 043662 || 	ld	de,$000000                  ; 04360C || 043662 11 00 00 00 8584  			LD	DE,0
	ld	e,(hl)                      ; 043666 || 	ld	e,(hl)                      ; 043610 || 043666 5E          8585  			LD      E,(HL)			; Fetch the length of line in DE
	add	hl,de                      ; 043667 || 	add	hl,de                      ; 043611 || 043667 19          8586  			ADD     HL,DE           	; Go to the next line
	pop	de                         ; 043668 || 	pop	de                         ; 043612 || 043668 D1          8587  			POP     DE              	; Restore IF clause length
	pop	bc                         ; 043669 || 	pop	bc                         ; 043613 || 043669 C1          8588  			POP     BC              	; Restore second line number
	jr	$-$51                       ; 04366A || 	jr	$-$51                       ; 043614 || 04366A 18 AD       8589  			JR      LISTC			; Loop back to do next line
	call	$0438cc                   ; 04366C || 	call	$043876                   ; 043616 || 04366C CD CC 38 04 8596  RENUM:			CALL    CLEAR           	; Uses the heap so clear all dynamic variables and function/procedure pointers
	call	$043c81                   ; 043670 || 	call	$043c2b                   ; 04361A || 043670 CD 81 3C 04 8597  			CALL    PAIR            	; Fetch the parameters - HL: start (NEW line number), BC: increment
	exx                            ; 043674 || 	exx                            ; 04361E || 043674 D9          8598  			EXX
	ld	hl,($044d14)                ; 043675 || 	ld	hl,($044d14)                ; 04361F || 043675 2A 14 4D 04 8599  			LD      HL,(PAGE_)		; HL: Top of program
	ld	de,($044d1a)                ; 043679 || 	ld	de,($044d1a)                ; 043623 || 043679 ED 5B 1A 4D 8600  			LD      DE,(LOMEM)		; DE: Start address of the heap
	ld	a,(hl)                      ; 04367E || 	ld	a,(hl)                      ; 043628 || 04367E 7E          8604  RENUM1:			LD      A,(HL)          	; Fetch the line length byte
	or	a                           ; 04367F || 	or	a                           ; 043629 || 04367F B7          8605  			OR      A			; Is it zero, i.e. the end of program marker?
	jr	z,$+$38                     ; 043680 || 	jr	z,$+$38                     ; 04362A || 043680 28 36       8606  			JR      Z,RENUM2		; Yes, so skip to the next part
	inc	hl                         ; 043682 || 	inc	hl                         ; 04362C || 043682 23          8607  			INC     HL
	ld	c,(hl)                      ; 043683 || 	ld	c,(hl)                      ; 04362D || 043683 4E          8608  			LD      C,(HL)          	; BC: The OLD line number
	inc	hl                         ; 043684 || 	inc	hl                         ; 04362E || 043684 23          8609  			INC     HL
	ld	b,(hl)                      ; 043685 || 	ld	b,(hl)                      ; 04362F || 043685 46          8610  			LD      B,(HL)
	ld	a,b                         ; 043686 || 	ld	a,b                         ; 043630 || 043686 78          8611  			LD      A,B			; Check whether the line number is zero - we only need to check the LSW
	or	c                           ; 043687 || 	or	c                           ; 043631 || 043687 B1          8612  			OR      C
	jp	z,$0430d6                   ; 043688 || 	jp	z,$043080                   ; 043632 || 043688 CA D6 30 04 8613  			JP      Z,CLOOP        		; If the line number is zero, then exit back to the command line
	ex	de,hl                       ; 04368C || 	ex	de,hl                       ; 043636 || 04368C EB          8614  			EX      DE,HL			; DE: Pointer to BASIC program, HL: Pointer to heap
	ld	(hl),c                      ; 04368D || 	ld	(hl),c                      ; 043637 || 04368D 71          8615  			LD      (HL),C			; Store the OLD line number in the heap
	inc	hl                         ; 04368E || 	inc	hl                         ; 043638 || 04368E 23          8616  			INC     HL
	ld	(hl),b                      ; 04368F || 	ld	(hl),b                      ; 043639 || 04368F 70          8617  			LD      (HL),B
	inc	hl                         ; 043690 || 	inc	hl                         ; 04363A || 043690 23          8618  			INC     HL
	exx                            ; 043691 || 	exx                            ; 04363B || 043691 D9          8619  			EXX				; HL: line number, BC: increment (16-bit values)
	push	hl                        ; 043692 || 	push	hl                        ; 04363C || 043692 E5          8620  			PUSH    HL			; HL: Stack the NEW line number value
	add.sil	hl,bc                  ; 043693 || 	add.sil	hl,bc                  ; 04363D || 043693 52 09       8621  			ADD.S   HL,BC           	; Add the increment
	jp	c,$043c7b                   ; 043695 || 	jp	c,$043c25                   ; 04363F || 043695 DA 7B 3C 04 8622  			JP      C,TOOBIG        	; If > 65535, then error: "Too big"
	exx                            ; 043699 || 	exx                            ; 043643 || 043699 D9          8623  			EXX				; DE: Pointer to BASIC program, HL: Pointer to heap
	pop	bc                         ; 04369A || 	pop	bc                         ; 043644 || 04369A C1          8624  			POP     BC			; BC: Pop the NEW line number value off the stack
	ld	(hl),c                      ; 04369B || 	ld	(hl),c                      ; 043645 || 04369B 71          8625  			LD      (HL),C			; Store the NEW line number in the heap
	inc	hl                         ; 04369C || 	inc	hl                         ; 043646 || 04369C 23          8626  			INC     HL
	ld	(hl),b                      ; 04369D || 	ld	(hl),b                      ; 043647 || 04369D 70          8627  			LD      (HL),B
	inc	hl                         ; 04369E || 	inc	hl                         ; 043648 || 04369E 23          8628  			INC     HL
	ex	de,hl                       ; 04369F || 	ex	de,hl                       ; 043649 || 04369F EB          8629  			EX      DE,HL			; HL: Pointer to BASIC program, DE: Pointer to heap
	dec	hl                         ; 0436A0 || 	dec	hl                         ; 04364A || 0436A0 2B          8630  			DEC     HL			; Back up to the line length byte
	dec	hl                         ; 0436A1 || 	dec	hl                         ; 04364B || 0436A1 2B          8631  			DEC     HL
	ld	bc,$000000                  ; 0436A2 || 	ld	bc,$000000                  ; 04364C || 0436A2 01 00 00 00 8632  			LD	BC, 0
	ld	c,(hl)                      ; 0436A6 || 	ld	c,(hl)                      ; 043650 || 0436A6 4E          8633  			LD      C,(HL)			; BC: Line length
	add	hl,bc                      ; 0436A7 || 	add	hl,bc                      ; 043651 || 0436A7 09          8634  			ADD	HL,BC           	; Advance HL to next line
	ex	de,hl                       ; 0436A8 || 	ex	de,hl                       ; 043652 || 0436A8 EB          8635  			EX      DE,HL			; DE: Pointer to BASIC program, HL: Pointer to heap
	push	hl                        ; 0436A9 || 	push	hl                        ; 043653 || 0436A9 E5          8636  			PUSH    HL
	inc	h                          ; 0436AA || 	inc	h                          ; 043654 || 0436AA 24          8637  			INC     H			; Increment to next page
	sbc	hl,sp                      ; 0436AB || 	sbc	hl,sp                      ; 043655 || 0436AB ED 72       8638  			SBC     HL,SP			; Subtract from SP
	pop	hl                         ; 0436AD || 	pop	hl                         ; 043657 || 0436AD E1          8639  			POP     HL
	ex	de,hl                       ; 0436AE || 	ex	de,hl                       ; 043658 || 0436AE EB          8640  			EX      DE, HL			; HL: Pointer to BASIC program, DE: Pointer to heap
	jr	c,$-$31                     ; 0436AF || 	jr	c,$-$31                     ; 043659 || 0436AF 38 CD       8641  			JR      C,RENUM1        	; Loop, as the heap pointer has not strayed into the stack page
	call	$0437cd                   ; 0436B1 || 	call	$043777                   ; 04365B || 0436B1 CD CD 37 04 8642  			CALL    EXTERR          	; Otherwise throw error: "RENUMBER space'
	call	z,$eb0008                 ; 0436B5 || 	call	z,$eb0008                 ; 04365F || 0436B5 CC          8643  			DB    	REN
	ld	(hl),$ff                    ; 0436B9 || 	ld	(hl),$ff                    ; 043663 || 0436B9 36 FF       8653  			LD      (HL),-1			; Mark the end with FFFFh
	inc	hl                         ; 0436BB || 	inc	hl                         ; 043665 || 0436BB 23          8654  			INC     HL
	ld	(hl),$ff                    ; 0436BC || 	ld	(hl),$ff                    ; 043666 || 0436BC 36 FF       8655  			LD      (HL),-1
	ld	de,($044d1a)                ; 0436BE || 	ld	de,($044d1a)                ; 043668 || 0436BE ED 5B 1A 4D 8656  			LD      DE,(LOMEM)		; DE: Pointer to the start of the heap
	exx                            ; 0436C3 || 	exx                            ; 04366D || 0436C3 D9          8657  			EXX
	ld	hl,($044d14)                ; 0436C4 || 	ld	hl,($044d14)                ; 04366E || 0436C4 2A 14 4D 04 8658  			LD      HL,(PAGE_)		; HL: Start of the BASIC program area
	ld	c,(hl)                      ; 0436C8 || 	ld	c,(hl)                      ; 043672 || 0436C8 4E          8659  RENUM3:			LD      C,(HL)			; Fetch the first line length byte
	ld	a,c                         ; 0436C9 || 	ld	a,c                         ; 043673 || 0436C9 79          8660  			LD      A,C			; If it is zero, then no program, so...
	or	a                           ; 0436CA || 	or	a                           ; 043674 || 0436CA B7          8661  			OR      A
	jp	z,$0430d5                   ; 0436CB || 	jp	z,$04307f                   ; 043675 || 0436CB CA D5 30 04 8662  			JP      Z,WARM			; Jump to warm start
	exx                            ; 0436CF || 	exx                            ; 043679 || 0436CF D9          8663  			EXX				; HL: Pointer to end of heap, DE: Pointer to start of heap
	ex	de,hl                       ; 0436D0 || 	ex	de,hl                       ; 04367A || 0436D0 EB          8664  			EX      DE,HL			; DE: Pointer to end of heap, HL: Pointer to start of heap
	inc	hl                         ; 0436D1 || 	inc	hl                         ; 04367B || 0436D1 23          8665  			INC     HL			; Skip to the NEW line number
	inc	hl                         ; 0436D2 || 	inc	hl                         ; 04367C || 0436D2 23          8666  			INC     HL
	ld	e,(hl)                      ; 0436D3 || 	ld	e,(hl)                      ; 04367D || 0436D3 5E          8667  			LD      E,(HL)			; DE: The NEW line number
	inc	hl                         ; 0436D4 || 	inc	hl                         ; 04367E || 0436D4 23          8668  			INC     HL
	ld	d,(hl)                      ; 0436D5 || 	ld	d,(hl)                      ; 04367F || 0436D5 56          8669  			LD      D,(HL)
	inc	hl                         ; 0436D6 || 	inc	hl                         ; 043680 || 0436D6 23          8670  			INC     HL
	push	de                        ; 0436D7 || 	push	de                        ; 043681 || 0436D7 D5          8671  			PUSH    DE			; Stack the NEW line number
	ex	de,hl                       ; 0436D8 || 	ex	de,hl                       ; 043682 || 0436D8 EB          8672  			EX      DE,HL			; HL: The NEW line number, DE: Pointer to the end of heap
	ld	($044d23),hl                ; 0436D9 || 	ld	($044d23),hl                ; 043683 || 0436D9 22 23 4D 04 8673  			LD      (LINENO),HL		; Store the line number in LINENO
	exx                            ; 0436DD || 	exx                            ; 043687 || 0436DD D9          8674  			EXX				; HL: Pointer to the BASIC program area
	pop	de                         ; 0436DE || 	pop	de                         ; 043688 || 0436DE D1          8675  			POP     DE			; DE: The NEW line number
	inc	hl                         ; 0436DF || 	inc	hl                         ; 043689 || 0436DF 23          8676  			INC     HL
	ld	(hl),e                      ; 0436E0 || 	ld	(hl),e                      ; 04368A || 0436E0 73          8677  			LD      (HL),E          	; Write out the NEW line number to the BASIC program
	inc	hl                         ; 0436E1 || 	inc	hl                         ; 04368B || 0436E1 23          8678  			INC     HL
	ld	(hl),d                      ; 0436E2 || 	ld	(hl),d                      ; 04368C || 0436E2 72          8679  			LD      (HL),D
	inc	hl                         ; 0436E3 || 	inc	hl                         ; 04368D || 0436E3 23          8680  			INC     HL
	dec	c                          ; 0436E4 || 	dec	c                          ; 04368E || 0436E4 0D          8681  			DEC     C			; Subtract 3 from the line length to compensate for increasing HL by 3 above
	dec	c                          ; 0436E5 || 	dec	c                          ; 04368F || 0436E5 0D          8682  			DEC     C
	dec	c                          ; 0436E6 || 	dec	c                          ; 043690 || 0436E6 0D          8683  			DEC     C
	ld	a,c                         ; 0436E7 || 	ld	a,c                         ; 043691 || 0436E7 79          8684  			LD	A,C
	ld	bc,$000000                  ; 0436E8 || 	ld	bc,$000000                  ; 043692 || 0436E8 01 00 00 00 8685  			LD	BC,0
	ld	c,a                         ; 0436EC || 	ld	c,a                         ; 043696 || 0436EC 4F          8686  			LD	C,A			; BC: Line length
	ld	a,$8d                       ; 0436ED || 	ld	a,$8d                       ; 043697 || 0436ED 3E 8D       8688  RENUM7:			LD      A,LINO			; A: The token code that precedes any line number encoded in BASIC (i.e. GOTO/GOSUB)
	cpir                           ; 0436EF || 	cpir                           ; 043699 || 0436EF ED B1       8689  			CPIR                    	; Search for the token
	jr	nz,$-$29                    ; 0436F1 || 	jr	nz,$-$29                    ; 04369B || 0436F1 20 D5       8690  			JR      NZ,RENUM3		; If not found, then loop to process the next line
	push	bc                        ; 0436F3 || 	push	bc                        ; 04369D || 0436F3 C5          8694  			PUSH    BC			; Stack everything
	push	hl                        ; 0436F4 || 	push	hl                        ; 04369E || 0436F4 E5          8695  			PUSH    HL
	push	hl                        ; 0436F5 || 	push	hl                        ; 04369F || 0436F5 E5          8696  			PUSH    HL			; HL: Pointer to encoded line number
	pop	iy                         ; 0436F6 || 	pop	iy                         ; 0436A0 || 0436F6 FD E1       8697  			POP     IY			; IY: Pointer to encoded line number
	exx                            ; 0436F8 || 	exx                            ; 0436A2 || 0436F8 D9          8698  			EXX
	call	$0408eb                   ; 0436F9 || 	call	$0408e6                   ; 0436A3 || 0436F9 CD EB 08 04 8699  			CALL    DECODE			; Decode the encoded line number (in HL')
	exx                            ; 0436FD || 	exx                            ; 0436A7 || 0436FD D9          8700  			EXX				; HL: Decoded line number
	ld	b,h                         ; 0436FE || 	ld	b,h                         ; 0436A8 || 0436FE 44          8701  			LD      B,H			; BC: Decoded line number
	ld	c,l                         ; 0436FF || 	ld	c,l                         ; 0436A9 || 0436FF 4D          8702  			LD      C,L
	ld	hl,($044d1a)                ; 043700 || 	ld	hl,($044d1a)                ; 0436AA || 043700 2A 1A 4D 04 8703  			LD      HL,(LOMEM)		; HL: Pointer to heap
	ld	e,(hl)                      ; 043704 || 	ld	e,(hl)                      ; 0436AE || 043704 5E          8708  RENUM4:			LD      E,(HL)          	; DE: The OLD line number
	inc	hl                         ; 043705 || 	inc	hl                         ; 0436AF || 043705 23          8709  			INC     HL
	ld	d,(hl)                      ; 043706 || 	ld	d,(hl)                      ; 0436B0 || 043706 56          8710  			LD      D,(HL)
	inc	hl                         ; 043707 || 	inc	hl                         ; 0436B1 || 043707 23          8711  			INC     HL
	ex	de,hl                       ; 043708 || 	ex	de,hl                       ; 0436B2 || 043708 EB          8712  			EX      DE,HL			; HL: The OLD line number, DE: Pointer in the global heap
	or	a                           ; 043709 || 	or	a                           ; 0436B3 || 043709 B7          8713  			OR      A               	; Clear the carry and...
	sbc.sil	hl,bc                  ; 04370A || 	sbc.sil	hl,bc                  ; 0436B4 || 04370A 52 ED 42    8714  			SBC.S   HL,BC			; Compare by means of subtraction the OLD line number against the one in the heap
	ex	de,hl                       ; 04370D || 	ex	de,hl                       ; 0436B7 || 04370D EB          8715  			EX      DE,HL			; HL: Pointer in the global heap
	ld	e,(hl)                      ; 04370E || 	ld	e,(hl)                      ; 0436B8 || 04370E 5E          8716  			LD      E,(HL)          	; DE: The NEW line number
	inc	hl                         ; 04370F || 	inc	hl                         ; 0436B9 || 04370F 23          8717  			INC     HL
	ld	d,(hl)                      ; 043710 || 	ld	d,(hl)                      ; 0436BA || 043710 56          8718  			LD      D,(HL)
	inc	hl                         ; 043711 || 	inc	hl                         ; 0436BB || 043711 23          8719  			INC     HL
	jr	c,$-$0e                     ; 043712 || 	jr	c,$-$0e                     ; 0436BC || 043712 38 F0       8720  			JR      C,RENUM4		; Loop until there is a match (Z) or not (NC)
	ex	de,hl                       ; 043714 || 	ex	de,hl                       ; 0436BE || 043714 EB          8721  			EX      DE,HL			; DE: Pointer in the global heap
	jr	z,$+$1f                     ; 043715 || 	jr	z,$+$1f                     ; 0436BF || 043715 28 1D       8722  			JR      Z,RENUM5        	; If Z flag is set, there is an exact match to the decoded line number on the heap
	call	$043de6                   ; 043717 || 	call	$043d90                   ; 0436C1 || 043717 CD E6 3D 04 8724  			CALL    TELL			; Display this error if the line number is not found
	ld	b,(hl)                      ; 04371B || 	ld	b,(hl)                      ; 0436C5 || 04371B 46 61 69 6C 8725  			DB    	"Failed at "
	ld	h,c                         ; 04371C || 	ld	h,c                         ; 0436C6
	ld	l,c                         ; 04371D || 	ld	l,c                         ; 0436C7
	ld	l,h                         ; 04371E || 	ld	l,h                         ; 0436C8
	ld	h,l                         ; 04371F || 	ld	h,l                         ; 0436C9
	ld	h,h                         ; 043720 || 	ld	h,h                         ; 0436CA
	jr	nz,$+$63                    ; 043721 || 	jr	nz,$+$63                    ; 0436CB
	ld	(hl),h                      ; 043723 || 	ld	(hl),h                      ; 0436CD
	jr	nz,$+$02                    ; 043724 || 	jr	nz,$+$02                    ; 0436CE
	ld	hl,($044d23)                ; 043726 || 	ld	hl,($044d23)                ; 0436D0 || 043726 2A 23 4D 04 8727  			LD      HL,(LINENO)
	call	$043a4d                   ; 04372A || 	call	$0439f7                   ; 0436D4 || 04372A CD 4D 3A 04 8728  			CALL    PBCDL
	call	$04399d                   ; 04372E || 	call	$043947                   ; 0436D8 || 04372E CD 9D 39 04 8729  			CALL    CRLF
	jr	$+$09                       ; 043732 || 	jr	$+$09                       ; 0436DC || 043732 18 07       8730  			JR      RENUM6			; And carry on renumbering
	pop	de                         ; 043734 || 	pop	de                         ; 0436DE || 043734 D1          8734  RENUM5:			POP     DE			; DE: Pointer to the encoded line number in the listing
	push	de                        ; 043735 || 	push	de                        ; 0436DF || 043735 D5          8735  			PUSH    DE
	dec	de                         ; 043736 || 	dec	de                         ; 0436E0 || 043736 1B          8736  			DEC     DE			; Back up a byte to the LINO token
	call	$043db2                   ; 043737 || 	call	$043d5c                   ; 0436E1 || 043737 CD B2 3D 04 8737  			CALL    ENCODE          	; Re-write the new line number out
	pop	hl                         ; 04373B || 	pop	hl                         ; 0436E5 || 04373B E1          8738  RENUM6:			POP     HL			; HL: Pointer to the encoded line number in the listing
	pop	bc                         ; 04373C || 	pop	bc                         ; 0436E6 || 04373C C1          8739  			POP     BC			; BC: The remaining line length
	jr	$-$50                       ; 04373D || 	jr	$-$50                       ; 0436E7 || 04373D 18 AE       8740  			JR      RENUM7			; Carry on checking for any more encoded line numbers in this line
	call	$043c81                   ; 04373F || 	call	$043c2b                   ; 0436E9 || 04373F CD 81 3C 04 8747  AUTO:			CALL    PAIR			; Get the parameter pair (HL: first parameter, BC: second parameter)
	ld	($044d29),hl                ; 043743 || 	ld	($044d29),hl                ; 0436ED || 043743 22 29 4D 04 8748  			LD      (AUTONO),HL		; Store the start in AUTONO
	ld	a,c                         ; 043747 || 	ld	a,c                         ; 0436F1 || 043747 79          8749  			LD      A,C			; Increment is 8 bit (0-255)
	ld	($044d41),a                 ; 043748 || 	ld	($044d41),a                 ; 0436F2 || 043748 32 41 4D 04 8750  			LD      (INCREM),A		; Store that in INCREM
	jr	$+$30                       ; 04374C || 	jr	$+$30                       ; 0436F6 || 04374C 18 2E       8751  			JR      CLOOP0			; Jump back indirectly to the command loop via CLOOP0 (optimisation for size)
	call	$043de6                   ; 04374E || 	call	$043d90                   ; 0436F8 || 04374E CD E6 3D 04 8756  BAD:			CALL    TELL            	; Output "Bad program" error
	inc	bc                         ; 043752 || 	inc	bc                         ; 0436FC || 043752 03          8757  			DB    3				; Token for "BAD"
	ld	(hl),b                      ; 043753 || 	ld	(hl),b                      ; 0436FD || 043753 70 72 6F 67 8758  			DB    "program"
	ld	(hl),d                      ; 043754 || 	ld	(hl),d                      ; 0436FE
	ld	l,a                         ; 043755 || 	ld	l,a                         ; 0436FF
	ld	h,a                         ; 043756 || 	ld	h,a                         ; 043700
	ld	(hl),d                      ; 043757 || 	ld	(hl),d                      ; 043701
	ld	h,c                         ; 043758 || 	ld	h,c                         ; 043702
	ld	l,l                         ; 043759 || 	ld	l,l                         ; 043703
	dec	c                          ; 04375A || 	dec	c                          ; 043704 || 04375A 0D          8759  			DB    CR
	ld	a,(bc)                      ; 04375B || 	ld	a,(bc)                      ; 043705 || 04375B 0A          8760  			DB    LF
	nop                            ; 04375C || 	nop                            ; 043706 || 04375C 00          8761  			DB    0				; Falls through to NEW
	call	$0438c2                   ; 04375D || 	call	$04386c                   ; 043707 || 04375D CD C2 38 04 8763  NEW:			CALL    NEWIT			; Call NEWIT (clears program area and variables)
	jr	$+$1b                       ; 043761 || 	jr	$+$1b                       ; 04370B || 043761 18 19       8764  			JR      CLOOP0			; Jump back indirectly to the command loop via CLOOP0 (optimisation for size)
	ld	hl,($044d14)                ; 043763 || 	ld	hl,($044d14)                ; 04370D || 043763 2A 14 4D 04 8768  OLD:			LD      HL,(PAGE_)		; HL: The start of the BASIC program area
	push	hl                        ; 043767 || 	push	hl                        ; 043711 || 043767 E5          8769  			PUSH    HL			; Stack it
	inc	hl                         ; 043768 || 	inc	hl                         ; 043712 || 043768 23          8770  			INC     HL			; Skip the potential length byte of first line of code
	inc	hl                         ; 043769 || 	inc	hl                         ; 043713 || 043769 23          8771  			INC     HL			; And the line number word
	inc	hl                         ; 04376A || 	inc	hl                         ; 043714 || 04376A 23          8772  			INC     HL
	ld	bc,$0000fc                  ; 04376B || 	ld	bc,$0000fc                  ; 043715 || 04376B 01 FC 00 00 8773  			LD      BC,252			; Look for a CR in the first 252 bytes of code; maximum line length
	ld	a,$0d                       ; 04376F || 	ld	a,$0d                       ; 043719 || 04376F 3E 0D       8774  			LD      A,CR
	cpir                           ; 043771 || 	cpir                           ; 04371B || 043771 ED B1       8775  			CPIR
	jr	nz,$-$25                    ; 043773 || 	jr	nz,$-$25                    ; 04371D || 043773 20 D9       8776  			JR      NZ,BAD			; If not found, then the first line of code is not a valid BBC BASIC code
	ld	a,l                         ; 043775 || 	ld	a,l                         ; 04371F || 043775 7D          8777  			LD      A,L			; It could still be garbage though! Store the position in A; this requires
	pop	hl                         ; 043776 || 	pop	hl                         ; 043720 || 043776 E1          8778  			POP     HL			; PAGE to be on a 256 page boundary, and is now the length of the first line
	ld	(hl),a                      ; 043777 || 	ld	(hl),a                      ; 043721 || 043777 77          8779  			LD      (HL),A			; Restore the length byte (this will have been set to 0 by NEW)
	call	$043895                   ; 043778 || 	call	$04383f                   ; 043722 || 043778 CD 95 38 04 8780  			CALL    CLEAN			; Further checks for bad program, set TOP, write out &FFFF end of program marker
	jp	$0430d6                     ; 04377C || 	jp	$043080                     ; 043726 || 04377C C3 D6 30 04 8781  CLOOP0:			JP      CLOOP			; Jump back to the command loop
	call	$04031a                   ; 043780 || 	call	$040315                   ; 04372A || 043780 CD 1A 03 04 8785  LOAD:			CALL    EXPRS           	; Get the filename
	ld	a,$0d                       ; 043784 || 	ld	a,$0d                       ; 04372E || 043784 3E 0D       8786  			LD      A,CR			; DE points to the last byte of filename in ACCS
	ld	(de),a                      ; 043786 || 	ld	(de),a                      ; 043730 || 043786 12          8787  			LD      (DE),A			; Terminate filename with a CR
	call	$043875                   ; 043787 || 	call	$04381f                   ; 043731 || 043787 CD 75 38 04 8788  			CALL    LOAD0			; Load the file in, then CLEAN
	call	$0438cc                   ; 04378B || 	call	$043876                   ; 043735 || 04378B CD CC 38 04 8789  			CALL    CLEAR			; Further checks for bad program, set TOP, write out &FFFF end of program marker
	jr	$+$23                       ; 04378F || 	jr	$+$23                       ; 043739 || 04378F 18 21       8790  			JR      WARM0			; Jump back to the command loop
	call	$0438a1                   ; 043791 || 	call	$04384b                   ; 04373B || 043791 CD A1 38 04 8794  SAVE:			CALL    SETTOP          	; Set TOP sysvar
	call	$04031a                   ; 043795 || 	call	$040315                   ; 04373F || 043795 CD 1A 03 04 8795  			CALL    EXPRS           	; Get the filename
	ld	a,$0d                       ; 043799 || 	ld	a,$0d                       ; 043743 || 043799 3E 0D       8796  			LD      A,CR			; Terminate the filename with a CR
	ld	(de),a                      ; 04379B || 	ld	(de),a                      ; 043745 || 04379B 12          8797  			LD      (DE),A
	ld	de,($044d14)                ; 04379C || 	ld	de,($044d14)                ; 043746 || 04379C ED 5B 14 4D 8798  			LD      DE,(PAGE_)		; DE: Start of program memory
	ld	hl,($044d17)                ; 0437A1 || 	ld	hl,($044d17)                ; 04374B || 0437A1 2A 17 4D 04 8799  			LD      HL,(TOP)		; HL: Top of program memory
	or	a                           ; 0437A5 || 	or	a                           ; 04374F || 0437A5 B7          8800  			OR      A			; Calculate program size (TOP-PAGE)
	sbc	hl,de                      ; 0437A6 || 	sbc	hl,de                      ; 043750 || 0437A6 ED 52       8801  			SBC     HL,DE
	ld	b,h                         ; 0437A8 || 	ld	b,h                         ; 043752 || 0437A8 44          8802  			LD      B,H             	; BC: Length of program in bytes
	ld	c,l                         ; 0437A9 || 	ld	c,l                         ; 043753 || 0437A9 4D          8803  			LD      C,L
	ld	hl,$044a00                  ; 0437AA || 	ld	hl,$044a00                  ; 043754 || 0437AA 21 00 4A 04 8804  			LD      HL,ACCS			; HL: Address of the filename
	call	$044294                   ; 0437AE || 	call	$04422d                   ; 043758 || 0437AE CD 94 42 04 8805  			CALL    OSSAVE			; Call the SAVE routine in patch.asm
	jp	$0430d5                     ; 0437B2 || 	jp	$04307f                     ; 04375C || 0437B2 C3 D5 30 04 8806  WARM0:			JP      WARM			; Jump back to the command loop
	ld	sp,($044d20)                ; 0437B6 || 	ld	sp,($044d20)                ; 043760 || 0437B6 ED 7B 20 4D 8815  ERROR_:			LD      SP,(HIMEM)		; Set SP to HIMEM
	ld	hl,$04349f                  ; 0437BB || 	ld	hl,$043449                  ; 043765 || 0437BB 21 9F 34 04 8816  			LD      HL,ERRWDS		; Index into the error string table
	or	a                           ; 0437BF || 	or	a                           ; 043769 || 0437BF B7          8817  			OR      A			; We don't need to search for the first error
	jr	z,$+$0c                     ; 0437C0 || 	jr	z,$+$0c                     ; 04376A || 0437C0 28 0A       8818  			JR      Z,ERROR1		; So skip the search routine
	ld	b,a                         ; 0437C2 || 	ld	b,a                         ; 04376C || 0437C2 47          8824  			LD      B,A             	; Store error number in B
	ex	af,af'                      ; 0437C3 || 	ex	af,af'                      ; 04376D || 0437C3 08          8825  			EX      AF,AF'			; Store error number in AF'
	xor	a                          ; 0437C4 || 	xor	a                          ; 04376E || 0437C4 AF          8826  			XOR     A
	cp	(hl)                        ; 0437C5 || 	cp	(hl)                        ; 04376F || 0437C5 BE          8827  ERROR0:			CP      (HL)			; Compare the character with 0 (the terminator byte)
	inc	hl                         ; 0437C6 || 	inc	hl                         ; 043770 || 0437C6 23          8828  			INC     HL			; Increment the string pointer
	jr	nz,$-$02                    ; 0437C7 || 	jr	nz,$-$02                    ; 043771 || 0437C7 20 FC       8829  			JR      NZ,ERROR0		; Loop until with hit a 0
	djnz	$-$04                     ; 0437C9 || 	djnz	$-$04                     ; 043773 || 0437C9 10 FA       8830  			DJNZ    ERROR0			; Decrements the error number and loop until 0
	ex	af,af'                      ; 0437CB || 	ex	af,af'                      ; 043775 || 0437CB 08          8831  			EX      AF,AF'			; Restore the error number from AF'
	push	hl                        ; 0437CC || 	push	hl                        ; 043776 || 0437CC E5          8835  ERROR1:			PUSH    HL			; Stack the error string pointer and fall through to EXTERR
	pop	hl                         ; 0437CD || 	pop	hl                         ; 043777 || 0437CD E1          8848  EXTERR:			POP     HL			; Pop the error string pointer
	ld	($044d2f),hl                ; 0437CE || 	ld	($044d2f),hl                ; 043778 || 0437CE 22 2F 4D 04 8849  			LD      (ERRTXT),HL		; Store in ERRTXT sysvar
	ld	sp,($044d20)                ; 0437D2 || 	ld	sp,($044d20)                ; 04377C || 0437D2 ED 7B 20 4D 8850  			LD      SP,(HIMEM)		; Set SP to HIMEM
	ld	($044d3f),a                 ; 0437D7 || 	ld	($044d3f),a                 ; 043781 || 0437D7 32 3F 4D 04 8851  			LD      (ERR),A			; Store error number in ERR sysvar
	call	$043a04                   ; 0437DB || 	call	$0439ae                   ; 043785 || 0437DB CD 04 3A 04 8852  			CALL    SETLIN			; Get line number
	ld	($044d33),hl                ; 0437DF || 	ld	($044d33),hl                ; 043789 || 0437DF 22 33 4D 04 8853  			LD      (ERL),HL		; Store in ERL sysvar
	or	a                           ; 0437E3 || 	or	a                           ; 04378D || 0437E3 B7          8854  			OR      A			; Is error number 0?
	jr	z,$+$0f                     ; 0437E4 || 	jr	z,$+$0f                     ; 04378E || 0437E4 28 0D       8855  			JR      Z,ERROR2		; Yes, so skip the next bit as error number 0 is untrappable
	ld	hl,($044d2c)                ; 0437E6 || 	ld	hl,($044d2c)                ; 043790 || 0437E6 2A 2C 4D 04 8857  			LD      HL,(ERRTRP)		; Check whether the error is trapped
	ld	a,h                         ; 0437EA || 	ld	a,h                         ; 043794 || 0437EA 7C          8858  			LD      A,H
	or	l                           ; 0437EB || 	or	l                           ; 043795 || 0437EB B5          8859  			OR      L
	push	hl                        ; 0437EC || 	push	hl                        ; 043796 || 0437EC E5          8860  			PUSH    HL			; HL: Error line
	pop	iy                         ; 0437ED || 	pop	iy                         ; 043797 || 0437ED FD E1       8861  			POP     IY			; IY: HL
	jp	nz,$040b9e                  ; 0437EF || 	jp	nz,$040b96                  ; 043799 || 0437EF C2 9E 0B 04 8862  			JP      NZ,XEQ         	 	; If error trapped, jump to XEQ
	ld	hl,$000000                  ; 0437F3 || 	ld	hl,$000000                  ; 04379D || 0437F3 21 00 00 00 8864  ERROR2:			LD      HL,0
	ld	($044d29),hl                ; 0437F7 || 	ld	($044d29),hl                ; 0437A1 || 0437F7 22 29 4D 04 8865  			LD      (AUTONO),HL		; Cancel AUTO
	ld	($044d26),hl                ; 0437FB || 	ld	($044d26),hl                ; 0437A5 || 0437FB 22 26 4D 04 8866  			LD      (TRACEN),HL     	; Cancel TRACE
	call	$04441d                   ; 0437FF || 	call	$0443b6                   ; 0437A9 || 0437FF CD 1D 44 04 8867  			CALL    RESET           	; Reset OPSYS
	call	$04399d                   ; 043803 || 	call	$043947                   ; 0437AD || 043803 CD 9D 39 04 8868  			CALL    CRLF			; Output newline
	call	$043dd8                   ; 043807 || 	call	$043d82                   ; 0437B1 || 043807 CD D8 3D 04 8869  			CALL    REPORT          	; Output the error message
	call	$043a38                   ; 04380B || 	call	$0439e2                   ; 0437B5 || 04380B CD 38 3A 04 8870  			CALL    SAYLN			; Output " at line nnnn" message.
	ld	e,$00                       ; 04380F || 	ld	e,$00                       ; 0437B9 || 04380F 1E 00       8871  			LD      E,0			; Close all files
	call	c,$044392                 ; 043811 || 	call	c,$04432b                 ; 0437BB || 043811 DC 92 43 04 8872  			CALL    C,OSSHUT
	call	$04399d                   ; 043815 || 	call	$043947                   ; 0437BF || 043815 CD 9D 39 04 8873  			CALL    CRLF			; Output newline
	jp	$0430d6                     ; 043819 || 	jp	$043080                     ; 0437C3 || 043819 C3 D6 30 04 8874  			JP      CLOOP			; Back to CLOOP
	ld	hl,$0431be                  ; 04381D || 	ld	hl,$043168                  ; 0437C7 || 04381D 21 BE 31 04 8886  LEX:			LD      HL,KEYWDS		; Address of the keywords table
	ld	a,(iy)                      ; 043821 || 	ld	a,(iy)                      ; 0437CB || 043821 FD 7E 00    8888  LEX0:			LD      A,(IY)			; Fetch the character to match
	ld	b,(hl)                      ; 043824 || 	ld	b,(hl)                      ; 0437CE || 043824 46          8889  			LD      B,(HL)			; B: The token from the keywords table
	inc	hl                         ; 043825 || 	inc	hl                         ; 0437CF || 043825 23          8890  			INC     HL			; Increment the pointer in the keywords table
	cp	(hl)                        ; 043826 || 	cp	(hl)                        ; 0437D0 || 043826 BE          8891  			CP      (HL)			; Compare the first characters
	jr	z,$+$0a                     ; 043827 || 	jr	z,$+$0a                     ; 0437D1 || 043827 28 08       8892  			JR      Z,LEX2			; If there is a match, then skip to LEX2
	ret	c                          ; 043829 || 	ret	c                          ; 0437D3 || 043829 D8          8893  			RET     C               	; No match, so fail
	inc	hl                         ; 04382A || 	inc	hl                         ; 0437D4 || 04382A 23          8897  LEX1:			INC     HL			; Increment the pointer
	bit	7,(hl)                     ; 04382B || 	bit	7,(hl)                     ; 0437D5 || 04382B CB 7E       8898  			BIT     7,(HL)			; Check if bit 7 set (all token IDs have bit 7 set)
	jr	z,$-$03                     ; 04382D || 	jr	z,$-$03                     ; 0437D7 || 04382D 28 FB       8899  			JR      Z,LEX1			; No, so loop
	jr	$-$0e                       ; 04382F || 	jr	$-$0e                       ; 0437D9 || 04382F 18 F0       8900  			JR      LEX0			; At this point HL is pointing to the start of the next keyword
	push	iy                        ; 043831 || 	push	iy                        ; 0437DB || 043831 FD E5       8902  LEX2:			PUSH    IY              	; Save the input pointer
	inc	hl                         ; 043833 || 	inc	hl                         ; 0437DD || 043833 23          8903  LEX3:			INC     HL			; Increment the keyword pointer
	bit	7,(hl)                     ; 043834 || 	bit	7,(hl)                     ; 0437DE || 043834 CB 7E       8904  			BIT     7,(HL)			; If we've reached the end (marked by the start of the next token) then
	jr	nz,$+$1e                    ; 043836 || 	jr	nz,$+$1e                    ; 0437E0 || 043836 20 1C       8905  			JR      NZ,LEX6         	; Jump to here as we've found a token
	inc	iy                         ; 043838 || 	inc	iy                         ; 0437E2 || 043838 FD 23       8906  			INC     IY			; Increment the text pointer
	ld	a,(iy)                      ; 04383A || 	ld	a,(iy)                      ; 0437E4 || 04383A FD 7E 00    8907  			LD      A,(IY)			; Fetch the character
	cp	$2e                         ; 04383D || 	cp	$2e                         ; 0437E7 || 04383D FE 2E       8908  			CP      '.'			; Is it an abbreviated keyword?
	jr	z,$+$15                     ; 04383F || 	jr	z,$+$15                     ; 0437E9 || 04383F 28 13       8909  			JR      Z,LEX6          	; Yes, so we'll return with the token we've found
	cp	(hl)                        ; 043841 || 	cp	(hl)                        ; 0437EB || 043841 BE          8910  			CP      (HL)			; Compare with the keywords list
	jr	z,$-$0f                     ; 043842 || 	jr	z,$-$0f                     ; 0437EC || 043842 28 EF       8911  			JR      Z,LEX3			; It's a match, so continue checking this keyword
	call	$043cd1                   ; 043844 || 	call	$043c7b                   ; 0437EE || 043844 CD D1 3C 04 8912  			CALL    RANGE1			; Is it alphanumeric, '@', '_' or '`'
	jr	c,$+$06                     ; 043848 || 	jr	c,$+$06                     ; 0437F2 || 043848 38 04       8913  			JR      C,LEX5			; No, so check whether keyword needs to be immediately delimited
	pop	iy                         ; 04384A || 	pop	iy                         ; 0437F4 || 04384A FD E1       8915  LEX4:			POP     IY              	; Restore the input pointer ready for the next search
	jr	$-$22                       ; 04384C || 	jr	$-$22                       ; 0437F6 || 04384C 18 DC       8916  			JR      LEX1			; And loop back to start again
	ld	a,(hl)                      ; 04384E || 	ld	a,(hl)                      ; 0437F8 || 04384E 7E          8921  LEX5:			LD      A,(HL)			; Fetch the byte from the keywords table
	or	a                           ; 04384F || 	or	a                           ; 0437F9 || 04384F B7          8922  			OR      A			; If it is not zero, then...
	jr	nz,$-$06                    ; 043850 || 	jr	nz,$-$06                    ; 0437FA || 043850 20 F8       8923  			JR      NZ,LEX4			; Keep searching
	dec	iy                         ; 043852 || 	dec	iy                         ; 0437FC || 043852 FD 2B       8924  			DEC     IY			; If it is zero, then skip the input pointer back one byte
	pop	af                         ; 043854 || 	pop	af                         ; 0437FE || 043854 F1          8928  LEX6:			POP     AF			; Discard IY input pointer pushed on the stack
	xor	a                          ; 043855 || 	xor	a                          ; 0437FF || 043855 AF          8929  			XOR     A			; Set the Z flag
	ld	a,b                         ; 043856 || 	ld	a,b                         ; 043800 || 043856 78          8930  			LD      A,B			; A: The token
	ret                            ; 043857 || 	ret                            ; 043801 || 043857 C9          8931  			RET
	push	de                        ; 043858 || 	push	de                        ; 043802 || 043858 D5          8940  DEL:			PUSH    DE
	push	hl                        ; 043859 || 	push	hl                        ; 043803 || 043859 E5          8941  			PUSH    HL
	push	hl                        ; 04385A || 	push	hl                        ; 043804 || 04385A E5          8942  			PUSH    HL			; HL: Address of the program line
	ld	b,$00                       ; 04385B || 	ld	b,$00                       ; 043805 || 04385B 06 00       8943  			LD      B,0			; BC: Length of the line
	ld	c,(hl)                      ; 04385D || 	ld	c,(hl)                      ; 043807 || 04385D 4E          8944  			LD      C,(HL)
	add	hl,bc                      ; 04385E || 	add	hl,bc                      ; 043808 || 04385E 09          8945  			ADD     HL,BC			; HL: Advanced to the start of the next line
	push	hl                        ; 04385F || 	push	hl                        ; 043809 || 04385F E5          8946  			PUSH    HL
	ex	de,hl                       ; 043860 || 	ex	de,hl                       ; 04380A || 043860 EB          8947  			EX      DE,HL			; DE: Pointer to the next line
	ld	hl,($044d17)                ; 043861 || 	ld	hl,($044d17)                ; 04380B || 043861 2A 17 4D 04 8948  			LD      HL,(TOP)		; HL: Pointer to the end of the program
	sbc	hl,de                      ; 043865 || 	sbc	hl,de                      ; 04380F || 043865 ED 52       8949  			SBC     HL,DE
	ld	b,h                         ; 043867 || 	ld	b,h                         ; 043811 || 043867 44          8950  			LD      B,H			; BC: Size of block to move
	ld	c,l                         ; 043868 || 	ld	c,l                         ; 043812 || 043868 4D          8951  			LD      C,L
	pop	hl                         ; 043869 || 	pop	hl                         ; 043813 || 043869 E1          8952  			POP     HL			; HL: Pointer to next line
	pop	de                         ; 04386A || 	pop	de                         ; 043814 || 04386A D1          8953  			POP     DE			; DE: Pointer to this line
	ldir                           ; 04386B || 	ldir                           ; 043815 || 04386B ED B0       8954  			LDIR                    	; Delete the line
	ld	($044d17),de                ; 04386D || 	ld	($044d17),de                ; 043817 || 04386D ED 53 17 4D 8955  			LD      (TOP),DE		; Adjust TOP
	pop	hl                         ; 043872 || 	pop	hl                         ; 04381C || 043872 E1          8956  			POP     HL
	pop	de                         ; 043873 || 	pop	de                         ; 04381D || 043873 D1          8957  			POP     DE
	ret                            ; 043874 || 	ret                            ; 04381E || 043874 C9          8958  			RET
	ld	de,($044d14)                ; 043875 || 	ld	de,($044d14)                ; 04381F || 043875 ED 5B 14 4D 8968  LOAD0: 			LD      DE,(PAGE_)		; DE: Beginning of BASIC program area
	ld	hl,$ffff00                  ; 04387A || 	ld	hl,$ffff00                  ; 043824 || 04387A 21 00 FF FF 8969  			LD      HL,-256
	add	hl,sp                      ; 04387E || 	add	hl,sp                      ; 043828 || 04387E 39          8970  			ADD     HL,SP
	sbc	hl,de                      ; 04387F || 	sbc	hl,de                      ; 043829 || 04387F ED 52       8971  			SBC     HL,DE           	; Find available space
	ld	b,h                         ; 043881 || 	ld	b,h                         ; 04382B || 043881 44          8972  			LD      B,H
	ld	c,l                         ; 043882 || 	ld	c,l                         ; 04382C || 043882 4D          8973  			LD      C,L
	ld	hl,$044a00                  ; 043883 || 	ld	hl,$044a00                  ; 04382D || 043883 21 00 4A 04 8974  			LD      HL,ACCS
	call	$0441fb                   ; 043887 || 	call	$044194                   ; 043831 || 043887 CD FB 41 04 8975  			CALL    OSLOAD          	; Call the OSLOAD function in patch
	call	nc,$0438c2                ; 04388B || 	call	nc,$04386c                ; 043835 || 04388B D4 C2 38 04 8976  			CALL    NC,NEWIT		; If NC then NEW
	ld	a,$00                       ; 04388F || 	ld	a,$00                       ; 043839 || 04388F 3E 00       8977  			LD      A,0
	jp	nc,$0437b6                  ; 043891 || 	jp	nc,$043760                  ; 04383B || 043891 D2 B6 37 04 8978  			JP      NC,ERROR_        	; And trigger a "No room" error, otherwise...
	call	$0438a1                   ; 043895 || 	call	$04384b                   ; 04383F || 043895 CD A1 38 04 8980  CLEAN:			CALL    SETTOP			; Set TOP sysvar
	dec	hl                         ; 043899 || 	dec	hl                         ; 043843 || 043899 2B          8981  			DEC     HL			; Write out the end of program markers
	ld	(hl),$ff                    ; 04389A || 	ld	(hl),$ff                    ; 043844 || 04389A 36 FF       8982  			LD      (HL),-1
	dec	hl                         ; 04389C || 	dec	hl                         ; 043846 || 04389C 2B          8983  			DEC     HL
	ld	(hl),$ff                    ; 04389D || 	ld	(hl),$ff                    ; 043847 || 04389D 36 FF       8984  			LD      (HL),-1
	jr	$+$2d                       ; 04389F || 	jr	$+$2d                       ; 043849 || 04389F 18 2B       8985  			JR      CLEAR			; Clear all dynamic variables and function/procedure pointers
	ld	hl,($044d14)                ; 0438A1 || 	ld	hl,($044d14)                ; 04384B || 0438A1 2A 14 4D 04 8991  SETTOP:			LD      HL,(PAGE_)		; Start at beginning of BASIC program area
	ld	bc,$000000                  ; 0438A5 || 	ld	bc,$000000                  ; 04384F || 0438A5 01 00 00 00 8992  			LD	BC, 0			; BC: 0
	ld	a,$0d                       ; 0438A9 || 	ld	a,$0d                       ; 043853 || 0438A9 3E 0D       8993  			LD      A,CR			; End of line marker
	ld	c,(hl)                      ; 0438AB || 	ld	c,(hl)                      ; 043855 || 0438AB 4E          8994  SETOP1:			LD      C,(HL)			; BC: Get first byte of program line (line length)
	inc	c                          ; 0438AC || 	inc	c                          ; 043856 || 0438AC 0C          8995  			INC     C			; Check for zero
	dec	c                          ; 0438AD || 	dec	c                          ; 043857 || 0438AD 0D          8996  			DEC     C
	jr	z,$+$0c                     ; 0438AE || 	jr	z,$+$0c                     ; 043858 || 0438AE 28 0A       8997  			JR      Z,SETOP2		; If it is zero, we've reached the end
	add	hl,bc                      ; 0438B0 || 	add	hl,bc                      ; 04385A || 0438B0 09          8998  			ADD     HL,BC			; Skip to next line
	dec	hl                         ; 0438B1 || 	dec	hl                         ; 04385B || 0438B1 2B          8999  			DEC     HL			; Check end of previous line
	cp	(hl)                        ; 0438B2 || 	cp	(hl)                        ; 04385C || 0438B2 BE          9000  			CP      (HL)
	inc	hl                         ; 0438B3 || 	inc	hl                         ; 04385D || 0438B3 23          9001  			INC     HL
	jr	z,$-$09                     ; 0438B4 || 	jr	z,$-$09                     ; 04385E || 0438B4 28 F5       9002  			JR      Z,SETOP1		; If CR then loop
	jp	$04374e                     ; 0438B6 || 	jp	$0436f8                     ; 043860 || 0438B6 C3 4E 37 04 9003  			JP      BAD			; If anything else, then something has gone wrong - trip a Bad Program error
	inc	hl                         ; 0438BA || 	inc	hl                         ; 043864 || 0438BA 23          9005  SETOP2:			INC     HL             		; Skip the 3 byte end of program marker (&00, &FF, &FF)
	inc	hl                         ; 0438BB || 	inc	hl                         ; 043865 || 0438BB 23          9006  			INC     HL			; NB: Called from NEWIT
	inc	hl                         ; 0438BC || 	inc	hl                         ; 043866 || 0438BC 23          9007  			INC     HL
	ld	($044d17),hl                ; 0438BD || 	ld	($044d17),hl                ; 043867 || 0438BD 22 17 4D 04 9008  			LD      (TOP),HL		; Store in TOP sysvar
	ret                            ; 0438C1 || 	ret                            ; 04386B || 0438C1 C9          9009  			RET
	ld	hl,($044d14)                ; 0438C2 || 	ld	hl,($044d14)                ; 04386C || 0438C2 2A 14 4D 04 9018  NEWIT:			LD      HL,(PAGE_)		; HL: First byte of BASIC program area
	ld	(hl),$00                    ; 0438C6 || 	ld	(hl),$00                    ; 043870 || 0438C6 36 00       9019  			LD      (HL),0			; Stick a 0 in there
	call	$0438ba                   ; 0438C8 || 	call	$043864                   ; 043872 || 0438C8 CD BA 38 04 9020  			CALL    SETOP2			; Skip three bytes to get to end of empty BASIC program area and set TOP sysvar
	push	hl                        ; 0438CC || 	push	hl                        ; 043876 || 0438CC E5          9022  CLEAR:			PUSH    HL			; Stack the BASIC program pointer
	ld	hl,($044d17)                ; 0438CD || 	ld	hl,($044d17)                ; 043877 || 0438CD 2A 17 4D 04 9023  			LD      HL,(TOP)		; Get the TOP sysvar - first available byte after BASIC
	ld	($044d1a),hl                ; 0438D1 || 	ld	($044d1a),hl                ; 04387B || 0438D1 22 1A 4D 04 9024  			LD      (LOMEM),HL		; Set the LOMEM sysvar
	ld	($044d1d),hl                ; 0438D5 || 	ld	($044d1d),hl                ; 04387F || 0438D5 22 1D 4D 04 9025  			LD      (FREE),HL		; And the FREE sysvar with that value
	ld	hl,$044c6c                  ; 0438D9 || 	ld	hl,$044c6c                  ; 043883 || 0438D9 21 6C 4C 04 9026  			LD      HL,DYNVAR		; Get the pointer to the dynamic variable pointers buffer in RAM
	push	bc                        ; 0438DD || 	push	bc                        ; 043887 || 0438DD C5          9027  			PUSH    BC
	ld	b,$a8                       ; 0438DE || 	ld	b,$a8                       ; 043888 || 0438DE 06 A8       9029  			LD      B,54+2*3		; ez80asm doesn't do () in expressions
	ld	(hl),$00                    ; 0438E0 || 	ld	(hl),$00                    ; 04388A || 0438E0 36 00       9030  CLEAR1:			LD      (HL),0			; Clear the dynamic variable pointers
	inc	hl                         ; 0438E2 || 	inc	hl                         ; 04388C || 0438E2 23          9031  			INC     HL
	djnz	$-$03                     ; 0438E3 || 	djnz	$-$03                     ; 04388D || 0438E3 10 FB       9032  			DJNZ    CLEAR1
	pop	bc                         ; 0438E5 || 	pop	bc                         ; 04388F || 0438E5 C1          9033  			POP     BC
	pop	hl                         ; 0438E6 || 	pop	hl                         ; 043890 || 0438E6 E1          9034  			POP     HL			; Restore the BASIC program pointer
	ret                            ; 0438E7 || 	ret                            ; 043891 || 0438E7 C9          9035  			RET
	push	hl                        ; 0438E8 || 	push	hl                        ; 043892 || 0438E8 E5          9045  LISTIT:			PUSH    HL			; Stack the address of the line
	ex	de,hl                       ; 0438E9 || 	ex	de,hl                       ; 043893 || 0438E9 EB          9046  			EX      DE,HL			; HL: Line number
	push	bc                        ; 0438EA || 	push	bc                        ; 043894 || 0438EA C5          9047  			PUSH    BC
	call	$043a51                   ; 0438EB || 	call	$0439fb                   ; 043895 || 0438EB CD 51 3A 04 9048  			CALL    PBCD			; Print the line number
	pop	bc                         ; 0438EF || 	pop	bc                         ; 043899 || 0438EF C1          9049  			POP     BC
	pop	hl                         ; 0438F0 || 	pop	hl                         ; 04389A || 0438F0 E1          9050  			POP     HL			; HL: Address of the first token/character
	ld	a,(hl)                      ; 0438F1 || 	ld	a,(hl)                      ; 04389B || 0438F1 7E          9051  			LD      A,(HL)			; Fetch the token
	cp	$ed                         ; 0438F2 || 	cp	$ed                         ; 04389C || 0438F2 FE ED       9052  			CP      NEXT			; Is it NEXT...
	call	z,$04397e                 ; 0438F4 || 	call	z,$043928                 ; 04389E || 0438F4 CC 7E 39 04 9053  			CALL    Z,INDENT		; Yes, so indent in
	cp	$fd                         ; 0438F8 || 	cp	$fd                         ; 0438A2 || 0438F8 FE FD       9054  			CP      UNTIL			; Or is it UNTIL...
	call	z,$04397e                 ; 0438FA || 	call	z,$043928                 ; 0438A4 || 0438FA CC 7E 39 04 9055  			CALL    Z,INDENT		; Yes, so indent in
	exx                            ; 0438FE || 	exx                            ; 0438A8 || 0438FE D9          9056  			EXX
	ld	a,$20                       ; 0438FF || 	ld	a,$20                       ; 0438A9 || 0438FF 3E 20       9057  			LD      A,' '
	bit	0,(ix)                     ; 043901 || 	bit	0,(ix)                     ; 0438AB || 043901 DD CB 00 46 9058  			BIT     0,(IX)			; If BIT 0 of LISTON is set
	call	nz,$0439a5                ; 043905 || 	call	nz,$04394f                ; 0438AF || 043905 C4 A5 39 04 9059  			CALL    NZ,OUTCHR		; Then print a space after the line number
	ld	a,b                         ; 043909 || 	ld	a,b                         ; 0438B3 || 043909 78          9060  			LD      A,B			; Fetch the FOR/NEXT indent level
	add	a,a                        ; 04390A || 	add	a,a                        ; 0438B4 || 04390A 87          9061  			ADD     A,A			; Multiply by 2
	bit	1,(ix)                     ; 04390B || 	bit	1,(ix)                     ; 0438B5 || 04390B DD CB 00 4E 9062  			BIT     1,(IX)			; If BIT 1 of LISTON is set
	call	nz,$041821                ; 04390F || 	call	nz,$0417ef                ; 0438B9 || 04390F C4 21 18 04 9063  			CALL    NZ,FILL			; Then print the FOR/NEXT indent
	ld	a,c                         ; 043913 || 	ld	a,c                         ; 0438BD || 043913 79          9064  			LD      A,C			; Fetch the REPEAT/UNTIL indent level
	add	a,a                        ; 043914 || 	add	a,a                        ; 0438BE || 043914 87          9065  			ADD     A,A			; Multiply by 2
	bit	2,(ix)                     ; 043915 || 	bit	2,(ix)                     ; 0438BF || 043915 DD CB 00 56 9066  			BIT     2,(IX)			; If BIT 2 of LISTON is set
	call	nz,$041821                ; 043919 || 	call	nz,$0417ef                ; 0438C3 || 043919 C4 21 18 04 9067  			CALL    NZ,FILL			; Then print the REPEAT/UNTIL indent
	exx                            ; 04391D || 	exx                            ; 0438C7 || 04391D D9          9068  			EXX
	ld	a,(hl)                      ; 04391E || 	ld	a,(hl)                      ; 0438C8 || 04391E 7E          9069  			LD      A,(HL)			; Fetch the token
	cp	$e3                         ; 04391F || 	cp	$e3                         ; 0438C9 || 04391F FE E3       9070  			CP      FOR			; Is it FOR?
	call	z,$04397e                 ; 043921 || 	call	z,$043928                 ; 0438CB || 043921 CC 7E 39 04 9071  			CALL    Z,INDENT		; Yes, so indent
	cp	$f5                         ; 043925 || 	cp	$f5                         ; 0438CF || 043925 FE F5       9072  			CP      REPEAT			; Is it REPEAT?
	call	z,$04397e                 ; 043927 || 	call	z,$043928                 ; 0438D1 || 043927 CC 7E 39 04 9073  			CALL    Z,INDENT		; Yes, so indent
	ld	e,$00                       ; 04392B || 	ld	e,$00                       ; 0438D5 || 04392B 1E 00       9074  			LD      E,0			; E: The quote counter - reset to 0
	ld	a,(hl)                      ; 04392D || 	ld	a,(hl)                      ; 0438D7 || 04392D 7E          9075  LIST8:			LD      A,(HL)			; Fetch a character / token byte
	inc	hl                         ; 04392E || 	inc	hl                         ; 0438D8 || 04392E 23          9076  			INC     HL
	cp	$0d                         ; 04392F || 	cp	$0d                         ; 0438D9 || 04392F FE 0D       9077  			CP      CR			; Is it end of line?
	jr	z,$+$0d                     ; 043931 || 	jr	z,$+$0d                     ; 0438DB || 043931 28 0B       9078  			JR      Z,LISTE			; Yes, so finish (DB: Used to jump to CRLF, modified for *EDIT)
	cp	$22                         ; 043933 || 	cp	$22                         ; 0438DD || 043933 FE 22       9079  			CP      34			; Is it a quote character?
	jr	nz,$+$03                    ; 043935 || 	jr	nz,$+$03                    ; 0438DF || 043935 20 01       9080  			JR      NZ,LIST7		; No, so skip to next bit
	inc	e                          ; 043937 || 	inc	e                          ; 0438E1 || 043937 1C          9081  			INC     E			; Otherwise increment quote counter
	call	$04396d                   ; 043938 || 	call	$043917                   ; 0438E2 || 043938 CD 6D 39 04 9082  LIST7:			CALL    LOUT			; Output the character / token
	jr	$-$0f                       ; 04393C || 	jr	$-$0f                       ; 0438E6 || 04393C 18 EF       9083  			JR      LIST8			; And repeat
	bit	3,(ix)                     ; 04393E || 	bit	3,(ix)                     ; 0438E8 || 04393E DD CB 00 5E 9088  LISTE:			BIT 	3,(IX)			; Are we printing to buffer?
	jr	z,$+$5b                     ; 043942 || 	jr	z,$+$5b                     ; 0438EC || 043942 28 59       9089  			JR	Z, CRLF			; Yes, so print a CRLF
	xor	a                          ; 043944 || 	xor	a                          ; 0438EE || 043944 AF          9090  			XOR	A			; Otherwise print a NUL (0)
	jp	$043f56                     ; 043945 || 	jp	$043f00                     ; 0438EF || 043945 C3 56 3F 04 9091  			JP	OSWRCH
	push	hl                        ; 043949 || 	push	hl                        ; 0438F3 || 043949 E5          9095  PRLINO:			PUSH    HL			; Swap HL and IY
	pop	iy                         ; 04394A || 	pop	iy                         ; 0438F4 || 04394A FD E1       9096  			POP     IY			; IY: Pointer to the line number
	push	bc                        ; 04394C || 	push	bc                        ; 0438F6 || 04394C C5          9097  			PUSH    BC
	call	$0408eb                   ; 04394D || 	call	$0408e6                   ; 0438F7 || 04394D CD EB 08 04 9098  			CALL    DECODE			; Decode
	pop	bc                         ; 043951 || 	pop	bc                         ; 0438FB || 043951 C1          9099  			POP     BC
	exx                            ; 043952 || 	exx                            ; 0438FC || 043952 D9          9100  			EXX
	push	bc                        ; 043953 || 	push	bc                        ; 0438FD || 043953 C5          9101  			PUSH    BC
	call	$043a4d                   ; 043954 || 	call	$0439f7                   ; 0438FE || 043954 CD 4D 3A 04 9102  			CALL    PBCDL			; Output the line number
	pop	bc                         ; 043958 || 	pop	bc                         ; 043902 || 043958 C1          9103  			POP     BC
	exx                            ; 043959 || 	exx                            ; 043903 || 043959 D9          9104  			EXX
	push	iy                        ; 04395A || 	push	iy                        ; 043904 || 04395A FD E5       9105  			PUSH    IY			; Swap HL and IY
	pop	hl                         ; 04395C || 	pop	hl                         ; 043906 || 04395C E1          9106  			POP     HL			; HL: Pointer to the next character in the line
	ret                            ; 04395D || 	ret                            ; 043907 || 04395D C9          9107  			RET
	call	$0439c2                   ; 04395E || 	call	$04396c                   ; 043908 || 04395E CD C2 39 04 9111  PRREM:			CALL	OUT_			; Output the REM token
	ld	a,(hl)                      ; 043962 || 	ld	a,(hl)                      ; 04390C || 043962 7E          9112  @@:			LD	A, (HL)			; Fetch the character
	cp	$0d                         ; 043963 || 	cp	$0d                         ; 04390D || 043963 FE 0D       9113  			CP	CR			; If it is end of line, then
	ret	z                          ; 043965 || 	ret	z                          ; 04390F || 043965 C8          9114  			RET	Z			; we have finished
	call	$0439a5                   ; 043966 || 	call	$04394f                   ; 043910 || 043966 CD A5 39 04 9115  			CALL	OUTCHR			; Ouput the character
	inc	hl                         ; 04396A || 	inc	hl                         ; 043914 || 04396A 23          9116  			INC	HL
	jr	$-$09                       ; 04396B || 	jr	$-$09                       ; 043915 || 04396B 18 F5       9117  			JR	@B			; And loop
	bit	0,e                        ; 04396D || 	bit	0,e                        ; 043917 || 04396D CB 43       9121  LOUT:			BIT     0,E			; If the quote counter is odd (bit 1 set) then
	jr	nz,$+$36                    ; 04396F || 	jr	nz,$+$36                    ; 043919 || 04396F 20 34       9122  			JR      NZ,OUTCHR		; don't tokenise, just output the character
	cp	$f4                         ; 043971 || 	cp	$f4                         ; 04391B || 043971 FE F4       9123  			CP	REM			; DB: Is it REM
	jr	z,$-$15                     ; 043973 || 	jr	z,$-$15                     ; 04391D || 043973 28 E9       9124  			JR	Z, PRREM		; DB: Yes so jump to the special case for REM
	cp	$8d                         ; 043975 || 	cp	$8d                         ; 04391F || 043975 FE 8D       9125  			CP      LINO			; Is it a line number (following GOTO/GOSUB etc)?
	jr	z,$-$2e                     ; 043977 || 	jr	z,$-$2e                     ; 043921 || 043977 28 D0       9126  			JR      Z,PRLINO		; Yes, so decode and print the line number
	call	$0439c2                   ; 043979 || 	call	$04396c                   ; 043923 || 043979 CD C2 39 04 9127  			CALL    OUT_			; Output a character / keyword
	ld	a,(hl)                      ; 04397D || 	ld	a,(hl)                      ; 043927 || 04397D 7E          9128  			LD      A,(HL)			; Fetch the next character
	exx                            ; 04397E || 	exx                            ; 043928 || 04397E D9          9134  INDENT:			EXX
	cp	$e3                         ; 04397F || 	cp	$e3                         ; 043929 || 04397F FE E3       9135  			CP      FOR			; If the token is FOR
	jr	z,$+$0b                     ; 043981 || 	jr	z,$+$0b                     ; 04392B || 043981 28 09       9136  			JR      Z,IND1			; Then INC B
	cp	$ed                         ; 043983 || 	cp	$ed                         ; 04392D || 043983 FE ED       9137  			CP      NEXT			; If it is NEXT
	jr	nz,$+$08                    ; 043985 || 	jr	nz,$+$08                    ; 04392F || 043985 20 06       9138  			JR      NZ,IND2_		; Then...
	dec	b                          ; 043987 || 	dec	b                          ; 043931 || 043987 05          9139  			DEC     B			; DEC B
	jp	p,$04398d                   ; 043988 || 	jp	p,$043937                   ; 043932 || 043988 F2 8D 39 04 9140  			JP      P,IND2_			; If we have gone below 0 then
	inc	b                          ; 04398C || 	inc	b                          ; 043936 || 04398C 04          9141  IND1:			INC     B			; Increment back to 0
	cp	$f5                         ; 04398D || 	cp	$f5                         ; 043937 || 04398D FE F5       9143  IND2_:			CP      REPEAT			; If the token is REPEAT
	jr	z,$+$0b                     ; 04398F || 	jr	z,$+$0b                     ; 043939 || 04398F 28 09       9144  			JR      Z,IND3			; Then INC C
	cp	$fd                         ; 043991 || 	cp	$fd                         ; 04393B || 043991 FE FD       9145  			CP      UNTIL			; If it is UNTIL
	jr	nz,$+$08                    ; 043993 || 	jr	nz,$+$08                    ; 04393D || 043993 20 06       9146  			JR      NZ,IND4			; Then...
	dec	c                          ; 043995 || 	dec	c                          ; 04393F || 043995 0D          9147  			DEC     C			; DEC C
	jp	p,$04399b                   ; 043996 || 	jp	p,$043945                   ; 043940 || 043996 F2 9B 39 04 9148  			JP      P,IND4			; If we have gone below 0 then
	inc	c                          ; 04399A || 	inc	c                          ; 043944 || 04399A 0C          9149  IND3:			INC     C			; Incremet back to 0
	exx                            ; 04399B || 	exx                            ; 043945 || 04399B D9          9150  IND4:			EXX
	ret                            ; 04399C || 	ret                            ; 043946 || 04399C C9          9151  			RET
	ld	a,$0d                       ; 04399D || 	ld	a,$0d                       ; 043947 || 04399D 3E 0D       9159  CRLF:			LD      A,CR			; Output CR
	call	$0439a5                   ; 04399F || 	call	$04394f                   ; 043949 || 04399F CD A5 39 04 9160  			CALL    OUTCHR
	ld	a,$0a                       ; 0439A3 || 	ld	a,$0a                       ; 04394D || 0439A3 3E 0A       9161  			LD      A,LF			; Output LF
	call	$043f56                   ; 0439A5 || 	call	$043f00                   ; 04394F || 0439A5 CD 56 3F 04 9163  OUTCHR:			CALL    OSWRCH			; Output the character in A
	sub	$0d                        ; 0439A9 || 	sub	$0d                        ; 043953 || 0439A9 D6 0D       9164  			SUB     CR			; Check for CR
	jr	z,$+$08                     ; 0439AB || 	jr	z,$+$08                     ; 043955 || 0439AB 28 06       9165  			JR      Z,CARRET		; If it is CR then A will be 0, this will clear the count
	ret	c                          ; 0439AD || 	ret	c                          ; 043957 || 0439AD D8          9166  			RET     C              		; If it is less than CR, it is non-printing, so don't increment the count
	ld	a,($044d3d)                 ; 0439AE || 	ld	a,($044d3d)                 ; 043958 || 0439AE 3A 3D 4D 04 9167  			LD      A,(COUNT)		; Increment the count
	inc	a                          ; 0439B2 || 	inc	a                          ; 04395C || 0439B2 3C          9168  			INC     A
	ld	($044d3d),a                 ; 0439B3 || 	ld	($044d3d),a                 ; 04395D || 0439B3 32 3D 4D 04 9170  CARRET:			LD      (COUNT),A		; Store the new count value
	ret	z                          ; 0439B7 || 	ret	z                          ; 043961 || 0439B7 C8          9171  			RET     Z			; Return if the count has wrapped to 0
	push	hl                        ; 0439B8 || 	push	hl                        ; 043962 || 0439B8 E5          9172  			PUSH    HL			; Now check if count = print width
	ld	hl,($044d3e)                ; 0439B9 || 	ld	hl,($044d3e)                ; 043963 || 0439B9 2A 3E 4D 04 9173  			LD      HL,(WIDTH)		; Get the print width; it's a byte value, so
	cp	l                           ; 0439BD || 	cp	l                           ; 043967 || 0439BD BD          9174  			CP      L			; L is the width. Compare it with count.
	pop	hl                         ; 0439BE || 	pop	hl                         ; 043968 || 0439BE E1          9175  			POP     HL
	ret	nz                         ; 0439BF || 	ret	nz                         ; 043969 || 0439BF C0          9176  			RET     NZ			; If we've not hit print width, then just return
	jr	$-$23                       ; 0439C0 || 	jr	$-$23                       ; 04396A || 0439C0 18 DB       9177  			JR      CRLF			; Otherwise output CRLF
	cp	$8a                         ; 0439C2 || 	cp	$8a                         ; 04396C || 0439C2 FE 8A       9184  OUT_:			CP      138			; Neat trick to do condition: If A >= 10 or < 128 then PE flag is set
	jp	pe,$0439a5                  ; 0439C4 || 	jp	pe,$04394f                  ; 04396E || 0439C4 EA A5 39 04 9185  			JP      PE,OUTCHR		; If so, then it's a character, so just output it
	push	bc                        ; 0439C8 || 	push	bc                        ; 043972 || 0439C8 C5          9201  			PUSH    BC			; Preserve BC and HL
	push	hl                        ; 0439C9 || 	push	hl                        ; 043973 || 0439C9 E5          9202  			PUSH    HL
	ld	hl,$0431be                  ; 0439CA || 	ld	hl,$043168                  ; 043974 || 0439CA 21 BE 31 04 9203  			LD      HL,KEYWDS		; The list of tokens and keywords
	ld	bc,$0002df                  ; 0439CE || 	ld	bc,$0002df                  ; 043978 || 0439CE 01 DF 02 00 9204  			LD      BC,KEYWDL		; The length of the keyword list
	cpir                           ; 0439D2 || 	cpir                           ; 04397C || 0439D2 ED B1       9205  			CPIR				; We can just do a straight CPIR as the token characters are unique in the list
	ld	a,(hl)                      ; 0439D4 || 	ld	a,(hl)                      ; 04397E || 0439D4 7E          9207  TOKEN1:			LD      A,(HL)			; Fetch the character
	inc	hl                         ; 0439D5 || 	inc	hl                         ; 04397F || 0439D5 23          9208  			INC     HL			; Increment to the next byte in the token table
	cp	$8a                         ; 0439D6 || 	cp	$8a                         ; 043980 || 0439D6 FE 8A       9209  			CP      138			; If A >= 10 or < 128, i.e. we've not hit the token code for the next token
	push	af                        ; 0439D8 || 	push	af                        ; 043982 || 0439D8 F5          9210  			PUSH    AF			; Then...
	call	pe,$0439a5                ; 0439D9 || 	call	pe,$04394f                ; 043983 || 0439D9 EC A5 39 04 9211  			CALL    PE,OUTCHR		; Output the character...
	pop	af                         ; 0439DD || 	pop	af                         ; 043987 || 0439DD F1          9212  			POP     AF			;
	jp	pe,$0439d4                  ; 0439DE || 	jp	pe,$04397e                  ; 043988 || 0439DE EA D4 39 04 9213  			JP      PE,TOKEN1		; And loop to the next character
	pop	hl                         ; 0439E2 || 	pop	hl                         ; 04398C || 0439E2 E1          9214  			POP     HL			; Done, so tidy up the stack and exit
	pop	bc                         ; 0439E3 || 	pop	bc                         ; 04398D || 0439E3 C1          9215  			POP     BC
	ret                            ; 0439E4 || 	ret                            ; 04398E || 0439E4 C9          9216  			RET
	ex	de,hl                       ; 0439E5 || 	ex	de,hl                       ; 04398F || 0439E5 EB          9225  FINDL:			EX      DE,HL			; DE: Line number (binary)
	ld	hl,($044d14)                ; 0439E6 || 	ld	hl,($044d14)                ; 043990 || 0439E6 2A 14 4D 04 9226  			LD      HL,(PAGE_)		; HL: Top of BASIC program area
	xor	a                          ; 0439EA || 	xor	a                          ; 043994 || 0439EA AF          9227  			XOR     A               	;  A: 0
	cp	(hl)                        ; 0439EB || 	cp	(hl)                        ; 043995 || 0439EB BE          9228  			CP      (HL)			; Check for end of program marker
	inc	a                          ; 0439EC || 	inc	a                          ; 043996 || 0439EC 3C          9229  			INC     A			;  A: 1
	ret	nc                         ; 0439ED || 	ret	nc                         ; 043997 || 0439ED D0          9230  			RET     NC			; Return with 1 if 0
	xor	a                          ; 0439EE || 	xor	a                          ; 043998 || 0439EE AF          9231  			XOR     A               	; Clear the carry flag
	ld	bc,$000000                  ; 0439EF || 	ld	bc,$000000                  ; 043999 || 0439EF 01 00 00 00 9233  			LD	BC, 0			; BC: 0
	ld	c,(hl)                      ; 0439F3 || 	ld	c,(hl)                      ; 04399D || 0439F3 4E          9235  FINDL1:			LD      C,(HL)			;  C: The line length
	push	hl                        ; 0439F4 || 	push	hl                        ; 04399E || 0439F4 E5          9236  			PUSH    HL			; Stack the current program counter
	inc	hl                         ; 0439F5 || 	inc	hl                         ; 04399F || 0439F5 23          9237  			INC     HL			; Skip to the line number bytes
	ld	a,(hl)                      ; 0439F6 || 	ld	a,(hl)                      ; 0439A0 || 0439F6 7E          9238  			LD      A,(HL)			; Fetch the line number (in binary) from the BASIC line in HL
	inc	hl                         ; 0439F7 || 	inc	hl                         ; 0439A1 || 0439F7 23          9239  			INC     HL
	ld	h,(hl)                      ; 0439F8 || 	ld	h,(hl)                      ; 0439A2 || 0439F8 66          9240  			LD      H,(HL)
	ld	l,a                         ; 0439F9 || 	ld	l,a                         ; 0439A3 || 0439F9 6F          9241  			LD      L,A
	sbc.sil	hl,de                  ; 0439FA || 	sbc.sil	hl,de                  ; 0439A4 || 0439FA 52 ED 52    9242  			SBC.S   HL,DE			; Compare with the line number we're searching for
	pop	hl                         ; 0439FD || 	pop	hl                         ; 0439A7 || 0439FD E1          9243  			POP     HL			; Get the current program counter
	ret	nc                         ; 0439FE || 	ret	nc                         ; 0439A8 || 0439FE D0          9244  			RET     NC              	; Then return if found or past (Z flag will be set if line number matches)
	add	hl,bc                      ; 0439FF || 	add	hl,bc                      ; 0439A9 || 0439FF 09          9245  			ADD     HL,BC			; Skip to the next line (B was set to 0 before the loop was entered)
	jp	$0439f3                     ; 043A00 || 	jp	$04399d                     ; 0439AA || 043A00 C3 F3 39 04 9246  			JP      FINDL1			; And loop
	ld	bc,$000000                  ; 043A04 || 	ld	bc,$000000                  ; 0439AE || 043A04 01 00 00 00 9254  SETLIN:			LD	BC, 0			; Zero BC for later
	ld	de,($044d35)                ; 043A08 || 	ld	de,($044d35)                ; 0439B2 || 043A08 ED 5B 35 4D 9256  			LD      DE, (ERRLIN)		; DE: Address of line
	ld	hl,($044d14)                ; 043A0D || 	ld	hl,($044d14)                ; 0439B7 || 043A0D 2A 14 4D 04 9257  			LD      HL, (PAGE_)		; HL: Start of user program area
	or	a                           ; 043A11 || 	or	a                           ; 0439BB || 043A11 B7          9258  			OR      A			; Do a 24 bit compare without destroying HL
	sbc	hl,de                      ; 043A12 || 	sbc	hl,de                      ; 0439BC || 043A12 ED 52       9259  			SBC     HL, DE			;  Z: DE = HL, NC: DE <= HL
	add	hl,de                      ; 043A14 || 	add	hl,de                      ; 0439BE || 043A14 19          9260  			ADD     HL, DE			;  C: DE > HL
	jr	nc,$+$1d                    ; 043A15 || 	jr	nc,$+$1d                    ; 0439BF || 043A15 30 1B       9261  			JR      NC, SET3		; So skip, as the address is less than or equal to the top of program area
	ld	c,(hl)                      ; 043A17 || 	ld	c,(hl)                      ; 0439C1 || 043A17 4E          9263  SET1:			LD      C, (HL)			; Get the length of the line; zero indicates the end of the BASIC program
	inc	c                          ; 043A18 || 	inc	c                          ; 0439C2 || 043A18 0C          9264  			INC     C			; This is a way to check for zero without using the accumulator
	dec	c                          ; 043A19 || 	dec	c                          ; 0439C3 || 043A19 0D          9265  			DEC     C			; If it is zero, then...
	jr	z,$+$18                     ; 043A1A || 	jr	z,$+$18                     ; 0439C4 || 043A1A 28 16       9266  			JR      Z, SET3			; We've reached the end of the current BASIC program, not found the line
	add	hl,bc                      ; 043A1C || 	add	hl,bc                      ; 0439C6 || 043A1C 09          9267  			ADD     HL, BC			; Skip to the next line (we set B to 0 at the top of this subroutine)
	sbc	hl,de                      ; 043A1D || 	sbc	hl,de                      ; 0439C7 || 043A1D ED 52       9268  			SBC     HL, DE			; Do a 24-bit compare; the previous ADD will have cleared the carry flag
	add	hl,de                      ; 043A1F || 	add	hl,de                      ; 0439C9 || 043A1F 19          9269  			ADD     HL, DE
	jr	c,$-$09                     ; 043A20 || 	jr	c,$-$09                     ; 0439CA || 043A20 38 F5       9270  			JR      C, SET1			; Loop whilst DE (the address to search for) is > HL (the current line)
	sbc	hl,bc                      ; 043A22 || 	sbc	hl,bc                      ; 0439CC || 043A22 ED 42       9271  			SBC     HL, BC			; We've found it, so back up to the beginning of the line
	inc	hl                         ; 043A24 || 	inc	hl                         ; 0439CE || 043A24 23          9272  			INC     HL			; Skip the length counter
	ld	de,$000000                  ; 043A25 || 	ld	de,$000000                  ; 0439CF || 043A25 11 00 00 00 9273  			LD	DE, 0			; Zero DE
	ld	e,(hl)                      ; 043A29 || 	ld	e,(hl)                      ; 0439D3 || 043A29 5E          9274  			LD      E, (HL)          	; Fetch the line number
	inc	hl                         ; 043A2A || 	inc	hl                         ; 0439D4 || 043A2A 23          9275  			INC     HL
	ld	d,(hl)                      ; 043A2B || 	ld	d,(hl)                      ; 0439D5 || 043A2B 56          9276  			LD      D, (HL)
	ex	de,hl                       ; 043A2C || 	ex	de,hl                       ; 0439D6 || 043A2C EB          9277  			EX      DE, HL			; HL: The line number
	ld	($044d23),hl                ; 043A2D || 	ld	($044d23),hl                ; 0439D7 || 043A2D 22 23 4D 04 9278  SET2:			LD      (LINENO), HL		; Store in the variable LINENO
	ret                            ; 043A31 || 	ret                            ; 0439DB || 043A31 C9          9279  			RET
	ld	hl,$000000                  ; 043A32 || 	ld	hl,$000000                  ; 0439DC || 043A32 21 00 00 00 9281  SET3:			LD      HL, 0			; We've not found the line at this point so
	jr	$-$09                       ; 043A36 || 	jr	$-$09                       ; 0439E0 || 043A36 18 F5       9282  			JR      SET2			; Set LINENO to 0
	ld	hl,($044d23)                ; 043A38 || 	ld	hl,($044d23)                ; 0439E2 || 043A38 2A 23 4D 04 9289  SAYLN:			LD      HL,(LINENO)		; Get the LINENO sysvar
	ld	a,h                         ; 043A3C || 	ld	a,h                         ; 0439E6 || 043A3C 7C          9290  			LD      A,H			; If it is zero then
	or	l                           ; 043A3D || 	or	l                           ; 0439E7 || 043A3D B5          9291  			OR      L
	ret	z                          ; 043A3E || 	ret	z                          ; 0439E8 || 043A3E C8          9292  			RET     Z			; Don't need to do anything; return with F:C set to 0
	call	$043de6                   ; 043A3F || 	call	$043d90                   ; 0439E9 || 043A3F CD E6 3D 04 9293  			CALL    TELL			; Output the error message
	jr	nz,$+$63                    ; 043A43 || 	jr	nz,$+$63                    ; 0439ED || 043A43 20 61 74 20 9294  			DB    	" at line ", 0
	ld	(hl),h                      ; 043A45 || 	ld	(hl),h                      ; 0439EF
	jr	nz,$+$6e                    ; 043A46 || 	jr	nz,$+$6e                    ; 0439F0
	ld	l,c                         ; 043A48 || 	ld	l,c                         ; 0439F2
	ld	l,(hl)                      ; 043A49 || 	ld	l,(hl)                      ; 0439F3
	ld	h,l                         ; 043A4A || 	ld	h,l                         ; 0439F4
	jr	nz,$+$02                    ; 043A4B || 	jr	nz,$+$02                    ; 0439F5
	ld	c,$00                       ; 043A4D || 	ld	c,$00                       ; 0439F7 || 043A4D 0E 00       9295  PBCDL:			LD      C,0			; C: Leading character (NUL)
	jr	$+$04                       ; 043A4F || 	jr	$+$04                       ; 0439F9 || 043A4F 18 02       9296  			JR      PBCD0			; Output the line number; return with F:C set to 1
	ld	c,$20                       ; 043A51 || 	ld	c,$20                       ; 0439FB || 043A51 0E 20       9303  PBCD:			LD      C,' '			; C: Leading character (" ")
	ld	b,$05                       ; 043A53 || 	ld	b,$05                       ; 0439FD || 043A53 06 05       9304  PBCD0:			LD      B,5			; Number of digits in result
	ld	de,$002710                  ; 043A55 || 	ld	de,$002710                  ; 0439FF || 043A55 11 10 27 00 9305  			LD      DE,10000		; Start off with the 10,000 column
	xor	a                          ; 043A59 || 	xor	a                          ; 043A03 || 043A59 AF          9306  PBCD1:			XOR     A			; Counter
	sbc	hl,de                      ; 043A5A || 	sbc	hl,de                      ; 043A04 || 043A5A ED 52       9307  PBCD2:			SBC     HL,DE			; Loop and count how many 10,000s we have
	inc	a                          ; 043A5C || 	inc	a                          ; 043A06 || 043A5C 3C          9308  			INC     A
	jr	nc,$-$03                    ; 043A5D || 	jr	nc,$-$03                    ; 043A07 || 043A5D 30 FB       9309  			JR      NC,PBCD2
	add	hl,de                      ; 043A5F || 	add	hl,de                      ; 043A09 || 043A5F 19          9310  			ADD     HL,DE			; The loop overruns by one, so adjust here
	dec	a                          ; 043A60 || 	dec	a                          ; 043A0A || 043A60 3D          9311  			DEC     A			; A: Number of 10,000s
	jr	z,$+$06                     ; 043A61 || 	jr	z,$+$06                     ; 043A0B || 043A61 28 04       9312  			JR      Z,PBCD3			; If it is 0, then skip the next bit
	set	4,c                        ; 043A63 || 	set	4,c                        ; 043A0D || 043A63 CB E1       9313  			SET     4,C			; C: Set to '0' ASCII (30h)
	set	5,c                        ; 043A65 || 	set	5,c                        ; 043A0F || 043A65 CB E9       9314  			SET     5,C
	or	c                           ; 043A67 || 	or	c                           ; 043A11 || 043A67 B1          9315  PBCD3:			OR      C			; A is then an ASCII character, or 00h if we've not processed any non-zero digits yet
	call	nz,$0439a5                ; 043A68 || 	call	nz,$04394f                ; 043A12 || 043A68 C4 A5 39 04 9316  			CALL    NZ,OUTCHR		; If it is not a leading NUL character then output it
	ld	a,b                         ; 043A6C || 	ld	a,b                         ; 043A16 || 043A6C 78          9317  			LD      A,B			; If on first transition, skip this
	cp	$05                         ; 043A6D || 	cp	$05                         ; 043A17 || 043A6D FE 05       9318  			CP      5			; TODO: Need to find out why
	jr	z,$+$08                     ; 043A6F || 	jr	z,$+$08                     ; 043A19 || 043A6F 28 06       9319  			JR      Z,PBCD4
	add	hl,hl                      ; 043A71 || 	add	hl,hl                      ; 043A1B || 043A71 29          9320  			ADD     HL,HL			; HL x  2 : We shift the number being tested left,
	ld	d,h                         ; 043A72 || 	ld	d,h                         ; 043A1C || 043A72 54          9321  			LD      D,H			;         : rather than shifting DE right
	ld	e,l                         ; 043A73 || 	ld	e,l                         ; 043A1D || 043A73 5D          9322  			LD      E,L			;         : This makes a lot of sense
	add	hl,hl                      ; 043A74 || 	add	hl,hl                      ; 043A1E || 043A74 29          9323  			ADD     HL,HL			; HL x  4
	add	hl,hl                      ; 043A75 || 	add	hl,hl                      ; 043A1F || 043A75 29          9324  			ADD     HL,HL			; HL x  8
	add	hl,de                      ; 043A76 || 	add	hl,de                      ; 043A20 || 043A76 19          9325  			ADD     HL,DE			; HL x 10
	ld	de,$0003e8                  ; 043A77 || 	ld	de,$0003e8                  ; 043A21 || 043A77 11 E8 03 00 9326  PBCD4:			LD      DE,1000			; Set the column heading to 1,000s for subsequent runs
	djnz	$-$22                     ; 043A7B || 	djnz	$-$22                     ; 043A25 || 043A7B 10 DC       9327  			DJNZ    PBCD1			; Loop until done
	scf                            ; 043A7D || 	scf                            ; 043A27 || 043A7D 37          9328  			SCF				; SCF set for SAYLN in this module
	ret                            ; 043A7E || 	ret                            ; 043A28 || 043A7E C9          9329  			RET
	call	$043c04                   ; 043A7F || 	call	$043bae                   ; 043A29 || 043A7F CD 04 3C 04 9336  PUTVAR:			CALL    CREATE			; Create the variable
	ld	a,(iy)                      ; 043A83 || 	ld	a,(iy)                      ; 043A2D || 043A83 FD 7E 00    9337  			LD      A,(IY)			; Fetch the next character
	cp	$28                         ; 043A86 || 	cp	$28                         ; 043A30 || 043A86 FE 28       9338  			CP      '('			; Check for bad use of array
	jr	nz,$+$72                    ; 043A88 || 	jr	nz,$+$72                    ; 043A32 || 043A88 20 70       9339  			JR      NZ,GETVZ        	; It's fine, so set the exit conditions
	ld	a,$0e                       ; 043A8A || 	ld	a,$0e                       ; 043A34 || 043A8A 3E 0E       9340  ARRAY:			LD      A,14            	; Otherwise Error: 'Array'
	jp	$0437b6                     ; 043A8C || 	jp	$043760                     ; 043A36 || 043A8C C3 B6 37 04 9341  ERROR3:			JP      ERROR_
	ld	a,(iy)                      ; 043A90 || 	ld	a,(iy)                      ; 043A3A || 043A90 FD 7E 00    9354  GETVAR:			LD      A,(IY)			; Get the first character
	cp	$24                         ; 043A93 || 	cp	$24                         ; 043A3D || 043A93 FE 24       9355  			CP      '$'			; Is it a string?
	jr	z,$+$6b                     ; 043A95 || 	jr	z,$+$6b                     ; 043A3F || 043A95 28 69       9356  			JR      Z,GETV4			; Yes, so branch here
	cp	$21                         ; 043A97 || 	cp	$21                         ; 043A41 || 043A97 FE 21       9357  			CP      '!'			; Is it indirection (32-bit)?
	jr	z,$+$6b                     ; 043A99 || 	jr	z,$+$6b                     ; 043A43 || 043A99 28 69       9358  			JR      Z,GETV5			; Yes, so branch here
	cp	$3f                         ; 043A9B || 	cp	$3f                         ; 043A45 || 043A9B FE 3F       9359  			CP      '?'			; Is it indirection (8-bit)?
	jr	z,$+$6b                     ; 043A9D || 	jr	z,$+$6b                     ; 043A47 || 043A9D 28 69       9360  			JR      Z,GETV6			; Yes, so branch here
	call	$043b6e                   ; 043A9F || 	call	$043b18                   ; 043A49 || 043A9F CD 6E 3B 04 9362  			CALL    LOCATE			; Locate the variable
	ret	nz                         ; 043AA3 || 	ret	nz                         ; 043A4D || 043AA3 C0          9363  			RET     NZ			; And exit here if not found
	ld	a,(iy)                      ; 043AA4 || 	ld	a,(iy)                      ; 043A4E || 043AA4 FD 7E 00    9369  			LD      A,(IY)			; Further checks
	cp	$28                         ; 043AA7 || 	cp	$28                         ; 043A51 || 043AA7 FE 28       9370  			CP      '('             	; Is it an array?
	jr	nz,$+$49                    ; 043AA9 || 	jr	nz,$+$49                    ; 043A53 || 043AA9 20 47       9371  			JR      NZ,GETVX        	; No, so exit
	push	de                        ; 043AAB || 	push	de                        ; 043A55 || 043AAB D5          9375  			PUSH    DE              	; Save the variable type (in D)
	ld	a,(hl)                      ; 043AAC || 	ld	a,(hl)                      ; 043A56 || 043AAC 7E          9376  			LD      A,(HL)          	; Fetch the number of dimensions
	or	a                           ; 043AAD || 	or	a                           ; 043A57 || 043AAD B7          9377  			OR      A
	jr	z,$-$24                     ; 043AAE || 	jr	z,$-$24                     ; 043A58 || 043AAE 28 DA       9378  			JR      Z,ARRAY			; If there are none, then Error: 'Array'
	inc	hl                         ; 043AB0 || 	inc	hl                         ; 043A5A || 043AB0 23          9379  			INC     HL			;
	ld	de,$000000                  ; 043AB1 || 	ld	de,$000000                  ; 043A5B || 043AB1 11 00 00 00 9380  			LD      DE,0            	; Accumulator
	push	af                        ; 043AB5 || 	push	af                        ; 043A5F || 043AB5 F5          9381  			PUSH    AF
	inc	iy                         ; 043AB6 || 	inc	iy                         ; 043A60 || 043AB6 FD 23       9382  			INC     IY              	; Skip "("
	jr	$+$07                       ; 043AB8 || 	jr	$+$07                       ; 043A62 || 043AB8 18 05       9383  			JR      GETV3
	push	af                        ; 043ABA || 	push	af                        ; 043A64 || 043ABA F5          9385  GETV2:			PUSH    AF
	call	$040a2a                   ; 043ABB || 	call	$040a22                   ; 043A65 || 043ABB CD 2A 0A 04 9386  			CALL    COMMA
	push	hl                        ; 043ABF || 	push	hl                        ; 043A69 || 043ABF E5          9387  GETV3:			PUSH    HL
	push	de                        ; 043AC0 || 	push	de                        ; 043A6A || 043AC0 D5          9388  			PUSH    DE
	call	$04030f                   ; 043AC1 || 	call	$04030a                   ; 043A6B || 043AC1 CD 0F 03 04 9389  			CALL    EXPRI			; Get the subscript
	exx                            ; 043AC5 || 	exx                            ; 043A6F || 043AC5 D9          9390  			EXX
	pop	de                         ; 043AC6 || 	pop	de                         ; 043A70 || 043AC6 D1          9391  			POP     DE
	ex	(sp),hl                     ; 043AC7 || 	ex	(sp),hl                     ; 043A71 || 043AC7 E3          9392  			EX      (SP),HL
	ld	c,(hl)                      ; 043AC8 || 	ld	c,(hl)                      ; 043A72 || 043AC8 4E          9393  			LD      C,(HL)
	inc	hl                         ; 043AC9 || 	inc	hl                         ; 043A73 || 043AC9 23          9394  			INC     HL
	ld	b,(hl)                      ; 043ACA || 	ld	b,(hl)                      ; 043A74 || 043ACA 46          9395  			LD      B,(HL)
	inc	hl                         ; 043ACB || 	inc	hl                         ; 043A75 || 043ACB 23          9396  			INC     HL
	ex	(sp),hl                     ; 043ACC || 	ex	(sp),hl                     ; 043A76 || 043ACC E3          9397  			EX      (SP),HL
	ex	de,hl                       ; 043ACD || 	ex	de,hl                       ; 043A77 || 043ACD EB          9398  			EX      DE,HL
	push	de                        ; 043ACE || 	push	de                        ; 043A78 || 043ACE D5          9399  			PUSH    DE
	call	$0418a4                   ; 043ACF || 	call	$041872                   ; 043A79 || 043ACF CD A4 18 04 9400  			CALL    MUL16			; HL=HL*BC
	pop	de                         ; 043AD3 || 	pop	de                         ; 043A7D || 043AD3 D1          9401  			POP     DE
	add	hl,de                      ; 043AD4 || 	add	hl,de                      ; 043A7E || 043AD4 19          9402  			ADD     HL,DE
	ex	de,hl                       ; 043AD5 || 	ex	de,hl                       ; 043A7F || 043AD5 EB          9403  			EX      DE,HL
	or	a                           ; 043AD6 || 	or	a                           ; 043A80 || 043AD6 B7          9404  			OR      A
	sbc	hl,bc                      ; 043AD7 || 	sbc	hl,bc                      ; 043A81 || 043AD7 ED 42       9405  			SBC     HL,BC
	ld	a,$0f                       ; 043AD9 || 	ld	a,$0f                       ; 043A83 || 043AD9 3E 0F       9406  			LD      A,15
	jr	nc,$-$4f                    ; 043ADB || 	jr	nc,$-$4f                    ; 043A85 || 043ADB 30 AF       9407  			JR      NC,ERROR3		; Throw a "Subscript" error
	pop	hl                         ; 043ADD || 	pop	hl                         ; 043A87 || 043ADD E1          9408  			POP     HL
	pop	af                         ; 043ADE || 	pop	af                         ; 043A88 || 043ADE F1          9409  			POP     AF
	dec	a                          ; 043ADF || 	dec	a                          ; 043A89 || 043ADF 3D          9410  			DEC     A               	; Dimension counter
	jr	nz,$-$26                    ; 043AE0 || 	jr	nz,$-$26                    ; 043A8A || 043AE0 20 D8       9411  			JR      NZ,GETV2
	call	$040a37                   ; 043AE2 || 	call	$040a2f                   ; 043A8C || 043AE2 CD 37 0A 04 9412  			CALL    BRAKET          	; Check for closing bracket
	pop	af                         ; 043AE6 || 	pop	af                         ; 043A90 || 043AE6 F1          9413  			POP     AF              	; Restore the type
	push	hl                        ; 043AE7 || 	push	hl                        ; 043A91 || 043AE7 E5          9414  			PUSH    HL
	call	$041897                   ; 043AE8 || 	call	$041865                   ; 043A92 || 043AE8 CD 97 18 04 9415  			CALL    X4OR5           	; DE=DE*n
	pop	hl                         ; 043AEC || 	pop	hl                         ; 043A96 || 043AEC E1          9416  			POP     HL
	add	hl,de                      ; 043AED || 	add	hl,de                      ; 043A97 || 043AED 19          9417  			ADD     HL,DE
	ld	d,a                         ; 043AEE || 	ld	d,a                         ; 043A98 || 043AEE 57          9418  			LD      D,A             	; The type
	ld	a,(iy)                      ; 043AEF || 	ld	a,(iy)                      ; 043A99 || 043AEF FD 7E 00    9419  			LD      A,(IY)
	cp	$3f                         ; 043AF2 || 	cp	$3f                         ; 043A9C || 043AF2 FE 3F       9420  GETVX:			CP      '?'
	jr	z,$+$20                     ; 043AF4 || 	jr	z,$+$20                     ; 043A9E || 043AF4 28 1E       9421  			JR      Z,GETV9
	cp	$21                         ; 043AF6 || 	cp	$21                         ; 043AA0 || 043AF6 FE 21       9422  			CP      '!'
	jr	z,$+$18                     ; 043AF8 || 	jr	z,$+$18                     ; 043AA2 || 043AF8 28 16       9423  			JR      Z,GETV8
	push	hl                        ; 043AFA || 	push	hl                        ; 043AA4 || 043AFA E5          9424  GETVZ:			PUSH    HL              	; Set exit conditions
	pop	ix                         ; 043AFB || 	pop	ix                         ; 043AA5 || 043AFB DD E1       9425  			POP     IX
	ld	a,d                         ; 043AFD || 	ld	a,d                         ; 043AA7 || 043AFD 7A          9426  			LD      A,D
	cp	a                           ; 043AFE || 	cp	a                           ; 043AA8 || 043AFE BF          9427  			CP      A
	ret                            ; 043AFF || 	ret                            ; 043AA9 || 043AFF C9          9428  			RET
	ld	a,$80                       ; 043B00 || 	ld	a,$80                       ; 043AAA || 043B00 3E 80       9432  GETV4:			LD      A,128           	; Static strings
	jr	$+$07                       ; 043B02 || 	jr	$+$07                       ; 043AAC || 043B02 18 05       9433  			JR      GETV7
	ld	a,$04                       ; 043B04 || 	ld	a,$04                       ; 043AAE || 043B04 3E 04       9435  GETV5:			LD      A,4             	; Unary 32-bit indirection
	jr	$+$03                       ; 043B06 || 	jr	$+$03                       ; 043AB0 || 043B06 18 01       9436  			JR      GETV7
	xor	a                          ; 043B08 || 	xor	a                          ; 043AB2 || 043B08 AF          9438  GETV6:			XOR     A               	; Unary 8-bit indirection
	ld	hl,$000000                  ; 043B09 || 	ld	hl,$000000                  ; 043AB3 || 043B09 21 00 00 00 9440  GETV7:			LD      HL,0
	push	af                        ; 043B0D || 	push	af                        ; 043AB7 || 043B0D F5          9441  			PUSH    AF
	jr	$+$26                       ; 043B0E || 	jr	$+$26                       ; 043AB8 || 043B0E 18 24       9442  			JR      GETV0
	ld	b,$04                       ; 043B10 || 	ld	b,$04                       ; 043ABA || 043B10 06 04       9444  GETV8:			LD      B,4             	; Binary 32-bt indirection
	jr	$+$04                       ; 043B12 || 	jr	$+$04                       ; 043ABC || 043B12 18 02       9445  			JR      GETVA
	ld	b,$00                       ; 043B14 || 	ld	b,$00                       ; 043ABE || 043B14 06 00       9447  GETV9:			LD      B,0             	; Binary 8-bit indirection
	push	hl                        ; 043B16 || 	push	hl                        ; 043AC0 || 043B16 E5          9449  GETVA:			PUSH    HL
	pop	ix                         ; 043B17 || 	pop	ix                         ; 043AC1 || 043B17 DD E1       9450  			POP     IX
	ld	a,d                         ; 043B19 || 	ld	a,d                         ; 043AC3 || 043B19 7A          9451  			LD      A,D            		; Fetch the variable type
	cp	$81                         ; 043B1A || 	cp	$81                         ; 043AC4 || 043B1A FE 81       9452  			CP      129			; Is it a string?
	ret	z                          ; 043B1C || 	ret	z                          ; 043AC6 || 043B1C C8          9453  			RET     Z               	; Yes, so exit here
	push	bc                        ; 043B1D || 	push	bc                        ; 043AC7 || 043B1D C5          9454  			PUSH    BC
	call	$04041b                   ; 043B1E || 	call	$040416                   ; 043AC8 || 043B1E CD 1B 04 04 9455  			CALL    LOADN           	; Left operand of the binary indirection (var?index or var!index)
	call	$040667                   ; 043B22 || 	call	$040662                   ; 043ACC || 043B22 CD 67 06 04 9456  			CALL    SFIX
	ld	a,l                         ; 043B26 || 	ld	a,l                         ; 043AD0 || 043B26 7D          9457  			LD	A,L
	exx                            ; 043B27 || 	exx                            ; 043AD1 || 043B27 D9          9458  			EXX
	ld	($044d4a),hl                ; 043B28 || 	ld	($044d4a),hl                ; 043AD2 || 043B28 22 4A 4D 04 9459  			LD	(R0+0),HL
	ld	($044d4c),a                 ; 043B2C || 	ld	($044d4c),a                 ; 043AD6 || 043B2C 32 4C 4D 04 9460  			LD	(R0+2),A
	ld	hl,($044d4a)                ; 043B30 || 	ld	hl,($044d4a)                ; 043ADA || 043B30 2A 4A 4D 04 9461  			LD	HL,(R0)			; HL: 24-bit address of the variable in memory
	push	hl                        ; 043B34 || 	push	hl                        ; 043ADE || 043B34 E5          9463  GETV0:			PUSH    HL			; HL will be 0 for a unary indirection, or the address of the variable for a binary indirection
	inc	iy                         ; 043B35 || 	inc	iy                         ; 043ADF || 043B35 FD 23       9464  			INC     IY
	call	$04032a                   ; 043B37 || 	call	$040325                   ; 043AE1 || 043B37 CD 2A 03 04 9465  			CALL    ITEMI
	ld	a,l                         ; 043B3B || 	ld	a,l                         ; 043AE5 || 043B3B 7D          9466  			LD	A,L			;  A: The MSB of the address
	exx                            ; 043B3C || 	exx                            ; 043AE6 || 043B3C D9          9467  			EXX
	ld	($044d4a),hl                ; 043B3D || 	ld	($044d4a),hl                ; 043AE7 || 043B3D 22 4A 4D 04 9468  			LD	(R0+0),HL		; HL: The LSW of the address
	ld	($044d4c),a                 ; 043B41 || 	ld	($044d4c),a                 ; 043AEB || 043B41 32 4C 4D 04 9469  			LD	(R0+2),A		; R0: L'HL or the 24-bit address
	pop	de                         ; 043B45 || 	pop	de                         ; 043AEF || 043B45 D1          9470  			POP     DE
	pop	af                         ; 043B46 || 	pop	af                         ; 043AF0 || 043B46 F1          9471  			POP     AF
	ld	hl,($044d4a)                ; 043B47 || 	ld	hl,($044d4a)                ; 043AF1 || 043B47 2A 4A 4D 04 9472  			LD	HL,(R0)			; HL: L'HL
	add	hl,de                      ; 043B4B || 	add	hl,de                      ; 043AF5 || 043B4B 19          9473  			ADD     HL,DE
	push	hl                        ; 043B4C || 	push	hl                        ; 043AF6 || 043B4C E5          9474  			PUSH    HL
	pop	ix                         ; 043B4D || 	pop	ix                         ; 043AF7 || 043B4D DD E1       9475  			POP     IX
	cp	a                           ; 043B4F || 	cp	a                           ; 043AF9 || 043B4F BF          9476  			CP      A
	ret                            ; 043B50 || 	ret                            ; 043AFA || 043B50 C9          9477  			RET
	ld	a,(iy+$01)                  ; 043B51 || 	ld	a,(iy+$01)                  ; 043AFB || 043B51 FD 7E 01    9487  GETDEF:			LD      A,(IY+1)		; Get the next character from the tokenised line (the start of the procedure name)
	call	$043cd1                   ; 043B54 || 	call	$043c7b                   ; 043AFE || 043B54 CD D1 3C 04 9488  			CALL    RANGE1			; Is it in range: "0" to "9", "A" to "Z", "a' to "z", "@", "_" or "`"?
	ret	c                          ; 043B58 || 	ret	c                          ; 043B02 || 043B58 D8          9489  			RET     C			; No so return with C set
	ld	a,(iy)                      ; 043B59 || 	ld	a,(iy)                      ; 043B03 || 043B59 FD 7E 00    9490  			LD      A,(IY)			; Fetch the current character from the tokenised line
	ld	hl,$044d0e                  ; 043B5C || 	ld	hl,$044d0e                  ; 043B06 || 043B5C 21 0E 4D 04 9491  			LD      HL,FNPTR		; HL: Address of the dynamic function pointer in ram.asm
	cp	$a4                         ; 043B60 || 	cp	$a4                         ; 043B0A || 043B60 FE A4       9492  			CP      FN			; Is it the token FN?
	jr	z,$+$4c                     ; 043B62 || 	jr	z,$+$4c                     ; 043B0C || 043B62 28 4A       9493  			JR      Z,LOC2			; Yes, so skip to LOC2 with that pointer to find a match
	ld	hl,$044d11                  ; 043B64 || 	ld	hl,$044d11                  ; 043B0E || 043B64 21 11 4D 04 9494  			LD      HL,PROPTR		; HL: Address of the dynamic procedure pointer in ram.asm
	cp	$f2                         ; 043B68 || 	cp	$f2                         ; 043B12 || 043B68 FE F2       9495  			CP      PROC			; Is it the token PROC?
	jr	z,$+$44                     ; 043B6A || 	jr	z,$+$44                     ; 043B14 || 043B6A 28 42       9496  			JR      Z,LOC2			; Yes, so skip to LOC2 with that pointer to find a match
	scf                            ; 043B6C || 	scf                            ; 043B16 || 043B6C 37          9497  			SCF				; No, so just return with C set
	ret                            ; 043B6D || 	ret                            ; 043B17 || 043B6D C9          9498  			RET
	sub	$40                        ; 043B6E || 	sub	$40                        ; 043B18 || 043B6E D6 40       9521  LOCATE:			SUB     '@'			; Check for valid range
	ret	c                          ; 043B70 || 	ret	c                          ; 043B1A || 043B70 D8          9522  			RET     C			; First character not "@", "A" to "Z" or "a" to "z", so not a variable
	ld	hl,$000000                  ; 043B71 || 	ld	hl,$000000                  ; 043B1B || 043B71 21 00 00 00 9523  			LD      HL, 0			; Clear HL
	cp	$1b                         ; 043B75 || 	cp	$1b                         ; 043B1F || 043B75 FE 1B       9524  			CP      'Z'-'@'+1		; Check for static ("@", "A" to "Z"); if it is not static...
	jr	nc,$+$20                    ; 043B77 || 	jr	nc,$+$20                    ; 043B21 || 043B77 30 1E       9525  			JR      NC,LOC0         	; Then branch here
	ld	l,a                         ; 043B79 || 	ld	l,a                         ; 043B23 || 043B79 6F          9526  			LD	L, A			; HL = A
	ld	a,(iy+$01)                  ; 043B7A || 	ld	a,(iy+$01)                  ; 043B24 || 043B7A FD 7E 01    9527  			LD      A,(IY+1)        	; Check the 2nd character
	cp	$25                         ; 043B7D || 	cp	$25                         ; 043B27 || 043B7D FE 25       9528  			CP      '%'			; If not "%" then it is not static...
	jr	nz,$+$23                    ; 043B7F || 	jr	nz,$+$23                    ; 043B29 || 043B7F 20 21       9529  			JR      NZ,LOC1         	; Branch here
	ld	a,(iy+$02)                  ; 043B81 || 	ld	a,(iy+$02)                  ; 043B2B || 043B81 FD 7E 02    9530  			LD      A,(IY+2)		; Check the 3rd character
	cp	$28                         ; 043B84 || 	cp	$28                         ; 043B2E || 043B84 FE 28       9531  			CP      '('			; If it is "(" (array) then it is not static...
	jr	z,$+$1c                     ; 043B86 || 	jr	z,$+$1c                     ; 043B30 || 043B86 28 1A       9532  			JR      Z,LOC1          	; Branch here
	add	hl,hl                      ; 043B88 || 	add	hl,hl                      ; 043B32 || 043B88 29          9536  			ADD     HL,HL			; HL: Variable index * 4
	add	hl,hl                      ; 043B89 || 	add	hl,hl                      ; 043B33 || 043B89 29          9537  			ADD	HL,HL
	ld	de,$044c00                  ; 043B8A || 	ld	de,$044c00                  ; 043B34 || 043B8A 11 00 4C 04 9538  			LD      DE,STAVAR       	; The static variable area in memory
	add	hl,de                      ; 043B8E || 	add	hl,de                      ; 043B38 || 043B8E 19          9539  			ADD     HL,DE			; HL: The address of the static variable
	inc	iy                         ; 043B8F || 	inc	iy                         ; 043B39 || 043B8F FD 23       9540  			INC     IY			; Skip the program pointer past the static variable name
	inc	iy                         ; 043B91 || 	inc	iy                         ; 043B3B || 043B91 FD 23       9541  			INC     IY
	ld	d,$04                       ; 043B93 || 	ld	d,$04                       ; 043B3D || 043B93 16 04       9542  			LD      D,4             	; Set the type to be integer
	xor	a                          ; 043B95 || 	xor	a                          ; 043B3F || 043B95 AF          9543  			XOR     A			; Set the Z flag
	ret                            ; 043B96 || 	ret                            ; 043B40 || 043B96 C9          9544  			RET
	cp	$1f                         ; 043B97 || 	cp	$1f                         ; 043B41 || 043B97 FE 1F       9548  LOC0:			CP      '_'-'@'			; Check the first character is in
	ret	c                          ; 043B99 || 	ret	c                          ; 043B43 || 043B99 D8          9549  			RET     C			; the range "_" to
	cp	$3b                         ; 043B9A || 	cp	$3b                         ; 043B44 || 043B9A FE 3B       9550  			CP      'z'-'@'+1		; "z" (lowercase characters only)
	ccf                            ; 043B9C || 	ccf                            ; 043B46 || 043B9C 3F          9551  			CCF				; If it is not in range then
	dec	a                          ; 043B9D || 	dec	a                          ; 043B47 || 043B9D 3D          9552  			DEC     A               	; Set NZ flag and
	ret	c                          ; 043B9E || 	ret	c                          ; 043B48 || 043B9E D8          9553  			RET     C			; Exit here
	sub	$03                        ; 043B9F || 	sub	$03                        ; 043B49 || 043B9F D6 03       9554  			SUB     3			; This brings it in the range of 27 upwards (need to confirm)
	ld	l,a                         ; 043BA1 || 	ld	l,a                         ; 043B4B || 043BA1 6F          9555  			LD	L, A			; HL = A
	ld	a,l                         ; 043BA2 || 	ld	a,l                         ; 043B4C || 043BA2 7D          9559  LOC1:			LD	A, L			; Fetch variable index
	add	a,a                        ; 043BA3 || 	add	a,a                        ; 043B4D || 043BA3 87          9560  			ADD	A, A			; x 2
	add	a,l                        ; 043BA4 || 	add	a,l                        ; 043B4E || 043BA4 85          9561  			ADD	A, L			; x 3
	sub	$03                        ; 043BA5 || 	sub	$03                        ; 043B4F || 043BA5 D6 03       9562  			SUB	3			; Subtract 2 TODO: Should be 3
	ld	l,a                         ; 043BA7 || 	ld	l,a                         ; 043B51 || 043BA7 6F          9563  			LD	L, A
	ld	de,$044c6c                  ; 043BA8 || 	ld	de,$044c6c                  ; 043B52 || 043BA8 11 6C 4C 04 9564  			LD      DE, DYNVAR       	; The dynamic variable storage
	ret	c                          ; 043BAC || 	ret	c                          ; 043B56 || 043BAC D8          9565  			RET	C			; Bounds check to trap for variable '@'
	add	hl,de                      ; 043BAD || 	add	hl,de                      ; 043B57 || 043BAD 19          9566  			ADD     HL, DE			; HL: Address of first entry
	ld	de,(hl)                     ; 043BAE || 	ld	de,(hl)                     ; 043B58 || 043BAE ED 17       9570  LOC2:			LD	DE, (HL)		; Fetch the original pointer
	push	hl                        ; 043BB0 || 	push	hl                        ; 043B5A || 043BB0 E5          9571  			PUSH	HL			; Need to preserve HL for LOC6
	xor	a                          ; 043BB1 || 	xor	a                          ; 043B5B || 043BB1 AF          9572  			XOR	A			; Reset carry flag
	sbc	hl,hl                      ; 043BB2 || 	sbc	hl,hl                      ; 043B5C || 043BB2 ED 62       9573  			SBC	HL, HL			; Set HL to 0
	sbc	hl,de                      ; 043BB4 || 	sbc	hl,de                      ; 043B5E || 043BB4 ED 52       9574  			SBC	HL, DE			; Compare with 0
	pop	hl                         ; 043BB6 || 	pop	hl                         ; 043B60 || 043BB6 E1          9575  			POP	HL			; Restore the original pointer
	jr	z,$+$4b                     ; 043BB7 || 	jr	z,$+$4b                     ; 043B61 || 043BB7 28 49       9576  			JR	Z, LOC6			; If the pointer in DE is zero, the variable is undefined at this point
	push	de                        ; 043BB9 || 	push	de                        ; 043B63 || 043BB9 D5          9578  			push de
	pop	hl                         ; 043BBA || 	pop	hl                         ; 043B64 || 043BBA E1          9579  			pop hl ; how was that even possible?
	inc	hl                         ; 043BBB || 	inc	hl                         ; 043B65 || 043BBB 23          9580  			INC     HL              	; Skip the link (24-bits)
	inc	hl                         ; 043BBC || 	inc	hl                         ; 043B66 || 043BBC 23          9581  			INC     HL
	inc	hl                         ; 043BBD || 	inc	hl                         ; 043B67 || 043BBD 23          9582  			INC	HL			; HL: Address of the variable name in DYNVARS
	push	iy                        ; 043BBE || 	push	iy                        ; 043B68 || 043BBE FD E5       9583  			PUSH    IY			; IY: Address of the variable name in the program
	ld	a,(hl)                      ; 043BC0 || 	ld	a,(hl)                      ; 043B6A || 043BC0 7E          9585  LOC3:			LD      A,(HL)         		; Compare
	inc	hl                         ; 043BC1 || 	inc	hl                         ; 043B6B || 043BC1 23          9586  			INC     HL
	inc	iy                         ; 043BC2 || 	inc	iy                         ; 043B6C || 043BC2 FD 23       9587  			INC     IY
	cp	(iy)                        ; 043BC4 || 	cp	(iy)                        ; 043B6E || 043BC4 FD BE 00    9588  			CP      (IY)
	jr	z,$-$07                     ; 043BC7 || 	jr	z,$-$07                     ; 043B71 || 043BC7 28 F7       9589  			JR      Z, LOC3			; Keep looping whilst we've got a match...
	or	a                           ; 043BC9 || 	or	a                           ; 043B73 || 043BC9 B7          9590  			OR      A               	; Have we hit a terminator?
	jr	z,$+$09                     ; 043BCA || 	jr	z,$+$09                     ; 043B74 || 043BCA 28 07       9591  			JR      Z,LOC5          	; Yes, so maybe we've found a variable
	pop	iy                         ; 043BCC || 	pop	iy                         ; 043B76 || 043BCC FD E1       9593  LOC4:			POP     IY			; Restore the pointer in the program
	ex	de,hl                       ; 043BCE || 	ex	de,hl                       ; 043B78 || 043BCE EB          9594  			EX      DE, HL			; HL: New pointer in DYNVARS
	jp	$043bae                     ; 043BCF || 	jp	$043b58                     ; 043B79 || 043BCF C3 AE 3B 04 9595  			JP      LOC2            	; Loop round and try again
	dec	iy                         ; 043BD3 || 	dec	iy                         ; 043B7D || 043BD3 FD 2B       9599  LOC5:			DEC     IY
	ld	a,(iy)                      ; 043BD5 || 	ld	a,(iy)                      ; 043B7F || 043BD5 FD 7E 00    9600  			LD      A,(IY)
	cp	$28                         ; 043BD8 || 	cp	$28                         ; 043B82 || 043BD8 FE 28       9601  			CP      '('
	jr	z,$+$17                     ; 043BDA || 	jr	z,$+$17                     ; 043B84 || 043BDA 28 15       9602  			JR      Z,LOC5A         	; FOUND
	inc	iy                         ; 043BDC || 	inc	iy                         ; 043B86 || 043BDC FD 23       9603  			INC     IY
	call	$043cc5                   ; 043BDE || 	call	$043c6f                   ; 043B88 || 043BDE CD C5 3C 04 9604  			CALL    RANGE
	jr	c,$+$0f                     ; 043BE2 || 	jr	c,$+$0f                     ; 043B8C || 043BE2 38 0D       9605  			JR      C,LOC5A         	; FOUND
	cp	$28                         ; 043BE4 || 	cp	$28                         ; 043B8E || 043BE4 FE 28       9606  			CP      '('
	jr	z,$-$1a                     ; 043BE6 || 	jr	z,$-$1a                     ; 043B90 || 043BE6 28 E4       9607  			JR      Z,LOC4          	; KEEP LOOKING
	ld	a,(iy-$01)                  ; 043BE8 || 	ld	a,(iy-$01)                  ; 043B92 || 043BE8 FD 7E FF    9608  			LD      A,(IY-1)
	call	$043cd1                   ; 043BEB || 	call	$043c7b                   ; 043B95 || 043BEB CD D1 3C 04 9609  			CALL    RANGE1
	jr	nc,$-$23                    ; 043BEF || 	jr	nc,$-$23                    ; 043B99 || 043BEF 30 DB       9610  			JR      NC,LOC4         	; KEEP LOOKING
	pop	de                         ; 043BF1 || 	pop	de                         ; 043B9B || 043BF1 D1          9611  LOC5A:			POP     DE
	ld	a,(iy-$01)                  ; 043BF2 || 	ld	a,(iy-$01)                  ; 043B9C || 043BF2 FD 7E FF    9612  TYPE_:			LD      A,(IY-1)		; Check the string type postfix
	cp	$24                         ; 043BF5 || 	cp	$24                         ; 043B9F || 043BF5 FE 24       9613  			CP      '$'			; Is it a string?
	ld	d,$81                       ; 043BF7 || 	ld	d,$81                       ; 043BA1 || 043BF7 16 81       9614  			LD      D,129			; Yes, so return D = 129
	ret	z                          ; 043BF9 || 	ret	z                          ; 043BA3 || 043BF9 C8          9615  			RET     Z
	cp	$25                         ; 043BFA || 	cp	$25                         ; 043BA4 || 043BFA FE 25       9616  			CP      '%'			; Is it an integer?
	ld	d,$04                       ; 043BFC || 	ld	d,$04                       ; 043BA6 || 043BFC 16 04       9617  			LD      D,4			; Yes, so return D = 4
	ret	z                          ; 043BFE || 	ret	z                          ; 043BA8 || 043BFE C8          9618  			RET     Z
	inc	d                          ; 043BFF || 	inc	d                          ; 043BA9 || 043BFF 14          9619  			INC     D			; At this point it must be a float
	cp	a                           ; 043C00 || 	cp	a                           ; 043BAA || 043C00 BF          9620  			CP      A			; Set the flags
	ret                            ; 043C01 || 	ret                            ; 043BAB || 043C01 C9          9621  			RET
	inc	a                          ; 043C02 || 	inc	a                          ; 043BAC || 043C02 3C          9625  LOC6:			INC     A               	; Set NZ flag
	ret                            ; 043C03 || 	ret                            ; 043BAD || 043C03 C9          9626  			RET
	xor	a                          ; 043C04 || 	xor	a                          ; 043BAE || 043C04 AF          9633  CREATE:			XOR     A
	ld	de,($044d1d)                ; 043C05 || 	ld	de,($044d1d)                ; 043BAF || 043C05 ED 5B 1D 4D 9634  			LD      DE,(FREE)		; Get the last byte of available RAM
	ld	(hl),de                     ; 043C0A || 	ld	(hl),de                     ; 043BB4 || 043C0A ED 1F       9635  			LD	(HL), DE		; Store
	ex	de,hl                       ; 043C0C || 	ex	de,hl                       ; 043BB6 || 043C0C EB          9636  			EX      DE,HL
	ld	(hl),a                      ; 043C0D || 	ld	(hl),a                      ; 043BB7 || 043C0D 77          9637  			LD      (HL),A			; Clear the link of the new entity
	inc	hl                         ; 043C0E || 	inc	hl                         ; 043BB8 || 043C0E 23          9638  			INC     HL
	ld	(hl),a                      ; 043C0F || 	ld	(hl),a                      ; 043BB9 || 043C0F 77          9639  			LD      (HL),A
	inc	hl                         ; 043C10 || 	inc	hl                         ; 043BBA || 043C10 23          9640  			INC     HL
	ld	(hl),a                      ; 043C11 || 	ld	(hl),a                      ; 043BBB || 043C11 77          9641  			LD      (HL),A
	inc	hl                         ; 043C12 || 	inc	hl                         ; 043BBC || 043C12 23          9642  			INC     HL
	inc	iy                         ; 043C13 || 	inc	iy                         ; 043BBD || 043C13 FD 23       9643  LOC7:			INC     IY
	call	$043cc5                   ; 043C15 || 	call	$043c6f                   ; 043BBF || 043C15 CD C5 3C 04 9644  			CALL    RANGE           	; END OF VARIABLE?
	jr	c,$+$17                     ; 043C19 || 	jr	c,$+$17                     ; 043BC3 || 043C19 38 15       9645  			JR      C,LOC8
	ld	(hl),a                      ; 043C1B || 	ld	(hl),a                      ; 043BC5 || 043C1B 77          9646  			LD      (HL),A
	inc	hl                         ; 043C1C || 	inc	hl                         ; 043BC6 || 043C1C 23          9647  			INC     HL
	call	$043cd1                   ; 043C1D || 	call	$043c7b                   ; 043BC7 || 043C1D CD D1 3C 04 9648  			CALL    RANGE1
	jr	nc,$-$0e                    ; 043C21 || 	jr	nc,$-$0e                    ; 043BCB || 043C21 30 F0       9649  			JR      NC,LOC7
	cp	$28                         ; 043C23 || 	cp	$28                         ; 043BCD || 043C23 FE 28       9650  			CP      '('
	jr	z,$+$0b                     ; 043C25 || 	jr	z,$+$0b                     ; 043BCF || 043C25 28 09       9651  			JR      Z,LOC8
	ld	a,(iy+$01)                  ; 043C27 || 	ld	a,(iy+$01)                  ; 043BD1 || 043C27 FD 7E 01    9652  			LD      A,(IY+1)
	cp	$28                         ; 043C2A || 	cp	$28                         ; 043BD4 || 043C2A FE 28       9653  			CP      '('
	jr	z,$-$19                     ; 043C2C || 	jr	z,$-$19                     ; 043BD6 || 043C2C 28 E5       9654  			JR      Z,LOC7
	inc	iy                         ; 043C2E || 	inc	iy                         ; 043BD8 || 043C2E FD 23       9655  			INC     IY
	ld	(hl),$00                    ; 043C30 || 	ld	(hl),$00                    ; 043BDA || 043C30 36 00       9656  LOC8:			LD      (HL),0          	; TERMINATOR
	inc	hl                         ; 043C32 || 	inc	hl                         ; 043BDC || 043C32 23          9657  			INC     HL
	push	hl                        ; 043C33 || 	push	hl                        ; 043BDD || 043C33 E5          9658  			PUSH    HL
	call	$043bf2                   ; 043C34 || 	call	$043b9c                   ; 043BDE || 043C34 CD F2 3B 04 9659  			CALL    TYPE_			; Get the variable type in D
	ld	a,$04                       ; 043C38 || 	ld	a,$04                       ; 043BE2 || 043C38 3E 04       9660  			LD      A,4			; If it is an integer then it takes up 4 bytes
	cp	d                           ; 043C3A || 	cp	d                           ; 043BE4 || 043C3A BA          9661  			CP      D
	jr	z,$+$03                     ; 043C3B || 	jr	z,$+$03                     ; 043BE5 || 043C3B 28 01       9662  			JR      Z,LOC9			; So skip the next bit
	inc	a                          ; 043C3D || 	inc	a                          ; 043BE7 || 043C3D 3C          9663  			INC     A			; Strings and floats take up 5 bytes (NB: Strings take up 4 in BBC BASIC for Z80)
	ld	(hl),$00                    ; 043C3E || 	ld	(hl),$00                    ; 043BE8 || 043C3E 36 00       9664  LOC9:			LD      (HL),0          	; Initialise the memory to zero
	inc	hl                         ; 043C40 || 	inc	hl                         ; 043BEA || 043C40 23          9665  			INC     HL
	dec	a                          ; 043C41 || 	dec	a                          ; 043BEB || 043C41 3D          9666  			DEC     A
	jr	nz,$-$04                    ; 043C42 || 	jr	nz,$-$04                    ; 043BEC || 043C42 20 FA       9667  			JR      NZ,LOC9
	ld	($044d1d),hl                ; 043C44 || 	ld	($044d1d),hl                ; 043BEE || 043C44 22 1D 4D 04 9668  			LD      (FREE),HL		; Adjust the stack
	call	$041681                   ; 043C48 || 	call	$04164f                   ; 043BF2 || 043C48 CD 81 16 04 9669  			CALL    CHECK			; Check whether we are out of space
	pop	hl                         ; 043C4C || 	pop	hl                         ; 043BF6 || 043C4C E1          9670  			POP     HL
	xor	a                          ; 043C4D || 	xor	a                          ; 043BF7 || 043C4D AF          9671  			XOR     A
	ret                            ; 043C4E || 	ret                            ; 043BF8 || 043C4E C9          9672  			RET
	call	$040a78                   ; 043C4F || 	call	$040a70                   ; 043BF9 || 043C4F CD 78 0A 04 9692  LINNUM:			CALL    NXT			; Skip whitespace to the first character
	ld.sis	hl,$0000                ; 043C53 || 	ld.sis	hl,$0000                ; 043BFD || 043C53 40 21 00 00 9693  			LD.SIS  HL,0			; The running total
	ld	a,(iy)                      ; 043C57 || 	ld	a,(iy)                      ; 043C01 || 043C57 FD 7E 00    9694  LINNM1:			LD      A,(IY)			; A: Fetch the digit to add in
	sub	$30                        ; 043C5A || 	sub	$30                        ; 043C04 || 043C5A D6 30       9695  			SUB     '0'			; Sub ASCII '0' to make a binary number (0-9)
	ret	c                          ; 043C5C || 	ret	c                          ; 043C06 || 043C5C D8          9696  			RET     C			; And return if less than 0
	cp	$0a                         ; 043C5D || 	cp	$0a                         ; 043C07 || 043C5D FE 0A       9697  			CP      10			; Or greater than or equal to 10
	ret	nc                         ; 043C5F || 	ret	nc                         ; 043C09 || 043C5F D0          9698  			RET     NC			; As we've hit a non-numeric character (end of number) at this point
	inc	iy                         ; 043C60 || 	inc	iy                         ; 043C0A || 043C60 FD 23       9699  			INC     IY			; Increment the string pointer
	ld	d,h                         ; 043C62 || 	ld	d,h                         ; 043C0C || 043C62 54          9700  			LD      D,H			; This next block multiplys HL by 10, shifting the result left in BASE 10
	ld	e,l                         ; 043C63 || 	ld	e,l                         ; 043C0D || 043C63 5D          9701  			LD      E,L			; Store the original number in DE
	add.sil	hl,hl                  ; 043C64 || 	add.sil	hl,hl                  ; 043C0E || 043C64 52 29       9702  			ADD.S   HL,HL           	; *2
	jr	c,$+$15                     ; 043C66 || 	jr	c,$+$15                     ; 043C10 || 043C66 38 13       9703  			JR      C,TOOBIG		; At each point, error if > 65535 (carry flag set)
	add.sil	hl,hl                  ; 043C68 || 	add.sil	hl,hl                  ; 043C12 || 043C68 52 29       9704  			ADD.S   HL,HL           	; *4S
	jr	c,$+$11                     ; 043C6A || 	jr	c,$+$11                     ; 043C14 || 043C6A 38 0F       9705  			JR      C,TOOBIG
	add.sil	hl,de                  ; 043C6C || 	add.sil	hl,de                  ; 043C16 || 043C6C 52 19       9706  			ADD.S   HL,DE           	; *5
	jr	c,$+$0d                     ; 043C6E || 	jr	c,$+$0d                     ; 043C18 || 043C6E 38 0B       9707  			JR      C,TOOBIG
	add.sil	hl,hl                  ; 043C70 || 	add.sil	hl,hl                  ; 043C1A || 043C70 52 29       9708  			ADD.S   HL,HL           	; *10
	jr	c,$+$09                     ; 043C72 || 	jr	c,$+$09                     ; 043C1C || 043C72 38 07       9709  			JR      C,TOOBIG
	ld	e,a                         ; 043C74 || 	ld	e,a                         ; 043C1E || 043C74 5F          9710  			LD      E,A			; A->DE: the digit to add in
	ld	d,$00                       ; 043C75 || 	ld	d,$00                       ; 043C1F || 043C75 16 00       9711  			LD      D,0
	add.sil	hl,de                  ; 043C77 || 	add.sil	hl,de                  ; 043C21 || 043C77 52 19       9712  			ADD.S   HL,DE           	; Add in the digit to the running total
	jr	nc,$-$22                    ; 043C79 || 	jr	nc,$-$22                    ; 043C23 || 043C79 30 DC       9713  			JR      NC,LINNM1       	; And if it is still <= 65535, loop
	ld	a,$14                       ; 043C7B || 	ld	a,$14                       ; 043C25 || 043C7B 3E 14       9715  TOOBIG:			LD      A,20
	jp	$0437b6                     ; 043C7D || 	jp	$043760                     ; 043C27 || 043C7D C3 B6 37 04 9716  			JP      ERROR_           	; Error: "Too big"
	call	$043c4f                   ; 043C81 || 	call	$043bf9                   ; 043C2B || 043C81 CD 4F 3C 04 9724  PAIR:			CALL    LINNUM          	; Parse the first line number
	ld	a,h                         ; 043C85 || 	ld	a,h                         ; 043C2F || 043C85 7C          9725  			LD      A,H			; If it is not zero, then...
	or	l                           ; 043C86 || 	or	l                           ; 043C30 || 043C86 B5          9726  			OR      L
	jr	nz,$+$04                    ; 043C87 || 	jr	nz,$+$04                    ; 043C31 || 043C87 20 02       9727  			JR      NZ,PAIR1		; Skip...
	ld	l,$0a                       ; 043C89 || 	ld	l,$0a                       ; 043C33 || 043C89 2E 0A       9728  			LD      L,10			; HL: the default value (10)
	call	$0417ac                   ; 043C8B || 	call	$04177a                   ; 043C35 || 043C8B CD AC 17 04 9730  PAIR1:			CALL    TERMQ			; Check for ELSE, : or CR
	inc	iy                         ; 043C8F || 	inc	iy                         ; 043C39 || 043C8F FD 23       9731  			INC     IY			; Skip to next character
	push	hl                        ; 043C91 || 	push	hl                        ; 043C3B || 043C91 E5          9732  			PUSH    HL			; Stack the first line number
	ld	hl,$00000a                  ; 043C92 || 	ld	hl,$00000a                  ; 043C3C || 043C92 21 0A 00 00 9733  			LD      HL,10			; HL: the second default (10)
	call	nz,$043c4f                ; 043C96 || 	call	nz,$043bf9                ; 043C40 || 043C96 C4 4F 3C 04 9734  			CALL    NZ,LINNUM       	; Parse the second line number
	ex	(sp),hl                     ; 043C9A || 	ex	(sp),hl                     ; 043C44 || 043C9A E3          9735  			EX      (SP),HL			; HL: The first line number (off the stack)
	pop	bc                         ; 043C9B || 	pop	bc                         ; 043C45 || 043C9B C1          9736  			POP     BC			; BC: Second line number
	ld	a,b                         ; 043C9C || 	ld	a,b                         ; 043C46 || 043C9C 78          9737  			LD      A,B			; If the second line number is not zero then...
	or	c                           ; 043C9D || 	or	c                           ; 043C47 || 043C9D B1          9738  			OR      C			; We're good...
	ret	nz                         ; 043C9E || 	ret	nz                         ; 043C48 || 043C9E C0          9739  			RET     NZ			; Exit, otherwise...
	call	$0437cd                   ; 043C9F || 	call	$043777                   ; 043C49 || 043C9F CD CD 37 04 9740  			CALL    EXTERR			; Throw error: "Silly"
	ld	d,e                         ; 043CA3 || 	ld	d,e                         ; 043C4D || 043CA3 53 69 6C 6C 9741  			DB    	"Silly", 0
	ld	l,c                         ; 043CA4 || 	ld	l,c                         ; 043C4E
	ld	l,h                         ; 043CA5 || 	ld	l,h                         ; 043C4F
	ld	l,h                         ; 043CA6 || 	ld	l,h                         ; 043C50
	ld	a,c                         ; 043CA7 || 	ld	a,c                         ; 043C51
	nop                            ; 043CA8 || 	nop                            ; 043C52
	call	$043c4f                   ; 043CA9 || 	call	$043bf9                   ; 043C53 || 043CA9 CD 4F 3C 04 9749  DLPAIR:			CALL    LINNUM			; Parse the first line number
	push	hl                        ; 043CAD || 	push	hl                        ; 043C57 || 043CAD E5          9750  			PUSH    HL			; Stack it
	call	$0417ac                   ; 043CAE || 	call	$04177a                   ; 043C58 || 043CAE CD AC 17 04 9751  			CALL    TERMQ			; Check for ELSE, : or CR
	jr	z,$+$0c                     ; 043CB2 || 	jr	z,$+$0c                     ; 043C5C || 043CB2 28 0A       9752  			JR      Z,DLP1			; And exit if so
	cp	$e7                         ; 043CB4 || 	cp	$e7                         ; 043C5E || 043CB4 FE E7       9753  			CP      TIF			; Is the token IF?
	jr	z,$+$08                     ; 043CB6 || 	jr	z,$+$08                     ; 043C60 || 043CB6 28 06       9754  			JR      Z,DLP1			; Yes, so skip the next bit...
	inc	iy                         ; 043CB8 || 	inc	iy                         ; 043C62 || 043CB8 FD 23       9755  			INC     IY			; Otherwise...
	call	$043c4f                   ; 043CBA || 	call	$043bf9                   ; 043C64 || 043CBA CD 4F 3C 04 9756  			CALL    LINNUM			; Fetch the second line number
	ex	(sp),hl                     ; 043CBE || 	ex	(sp),hl                     ; 043C68 || 043CBE E3          9757  DLP1:			EX      (SP),HL			; HL: The first line number (off the stack)
	call	$0439e5                   ; 043CBF || 	call	$04398f                   ; 043C69 || 043CBF CD E5 39 04 9758  			CALL    FINDL			; HL: Find the address of the line
	pop	bc                         ; 043CC3 || 	pop	bc                         ; 043C6D || 043CC3 C1          9759  			POP     BC			; BC: The second number
	ret                            ; 043CC4 || 	ret                            ; 043C6E || 043CC4 C9          9760  			RET
	ld	a,(iy)                      ; 043CC5 || 	ld	a,(iy)                      ; 043C6F || 043CC5 FD 7E 00    9771  RANGE:			LD      A,(IY)			; Fetch the character
	cp	$24                         ; 043CC8 || 	cp	$24                         ; 043C72 || 043CC8 FE 24       9772  			CP      '$'			; Postfix for string variable is valid
	ret	z                          ; 043CCA || 	ret	z                          ; 043C74 || 043CCA C8          9773  			RET     Z
	cp	$25                         ; 043CCB || 	cp	$25                         ; 043C75 || 043CCB FE 25       9774  			CP      '%'			; Postfix for integer variable is valid
	ret	z                          ; 043CCD || 	ret	z                          ; 043C77 || 043CCD C8          9775  			RET     Z
	cp	$28                         ; 043CCE || 	cp	$28                         ; 043C78 || 043CCE FE 28       9776  			CP      '('			; Postfix for array is valid
	ret	z                          ; 043CD0 || 	ret	z                          ; 043C7A || 043CD0 C8          9777  			RET     Z
	cp	$30                         ; 043CD1 || 	cp	$30                         ; 043C7B || 043CD1 FE 30       9783  RANGE1:			CP      '0'			; If it is between '0'...
	ret	c                          ; 043CD3 || 	ret	c                          ; 043C7D || 043CD3 D8          9784  			RET     C
	cp	$3a                         ; 043CD4 || 	cp	$3a                         ; 043C7E || 043CD4 FE 3A       9785  			CP      '9'+1			; And '9'...
	ccf                            ; 043CD6 || 	ccf                            ; 043C80 || 043CD6 3F          9786  			CCF
	ret	nc                         ; 043CD7 || 	ret	nc                         ; 043C81 || 043CD7 D0          9787  			RET     NC			; Then it is valid
	cp	$40                         ; 043CD8 || 	cp	$40                         ; 043C82 || 043CD8 FE 40       9788  			CP      '@'             	; The prefix @ is valid (@% controls numeric print formatting - v2.4)
	ret	z                          ; 043CDA || 	ret	z                          ; 043C84 || 043CDA C8          9789  			RET     Z
	cp	$41                         ; 043CDB || 	cp	$41                         ; 043C85 || 043CDB FE 41       9794  RANGE2:			CP      'A'			; If it is between 'A'...
	ret	c                          ; 043CDD || 	ret	c                          ; 043C87 || 043CDD D8          9795  			RET     C
	cp	$5b                         ; 043CDE || 	cp	$5b                         ; 043C88 || 043CDE FE 5B       9796  			CP      'Z'+1			; And 'Z'...
	ccf                            ; 043CE0 || 	ccf                            ; 043C8A || 043CE0 3F          9797  			CCF
	ret	nc                         ; 043CE1 || 	ret	nc                         ; 043C8B || 043CE1 D0          9798  			RET     NC			; Then it is valid
	cp	$5f                         ; 043CE2 || 	cp	$5f                         ; 043C8C || 043CE2 FE 5F       9799  			CP      '_'			; If it is underscore, grave, or between 'a'
	ret	c                          ; 043CE4 || 	ret	c                          ; 043C8E || 043CE4 D8          9800  			RET     C
	cp	$7b                         ; 043CE5 || 	cp	$7b                         ; 043C8F || 043CE5 FE 7B       9801  			CP      'z'+1			; And 'z'
	ccf                            ; 043CE7 || 	ccf                            ; 043C91 || 043CE7 3F          9802  			CCF				; Then it is valid
	ret                            ; 043CE8 || 	ret                            ; 043C92 || 043CE8 C9          9803  			RET
	xor	a                          ; 043CE9 || 	xor	a                          ; 043C93 || 043CE9 AF          9808  SPACE_: 		XOR     A
	call	$0437cd                   ; 043CEA || 	call	$043777                   ; 043C94 || 043CEA CD CD 37 04 9809  			CALL    EXTERR          	; "LINE space"
	add	a,(hl)                     ; 043CEE || 	add	a,(hl)                     ; 043C98 || 043CEE 86 08 00    9810  			DB    	LINE_, 8, 0
	ex	af,af'                      ; 043CEF || 	ex	af,af'                      ; 043C99
	nop                            ; 043CF0 || 	nop                            ; 043C9A
	ld	(de),a                      ; 043CF1 || 	ld	(de),a                      ; 043C9B || 043CF1 12          9826  LEXAN1:			LD      (DE),A          	; Transfer to buffer
	inc	de                         ; 043CF2 || 	inc	de                         ; 043C9C || 043CF2 13          9827  			INC     DE              	; Increment the pointers
	inc	iy                         ; 043CF3 || 	inc	iy                         ; 043C9D || 043CF3 FD 23       9828  			INC     IY			; And fall through to the main function
	ld	a,e                         ; 043CF5 || 	ld	a,e                         ; 043C9F || 043CF5 7B          9832  LEXAN2:			LD      A,E             	; Destination buffer on page boundary, so E can be used as length
	cp	$fc                         ; 043CF6 || 	cp	$fc                         ; 043CA0 || 043CF6 FE FC       9833  			CP      252             	; If it is >= 252 bytes, then...
	jr	nc,$-$0f                    ; 043CF8 || 	jr	nc,$-$0f                    ; 043CA2 || 043CF8 30 EF       9834  			JR      NC,SPACE_        	; Throw a 'LINE space' error (line too long)
	ld	a,(iy)                      ; 043CFA || 	ld	a,(iy)                      ; 043CA4 || 043CFA FD 7E 00    9835  			LD      A,(IY)			; Fetch character from source string
	cp	$0d                         ; 043CFD || 	cp	$0d                         ; 043CA7 || 043CFD FE 0D       9836  			CP      CR			; If it is a CR
	ret	z                          ; 043CFF || 	ret	z                          ; 043CA9 || 043CFF C8          9837  			RET     Z               	; Then it is end of line; we're done parsing
	call	$043cd1                   ; 043D00 || 	call	$043c7b                   ; 043CAA || 043D00 CD D1 3C 04 9838  			CALL    RANGE1			; Is it alphanumeric, '@', '_' or '`'
	jr	nc,$+$08                    ; 043D04 || 	jr	nc,$+$08                    ; 043CAE || 043D04 30 06       9839  			JR      NC,LEXAN3		; Yes, so skip
	res	5,c                        ; 043D06 || 	res	5,c                        ; 043CB0 || 043D06 CB A9       9840  			RES     5,C             	; FLAG: NOT IN VARIABLE
	res	3,c                        ; 043D08 || 	res	3,c                        ; 043CB2 || 043D08 CB 99       9841  			RES     3,C             	; FLAG: NOT IN HEX
	res	2,c                        ; 043D0A || 	res	2,c                        ; 043CB4 || 043D0A CB 91       9842  			RES	2,C			; FLAG: NOT IN BINARY
	cp	$20                         ; 043D0C || 	cp	$20                         ; 043CB6 || 043D0C FE 20       9844  LEXAN3:			CP      ' '			; Ignore spaces
	jr	z,$-$1d                     ; 043D0E || 	jr	z,$-$1d                     ; 043CB8 || 043D0E 28 E1       9845  			JR      Z,LEXAN1
	cp	$2c                         ; 043D10 || 	cp	$2c                         ; 043CBA || 043D10 FE 2C       9846  			CP      ','			; Ignore commas
	jr	z,$-$21                     ; 043D12 || 	jr	z,$-$21                     ; 043CBC || 043D12 28 DD       9847  			JR      Z,LEXAN1
	cp	$32                         ; 043D14 || 	cp	$32                         ; 043CBE || 043D14 FE 32       9848  			CP	'2'			; If less than '2'
	jr	nc,$+$04                    ; 043D16 || 	jr	nc,$+$04                    ; 043CC0 || 043D16 30 02       9849  			JR	NC, @F			; No, so skip
	res	2,c                        ; 043D18 || 	res	2,c                        ; 043CC2 || 043D18 CB 91       9850  			RES	2,C			; FLAG: NOT IN BINARY
	cp	$47                         ; 043D1A || 	cp	$47                         ; 043CC4 || 043D1A FE 47       9851  @@:			CP      'G'			; If less then 'G'
	jr	c,$+$04                     ; 043D1C || 	jr	c,$+$04                     ; 043CC6 || 043D1C 38 02       9852  			JR      C,LEXAN4		; Yes, so skip
	res	3,c                        ; 043D1E || 	res	3,c                        ; 043CC8 || 043D1E CB 99       9853  			RES     3,C             	; FLAG: NOT IN HEX
	cp	$22                         ; 043D20 || 	cp	$22                         ; 043CCA || 043D20 FE 22       9855  LEXAN4:			CP      34			; Is it a quote character?
	jr	nz,$+$07                    ; 043D22 || 	jr	nz,$+$07                    ; 043CCC || 043D22 20 05       9856  			JR      NZ,LEXAN5		; No, so skip
	rl	c                           ; 043D24 || 	rl	c                           ; 043CCE || 043D24 CB 11       9857  			RL      C			; Toggle bit 7 of C by shifting it into carry flag
	ccf                            ; 043D26 || 	ccf                            ; 043CD0 || 043D26 3F          9858  			CCF                     	; Toggle the carry
	rr	c                           ; 043D27 || 	rr	c                           ; 043CD1 || 043D27 CB 19       9859  			RR      C			; And then shifting it back into bit 7 of C
	bit	4,c                        ; 043D29 || 	bit	4,c                        ; 043CD3 || 043D29 CB 61       9861  LEXAN5:			BIT     4,C			; Accept line number?
	jr	z,$+$14                     ; 043D2B || 	jr	z,$+$14                     ; 043CD5 || 043D2B 28 12       9862  			JR      Z,LEXAN6		; No, so skip
	res	4,c                        ; 043D2D || 	res	4,c                        ; 043CD7 || 043D2D CB A1       9863  			RES     4,C			; FLAG: DON'T ACCEPT LINE NUMBER
	push	bc                        ; 043D2F || 	push	bc                        ; 043CD9 || 043D2F C5          9864  			PUSH    BC
	push	de                        ; 043D30 || 	push	de                        ; 043CDA || 043D30 D5          9865  			PUSH    DE
	call	$043c4f                   ; 043D31 || 	call	$043bf9                   ; 043CDB || 043D31 CD 4F 3C 04 9866  			CALL    LINNUM         		; Parse the line number to HL
	pop	de                         ; 043D35 || 	pop	de                         ; 043CDF || 043D35 D1          9867  			POP     DE
	pop	bc                         ; 043D36 || 	pop	bc                         ; 043CE0 || 043D36 C1          9868  			POP     BC
	ld	a,h                         ; 043D37 || 	ld	a,h                         ; 043CE1 || 043D37 7C          9869  			LD      A,H			; If it is not zero
	or	l                           ; 043D38 || 	or	l                           ; 043CE2 || 043D38 B5          9870  			OR      L
	call	nz,$043db2                ; 043D39 || 	call	nz,$043d5c                ; 043CE3 || 043D39 C4 B2 3D 04 9871  			CALL    NZ,ENCODE       	; Then encode the line number HL to the destination (DE)
	jr	$-$48                       ; 043D3D || 	jr	$-$48                       ; 043CE7 || 043D3D 18 B6       9872  			JR      LEXAN2          	; And loop
	dec	c                          ; 043D3F || 	dec	c                          ; 043CE9 || 043D3F 0D          9874  LEXAN6:			DEC     C			; Check for C=1 (LEFT)
	jr	z,$+$0c                     ; 043D40 || 	jr	z,$+$0c                     ; 043CEA || 043D40 28 0A       9875  			JR      Z,LEXAN7        	; If so, skip
	inc	c                          ; 043D42 || 	inc	c                          ; 043CEC || 043D42 0C          9876  			INC     C			; Otherwise restore C
	jr	nz,$-$52                    ; 043D43 || 	jr	nz,$-$52                    ; 043CED || 043D43 20 AC       9877  			JR      NZ,LEXAN1		; If C was 0 (RIGHT) then...
	or	a                           ; 043D45 || 	or	a                           ; 043CEF || 043D45 B7          9878  			OR      A			; Set the flags based on the character
	call	p,$04381d                 ; 043D46 || 	call	p,$0437c7                 ; 043CF0 || 043D46 F4 1D 38 04 9879  			CALL    P,LEX           	; Tokenise if A < 128
	jr	$+$15                       ; 043D4A || 	jr	$+$15                       ; 043CF4 || 043D4A 18 13       9880  			JR      LEXAN8			; And skip
	cp	$2a                         ; 043D4C || 	cp	$2a                         ; 043CF6 || 043D4C FE 2A       9884  LEXAN7:			CP      '*'			; Is it a '*' (for star commands)
	jr	z,$+$19                     ; 043D4E || 	jr	z,$+$19                     ; 043CF8 || 043D4E 28 17       9885  			JR      Z,LEXAN9		; Yes, so skip to quit tokenising
	or	a                           ; 043D50 || 	or	a                           ; 043CFA || 043D50 B7          9886  			OR      A			; Set the flags based on the character
	call	p,$04381d                 ; 043D51 || 	call	p,$0437c7                 ; 043CFB || 043D51 F4 1D 38 04 9887  			CALL    P,LEX           	; Tokenise if A < 128
	cp	$8f                         ; 043D55 || 	cp	$8f                         ; 043CFF || 043D55 FE 8F       9895  			CP      TOKLO			; TOKLO is 8Fh
	jr	c,$+$08                     ; 043D57 || 	jr	c,$+$08                     ; 043D01 || 043D57 38 06       9896  			JR      C,LEXAN8		; If A is < 8Fh then skip to LEX8
	cp	$94                         ; 043D59 || 	cp	$94                         ; 043D03 || 043D59 FE 94       9897  			CP      TOKHI+1			; TOKHI is 93h
	jr	nc,$+$04                    ; 043D5B || 	jr	nc,$+$04                    ; 043D05 || 043D5B 30 02       9898  			JR      NC,LEXAN8		; If A is >= 94h then skip to LEX8
	add	a,$40                      ; 043D5D || 	add	a,$40                      ; 043D07 || 043D5D C6 40       9899  			ADD     A,OFFSET       		; Add OFFSET (40h) to make the token the SET version
	cp	$f4                         ; 043D5F || 	cp	$f4                         ; 043D09 || 043D5F FE F4       9901  LEXAN8:			CP      REM			; If the token is REM
	jr	z,$+$06                     ; 043D61 || 	jr	z,$+$06                     ; 043D0B || 043D61 28 04       9902  			JR      Z,LEXAN9		; Then stop tokenising
	cp	$dc                         ; 043D63 || 	cp	$dc                         ; 043D0D || 043D63 FE DC       9903  			CP      DATA_			; If it is not DATA then
	jr	nz,$+$04                    ; 043D65 || 	jr	nz,$+$04                    ; 043D0F || 043D65 20 02       9904  			JR      NZ,LEXANA		; Skip
	set	6,c                        ; 043D67 || 	set	6,c                        ; 043D11 || 043D67 CB F1       9905  LEXAN9:			SET     6,C             	; FLAG: STOP TOKENISING
	cp	$a4                         ; 043D69 || 	cp	$a4                         ; 043D13 || 043D69 FE A4       9907  LEXANA:			CP      FN			; If the token is FN
	jr	z,$+$0c                     ; 043D6B || 	jr	z,$+$0c                     ; 043D15 || 043D6B 28 0A       9908  			JR      Z,LEXANB
	cp	$f2                         ; 043D6D || 	cp	$f2                         ; 043D17 || 043D6D FE F2       9909  			CP      PROC			; Or the token is PROC
	jr	z,$+$08                     ; 043D6F || 	jr	z,$+$08                     ; 043D19 || 043D6F 28 06       9910  			JR      Z,LEXANB		; Then jump to here
	call	$043cdb                   ; 043D71 || 	call	$043c85                   ; 043D1B || 043D71 CD DB 3C 04 9911  			CALL    RANGE2			; Otherwise check the input is alphanumeric, "_" or "`"
	jr	c,$+$04                     ; 043D75 || 	jr	c,$+$04                     ; 043D1F || 043D75 38 02       9912  			JR      C,LEXANC		; Jump here if out of range
	set	5,c                        ; 043D77 || 	set	5,c                        ; 043D21 || 043D77 CB E9       9914  LEXANB:			SET     5,C             	; FLAG: IN VARIABLE/FN/PROC
	cp	$26                         ; 043D79 || 	cp	$26                         ; 043D23 || 043D79 FE 26       9915  LEXANC:			CP      '&'			; Check for hex prefix
	jr	nz,$+$04                    ; 043D7B || 	jr	nz,$+$04                    ; 043D25 || 043D7B 20 02       9916  			JR      NZ,LEXAND		; If not, skip
	set	3,c                        ; 043D7D || 	set	3,c                        ; 043D27 || 043D7D CB D9       9917  			SET     3,C             	; FLAG: IN HEX
	cp	$25                         ; 043D7F || 	cp	$25                         ; 043D29 || 043D7F FE 25       9919  LEXAND:			CP	'%'			; Check for binary prefix
	jr	nz,$+$04                    ; 043D81 || 	jr	nz,$+$04                    ; 043D2B || 043D81 20 02       9920  			JR	NZ,LEXANE		; If not, skip
	set	2,c                        ; 043D83 || 	set	2,c                        ; 043D2D || 043D83 CB D1       9921  			SET	2,C			; FLAG: IN BINARY
	ld	hl,$043da9                  ; 043D85 || 	ld	hl,$043d53                  ; 043D2F || 043D85 21 A9 3D 04 9923  LEXANE:			LD      HL,LIST1		; List of tokens that must be followed by a line number
	push	bc                        ; 043D89 || 	push	bc                        ; 043D33 || 043D89 C5          9924  			PUSH    BC
	ld	bc,$000006                  ; 043D8A || 	ld	bc,$000006                  ; 043D34 || 043D8A 01 06 00 00 9925  			LD      BC,LIST1L		; The list length
	cpir                           ; 043D8E || 	cpir                           ; 043D38 || 043D8E ED B1       9926  			CPIR				; Check if the token is in this list
	pop	bc                         ; 043D90 || 	pop	bc                         ; 043D3A || 043D90 C1          9927  			POP     BC
	jr	nz,$+$04                    ; 043D91 || 	jr	nz,$+$04                    ; 043D3B || 043D91 20 02       9928  			JR      NZ,LEXANF		; If not, then skip
	set	4,c                        ; 043D93 || 	set	4,c                        ; 043D3D || 043D93 CB E1       9929  			SET     4,C             	; FLAG: ACCEPT LINE NUMBER
	ld	hl,$043dad                  ; 043D95 || 	ld	hl,$043d57                  ; 043D3F || 043D95 21 AD 3D 04 9931  LEXANF:			LD      HL,LIST2		; List of tokens that switch the lexical analysis back to LEFT mode
	push	bc                        ; 043D99 || 	push	bc                        ; 043D43 || 043D99 C5          9932  			PUSH    BC
	ld	bc,$000005                  ; 043D9A || 	ld	bc,$000005                  ; 043D44 || 043D9A 01 05 00 00 9933  			LD      BC,LIST2L		; The list length
	cpir                           ; 043D9E || 	cpir                           ; 043D48 || 043D9E ED B1       9934  			CPIR				; Check if the token is in this list
	pop	bc                         ; 043DA0 || 	pop	bc                         ; 043D4A || 043DA0 C1          9935  			POP     BC
	jr	nz,$+$04                    ; 043DA1 || 	jr	nz,$+$04                    ; 043D4B || 043DA1 20 02       9936  			JR      NZ,LEXANG		; If not, then skip
	set	0,c                        ; 043DA3 || 	set	0,c                        ; 043D4D || 043DA3 CB C1       9937  			SET     0,C             	; FLAG: ENTER LEFT MODE
	jp	$043cf1                     ; 043DA5 || 	jp	$043c9b                     ; 043D4F || 043DA5 C3 F1 3C 04 9938  LEXANG:			JP      LEXAN1			; And loop
	push	hl                        ; 043DA9 || 	push	hl                        ; 043D53 || 043DA9 E5          9944  LIST1:			DB	GOTO
	call	po,$8cfcf7                ; 043DAA || 	call	po,$8cfcf7                ; 043D54 || 043DAA E4          9945  			DB	GOSUB
	adc	a,e                        ; 043DAE || 	adc	a,e                        ; 043D58 || 043DAE 8B          9949  			DB	ELSE_
	push	af                        ; 043DAF || 	push	af                        ; 043D59 || 043DAF F5          9951  			DB	REPEAT
	add	a,l                        ; 043DB0 || 	add	a,l                        ; 043D5A || 043DB0 85          9952  			DB	TERROR
	ld	a,($ebe1cb)                 ; 043DB1 || 	ld	a,($ebe1cb)                 ; 043D5B || 043DB1 3A          9953  			DB    	':'
	ld	(hl),$8d                    ; 043DB5 || 	ld	(hl),$8d                    ; 043D5F || 043DB5 36 8D       9971  			LD      (HL), LINO		; Store 8Dh first to flag next bytes as an encoded line number
	inc	hl                         ; 043DB7 || 	inc	hl                         ; 043D61 || 043DB7 23          9972  			INC     HL
	ld	a,d                         ; 043DB8 || 	ld	a,d                         ; 043D62 || 043DB8 7A          9973  			LD      A,D			; Get the high byte
	and	$c0                        ; 043DB9 || 	and	$c0                        ; 043D63 || 043DB9 E6 C0       9974  			AND     0C0H			; Get the top two bits	DD000000
	rrca                           ; 043DBB || 	rrca                           ; 043D65 || 043DBB 0F          9975  			RRCA				; Shift right		00DD0000
	rrca                           ; 043DBC || 	rrca                           ; 043D66 || 043DBC 0F          9976  			RRCA
	ld	b,a                         ; 043DBD || 	ld	b,a                         ; 043D67 || 043DBD 47          9977  			LD      B,A			; Store in B
	ld	a,e                         ; 043DBE || 	ld	a,e                         ; 043D68 || 043DBE 7B          9978  			LD      A,E			; Get the low byte
	and	$c0                        ; 043DBF || 	and	$c0                        ; 043D69 || 043DBF E6 C0       9979  			AND     0C0H			; Get the top two bits	EE000000
	or	b                           ; 043DC1 || 	or	b                           ; 043D6B || 043DC1 B0          9980  			OR      B			; Combine with D	EEDD0000
	rrca                           ; 043DC2 || 	rrca                           ; 043D6C || 043DC2 0F          9981  			RRCA				; Shift right		00EEDD00
	rrca                           ; 043DC3 || 	rrca                           ; 043D6D || 043DC3 0F          9982  			RRCA
	xor	$54                        ; 043DC4 || 	xor	$54                        ; 043D6E || 043DC4 EE 54       9983  			XOR     01010100B		; XOR with 54h
	ld	(hl),a                      ; 043DC6 || 	ld	(hl),a                      ; 043D70 || 043DC6 77          9984  			LD      (HL),A			; Store this as the second byte
	inc	hl                         ; 043DC7 || 	inc	hl                         ; 043D71 || 043DC7 23          9985  			INC     HL
	ld	a,e                         ; 043DC8 || 	ld	a,e                         ; 043D72 || 043DC8 7B          9986  			LD      A,E			; Get the low byte
	and	$3f                        ; 043DC9 || 	and	$3f                        ; 043D73 || 043DC9 E6 3F       9987  			AND     3FH			; Strip the top two bits off
	or	$40                         ; 043DCB || 	or	$40                         ; 043D75 || 043DCB F6 40       9988  			OR      '@'			; OR with 40h
	ld	(hl),a                      ; 043DCD || 	ld	(hl),a                      ; 043D77 || 043DCD 77          9989  			LD      (HL),A			; Store
	inc	hl                         ; 043DCE || 	inc	hl                         ; 043D78 || 043DCE 23          9990  			INC     HL
	ld	a,d                         ; 043DCF || 	ld	a,d                         ; 043D79 || 043DCF 7A          9991  			LD      A,D			; Get the high byte
	and	$3f                        ; 043DD0 || 	and	$3f                        ; 043D7A || 043DD0 E6 3F       9992  			AND     3FH			; Strip the top two bits off
	or	$40                         ; 043DD2 || 	or	$40                         ; 043D7C || 043DD2 F6 40       9993  			OR      '@'			; OR with 40h
	ld	(hl),a                      ; 043DD4 || 	ld	(hl),a                      ; 043D7E || 043DD4 77          9994  			LD      (HL),A			; Store
	inc	hl                         ; 043DD5 || 	inc	hl                         ; 043D7F || 043DD5 23          9995  			INC     HL
	ex	de,hl                       ; 043DD6 || 	ex	de,hl                       ; 043D80 || 043DD6 EB          9996  			EX      DE,HL			; DE: string pointer, HL: line number
	ret                            ; 043DD7 || 	ret                            ; 043D81 || 043DD7 C9          9997  			RET
	ld	hl,($044d2f)                ; 043DD8 || 	ld	hl,($044d2f)                ; 043D82 || 043DD8 2A 2F 4D 04 10004  REPORT:			LD      HL, (ERRTXT)		; Output an error message pointed to by ERRTXT
	ld	a,(hl)                      ; 043DDC || 	ld	a,(hl)                      ; 043D86 || 043DDC 7E          10006  TEXT_:			LD      A, (HL)			; Fetch the character
	inc	hl                         ; 043DDD || 	inc	hl                         ; 043D87 || 043DDD 23          10007  			INC     HL			; Increment pointer to next character
	or	a                           ; 043DDE || 	or	a                           ; 043D88 || 043DDE B7          10008  			OR      A			; Check for the nul (0) string terminator
	ret	z                          ; 043DDF || 	ret	z                          ; 043D89 || 043DDF C8          10009  			RET     Z			; And return if so
	call	$0439c2                   ; 043DE0 || 	call	$04396c                   ; 043D8A || 043DE0 CD C2 39 04 10010  			CALL    OUT_			; Output the character; note that OUT_ will detokenise tokens
	jr	$-$08                       ; 043DE4 || 	jr	$-$08                       ; 043D8E || 043DE4 18 F6       10011  			JR      TEXT_			; And loop
	ex	(sp),hl                     ; 043DE6 || 	ex	(sp),hl                     ; 043D90 || 043DE6 E3          10023  TELL:			EX      (SP), HL		; Get the return address off the stack into HL, this is the
	call	$043ddc                   ; 043DE7 || 	call	$043d86                   ; 043D91 || 043DE7 CD DC 3D 04 10024  			CALL    TEXT_			; first byte of the string that follows it. Print it, then
	ex	(sp),hl                     ; 043DEB || 	ex	(sp),hl                     ; 043D95 || 043DEB E3          10025  			EX      (SP), HL		; HL will point to the next instruction, swap this back onto the stack
	ret                            ; 043DEC || 	ret                            ; 043D96 || 043DEC C9          10026  			RET				; at this point we'll return to the first instruction after the message; --- End main.asm ---
	push	bc                        ; 043DED || 	push	bc                        ; 043D97 || 043DED C5          10066  ASC_TO_NUMBER:		PUSH	BC			; Preserve BC
	ld	de,$000000                  ; 043DEE || 	ld	de,$000000                  ; 043D98 || 043DEE 11 00 00 00 10067  			LD	DE, 0			; Initialise DE
	call	$043e34                   ; 043DF2 || 	call	$043dde                   ; 043D9C || 043DF2 CD 34 3E 04 10068  			CALL	SKIPSPC			; Skip whitespace
	ld	a,(hl)                      ; 043DF6 || 	ld	a,(hl)                      ; 043DA0 || 043DF6 7E          10069  			LD	A, (HL)			; Read first character
	cp	$26                         ; 043DF7 || 	cp	$26                         ; 043DA1 || 043DF7 FE 26       10070  			CP	'&'			; Is it prefixed with '&' (HEX number)?
	jr	nz,$+$21                    ; 043DF9 || 	jr	nz,$+$21                    ; 043DA3 || 043DF9 20 1F       10071  			JR	NZ, ASC_TO_NUMBER3	; Jump to decimal parser if not
	inc	hl                         ; 043DFB || 	inc	hl                         ; 043DA5 || 043DFB 23          10072  			INC	HL			; Otherwise fall through to ASC_TO_HEX
	ld	a,(hl)                      ; 043DFC || 	ld	a,(hl)                      ; 043DA6 || 043DFC 7E          10074  ASC_TO_NUMBER1:		LD	A, (HL)			; Fetch the character
	call	$043e42                   ; 043DFD || 	call	$043dec                   ; 043DA7 || 043DFD CD 42 3E 04 10075  			CALL    UPPERC			; Convert to uppercase
	sub	$30                        ; 043E01 || 	sub	$30                        ; 043DAB || 043E01 D6 30       10076  			SUB	'0'			; Normalise to 0
	jr	c,$+$30                     ; 043E03 || 	jr	c,$+$30                     ; 043DAD || 043E03 38 2E       10077  			JR 	C, ASC_TO_NUMBER4	; Return if < ASCII '0'
	cp	$0a                         ; 043E05 || 	cp	$0a                         ; 043DAF || 043E05 FE 0A       10078  			CP 	10			; Check if >= 10
	jr	c,$+$08                     ; 043E07 || 	jr	c,$+$08                     ; 043DB1 || 043E07 38 06       10079  			JR 	C,ASC_TO_NUMBER2	; No, so skip next bit
	sub	$07                        ; 043E09 || 	sub	$07                        ; 043DB3 || 043E09 D6 07       10080  			SUB 	7			; Adjust ASCII A-F to nibble
	cp	$10                         ; 043E0B || 	cp	$10                         ; 043DB5 || 043E0B FE 10       10081  			CP 	16			; Check for > F
	jr	nc,$+$26                    ; 043E0D || 	jr	nc,$+$26                    ; 043DB7 || 043E0D 30 24       10082  			JR 	NC, ASC_TO_NUMBER4	; Return if out of range
	ex	de,hl                       ; 043E0F || 	ex	de,hl                       ; 043DB9 || 043E0F EB          10083  ASC_TO_NUMBER2:		EX 	DE, HL 			; Shift DE left 4 times
	add	hl,hl                      ; 043E10 || 	add	hl,hl                      ; 043DBA || 043E10 29          10084  			ADD	HL, HL
	add	hl,hl                      ; 043E11 || 	add	hl,hl                      ; 043DBB || 043E11 29          10085  			ADD	HL, HL
	add	hl,hl                      ; 043E12 || 	add	hl,hl                      ; 043DBC || 043E12 29          10086  			ADD	HL, HL
	add	hl,hl                      ; 043E13 || 	add	hl,hl                      ; 043DBD || 043E13 29          10087  			ADD	HL, HL
	ex	de,hl                       ; 043E14 || 	ex	de,hl                       ; 043DBE || 043E14 EB          10088  			EX	DE, HL
	or	e                           ; 043E15 || 	or	e                           ; 043DBF || 043E15 B3          10089  			OR      E			; OR the new digit in to the least significant nibble
	ld	e,a                         ; 043E16 || 	ld	e,a                         ; 043DC0 || 043E16 5F          10090  			LD      E, A
	inc	hl                         ; 043E17 || 	inc	hl                         ; 043DC1 || 043E17 23          10091  			INC     HL			; Onto the next character
	jr	$-$1c                       ; 043E18 || 	jr	$-$1c                       ; 043DC2 || 043E18 18 E2       10092  			JR      ASC_TO_NUMBER1		; And loop
	ld	a,(hl)                      ; 043E1A || 	ld	a,(hl)                      ; 043DC4 || 043E1A 7E          10094  ASC_TO_NUMBER3:		LD	A, (HL)
	sub	$30                        ; 043E1B || 	sub	$30                        ; 043DC5 || 043E1B D6 30       10095  			SUB	'0'			; Normalise to 0
	jr	c,$+$16                     ; 043E1D || 	jr	c,$+$16                     ; 043DC7 || 043E1D 38 14       10096  			JR	C, ASC_TO_NUMBER4	; Return if < ASCII '0'
	cp	$0a                         ; 043E1F || 	cp	$0a                         ; 043DC9 || 043E1F FE 0A       10097  			CP	10			; Check if >= 10
	jr	nc,$+$12                    ; 043E21 || 	jr	nc,$+$12                    ; 043DCB || 043E21 30 10       10098  			JR	NC, ASC_TO_NUMBER4	; Return if >= 10
	ex	de,hl                       ; 043E23 || 	ex	de,hl                       ; 043DCD || 043E23 EB          10099  			EX 	DE, HL 			; Stick DE in HL
	ld	b,h                         ; 043E24 || 	ld	b,h                         ; 043DCE || 043E24 44          10100  			LD	B, H 			; And copy HL into BC
	ld	c,l                         ; 043E25 || 	ld	c,l                         ; 043DCF || 043E25 4D          10101  			LD	C, L
	add	hl,hl                      ; 043E26 || 	add	hl,hl                      ; 043DD0 || 043E26 29          10102  			ADD	HL, HL 			; x 2
	add	hl,hl                      ; 043E27 || 	add	hl,hl                      ; 043DD1 || 043E27 29          10103  			ADD	HL, HL 			; x 4
	add	hl,bc                      ; 043E28 || 	add	hl,bc                      ; 043DD2 || 043E28 09          10104  			ADD	HL, BC 			; x 5
	add	hl,hl                      ; 043E29 || 	add	hl,hl                      ; 043DD3 || 043E29 29          10105  			ADD	HL, HL 			; x 10
	ex	de,hl                       ; 043E2A || 	ex	de,hl                       ; 043DD4 || 043E2A EB          10106  			EX	DE, HL
	add	a,e                        ; 043E2B || 	add	a,e                        ; 043DD5 || 043E2B 83          0001M 		ADD	A, E
	ld	e,a                         ; 043E2C || 	ld	e,a                         ; 043DD6 || 043E2C 5F          0002M 		LD	E, A
	adc	a,d                        ; 043E2D || 	adc	a,d                        ; 043DD7 || 043E2D 8A          0003M 		ADC	A, D
	sub	e                          ; 043E2E || 	sub	e                          ; 043DD8 || 043E2E 93          0004M 		SUB	E
	ld	d,a                         ; 043E2F || 	ld	d,a                         ; 043DD9 || 043E2F 57          0005M 		LD	D, A
	inc	hl                         ; 043E30 || 	inc	hl                         ; 043DDA || 043E30 23          10108  			INC	HL
	jr	$-$17                       ; 043E31 || 	jr	$-$17                       ; 043DDB || 043E31 18 E7       10109  			JR	ASC_TO_NUMBER3
	pop	bc                         ; 043E33 || 	pop	bc                         ; 043DDD || 043E33 C1          10110  ASC_TO_NUMBER4:		POP	BC 			; Fall through to SKIPSPC here
	ld	a,(hl)                      ; 043E34 || 	ld	a,(hl)                      ; 043DDE || 043E34 7E          10115  SKIPSPC:			LD      A, (HL)
	cp	$20                         ; 043E35 || 	cp	$20                         ; 043DDF || 043E35 FE 20       10116  			CP      ' '
	ret	nz                         ; 043E37 || 	ret	nz                         ; 043DE1 || 043E37 C0          10117  			RET     NZ
	inc	hl                         ; 043E38 || 	inc	hl                         ; 043DE2 || 043E38 23          10118  			INC     HL
	jr	$-$05                       ; 043E39 || 	jr	$-$05                       ; 043DE3 || 043E39 18 F9       10119  			JR      SKIPSPC
	ld	a,(hl)                      ; 043E3B || 	ld	a,(hl)                      ; 043DE5 || 043E3B 7E          10124  SKIPNOTSP:		LD	A, (HL)
	cp	$20                         ; 043E3C || 	cp	$20                         ; 043DE6 || 043E3C FE 20       10125  			CP	' '
	ret	z                          ; 043E3E || 	ret	z                          ; 043DE8 || 043E3E C8          10126  			RET	Z
	inc	hl                         ; 043E3F || 	inc	hl                         ; 043DE9 || 043E3F 23          10127  			INC	HL
	jr	$-$05                       ; 043E40 || 	jr	$-$05                       ; 043DEA || 043E40 18 F9       10128  			JR	SKIPNOTSP
	and	$7f                        ; 043E42 || 	and	$7f                        ; 043DEC || 043E42 E6 7F       10133  UPPERC:  		AND     7FH
	cp	$60                         ; 043E44 || 	cp	$60                         ; 043DEE || 043E44 FE 60       10134  			CP      '`'
	ret	c                          ; 043E46 || 	ret	c                          ; 043DF0 || 043E46 D8          10135  			RET     C
	and	$5f                        ; 043E47 || 	and	$5f                        ; 043DF1 || 043E47 E6 5F       10136  			AND     5FH			; Convert to upper case
	ret                            ; 043E49 || 	ret                            ; 043DF3 || 043E49 C9          10137  			RET
	ex	(sp),hl                     ; 043E4A || 	ex	(sp),hl                     ; 043DF4 || 043E4A E3          10142  SWITCH_A:		EX	(SP), HL		; Swap HL with the contents of the top of the stack
	add	a,a                        ; 043E4B || 	add	a,a                        ; 043DF5 || 043E4B 87          10143  			ADD	A, A			; Multiply A by two
	add	a,l                        ; 043E4C || 	add	a,l                        ; 043DF6 || 043E4C 85          0001M 		ADD	A, L
	ld	l,a                         ; 043E4D || 	ld	l,a                         ; 043DF7 || 043E4D 6F          0002M 		LD	L, A
	adc	a,h                        ; 043E4E || 	adc	a,h                        ; 043DF8 || 043E4E 8C          0003M 		ADC	A, H
	sub	l                          ; 043E4F || 	sub	l                          ; 043DF9 || 043E4F 95          0004M 		SUB	L
	ld	h,a                         ; 043E50 || 	ld	h,a                         ; 043DFA || 043E50 67          0005M 		LD	H, A
	ld	a,(hl)                      ; 043E51 || 	ld	a,(hl)                      ; 043DFB || 043E51 7E          10145  			LD	A, (HL)			; follow the call. Fetch an address from the
	inc	hl                         ; 043E52 || 	inc	hl                         ; 043DFC || 043E52 23          10146  			INC	HL 			; table.
	ld	h,(hl)                      ; 043E53 || 	ld	h,(hl)                      ; 043DFD || 043E53 66          10147  			LD	H, (HL)
	ld	l,a                         ; 043E54 || 	ld	l,a                         ; 043DFE || 043E54 6F          10148  			LD	L, A
	ex	(sp),hl                     ; 043E55 || 	ex	(sp),hl                     ; 043DFF || 043E55 E3          10149  			EX	(SP), HL		; Swap this new address back, restores HL
	ret                            ; 043E56 || 	ret                            ; 043E00 || 043E56 C9          10150  			RET				; Return program control to this new address
	push	bc                        ; 043E57 || 	push	bc                        ; 043E01 || 043E57 C5          10155  NULLTOCR:		PUSH 	BC
	ld	b,$00                       ; 043E58 || 	ld	b,$00                       ; 043E02 || 043E58 06 00       10156  			LD	B, 0
	ld	c,$0d                       ; 043E5A || 	ld	c,$0d                       ; 043E04 || 043E5A 0E 0D       10157  			LD	C, CR
	jr	$+$07                       ; 043E5C || 	jr	$+$07                       ; 043E06 || 043E5C 18 05       10158  			JR	CRTONULL0
	push	bc                        ; 043E5E || 	push	bc                        ; 043E08 || 043E5E C5          10160  CRTONULL:		PUSH	BC
	ld	b,$0d                       ; 043E5F || 	ld	b,$0d                       ; 043E09 || 043E5F 06 0D       10161  			LD	B, CR
	ld	c,$00                       ; 043E61 || 	ld	c,$00                       ; 043E0B || 043E61 0E 00       10162  			LD	C, 0
	push	hl                        ; 043E63 || 	push	hl                        ; 043E0D || 043E63 E5          10164  CRTONULL0:		PUSH	HL
	ld	a,(hl)                      ; 043E64 || 	ld	a,(hl)                      ; 043E0E || 043E64 7E          10165  CRTONULL1:		LD	A, (HL)
	cp	b                           ; 043E65 || 	cp	b                           ; 043E0F || 043E65 B8          10166  			CP 	B
	jr	z,$+$05                     ; 043E66 || 	jr	z,$+$05                     ; 043E10 || 043E66 28 03       10167  			JR	Z, CRTONULL2
	inc	hl                         ; 043E68 || 	inc	hl                         ; 043E12 || 043E68 23          10168  			INC	HL
	jr	$-$05                       ; 043E69 || 	jr	$-$05                       ; 043E13 || 043E69 18 F9       10169  			JR	CRTONULL1
	ld	(hl),c                      ; 043E6B || 	ld	(hl),c                      ; 043E15 || 043E6B 71          10170  CRTONULL2:		LD	(HL), C
	pop	hl                         ; 043E6C || 	pop	hl                         ; 043E16 || 043E6C E1          10171  			POP 	HL
	pop	bc                         ; 043E6D || 	pop	bc                         ; 043E17 || 043E6D C1          10172  			POP	BC
	ret                            ; 043E6E || 	ret                            ; 043E18 || 043E6E C9          10173  			RET
	ld	a,(hl)                      ; 043E6F || 	ld	a,(hl)                      ; 043E19 || 043E6F 7E          10179  CSTR_FNAME:		LD	A, (HL)			; Get source
	cp	$20                         ; 043E70 || 	cp	$20                         ; 043E1A || 043E70 FE 20       10180  			CP	32			; Is it space
	jr	z,$+$0b                     ; 043E72 || 	jr	z,$+$0b                     ; 043E1C || 043E72 28 09       10181  			JR	Z, @F
	cp	$0d                         ; 043E74 || 	cp	$0d                         ; 043E1E || 043E74 FE 0D       10182  			CP	CR			; Or is it CR
	jr	z,$+$07                     ; 043E76 || 	jr	z,$+$07                     ; 043E20 || 043E76 28 05       10183  			JR	Z, @F
	ld	(de),a                      ; 043E78 || 	ld	(de),a                      ; 043E22 || 043E78 12          10184  			LD	(DE), A			; No, so store
	inc	hl                         ; 043E79 || 	inc	hl                         ; 043E23 || 043E79 23          10185  			INC	HL			; Increment
	inc	de                         ; 043E7A || 	inc	de                         ; 043E24 || 043E7A 13          10186  			INC	DE
	jr	$-$0c                       ; 043E7B || 	jr	$-$0c                       ; 043E25 || 043E7B 18 F2       10187  			JR	CSTR_FNAME		; And loop
	xor	a                          ; 043E7D || 	xor	a                          ; 043E27 || 043E7D AF          10188  @@:			XOR	A			; Zero terminate the target string
	ld	(de),a                      ; 043E7E || 	ld	(de),a                      ; 043E28 || 043E7E 12          10189  			LD	(DE), A
	inc	de                         ; 043E7F || 	inc	de                         ; 043E29 || 043E7F 13          10190  			INC	DE			; And point to next free address
	ret                            ; 043E80 || 	ret                            ; 043E2A || 043E80 C9          10191  			RET
	ld	a,(hl)                      ; 043E81 || 	ld	a,(hl)                      ; 043E2B || 043E81 7E          10197  CSTR_LINE:		LD	A, (HL)			; Get source
	cp	$0d                         ; 043E82 || 	cp	$0d                         ; 043E2C || 043E82 FE 0D       10198  			CP	CR			; Is it CR
	jr	z,$+$07                     ; 043E84 || 	jr	z,$+$07                     ; 043E2E || 043E84 28 05       10199  			JR	Z, @F
	ld	(de),a                      ; 043E86 || 	ld	(de),a                      ; 043E30 || 043E86 12          10200  			LD	(DE), A			; No, so store
	inc	hl                         ; 043E87 || 	inc	hl                         ; 043E31 || 043E87 23          10201  			INC	HL			; Increment
	inc	de                         ; 043E88 || 	inc	de                         ; 043E32 || 043E88 13          10202  			INC	DE
	jr	$-$08                       ; 043E89 || 	jr	$-$08                       ; 043E33 || 043E89 18 F6       10203  			JR	CSTR_LINE		; And loop
	xor	a                          ; 043E8B || 	xor	a                          ; 043E35 || 043E8B AF          10204  @@:			XOR	A			; Zero terminate the target string
	ld	(de),a                      ; 043E8C || 	ld	(de),a                      ; 043E36 || 043E8C 12          10205  			LD	(DE), A
	inc	de                         ; 043E8D || 	inc	de                         ; 043E37 || 043E8D 13          10206  			INC	DE			; And point to next free address
	ret                            ; 043E8E || 	ret                            ; 043E38 || 043E8E C9          10207  			RET
	ld	a,(hl)                      ; 043E8F || 	ld	a,(hl)                      ; 043E39 || 043E8F 7E          10215  CSTR_FINDCH:		LD	A, (HL)			; Get source
	cp	c                           ; 043E90 || 	cp	c                           ; 043E3A || 043E90 B9          10216  			CP	C			; Is it our character?
	ret	z                          ; 043E91 || 	ret	z                          ; 043E3B || 043E91 C8          10217  			RET	Z			; Yes, so exit
	or	a                           ; 043E92 || 	or	a                           ; 043E3C || 043E92 B7          10218  			OR	A			; Is it the end of string?
	ret	z                          ; 043E93 || 	ret	z                          ; 043E3D || 043E93 C8          10219  			RET	Z			; Yes, so exit
	inc	hl                         ; 043E94 || 	inc	hl                         ; 043E3E || 043E94 23          10220  			INC	HL
	jr	$-$06                       ; 043E95 || 	jr	$-$06                       ; 043E3F || 043E95 18 F8       10221  			JR	CSTR_FINDCH
	ld	a,(hl)                      ; 043E97 || 	ld	a,(hl)                      ; 043E41 || 043E97 7E          10229  CSTR_ENDSWITH:		LD	A, (HL)			; Get the source string byte
	call	$043e42                   ; 043E98 || 	call	$043dec                   ; 043E42 || 043E98 CD 42 3E 04 10230  			CALL	UPPERC			; Convert to upper case
	ld	c,a                         ; 043E9C || 	ld	c,a                         ; 043E46 || 043E9C 4F          10231  			LD	C, A
	ld	a,(de)                      ; 043E9D || 	ld	a,(de)                      ; 043E47 || 043E9D 1A          10232  			LD	A, (DE)			; Get the substring byte
	cp	c                           ; 043E9E || 	cp	c                           ; 043E48 || 043E9E B9          10233  			CP	C
	ret	nz                         ; 043E9F || 	ret	nz                         ; 043E49 || 043E9F C0          10234  			RET	NZ			; Return NZ if at any point the strings don't match
	or	c                           ; 043EA0 || 	or	c                           ; 043E4A || 043EA0 B1          10235  			OR	C			; Check whether both bytes are zero
	ret	z                          ; 043EA1 || 	ret	z                          ; 043E4B || 043EA1 C8          10236  			RET	Z			; If so, return, as we have reached the end of both strings
	inc	hl                         ; 043EA2 || 	inc	hl                         ; 043E4C || 043EA2 23          10237  			INC	HL
	inc	de                         ; 043EA3 || 	inc	de                         ; 043E4D || 043EA3 13          10238  			INC	DE
	jr	$-$0d                       ; 043EA4 || 	jr	$-$0d                       ; 043E4E || 043EA4 18 F1       10239  			JR	CSTR_ENDSWITH		; And loop
	ld	a,(hl)                      ; 043EA6 || 	ld	a,(hl)                      ; 043E50 || 043EA6 7E          10245  CSTR_CAT:		LD	A, (HL)			; Loop until we find the end of the first string
	or	a                           ; 043EA7 || 	or	a                           ; 043E51 || 043EA7 B7          10246  			OR	A
	jr	z,$+$05                     ; 043EA8 || 	jr	z,$+$05                     ; 043E52 || 043EA8 28 03       10247  			JR	Z, CSTR_CAT_1
	inc	hl                         ; 043EAA || 	inc	hl                         ; 043E54 || 043EAA 23          10248  			INC	HL
	jr	$-$05                       ; 043EAB || 	jr	$-$05                       ; 043E55 || 043EAB 18 F9       10249  			JR	CSTR_CAT
	ld	a,(de)                      ; 043EAD || 	ld	a,(de)                      ; 043E57 || 043EAD 1A          10251  CSTR_CAT_1:		LD	A, (DE)			; Copy the second string onto the end of the first string
	ld	(hl),a                      ; 043EAE || 	ld	(hl),a                      ; 043E58 || 043EAE 77          10252  			LD	(HL), A
	or	a                           ; 043EAF || 	or	a                           ; 043E59 || 043EAF B7          10253  			OR	A			; Check for end of string
	ret	z                          ; 043EB0 || 	ret	z                          ; 043E5A || 043EB0 C8          10254  			RET	Z			; And return
	inc	hl                         ; 043EB1 || 	inc	hl                         ; 043E5B || 043EB1 23          10255  			INC	HL
	inc	de                         ; 043EB2 || 	inc	de                         ; 043E5C || 043EB2 13          10256  			INC	DE
	jr	$-$06                       ; 043EB3 || 	jr	$-$06                       ; 043E5D || 043EB3 18 F8       10257  			JR	CSTR_CAT_1		; Loop until finished						; --- End misc.asm ---
	ld	e,$01                       ; 043EB5 || 	ld	e,$01                       ; 043E5F || 043EB5 1E 01       10354  OSLINE:			LD 	E, 1			; Default is to clear the buffer
	push	iy                        ; 043EB7 || 	push	iy                        ; 043E61 || 043EB7 FD E5       10358  OSLINE1:		PUSH	IY
	push	hl                        ; 043EB9 || 	push	hl                        ; 043E63 || 043EB9 E5          10359  			PUSH	HL			; Buffer address
	ld	bc,$000100                  ; 043EBA || 	ld	bc,$000100                  ; 043E64 || 043EBA 01 00 01 00 10360  			LD	BC, 256			; Buffer length
	ld	a,$09                       ; 043EBE || 	ld	a,$09                       ; 043E68 || 043EBE 3E 09       0001M 			LD	A, function
	rst.lis	$08                    ; 043EC0 || 	rst.lis	$08                    ; 043E6A || 043EC0 49 CF       0002M 			RST.LIS	08h
	pop	hl                         ; 043EC2 || 	pop	hl                         ; 043E6C || 043EC2 E1          10362  			POP	HL			; Pop the address
	pop	iy                         ; 043EC3 || 	pop	iy                         ; 043E6D || 043EC3 FD E1       10363  			POP	IY
	push	af                        ; 043EC5 || 	push	af                        ; 043E6F || 043EC5 F5          10364  			PUSH	AF			; Stack the return value (key pressed)
	call	$043e57                   ; 043EC6 || 	call	$043e01                   ; 043E70 || 043EC6 CD 57 3E 04 10365  			CALL	NULLTOCR		; Turn the 0 character to a CR
	call	$04399d                   ; 043ECA || 	call	$043947                   ; 043E74 || 043ECA CD 9D 39 04 10366  			CALL	CRLF			; Display CRLF
	pop	af                         ; 043ECE || 	pop	af                         ; 043E78 || 043ECE F1          10367  			POP	AF
	cp	$1b                         ; 043ECF || 	cp	$1b                         ; 043E79 || 043ECF FE 1B       10368  			CP	1Bh 			; Check if ESC terminated the input
	jp	z,$043fcd                   ; 043ED1 || 	jp	z,$043f77                   ; 043E7B || 043ED1 CA CD 3F 04 10369  			JP	Z, LTRAP1 		; Yes, so do the ESC thing
	ld	a,($044d42)                 ; 043ED5 || 	ld	a,($044d42)                 ; 043E7F || 043ED5 3A 42 4D 04 10370  			LD	A, (FLAGS)		; Otherwise
	res	7,a                        ; 043ED9 || 	res	7,a                        ; 043E83 || 043ED9 CB BF       10371  			RES	7, A 			; Clear the escape flag
	ld	($044d42),a                 ; 043EDB || 	ld	($044d42),a                 ; 043E85 || 043EDB 32 42 4D 04 10372  			LD	(FLAGS), A
	call	$0441a4                   ; 043EDF || 	call	$04413d                   ; 043E89 || 043EDF CD A4 41 04 10373  			CALL	WAIT_VBLANK 		; Wait a frame
	xor	a                          ; 043EE3 || 	xor	a                          ; 043E8D || 043EE3 AF          10374   			XOR	A			; Return A = 0
	ld	($044d47),a                 ; 043EE4 || 	ld	($044d47),a                 ; 043E8E || 043EE4 32 47 4D 04 10375  			LD	(KEYDOWN), A
	ld	($044d48),a                 ; 043EE8 || 	ld	($044d48),a                 ; 043E92 || 043EE8 32 48 4D 04 10376  			LD	(KEYASCII), A
	ret                            ; 043EEC || 	ret                            ; 043E96 || 043EEC C9          10377  			RET
	push	ix                        ; 043EED || 	push	ix                        ; 043E97 || 043EED DD E5       10381  PUTIME:			PUSH 	IX
	ld	a,$08                       ; 043EEF || 	ld	a,$08                       ; 043E99 || 043EEF 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 043EF1 || 	rst.lis	$08                    ; 043E9B || 043EF1 49 CF       0002M 			RST.LIS	08h
	ld	(ix),l                      ; 043EF3 || 	ld	(ix),l                      ; 043E9D || 043EF3 DD 75 00    10383  			LD	(IX + sysvar_time + 0), L
	ld	(ix+$01),h                  ; 043EF6 || 	ld	(ix+$01),h                  ; 043EA0 || 043EF6 DD 74 01    10384  			LD	(IX + sysvar_time + 1), H
	ld	(ix+$02),e                  ; 043EF9 || 	ld	(ix+$02),e                  ; 043EA3 || 043EF9 DD 73 02    10385  			LD	(IX + sysvar_time + 2), E
	ld	(ix+$03),d                  ; 043EFC || 	ld	(ix+$03),d                  ; 043EA6 || 043EFC DD 72 03    10386  			LD	(IX + sysvar_time + 3), D
	pop	ix                         ; 043EFF || 	pop	ix                         ; 043EA9 || 043EFF DD E1       10387  			POP	IX
	ret                            ; 043F01 || 	ret                            ; 043EAB || 043F01 C9          10388  			RET
	push	ix                        ; 043F02 || 	push	ix                        ; 043EAC || 043F02 DD E5       10392  GETIME:			PUSH 	IX
	ld	a,$08                       ; 043F04 || 	ld	a,$08                       ; 043EAE || 043F04 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 043F06 || 	rst.lis	$08                    ; 043EB0 || 043F06 49 CF       0002M 			RST.LIS	08h
	ld	l,(ix)                      ; 043F08 || 	ld	l,(ix)                      ; 043EB2 || 043F08 DD 6E 00    10394  			LD	L, (IX + sysvar_time + 0)
	ld	h,(ix+$01)                  ; 043F0B || 	ld	h,(ix+$01)                  ; 043EB5 || 043F0B DD 66 01    10395  			LD	H, (IX + sysvar_time + 1)
	ld	e,(ix+$02)                  ; 043F0E || 	ld	e,(ix+$02)                  ; 043EB8 || 043F0E DD 5E 02    10396  			LD	E, (IX + sysvar_time + 2)
	ld	d,(ix+$03)                  ; 043F11 || 	ld	d,(ix+$03)                  ; 043EBB || 043F11 DD 56 03    10397  			LD	D, (IX + sysvar_time + 3)
	pop	ix                         ; 043F14 || 	pop	ix                         ; 043EBE || 043F14 DD E1       10398  			POP	IX
	ret                            ; 043F16 || 	ret                            ; 043EC0 || 043F16 C9          10399  			RET
	ld	a,$1f                       ; 043F17 || 	ld	a,$1f                       ; 043EC1 || 043F17 3E 1F       10403  PUTCSR:			LD	A, 1Fh			; TAB
	rst.lil	$10                    ; 043F19 || 	rst.lil	$10                    ; 043EC3 || 043F19 5B D7       10404  			RST.LIL	10h
	ld	a,e                         ; 043F1B || 	ld	a,e                         ; 043EC5 || 043F1B 7B          10405  			LD	A, E			; X
	rst.lil	$10                    ; 043F1C || 	rst.lil	$10                    ; 043EC6 || 043F1C 5B D7       10406  			RST.LIL 10h
	ld	a,l                         ; 043F1E || 	ld	a,l                         ; 043EC8 || 043F1E 7D          10407  			LD	A, L			; Y
	rst.lil	$10                    ; 043F1F || 	rst.lil	$10                    ; 043EC9 || 043F1F 5B D7       10408  			RST.LIL 10h
	ret                            ; 043F21 || 	ret                            ; 043ECB || 043F21 C9          10409  			RET
	push	ix                        ; 043F22 || 	push	ix                        ; 043ECC || 043F22 DD E5       10413  GETCSR:			PUSH	IX			; Get the system vars in IX
	ld	a,$08                       ; 043F24 || 	ld	a,$08                       ; 043ECE || 043F24 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 043F26 || 	rst.lis	$08                    ; 043ED0 || 043F26 49 CF       0002M 			RST.LIS	08h
	res	0,(ix+$04)                 ; 043F28 || 	res	0,(ix+$04)                 ; 043ED2 || 043F28 DD CB 04 86 10415  			RES	0, (IX+sysvar_vpd_pflags)
	ld	a,$17                       ; 043F2C || 	ld	a,$17                       ; 043ED6 || 043F2C 3E 17       0001M 		LD	A, val
	call	$043f56                   ; 043F2E || 	call	$043f00                   ; 043ED8 || 043F2E CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 043F32 || 	ld	a,$00                       ; 043EDC || 043F32 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 043F34 || 	call	$043f00                   ; 043EDE || 043F34 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$82                       ; 043F38 || 	ld	a,$82                       ; 043EE2 || 043F38 3E 82       0001M 		LD	A, val
	call	$043f56                   ; 043F3A || 	call	$043f00                   ; 043EE4 || 043F3A CD 56 3F 04 0002M 		CALL	OSWRCH
	bit	0,(ix+$04)                 ; 043F3E || 	bit	0,(ix+$04)                 ; 043EE8 || 043F3E DD CB 04 46 10419  @@:			BIT	0, (IX+sysvar_vpd_pflags)
	jr	z,$-$04                     ; 043F42 || 	jr	z,$-$04                     ; 043EEC || 043F42 28 FA       10420  			JR	Z, @B			; Wait for the result
	ld	d,$00                       ; 043F44 || 	ld	d,$00                       ; 043EEE || 043F44 16 00       10421  			LD 	D, 0
	ld	h,d                         ; 043F46 || 	ld	h,d                         ; 043EF0 || 043F46 62          10422  			LD	H, D
	ld	e,(ix+$07)                  ; 043F47 || 	ld	e,(ix+$07)                  ; 043EF1 || 043F47 DD 5E 07    10423  			LD	E, (IX + sysvar_cursorX)
	ld	l,(ix+$08)                  ; 043F4A || 	ld	l,(ix+$08)                  ; 043EF4 || 043F4A DD 6E 08    10424  			LD	L, (IX + sysvar_cursorY)
	pop	ix                         ; 043F4D || 	pop	ix                         ; 043EF7 || 043F4D DD E1       10425  			POP	IX
	ret                            ; 043F4F || 	ret                            ; 043EF9 || 043F4F C9          10426  			RET
	ld	a,$3e                       ; 043F50 || 	ld	a,$3e                       ; 043EFA || 043F50 3E 3E       10430  PROMPT: 		LD	A,'>'
	jp	$043f56                     ; 043F52 || 	jp	$043f00                     ; 043EFC || 043F52 C3 56 3F 04 10431  			JP	OSWRCH
	push	hl                        ; 043F56 || 	push	hl                        ; 043F00 || 043F56 E5          10436  OSWRCH:			PUSH	HL
	ld	hl,$044d40                  ; 043F57 || 	ld	hl,$044d40                  ; 043F01 || 043F57 21 40 4D 04 10437  			LD	HL, LISTON		; Fetch the LISTON variable
	bit	3,(hl)                     ; 043F5B || 	bit	3,(hl)                     ; 043F05 || 043F5B CB 5E       10438  			BIT	3, (HL)			; Check whether we are in *EDIT mode
	jr	nz,$+$0d                    ; 043F5D || 	jr	nz,$+$0d                    ; 043F07 || 043F5D 20 0B       10439  			JR	NZ, OSWRCH_BUFFER	; Yes, so just output to buffer
	ld	hl,($044d45)                ; 043F5F || 	ld	hl,($044d45)                ; 043F09 || 043F5F 2A 45 4D 04 10441  			LD	HL, (OSWRCHCH)		; L: Channel #
	dec	l                          ; 043F63 || 	dec	l                          ; 043F0D || 043F63 2D          10442  			DEC	L			; If it is 1
	jr	z,$+$12                     ; 043F64 || 	jr	z,$+$12                     ; 043F0E || 043F64 28 10       10443  			JR	Z, OSWRCH_FILE		; Then we are outputting to a file
	pop	hl                         ; 043F66 || 	pop	hl                         ; 043F10 || 043F66 E1          10445  			POP	HL			; Otherwise
	rst.lil	$10                    ; 043F67 || 	rst.lil	$10                    ; 043F11 || 043F67 5B D7       10446  			RST.LIL	10h			; Output the character to MOS
	ret                            ; 043F69 || 	ret                            ; 043F13 || 043F69 C9          10447  			RET
	ld	hl,($044d43)                ; 043F6A || 	ld	hl,($044d43)                ; 043F14 || 043F6A 2A 43 4D 04 10449  OSWRCH_BUFFER:		LD	HL, (OSWRCHPT)		; Fetch the pointer buffer
	ld	(hl),a                      ; 043F6E || 	ld	(hl),a                      ; 043F18 || 043F6E 77          10450  			LD	(HL), A			; Echo the character into the buffer
	inc	hl                         ; 043F6F || 	inc	hl                         ; 043F19 || 043F6F 23          10451  			INC	HL			; Increment pointer
	ld	($044d43),hl                ; 043F70 || 	ld	($044d43),hl                ; 043F1A || 043F70 22 43 4D 04 10452  			LD	(OSWRCHPT), HL		; Write pointer back
	pop	hl                         ; 043F74 || 	pop	hl                         ; 043F1E || 043F74 E1          10453  			POP	HL
	ret                            ; 043F75 || 	ret                            ; 043F1F || 043F75 C9          10454  			RET
	push	de                        ; 043F76 || 	push	de                        ; 043F20 || 043F76 D5          10456  OSWRCH_FILE:		PUSH	DE
	ld	e,h                         ; 043F77 || 	ld	e,h                         ; 043F21 || 043F77 5C          10457  			LD	E, H			; Filehandle to E
	call	$0443a2                   ; 043F78 || 	call	$04433b                   ; 043F22 || 043F78 CD A2 43 04 10458  			CALL	OSBPUT			; Write the byte out
	pop	de                         ; 043F7C || 	pop	de                         ; 043F26 || 043F7C D1          10459  			POP	DE
	pop	hl                         ; 043F7D || 	pop	hl                         ; 043F27 || 043F7D E1          10460  			POP	HL
	ret                            ; 043F7E || 	ret                            ; 043F28 || 043F7E C9          10461  			RET
	ld	a,$00                       ; 043F7F || 	ld	a,$00                       ; 043F29 || 043F7F 3E 00       0001M 			LD	A, function
	rst.lis	$08                    ; 043F81 || 	rst.lis	$08                    ; 043F2B || 043F81 49 CF       0002M 			RST.LIS	08h
	cp	$1b                         ; 043F83 || 	cp	$1b                         ; 043F2D || 043F83 FE 1B       10467  			CP	1Bh
	jr	z,$+$48                     ; 043F85 || 	jr	z,$+$48                     ; 043F2F || 043F85 28 46       10468  			JR	Z, LTRAP1
	ret                            ; 043F87 || 	ret                            ; 043F31 || 043F87 C9          10469  			RET
	call	$043fb9                   ; 043F88 || 	call	$043f63                   ; 043F32 || 043F88 CD B9 3F 04 10479  OSKEY:			CALL	READKEY			; Read the keyboard
	jr	z,$+$0c                     ; 043F8C || 	jr	z,$+$0c                     ; 043F36 || 043F8C 28 0A       10480  			JR	Z, @F 			; Skip if we have a key
	ld	a,h                         ; 043F8E || 	ld	a,h                         ; 043F38 || 043F8E 7C          10481  			LD	A, H 			; Check loop counter
	or	l                           ; 043F8F || 	or	l                           ; 043F39 || 043F8F B5          10482  			OR 	L
	ret	z                          ; 043F90 || 	ret	z                          ; 043F3A || 043F90 C8          10483  			RET 	Z 			; Return, we've not got a key at this point
	call	$0441a4                   ; 043F91 || 	call	$04413d                   ; 043F3B || 043F91 CD A4 41 04 10484  			CALL	WAIT_VBLANK 		; Wait a frame
	dec	hl                         ; 043F95 || 	dec	hl                         ; 043F3F || 043F95 2B          10485  			DEC 	HL			; Decrement
	jr	$-$0e                       ; 043F96 || 	jr	$-$0e                       ; 043F40 || 043F96 18 F0       10486  			JR	OSKEY 			; And loop
	ld	hl,$044d47                  ; 043F98 || 	ld	hl,$044d47                  ; 043F42 || 043F98 21 47 4D 04 10488  @@:			LD	HL, KEYDOWN		; We have a key, so
	ld	(hl),$00                    ; 043F9C || 	ld	(hl),$00                    ; 043F46 || 043F9C 36 00       10489  			LD	(HL), 0			; clear the keydown flag
	cp	$1b                         ; 043F9E || 	cp	$1b                         ; 043F48 || 043F9E FE 1B       10490  			CP	1BH			; If we are not pressing ESC,
	scf                            ; 043FA0 || 	scf                            ; 043F4A || 043FA0 37          10491  			SCF 				; then flag we've got a character
	ret	nz                         ; 043FA1 || 	ret	nz                         ; 043F4B || 043FA1 C0          10492  			RET	NZ
	push	hl                        ; 043FA2 || 	push	hl                        ; 043F4C || 043FA2 E5          10497  ESCSET: 		PUSH    HL
	ld	hl,$044d42                  ; 043FA3 || 	ld	hl,$044d42                  ; 043F4D || 043FA3 21 42 4D 04 10498          		LD      HL,FLAGS		; Pointer to FLAGS
	bit	6,(hl)                     ; 043FA7 || 	bit	6,(hl)                     ; 043F51 || 043FA7 CB 76       10499          		BIT     6,(HL)			; If bit 6 is set, then
	jr	nz,$+$04                    ; 043FA9 || 	jr	nz,$+$04                    ; 043F53 || 043FA9 20 02       10500          		JR      NZ,ESCDIS		; escape is disabled, so skip
	set	7,(hl)                     ; 043FAB || 	set	7,(hl)                     ; 043F55 || 043FAB CB FE       10501          		SET     7,(HL)			; Set bit 7, the escape flag
	pop	hl                         ; 043FAD || 	pop	hl                         ; 043F57 || 043FAD E1          10502  ESCDIS: 		POP     HL
	ret                            ; 043FAE || 	ret                            ; 043F58 || 043FAE C9          10503          		RET
	call	$043fb9                   ; 043FAF || 	call	$043f63                   ; 043F59 || 043FAF CD B9 3F 04 10508  ESCTEST:		CALL	READKEY			; Read the keyboard
	ret	nz                         ; 043FB3 || 	ret	nz                         ; 043F5D || 043FB3 C0          10509  			RET	NZ			; Skip if no key is pressed
	cp	$1b                         ; 043FB4 || 	cp	$1b                         ; 043F5E || 043FB4 FE 1B       10510  			CP	1BH			; If ESC pressed then
	jr	z,$-$14                     ; 043FB6 || 	jr	z,$-$14                     ; 043F60 || 043FB6 28 EA       10511  			JR	Z,ESCSET		; jump to the escape set routine
	ret                            ; 043FB8 || 	ret                            ; 043F62 || 043FB8 C9          10512  			RET
	ld	a,($044d47)                 ; 043FB9 || 	ld	a,($044d47)                 ; 043F63 || 043FB9 3A 47 4D 04 10519  READKEY:		LD	A, (KEYDOWN)		; Get key down
	dec	a                          ; 043FBD || 	dec	a                          ; 043F67 || 043FBD 3D          10520  			DEC	A 			; Set Z flag if keydown is 1
	ld	a,($044d48)                 ; 043FBE || 	ld	a,($044d48)                 ; 043F68 || 043FBE 3A 48 4D 04 10521  			LD	A, (KEYASCII)		; Get key ASCII value
	ret                            ; 043FC2 || 	ret                            ; 043F6C || 043FC2 C9          10522  			RET
	call	$043faf                   ; 043FC3 || 	call	$043f59                   ; 043F6D || 043FC3 CD AF 3F 04 10527  TRAP:			CALL	ESCTEST			; Read keyboard, test for ESC, set FLAGS
	ld	a,($044d42)                 ; 043FC7 || 	ld	a,($044d42)                 ; 043F71 || 043FC7 3A 42 4D 04 10529  LTRAP:			LD	A,(FLAGS)		; Get FLAGS
	or	a                           ; 043FCB || 	or	a                           ; 043F75 || 043FCB B7          10530  			OR	A			; This checks for bit 7; if it is not set then the result will
	ret	p                          ; 043FCC || 	ret	p                          ; 043F76 || 043FCC F0          10531  			RET	P			; be positive (bit 7 is the sign bit in Z80), so return
	ld	hl,$044d42                  ; 043FCD || 	ld	hl,$044d42                  ; 043F77 || 043FCD 21 42 4D 04 10532  LTRAP1:			LD	HL,FLAGS 		; Escape is pressed at this point, so
	res	7,(hl)                     ; 043FD1 || 	res	7,(hl)                     ; 043F7B || 043FD1 CB BE       10533  			RES	7,(HL)			; Clear the escape pressed flag and
	jp	$040ca3                     ; 043FD3 || 	jp	$040c9b                     ; 043F7D || 043FD3 C3 A3 0C 04 10534  			JP	ESCAPE			; Jump to the ESCAPE error routine in exec.asm
	call	$04493c                   ; 043FD7 || 	call	$0448e0                   ; 043F81 || 043FD7 CD 3C 49 04 10544  OSINIT:			CALL	VBLANK_INIT
	xor	a                          ; 043FDB || 	xor	a                          ; 043F85 || 043FDB AF          10545  			XOR	A
	ld	hl,$044e00                  ; 043FDC || 	ld	hl,$044e00                  ; 043F86 || 043FDC 21 00 4E 04 10546  			LD 	HL, USER
	ld	de,$0b0000                  ; 043FE0 || 	ld	de,$0b0000                  ; 043F8A || 043FE0 11 00 00 0B 10547  			LD	DE, RAM_Top
	ld	e,a                         ; 043FE4 || 	ld	e,a                         ; 043F8E || 043FE4 5F          10548  			LD	E, A			; Page boundary
	ret                            ; 043FE5 || 	ret                            ; 043F8F || 043FE5 C9          10549  			RET
	call	$04405a                   ; 043FE6 || 	call	$044004                   ; 043F90 || 043FE6 CD 5A 40 04 10554  OSCLI: 			CALL    SKIPSP
	cp	$0d                         ; 043FEA || 	cp	$0d                         ; 043F94 || 043FEA FE 0D       10555  			CP      CR
	ret	z                          ; 043FEC || 	ret	z                          ; 043F96 || 043FEC C8          10556  			RET     Z
	cp	$7c                         ; 043FED || 	cp	$7c                         ; 043F97 || 043FED FE 7C       10557  			CP      '|'
	ret	z                          ; 043FEF || 	ret	z                          ; 043F99 || 043FEF C8          10558  			RET     Z
	ex	de,hl                       ; 043FF0 || 	ex	de,hl                       ; 043F9A || 043FF0 EB          10559  			EX      DE,HL
	ld	hl,$044069                  ; 043FF1 || 	ld	hl,$044013                  ; 043F9B || 043FF1 21 69 40 04 10560  			LD      HL,COMDS
	ld	a,(de)                      ; 043FF5 || 	ld	a,(de)                      ; 043F9F || 043FF5 1A          10561  OSCLI0:			LD      A,(DE)
	call	$044061                   ; 043FF6 || 	call	$04400b                   ; 043FA0 || 043FF6 CD 61 40 04 10562  			CALL    UPPRC
	cp	(hl)                        ; 043FFA || 	cp	(hl)                        ; 043FA4 || 043FFA BE          10563  			CP      (HL)
	jr	z,$+$0d                     ; 043FFB || 	jr	z,$+$0d                     ; 043FA5 || 043FFB 28 0B       10564  			JR      Z,OSCLI2
	jr	c,$+$32                     ; 043FFD || 	jr	c,$+$32                     ; 043FA7 || 043FFD 38 30       10565  			JR      C,OSCLI6
	bit	7,(hl)                     ; 043FFF || 	bit	7,(hl)                     ; 043FA9 || 043FFF CB 7E       10566  OSCLI1:			BIT     7,(HL)
	inc	hl                         ; 044001 || 	inc	hl                         ; 043FAB || 044001 23          10567  			INC     HL
	jr	z,$-$03                     ; 044002 || 	jr	z,$-$03                     ; 043FAC || 044002 28 FB       10568  			JR      Z,OSCLI1
	inc	hl                         ; 044004 || 	inc	hl                         ; 043FAE || 044004 23          10569  			INC     HL
	inc	hl                         ; 044005 || 	inc	hl                         ; 043FAF || 044005 23          10570  			INC     HL
	jr	$-$11                       ; 044006 || 	jr	$-$11                       ; 043FB0 || 044006 18 ED       10571  			JR      OSCLI0
	push	de                        ; 044008 || 	push	de                        ; 043FB2 || 044008 D5          10573  OSCLI2:			PUSH    DE
	inc	de                         ; 044009 || 	inc	de                         ; 043FB3 || 044009 13          10574  OSCLI3:			INC     DE
	inc	hl                         ; 04400A || 	inc	hl                         ; 043FB4 || 04400A 23          10575  			INC     HL
	ld	a,(de)                      ; 04400B || 	ld	a,(de)                      ; 043FB5 || 04400B 1A          10576  			LD      A,(DE)
	call	$044061                   ; 04400C || 	call	$04400b                   ; 043FB6 || 04400C CD 61 40 04 10577  			CALL    UPPRC
	cp	$2e                         ; 044010 || 	cp	$2e                         ; 043FBA || 044010 FE 2E       10578  			CP      '.'			; ABBREVIATED?
	jr	z,$+$0c                     ; 044012 || 	jr	z,$+$0c                     ; 043FBC || 044012 28 0A       10579  			JR      Z,OSCLI4
	xor	(hl)                       ; 044014 || 	xor	(hl)                       ; 043FBE || 044014 AE          10580  			XOR     (HL)
	jr	z,$-$0c                     ; 044015 || 	jr	z,$-$0c                     ; 043FBF || 044015 28 F2       10581  			JR      Z,OSCLI3
	cp	$80                         ; 044017 || 	cp	$80                         ; 043FC1 || 044017 FE 80       10582  			CP      80H
	jr	z,$+$05                     ; 044019 || 	jr	z,$+$05                     ; 043FC3 || 044019 28 03       10583  			JR      Z,OSCLI4
	pop	de                         ; 04401B || 	pop	de                         ; 043FC5 || 04401B D1          10584  			POP     DE
	jr	$-$1d                       ; 04401C || 	jr	$-$1d                       ; 043FC6 || 04401C 18 E1       10585  			JR      OSCLI1
	pop	af                         ; 04401E || 	pop	af                         ; 043FC8 || 04401E F1          10587  OSCLI4:			POP     AF
	inc	de                         ; 04401F || 	inc	de                         ; 043FC9 || 04401F 13          10588  		        INC     DE
	bit	7,(hl)                     ; 044020 || 	bit	7,(hl)                     ; 043FCA || 044020 CB 7E       10589  OSCLI5:			BIT     7,(HL)
	inc	hl                         ; 044022 || 	inc	hl                         ; 043FCC || 044022 23          10590  			INC     HL
	jr	z,$-$03                     ; 044023 || 	jr	z,$-$03                     ; 043FCD || 044023 28 FB       10591  			JR      Z,OSCLI5
	ld	a,(hl)                      ; 044025 || 	ld	a,(hl)                      ; 043FCF || 044025 7E          10592  			LD      A,(HL)
	inc	hl                         ; 044026 || 	inc	hl                         ; 043FD0 || 044026 23          10593  			INC     HL
	ld	h,(hl)                      ; 044027 || 	ld	h,(hl)                      ; 043FD1 || 044027 66          10594  			LD      H,(HL)
	ld	l,a                         ; 044028 || 	ld	l,a                         ; 043FD2 || 044028 6F          10595  			LD      L,A
	push	hl                        ; 044029 || 	push	hl                        ; 043FD3 || 044029 E5          10596  			PUSH    HL
	ex	de,hl                       ; 04402A || 	ex	de,hl                       ; 043FD4 || 04402A EB          10597  			EX      DE,HL
	jp	$04405a                     ; 04402B || 	jp	$044004                     ; 043FD5 || 04402B C3 5A 40 04 10598  			JP      SKIPSP
	ex	de,hl                       ; 04402F || 	ex	de,hl                       ; 043FD9 || 04402F EB          10600  OSCLI6:			EX	DE, HL			; HL: Buffer for command
	ld	de,$044a00                  ; 044030 || 	ld	de,$044a00                  ; 043FDA || 044030 11 00 4A 04 10601  			LD	DE, ACCS		; Buffer for command string is ACCS (the string accumulator)
	push	de                        ; 044034 || 	push	de                        ; 043FDE || 044034 D5          10602  			PUSH	DE			; Store buffer address
	call	$043e81                   ; 044035 || 	call	$043e2b                   ; 043FDF || 044035 CD 81 3E 04 10603  			CALL	CSTR_LINE		; Fetch the line
	pop	hl                         ; 044039 || 	pop	hl                         ; 043FE3 || 044039 E1          10604  			POP	HL			; HL: Pointer to command string in ACCS
	push	iy                        ; 04403A || 	push	iy                        ; 043FE4 || 04403A FD E5       10605  			PUSH	IY
	ld	a,$10                       ; 04403C || 	ld	a,$10                       ; 043FE6 || 04403C 3E 10       0001M 			LD	A, function
	rst.lis	$08                    ; 04403E || 	rst.lis	$08                    ; 043FE8 || 04403E 49 CF       0002M 			RST.LIS	08h
	pop	iy                         ; 044040 || 	pop	iy                         ; 043FEA || 044040 FD E1       10607  			POP	IY
	or	a                           ; 044042 || 	or	a                           ; 043FEC || 044042 B7          10608  			OR	A			; 0 means MOS returned OK
	ret	z                          ; 044043 || 	ret	z                          ; 043FED || 044043 C8          10609  			RET	Z			; So don't do anything
	jp	$04427e                     ; 044044 || 	jp	$044217                     ; 043FEE || 044044 C3 7E 42 04 10610  			JP 	OSERROR			; Otherwise it's a MOS error
	ld	a,$fe                       ; 044048 || 	ld	a,$fe                       ; 043FF2 || 044048 3E FE       10612  HUH:    		LD      A,254			; Bad command error
	call	$0437cd                   ; 04404A || 	call	$043777                   ; 043FF4 || 04404A CD CD 37 04 10613          		CALL    EXTERR
	ld	b,d                         ; 04404E || 	ld	b,d                         ; 043FF8 || 04404E 42 61 64 20 10614          		DB    	"Bad command"
	ld	h,c                         ; 04404F || 	ld	h,c                         ; 043FF9
	ld	h,h                         ; 044050 || 	ld	h,h                         ; 043FFA
	jr	nz,$+$65                    ; 044051 || 	jr	nz,$+$65                    ; 043FFB
	ld	l,a                         ; 044053 || 	ld	l,a                         ; 043FFD
	ld	l,l                         ; 044054 || 	ld	l,l                         ; 043FFE
	ld	l,l                         ; 044055 || 	ld	l,l                         ; 043FFF
	ld	h,c                         ; 044056 || 	ld	h,c                         ; 044000
	ld	l,(hl)                      ; 044057 || 	ld	l,(hl)                      ; 044001
	ld	h,h                         ; 044058 || 	ld	h,h                         ; 044002
	nop                            ; 044059 || 	nop                            ; 044003 || 044059 00          10615          		DEFB    0
	ld	a,(hl)                      ; 04405A || 	ld	a,(hl)                      ; 044004 || 04405A 7E          10617  SKIPSP:			LD      A,(HL)
	cp	$20                         ; 04405B || 	cp	$20                         ; 044005 || 04405B FE 20       10618          		CP      ' '
	ret	nz                         ; 04405D || 	ret	nz                         ; 044007 || 04405D C0          10619          		RET     NZ
	inc	hl                         ; 04405E || 	inc	hl                         ; 044008 || 04405E 23          10620          		INC     HL
	jr	$-$05                       ; 04405F || 	jr	$-$05                       ; 044009 || 04405F 18 F9       10621          		JR      SKIPSP
	and	$7f                        ; 044061 || 	and	$7f                        ; 04400B || 044061 E6 7F       10623  UPPRC:  		AND     7FH
	cp	$60                         ; 044063 || 	cp	$60                         ; 04400D || 044063 FE 60       10624  			CP      '`'
	ret	c                          ; 044065 || 	ret	c                          ; 04400F || 044065 D8          10625  			RET     C
	and	$5f                        ; 044066 || 	and	$5f                        ; 044010 || 044066 E6 5F       10626  			AND     5FH			; CONVERT TO UPPER CASE
	ret                            ; 044068 || 	ret                            ; 044012 || 044068 C9          10627  			RET
	ld	b,c                         ; 044069                                         || 044069 41 53 4D    10632  COMDS:  		DB	"AS","M"+80h		; ASM
	ld	d,e                         ; 04406A
	ld	c,l                         ; 04406B
	add	a,a                        ; 04406C                                         || 04406C 87 40       10633  			DW	STAR_ASM
	ld.sis	b,d                     ; 04406D
	ld	e,c                         ; 04406F
	ld	b,l                         ; 044070
	sub	e                          ; 044071                                         || 044071 93 40       10635  			DW	STAR_BYE
	ld.sis	b,l                     ; 044072
	ld	b,h                         ; 044074
	ld.lis	d,h                     ; 044075
	ret	z                          ; 044077                                         || 044077 C8 40       10637  			DW	STAR_EDIT
	ld.sis	b,(hl)                  ; 044078
	ld	e,b                         ; 04407A
	ex	af,af'                      ; 04407B                                         || 04407B 08 41       10639  			DW	STAR_FX
	ld	b,c                         ; 04407C
	ld	d,(hl)                      ; 04407D                                         || 04407D 56 45 52 53 10640  			DB	"VERSIO","N"+80h	; VERSION
	ld	b,l                         ; 04407E
	ld.sil	d,e                     ; 04407F
	ld.lis	c,a                     ; 044081
	ld	c,(hl)                      ; 044083
	sbc	a,a                        ; 044084                                         || 044084 9F 40       10641  			DW	STAR_VERSION
	rst.sis	$38                    ; 044085
	push	iy                        ; 044087                                         || 044087 FD E5       10646  STAR_ASM:		PUSH	IY			; Stack the BASIC pointer
	push	hl                        ; 044089                                         || 044089 E5          10647  			PUSH	HL			; HL = IY
	pop	iy                         ; 04408A                                         || 04408A FD E1       10648  			POP	IY
	call	$0418cd                   ; 04408C                                         || 04408C CD CD 18 04 10649  			CALL	ASSEM			; Invoke the assembler
	pop	iy                         ; 044090                                         || 044090 FD E1       10650  			POP	IY
	ret                            ; 044092                                         || 044092 C9          10651  			RET
	call	$044950                   ; 044093                                         || 044093 CD 50 49 04 10655  STAR_BYE:		CALL	VBLANK_STOP		; Restore MOS interrupts
	ld	hl,$000000                  ; 044097                                         || 044097 21 00 00 00 10656  			LD	HL, 0			; The return value
	jp	$040068                     ; 04409B                                         || 04409B C3 68 00 04 10657  			JP	_end 			; Jump back to the end routine in init.asm
	call	$043de6                   ; 04409F                                         || 04409F CD E6 3D 04 10661  STAR_VERSION:		CALL    TELL			; Output the welcome message
	ld	b,d                         ; 0440A3                                         || 0440A3 42 42 43 20 10662  			DB    	"BBC BASIC (Agon ADL) Version 1.03\n\r",0
	ld	b,d                         ; 0440A4
	ld	b,e                         ; 0440A5
	jr	nz,$+$44                    ; 0440A6
	ld	b,c                         ; 0440A8 || 	ld	b,c                         ; 044041
	ld	d,e                         ; 0440A9 || 	ld	d,e                         ; 044042
	ld.lis	b,e                     ; 0440AA || 	ld.lis	b,e                     ; 044043
	jr	nz,$+$2a                    ; 0440AC || 	jr	nz,$+$2a                    ; 044045
	ld	b,c                         ; 0440AE || 	ld	b,c                         ; 044047
	ld	h,a                         ; 0440AF || 	ld	h,a                         ; 044048
	ld	l,a                         ; 0440B0 || 	ld	l,a                         ; 044049
	ld	l,(hl)                      ; 0440B1 || 	ld	l,(hl)                      ; 04404A
	jr	nz,$+$43                    ; 0440B2 || 	jr	nz,$+$43                    ; 04404B
	ld	b,h                         ; 0440B4 || 	ld	b,h                         ; 04404D
	ld	c,h                         ; 0440B5 || 	ld	c,h                         ; 04404E
	add	hl,hl                      ; 0440B6 || 	add	hl,hl                      ; 04404F
	jr	nz,$+$58                    ; 0440B7 || 	jr	nz,$+$58                    ; 044050
	ld	h,l                         ; 0440B9 || 	ld	h,l                         ; 044052
	ld	(hl),d                      ; 0440BA || 	ld	(hl),d                      ; 044053
	ld	(hl),e                      ; 0440BB || 	ld	(hl),e                      ; 044054
	ld	l,c                         ; 0440BC || 	ld	l,c                         ; 044055
	ld	l,a                         ; 0440BD || 	ld	l,a                         ; 044056
	ld	l,(hl)                      ; 0440BE || 	ld	l,(hl)                      ; 044057
	jr	nz,$+$33                    ; 0440BF || 	jr	nz,$+$33                    ; 044058
	ld	l,$30                       ; 0440C1 || 	ld	l,$30                       ; 04405A
	inc	sp                         ; 0440C3 || 	inc	sp                         ; 04405C
	ld	a,(bc)                      ; 0440C4 || 	ld	a,(bc)                      ; 04405D
	dec	c                          ; 0440C5 || 	dec	c                          ; 04405E
	nop                            ; 0440C6 || 	nop                            ; 04405F
	ret                            ; 0440C7 || 	ret                            ; 044060 || 0440C7 C9          10663  			RET
	call	$043ded                   ; 0440C8 || 	call	$043d97                   ; 044061 || 0440C8 CD ED 3D 04 10667  STAR_EDIT:		CALL	ASC_TO_NUMBER		; DE: Line number to edit
	ex	de,hl                       ; 0440CC || 	ex	de,hl                       ; 044065 || 0440CC EB          10668  			EX	DE, HL			; HL: Line number
	call	$0439e5                   ; 0440CD || 	call	$04398f                   ; 044066 || 0440CD CD E5 39 04 10669  			CALL	FINDL			; HL: Address in RAM of tokenised line
	ld	a,$29                       ; 0440D1 || 	ld	a,$29                       ; 04406A || 0440D1 3E 29       10670  			LD	A, 41			; F:NZ If the line is not found
	jp	nz,$0437b6                  ; 0440D3 || 	jp	nz,$043760                  ; 04406C || 0440D3 C2 B6 37 04 10671  			JP	NZ, ERROR_		; Do error 41: No such line in that case
	inc	hl                         ; 0440D7 || 	inc	hl                         ; 044070 || 0440D7 23          10675  			INC	HL			; Skip the length byte
	ld	e,(hl)                      ; 0440D8 || 	ld	e,(hl)                      ; 044071 || 0440D8 5E          10676  			LD	E, (HL)			; Fetch the line number
	inc	hl                         ; 0440D9 || 	inc	hl                         ; 044072 || 0440D9 23          10677  			INC	HL
	ld	d,(hl)                      ; 0440DA || 	ld	d,(hl)                      ; 044073 || 0440DA 56          10678  			LD	D, (HL)
	inc	hl                         ; 0440DB || 	inc	hl                         ; 044074 || 0440DB 23          10679  			INC	HL
	ld	ix,$044a00                  ; 0440DC || 	ld	ix,$044a00                  ; 044075 || 0440DC DD 21 00 4A 10680  			LD	IX, ACCS		; Pointer to where the copy is to be stored
	ld	($044d43),ix                ; 0440E1 || 	ld	($044d43),ix                ; 04407A || 0440E1 DD 22 43 4D 10681  			LD	(OSWRCHPT), IX
	ld	ix,$044d40                  ; 0440E6 || 	ld	ix,$044d40                  ; 04407F || 0440E6 DD 21 40 4D 10682  			LD	IX, LISTON		; Pointer to LISTON variable in RAM
	ld	a,(ix)                      ; 0440EB || 	ld	a,(ix)                      ; 044084 || 0440EB DD 7E 00    10683  			LD	A, (IX)			; Store that variable
	push	af                        ; 0440EE || 	push	af                        ; 044087 || 0440EE F5          10684  			PUSH	AF
	ld	(ix),$09                    ; 0440EF || 	ld	(ix),$09                    ; 044088 || 0440EF DD 36 00 09 10685  			LD	(IX), 09h		; Set to echo to buffer
	call	$0438e8                   ; 0440F3 || 	call	$043892                   ; 04408C || 0440F3 CD E8 38 04 10686  			CALL	LISTIT
	pop	af                         ; 0440F7 || 	pop	af                         ; 044090 || 0440F7 F1          10687  			POP	AF
	ld	(ix),a                      ; 0440F8 || 	ld	(ix),a                      ; 044091 || 0440F8 DD 77 00    10688  			LD	(IX), A			; Restore the original LISTON variable
	ld	hl,$044a00                  ; 0440FB || 	ld	hl,$044a00                  ; 044094 || 0440FB 21 00 4A 04 10689  			LD	HL, ACCS		; HL: ACCS
	ld	e,l                         ; 0440FF || 	ld	e,l                         ; 044098 || 0440FF 5D          10690  			LD	E, L			;  E: 0 - Don't clear the buffer; ACCS is on a page boundary so L is 0
	call	$043eb7                   ; 044100 || 	call	$043e61                   ; 044099 || 044100 CD B7 3E 04 10691  			CALL	OSLINE1			; Invoke the editor
	jp	$043126                     ; 044104 || 	jp	$0430d0                     ; 04409D || 044104 C3 26 31 04 10692  			JP	ONEDIT			; Jump back to the BASIC loop just after the normal line edit
	call	$043ded                   ; 044108 || 	call	$043d97                   ; 0440A1 || 044108 CD ED 3D 04 10696  STAR_FX:		CALL	ASC_TO_NUMBER
	ld	c,e                         ; 04410C || 	ld	c,e                         ; 0440A5 || 04410C 4B          10697  			LD	C, E			; C: Save FX #
	call	$043ded                   ; 04410D || 	call	$043d97                   ; 0440A6 || 04410D CD ED 3D 04 10698  			CALL	ASC_TO_NUMBER
	ld	a,d                         ; 044111 || 	ld	a,d                         ; 0440AA || 044111 7A          10699  			LD	A, D  			; Is first parameter > 255?
	or	a                           ; 044112 || 	or	a                           ; 0440AB || 044112 B7          10700  			OR 	A
	jr	z,$+$05                     ; 044113 || 	jr	z,$+$05                     ; 0440AC || 044113 28 03       10701  			JR	Z, STAR_FX1		; Yes, so skip next bit
	ex	de,hl                       ; 044115 || 	ex	de,hl                       ; 0440AE || 044115 EB          10702  			EX	DE, HL 			; Parameter is 16-bit
	jr	$+$09                       ; 044116 || 	jr	$+$09                       ; 0440AF || 044116 18 07       10703  			JR	STAR_FX2
	ld	b,e                         ; 044118 || 	ld	b,e                         ; 0440B1 || 044118 43          10705  STAR_FX1:		LD	B, E 			; B: Save First parameter
	call	$043ded                   ; 044119 || 	call	$043d97                   ; 0440B2 || 044119 CD ED 3D 04 10706  			CALL	ASC_TO_NUMBER		; Fetch second parameter
	ld	l,b                         ; 04411D || 	ld	l,b                         ; 0440B6 || 04411D 68          10707  			LD	L, B 			; L: First parameter
	ld	h,e                         ; 04411E || 	ld	h,e                         ; 0440B7 || 04411E 63          10708  			LD	H, E 			; H: Second parameter
	ld	a,c                         ; 04411F || 	ld	a,c                         ; 0440B8 || 04411F 79          10710  STAR_FX2:		LD	A, C 			; A: FX #, and fall through to OSBYTE
	cp	$0b                         ; 044120 || 	cp	$0b                         ; 0440B9 || 044120 FE 0B       10717  OSBYTE:			CP	0BH			; *FX 11, n: Keyboard auto-repeat delay
	jr	z,$+$1a                     ; 044122 || 	jr	z,$+$1a                     ; 0440BB || 044122 28 18       10718  			JR	Z, OSBYTE_0B
	cp	$0c                         ; 044124 || 	cp	$0c                         ; 0440BD || 044124 FE 0C       10719  			CP	0CH			; *FX 12, n: Keyboard auto-repeat rate
	jr	z,$+$45                     ; 044126 || 	jr	z,$+$45                     ; 0440BF || 044126 28 43       10720  			JR	Z, OSBYTE_0C
	cp	$13                         ; 044128 || 	cp	$13                         ; 0440C1 || 044128 FE 13       10721  			CP	13H			; *FX 19: Wait for vblank
	jr	z,$+$70                     ; 04412A || 	jr	z,$+$70                     ; 0440C3 || 04412A 28 6E       10722  			JR	Z, OSBYTE_13
	cp	$76                         ; 04412C || 	cp	$76                         ; 0440C5 || 04412C FE 76       10723  			CP	76H			; *FX 118, n: Set keyboard LED
	jp	z,$0441b5                   ; 04412E || 	jp	z,$04414e                   ; 0440C7 || 04412E CA B5 41 04 10724  			JP	Z, OSBYTE_76
	cp	$a0                         ; 044132 || 	cp	$a0                         ; 0440CB || 044132 FE A0       10725  			CP	A0H
	jp	z,$0441e5                   ; 044134 || 	jp	z,$04417e                   ; 0440CD || 044134 CA E5 41 04 10726  			JP	Z, OSBYTE_A0
	jp	$044048                     ; 044138 || 	jp	$043ff2                     ; 0440D1 || 044138 C3 48 40 04 10727  			JP	HUH			; Anything else trips an error
	ld	a,$17                       ; 04413C || 	ld	a,$17                       ; 0440D5 || 04413C 3E 17       0001M 		LD	A, val
	call	$043f56                   ; 04413E || 	call	$043f00                   ; 0440D7 || 04413E CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 044142 || 	ld	a,$00                       ; 0440DB || 044142 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 044144 || 	call	$043f00                   ; 0440DD || 044144 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$88                       ; 044148 || 	ld	a,$88                       ; 0440E1 || 044148 3E 88       0001M 		LD	A, val
	call	$043f56                   ; 04414A || 	call	$043f00                   ; 0440E3 || 04414A CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,l                         ; 04414E || 	ld	a,l                         ; 0440E7 || 04414E 7D          0001M 		LD	A, val
	call	$043f56                   ; 04414F || 	call	$043f00                   ; 0440E8 || 04414F CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,h                         ; 044153 || 	ld	a,h                         ; 0440EC || 044153 7C          0001M 		LD	A, val
	call	$043f56                   ; 044154 || 	call	$043f00                   ; 0440ED || 044154 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 044158 || 	ld	a,$00                       ; 0440F1 || 044158 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 04415A || 	call	$043f00                   ; 0440F3 || 04415A CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 04415E || 	ld	a,$00                       ; 0440F7 || 04415E 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 044160 || 	call	$043f00                   ; 0440F9 || 044160 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$ff                       ; 044164 || 	ld	a,$ff                       ; 0440FD || 044164 3E FF       0001M 		LD	A, val
	call	$043f56                   ; 044166 || 	call	$043f00                   ; 0440FF || 044166 CD 56 3F 04 0002M 		CALL	OSWRCH
	ret                            ; 04416A || 	ret                            ; 044103 || 04416A C9          10741  			RET
	ld	a,$17                       ; 04416B || 	ld	a,$17                       ; 044104 || 04416B 3E 17       0001M 		LD	A, val
	call	$043f56                   ; 04416D || 	call	$043f00                   ; 044106 || 04416D CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 044171 || 	ld	a,$00                       ; 04410A || 044171 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 044173 || 	call	$043f00                   ; 04410C || 044173 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$88                       ; 044177 || 	ld	a,$88                       ; 044110 || 044177 3E 88       0001M 		LD	A, val
	call	$043f56                   ; 044179 || 	call	$043f00                   ; 044112 || 044179 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 04417D || 	ld	a,$00                       ; 044116 || 04417D 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 04417F || 	call	$043f00                   ; 044118 || 04417F CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 044183 || 	ld	a,$00                       ; 04411C || 044183 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 044185 || 	call	$043f00                   ; 04411E || 044185 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,l                         ; 044189 || 	ld	a,l                         ; 044122 || 044189 7D          0001M 		LD	A, val
	call	$043f56                   ; 04418A || 	call	$043f00                   ; 044123 || 04418A CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,h                         ; 04418E || 	ld	a,h                         ; 044127 || 04418E 7C          0001M 		LD	A, val
	call	$043f56                   ; 04418F || 	call	$043f00                   ; 044128 || 04418F CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$ff                       ; 044193 || 	ld	a,$ff                       ; 04412C || 044193 3E FF       0001M 		LD	A, val
	call	$043f56                   ; 044195 || 	call	$043f00                   ; 04412E || 044195 CD 56 3F 04 0002M 		CALL	OSWRCH
	ret                            ; 044199 || 	ret                            ; 044132 || 044199 C9          10755  			RET
	call	$0441a4                   ; 04419A || 	call	$04413d                   ; 044133 || 04419A CD A4 41 04 10759  OSBYTE_13:		CALL	WAIT_VBLANK
	ld	l,$00                       ; 04419E || 	ld	l,$00                       ; 044137 || 04419E 2E 00       10760  			LD	L, 0			; Returns 0
	jp	$040584                     ; 0441A0 || 	jp	$04057f                     ; 044139 || 0441A0 C3 84 05 04 10761  			JP	COUNT0
	push	ix                        ; 0441A4 || 	push	ix                        ; 04413D || 0441A4 DD E5       10763  WAIT_VBLANK:		PUSH 	IX			; Wait for VBLANK interrupt
	ld	a,$08                       ; 0441A6 || 	ld	a,$08                       ; 04413F || 0441A6 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 0441A8 || 	rst.lis	$08                    ; 044141 || 0441A8 49 CF       0002M 			RST.LIS	08h
	ld	a,(ix)                      ; 0441AA || 	ld	a,(ix)                      ; 044143 || 0441AA DD 7E 00    10765  			LD	A, (IX + sysvar_time + 0)
	cp	(ix)                        ; 0441AD || 	cp	(ix)                        ; 044146 || 0441AD DD BE 00    10766  @@:			CP 	A, (IX + sysvar_time + 0)
	jr	z,$-$03                     ; 0441B0 || 	jr	z,$-$03                     ; 044149 || 0441B0 28 FB       10767  			JR	Z, @B
	pop	ix                         ; 0441B2 || 	pop	ix                         ; 04414B || 0441B2 DD E1       10768  			POP	IX
	ret                            ; 0441B4 || 	ret                            ; 04414D || 0441B4 C9          10769  			RET
	ld	a,$17                       ; 0441B5 || 	ld	a,$17                       ; 04414E || 0441B5 3E 17       0001M 		LD	A, val
	call	$043f56                   ; 0441B7 || 	call	$043f00                   ; 044150 || 0441B7 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 0441BB || 	ld	a,$00                       ; 044154 || 0441BB 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 0441BD || 	call	$043f00                   ; 044156 || 0441BD CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$88                       ; 0441C1 || 	ld	a,$88                       ; 04415A || 0441C1 3E 88       0001M 		LD	A, val
	call	$043f56                   ; 0441C3 || 	call	$043f00                   ; 04415C || 0441C3 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 0441C7 || 	ld	a,$00                       ; 044160 || 0441C7 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 0441C9 || 	call	$043f00                   ; 044162 || 0441C9 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 0441CD || 	ld	a,$00                       ; 044166 || 0441CD 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 0441CF || 	call	$043f00                   ; 044168 || 0441CF CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 0441D3 || 	ld	a,$00                       ; 04416C || 0441D3 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 0441D5 || 	call	$043f00                   ; 04416E || 0441D5 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 0441D9 || 	ld	a,$00                       ; 044172 || 0441D9 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 0441DB || 	call	$043f00                   ; 044174 || 0441DB CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,l                         ; 0441DF || 	ld	a,l                         ; 044178 || 0441DF 7D          0001M 		LD	A, val
	call	$043f56                   ; 0441E0 || 	call	$043f00                   ; 044179 || 0441E0 CD 56 3F 04 0002M 		CALL	OSWRCH
	ret                            ; 0441E4 || 	ret                            ; 04417D || 0441E4 C9          10783  			RET
	push	ix                        ; 0441E5 || 	push	ix                        ; 04417E || 0441E5 DD E5       10789  OSBYTE_A0:		PUSH	IX
	ld	a,$08                       ; 0441E7 || 	ld	a,$08                       ; 044180 || 0441E7 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 0441E9 || 	rst.lis	$08                    ; 044182 || 0441E9 49 CF       0002M 			RST.LIS	08h
	ld	bc,$000000                  ; 0441EB || 	ld	bc,$000000                  ; 044184 || 0441EB 01 00 00 00 10791  			LD	BC, 0
	ld	c,l                         ; 0441EF || 	ld	c,l                         ; 044188 || 0441EF 4D          10792  			LD	C, L			; BCU = L
	add	ix,bc                      ; 0441F0 || 	add	ix,bc                      ; 044189 || 0441F0 DD 09       10793  			ADD	IX, BC			; Add to IX
	ld	l,(ix)                      ; 0441F2 || 	ld	l,(ix)                      ; 04418B || 0441F2 DD 6E 00    10794  			LD	L, (IX + 0)		; Fetch the return value
	pop	ix                         ; 0441F5 || 	pop	ix                         ; 04418E || 0441F5 DD E1       10795  			POP	IX
	jp	$040584                     ; 0441F7 || 	jp	$04057f                     ; 044190 || 0441F7 C3 84 05 04 10796  			JP 	COUNT0
	push	bc                        ; 0441FB || 	push	bc                        ; 044194 || 0441FB C5          10805  OSLOAD:			PUSH	BC			; Stack the size
	push	de                        ; 0441FC || 	push	de                        ; 044195 || 0441FC D5          10806  			PUSH	DE			; Stack the load address
	ld	de,$044a00                  ; 0441FD || 	ld	de,$044a00                  ; 044196 || 0441FD 11 00 4A 04 10807  			LD	DE, ACCS		; Buffer address for filename
	call	$043e6f                   ; 044201 || 	call	$043e19                   ; 04419A || 044201 CD 6F 3E 04 10808  			CALL	CSTR_FNAME		; Fetch filename from MOS into buffer
	ld	hl,$044a00                  ; 044205 || 	ld	hl,$044a00                  ; 04419E || 044205 21 00 4A 04 10809  			LD	HL, ACCS		; HL: Filename
	call	$0442fb                   ; 044209 || 	call	$044294                   ; 0441A2 || 044209 CD FB 42 04 10810  			CALL	EXT_DEFAULT		; Tack on the extension .BBC if not specified
	call	$04430f                   ; 04420D || 	call	$0442a8                   ; 0441A6 || 04420D CD 0F 43 04 10811  			CALL	EXT_HANDLER		; Get the default handler
	pop	de                         ; 044211 || 	pop	de                         ; 0441AA || 044211 D1          10812  			POP	DE			; Restore the load address
	pop	bc                         ; 044212 || 	pop	bc                         ; 0441AB || 044212 C1          10813  			POP	BC			; Restore the size
	or	a                           ; 044213 || 	or	a                           ; 0441AC || 044213 B7          10814  			OR	A
	jr	z,$+$62                     ; 044214 || 	jr	z,$+$62                     ; 0441AD || 044214 28 60       10815  			JR 	Z, OSLOAD_BBC
	xor	a                          ; 044216 || 	xor	a                          ; 0441AF || 044216 AF          10819  OSLOAD_TXT:		XOR	A			; Set file attributes to read
	call	$044383                   ; 044217 || 	call	$04431c                   ; 0441B0 || 044217 CD 83 43 04 10820  			CALL	OSOPEN			; Open the file
	ld	e,a                         ; 04421B || 	ld	e,a                         ; 0441B4 || 04421B 5F          10821  			LD 	E, A 			; The filehandle
	or	a                           ; 04421C || 	or	a                           ; 0441B5 || 04421C B7          10822  			OR	A
	ld	a,$04                       ; 04421D || 	ld	a,$04                       ; 0441B6 || 04421D 3E 04       10823  			LD	A, 4			; File not found error
	jr	z,$+$5f                     ; 04421F || 	jr	z,$+$5f                     ; 0441B8 || 04421F 28 5D       10824  			JR	Z, OSERROR		; Jump to error handler
	call	$0438c2                   ; 044221 || 	call	$04386c                   ; 0441BA || 044221 CD C2 38 04 10825  			CALL	NEWIT			; Call NEW to clear the program space
	ld	hl,$044a00                  ; 044225 || 	ld	hl,$044a00                  ; 0441BE || 044225 21 00 4A 04 10827  OSLOAD_TXT1:		LD	HL, ACCS 		; Where the input is going to be stored
	call	$04439a                   ; 044229 || 	call	$044333                   ; 0441C2 || 044229 CD 9A 43 04 10831  @@:			CALL	OSBGET			; Read the byte into A
	jr	c,$+$20                     ; 04422D || 	jr	c,$+$20                     ; 0441C6 || 04422D 38 1E       10832  			JR	C, OSLOAD_TXT3		; Is it EOF?
	cp	$0a                         ; 04422F || 	cp	$0a                         ; 0441C8 || 04422F FE 0A       10833  			CP	LF 			; Is it LF?
	jr	z,$+$1c                     ; 044231 || 	jr	z,$+$1c                     ; 0441CA || 044231 28 1A       10834  			JR	Z, OSLOAD_TXT3 		; Yes, so skip to the next line
	cp	$21                         ; 044233 || 	cp	$21                         ; 0441CC || 044233 FE 21       10835  			CP	21h			; Is it less than or equal to ASCII space?
	jr	c,$-$0c                     ; 044235 || 	jr	c,$-$0c                     ; 0441CE || 044235 38 F2       10836  			JR	C, @B 			; Yes, so keep looping
	ld	(hl),a                      ; 044237 || 	ld	(hl),a                      ; 0441D0 || 044237 77          10837  			LD	(HL), A 		; Store the first character
	inc	l                          ; 044238 || 	inc	l                          ; 0441D1 || 044238 2C          10838  			INC	L
	call	$04439a                   ; 044239 || 	call	$044333                   ; 0441D2 || 044239 CD 9A 43 04 10842  OSLOAD_TXT2:		CALL	OSBGET			; Read the byte into A
	jr	c,$+$2d                     ; 04423D || 	jr	c,$+$2d                     ; 0441D6 || 04423D 38 2B       10843  			JR	C, OSLOAD_TXT4		; Is it EOF?
	cp	$20                         ; 04423F || 	cp	$20                         ; 0441D8 || 04423F FE 20       10844  			CP	20h			; Skip if not an ASCII character
	jr	c,$+$08                     ; 044241 || 	jr	c,$+$08                     ; 0441DA || 044241 38 06       10845  			JR	C, @F
	ld	(hl),a                      ; 044243 || 	ld	(hl),a                      ; 0441DC || 044243 77          10846  			LD	(HL), A 		; Store in the input buffer
	inc	l                          ; 044244 || 	inc	l                          ; 0441DD || 044244 2C          10847  			INC	L			; Increment the buffer pointer
	jp	z,$04374e                   ; 044245 || 	jp	z,$0436f8                   ; 0441DE || 044245 CA 4E 37 04 10848  			JP	Z, BAD			; If the buffer is full (wrapped to 0) then jump to Bad Program error
	cp	$0a                         ; 044249 || 	cp	$0a                         ; 0441E2 || 044249 FE 0A       10849  @@:			CP	LF			; Check for LF
	jr	nz,$-$12                    ; 04424B || 	jr	nz,$-$12                    ; 0441E4 || 04424B 20 EC       10850  			JR	NZ, OSLOAD_TXT2		; If not, then loop to read the rest of the characters in
	ld	(hl),$0d                    ; 04424D || 	ld	(hl),$0d                    ; 0441E6 || 04424D 36 0D       10854  OSLOAD_TXT3:		LD	(HL), CR		; Store a CR for BBC BASIC
	ld	a,l                         ; 04424F || 	ld	a,l                         ; 0441E8 || 04424F 7D          10855  			LD	A, L			; Check for minimum line length
	cp	$02                         ; 044250 || 	cp	$02                         ; 0441E9 || 044250 FE 02       10856  			CP	2			; If it is 2 characters or less (including CR)
	jr	c,$+$0c                     ; 044252 || 	jr	c,$+$0c                     ; 0441EB || 044252 38 0A       10857  			JR	C, @F			; Then don't bother entering it
	push	de                        ; 044254 || 	push	de                        ; 0441ED || 044254 D5          10858  			PUSH	DE			; Preserve the filehandle
	call	$043132                   ; 044255 || 	call	$0430dc                   ; 0441EE || 044255 CD 32 31 04 10859  			CALL	ONEDIT1			; Enter the line in memory
	call	c,$043895                 ; 044259 || 	call	c,$04383f                 ; 0441F2 || 044259 DC 95 38 04 10860  			CALL	C,CLEAN			; If a new line has been entered, then call CLEAN to set TOP and write &FFFF end of program marker
	pop	de                         ; 04425D || 	pop	de                         ; 0441F6 || 04425D D1          10861  			POP	DE
	call	$0443ab                   ; 04425E || 	call	$044344                   ; 0441F7 || 04425E CD AB 43 04 10862  @@:			CALL	OSSTAT			; End of file?
	jr	nz,$-$3d                    ; 044262 || 	jr	nz,$-$3d                    ; 0441FB || 044262 20 C1       10863  			JR	NZ, OSLOAD_TXT1		; No, so loop
	call	$044392                   ; 044264 || 	call	$04432b                   ; 0441FD || 044264 CD 92 43 04 10864  			CALL	OSSHUT			; Close the file
	scf                            ; 044268 || 	scf                            ; 044201 || 044268 37          10865  			SCF				; Flag to BASIC that we're good
	ret                            ; 044269 || 	ret                            ; 044202 || 044269 C9          10866  			RET
	cp	$20                         ; 04426A || 	cp	$20                         ; 044203 || 04426A FE 20       10870  OSLOAD_TXT4:		CP	20h			; Skip if not an ASCII character
	jr	c,$+$08                     ; 04426C || 	jr	c,$+$08                     ; 044205 || 04426C 38 06       10871  			JR	C, @F
	ld	(hl),a                      ; 04426E || 	ld	(hl),a                      ; 044207 || 04426E 77          10872  			LD	(HL), A			; Store the character
	inc	l                          ; 04426F || 	inc	l                          ; 044208 || 04426F 2C          10873  			INC	L
	jp	z,$04374e                   ; 044270 || 	jp	z,$0436f8                   ; 044209 || 044270 CA 4E 37 04 10874  			JP	Z, BAD
	jr	$-$27                       ; 044274 || 	jr	$-$27                       ; 04420D || 044274 18 D7       10875  @@:			JR	OSLOAD_TXT3
	ld	a,$01                       ; 044276 || 	ld	a,$01                       ; 04420F || 044276 3E 01       0001M 			LD	A, function
	rst.lis	$08                    ; 044278 || 	rst.lis	$08                    ; 044211 || 044278 49 CF       0002M 			RST.LIS	08h
	ret	nc                         ; 04427A || 	ret	nc                         ; 044213 || 04427A D0          10881  			RET	NC			; If load returns with carry reset - NO ROOM
	or	a                           ; 04427B || 	or	a                           ; 044214 || 04427B B7          10882  			OR	A			; If there is no error (A=0)
	scf                            ; 04427C || 	scf                            ; 044215 || 04427C 37          10883  			SCF				; Need to set carry indicating there was room
	ret	z                          ; 04427D || 	ret	z                          ; 044216 || 04427D C8          10884  			RET	Z			; Return
	push	af                        ; 04427E || 	push	af                        ; 044217 || 04427E F5          10886  OSERROR:		PUSH	AF			; Handle the MOS error
	ld	hl,$044a00                  ; 04427F || 	ld	hl,$044a00                  ; 044218 || 04427F 21 00 4A 04 10887  			LD	HL, ACCS		; Address of the buffer
	ld	bc,$000100                  ; 044283 || 	ld	bc,$000100                  ; 04421C || 044283 01 00 01 00 10888  			LD	BC, 256			; Length of the buffer
	ld	e,a                         ; 044287 || 	ld	e,a                         ; 044220 || 044287 5F          10889  			LD	E, A			; The error code
	ld	a,$0f                       ; 044288 || 	ld	a,$0f                       ; 044221 || 044288 3E 0F       0001M 			LD	A, function
	rst.lis	$08                    ; 04428A || 	rst.lis	$08                    ; 044223 || 04428A 49 CF       0002M 			RST.LIS	08h
	pop	af                         ; 04428C || 	pop	af                         ; 044225 || 04428C F1          10891  			POP	AF
	push	hl                        ; 04428D || 	push	hl                        ; 044226 || 04428D E5          10892  			PUSH	HL			; Stack the address of the error (now in ACCS)
	add	a,$7f                      ; 04428E || 	add	a,$7f                      ; 044227 || 04428E C6 7F       10893  			ADD	A, 127			; Add 127 to the error code (MOS errors start at 128, and are trappable)
	jp	$0437cd                     ; 044290 || 	jp	$043777                     ; 044229 || 044290 C3 CD 37 04 10894  			JP	EXTERR			; Trigger an external error
	push	bc                        ; 044294 || 	push	bc                        ; 04422D || 044294 C5          10902  OSSAVE:			PUSH	BC			; Stack the size
	push	de                        ; 044295 || 	push	de                        ; 04422E || 044295 D5          10903  			PUSH	DE			; Stack the save address
	ld	de,$044a00                  ; 044296 || 	ld	de,$044a00                  ; 04422F || 044296 11 00 4A 04 10904  			LD	DE, ACCS		; Buffer address for filename
	call	$043e6f                   ; 04429A || 	call	$043e19                   ; 044233 || 04429A CD 6F 3E 04 10905  			CALL	CSTR_FNAME		; Fetch filename from MOS into buffer
	ld	hl,$044a00                  ; 04429E || 	ld	hl,$044a00                  ; 044237 || 04429E 21 00 4A 04 10906  			LD	HL, ACCS		; HL: Filename
	call	$0442fb                   ; 0442A2 || 	call	$044294                   ; 04423B || 0442A2 CD FB 42 04 10907  			CALL	EXT_DEFAULT		; Tack on the extension .BBC if not specified
	call	$04430f                   ; 0442A6 || 	call	$0442a8                   ; 04423F || 0442A6 CD 0F 43 04 10908  			CALL	EXT_HANDLER		; Get the default handler
	pop	de                         ; 0442AA || 	pop	de                         ; 044243 || 0442AA D1          10909  			POP	DE			; Restore the save address
	pop	bc                         ; 0442AB || 	pop	bc                         ; 044244 || 0442AB C1          10910  			POP	BC			; Restore the size
	or	a                           ; 0442AC || 	or	a                           ; 044245 || 0442AC B7          10911  			OR	A			; Is the extension .BBC
	jr	z,$+$46                     ; 0442AD || 	jr	z,$+$46                     ; 044246 || 0442AD 28 44       10912  			JR	Z, OSSAVE_BBC		; Yes, so use that
	ld	a,($044d45)                 ; 0442AF || 	ld	a,($044d45)                 ; 044248 || 0442AF 3A 45 4D 04 10916  OSSAVE_TXT:		LD 	A, (OSWRCHCH)		; Stack the current channel
	push	af                        ; 0442B3 || 	push	af                        ; 04424C || 0442B3 F5          10917  			PUSH	AF
	xor	a                          ; 0442B4 || 	xor	a                          ; 04424D || 0442B4 AF          10918  			XOR	A
	inc	a                          ; 0442B5 || 	inc	a                          ; 04424E || 0442B5 3C          10919  			INC	A			; Make sure C is clear, A is 1, for OPENOUT
	ld	($044d45),a                 ; 0442B6 || 	ld	($044d45),a                 ; 04424F || 0442B6 32 45 4D 04 10920  			LD	(OSWRCHCH), A
	call	$044383                   ; 0442BA || 	call	$04431c                   ; 044253 || 0442BA CD 83 43 04 10921  			CALL	OSOPEN			; Open the file
	ld	($044d46),a                 ; 0442BE || 	ld	($044d46),a                 ; 044257 || 0442BE 32 46 4D 04 10922  			LD	(OSWRCHFH), A		; Store the file handle for OSWRCH
	ld	ix,$044d40                  ; 0442C2 || 	ld	ix,$044d40                  ; 04425B || 0442C2 DD 21 40 4D 10923  			LD	IX, LISTON		; Required for LISTIT
	ld	hl,($044d14)                ; 0442C7 || 	ld	hl,($044d14)                ; 044260 || 0442C7 2A 14 4D 04 10924  			LD	HL, (PAGE_)		; Get start of program area
	exx                            ; 0442CB || 	exx                            ; 044264 || 0442CB D9          10925  			EXX
	ld	bc,$000000                  ; 0442CC || 	ld	bc,$000000                  ; 044265 || 0442CC 01 00 00 00 10926  			LD	BC, 0			; Set the initial indent counters
	exx                            ; 0442D0 || 	exx                            ; 044269 || 0442D0 D9          10927  			EXX
	ld	a,(hl)                      ; 0442D1 || 	ld	a,(hl)                      ; 04426A || 0442D1 7E          10928  OSSAVE_TXT1:		LD	A, (HL)			; Check for end of program marker
	or	a                           ; 0442D2 || 	or	a                           ; 04426B || 0442D2 B7          10929  			OR	A
	jr	z,$+$11                     ; 0442D3 || 	jr	z,$+$11                     ; 04426C || 0442D3 28 0F       10930  			JR	Z, OSSAVE_TXT2
	inc	hl                         ; 0442D5 || 	inc	hl                         ; 04426E || 0442D5 23          10931  			INC	HL			; Skip the length byte
	ld	de,$000000                  ; 0442D6 || 	ld	de,$000000                  ; 04426F || 0442D6 11 00 00 00 10932  			LD	DE, 0			; Clear DE to ensure we get a 16-bit line number
	ld	e,(hl)                      ; 0442DA || 	ld	e,(hl)                      ; 044273 || 0442DA 5E          10933  			LD	E, (HL)			; Get the line number
	inc	hl                         ; 0442DB || 	inc	hl                         ; 044274 || 0442DB 23          10934  			INC	HL
	ld	d,(hl)                      ; 0442DC || 	ld	d,(hl)                      ; 044275 || 0442DC 56          10935  			LD	D, (HL)
	inc	hl                         ; 0442DD || 	inc	hl                         ; 044276 || 0442DD 23          10936  			INC	HL
	call	$0438e8                   ; 0442DE || 	call	$043892                   ; 044277 || 0442DE CD E8 38 04 10937  			CALL	LISTIT			; List the line
	jr	$-$11                       ; 0442E2 || 	jr	$-$11                       ; 04427B || 0442E2 18 ED       10938  			JR	OSSAVE_TXT1
	ld	a,($044d46)                 ; 0442E4 || 	ld	a,($044d46)                 ; 04427D || 0442E4 3A 46 4D 04 10939  OSSAVE_TXT2:		LD	A, (OSWRCHFH)		; Get the file handle
	ld	e,a                         ; 0442E8 || 	ld	e,a                         ; 044281 || 0442E8 5F          10940  			LD	E, A
	call	$044392                   ; 0442E9 || 	call	$04432b                   ; 044282 || 0442E9 CD 92 43 04 10941  			CALL	OSSHUT			; Close it
	pop	af                         ; 0442ED || 	pop	af                         ; 044286 || 0442ED F1          10942  			POP	AF			; Restore the channel
	ld	($044d45),a                 ; 0442EE || 	ld	($044d45),a                 ; 044287 || 0442EE 32 45 4D 04 10943  			LD	(OSWRCHCH), A
	ret                            ; 0442F2 || 	ret                            ; 04428B || 0442F2 C9          10944  			RET
	ld	a,$02                       ; 0442F3 || 	ld	a,$02                       ; 04428C || 0442F3 3E 02       0001M 			LD	A, function
	rst.lis	$08                    ; 0442F5 || 	rst.lis	$08                    ; 04428E || 0442F5 49 CF       0002M 			RST.LIS	08h
	or	a                           ; 0442F7 || 	or	a                           ; 044290 || 0442F7 B7          10949  			OR	A			; If there is no error (A=0)
	ret	z                          ; 0442F8 || 	ret	z                          ; 044291 || 0442F8 C8          10950  			RET	Z			; Just return
	jr	$-$7b                       ; 0442F9 || 	jr	$-$7b                       ; 044292 || 0442F9 18 83       10951  			JR	OSERROR			; Trip an error
	push	hl                        ; 0442FB || 	push	hl                        ; 044294 || 0442FB E5          10957  EXT_DEFAULT:		PUSH	HL			; Stack the filename pointer
	ld	c,$2e                       ; 0442FC || 	ld	c,$2e                       ; 044295 || 0442FC 0E 2E       10958  			LD	C, '.'			; Search for dot (marks start of extension)
	call	$043e8f                   ; 0442FE || 	call	$043e39                   ; 044297 || 0442FE CD 8F 3E 04 10959  			CALL	CSTR_FINDCH
	or	a                           ; 044302 || 	or	a                           ; 04429B || 044302 B7          10960  			OR	A			; Check for end of string marker
	jr	nz,$+$0a                    ; 044303 || 	jr	nz,$+$0a                    ; 04429C || 044303 20 08       10961  			JR	NZ, @F			; No, so skip as we have an extension at this point
	ld	de,$04433f                  ; 044305 || 	ld	de,$0442d8                  ; 04429E || 044305 11 3F 43 04 10962  			LD	DE, EXT_LOOKUP		; Get the first (default extension)
	call	$043ea6                   ; 044309 || 	call	$043e50                   ; 0442A2 || 044309 CD A6 3E 04 10963  			CALL	CSTR_CAT		; Concat it to string pointed to by HL
	pop	hl                         ; 04430D || 	pop	hl                         ; 0442A6 || 04430D E1          10964  @@:			POP	HL			; Restore the filename pointer
	ret                            ; 04430E || 	ret                            ; 0442A7 || 04430E C9          10965  			RET
	push	hl                        ; 04430F || 	push	hl                        ; 0442A8 || 04430F E5          10972  EXT_HANDLER:		PUSH	HL			; Stack the filename pointer
	ld	c,$2e                       ; 044310 || 	ld	c,$2e                       ; 0442A9 || 044310 0E 2E       10973  			LD	C, '.'			; Find the '.'
	call	$043e8f                   ; 044312 || 	call	$043e39                   ; 0442AB || 044312 CD 8F 3E 04 10974  			CALL	CSTR_FINDCH
	ld	de,$04433f                  ; 044316 || 	ld	de,$0442d8                  ; 0442AF || 044316 11 3F 43 04 10975  			LD	DE, EXT_LOOKUP		; The lookup table
	push	hl                        ; 04431A || 	push	hl                        ; 0442B3 || 04431A E5          10977  EXT_HANDLER_1:		PUSH	HL			; Stack the pointer to the extension
	call	$043e97                   ; 04431B || 	call	$043e41                   ; 0442B4 || 04431B CD 97 3E 04 10978  			CALL	CSTR_ENDSWITH		; Check whether the string ends with the entry in the lookup
	pop	hl                         ; 04431F || 	pop	hl                         ; 0442B8 || 04431F E1          10979  			POP	HL			; Restore the pointer to the extension
	jr	z,$+$1b                     ; 044320 || 	jr	z,$+$1b                     ; 0442B9 || 044320 28 19       10980  			JR	Z, EXT_HANDLER_2	; We have a match!
	ld	a,(de)                      ; 044322 || 	ld	a,(de)                      ; 0442BB || 044322 1A          10982  @@:			LD	A, (DE)			; Skip to the end of the entry in the lookup
	inc	de                         ; 044323 || 	inc	de                         ; 0442BC || 044323 13          10983  			INC	DE
	or	a                           ; 044324 || 	or	a                           ; 0442BD || 044324 B7          10984  			OR	A
	jr	nz,$-$03                    ; 044325 || 	jr	nz,$-$03                    ; 0442BE || 044325 20 FB       10985  			JR	NZ, @B
	inc	de                         ; 044327 || 	inc	de                         ; 0442C0 || 044327 13          10986  			INC	DE			; Skip the file extension # byte
	ld	a,(de)                      ; 044328 || 	ld	a,(de)                      ; 0442C1 || 044328 1A          10988  			LD	A, (DE)			; Are we at the end of the table?
	or	a                           ; 044329 || 	or	a                           ; 0442C2 || 044329 B7          10989  			OR	A
	jr	nz,$-$10                    ; 04432A || 	jr	nz,$-$10                    ; 0442C3 || 04432A 20 EE       10990  			JR	NZ, EXT_HANDLER_1	; No, so loop
	ld	a,$cc                       ; 04432C || 	ld	a,$cc                       ; 0442C5 || 04432C 3E CC       10992  			LD      A,204			; Throw a "Bad name" error
	call	$0437cd                   ; 04432E || 	call	$043777                   ; 0442C7 || 04432E CD CD 37 04 10993          		CALL    EXTERR
	ld	b,d                         ; 044332 || 	ld	b,d                         ; 0442CB || 044332 42 61 64 20 10994          		DB    	"Bad name", 0
	ld	h,c                         ; 044333 || 	ld	h,c                         ; 0442CC
	ld	h,h                         ; 044334 || 	ld	h,h                         ; 0442CD
	jr	nz,$+$70                    ; 044335 || 	jr	nz,$+$70                    ; 0442CE
	ld	h,c                         ; 044337 || 	ld	h,c                         ; 0442D0
	ld	l,l                         ; 044338 || 	ld	l,l                         ; 0442D1
	ld	h,l                         ; 044339 || 	ld	h,l                         ; 0442D2
	nop                            ; 04433A || 	nop                            ; 0442D3
	inc	de                         ; 04433B || 	inc	de                         ; 0442D4 || 04433B 13          10996  EXT_HANDLER_2:		INC	DE			; Skip to the file extension # byte
	ld	a,(de)                      ; 04433C || 	ld	a,(de)                      ; 0442D5 || 04433C 1A          10997  			LD	A, (DE)
	pop	hl                         ; 04433D || 	pop	hl                         ; 0442D6 || 04433D E1          10998  			POP	HL			; Restore the filename pointer
	ret                            ; 04433E || 	ret                            ; 0442D7 || 04433E C9          10999  			RET
	ld	l,$42                       ; 04433F || 	ld	l,$42                       ; 0442D8 || 04433F 2E 42 42 43 11008  EXT_LOOKUP:		DB	".BBC", 0, 0		; First entry is the default extension
	ld	b,d                         ; 044341 || 	ld	b,d                         ; 0442DA
	ld	b,e                         ; 044342 || 	ld	b,e                         ; 0442DB
	nop                            ; 044343 || 	nop                            ; 0442DC
	nop                            ; 044344 || 	nop                            ; 0442DD
	ld	l,$54                       ; 044345 || 	ld	l,$54                       ; 0442DE || 044345 2E 54 58 54 11009  			DB	".TXT", 0, 1
	ld	e,b                         ; 044347 || 	ld	e,b                         ; 0442E0
	ld	d,h                         ; 044348 || 	ld	d,h                         ; 0442E1
	nop                            ; 044349 || 	nop                            ; 0442E2
	ld	bc,$53412e                  ; 04434A || 	ld	bc,$53412e                  ; 0442E3
	ld	b,e                         ; 04434E || 	ld	b,e                         ; 0442E7
	nop                            ; 04434F || 	nop                            ; 0442E8
	ld	bc,$41422e                  ; 044350 || 	ld	bc,$41422e                  ; 0442E9
	ld	d,e                         ; 044354 || 	ld	d,e                         ; 0442ED
	nop                            ; 044355 || 	nop                            ; 0442EE
	ld	bc,$6e2100                  ; 044356 || 	ld	bc,$072100                  ; 0442EF
	ld	b,e                         ; 04435A || 	ld	b,e                         ; 0442F3
	inc	b                          ; 04435B || 	inc	b                          ; 0442F4
	ld	a,(hl)                      ; 04435C || 	ld	a,(hl)                      ; 0442F5 || 04435C 7E          11031  OSCALL_1:		LD	A, (HL)
	inc	hl                         ; 04435D || 	inc	hl                         ; 0442F6 || 04435D 23          11032  			INC	HL
	cp	$ff                         ; 04435E || 	cp	$ff                         ; 0442F7 || 04435E FE FF       11033  			CP	FFh
	ret	z                          ; 044360 || 	ret	z                          ; 0442F9 || 044360 C8          11034  			RET	Z
	cp	iyl                         ; 044361 || 	cp	iyl                         ; 0442FA || 044361 FD BD       11035  			CP	A, IYL
	jr	z,$+$08                     ; 044363 || 	jr	z,$+$08                     ; 0442FC || 044363 28 06       11036  			JR	Z, OSCALL_2
	ret	nc                         ; 044365 || 	ret	nc                         ; 0442FE || 044365 D0          11037  			RET	NC
	inc	hl                         ; 044366 || 	inc	hl                         ; 0442FF || 044366 23          11038  			INC	HL
	inc	hl                         ; 044367 || 	inc	hl                         ; 044300 || 044367 23          11039  			INC	HL
	inc	hl                         ; 044368 || 	inc	hl                         ; 044301 || 044368 23          11040  			INC	HL
	jr	$-$0d                       ; 044369 || 	jr	$-$0d                       ; 044302 || 044369 18 F1       11041  			JR	OSCALL_1
	ld	iy,(hl)                     ; 04436B || 	ld	iy,(hl)                     ; 044304 || 04436B ED 31       11042  OSCALL_2:		LD	IY,(HL)
	ret                            ; 04436D || 	ret                            ; 044306 || 04436D C9          11043  			RET
	call	nc,$0443a2                ; 04436E || 	call	nc,$04433b                ; 044307 || 04436E D4          11044  OSCALL_TABLE:		DB 	D4h
	rst	$10                        ; 044372 || 	rst	$10                        ; 04430B || 044372 D7          11046  			DB 	D7h
	sbc	a,d                        ; 044373                                         || 044373 9A 43 04    11047  			DW24 	OSBGET
	ld	b,e                         ; 044374 || 	ld	b,e                         ; 04430D
	inc	b                          ; 044375 || 	inc	b                          ; 04430E
	xor	$56                        ; 044376 || 	xor	$00                        ; 04430F || 044376 EE          11048  			DB 	EEh
	ccf                            ; 044378
	inc	b                          ; 044379
	call	p,$044120                 ; 04437A                                         || 04437A F4          11050  			DB	F4h
	rst	$30                        ; 04437E                                         || 04437E F7          11052  			DB	F7h
	and	$3f                        ; 04437F                                         || 04437F E6 3F 04    11053  			DW24	OSCLI
	inc	b                          ; 044381 || 	inc	b                          ; 04431A
	rst	$38                        ; 044382 || 	rst	$38                        ; 04431B || 044382 FF          11054  			DB	FFh
	ld	c,$01                       ; 044383 || 	ld	c,$01                       ; 04431C || 044383 0E 01       11065  OSOPEN:			LD	C, fa_read
	jr	z,$+$08                     ; 044385 || 	jr	z,$+$08                     ; 04431E || 044385 28 06       11066  			JR	Z, @F
	ld	c,$32                       ; 044387 || 	ld	c,$32                       ; 044320 || 044387 0E 32       11067  			LD	C, fa_write | fa_open_append
	jr	c,$+$04                     ; 044389 || 	jr	c,$+$04                     ; 044322 || 044389 38 02       11068  			JR	C, @F
	ld	c,$0a                       ; 04438B || 	ld	c,$0a                       ; 044324 || 04438B 0E 0A       11069  			LD	C, fa_write | fa_create_always
	ld	a,$0a                       ; 04438D || 	ld	a,$0a                       ; 044326 || 04438D 3E 0A       0001M 			LD	A, function
	rst.lis	$08                    ; 04438F || 	rst.lis	$08                    ; 044328 || 04438F 49 CF       0002M 			RST.LIS	08h
	ret                            ; 044391 || 	ret                            ; 04432A || 044391 C9          11071  			RET
	push	bc                        ; 044392 || 	push	bc                        ; 04432B || 044392 C5          11078  OSSHUT:			PUSH	BC
	ld	c,e                         ; 044393 || 	ld	c,e                         ; 04432C || 044393 4B          11079  			LD	C, E
	ld	a,$0b                       ; 044394 || 	ld	a,$0b                       ; 04432D || 044394 3E 0B       0001M 			LD	A, function
	rst.lis	$08                    ; 044396 || 	rst.lis	$08                    ; 04432F || 044396 49 CF       0002M 			RST.LIS	08h
	pop	bc                         ; 044398 || 	pop	bc                         ; 044331 || 044398 C1          11081  			POP	BC
	ret                            ; 044399 || 	ret                            ; 044332 || 044399 C9          11082  			RET
	push	bc                        ; 04439A || 	push	bc                        ; 044333 || 04439A C5          11091  OSBGET:			PUSH	BC
	ld	c,e                         ; 04439B || 	ld	c,e                         ; 044334 || 04439B 4B          11092  			LD	C, E
	ld	a,$0c                       ; 04439C || 	ld	a,$0c                       ; 044335 || 04439C 3E 0C       0001M 			LD	A, function
	rst.lis	$08                    ; 04439E || 	rst.lis	$08                    ; 044337 || 04439E 49 CF       0002M 			RST.LIS	08h
	pop	bc                         ; 0443A0 || 	pop	bc                         ; 044339 || 0443A0 C1          11094  			POP	BC
	ret                            ; 0443A1 || 	ret                            ; 04433A || 0443A1 C9          11095  			RET
	push	bc                        ; 0443A2 || 	push	bc                        ; 04433B || 0443A2 C5          11102  OSBPUT:			PUSH	BC
	ld	c,e                         ; 0443A3 || 	ld	c,e                         ; 04433C || 0443A3 4B          11103  			LD	C, E
	ld	b,a                         ; 0443A4 || 	ld	b,a                         ; 04433D || 0443A4 47          11104  			LD	B, A
	ld	a,$0d                       ; 0443A5 || 	ld	a,$0d                       ; 04433E || 0443A5 3E 0D       0001M 			LD	A, function
	rst.lis	$08                    ; 0443A7 || 	rst.lis	$08                    ; 044340 || 0443A7 49 CF       0002M 			RST.LIS	08h
	pop	bc                         ; 0443A9 || 	pop	bc                         ; 044342 || 0443A9 C1          11106  			POP	BC
	ret                            ; 0443AA || 	ret                            ; 044343 || 0443AA C9          11107  			RET
	push	bc                        ; 0443AB || 	push	bc                        ; 044344 || 0443AB C5          11116  OSSTAT:			PUSH	BC
	ld	c,e                         ; 0443AC || 	ld	c,e                         ; 044345 || 0443AC 4B          11117  			LD	C, E
	ld	a,$0e                       ; 0443AD || 	ld	a,$0e                       ; 044346 || 0443AD 3E 0E       0001M 			LD	A, function
	rst.lis	$08                    ; 0443AF || 	rst.lis	$08                    ; 044348 || 0443AF 49 CF       0002M 			RST.LIS	08h
	pop	bc                         ; 0443B1 || 	pop	bc                         ; 04434A || 0443B1 C1          11119  			POP	BC
	cp	$01                         ; 0443B2 || 	cp	$01                         ; 04434B || 0443B2 FE 01       11120  			CP	1
	ret                            ; 0443B4 || 	ret                            ; 04434D || 0443B4 C9          11121  			RET
	push	iy                        ; 0443B5 || 	push	iy                        ; 04434E || 0443B5 FD E5       11129  GETPTR:			PUSH		IY
	ld	c,e                         ; 0443B7 || 	ld	c,e                         ; 044350 || 0443B7 4B          11130  			LD		C, E
	ld	a,$19                       ; 0443B8 || 	ld	a,$19                       ; 044351 || 0443B8 3E 19       0001M 			LD	A, function
	rst.lis	$08                    ; 0443BA || 	rst.lis	$08                    ; 044353 || 0443BA 49 CF       0002M 			RST.LIS	08h
	push	hl                        ; 0443BC || 	push	hl                        ; 044355 || 0443BC E5          11132  			PUSH		HL
	pop	iy                         ; 0443BD || 	pop	iy                         ; 044356 || 0443BD FD E1       11133  			POP		IY		; IYU: Pointer to FIL structure
	ld	l,(iy+$11)                  ; 0443BF || 	ld	l,(iy+$11)                  ; 044358 || 0443BF FD 6E 11    11134  			LD		L, (IY + FIL.fptr + 0)
	ld	h,(iy+$12)                  ; 0443C2 || 	ld	h,(iy+$12)                  ; 04435B || 0443C2 FD 66 12    11135  			LD		H, (IY + FIL.fptr + 1)
	ld	e,(iy+$13)                  ; 0443C5 || 	ld	e,(iy+$13)                  ; 04435E || 0443C5 FD 5E 13    11136  			LD		E, (IY + FIL.fptr + 2)
	ld	d,(iy+$14)                  ; 0443C8 || 	ld	d,(iy+$14)                  ; 044361 || 0443C8 FD 56 14    11137  			LD		D, (IY + FIL.fptr + 3)
	pop	iy                         ; 0443CB || 	pop	iy                         ; 044364 || 0443CB FD E1       11138  			POP		IY
	ret                            ; 0443CD || 	ret                            ; 044366 || 0443CD C9          11139  			RET
	push	iy                        ; 0443CE || 	push	iy                        ; 044367 || 0443CE FD E5       11146  PUTPTR:			PUSH		IY
	ld	c,a                         ; 0443D0 || 	ld	c,a                         ; 044369 || 0443D0 4F          11147  			LD		C, A  		; C: Filehandle
	push	hl                        ; 0443D1 || 	push	hl                        ; 04436A || 0443D1 E5          11148  			PUSH		HL
	ld	hl,$000002                  ; 0443D2 || 	ld	hl,$000002                  ; 04436B || 0443D2 21 02 00 00 11149  			LD		HL, 2
	add	hl,sp                      ; 0443D6 || 	add	hl,sp                      ; 04436F || 0443D6 39          11150  			ADD		HL, SP
	ld	(hl),e                      ; 0443D7 || 	ld	(hl),e                      ; 044370 || 0443D7 73          11151  			LD		(HL), E 	; 3rd byte of DWORD set to E
	pop	hl                         ; 0443D8 || 	pop	hl                         ; 044371 || 0443D8 E1          11152  			POP		HL
	ld	e,d                         ; 0443D9 || 	ld	e,d                         ; 044372 || 0443D9 5A          11153  			LD		E, D  		; 4th byte passed as E
	ld	a,$1c                       ; 0443DA || 	ld	a,$1c                       ; 044373 || 0443DA 3E 1C       0001M 			LD	A, function
	rst.lis	$08                    ; 0443DC || 	rst.lis	$08                    ; 044375 || 0443DC 49 CF       0002M 			RST.LIS	08h
	pop	iy                         ; 0443DE || 	pop	iy                         ; 044377 || 0443DE FD E1       11155  			POP		IY
	ret                            ; 0443E0 || 	ret                            ; 044379 || 0443E0 C9          11156  			RET
	push	iy                        ; 0443E1 || 	push	iy                        ; 04437A || 0443E1 FD E5       11164  GETEXT:         PUSH    IY
	ld	c,e                         ; 0443E3 || 	ld	c,e                         ; 04437C || 0443E3 4B          11165                  LD      C, E
	ld	a,$19                       ; 0443E4 || 	ld	a,$19                       ; 04437D || 0443E4 3E 19       0001M 			LD	A, function
	rst.lis	$08                    ; 0443E6 || 	rst.lis	$08                    ; 04437F || 0443E6 49 CF       0002M 			RST.LIS	08h
	push	hl                        ; 0443E8 || 	push	hl                        ; 044381 || 0443E8 E5          11167                  PUSH    HL
	pop	iy                         ; 0443E9 || 	pop	iy                         ; 044382 || 0443E9 FD E1       11168                  POP     IY          ; IYU: Pointer to FIL structure
	ld	l,(iy+$0b)                  ; 0443EB || 	ld	l,(iy+$0b)                  ; 044384 || 0443EB FD 6E 0B    11170                  LD      L, (IY + FIL.obj + FFOBJID.objsize + 0)
	ld	h,(iy+$0c)                  ; 0443EE || 	ld	h,(iy+$0c)                  ; 044387 || 0443EE FD 66 0C    11171                  LD      H, (IY + FIL.obj + FFOBJID.objsize + 1)
	ld	e,(iy+$0d)                  ; 0443F1 || 	ld	e,(iy+$0d)                  ; 04438A || 0443F1 FD 5E 0D    11172                  LD      E, (IY + FIL.obj + FFOBJID.objsize + 2)
	ld	d,(iy+$0e)                  ; 0443F4 || 	ld	d,(iy+$0e)                  ; 04438D || 0443F4 FD 56 0E    11173                  LD      D, (IY + FIL.obj + FFOBJID.objsize + 3)
	pop	iy                         ; 0443F7 || 	pop	iy                         ; 044390 || 0443F7 FD E1       11175                  POP     IY
	ret                            ; 0443F9 || 	ret                            ; 044392 || 0443F9 C9          11176  			RET
	push	iy                        ; 0443FA || 	push	iy                        ; 044393 || 0443FA FD E5       11180  GETIMS:			PUSH	IY
	ld	hl,$044a00                  ; 0443FC || 	ld	hl,$044a00                  ; 044395 || 0443FC 21 00 4A 04 11181  			LD	HL, ACCS 		; Where to store the time string
	ld	a,$12                       ; 044400 || 	ld	a,$12                       ; 044399 || 044400 3E 12       0001M 			LD	A, function
	rst.lis	$08                    ; 044402 || 	rst.lis	$08                    ; 04439B || 044402 49 CF       0002M 			RST.LIS	08h
	ld	de,$044a00                  ; 044404 || 	ld	de,$044a00                  ; 04439D || 044404 11 00 4A 04 11183  			LD	DE, ACCS		; DE: pointer to start of string accumulator
	ld	e,a                         ; 044408 || 	ld	e,a                         ; 0443A1 || 044408 5F          11184  			LD	E, A 			;  E: now points to the end of the string
	pop	iy                         ; 044409 || 	pop	iy                         ; 0443A2 || 044409 FD E1       11185  			POP	IY
	ret                            ; 04440B || 	ret                            ; 0443A4 || 04440B C9          11186  			RET
	call	$04030f                   ; 04440C || 	call	$04030a                   ; 0443A5 || 04440C CD 0F 03 04 11194  EXPR_W2:		CALL	EXPRI			; Get first parameter
	exx                            ; 044410 || 	exx                            ; 0443A9 || 044410 D9          11195  			EXX
	push	hl                        ; 044411 || 	push	hl                        ; 0443AA || 044411 E5          11196  			PUSH	HL
	call	$040a2a                   ; 044412 || 	call	$040a22                   ; 0443AB || 044412 CD 2A 0A 04 11197  			CALL	COMMA
	call	$04030f                   ; 044416 || 	call	$04030a                   ; 0443AF || 044416 CD 0F 03 04 11198  			CALL	EXPRI			; Get second parameter
	exx                            ; 04441A || 	exx                            ; 0443B3 || 04441A D9          11199  			EXX
	pop	de                         ; 04441B || 	pop	de                         ; 0443B4 || 04441B D1          11200  			POP	DE
	ret                            ; 04441C || 	ret                            ; 0443B5 || 04441C C9          11201  			RET
	ret                            ; 04441D || 	ret                            ; 0443B6 || 04441D C9          11205  RESET:			RET
	ld	a,$10                       ; 04441E                                         || 04441E 3E 10       0001M 		LD	A, val
	call	$043f56                   ; 044420 || 	call	$043777                   ; 0443B8 || 044420 CD 56 3F 04 0002M 		CALL	OSWRCH
	jp	$040b9e                     ; 044424 || 	jp	$040b96                     ; 0443C8 || 044424 C3 9E 0B 04 11255  			JP	XEQ
	ld	a,$0c                       ; 044428 || 	ld	a,$0c                       ; 0443CC || 044428 3E 0C       11259  CLRSCN:			LD	A, 0Ch
	jp	$043f56                     ; 04442A || 	jp	$043f00                     ; 0443CE || 04442A C3 56 3F 04 11260  			JP	OSWRCH
	push	ix                        ; 04442E || 	push	ix                        ; 0443D2 || 04442E DD E5       11264  MODE:			PUSH	IX			; Get the system vars in IX
	ld	a,$08                       ; 044430 || 	ld	a,$08                       ; 0443D4 || 044430 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 044432 || 	rst.lis	$08                    ; 0443D6 || 044432 49 CF       0002M 			RST.LIS	08h
	res	4,(ix+$04)                 ; 044434 || 	res	4,(ix+$04)                 ; 0443D8 || 044434 DD CB 04 A6 11266  			RES	4, (IX+sysvar_vpd_pflags)
	call	$04030f                   ; 044438 || 	call	$04030a                   ; 0443DC || 044438 CD 0F 03 04 11267  			CALL    EXPRI
	exx                            ; 04443C || 	exx                            ; 0443E0 || 04443C D9          11268  			EXX
	ld	a,$16                       ; 04443D || 	ld	a,$16                       ; 0443E1 || 04443D 3E 16       0001M 		LD	A, val
	call	$043f56                   ; 04443F || 	call	$043f00                   ; 0443E3 || 04443F CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,l                         ; 044443 || 	ld	a,l                         ; 0443E7 || 044443 7D          0001M 		LD	A, val
	call	$043f56                   ; 044444 || 	call	$043f00                   ; 0443E8 || 044444 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$08                       ; 044448 || 	ld	a,$08                       ; 0443EC || 044448 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 04444A || 	rst.lis	$08                    ; 0443EE || 04444A 49 CF       0002M 			RST.LIS	08h
	bit	4,(ix+$04)                 ; 04444C || 	bit	4,(ix+$04)                 ; 0443F0 || 04444C DD CB 04 66 11272  @@:			BIT	4, (IX+sysvar_vpd_pflags)
	jr	z,$-$04                     ; 044450 || 	jr	z,$-$04                     ; 0443F4 || 044450 28 FA       11273  			JR	Z, @B			; Wait for the result
	pop	ix                         ; 044452 || 	pop	ix                         ; 0443F6 || 044452 DD E1       11274  			POP	IX
	jp	$040b9e                     ; 044454 || 	jp	$040b96                     ; 0443F8 || 044454 C3 9E 0B 04 11275  			JP	XEQ
	inc	iy                         ; 044458 || 	inc	iy                         ; 0443FC || 044458 FD 23       11279  GETSCHR:		INC	IY
	call	$04030f                   ; 04445A || 	call	$04030a                   ; 0443FE || 04445A CD 0F 03 04 11280  			CALL    EXPRI      		; Get X coordinate
	exx                            ; 04445E || 	exx                            ; 044402 || 04445E D9          11281  			EXX
	ld	($044a00),hl                ; 04445F || 	ld	($044a00),hl                ; 044403 || 04445F 22 00 4A 04 11282  			LD	(VDU_BUFFER+0), HL
	call	$040a2a                   ; 044463 || 	call	$040a22                   ; 044407 || 044463 CD 2A 0A 04 11283  			CALL	COMMA
	call	$04030f                   ; 044467 || 	call	$04030a                   ; 04440B || 044467 CD 0F 03 04 11284  			CALL	EXPRI			; Get Y coordinate
	exx                            ; 04446B || 	exx                            ; 04440F || 04446B D9          11285  			EXX
	ld	($044a02),hl                ; 04446C || 	ld	($044a02),hl                ; 044410 || 04446C 22 02 4A 04 11286  			LD	(VDU_BUFFER+2), HL
	call	$040a37                   ; 044470 || 	call	$040a2f                   ; 044414 || 044470 CD 37 0A 04 11287  			CALL	BRAKET			; Closing bracket
	push	ix                        ; 044474 || 	push	ix                        ; 044418 || 044474 DD E5       11289  			PUSH	IX			; Get the system vars in IX
	ld	a,$08                       ; 044476 || 	ld	a,$08                       ; 04441A || 044476 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 044478 || 	rst.lis	$08                    ; 04441C || 044478 49 CF       0002M 			RST.LIS	08h
	res	1,(ix+$04)                 ; 04447A || 	res	1,(ix+$04)                 ; 04441E || 04447A DD CB 04 8E 11291  			RES	1, (IX+sysvar_vpd_pflags)
	ld	a,$17                       ; 04447E || 	ld	a,$17                       ; 044422 || 04447E 3E 17       0001M 		LD	A, val
	call	$043f56                   ; 044480 || 	call	$043f00                   ; 044424 || 044480 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 044484 || 	ld	a,$00                       ; 044428 || 044484 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 044486 || 	call	$043f00                   ; 04442A || 044486 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$83                       ; 04448A || 	ld	a,$83                       ; 04442E || 04448A 3E 83       0001M 		LD	A, val
	call	$043f56                   ; 04448C || 	call	$043f00                   ; 044430 || 04448C CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a00)                 ; 044490 || 	ld	a,($044a00)                 ; 044434 || 044490 3A 00 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 044494 || 	call	$043f00                   ; 044438 || 044494 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a01)                 ; 044498 || 	ld	a,($044a01)                 ; 04443C || 044498 3A 01 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 04449C || 	call	$043f00                   ; 044440 || 04449C CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a02)                 ; 0444A0 || 	ld	a,($044a02)                 ; 044444 || 0444A0 3A 02 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 0444A4 || 	call	$043f00                   ; 044448 || 0444A4 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a03)                 ; 0444A8 || 	ld	a,($044a03)                 ; 04444C || 0444A8 3A 03 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 0444AC || 	call	$043f00                   ; 044450 || 0444AC CD 56 3F 04 0002M 		CALL	OSWRCH
	bit	1,(ix+$04)                 ; 0444B0 || 	bit	1,(ix+$04)                 ; 044454 || 0444B0 DD CB 04 4E 11299  @@:			BIT	1, (IX+sysvar_vpd_pflags)
	jr	z,$-$04                     ; 0444B4 || 	jr	z,$-$04                     ; 044458 || 0444B4 28 FA       11300  			JR	Z, @B			; Wait for the result
	ld	a,(ix+$09)                  ; 0444B6 || 	ld	a,(ix+$09)                  ; 04445A || 0444B6 DD 7E 09    11301  			LD	A, (IX+sysvar_scrchar)	; Fetch the result in A
	or	a                           ; 0444B9 || 	or	a                           ; 04445D || 0444B9 B7          11302  			OR	A			; Check for 00h
	scf                            ; 0444BA || 	scf                            ; 04445E || 0444BA 37          11303  			SCF				; C = character map
	jr	nz,$+$04                    ; 0444BB || 	jr	nz,$+$04                    ; 04445F || 0444BB 20 02       11304  			JR	NZ, @F			; We have a character, so skip next bit
	xor	a                          ; 0444BD || 	xor	a                          ; 044461 || 0444BD AF          11305  			XOR	A			; Clear carry
	dec	a                          ; 0444BE || 	dec	a                          ; 044462 || 0444BE 3D          11306  			DEC	A			; Set A to FFh
	pop	ix                         ; 0444BF || 	pop	ix                         ; 044463 || 0444BF DD E1       11307  @@:			POP	IX
	jp	$0407e6                     ; 0444C1 || 	jp	$0407e1                     ; 044465 || 0444C1 C3 E6 07 04 11308  			JP	INKEY1			; Jump back to the GET command
	call	$04030f                   ; 0444C5 || 	call	$04030a                   ; 044469 || 0444C5 CD 0F 03 04 11312  POINT:			CALL    EXPRI      		; Get X coordinate
	exx                            ; 0444C9 || 	exx                            ; 04446D || 0444C9 D9          11313  			EXX
	ld	($044a00),hl                ; 0444CA || 	ld	($044a00),hl                ; 04446E || 0444CA 22 00 4A 04 11314  			LD	(VDU_BUFFER+0), HL
	call	$040a2a                   ; 0444CE || 	call	$040a22                   ; 044472 || 0444CE CD 2A 0A 04 11315  			CALL	COMMA
	call	$04030f                   ; 0444D2 || 	call	$04030a                   ; 044476 || 0444D2 CD 0F 03 04 11316  			CALL	EXPRI			; Get Y coordinate
	exx                            ; 0444D6 || 	exx                            ; 04447A || 0444D6 D9          11317  			EXX
	ld	($044a02),hl                ; 0444D7 || 	ld	($044a02),hl                ; 04447B || 0444D7 22 02 4A 04 11318  			LD	(VDU_BUFFER+2), HL
	call	$040a37                   ; 0444DB || 	call	$040a2f                   ; 04447F || 0444DB CD 37 0A 04 11319  			CALL	BRAKET			; Closing bracket
	push	ix                        ; 0444DF || 	push	ix                        ; 044483 || 0444DF DD E5       11321  			PUSH	IX			; Get the system vars in IX
	ld	a,$08                       ; 0444E1 || 	ld	a,$08                       ; 044485 || 0444E1 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 0444E3 || 	rst.lis	$08                    ; 044487 || 0444E3 49 CF       0002M 			RST.LIS	08h
	res	2,(ix+$04)                 ; 0444E5 || 	res	2,(ix+$04)                 ; 044489 || 0444E5 DD CB 04 96 11323  			RES	2, (IX+sysvar_vpd_pflags)
	ld	a,$17                       ; 0444E9 || 	ld	a,$17                       ; 04448D || 0444E9 3E 17       0001M 		LD	A, val
	call	$043f56                   ; 0444EB || 	call	$043f00                   ; 04448F || 0444EB CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 0444EF || 	ld	a,$00                       ; 044493 || 0444EF 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 0444F1 || 	call	$043f00                   ; 044495 || 0444F1 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$84                       ; 0444F5 || 	ld	a,$84                       ; 044499 || 0444F5 3E 84       0001M 		LD	A, val
	call	$043f56                   ; 0444F7 || 	call	$043f00                   ; 04449B || 0444F7 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a00)                 ; 0444FB || 	ld	a,($044a00)                 ; 04449F || 0444FB 3A 00 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 0444FF || 	call	$043f00                   ; 0444A3 || 0444FF CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a01)                 ; 044503 || 	ld	a,($044a01)                 ; 0444A7 || 044503 3A 01 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 044507 || 	call	$043f00                   ; 0444AB || 044507 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a02)                 ; 04450B || 	ld	a,($044a02)                 ; 0444AF || 04450B 3A 02 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 04450F || 	call	$043f00                   ; 0444B3 || 04450F CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a03)                 ; 044513 || 	ld	a,($044a03)                 ; 0444B7 || 044513 3A 03 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 044517 || 	call	$043f00                   ; 0444BB || 044517 CD 56 3F 04 0002M 		CALL	OSWRCH
	bit	2,(ix+$04)                 ; 04451B || 	bit	2,(ix+$04)                 ; 0444BF || 04451B DD CB 04 56 11331  @@:			BIT	2, (IX+sysvar_vpd_pflags)
	jr	z,$-$04                     ; 04451F || 	jr	z,$-$04                     ; 0444C3 || 04451F 28 FA       11332  			JR	Z, @B			; Wait for the result
	ld	l,(ix+$16)                  ; 044521 || 	ld	l,(ix+$16)                  ; 0444C5 || 044521 DD 6E 16    11336  			LD	L, (IX+sysvar_scrpixelIndex)
	pop	ix                         ; 044524 || 	pop	ix                         ; 0444C8 || 044524 DD E1       11337  			POP	IX
	jp	$040584                     ; 044526 || 	jp	$04057f                     ; 0444CA || 044526 C3 84 05 04 11338  			JP	COUNT0
	call	$04030f                   ; 04452A || 	call	$04030a                   ; 0444CE || 04452A CD 0F 03 04 11345  COLOUR:			CALL	EXPRI			; The colour / mode
	exx                            ; 04452E || 	exx                            ; 0444D2 || 04452E D9          11346  			EXX
	ld	a,l                         ; 04452F || 	ld	a,l                         ; 0444D3 || 04452F 7D          11347  			LD	A, L
	ld	($044a00),a                 ; 044530 || 	ld	($044a00),a                 ; 0444D4 || 044530 32 00 4A 04 11348  			LD	(VDU_BUFFER+0), A	; Store first parameter
	call	$040a78                   ; 044534 || 	call	$040a70                   ; 0444D8 || 044534 CD 78 0A 04 11349  			CALL	NXT			; Are there any more parameters?
	cp	$2c                         ; 044538 || 	cp	$2c                         ; 0444DC || 044538 FE 2C       11350  			CP	','
	jr	z,$+$14                     ; 04453A || 	jr	z,$+$14                     ; 0444DE || 04453A 28 12       11351  			JR	Z, COLOUR_1		; Yes, so we're doing a palette change next
	ld	a,$11                       ; 04453C || 	ld	a,$11                       ; 0444E0 || 04453C 3E 11       0001M 		LD	A, val
	call	$043f56                   ; 04453E || 	call	$043f00                   ; 0444E2 || 04453E CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a00)                 ; 044542 || 	ld	a,($044a00)                 ; 0444E6 || 044542 3A 00 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 044546 || 	call	$043f00                   ; 0444EA || 044546 CD 56 3F 04 0002M 		CALL	OSWRCH
	jp	$040b9e                     ; 04454A || 	jp	$040b96                     ; 0444EE || 04454A C3 9E 0B 04 11355  			JP	XEQ
	call	$040a2a                   ; 04454E || 	call	$040a22                   ; 0444F2 || 04454E CD 2A 0A 04 11357  COLOUR_1:		CALL	COMMA
	call	$04030f                   ; 044552 || 	call	$04030a                   ; 0444F6 || 044552 CD 0F 03 04 11358  			CALL	EXPRI			; Parse R (OR P)
	exx                            ; 044556 || 	exx                            ; 0444FA || 044556 D9          11359  			EXX
	ld	a,l                         ; 044557 || 	ld	a,l                         ; 0444FB || 044557 7D          11360  			LD	A, L
	ld	($044a01),a                 ; 044558 || 	ld	($044a01),a                 ; 0444FC || 044558 32 01 4A 04 11361  			LD	(VDU_BUFFER+1), A
	call	$040a78                   ; 04455C || 	call	$040a70                   ; 044500 || 04455C CD 78 0A 04 11362  			CALL	NXT			; Are there any more parameters?
	cp	$2c                         ; 044560 || 	cp	$2c                         ; 044504 || 044560 FE 2C       11363  			CP	','
	jr	z,$+$2e                     ; 044562 || 	jr	z,$+$2e                     ; 044506 || 044562 28 2C       11364  			JR	Z, COLOUR_2		; Yes, so we're doing COLOUR L,R,G,B
	ld	a,$13                       ; 044564 || 	ld	a,$13                       ; 044508 || 044564 3E 13       0001M 		LD	A, val
	call	$043f56                   ; 044566 || 	call	$043f00                   ; 04450A || 044566 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a00)                 ; 04456A || 	ld	a,($044a00)                 ; 04450E || 04456A 3A 00 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 04456E || 	call	$043f00                   ; 044512 || 04456E CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a01)                 ; 044572 || 	ld	a,($044a01)                 ; 044516 || 044572 3A 01 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 044576 || 	call	$043f00                   ; 04451A || 044576 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 04457A || 	ld	a,$00                       ; 04451E || 04457A 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 04457C || 	call	$043f00                   ; 044520 || 04457C CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 044580 || 	ld	a,$00                       ; 044524 || 044580 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 044582 || 	call	$043f00                   ; 044526 || 044582 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 044586 || 	ld	a,$00                       ; 04452A || 044586 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 044588 || 	call	$043f00                   ; 04452C || 044588 CD 56 3F 04 0002M 		CALL	OSWRCH
	jp	$040b9e                     ; 04458C || 	jp	$040b96                     ; 044530 || 04458C C3 9E 0B 04 11372  			JP	XEQ
	call	$040a2a                   ; 044590 || 	call	$040a22                   ; 044534 || 044590 CD 2A 0A 04 11374  COLOUR_2:		CALL	COMMA
	call	$04030f                   ; 044594 || 	call	$04030a                   ; 044538 || 044594 CD 0F 03 04 11375  			CALL	EXPRI			; Parse G
	exx                            ; 044598 || 	exx                            ; 04453C || 044598 D9          11376  			EXX
	ld	a,l                         ; 044599 || 	ld	a,l                         ; 04453D || 044599 7D          11377  			LD	A, L
	ld	($044a02),a                 ; 04459A || 	ld	($044a02),a                 ; 04453E || 04459A 32 02 4A 04 11378  			LD	(VDU_BUFFER+2), A
	call	$040a2a                   ; 04459E || 	call	$040a22                   ; 044542 || 04459E CD 2A 0A 04 11379  			CALL	COMMA
	call	$04030f                   ; 0445A2 || 	call	$04030a                   ; 044546 || 0445A2 CD 0F 03 04 11380  			CALL	EXPRI			; Parse B
	exx                            ; 0445A6 || 	exx                            ; 04454A || 0445A6 D9          11381  			EXX
	ld	a,l                         ; 0445A7 || 	ld	a,l                         ; 04454B || 0445A7 7D          11382  			LD	A, L
	ld	($044a03),a                 ; 0445A8 || 	ld	($044a03),a                 ; 04454C || 0445A8 32 03 4A 04 11383  			LD	(VDU_BUFFER+3), A
	ld	a,$13                       ; 0445AC || 	ld	a,$13                       ; 044550 || 0445AC 3E 13       0001M 		LD	A, val
	call	$043f56                   ; 0445AE || 	call	$043f00                   ; 044552 || 0445AE CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a00)                 ; 0445B2 || 	ld	a,($044a00)                 ; 044556 || 0445B2 3A 00 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 0445B6 || 	call	$043f00                   ; 04455A || 0445B6 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$ff                       ; 0445BA || 	ld	a,$ff                       ; 04455E || 0445BA 3E FF       0001M 		LD	A, val
	call	$043f56                   ; 0445BC || 	call	$043f00                   ; 044560 || 0445BC CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a01)                 ; 0445C0 || 	ld	a,($044a01)                 ; 044564 || 0445C0 3A 01 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 0445C4 || 	call	$043f00                   ; 044568 || 0445C4 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a02)                 ; 0445C8 || 	ld	a,($044a02)                 ; 04456C || 0445C8 3A 02 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 0445CC || 	call	$043f00                   ; 044570 || 0445CC CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a03)                 ; 0445D0 || 	ld	a,($044a03)                 ; 044574 || 0445D0 3A 03 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 0445D4 || 	call	$043f00                   ; 044578 || 0445D4 CD 56 3F 04 0002M 		CALL	OSWRCH
	jp	$040b9e                     ; 0445D8 || 	jp	$040b96                     ; 04457C || 0445D8 C3 9E 0B 04 11390  			JP	XEQ
	call	$04030f                   ; 0445DC || 	call	$04030a                   ; 044580 || 0445DC CD 0F 03 04 11394  GCOL:			CALL	EXPRI			; Parse MODE
	exx                            ; 0445E0 || 	exx                            ; 044584 || 0445E0 D9          11395  			EXX
	ld	a,l                         ; 0445E1 || 	ld	a,l                         ; 044585 || 0445E1 7D          11396  			LD	A, L
	ld	($044a00),a                 ; 0445E2 || 	ld	($044a00),a                 ; 044586 || 0445E2 32 00 4A 04 11397  			LD	(VDU_BUFFER+0), A
	call	$040a2a                   ; 0445E6 || 	call	$040a22                   ; 04458A || 0445E6 CD 2A 0A 04 11398  			CALL	COMMA
	call	$04030f                   ; 0445EA || 	call	$04030a                   ; 04458E || 0445EA CD 0F 03 04 11400  			CALL	EXPRI			; Parse Colour
	exx                            ; 0445EE || 	exx                            ; 044592 || 0445EE D9          11401  			EXX
	ld	a,l                         ; 0445EF || 	ld	a,l                         ; 044593 || 0445EF 7D          11402  			LD	A, L
	ld	($044a01),a                 ; 0445F0 || 	ld	($044a01),a                 ; 044594 || 0445F0 32 01 4A 04 11403  			LD	(VDU_BUFFER+1), A
	ld	a,$12                       ; 0445F4 || 	ld	a,$12                       ; 044598 || 0445F4 3E 12       0001M 		LD	A, val
	call	$043f56                   ; 0445F6 || 	call	$043f00                   ; 04459A || 0445F6 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a00)                 ; 0445FA || 	ld	a,($044a00)                 ; 04459E || 0445FA 3A 00 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 0445FE || 	call	$043f00                   ; 0445A2 || 0445FE CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a01)                 ; 044602 || 	ld	a,($044a01)                 ; 0445A6 || 044602 3A 01 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 044606 || 	call	$043f00                   ; 0445AA || 044606 CD 56 3F 04 0002M 		CALL	OSWRCH
	jp	$040b9e                     ; 04460A || 	jp	$040b96                     ; 0445AE || 04460A C3 9E 0B 04 11408  			JP	XEQ
	call	$04030f                   ; 04460E || 	call	$04030a                   ; 0445B2 || 04460E CD 0F 03 04 11412  PLOT:			CALL	EXPRI		; Parse mode
	exx                            ; 044612 || 	exx                            ; 0445B6 || 044612 D9          11413  			EXX
	push	hl                        ; 044613 || 	push	hl                        ; 0445B7 || 044613 E5          11414  			PUSH	HL		; Push mode (L) onto stack
	call	$040a2a                   ; 044614 || 	call	$040a22                   ; 0445B8 || 044614 CD 2A 0A 04 11415  			CALL	COMMA
	call	$04440c                   ; 044618 || 	call	$0443a5                   ; 0445BC || 044618 CD 0C 44 04 11416  			CALL	EXPR_W2		; Parse X and Y
	pop	bc                         ; 04461C || 	pop	bc                         ; 0445C0 || 04461C C1          11417  			POP	BC		; Pop mode (C) off stack
	ld	a,$19                       ; 04461D || 	ld	a,$19                       ; 0445C1 || 04461D 3E 19       0001M 		LD	A, val
	call	$043f56                   ; 04461F || 	call	$043f00                   ; 0445C3 || 04461F CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,c                         ; 044623 || 	ld	a,c                         ; 0445C7 || 044623 79          0001M 		LD	A, val
	call	$043f56                   ; 044624 || 	call	$043f00                   ; 0445C8 || 044624 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,e                         ; 044628 || 	ld	a,e                         ; 0445CC || 044628 7B          0001M 		LD	A, val
	call	$043f56                   ; 044629 || 	call	$043f00                   ; 0445CD || 044629 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,d                         ; 04462D || 	ld	a,d                         ; 0445D1 || 04462D 7A          0001M 		LD	A, val
	call	$043f56                   ; 04462E || 	call	$043f00                   ; 0445D2 || 04462E CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,l                         ; 044632 || 	ld	a,l                         ; 0445D6 || 044632 7D          0001M 		LD	A, val
	call	$043f56                   ; 044633 || 	call	$043f00                   ; 0445D7 || 044633 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,h                         ; 044637 || 	ld	a,h                         ; 0445DB || 044637 7C          0001M 		LD	A, val
	call	$043f56                   ; 044638 || 	call	$043f00                   ; 0445DC || 044638 CD 56 3F 04 0002M 		CALL	OSWRCH
	jp	$040b9e                     ; 04463C || 	jp	$040b96                     ; 0445E0 || 04463C C3 9E 0B 04 11424  			JP	XEQ
	call	$04440c                   ; 044640 || 	call	$0443a5                   ; 0445E4 || 044640 CD 0C 44 04 11428  MOVE:			CALL	EXPR_W2		; Parse X and Y
	ld	c,$04                       ; 044644 || 	ld	c,$04                       ; 0445E8 || 044644 0E 04       11429  			LD	C, 04H		; Plot mode 04H (Move)
	jr	$-$29                       ; 044646 || 	jr	$-$29                       ; 0445EA || 044646 18 D5       11430  			JR	PLOT_1		; Plot
	call	$04440c                   ; 044648 || 	call	$0443a5                   ; 0445EC || 044648 CD 0C 44 04 11435  DRAW:			CALL	EXPR_W2		; Get X1 and Y1
	call	$040a78                   ; 04464C || 	call	$040a70                   ; 0445F0 || 04464C CD 78 0A 04 11436  			CALL	NXT		; Are there any more parameters?
	cp	$2c                         ; 044650 || 	cp	$2c                         ; 0445F4 || 044650 FE 2C       11437  			CP	','
	ld	c,$05                       ; 044652 || 	ld	c,$05                       ; 0445F6 || 044652 0E 05       11438  			LD	C, 05h		; Code for LINE
	jr	nz,$-$37                    ; 044654 || 	jr	nz,$-$37                    ; 0445F8 || 044654 20 C7       11439  			JR	NZ, PLOT_1	; No, so just do DRAW x1,y1
	ld	a,$19                       ; 044656 || 	ld	a,$19                       ; 0445FA || 044656 3E 19       0001M 		LD	A, val
	call	$043f56                   ; 044658 || 	call	$043f00                   ; 0445FC || 044658 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$04                       ; 04465C || 	ld	a,$04                       ; 044600 || 04465C 3E 04       0001M 		LD	A, val
	call	$043f56                   ; 04465E || 	call	$043f00                   ; 044602 || 04465E CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,e                         ; 044662 || 	ld	a,e                         ; 044606 || 044662 7B          0001M 		LD	A, val
	call	$043f56                   ; 044663 || 	call	$043f00                   ; 044607 || 044663 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,d                         ; 044667 || 	ld	a,d                         ; 04460B || 044667 7A          0001M 		LD	A, val
	call	$043f56                   ; 044668 || 	call	$043f00                   ; 04460C || 044668 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,l                         ; 04466C || 	ld	a,l                         ; 044610 || 04466C 7D          0001M 		LD	A, val
	call	$043f56                   ; 04466D || 	call	$043f00                   ; 044611 || 04466D CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,h                         ; 044671 || 	ld	a,h                         ; 044615 || 044671 7C          0001M 		LD	A, val
	call	$043f56                   ; 044672 || 	call	$043f00                   ; 044616 || 044672 CD 56 3F 04 0002M 		CALL	OSWRCH
	call	$040a2a                   ; 044676 || 	call	$040a22                   ; 04461A || 044676 CD 2A 0A 04 11446  			CALL	COMMA
	push	bc                        ; 04467A || 	push	bc                        ; 04461E || 04467A C5          11447  			PUSH	BC
	call	$04440c                   ; 04467B || 	call	$0443a5                   ; 04461F || 04467B CD 0C 44 04 11448  			CALL	EXPR_W2		; Get X2 and Y2
	pop	bc                         ; 04467F || 	pop	bc                         ; 044623 || 04467F C1          11449  			POP	BC
	jr	$-$63                       ; 044680 || 	jr	$-$63                       ; 044624 || 044680 18 9B       11450  			JR	PLOT_1		; Now DRAW the line to those positions
	call	$04440c                   ; 044682 || 	call	$0443a5                   ; 044626 || 044682 CD 0C 44 04 11488  SOUND:			CALL	EXPR_W2			; DE: Channel/Control, HL: Volume
	ld	a,l                         ; 044686 || 	ld	a,l                         ; 04462A || 044686 7D          11489  			LD	A, L 			;  A: Volume
	push	af                        ; 044687 || 	push	af                        ; 04462B || 044687 F5          11490  			PUSH	AF
	push	de                        ; 044688 || 	push	de                        ; 04462C || 044688 D5          11491  			PUSH	DE
	call	$040a2a                   ; 044689 || 	call	$040a22                   ; 04462D || 044689 CD 2A 0A 04 11492  			CALL	COMMA
	call	$04440c                   ; 04468D || 	call	$0443a5                   ; 044631 || 04468D CD 0C 44 04 11493  			CALL	EXPR_W2			; DE: Pitch, HL: Duration
	ld	d,e                         ; 044691 || 	ld	d,e                         ; 044635 || 044691 53          11494  			LD	D, E			;  D: Pitch
	ld	e,l                         ; 044692 || 	ld	e,l                         ; 044636 || 044692 5D          11495  			LD	E, L 			;  E: Duration
	pop	hl                         ; 044693 || 	pop	hl                         ; 044637 || 044693 E1          11496  			POP	HL 			; HL: Channel/Control
	pop	af                         ; 044694 || 	pop	af                         ; 044638 || 044694 F1          11497  			POP	AF
	neg                            ; 044695 || 	neg                            ; 044639 || 044695 ED 44       11498  			NEG
	cp	$10                         ; 044697 || 	cp	$10                         ; 04463B || 044697 FE 10       11499  			CP	16			; Check volume is in bounds
	jp	nc,$040b9e                  ; 044699 || 	jp	nc,$040b96                  ; 04463D || 044699 D2 9E 0B 04 11500  			JP	NC, XEQ			; Out of bounds, do nothing
	ld	c,a                         ; 04469D || 	ld	c,a                         ; 044641 || 04469D 4F          11504  			LD	C, A			; Store Volume in C
	ld	a,l                         ; 04469E || 	ld	a,l                         ; 044642 || 04469E 7D          11505  			LD	A, L
	ld	($044a00),a                 ; 04469F || 	ld	($044a00),a                 ; 044643 || 04469F 32 00 4A 04 11506  			LD	(VDU_BUFFER+0), A	; Channel
	xor	a                          ; 0446A3 || 	xor	a                          ; 044647 || 0446A3 AF          11507  			XOR	A
	ld	($044a01),a                 ; 0446A4 || 	ld	($044a01),a                 ; 044648 || 0446A4 32 01 4A 04 11508  			LD	(VDU_BUFFER+1), A	; Waveform
	ld	b,$06                       ; 0446A8 || 	ld	b,$06                       ; 04464C || 0446A8 06 06       11512  			LD	B, 6			; C already contains the volume
	mlt	bc                         ; 0446AA || 	mlt	bc                         ; 04464E || 0446AA ED 4C       11513  			MLT	BC			; Multiply by 6 (0-15 scales to 0-90)
	ld	a,c                         ; 0446AC || 	ld	a,c                         ; 044650 || 0446AC 79          11514  			LD	A, C
	ld	($044a02),a                 ; 0446AD || 	ld	($044a02),a                 ; 044651 || 0446AD 32 02 4A 04 11515  			LD	(VDU_BUFFER+2), A
	ld	c,e                         ; 0446B1 || 	ld	c,e                         ; 044655 || 0446B1 4B          11519  			LD	C, E			; Store duration in C
	ld	h,$00                       ; 0446B2 || 	ld	h,$00                       ; 044656 || 0446B2 26 00       11520  			LD	H, 0			; Lookup the frequency
	ld	l,d                         ; 0446B4 || 	ld	l,d                         ; 044658 || 0446B4 6A          11521  			LD	L, D
	ld	de,$04473c                  ; 0446B5 || 	ld	de,$0446e0                  ; 044659 || 0446B5 11 3C 47 04 11522  			LD	DE, SOUND_FREQ_LOOKUP
	add	hl,hl                      ; 0446B9 || 	add	hl,hl                      ; 04465D || 0446B9 29          11523  			ADD	HL, HL
	add	hl,de                      ; 0446BA || 	add	hl,de                      ; 04465E || 0446BA 19          11524  			ADD	HL, DE
	ld	a,(hl)                      ; 0446BB || 	ld	a,(hl)                      ; 04465F || 0446BB 7E          11525  			LD	A, (HL)
	ld	($044a03),a                 ; 0446BC || 	ld	($044a03),a                 ; 044660 || 0446BC 32 03 4A 04 11526  			LD	(VDU_BUFFER+3), A
	inc	hl                         ; 0446C0 || 	inc	hl                         ; 044664 || 0446C0 23          11527  			INC	HL
	ld	a,(hl)                      ; 0446C1 || 	ld	a,(hl)                      ; 044665 || 0446C1 7E          11528  			LD	A, (HL)
	ld	($044a04),a                 ; 0446C2 || 	ld	($044a04),a                 ; 044666 || 0446C2 32 04 4A 04 11529  			LD	(VDU_BUFFER+4), A
	ld	b,$32                       ; 0446C6 || 	ld	b,$32                       ; 04466A || 0446C6 06 32       11533  			LD	B, 50			; C contains the duration, so MLT by 50
	mlt	bc                         ; 0446C8 || 	mlt	bc                         ; 04466C || 0446C8 ED 4C       11534  			MLT	BC
	ld	($044a05),bc                ; 0446CA || 	ld	($044a05),bc                ; 04466E || 0446CA ED 43 05 4A 11535  			LD	(VDU_BUFFER+5), BC
	push	ix                        ; 0446CF || 	push	ix                        ; 044673 || 0446CF DD E5       11537  			PUSH	IX			; Get the system vars in IX
	ld	a,$08                       ; 0446D1 || 	ld	a,$08                       ; 044675 || 0446D1 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 0446D3 || 	rst.lis	$08                    ; 044677 || 0446D3 49 CF       0002M 			RST.LIS	08h
	res.lil	3,(ix+$04)             ; 0446D5 || 	res.lil	3,(ix+$04)             ; 044679 || 0446D5 5B DD CB 04 11539  SOUND0:			RES.LIL	3, (IX+sysvar_vpd_pflags)
	ld	a,$17                       ; 0446DA || 	ld	a,$17                       ; 04467E || 0446DA 3E 17       0001M 		LD	A, val
	call	$043f56                   ; 0446DC || 	call	$043f00                   ; 044680 || 0446DC CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 0446E0 || 	ld	a,$00                       ; 044684 || 0446E0 3E 00       0001M 		LD	A, val
	call	$043f56                   ; 0446E2 || 	call	$043f00                   ; 044686 || 0446E2 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,$85                       ; 0446E6 || 	ld	a,$85                       ; 04468A || 0446E6 3E 85       0001M 		LD	A, val
	call	$043f56                   ; 0446E8 || 	call	$043f00                   ; 04468C || 0446E8 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a00)                 ; 0446EC || 	ld	a,($044a00)                 ; 044690 || 0446EC 3A 00 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 0446F0 || 	call	$043f00                   ; 044694 || 0446F0 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a01)                 ; 0446F4 || 	ld	a,($044a01)                 ; 044698 || 0446F4 3A 01 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 0446F8 || 	call	$043f00                   ; 04469C || 0446F8 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a02)                 ; 0446FC || 	ld	a,($044a02)                 ; 0446A0 || 0446FC 3A 02 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 044700 || 	call	$043f00                   ; 0446A4 || 044700 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a03)                 ; 044704 || 	ld	a,($044a03)                 ; 0446A8 || 044704 3A 03 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 044708 || 	call	$043f00                   ; 0446AC || 044708 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a04)                 ; 04470C || 	ld	a,($044a04)                 ; 0446B0 || 04470C 3A 04 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 044710 || 	call	$043f00                   ; 0446B4 || 044710 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a05)                 ; 044714 || 	ld	a,($044a05)                 ; 0446B8 || 044714 3A 05 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 044718 || 	call	$043f00                   ; 0446BC || 044718 CD 56 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a06)                 ; 04471C || 	ld	a,($044a06)                 ; 0446C0 || 04471C 3A 06 4A 04 0001M 		LD	A, val
	call	$043f56                   ; 044720 || 	call	$043f00                   ; 0446C4 || 044720 CD 56 3F 04 0002M 		CALL	OSWRCH
	bit.lil	3,(ix+$04)             ; 044724 || 	bit.lil	3,(ix+$04)             ; 0446C8 || 044724 5B DD CB 04 11554  @@:			BIT.LIL	3, (IX+sysvar_vpd_pflags)
	jr	z,$-$05                     ; 044729 || 	jr	z,$-$05                     ; 0446CD || 044729 28 F9       11555  			JR	Z, @B			; Wait for the result
	call	$043fc7                   ; 04472B || 	call	$043f71                   ; 0446CF || 04472B CD C7 3F 04 11556  			CALL	LTRAP			; Check for ESC
	ld.lil	a,(ix+$0e)              ; 04472F || 	ld.lil	a,(ix+$0e)              ; 0446D3 || 04472F 5B DD 7E 0E 11557  			LD.LIL	A, (IX+sysvar_audioSuccess)
	and	a                          ; 044733 || 	and	a                          ; 0446D7 || 044733 A7          11558  			AND	A			; Check if VDP has queued the note
	jr	z,$-$5f                     ; 044734 || 	jr	z,$-$5f                     ; 0446D8 || 044734 28 9F       11559  			JR	Z, SOUND0		; No, so loop back and send again
	pop	ix                         ; 044736 || 	pop	ix                         ; 0446DA || 044736 DD E1       11561  			POP	IX
	jp	$040b9e                     ; 044738 || 	jp	$040b96                     ; 0446DC || 044738 C3 9E 0B 04 11562  			JP	XEQ
	ld	(hl),l                      ; 04473C || 	ld	(hl),l                      ; 0446E0 || 04473C 75 00 76 00 11586  SOUND_FREQ_LOOKUP:	DW	 117,  118,  120,  122,  123,  131,  133,  135
	nop                            ; 04473D || 	nop                            ; 0446E1
	halt                           ; 04473E || 	halt                           ; 0446E2
	nop                            ; 04473F || 	nop                            ; 0446E3
	ld	a,b                         ; 044740 || 	ld	a,b                         ; 0446E4
	nop                            ; 044741 || 	nop                            ; 0446E5
	ld	a,d                         ; 044742 || 	ld	a,d                         ; 0446E6
	nop                            ; 044743 || 	nop                            ; 0446E7
	ld	a,e                         ; 044744 || 	ld	a,e                         ; 0446E8
	nop                            ; 044745 || 	nop                            ; 0446E9
	add	a,e                        ; 044746 || 	add	a,e                        ; 0446EA
	nop                            ; 044747 || 	nop                            ; 0446EB
	add	a,l                        ; 044748 || 	add	a,l                        ; 0446EC
	nop                            ; 044749 || 	nop                            ; 0446ED
	add	a,a                        ; 04474A || 	add	a,a                        ; 0446EE
	nop                            ; 04474B || 	nop                            ; 0446EF
	adc	a,c                        ; 04474C || 	adc	a,c                        ; 0446F0 || 04474C 89 00 8B 00 11587  			DW	 137,  139,  141,  143,  145,  147,  149,  151
	nop                            ; 04474D || 	nop                            ; 0446F1
	adc	a,e                        ; 04474E || 	adc	a,e                        ; 0446F2
	nop                            ; 04474F || 	nop                            ; 0446F3
	adc	a,l                        ; 044750 || 	adc	a,l                        ; 0446F4
	nop                            ; 044751 || 	nop                            ; 0446F5
	adc	a,a                        ; 044752 || 	adc	a,a                        ; 0446F6
	nop                            ; 044753 || 	nop                            ; 0446F7
	sub	c                          ; 044754 || 	sub	c                          ; 0446F8
	nop                            ; 044755 || 	nop                            ; 0446F9
	sub	e                          ; 044756 || 	sub	e                          ; 0446FA
	nop                            ; 044757 || 	nop                            ; 0446FB
	sub	l                          ; 044758 || 	sub	l                          ; 0446FC
	nop                            ; 044759 || 	nop                            ; 0446FD
	sub	a                          ; 04475A || 	sub	a                          ; 0446FE
	nop                            ; 04475B || 	nop                            ; 0446FF
	sbc	a,c                        ; 04475C || 	sbc	a,c                        ; 044700 || 04475C 99 00 9C 00 11588  			DW	 153,  156,  158,  160,  162,  165,  167,  170
	nop                            ; 04475D || 	nop                            ; 044701
	sbc	a,h                        ; 04475E || 	sbc	a,h                        ; 044702
	nop                            ; 04475F || 	nop                            ; 044703
	sbc	a,(hl)                     ; 044760 || 	sbc	a,(hl)                     ; 044704
	nop                            ; 044761 || 	nop                            ; 044705
	and	b                          ; 044762 || 	and	b                          ; 044706
	nop                            ; 044763 || 	nop                            ; 044707
	and	d                          ; 044764 || 	and	d                          ; 044708
	nop                            ; 044765 || 	nop                            ; 044709
	and	l                          ; 044766 || 	and	l                          ; 04470A
	nop                            ; 044767 || 	nop                            ; 04470B
	and	a                          ; 044768 || 	and	a                          ; 04470C
	nop                            ; 044769 || 	nop                            ; 04470D
	xor	d                          ; 04476A || 	xor	d                          ; 04470E
	nop                            ; 04476B || 	nop                            ; 04470F
	xor	h                          ; 04476C || 	xor	h                          ; 044710 || 04476C AC 00 AF 00 11589  			DW	 172,  175,  177,  180,  182,  185,  188,  190
	nop                            ; 04476D || 	nop                            ; 044711
	xor	a                          ; 04476E || 	xor	a                          ; 044712
	nop                            ; 04476F || 	nop                            ; 044713
	or	c                           ; 044770 || 	or	c                           ; 044714
	nop                            ; 044771 || 	nop                            ; 044715
	or	h                           ; 044772 || 	or	h                           ; 044716
	nop                            ; 044773 || 	nop                            ; 044717
	or	(hl)                        ; 044774 || 	or	(hl)                        ; 044718
	nop                            ; 044775 || 	nop                            ; 044719
	cp	c                           ; 044776 || 	cp	c                           ; 04471A
	nop                            ; 044777 || 	nop                            ; 04471B
	cp	h                           ; 044778 || 	cp	h                           ; 04471C
	nop                            ; 044779 || 	nop                            ; 04471D
	cp	(hl)                        ; 04477A || 	cp	(hl)                        ; 04471E
	nop                            ; 04477B || 	nop                            ; 04471F
	pop	bc                         ; 04477C || 	pop	bc                         ; 044720 || 04477C C1 00 C4 00 11590  			DW	 193,  196,  199,  202,  205,  208,  211,  214
	nop                            ; 04477D || 	nop                            ; 044721
	call	nz,$00c700                ; 04477E || 	call	nz,$00c700                ; 044722
	jp	z,$00cd00                   ; 044782 || 	jp	z,$00cd00                   ; 044726
	ret	nc                         ; 044786 || 	ret	nc                         ; 04472A
	nop                            ; 044787 || 	nop                            ; 04472B
	out	($00),a                    ; 044788 || 	out	($00),a                    ; 04472C
	sub	$00                        ; 04478A || 	sub	$00                        ; 04472E
	exx                            ; 04478C || 	exx                            ; 044730 || 04478C D9 00 DC 00 11591  			DW	 217,  220,  223,  226,  230,  233,  236,  240
	nop                            ; 04478D || 	nop                            ; 044731
	call	c,$00df00                 ; 04478E || 	call	c,$00df00                 ; 044732
	jp	po,$00e600                  ; 044792 || 	jp	po,$00e600                  ; 044736
	jp	(hl)                        ; 044796 || 	jp	(hl)                        ; 04473A
	nop                            ; 044797 || 	nop                            ; 04473B
	call	pe,$00f000                ; 044798 || 	call	pe,$00f000                ; 04473C
	di                             ; 04479C || 	di                             ; 044740 || 04479C F3 00 F7 00 11592  			DW	 243,  247,  251,  254,  258,  262,  265,  269
	nop                            ; 04479D || 	nop                            ; 044741
	rst	$30                        ; 04479E || 	rst	$30                        ; 044742
	nop                            ; 04479F || 	nop                            ; 044743
	ei                             ; 0447A0 || 	ei                             ; 044744
	nop                            ; 0447A1 || 	nop                            ; 044745
	cp	$00                         ; 0447A2 || 	cp	$00                         ; 044746
	ld	(bc),a                      ; 0447A4 || 	ld	(bc),a                      ; 044748
	ld	bc,$090106                  ; 0447A5 || 	ld	bc,$090106                  ; 044749
	ld	bc,$11010d                  ; 0447A9 || 	ld	bc,$11010d                  ; 04474D
	ld	bc,$190115                  ; 0447AD || 	ld	bc,$190115                  ; 044751
	ld	bc,$21011d                  ; 0447B1 || 	ld	bc,$21011d                  ; 044755
	ld	bc,$2a0126                  ; 0447B5 || 	ld	bc,$2a0126                  ; 044759
	ld	bc,$33012e                  ; 0447B9 || 	ld	bc,$33012e                  ; 04475D
	ld	bc,$3c0137                  ; 0447BD || 	ld	bc,$3c0137                  ; 044761
	ld	bc,$450140                  ; 0447C1 || 	ld	bc,$450140                  ; 044765
	ld	bc,$4e014a                  ; 0447C5 || 	ld	bc,$4e014a                  ; 044769
	ld	bc,$580153                  ; 0447C9 || 	ld	bc,$580153                  ; 04476D
	ld	bc,$62015d                  ; 0447CD || 	ld	bc,$62015d                  ; 044771
	ld	bc,$6d0167                  ; 0447D1 || 	ld	bc,$6d0167                  ; 044775
	ld	bc,$770172                  ; 0447D5 || 	ld	bc,$770172                  ; 044779
	ld	bc,$82017d                  ; 0447D9 || 	ld	bc,$82017d                  ; 04477D
	ld	bc,$8e0188                  ; 0447DD || 	ld	bc,$8e0188                  ; 044781
	ld	bc,$990193                  ; 0447E1 || 	ld	bc,$990193                  ; 044785
	ld	bc,$a5019f                  ; 0447E5 || 	ld	bc,$a5019f                  ; 044789
	ld	bc,$b201ab                  ; 0447E9 || 	ld	bc,$b201ab                  ; 04478D
	ld	bc,$be01b8                  ; 0447ED || 	ld	bc,$be01b8                  ; 044791
	ld	bc,$cb01c5                  ; 0447F1 || 	ld	bc,$cb01c5                  ; 044795
	ld	bc,$d901d2                  ; 0447F5 || 	ld	bc,$d901d2                  ; 044799
	ld	bc,$e701e0                  ; 0447F9 || 	ld	bc,$e701e0                  ; 04479D
	ld	bc,$f501ee                  ; 0447FD || 	ld	bc,$f501ee                  ; 0447A1
	ld	bc,$0401fc                  ; 044801 || 	ld	bc,$0401fc                  ; 0447A5
	ld	(bc),a                      ; 044805 || 	ld	(bc),a                      ; 0447A9
	dec	bc                         ; 044806 || 	dec	bc                         ; 0447AA
	ld	(bc),a                      ; 044807 || 	ld	(bc),a                      ; 0447AB
	inc	de                         ; 044808 || 	inc	de                         ; 0447AC
	ld	(bc),a                      ; 044809 || 	ld	(bc),a                      ; 0447AD
	dec	de                         ; 04480A || 	dec	de                         ; 0447AE
	ld	(bc),a                      ; 04480B || 	ld	(bc),a                      ; 0447AF
	ld	($022a02),hl                ; 04480C || 	ld	($022a02),hl                ; 0447B0 || 04480C 22 02 2A 02 11599  			DW	 546,  554,  562,  571,  579,  587,  596,  605
	ld	($023b02),a                 ; 044810 || 	ld	($023b02),a                 ; 0447B4
	ld	b,e                         ; 044814 || 	ld	b,e                         ; 0447B8
	ld	(bc),a                      ; 044815 || 	ld	(bc),a                      ; 0447B9
	ld	c,e                         ; 044816 || 	ld	c,e                         ; 0447BA
	ld	(bc),a                      ; 044817 || 	ld	(bc),a                      ; 0447BB
	ld	d,h                         ; 044818 || 	ld	d,h                         ; 0447BC
	ld	(bc),a                      ; 044819 || 	ld	(bc),a                      ; 0447BD
	ld	e,l                         ; 04481A || 	ld	e,l                         ; 0447BE
	ld	(bc),a                      ; 04481B || 	ld	(bc),a                      ; 0447BF
	ld	h,l                         ; 04481C || 	ld	h,l                         ; 0447C0 || 04481C 65 02 6E 02 11600  			DW	 613,  622,  631,  641,  650,  659,  669,  679
	ld	(bc),a                      ; 04481D || 	ld	(bc),a                      ; 0447C1
	ld	l,(hl)                      ; 04481E || 	ld	l,(hl)                      ; 0447C2
	ld	(bc),a                      ; 04481F || 	ld	(bc),a                      ; 0447C3
	ld	(hl),a                      ; 044820 || 	ld	(hl),a                      ; 0447C4
	ld	(bc),a                      ; 044821 || 	ld	(bc),a                      ; 0447C5
	add	a,c                        ; 044822 || 	add	a,c                        ; 0447C6
	ld	(bc),a                      ; 044823 || 	ld	(bc),a                      ; 0447C7
	adc	a,d                        ; 044824 || 	adc	a,d                        ; 0447C8
	ld	(bc),a                      ; 044825 || 	ld	(bc),a                      ; 0447C9
	sub	e                          ; 044826 || 	sub	e                          ; 0447CA
	ld	(bc),a                      ; 044827 || 	ld	(bc),a                      ; 0447CB
	sbc	a,l                        ; 044828 || 	sbc	a,l                        ; 0447CC
	ld	(bc),a                      ; 044829 || 	ld	(bc),a                      ; 0447CD
	and	a                          ; 04482A || 	and	a                          ; 0447CE
	ld	(bc),a                      ; 04482B || 	ld	(bc),a                      ; 0447CF
	or	c                           ; 04482C || 	or	c                           ; 0447D0 || 04482C B1 02 BB 02 11601  			DW	 689,  699,  709,  719,  729,  740,  751,  762
	ld	(bc),a                      ; 04482D || 	ld	(bc),a                      ; 0447D1
	cp	e                           ; 04482E || 	cp	e                           ; 0447D2
	ld	(bc),a                      ; 04482F || 	ld	(bc),a                      ; 0447D3
	push	bc                        ; 044830 || 	push	bc                        ; 0447D4
	ld	(bc),a                      ; 044831 || 	ld	(bc),a                      ; 0447D5
	rst	$08                        ; 044832 || 	rst	$08                        ; 0447D6
	ld	(bc),a                      ; 044833 || 	ld	(bc),a                      ; 0447D7
	exx                            ; 044834 || 	exx                            ; 0447D8
	ld	(bc),a                      ; 044835 || 	ld	(bc),a                      ; 0447D9
	call	po,$02ef02                ; 044836 || 	call	po,$02ef02                ; 0447DA
	jp	m,$030502                   ; 04483A || 	jp	m,$030502                   ; 0447DE
	djnz	$+$05                     ; 04483E || 	djnz	$+$05                     ; 0447E2
	dec	de                         ; 044840 || 	dec	de                         ; 0447E4
	inc	bc                         ; 044841 || 	inc	bc                         ; 0447E5
	daa                            ; 044842 || 	daa                            ; 0447E6
	inc	bc                         ; 044843 || 	inc	bc                         ; 0447E7
	inc	sp                         ; 044844 || 	inc	sp                         ; 0447E8
	inc	bc                         ; 044845 || 	inc	bc                         ; 0447E9
	ccf                            ; 044846 || 	ccf                            ; 0447EA
	inc	bc                         ; 044847 || 	inc	bc                         ; 0447EB
	ld	c,e                         ; 044848 || 	ld	c,e                         ; 0447EC
	inc	bc                         ; 044849 || 	inc	bc                         ; 0447ED
	ld	d,a                         ; 04484A || 	ld	d,a                         ; 0447EE
	inc	bc                         ; 04484B || 	inc	bc                         ; 0447EF
	ld	h,e                         ; 04484C || 	ld	h,e                         ; 0447F0 || 04484C 63 03 70 03 11603  			DW	 867,  880,  893,  906,  919,  932,  946,  960
	inc	bc                         ; 04484D || 	inc	bc                         ; 0447F1
	ld	(hl),b                      ; 04484E || 	ld	(hl),b                      ; 0447F2
	inc	bc                         ; 04484F || 	inc	bc                         ; 0447F3
	ld	a,l                         ; 044850 || 	ld	a,l                         ; 0447F4
	inc	bc                         ; 044851 || 	inc	bc                         ; 0447F5
	adc	a,d                        ; 044852 || 	adc	a,d                        ; 0447F6
	inc	bc                         ; 044853 || 	inc	bc                         ; 0447F7
	sub	a                          ; 044854 || 	sub	a                          ; 0447F8
	inc	bc                         ; 044855 || 	inc	bc                         ; 0447F9
	and	h                          ; 044856 || 	and	h                          ; 0447FA
	inc	bc                         ; 044857 || 	inc	bc                         ; 0447FB
	or	d                           ; 044858 || 	or	d                           ; 0447FC
	inc	bc                         ; 044859 || 	inc	bc                         ; 0447FD
	ret	nz                         ; 04485A || 	ret	nz                         ; 0447FE
	inc	bc                         ; 04485B || 	inc	bc                         ; 0447FF
	adc	a,$03                      ; 04485C || 	adc	a,$03                      ; 044800 || 04485C CE 03 DC 03 11604  			DW	 974,  988, 1002, 1017, 1032, 1047, 1062, 1078
	call	c,$03ea03                 ; 04485E || 	call	c,$03ea03                 ; 044802
	ld	sp,hl                       ; 044862 || 	ld	sp,hl                       ; 044806
	inc	bc                         ; 044863 || 	inc	bc                         ; 044807
	ex	af,af'                      ; 044864 || 	ex	af,af'                      ; 044808
	inc	b                          ; 044865 || 	inc	b                          ; 044809
	rla                            ; 044866 || 	rla                            ; 04480A
	inc	b                          ; 044867 || 	inc	b                          ; 04480B
	ld	h,$04                       ; 044868 || 	ld	h,$04                       ; 04480C
	ld	(hl),$04                    ; 04486A || 	ld	(hl),$04                    ; 04480E
	ld	b,l                         ; 04486C || 	ld	b,l                         ; 044810 || 04486C 45 04 55 04 11605  			DW	1093, 1109, 1125, 1142, 1158, 1175, 1192, 1210
	inc	b                          ; 04486D || 	inc	b                          ; 044811
	ld	d,l                         ; 04486E || 	ld	d,l                         ; 044812
	inc	b                          ; 04486F || 	inc	b                          ; 044813
	ld	h,l                         ; 044870 || 	ld	h,l                         ; 044814
	inc	b                          ; 044871 || 	inc	b                          ; 044815
	halt                           ; 044872 || 	halt                           ; 044816
	inc	b                          ; 044873 || 	inc	b                          ; 044817
	add	a,(hl)                     ; 044874 || 	add	a,(hl)                     ; 044818
	inc	b                          ; 044875 || 	inc	b                          ; 044819
	sub	a                          ; 044876 || 	sub	a                          ; 04481A
	inc	b                          ; 044877 || 	inc	b                          ; 04481B
	xor	b                          ; 044878 || 	xor	b                          ; 04481C
	inc	b                          ; 044879 || 	inc	b                          ; 04481D
	cp	d                           ; 04487A || 	cp	d                           ; 04481E
	inc	b                          ; 04487B || 	inc	b                          ; 04481F
	rlc	h                          ; 04487C || 	rlc	h                          ; 044820 || 04487C CB 04 DD 04 11606  			DW	1227, 1245, 1263, 1282, 1300, 1319, 1338, 1358
	trap                           ; 04487E || 	trap                           ; 044822
	rst	$28                        ; 044880 || 	rst	$28                        ; 044824
	inc	b                          ; 044881 || 	inc	b                          ; 044825
	ld	(bc),a                      ; 044882 || 	ld	(bc),a                      ; 044826
	dec	b                          ; 044883 || 	dec	b                          ; 044827
	inc	d                          ; 044884 || 	inc	d                          ; 044828
	dec	b                          ; 044885 || 	dec	b                          ; 044829
	daa                            ; 044886 || 	daa                            ; 04482A
	dec	b                          ; 044887 || 	dec	b                          ; 04482B
	ld	a,($054e05)                 ; 044888 || 	ld	a,($054e05)                 ; 04482C
	ld	h,d                         ; 04488C || 	ld	h,d                         ; 044830 || 04488C 62 05 76 05 11607  			DW	1378, 1398, 1418, 1439, 1459, 1481, 1502, 1524
	dec	b                          ; 04488D || 	dec	b                          ; 044831
	halt                           ; 04488E || 	halt                           ; 044832
	dec	b                          ; 04488F || 	dec	b                          ; 044833
	adc	a,d                        ; 044890 || 	adc	a,d                        ; 044834
	dec	b                          ; 044891 || 	dec	b                          ; 044835
	sbc	a,a                        ; 044892 || 	sbc	a,a                        ; 044836
	dec	b                          ; 044893 || 	dec	b                          ; 044837
	or	e                           ; 044894 || 	or	e                           ; 044838
	dec	b                          ; 044895 || 	dec	b                          ; 044839
	ret                            ; 044896 || 	ret                            ; 04483A
	dec	b                          ; 044897 || 	dec	b                          ; 04483B
	sbc	a,$05                      ; 044898 || 	sbc	a,$05                      ; 04483C
	call	p,$060a05                 ; 04489A || 	call	p,$060a05                 ; 04483E
	ld	hl,$063806                  ; 04489E || 	ld	hl,$063806                  ; 044842
	ld	c,a                         ; 0448A2 || 	ld	c,a                         ; 044846
	ld	b,$66                       ; 0448A3 || 	ld	b,$66                       ; 044847
	ld	b,$7e                       ; 0448A5 || 	ld	b,$7e                       ; 044849
	ld	b,$96                       ; 0448A7 || 	ld	b,$96                       ; 04484B
	ld	b,$af                       ; 0448A9 || 	ld	b,$af                       ; 04484D
	ld	b,$c8                       ; 0448AB || 	ld	b,$c8                       ; 04484F
	ld	b,$e1                       ; 0448AD || 	ld	b,$e1                       ; 044851
	ld	b,$fa                       ; 0448AF || 	ld	b,$fa                       ; 044853
	ld	b,$14                       ; 0448B1 || 	ld	b,$14                       ; 044855
	rlca                           ; 0448B3 || 	rlca                           ; 044857
	cpl                            ; 0448B4 || 	cpl                            ; 044858
	rlca                           ; 0448B5 || 	rlca                           ; 044859
	ld	c,d                         ; 0448B6 || 	ld	c,d                         ; 04485A
	rlca                           ; 0448B7 || 	rlca                           ; 04485B
	ld	h,l                         ; 0448B8 || 	ld	h,l                         ; 04485C
	rlca                           ; 0448B9 || 	rlca                           ; 04485D
	add	a,b                        ; 0448BA || 	add	a,b                        ; 04485E
	rlca                           ; 0448BB || 	rlca                           ; 04485F
	sbc	a,h                        ; 0448BC || 	sbc	a,h                        ; 044860 || 0448BC 9C 07 B8 07 11610  			DW	1948, 1976, 2005, 2034, 2064, 2093, 2123, 2154
	rlca                           ; 0448BD || 	rlca                           ; 044861
	cp	b                           ; 0448BE || 	cp	b                           ; 044862
	rlca                           ; 0448BF || 	rlca                           ; 044863
	push	de                        ; 0448C0 || 	push	de                        ; 044864
	rlca                           ; 0448C1 || 	rlca                           ; 044865
	jp	p,$081007                   ; 0448C2 || 	jp	p,$081007                   ; 044866
	dec	l                          ; 0448C6 || 	dec	l                          ; 04486A
	ex	af,af'                      ; 0448C7 || 	ex	af,af'                      ; 04486B
	ld	c,e                         ; 0448C8 || 	ld	c,e                         ; 04486C
	ex	af,af'                      ; 0448C9 || 	ex	af,af'                      ; 04486D
	ld	l,d                         ; 0448CA || 	ld	l,d                         ; 04486E
	ex	af,af'                      ; 0448CB || 	ex	af,af'                      ; 04486F
	adc	a,d                        ; 0448CC || 	adc	a,d                        ; 044870 || 0448CC 8A 08 A9 08 11611  			DW	2186, 2217, 2250, 2282, 2316, 2349, 2383, 2418
	ex	af,af'                      ; 0448CD || 	ex	af,af'                      ; 044871
	xor	c                          ; 0448CE || 	xor	c                          ; 044872
	ex	af,af'                      ; 0448CF || 	ex	af,af'                      ; 044873
	jp	z,$08ea08                   ; 0448D0 || 	jp	z,$08ea08                   ; 044874
	inc	c                          ; 0448D4 || 	inc	c                          ; 044878
	add	hl,bc                      ; 0448D5 || 	add	hl,bc                      ; 044879
	dec	l                          ; 0448D6 || 	dec	l                          ; 04487A
	add	hl,bc                      ; 0448D7 || 	add	hl,bc                      ; 04487B
	ld	c,a                         ; 0448D8 || 	ld	c,a                         ; 04487C
	add	hl,bc                      ; 0448D9 || 	add	hl,bc                      ; 04487D
	ld	(hl),d                      ; 0448DA || 	ld	(hl),d                      ; 04487E
	add	hl,bc                      ; 0448DB || 	add	hl,bc                      ; 04487F
	sub	l                          ; 0448DC || 	sub	l                          ; 044880 || 0448DC 95 09 B9 09 11612  			DW	2453, 2489, 2525, 2562, 2599, 2637, 2675, 2714
	add	hl,bc                      ; 0448DD || 	add	hl,bc                      ; 044881
	cp	c                           ; 0448DE || 	cp	c                           ; 044882
	add	hl,bc                      ; 0448DF || 	add	hl,bc                      ; 044883
	add	ix,bc                      ; 0448E0 || 	add	ix,bc                      ; 044884
	ld	(bc),a                      ; 0448E2 || 	ld	(bc),a                      ; 044886
	ld	a,(bc)                      ; 0448E3 || 	ld	a,(bc)                      ; 044887
	daa                            ; 0448E4 || 	daa                            ; 044888
	ld	a,(bc)                      ; 0448E5 || 	ld	a,(bc)                      ; 044889
	ld	c,l                         ; 0448E6 || 	ld	c,l                         ; 04488A
	ld	a,(bc)                      ; 0448E7 || 	ld	a,(bc)                      ; 04488B
	ld	(hl),e                      ; 0448E8 || 	ld	(hl),e                      ; 04488C
	ld	a,(bc)                      ; 0448E9 || 	ld	a,(bc)                      ; 04488D
	sbc	a,d                        ; 0448EA || 	sbc	a,d                        ; 04488E
	ld	a,(bc)                      ; 0448EB || 	ld	a,(bc)                      ; 04488F
	jp	nz,$0aea0a                  ; 0448EC || 	jp	nz,$0aea0a                  ; 044890 || 0448EC C2 0A EA 0A 11613  			DW	2754, 2794, 2834, 2876, 2918, 2960, 3003, 3047
	ld	(de),a                      ; 0448F0 || 	ld	(de),a                      ; 044894
	dec	bc                         ; 0448F1 || 	dec	bc                         ; 044895
	inc	a                          ; 0448F2 || 	inc	a                          ; 044896
	dec	bc                         ; 0448F3 || 	dec	bc                         ; 044897
	ld	h,(hl)                      ; 0448F4 || 	ld	h,(hl)                      ; 044898
	dec	bc                         ; 0448F5 || 	dec	bc                         ; 044899
	sub	b                          ; 0448F6 || 	sub	b                          ; 04489A
	dec	bc                         ; 0448F7 || 	dec	bc                         ; 04489B
	cp	e                           ; 0448F8 || 	cp	e                           ; 04489C
	dec	bc                         ; 0448F9 || 	dec	bc                         ; 04489D
	rst	$20                        ; 0448FA || 	rst	$20                        ; 04489E
	dec	bc                         ; 0448FB || 	dec	bc                         ; 04489F
	inc	de                         ; 0448FC || 	inc	de                         ; 0448A0 || 0448FC 13 0C 40 0C 11614  			DW	3091, 3136, 3182, 3228, 3275, 3322, 3371, 3420
	inc	c                          ; 0448FD || 	inc	c                          ; 0448A1
	inc.sis	c                      ; 0448FE || 	inc.sis	c                      ; 0448A2
	ld	l,(hl)                      ; 044900 || 	ld	l,(hl)                      ; 0448A4
	inc	c                          ; 044901 || 	inc	c                          ; 0448A5
	sbc	a,h                        ; 044902 || 	sbc	a,h                        ; 0448A6
	inc	c                          ; 044903 || 	inc	c                          ; 0448A7
	rrc	h                          ; 044904 || 	rrc	h                          ; 0448A8
	jp	m,$0d2b0c                   ; 044906 || 	jp	m,$0d2b0c                   ; 0448AA
	ld	e,h                         ; 04490A || 	ld	e,h                         ; 0448AE
	dec	c                          ; 04490B || 	dec	c                          ; 0448AF
	adc	a,(hl)                     ; 04490C || 	adc	a,(hl)                     ; 0448B0 || 04490C 8E 0D C0 0D 11615  			DW	3470, 3520, 3571, 3623, 3676, 3729, 3784, 3839
	dec	c                          ; 04490D || 	dec	c                          ; 0448B1
	ret	nz                         ; 04490E || 	ret	nz                         ; 0448B2
	dec	c                          ; 04490F || 	dec	c                          ; 0448B3
	di                             ; 044910 || 	di                             ; 0448B4
	dec	c                          ; 044911 || 	dec	c                          ; 0448B5
	daa                            ; 044912 || 	daa                            ; 0448B6
	ld	c,$5c                       ; 044913 || 	ld	c,$5c                       ; 0448B7
	ld	c,$91                       ; 044915 || 	ld	c,$91                       ; 0448B9
	ld	c,$c8                       ; 044917 || 	ld	c,$c8                       ; 0448BB
	ld	c,$ff                       ; 044919 || 	ld	c,$ff                       ; 0448BD
	ld	c,$36                       ; 04491B || 	ld	c,$36                       ; 0448BF
	rrca                           ; 04491D || 	rrca                           ; 0448C1
	ld	l,a                         ; 04491E || 	ld	l,a                         ; 0448C2
	rrca                           ; 04491F || 	rrca                           ; 0448C3
	xor	c                          ; 044920 || 	xor	c                          ; 0448C4
	rrca                           ; 044921 || 	rrca                           ; 0448C5
	ex	(sp),hl                     ; 044922 || 	ex	(sp),hl                     ; 0448C6
	rrca                           ; 044923 || 	rrca                           ; 0448C7
	ld	e,$10                       ; 044924 || 	ld	e,$10                       ; 0448C8
	ld	e,d                         ; 044926 || 	ld	e,d                         ; 0448CA
	djnz	$-$67                     ; 044927 || 	djnz	$-$67                     ; 0448CB
	djnz	$-$29                     ; 044929 || 	djnz	$-$29                     ; 0448CD
	djnz	$+$15                     ; 04492B || 	djnz	$+$15                     ; 0448CF
	ld	de,$931153                  ; 04492D || 	ld	de,$931153                  ; 0448D1
	ld	de,$1711d5                  ; 044931 || 	ld	de,$1711d5                  ; 0448D5
	ld	(de),a                      ; 044935 || 	ld	(de),a                      ; 0448D9
	ld.lil	(de),a                  ; 044936 || 	ld.lil	(de),a                  ; 0448DA
	sbc	a,a                        ; 044938 || 	sbc	a,a                        ; 0448DC
	ld	(de),a                      ; 044939 || 	ld	(de),a                      ; 0448DD
	call	po,$21f312                ; 04493A || 	call	po,$21f312                ; 0448DE
	sub	c                          ; 04493E
	inc.lis	b                      ; 04493F || 	inc.lis	b                      ; 0448E3
	ld	e,$32                       ; 044941 || 	ld	e,$32                       ; 0448E5 || 044941 1E 32       11653  			LD		E, 32h				; Set up the VBlank Interrupt Vector
	ld	a,$14                       ; 044943 || 	ld	a,$14                       ; 0448E7 || 044943 3E 14       0001M 			LD	A, function
	rst.lis	$08                    ; 044945 || 	rst.lis	$08                    ; 0448E9 || 044945 49 CF       0002M 			RST.LIS	08h
	ex	de,hl                       ; 044947 || 	ex	de,hl                       ; 0448EB || 044947 EB          11656  			ex de,hl
	ld	hl,$04499f                  ; 044948 || 	ld	hl,$044943                  ; 0448EC || 044948 21 9F 49 04 11657  			LD		HL, VBLANK_HANDLER_JP + 1	; Pointer to the JP address in this segment
	ld	(hl),de                     ; 04494C || 	ld	(hl),de                     ; 0448F0 || 04494C ED 1F       11658  			LD		(HL), DE			; Self-modify the code
	ei                             ; 04494E || 	ei                             ; 0448F2 || 04494E FB          11659  			EI
	ret                            ; 04494F || 	ret                            ; 0448F3 || 04494F C9          11660  			RET
	di                             ; 044950 || 	di                             ; 0448F4 || 044950 F3          11664  VBLANK_STOP:		DI
	ld	hl,$04499f                  ; 044951 || 	ld	hl,$044943                  ; 0448F5 || 044951 21 9F 49 04 11665  			LD		HL, VBLANK_HANDLER_JP + 1	; Pointer to the JP address in this segment
	ld	de,(hl)                     ; 044955 || 	ld	de,(hl)                     ; 0448F9 || 044955 ED 17       11666  			LD		DE, (HL)
	ex	de,hl                       ; 044957 || 	ex	de,hl                       ; 0448FB || 044957 EB          11667  			EX		DE, HL 				; HLU: Address of MOS interrupt vector
	ld	e,$32                       ; 044958 || 	ld	e,$32                       ; 0448FC || 044958 1E 32       11668  			LD		E, 32h
	ld	a,$14                       ; 04495A || 	ld	a,$14                       ; 0448FE || 04495A 3E 14       0001M 			LD	A, function
	rst.lis	$08                    ; 04495C || 	rst.lis	$08                    ; 044900 || 04495C 49 CF       0002M 			RST.LIS	08h
	ei                             ; 04495E || 	ei                             ; 044902 || 04495E FB          11670  			EI
	ret                            ; 04495F || 	ret                            ; 044903 || 04495F C9          11671  			RET
	ld	a,$08                       ; 044960 || 	ld	a,$08                       ; 044904 || 044960 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 044962 || 	rst.lis	$08                    ; 044906 || 044962 49 CF       0002M 			RST.LIS	08h
	ld	hl,$044d49                  ; 044964 || 	ld	hl,$044d49                  ; 044908 || 044964 21 49 4D 04 11676  			LD		HL, KEYCOUNT 			; Check whether the keycount has changed
	ld	a,(ix+$19)                  ; 044968 || 	ld	a,(ix+$19)                  ; 04490C || 044968 DD 7E 19    11677  			LD		A, (IX + sysvar_vkeycount)	; by comparing the MOS copy
	cp	(hl)                        ; 04496B || 	cp	(hl)                        ; 04490F || 04496B BE          11678  			CP 		(HL)				; with our local copy
	jr	nz,$+$0c                    ; 04496C || 	jr	nz,$+$0c                    ; 044910 || 04496C 20 0A       11679  			JR		NZ, DO_KEYBOARD_1		; Yes it has, so jump to the next bit
	xor	a                          ; 04496E || 	xor	a                          ; 044912 || 04496E AF          11681  DO_KEYBOARD_0:		XOR		A 				; Clear the keyboard values
	ld	($044d48),a                 ; 04496F || 	ld	($044d48),a                 ; 044913 || 04496F 32 48 4D 04 11682  			LD		(KEYASCII), A
	ld	($044d47),a                 ; 044973 || 	ld	($044d47),a                 ; 044917 || 044973 32 47 4D 04 11683  			LD		(KEYDOWN), A
	ret                            ; 044977 || 	ret                            ; 04491B || 044977 C9          11684  			RET	 					; And return
	ld	(hl),a                      ; 044978 || 	ld	(hl),a                      ; 04491C || 044978 77          11686  DO_KEYBOARD_1:		LD		(HL), A 			; Store the updated local copy of keycount
	ld	a,(ix+$18)                  ; 044979 || 	ld	a,(ix+$18)                  ; 04491D || 044979 DD 7E 18    11687  			LD		A, (IX + sysvar_vkeydown)	; Fetch key down value (1 = key down, 0 = key up)
	or	a                           ; 04497C || 	or	a                           ; 044920 || 04497C B7          11688  			OR		A
	jr	z,$-$0f                     ; 04497D || 	jr	z,$-$0f                     ; 044921 || 04497D 28 EF       11689  			JR		Z, DO_KEYBOARD_0		; If it is key up, then clear the keyboard values
	ld	($044d47),a                 ; 04497F || 	ld	($044d47),a                 ; 044923 || 04497F 32 47 4D 04 11691  			LD		(KEYDOWN), A 			; Store the keydown value
	ld	a,(ix+$05)                  ; 044983                                         || 044983 DD 7E 05    11692  			LD		A, (IX + sysvar_keyascii)	; Fetch key ASCII value
	ld	($044d48),a                 ; 044986                                         || 044986 32 48 4D 04 11693  			LD		(KEYASCII), A 			; Store locally
	cp	$1b                         ; 04498A                                         || 04498A FE 1B       11694  			CP		1Bh				; Is it escape?
	call	z,$043fa2                 ; 04498C                                         || 04498C CC A2 3F 04 11695  			CALL		Z, ESCSET			; Yes, so set the escape flags
	ret                            ; 044990                                         || 044990 C9          11696  			RET						; Return to the interrupt handler
	di                             ; 044991                                         || 044991 F3          11698  VBLANK_HANDLER:		DI
	push	af                        ; 044992                                         || 044992 F5          11699  			PUSH		AF
	push	hl                        ; 044993                                         || 044993 E5          11700  			PUSH		HL
	push	ix                        ; 044994                                         || 044994 DD E5       11701  			PUSH		IX
	call	$044960                   ; 044996                                         || 044996 CD 60 49 04 11702  			CALL		DO_KEYBOARD
	pop	ix                         ; 04499A                                         || 04499A DD E1       11703  			POP		IX
	pop	hl                         ; 04499C                                         || 04499C E1          11704  			POP		HL
	pop	af                         ; 04499D                                         || 04499D F1          11705  			POP		AF
	jp	$000000                     ; 04499E                                         || 04499E C3 00 00 00 11709  VBLANK_HANDLER_JP:	JP		0				; This is self-modified by VBLANK_INIT				; --- End interrupts.asm ---
	xor	a                          ; 0449A2                                         || 0449A2 AF          11734  			XOR     A
	call	$0437cd                   ; 0449A3                                         || 0449A3 CD CD 37 04 11735  			CALL    EXTERR
	ld	d,e                         ; 0449A7                                         || 0449A7 53 6F 72 72 11736  			DEFB    "Sorry"
	ld	l,a                         ; 0449A8
	ld	(hl),d                      ; 0449A9
	ld	(hl),d                      ; 0449AA
	ld	a,c                         ; 0449AB
	nop                            ; 0449AC || 	nop                            ; 0400DA || 0449AC 00          11737  			DEFB    0
	nop                            ; 0449AD || 	nop                            ; 0400DB || 0449AD 00 00 00 00 11801  			ALIGN 		256		; ACCS, BUFFER & STAVAR must be on page boundaries
	nop                            ; 0449AE || 	nop                            ; 0400DC
	nop                            ; 0449AF || 	nop                            ; 0400DD
	nop                            ; 0449B0 || 	nop                            ; 0400DE
	nop                            ; 0449B1 || 	nop                            ; 0400DF
	nop                            ; 0449B2 || 	nop                            ; 0400E0
	nop                            ; 0449B3 || 	nop                            ; 0400E1
	nop                            ; 0449B4 || 	nop                            ; 0400E2
	nop                            ; 0449B5 || 	nop                            ; 0400E3
	nop                            ; 0449B6 || 	nop                            ; 0400E4
	nop                            ; 0449B7 || 	nop                            ; 0400DA
	nop                            ; 0449B8 || 	nop                            ; 0400DB
	nop                            ; 0449B9 || 	nop                            ; 0400DC
	nop                            ; 0449BA || 	nop                            ; 0400DD
	nop                            ; 0449BB || 	nop                            ; 0400DE
	nop                            ; 0449BC || 	nop                            ; 0400DF
	nop                            ; 0449BD || 	nop                            ; 0400E0
	nop                            ; 0449BE || 	nop                            ; 0400E1
	nop                            ; 0449BF || 	nop                            ; 0400E2
	nop                            ; 0449C0 || 	nop                            ; 0400E3
	nop                            ; 0449C1 || 	nop                            ; 0400E4
	nop                            ; 0449C2 || 	nop                            ; 0400E5
	nop                            ; 0449C3 || 	nop                            ; 0400E6
	nop                            ; 0449C4 || 	nop                            ; 0400E7
	nop                            ; 0449C5 || 	nop                            ; 0400E8
	nop                            ; 0449C6 || 	nop                            ; 0400E9
	nop                            ; 0449C7 || 	nop                            ; 0400DA
	nop                            ; 0449C8 || 	nop                            ; 0400DB
	nop                            ; 0449C9 || 	nop                            ; 0400DC
	nop                            ; 0449CA || 	nop                            ; 0400DD
	nop                            ; 0449CB || 	nop                            ; 0400DE
	nop                            ; 0449CC || 	nop                            ; 0400DF
	nop                            ; 0449CD || 	nop                            ; 0400E0
	nop                            ; 0449CE || 	nop                            ; 0400E1
	nop                            ; 0449CF || 	nop                            ; 0400E2
	nop                            ; 0449D0 || 	nop                            ; 0400E3
	nop                            ; 0449D1 || 	nop                            ; 0400E4
	nop                            ; 0449D2 || 	nop                            ; 0400E5
	nop                            ; 0449D3 || 	nop                            ; 0400E6
	nop                            ; 0449D4 || 	nop                            ; 0400E7
	nop                            ; 0449D5 || 	nop                            ; 0400E8
	nop                            ; 0449D6 || 	nop                            ; 0400E9
	nop                            ; 0449D7 || 	nop                            ; 0400DA
	nop                            ; 0449D8 || 	nop                            ; 0400DB
	nop                            ; 0449D9 || 	nop                            ; 0400DC
	nop                            ; 0449DA || 	nop                            ; 0400DD
	nop                            ; 0449DB || 	nop                            ; 0400DE
	nop                            ; 0449DC || 	nop                            ; 0400DF
	nop                            ; 0449DD || 	nop                            ; 0400E0
	nop                            ; 0449DE || 	nop                            ; 0400E1
	nop                            ; 0449DF || 	nop                            ; 0400E2
	nop                            ; 0449E0 || 	nop                            ; 0400E3
	nop                            ; 0449E1 || 	nop                            ; 0400E4
	nop                            ; 0449E2 || 	nop                            ; 0400E5
	nop                            ; 0449E3 || 	nop                            ; 0400E6
	nop                            ; 0449E4 || 	nop                            ; 0400E7
	nop                            ; 0449E5 || 	nop                            ; 0400E8
	nop                            ; 0449E6 || 	nop                            ; 0400E9
	nop                            ; 0449E7 || 	nop                            ; 0400DA
	nop                            ; 0449E8 || 	nop                            ; 0400DB
	nop                            ; 0449E9 || 	nop                            ; 0400DC
	nop                            ; 0449EA || 	nop                            ; 0400DD
	nop                            ; 0449EB || 	nop                            ; 0400DE
	nop                            ; 0449EC || 	nop                            ; 0400DF
	nop                            ; 0449ED || 	nop                            ; 0400E0
	nop                            ; 0449EE || 	nop                            ; 0400E1
	nop                            ; 0449EF || 	nop                            ; 0400E2
	nop                            ; 0449F0 || 	nop                            ; 0400E3
	nop                            ; 0449F1 || 	nop                            ; 0400E4
	nop                            ; 0449F2 || 	nop                            ; 0400E5
	nop                            ; 0449F3 || 	nop                            ; 0400E6
	nop                            ; 0449F4 || 	nop                            ; 0400E7
	nop                            ; 0449F5 || 	nop                            ; 0400E8
	nop                            ; 0449F6 || 	nop                            ; 0400E9
	nop                            ; 0449F7 || 	nop                            ; 0400DA
	nop                            ; 0449F8 || 	nop                            ; 0400DB
	nop                            ; 0449F9 || 	nop                            ; 0400DC
	nop                            ; 0449FA || 	nop                            ; 0400DD
	nop                            ; 0449FB || 	nop                            ; 0400DE
	nop                            ; 0449FC || 	nop                            ; 0400DF
	nop                            ; 0449FD || 	nop                            ; 0400E0
	nop                            ; 0449FE || 	nop                            ; 0400E1
	nop                            ; 0449FF || 	nop                            ; 0400E2
	nop                            ; 044A00 || 	nop                            ; 0400E3 || 044A00 00 00 00 00 11804  ACCS:           BLKB    256,0             ; String Accumulator
	nop                            ; 044A01 || 	nop                            ; 0400E4
	nop                            ; 044A02 || 	nop                            ; 0400E5
	nop                            ; 044A03 || 	nop                            ; 0400E6
	nop                            ; 044A04 || 	nop                            ; 0400E7
	nop                            ; 044A05 || 	nop                            ; 0400E8
	nop                            ; 044A06 || 	nop                            ; 0400E9
	nop                            ; 044A07 || 	nop                            ; 0400DA
	nop                            ; 044A08 || 	nop                            ; 0400DB
	nop                            ; 044A09 || 	nop                            ; 0400DC
	nop                            ; 044A0A || 	nop                            ; 0400DD
	nop                            ; 044A0B || 	nop                            ; 0400DE
	nop                            ; 044A0C || 	nop                            ; 0400DF
	nop                            ; 044A0D || 	nop                            ; 0400E0
	nop                            ; 044A0E || 	nop                            ; 0400E1
	nop                            ; 044A0F || 	nop                            ; 0400E2
	nop                            ; 044A10 || 	nop                            ; 0400E3
	nop                            ; 044A11 || 	nop                            ; 0400E4
	nop                            ; 044A12 || 	nop                            ; 0400E5
	nop                            ; 044A13 || 	nop                            ; 0400E6
	nop                            ; 044A14 || 	nop                            ; 0400E7
	nop                            ; 044A15 || 	nop                            ; 0400E8
	nop                            ; 044A16 || 	nop                            ; 0400E9
	nop                            ; 044A17 || 	nop                            ; 0400DA
	nop                            ; 044A18 || 	nop                            ; 0400DB
	nop                            ; 044A19 || 	nop                            ; 0400DC
	nop                            ; 044A1A || 	nop                            ; 0400DD
	nop                            ; 044A1B || 	nop                            ; 0400DE
	nop                            ; 044A1C || 	nop                            ; 0400DF
	nop                            ; 044A1D || 	nop                            ; 0400E0
	nop                            ; 044A1E || 	nop                            ; 0400E1
	nop                            ; 044A1F || 	nop                            ; 0400E2
	nop                            ; 044A20 || 	nop                            ; 0400E3
	nop                            ; 044A21 || 	nop                            ; 0400E4
	nop                            ; 044A22 || 	nop                            ; 0400E5
	nop                            ; 044A23 || 	nop                            ; 0400E6
	nop                            ; 044A24 || 	nop                            ; 0400E7
	nop                            ; 044A25 || 	nop                            ; 0400E8
	nop                            ; 044A26 || 	nop                            ; 0400E9
	nop                            ; 044A27 || 	nop                            ; 0400DA
	nop                            ; 044A28 || 	nop                            ; 0400DB
	nop                            ; 044A29 || 	nop                            ; 0400DC
	nop                            ; 044A2A || 	nop                            ; 0400DD
	nop                            ; 044A2B || 	nop                            ; 0400DE
	nop                            ; 044A2C || 	nop                            ; 0400DF
	nop                            ; 044A2D || 	nop                            ; 0400E0
	nop                            ; 044A2E || 	nop                            ; 0400E1
	nop                            ; 044A2F || 	nop                            ; 0400E2
	nop                            ; 044A30 || 	nop                            ; 0400E3
	nop                            ; 044A31 || 	nop                            ; 0400E4
	nop                            ; 044A32 || 	nop                            ; 0400E5
	nop                            ; 044A33 || 	nop                            ; 0400E6
	nop                            ; 044A34 || 	nop                            ; 0400E7
	nop                            ; 044A35 || 	nop                            ; 0400E8
	nop                            ; 044A36 || 	nop                            ; 0400E9
	nop                            ; 044A37 || 	nop                            ; 0400DA
	nop                            ; 044A38 || 	nop                            ; 0400DB
	nop                            ; 044A39 || 	nop                            ; 0400DC
	nop                            ; 044A3A || 	nop                            ; 0400DD
	nop                            ; 044A3B || 	nop                            ; 0400DE
	nop                            ; 044A3C || 	nop                            ; 0400DF
	nop                            ; 044A3D || 	nop                            ; 0400E0
	nop                            ; 044A3E || 	nop                            ; 0400E1
	nop                            ; 044A3F || 	nop                            ; 0400E2
	nop                            ; 044A40 || 	nop                            ; 0400E3
	nop                            ; 044A41 || 	nop                            ; 0400E4
	nop                            ; 044A42 || 	nop                            ; 0400E5
	nop                            ; 044A43 || 	nop                            ; 0400E6
	nop                            ; 044A44 || 	nop                            ; 0400E7
	nop                            ; 044A45 || 	nop                            ; 0400E8
	nop                            ; 044A46 || 	nop                            ; 0400E9
	nop                            ; 044A47 || 	nop                            ; 0400DA
	nop                            ; 044A48 || 	nop                            ; 0400DB
	nop                            ; 044A49 || 	nop                            ; 0400DC
	nop                            ; 044A4A || 	nop                            ; 0400DD
	nop                            ; 044A4B || 	nop                            ; 0400DE
	nop                            ; 044A4C || 	nop                            ; 0400DF
	nop                            ; 044A4D || 	nop                            ; 0400E0
	nop                            ; 044A4E || 	nop                            ; 0400E1
	nop                            ; 044A4F || 	nop                            ; 0400E2
	nop                            ; 044A50 || 	nop                            ; 0400E3
	nop                            ; 044A51 || 	nop                            ; 0400E4
	nop                            ; 044A52 || 	nop                            ; 0400E5
	nop                            ; 044A53 || 	nop                            ; 0400E6
	nop                            ; 044A54 || 	nop                            ; 0400E7
	nop                            ; 044A55 || 	nop                            ; 0400E8
	nop                            ; 044A56 || 	nop                            ; 0400E9
	nop                            ; 044A57 || 	nop                            ; 0400DA
	nop                            ; 044A58 || 	nop                            ; 0400DB
	nop                            ; 044A59 || 	nop                            ; 0400DC
	nop                            ; 044A5A || 	nop                            ; 0400DD
	nop                            ; 044A5B || 	nop                            ; 0400DE
	nop                            ; 044A5C || 	nop                            ; 0400DF
	nop                            ; 044A5D || 	nop                            ; 0400E0
	nop                            ; 044A5E || 	nop                            ; 0400E1
	nop                            ; 044A5F || 	nop                            ; 0400E2
	nop                            ; 044A60 || 	nop                            ; 0400E3
	nop                            ; 044A61 || 	nop                            ; 0400E4
	nop                            ; 044A62 || 	nop                            ; 0400E5
	nop                            ; 044A63 || 	nop                            ; 0400E6
	nop                            ; 044A64 || 	nop                            ; 0400E7
	nop                            ; 044A65 || 	nop                            ; 0400E8
	nop                            ; 044A66 || 	nop                            ; 0400E9
	nop                            ; 044A67 || 	nop                            ; 0400DA
	nop                            ; 044A68 || 	nop                            ; 0400DB
	nop                            ; 044A69 || 	nop                            ; 0400DC
	nop                            ; 044A6A || 	nop                            ; 0400DD
	nop                            ; 044A6B || 	nop                            ; 0400DE
	nop                            ; 044A6C || 	nop                            ; 0400DF
	nop                            ; 044A6D || 	nop                            ; 0400E0
	nop                            ; 044A6E || 	nop                            ; 0400E1
	nop                            ; 044A6F || 	nop                            ; 0400E2
	nop                            ; 044A70 || 	nop                            ; 0400E3
	nop                            ; 044A71 || 	nop                            ; 0400E4
	nop                            ; 044A72 || 	nop                            ; 0400E5
	nop                            ; 044A73 || 	nop                            ; 0400E6
	nop                            ; 044A74 || 	nop                            ; 0400E7
	nop                            ; 044A75 || 	nop                            ; 0400E8
	nop                            ; 044A76 || 	nop                            ; 0400E9
	nop                            ; 044A77 || 	nop                            ; 0400DA
	nop                            ; 044A78 || 	nop                            ; 0400DB
	nop                            ; 044A79 || 	nop                            ; 0400DC
	nop                            ; 044A7A || 	nop                            ; 0400DD
	nop                            ; 044A7B || 	nop                            ; 0400DE
	nop                            ; 044A7C || 	nop                            ; 0400DF
	nop                            ; 044A7D || 	nop                            ; 0400E0
	nop                            ; 044A7E || 	nop                            ; 0400E1
	nop                            ; 044A7F || 	nop                            ; 0400E2
	nop                            ; 044A80 || 	nop                            ; 0400E3
	nop                            ; 044A81 || 	nop                            ; 0400E4
	nop                            ; 044A82 || 	nop                            ; 0400E5
	nop                            ; 044A83 || 	nop                            ; 0400E6
	nop                            ; 044A84 || 	nop                            ; 0400E7
	nop                            ; 044A85 || 	nop                            ; 0400E8
	nop                            ; 044A86 || 	nop                            ; 0400E9
	nop                            ; 044A87 || 	nop                            ; 0400DA
	nop                            ; 044A88 || 	nop                            ; 0400DB
	nop                            ; 044A89 || 	nop                            ; 0400DC
	nop                            ; 044A8A || 	nop                            ; 0400DD
	nop                            ; 044A8B || 	nop                            ; 0400DE
	nop                            ; 044A8C || 	nop                            ; 0400DF
	nop                            ; 044A8D || 	nop                            ; 0400E0
	nop                            ; 044A8E || 	nop                            ; 0400E1
	nop                            ; 044A8F || 	nop                            ; 0400E2
	nop                            ; 044A90 || 	nop                            ; 0400E3
	nop                            ; 044A91 || 	nop                            ; 0400E4
	nop                            ; 044A92 || 	nop                            ; 0400E5
	nop                            ; 044A93 || 	nop                            ; 0400E6
	nop                            ; 044A94 || 	nop                            ; 0400E7
	nop                            ; 044A95 || 	nop                            ; 0400E8
	nop                            ; 044A96 || 	nop                            ; 0400E9
	nop                            ; 044A97 || 	nop                            ; 0400DA
	nop                            ; 044A98 || 	nop                            ; 0400DB
	nop                            ; 044A99 || 	nop                            ; 0400DC
	nop                            ; 044A9A || 	nop                            ; 0400DD
	nop                            ; 044A9B || 	nop                            ; 0400DE
	nop                            ; 044A9C || 	nop                            ; 0400DF
	nop                            ; 044A9D || 	nop                            ; 0400E0
	nop                            ; 044A9E || 	nop                            ; 0400E1
	nop                            ; 044A9F || 	nop                            ; 0400E2
	nop                            ; 044AA0 || 	nop                            ; 0400E3
	nop                            ; 044AA1 || 	nop                            ; 0400E4
	nop                            ; 044AA2 || 	nop                            ; 0400E5
	nop                            ; 044AA3 || 	nop                            ; 0400E6
	nop                            ; 044AA4 || 	nop                            ; 0400E7
	nop                            ; 044AA5 || 	nop                            ; 0400E8
	nop                            ; 044AA6 || 	nop                            ; 0400E9
	nop                            ; 044AA7 || 	nop                            ; 0400DA
	nop                            ; 044AA8 || 	nop                            ; 0400DB
	nop                            ; 044AA9 || 	nop                            ; 0400DC
	nop                            ; 044AAA || 	nop                            ; 0400DD
	nop                            ; 044AAB || 	nop                            ; 0400DE
	nop                            ; 044AAC || 	nop                            ; 0400DF
	nop                            ; 044AAD || 	nop                            ; 0400E0
	nop                            ; 044AAE || 	nop                            ; 0400E1
	nop                            ; 044AAF || 	nop                            ; 0400E2
	nop                            ; 044AB0 || 	nop                            ; 0400E3
	nop                            ; 044AB1 || 	nop                            ; 0400E4
	nop                            ; 044AB2 || 	nop                            ; 0400E5
	nop                            ; 044AB3 || 	nop                            ; 0400E6
	nop                            ; 044AB4 || 	nop                            ; 0400E7
	nop                            ; 044AB5 || 	nop                            ; 0400E8
	nop                            ; 044AB6 || 	nop                            ; 0400E9
	nop                            ; 044AB7 || 	nop                            ; 0400DA
	nop                            ; 044AB8 || 	nop                            ; 0400DB
	nop                            ; 044AB9 || 	nop                            ; 0400DC
	nop                            ; 044ABA || 	nop                            ; 0400DD
	nop                            ; 044ABB || 	nop                            ; 0400DE
	nop                            ; 044ABC || 	nop                            ; 0400DF
	nop                            ; 044ABD || 	nop                            ; 0400E0
	nop                            ; 044ABE || 	nop                            ; 0400E1
	nop                            ; 044ABF || 	nop                            ; 0400E2
	nop                            ; 044AC0 || 	nop                            ; 0400E3
	nop                            ; 044AC1 || 	nop                            ; 0400E4
	nop                            ; 044AC2 || 	nop                            ; 0400E5
	nop                            ; 044AC3 || 	nop                            ; 0400E6
	nop                            ; 044AC4 || 	nop                            ; 0400E7
	nop                            ; 044AC5 || 	nop                            ; 0400E8
	nop                            ; 044AC6 || 	nop                            ; 0400E9
	nop                            ; 044AC7 || 	nop                            ; 0400DA
	nop                            ; 044AC8 || 	nop                            ; 0400DB
	nop                            ; 044AC9 || 	nop                            ; 0400DC
	nop                            ; 044ACA || 	nop                            ; 0400DD
	nop                            ; 044ACB || 	nop                            ; 0400DE
	nop                            ; 044ACC || 	nop                            ; 0400DF
	nop                            ; 044ACD || 	nop                            ; 0400E0
	nop                            ; 044ACE || 	nop                            ; 0400E1
	nop                            ; 044ACF || 	nop                            ; 0400E2
	nop                            ; 044AD0 || 	nop                            ; 0400E3
	nop                            ; 044AD1 || 	nop                            ; 0400E4
	nop                            ; 044AD2 || 	nop                            ; 0400E5
	nop                            ; 044AD3 || 	nop                            ; 0400E6
	nop                            ; 044AD4 || 	nop                            ; 0400E7
	nop                            ; 044AD5 || 	nop                            ; 0400E8
	nop                            ; 044AD6 || 	nop                            ; 0400E9
	nop                            ; 044AD7 || 	nop                            ; 0400DA
	nop                            ; 044AD8 || 	nop                            ; 0400DB
	nop                            ; 044AD9 || 	nop                            ; 0400DC
	nop                            ; 044ADA || 	nop                            ; 0400DD
	nop                            ; 044ADB || 	nop                            ; 0400DE
	nop                            ; 044ADC || 	nop                            ; 0400DF
	nop                            ; 044ADD || 	nop                            ; 0400E0
	nop                            ; 044ADE || 	nop                            ; 0400E1
	nop                            ; 044ADF || 	nop                            ; 0400E2
	nop                            ; 044AE0 || 	nop                            ; 0400E3
	nop                            ; 044AE1 || 	nop                            ; 0400E4
	nop                            ; 044AE2 || 	nop                            ; 0400E5
	nop                            ; 044AE3 || 	nop                            ; 0400E6
	nop                            ; 044AE4 || 	nop                            ; 0400E7
	nop                            ; 044AE5 || 	nop                            ; 0400E8
	nop                            ; 044AE6 || 	nop                            ; 0400E9
	nop                            ; 044AE7 || 	nop                            ; 0400DA
	nop                            ; 044AE8 || 	nop                            ; 0400DB
	nop                            ; 044AE9 || 	nop                            ; 0400DC
	nop                            ; 044AEA || 	nop                            ; 0400DD
	nop                            ; 044AEB || 	nop                            ; 0400DE
	nop                            ; 044AEC || 	nop                            ; 0400DF
	nop                            ; 044AED || 	nop                            ; 0400E0
	nop                            ; 044AEE || 	nop                            ; 0400E1
	nop                            ; 044AEF || 	nop                            ; 0400E2
	nop                            ; 044AF0 || 	nop                            ; 0400E3
	nop                            ; 044AF1 || 	nop                            ; 0400E4
	nop                            ; 044AF2 || 	nop                            ; 0400E5
	nop                            ; 044AF3 || 	nop                            ; 0400E6
	nop                            ; 044AF4 || 	nop                            ; 0400E7
	nop                            ; 044AF5 || 	nop                            ; 0400E8
	nop                            ; 044AF6 || 	nop                            ; 0400E9
	nop                            ; 044AF7 || 	nop                            ; 0400DA
	nop                            ; 044AF8 || 	nop                            ; 0400DB
	nop                            ; 044AF9 || 	nop                            ; 0400DC
	nop                            ; 044AFA || 	nop                            ; 0400DD
	nop                            ; 044AFB || 	nop                            ; 0400DE
	nop                            ; 044AFC || 	nop                            ; 0400DF
	nop                            ; 044AFD || 	nop                            ; 0400E0
	nop                            ; 044AFE || 	nop                            ; 0400E1
	nop                            ; 044AFF || 	nop                            ; 0400E2
	nop                            ; 044B00 || 	nop                            ; 0400E3 || 044B00 00 00 00 00 11805  BUFFER:         BLKB    256,0             ; String Input Buffer
	nop                            ; 044B01 || 	nop                            ; 0400E4
	nop                            ; 044B02 || 	nop                            ; 0400E5
	nop                            ; 044B03 || 	nop                            ; 0400E6
	nop                            ; 044B04 || 	nop                            ; 0400E7
	nop                            ; 044B05 || 	nop                            ; 0400E8
	nop                            ; 044B06 || 	nop                            ; 0400E9
	nop                            ; 044B07 || 	nop                            ; 0400DA
	nop                            ; 044B08 || 	nop                            ; 0400DB
	nop                            ; 044B09 || 	nop                            ; 0400DC
	nop                            ; 044B0A || 	nop                            ; 0400DD
	nop                            ; 044B0B || 	nop                            ; 0400DE
	nop                            ; 044B0C || 	nop                            ; 0400DF
	nop                            ; 044B0D || 	nop                            ; 0400E0
	nop                            ; 044B0E || 	nop                            ; 0400E1
	nop                            ; 044B0F || 	nop                            ; 0400E2
	nop                            ; 044B10 || 	nop                            ; 0400E3
	nop                            ; 044B11 || 	nop                            ; 0400E4
	nop                            ; 044B12 || 	nop                            ; 0400E5
	nop                            ; 044B13 || 	nop                            ; 0400E6
	nop                            ; 044B14 || 	nop                            ; 0400E7
	nop                            ; 044B15 || 	nop                            ; 0400E8
	nop                            ; 044B16 || 	nop                            ; 0400E9
	nop                            ; 044B17 || 	nop                            ; 0400DA
	nop                            ; 044B18 || 	nop                            ; 0400DB
	nop                            ; 044B19 || 	nop                            ; 0400DC
	nop                            ; 044B1A || 	nop                            ; 0400DD
	nop                            ; 044B1B || 	nop                            ; 0400DE
	nop                            ; 044B1C || 	nop                            ; 0400DF
	nop                            ; 044B1D || 	nop                            ; 0400E0
	nop                            ; 044B1E || 	nop                            ; 0400E1
	nop                            ; 044B1F || 	nop                            ; 0400E2
	nop                            ; 044B20 || 	nop                            ; 0400E3
	nop                            ; 044B21 || 	nop                            ; 0400E4
	nop                            ; 044B22 || 	nop                            ; 0400E5
	nop                            ; 044B23 || 	nop                            ; 0400E6
	nop                            ; 044B24 || 	nop                            ; 0400E7
	nop                            ; 044B25 || 	nop                            ; 0400E8
	nop                            ; 044B26 || 	nop                            ; 0400E9
	nop                            ; 044B27 || 	nop                            ; 0400DA
	nop                            ; 044B28 || 	nop                            ; 0400DB
	nop                            ; 044B29 || 	nop                            ; 0400DC
	nop                            ; 044B2A || 	nop                            ; 0400DD
	nop                            ; 044B2B || 	nop                            ; 0400DE
	nop                            ; 044B2C || 	nop                            ; 0400DF
	nop                            ; 044B2D || 	nop                            ; 0400E0
	nop                            ; 044B2E || 	nop                            ; 0400E1
	nop                            ; 044B2F || 	nop                            ; 0400E2
	nop                            ; 044B30 || 	nop                            ; 0400E3
	nop                            ; 044B31 || 	nop                            ; 0400E4
	nop                            ; 044B32 || 	nop                            ; 0400E5
	nop                            ; 044B33 || 	nop                            ; 0400E6
	nop                            ; 044B34 || 	nop                            ; 0400E7
	nop                            ; 044B35 || 	nop                            ; 0400E8
	nop                            ; 044B36 || 	nop                            ; 0400E9
	nop                            ; 044B37 || 	nop                            ; 0400DA
	nop                            ; 044B38 || 	nop                            ; 0400DB
	nop                            ; 044B39 || 	nop                            ; 0400DC
	nop                            ; 044B3A || 	nop                            ; 0400DD
	nop                            ; 044B3B || 	nop                            ; 0400DE
	nop                            ; 044B3C || 	nop                            ; 0400DF
	nop                            ; 044B3D || 	nop                            ; 0400E0
	nop                            ; 044B3E || 	nop                            ; 0400E1
	nop                            ; 044B3F || 	nop                            ; 0400E2
	nop                            ; 044B40 || 	nop                            ; 0400E3
	nop                            ; 044B41 || 	nop                            ; 0400E4
	nop                            ; 044B42 || 	nop                            ; 0400E5
	nop                            ; 044B43 || 	nop                            ; 0400E6
	nop                            ; 044B44 || 	nop                            ; 0400E7
	nop                            ; 044B45 || 	nop                            ; 0400E8
	nop                            ; 044B46 || 	nop                            ; 0400E9
	nop                            ; 044B47 || 	nop                            ; 0400DA
	nop                            ; 044B48 || 	nop                            ; 0400DB
	nop                            ; 044B49 || 	nop                            ; 0400DC
	nop                            ; 044B4A || 	nop                            ; 0400DD
	nop                            ; 044B4B || 	nop                            ; 0400DE
	nop                            ; 044B4C || 	nop                            ; 0400DF
	nop                            ; 044B4D || 	nop                            ; 0400E0
	nop                            ; 044B4E || 	nop                            ; 0400E1
	nop                            ; 044B4F || 	nop                            ; 0400E2
	nop                            ; 044B50 || 	nop                            ; 0400E3
	nop                            ; 044B51 || 	nop                            ; 0400E4
	nop                            ; 044B52 || 	nop                            ; 0400E5
	nop                            ; 044B53 || 	nop                            ; 0400E6
	nop                            ; 044B54 || 	nop                            ; 0400E7
	nop                            ; 044B55 || 	nop                            ; 0400E8
	nop                            ; 044B56 || 	nop                            ; 0400E9
	nop                            ; 044B57 || 	nop                            ; 0400DA
	nop                            ; 044B58 || 	nop                            ; 0400DB
	nop                            ; 044B59 || 	nop                            ; 0400DC
	nop                            ; 044B5A || 	nop                            ; 0400DD
	nop                            ; 044B5B || 	nop                            ; 0400DE
	nop                            ; 044B5C || 	nop                            ; 0400DF
	nop                            ; 044B5D || 	nop                            ; 0400E0
	nop                            ; 044B5E || 	nop                            ; 0400E1
	nop                            ; 044B5F || 	nop                            ; 0400E2
	nop                            ; 044B60 || 	nop                            ; 0400E3
	nop                            ; 044B61 || 	nop                            ; 0400E4
	nop                            ; 044B62 || 	nop                            ; 0400E5
	nop                            ; 044B63 || 	nop                            ; 0400E6
	nop                            ; 044B64 || 	nop                            ; 0400E7
	nop                            ; 044B65 || 	nop                            ; 0400E8
	nop                            ; 044B66 || 	nop                            ; 0400E9
	nop                            ; 044B67 || 	nop                            ; 0400DA
	nop                            ; 044B68 || 	nop                            ; 0400DB
	nop                            ; 044B69 || 	nop                            ; 0400DC
	nop                            ; 044B6A || 	nop                            ; 0400DD
	nop                            ; 044B6B || 	nop                            ; 0400DE
	nop                            ; 044B6C || 	nop                            ; 0400DF
	nop                            ; 044B6D || 	nop                            ; 0400E0
	nop                            ; 044B6E || 	nop                            ; 0400E1
	nop                            ; 044B6F || 	nop                            ; 0400E2
	nop                            ; 044B70 || 	nop                            ; 0400E3
	nop                            ; 044B71 || 	nop                            ; 0400E4
	nop                            ; 044B72 || 	nop                            ; 0400E5
	nop                            ; 044B73 || 	nop                            ; 0400E6
	nop                            ; 044B74 || 	nop                            ; 0400E7
	nop                            ; 044B75 || 	nop                            ; 0400E8
	nop                            ; 044B76 || 	nop                            ; 0400E9
	nop                            ; 044B77 || 	nop                            ; 0400DA
	nop                            ; 044B78 || 	nop                            ; 0400DB
	nop                            ; 044B79 || 	nop                            ; 0400DC
	nop                            ; 044B7A || 	nop                            ; 0400DD
	nop                            ; 044B7B || 	nop                            ; 0400DE
	nop                            ; 044B7C || 	nop                            ; 0400DF
	nop                            ; 044B7D || 	nop                            ; 0400E0
	nop                            ; 044B7E || 	nop                            ; 0400E1
	nop                            ; 044B7F || 	nop                            ; 0400E2
	nop                            ; 044B80 || 	nop                            ; 0400E3
	nop                            ; 044B81 || 	nop                            ; 0400E4
	nop                            ; 044B82 || 	nop                            ; 0400E5
	nop                            ; 044B83 || 	nop                            ; 0400E6
	nop                            ; 044B84 || 	nop                            ; 0400E7
	nop                            ; 044B85 || 	nop                            ; 0400E8
	nop                            ; 044B86 || 	nop                            ; 0400E9
	nop                            ; 044B87 || 	nop                            ; 0400DA
	nop                            ; 044B88 || 	nop                            ; 0400DB
	nop                            ; 044B89 || 	nop                            ; 0400DC
	nop                            ; 044B8A || 	nop                            ; 0400DD
	nop                            ; 044B8B || 	nop                            ; 0400DE
	nop                            ; 044B8C || 	nop                            ; 0400DF
	nop                            ; 044B8D || 	nop                            ; 0400E0
	nop                            ; 044B8E || 	nop                            ; 0400E1
	nop                            ; 044B8F || 	nop                            ; 0400E2
	nop                            ; 044B90 || 	nop                            ; 0400E3
	nop                            ; 044B91 || 	nop                            ; 0400E4
	nop                            ; 044B92 || 	nop                            ; 0400E5
	nop                            ; 044B93 || 	nop                            ; 0400E6
	nop                            ; 044B94 || 	nop                            ; 0400E7
	nop                            ; 044B95 || 	nop                            ; 0400E8
	nop                            ; 044B96 || 	nop                            ; 0400E9
	nop                            ; 044B97 || 	nop                            ; 0400DA
	nop                            ; 044B98 || 	nop                            ; 0400DB
	nop                            ; 044B99 || 	nop                            ; 0400DC
	nop                            ; 044B9A || 	nop                            ; 0400DD
	nop                            ; 044B9B || 	nop                            ; 0400DE
	nop                            ; 044B9C || 	nop                            ; 0400DF
	nop                            ; 044B9D || 	nop                            ; 0400E0
	nop                            ; 044B9E || 	nop                            ; 0400E1
	nop                            ; 044B9F || 	nop                            ; 0400E2
	nop                            ; 044BA0 || 	nop                            ; 0400E3
	nop                            ; 044BA1 || 	nop                            ; 0400E4
	nop                            ; 044BA2 || 	nop                            ; 0400E5
	nop                            ; 044BA3 || 	nop                            ; 0400E6
	nop                            ; 044BA4 || 	nop                            ; 0400E7
	nop                            ; 044BA5 || 	nop                            ; 0400E8
	nop                            ; 044BA6 || 	nop                            ; 0400E9
	nop                            ; 044BA7 || 	nop                            ; 0400DA
	nop                            ; 044BA8 || 	nop                            ; 0400DB
	nop                            ; 044BA9 || 	nop                            ; 0400DC
	nop                            ; 044BAA || 	nop                            ; 0400DD
	nop                            ; 044BAB || 	nop                            ; 0400DE
	nop                            ; 044BAC || 	nop                            ; 0400DF
	nop                            ; 044BAD || 	nop                            ; 0400E0
	nop                            ; 044BAE || 	nop                            ; 0400E1
	nop                            ; 044BAF || 	nop                            ; 0400E2
	nop                            ; 044BB0 || 	nop                            ; 0400E3
	nop                            ; 044BB1 || 	nop                            ; 0400E4
	nop                            ; 044BB2 || 	nop                            ; 0400E5
	nop                            ; 044BB3 || 	nop                            ; 0400E6
	nop                            ; 044BB4 || 	nop                            ; 0400E7
	nop                            ; 044BB5 || 	nop                            ; 0400E8
	nop                            ; 044BB6 || 	nop                            ; 0400E9
	nop                            ; 044BB7 || 	nop                            ; 0400DA
	nop                            ; 044BB8 || 	nop                            ; 0400DB
	nop                            ; 044BB9 || 	nop                            ; 0400DC
	nop                            ; 044BBA || 	nop                            ; 0400DD
	nop                            ; 044BBB || 	nop                            ; 0400DE
	nop                            ; 044BBC || 	nop                            ; 0400DF
	nop                            ; 044BBD || 	nop                            ; 0400E0
	nop                            ; 044BBE || 	nop                            ; 0400E1
	nop                            ; 044BBF || 	nop                            ; 0400E2
	nop                            ; 044BC0 || 	nop                            ; 0400E3
	nop                            ; 044BC1 || 	nop                            ; 0400E4
	nop                            ; 044BC2 || 	nop                            ; 0400E5
	nop                            ; 044BC3 || 	nop                            ; 0400E6
	nop                            ; 044BC4 || 	nop                            ; 0400E7
	nop                            ; 044BC5 || 	nop                            ; 0400E8
	nop                            ; 044BC6 || 	nop                            ; 0400E9
	nop                            ; 044BC7 || 	nop                            ; 0400DA
	nop                            ; 044BC8 || 	nop                            ; 0400DB
	nop                            ; 044BC9 || 	nop                            ; 0400DC
	nop                            ; 044BCA || 	nop                            ; 0400DD
	nop                            ; 044BCB || 	nop                            ; 0400DE
	nop                            ; 044BCC || 	nop                            ; 0400DF
	nop                            ; 044BCD || 	nop                            ; 0400E0
	nop                            ; 044BCE || 	nop                            ; 0400E1
	nop                            ; 044BCF || 	nop                            ; 0400E2
	nop                            ; 044BD0 || 	nop                            ; 0400E3
	nop                            ; 044BD1 || 	nop                            ; 0400E4
	nop                            ; 044BD2 || 	nop                            ; 0400E5
	nop                            ; 044BD3 || 	nop                            ; 0400E6
	nop                            ; 044BD4 || 	nop                            ; 0400E7
	nop                            ; 044BD5 || 	nop                            ; 0400E8
	nop                            ; 044BD6 || 	nop                            ; 0400E9
	nop                            ; 044BD7 || 	nop                            ; 0400DA
	nop                            ; 044BD8 || 	nop                            ; 0400DB
	nop                            ; 044BD9 || 	nop                            ; 0400DC
	nop                            ; 044BDA || 	nop                            ; 0400DD
	nop                            ; 044BDB || 	nop                            ; 0400DE
	nop                            ; 044BDC || 	nop                            ; 0400DF
	nop                            ; 044BDD || 	nop                            ; 0400E0
	nop                            ; 044BDE || 	nop                            ; 0400E1
	nop                            ; 044BDF || 	nop                            ; 0400E2
	nop                            ; 044BE0 || 	nop                            ; 0400E3
	nop                            ; 044BE1 || 	nop                            ; 0400E4
	nop                            ; 044BE2 || 	nop                            ; 0400E5
	nop                            ; 044BE3 || 	nop                            ; 0400E6
	nop                            ; 044BE4 || 	nop                            ; 0400E7
	nop                            ; 044BE5 || 	nop                            ; 0400E8
	nop                            ; 044BE6 || 	nop                            ; 0400E9
	nop                            ; 044BE7 || 	nop                            ; 0400DA
	nop                            ; 044BE8 || 	nop                            ; 0400DB
	nop                            ; 044BE9 || 	nop                            ; 0400DC
	nop                            ; 044BEA || 	nop                            ; 0400DD
	nop                            ; 044BEB || 	nop                            ; 0400DE
	nop                            ; 044BEC || 	nop                            ; 0400DF
	nop                            ; 044BED || 	nop                            ; 0400E0
	nop                            ; 044BEE || 	nop                            ; 0400E1
	nop                            ; 044BEF || 	nop                            ; 0400E2
	nop                            ; 044BF0 || 	nop                            ; 0400E3
	nop                            ; 044BF1 || 	nop                            ; 0400E4
	nop                            ; 044BF2 || 	nop                            ; 0400E5
	nop                            ; 044BF3 || 	nop                            ; 0400E6
	nop                            ; 044BF4 || 	nop                            ; 0400E7
	nop                            ; 044BF5 || 	nop                            ; 0400E8
	nop                            ; 044BF6 || 	nop                            ; 0400E9
	nop                            ; 044BF7 || 	nop                            ; 0400DA
	nop                            ; 044BF8 || 	nop                            ; 0400DB
	nop                            ; 044BF9 || 	nop                            ; 0400DC
	nop                            ; 044BFA || 	nop                            ; 0400DD
	nop                            ; 044BFB || 	nop                            ; 0400DE
	nop                            ; 044BFC || 	nop                            ; 0400DF
	nop                            ; 044BFD || 	nop                            ; 0400E0
	nop                            ; 044BFE || 	nop                            ; 0400E1
	nop                            ; 044BFF || 	nop                            ; 0400E2
	nop                            ; 044C00 || 	nop                            ; 0400E3 || 044C00 00 00 00 00 11806  STAVAR:         BLKB    27*4,0            ; Static Variables
	nop                            ; 044C01 || 	nop                            ; 0400E4
	nop                            ; 044C02 || 	nop                            ; 0400E5
	nop                            ; 044C03 || 	nop                            ; 0400E6
	nop                            ; 044C04 || 	nop                            ; 0400E7
	nop                            ; 044C05 || 	nop                            ; 0400E8
	nop                            ; 044C06 || 	nop                            ; 0400E9
	nop                            ; 044C07 || 	nop                            ; 0400DA
	nop                            ; 044C08 || 	nop                            ; 0400DB
	nop                            ; 044C09 || 	nop                            ; 0400DC
	nop                            ; 044C0A || 	nop                            ; 0400DD
	nop                            ; 044C0B || 	nop                            ; 0400DE
	nop                            ; 044C0C || 	nop                            ; 0400DF
	nop                            ; 044C0D || 	nop                            ; 0400E0
	nop                            ; 044C0E || 	nop                            ; 0400E1
	nop                            ; 044C0F || 	nop                            ; 0400E2
	nop                            ; 044C10 || 	nop                            ; 0400E3
	nop                            ; 044C11 || 	nop                            ; 0400E4
	nop                            ; 044C12 || 	nop                            ; 0400E5
	nop                            ; 044C13 || 	nop                            ; 0400E6
	nop                            ; 044C14 || 	nop                            ; 0400E7
	nop                            ; 044C15 || 	nop                            ; 0400E8
	nop                            ; 044C16 || 	nop                            ; 0400E9
	nop                            ; 044C17 || 	nop                            ; 0400DA
	nop                            ; 044C18 || 	nop                            ; 0400DB
	nop                            ; 044C19 || 	nop                            ; 0400DC
	nop                            ; 044C1A || 	nop                            ; 0400DD
	nop                            ; 044C1B || 	nop                            ; 0400DE
	nop                            ; 044C1C || 	nop                            ; 0400DF
	nop                            ; 044C1D || 	nop                            ; 0400E0
	nop                            ; 044C1E || 	nop                            ; 0400E1
	nop                            ; 044C1F || 	nop                            ; 0400E2
	nop                            ; 044C20 || 	nop                            ; 0400E3
	nop                            ; 044C21 || 	nop                            ; 0400E4
	nop                            ; 044C22 || 	nop                            ; 0400E5
	nop                            ; 044C23 || 	nop                            ; 0400E6
	nop                            ; 044C24 || 	nop                            ; 0400E7
	nop                            ; 044C25 || 	nop                            ; 0400E8
	nop                            ; 044C26 || 	nop                            ; 0400E9
	nop                            ; 044C27 || 	nop                            ; 0400DA
	nop                            ; 044C28 || 	nop                            ; 0400DB
	nop                            ; 044C29 || 	nop                            ; 0400DC
	nop                            ; 044C2A || 	nop                            ; 0400DD
	nop                            ; 044C2B || 	nop                            ; 0400DE
	nop                            ; 044C2C || 	nop                            ; 0400DF
	nop                            ; 044C2D || 	nop                            ; 0400E0
	nop                            ; 044C2E || 	nop                            ; 0400E1
	nop                            ; 044C2F || 	nop                            ; 0400E2
	nop                            ; 044C30 || 	nop                            ; 0400E3
	nop                            ; 044C31 || 	nop                            ; 0400E4
	nop                            ; 044C32 || 	nop                            ; 0400E5
	nop                            ; 044C33 || 	nop                            ; 0400E6
	nop                            ; 044C34 || 	nop                            ; 0400E7
	nop                            ; 044C35 || 	nop                            ; 0400E8
	nop                            ; 044C36 || 	nop                            ; 0400E9
	nop                            ; 044C37 || 	nop                            ; 0400DA
	nop                            ; 044C38 || 	nop                            ; 0400DB
	nop                            ; 044C39 || 	nop                            ; 0400DC
	nop                            ; 044C3A || 	nop                            ; 0400DD
	nop                            ; 044C3B || 	nop                            ; 0400DE
	nop                            ; 044C3C || 	nop                            ; 0400DF
	nop                            ; 044C3D || 	nop                            ; 0400E0
	nop                            ; 044C3E || 	nop                            ; 0400E1
	nop                            ; 044C3F || 	nop                            ; 0400E2
	nop                            ; 044C40 || 	nop                            ; 0400E3
	nop                            ; 044C41 || 	nop                            ; 0400E4
	nop                            ; 044C42 || 	nop                            ; 0400E5
	nop                            ; 044C43 || 	nop                            ; 0400E6
	nop                            ; 044C44 || 	nop                            ; 0400E7
	nop                            ; 044C45 || 	nop                            ; 0400E8
	nop                            ; 044C46 || 	nop                            ; 0400E9
	nop                            ; 044C47 || 	nop                            ; 0400DA
	nop                            ; 044C48 || 	nop                            ; 0400DB
	nop                            ; 044C49 || 	nop                            ; 0400DC
	nop                            ; 044C4A || 	nop                            ; 0400DD
	nop                            ; 044C4B || 	nop                            ; 0400DE
	nop                            ; 044C4C || 	nop                            ; 0400DF
	nop                            ; 044C4D || 	nop                            ; 0400E0
	nop                            ; 044C4E || 	nop                            ; 0400E1
	nop                            ; 044C4F || 	nop                            ; 0400E2
	nop                            ; 044C50 || 	nop                            ; 0400E3
	nop                            ; 044C51 || 	nop                            ; 0400E4
	nop                            ; 044C52 || 	nop                            ; 0400E5
	nop                            ; 044C53 || 	nop                            ; 0400E6
	nop                            ; 044C54 || 	nop                            ; 0400E7
	nop                            ; 044C55 || 	nop                            ; 0400E8
	nop                            ; 044C56 || 	nop                            ; 0400E9
	nop                            ; 044C57 || 	nop                            ; 0400DA
	nop                            ; 044C58 || 	nop                            ; 0400DB
	nop                            ; 044C59 || 	nop                            ; 0400DC
	nop                            ; 044C5A || 	nop                            ; 0400DD
	nop                            ; 044C5B || 	nop                            ; 0400DE
	nop                            ; 044C5C || 	nop                            ; 0400DF
	nop                            ; 044C5D || 	nop                            ; 0400E0
	nop                            ; 044C5E || 	nop                            ; 0400E1
	nop                            ; 044C5F || 	nop                            ; 0400E2
	nop                            ; 044C60 || 	nop                            ; 0400E3
	nop                            ; 044C61 || 	nop                            ; 0400E4
	nop                            ; 044C62 || 	nop                            ; 0400E5
	nop                            ; 044C63 || 	nop                            ; 0400E6
	nop                            ; 044C64 || 	nop                            ; 0400E7
	nop                            ; 044C65 || 	nop                            ; 0400E8
	nop                            ; 044C66 || 	nop                            ; 0400E9
	nop                            ; 044C67 || 	nop                            ; 0400DA
	nop                            ; 044C68 || 	nop                            ; 0400DB
	nop                            ; 044C69 || 	nop                            ; 0400DC
	nop                            ; 044C6A || 	nop                            ; 0400DD
	nop                            ; 044C6B || 	nop                            ; 0400DE
	nop                            ; 044C6C || 	nop                            ; 0400DF || 044C6C 00 00 00 00 11807  DYNVAR:         BLKB    54*3,0            ; Dynamic Variable Pointers
	nop                            ; 044C6D || 	nop                            ; 0400E0
	nop                            ; 044C6E || 	nop                            ; 0400E1
	nop                            ; 044C6F || 	nop                            ; 0400E2
	nop                            ; 044C70 || 	nop                            ; 0400E3
	nop                            ; 044C71 || 	nop                            ; 0400E4
	nop                            ; 044C72 || 	nop                            ; 0400E5
	nop                            ; 044C73 || 	nop                            ; 0400E6
	nop                            ; 044C74 || 	nop                            ; 0400E7
	nop                            ; 044C75 || 	nop                            ; 0400E8
	nop                            ; 044C76 || 	nop                            ; 0400E9
	nop                            ; 044C77 || 	nop                            ; 0400DA
	nop                            ; 044C78 || 	nop                            ; 0400DB
	nop                            ; 044C79 || 	nop                            ; 0400DC
	nop                            ; 044C7A || 	nop                            ; 0400DD
	nop                            ; 044C7B || 	nop                            ; 0400DE
	nop                            ; 044C7C || 	nop                            ; 0400DF
	nop                            ; 044C7D || 	nop                            ; 0400E0
	nop                            ; 044C7E || 	nop                            ; 0400E1
	nop                            ; 044C7F || 	nop                            ; 0400E2
	nop                            ; 044C80 || 	nop                            ; 0400E3
	nop                            ; 044C81 || 	nop                            ; 0400E4
	nop                            ; 044C82 || 	nop                            ; 0400E5
	nop                            ; 044C83 || 	nop                            ; 0400E6
	nop                            ; 044C84 || 	nop                            ; 0400E7
	nop                            ; 044C85 || 	nop                            ; 0400E8
	nop                            ; 044C86 || 	nop                            ; 0400E9
	nop                            ; 044C87 || 	nop                            ; 0400DA
	nop                            ; 044C88 || 	nop                            ; 0400DB
	nop                            ; 044C89 || 	nop                            ; 0400DC
	nop                            ; 044C8A || 	nop                            ; 0400DD
	nop                            ; 044C8B || 	nop                            ; 0400DE
	nop                            ; 044C8C || 	nop                            ; 0400DF
	nop                            ; 044C8D || 	nop                            ; 0400E0
	nop                            ; 044C8E || 	nop                            ; 0400E1
	nop                            ; 044C8F || 	nop                            ; 0400E2
	nop                            ; 044C90 || 	nop                            ; 0400E3
	nop                            ; 044C91 || 	nop                            ; 0400E4
	nop                            ; 044C92 || 	nop                            ; 0400E5
	nop                            ; 044C93 || 	nop                            ; 0400E6
	nop                            ; 044C94 || 	nop                            ; 0400E7
	nop                            ; 044C95 || 	nop                            ; 0400E8
	nop                            ; 044C96 || 	nop                            ; 0400E9
	nop                            ; 044C97 || 	nop                            ; 0400DA
	nop                            ; 044C98 || 	nop                            ; 0400DB
	nop                            ; 044C99 || 	nop                            ; 0400DC
	nop                            ; 044C9A || 	nop                            ; 0400DD
	nop                            ; 044C9B || 	nop                            ; 0400DE
	nop                            ; 044C9C || 	nop                            ; 0400DF
	nop                            ; 044C9D || 	nop                            ; 0400E0
	nop                            ; 044C9E || 	nop                            ; 0400E1
	nop                            ; 044C9F || 	nop                            ; 0400E2
	nop                            ; 044CA0 || 	nop                            ; 0400E3
	nop                            ; 044CA1 || 	nop                            ; 0400E4
	nop                            ; 044CA2 || 	nop                            ; 0400E5
	nop                            ; 044CA3 || 	nop                            ; 0400E6
	nop                            ; 044CA4 || 	nop                            ; 0400E7
	nop                            ; 044CA5 || 	nop                            ; 0400E8
	nop                            ; 044CA6 || 	nop                            ; 0400E9
	nop                            ; 044CA7 || 	nop                            ; 0400DA
	nop                            ; 044CA8 || 	nop                            ; 0400DB
	nop                            ; 044CA9 || 	nop                            ; 0400DC
	nop                            ; 044CAA || 	nop                            ; 0400DD
	nop                            ; 044CAB || 	nop                            ; 0400DE
	nop                            ; 044CAC || 	nop                            ; 0400DF
	nop                            ; 044CAD || 	nop                            ; 0400E0
	nop                            ; 044CAE || 	nop                            ; 0400E1
	nop                            ; 044CAF || 	nop                            ; 0400E2
	nop                            ; 044CB0 || 	nop                            ; 0400E3
	nop                            ; 044CB1 || 	nop                            ; 0400E4
	nop                            ; 044CB2 || 	nop                            ; 0400E5
	nop                            ; 044CB3 || 	nop                            ; 0400E6
	nop                            ; 044CB4 || 	nop                            ; 0400E7
	nop                            ; 044CB5 || 	nop                            ; 0400E8
	nop                            ; 044CB6 || 	nop                            ; 0400E9
	nop                            ; 044CB7 || 	nop                            ; 0400DA
	nop                            ; 044CB8 || 	nop                            ; 0400DB
	nop                            ; 044CB9 || 	nop                            ; 0400DC
	nop                            ; 044CBA || 	nop                            ; 0400DD
	nop                            ; 044CBB || 	nop                            ; 0400DE
	nop                            ; 044CBC || 	nop                            ; 0400DF
	nop                            ; 044CBD || 	nop                            ; 0400E0
	nop                            ; 044CBE || 	nop                            ; 0400E1
	nop                            ; 044CBF || 	nop                            ; 0400E2
	nop                            ; 044CC0 || 	nop                            ; 0400E3
	nop                            ; 044CC1 || 	nop                            ; 0400E4
	nop                            ; 044CC2 || 	nop                            ; 0400E5
	nop                            ; 044CC3 || 	nop                            ; 0400E6
	nop                            ; 044CC4 || 	nop                            ; 0400E7
	nop                            ; 044CC5 || 	nop                            ; 0400E8
	nop                            ; 044CC6 || 	nop                            ; 0400E9
	nop                            ; 044CC7 || 	nop                            ; 0400DA
	nop                            ; 044CC8 || 	nop                            ; 0400DB
	nop                            ; 044CC9 || 	nop                            ; 0400DC
	nop                            ; 044CCA || 	nop                            ; 0400DD
	nop                            ; 044CCB || 	nop                            ; 0400DE
	nop                            ; 044CCC || 	nop                            ; 0400DF
	nop                            ; 044CCD || 	nop                            ; 0400E0
	nop                            ; 044CCE || 	nop                            ; 0400E1
	nop                            ; 044CCF || 	nop                            ; 0400E2
	nop                            ; 044CD0 || 	nop                            ; 0400E3
	nop                            ; 044CD1 || 	nop                            ; 0400E4
	nop                            ; 044CD2 || 	nop                            ; 0400E5
	nop                            ; 044CD3 || 	nop                            ; 0400E6
	nop                            ; 044CD4 || 	nop                            ; 0400E7
	nop                            ; 044CD5 || 	nop                            ; 0400E8
	nop                            ; 044CD6 || 	nop                            ; 0400E9
	nop                            ; 044CD7 || 	nop                            ; 0400DA
	nop                            ; 044CD8 || 	nop                            ; 0400DB
	nop                            ; 044CD9 || 	nop                            ; 0400DC
	nop                            ; 044CDA || 	nop                            ; 0400DD
	nop                            ; 044CDB || 	nop                            ; 0400DE
	nop                            ; 044CDC || 	nop                            ; 0400DF
	nop                            ; 044CDD || 	nop                            ; 0400E0
	nop                            ; 044CDE || 	nop                            ; 0400E1
	nop                            ; 044CDF || 	nop                            ; 0400E2
	nop                            ; 044CE0 || 	nop                            ; 0400E3
	nop                            ; 044CE1 || 	nop                            ; 0400E4
	nop                            ; 044CE2 || 	nop                            ; 0400E5
	nop                            ; 044CE3 || 	nop                            ; 0400E6
	nop                            ; 044CE4 || 	nop                            ; 0400E7
	nop                            ; 044CE5 || 	nop                            ; 0400E8
	nop                            ; 044CE6 || 	nop                            ; 0400E9
	nop                            ; 044CE7 || 	nop                            ; 0400DA
	nop                            ; 044CE8 || 	nop                            ; 0400DB
	nop                            ; 044CE9 || 	nop                            ; 0400DC
	nop                            ; 044CEA || 	nop                            ; 0400DD
	nop                            ; 044CEB || 	nop                            ; 0400DE
	nop                            ; 044CEC || 	nop                            ; 0400DF
	nop                            ; 044CED || 	nop                            ; 0400E0
	nop                            ; 044CEE || 	nop                            ; 0400E1
	nop                            ; 044CEF || 	nop                            ; 0400E2
	nop                            ; 044CF0 || 	nop                            ; 0400E3
	nop                            ; 044CF1 || 	nop                            ; 0400E4
	nop                            ; 044CF2 || 	nop                            ; 0400E5
	nop                            ; 044CF3 || 	nop                            ; 0400E6
	nop                            ; 044CF4 || 	nop                            ; 0400E7
	nop                            ; 044CF5 || 	nop                            ; 0400E8
	nop                            ; 044CF6 || 	nop                            ; 0400E9
	nop                            ; 044CF7 || 	nop                            ; 0400DA
	nop                            ; 044CF8 || 	nop                            ; 0400DB
	nop                            ; 044CF9 || 	nop                            ; 0400DC
	nop                            ; 044CFA || 	nop                            ; 0400DD
	nop                            ; 044CFB || 	nop                            ; 0400DE
	nop                            ; 044CFC || 	nop                            ; 0400DF
	nop                            ; 044CFD || 	nop                            ; 0400E0
	nop                            ; 044CFE || 	nop                            ; 0400E1
	nop                            ; 044CFF || 	nop                            ; 0400E2
	nop                            ; 044D00 || 	nop                            ; 0400E3
	nop                            ; 044D01 || 	nop                            ; 0400E4
	nop                            ; 044D02 || 	nop                            ; 0400E5
	nop                            ; 044D03 || 	nop                            ; 0400E6
	nop                            ; 044D04 || 	nop                            ; 0400E7
	nop                            ; 044D05 || 	nop                            ; 0400E8
	nop                            ; 044D06 || 	nop                            ; 0400E9
	nop                            ; 044D07 || 	nop                            ; 0400DA
	nop                            ; 044D08 || 	nop                            ; 0400DB
	nop                            ; 044D09 || 	nop                            ; 0400DC
	nop                            ; 044D0A || 	nop                            ; 0400DD
	nop                            ; 044D0B || 	nop                            ; 0400DE
	nop                            ; 044D0C || 	nop                            ; 0400DF
	nop                            ; 044D0D || 	nop                            ; 0400E0
	nop                            ; 044D0E || 	nop                            ; 0400E1 || 044D0E 00 00 00    11808  FNPTR:          BLKB    3,0               ; Dynamic Function Pointers
	nop                            ; 044D0F || 	nop                            ; 0400E2
	nop                            ; 044D10 || 	nop                            ; 0400E3
	nop                            ; 044D11 || 	nop                            ; 0400E4 || 044D11 00 00 00    11809  PROPTR:         BLKB    3,0               ; Dynamic Procedure Pointers
	nop                            ; 044D12 || 	nop                            ; 0400E5
	nop                            ; 044D13 || 	nop                            ; 0400E6
	nop                            ; 044D14 || 	nop                            ; 0400E7 || 044D14 00 00 00    11811  PAGE_:          BLKB    3,0               ; Start of User Program
	nop                            ; 044D15 || 	nop                            ; 0400E8
	nop                            ; 044D16 || 	nop                            ; 0400E9
	nop                            ; 044D17 || 	nop                            ; 0400DA || 044D17 00 00 00    11812  TOP:            BLKB    3,0               ; First Location after User Program
	nop                            ; 044D18 || 	nop                            ; 0400DB
	nop                            ; 044D19 || 	nop                            ; 0400DC
	nop                            ; 044D1A || 	nop                            ; 0400DD || 044D1A 00 00 00    11813  LOMEM:          BLKB    3,0               ; Start of Dynamic Storage
	nop                            ; 044D1B || 	nop                            ; 0400DE
	nop                            ; 044D1C || 	nop                            ; 0400DF
	nop                            ; 044D1D || 	nop                            ; 0400E0 || 044D1D 00 00 00    11814  FREE:           BLKB    3,0               ; First Free Space Byte
	nop                            ; 044D1E || 	nop                            ; 0400E1
	nop                            ; 044D1F || 	nop                            ; 0400E2
	nop                            ; 044D20 || 	nop                            ; 0400E3 || 044D20 00 00 00    11815  HIMEM:          BLKB    3,0               ; First Protected Byte
	nop                            ; 044D21 || 	nop                            ; 0400E4
	nop                            ; 044D22 || 	nop                            ; 0400E5
	nop                            ; 044D23 || 	nop                            ; 0400E6 || 044D23 00 00 00    11817  LINENO:         BLKB    3,0               ; Line Number
	nop                            ; 044D24 || 	nop                            ; 0400E7
	nop                            ; 044D25 || 	nop                            ; 0400E8
	nop                            ; 044D26 || 	nop                            ; 0400E9 || 044D26 00 00 00    11818  TRACEN:         BLKB    3,0               ; Trace Flag
	nop                            ; 044D27 || 	nop                            ; 0400DA
	nop                            ; 044D28 || 	nop                            ; 0400DB
	nop                            ; 044D29 || 	nop                            ; 0400DC || 044D29 00 00 00    11819  AUTONO:         BLKB    3,0               ; Auto Flag
	nop                            ; 044D2A || 	nop                            ; 0400DD
	nop                            ; 044D2B || 	nop                            ; 0400DE
	nop                            ; 044D2C || 	nop                            ; 0400DF || 044D2C 00 00 00    11820  ERRTRP:         BLKB    3,0               ; Error Trap
	nop                            ; 044D2D || 	nop                            ; 0400E0
	nop                            ; 044D2E || 	nop                            ; 0400E1
	nop                            ; 044D2F || 	nop                            ; 0400E2 || 044D2F 00 00       11821  ERRTXT:         BLKB    2,0               ; Error Message Pointer
	nop                            ; 044D30 || 	nop                            ; 0400E3
	nop                            ; 044D31 || 	nop                            ; 0400E4 || 044D31 00 00       11822  DATPTR:         BLKB    2,0               ; Data Pointer
	nop                            ; 044D32 || 	nop                            ; 0400E5
	nop                            ; 044D33 || 	nop                            ; 0400E6 || 044D33 00 00       11823  ERL:            BLKB    2,0               ; Error Line
	nop                            ; 044D34 || 	nop                            ; 0400E7
	nop                            ; 044D35 || 	nop                            ; 0400E8 || 044D35 00 00 00    11824  ERRLIN:         BLKB    3,0               ; The "ON ERROR" Line
	nop                            ; 044D36 || 	nop                            ; 0400E9
	nop                            ; 044D37 || 	nop                            ; 0400DA
	nop                            ; 044D38 || 	nop                            ; 0400DB || 044D38 00 00 00 00 11825  RANDOM:         BLKB    5,0               ; Random Number
	nop                            ; 044D39 || 	nop                            ; 0400DC
	nop                            ; 044D3A || 	nop                            ; 0400DD
	nop                            ; 044D3B || 	nop                            ; 0400DE
	nop                            ; 044D3C || 	nop                            ; 0400DF
	nop                            ; 044D3D || 	nop                            ; 0400E0 || 044D3D 00          11826  COUNT:          BLKB    1,0               ; Print Position
	nop                            ; 044D3E || 	nop                            ; 0400E1 || 044D3E 00          11827  WIDTH:          BLKB    1,0               ; Print Width
	nop                            ; 044D3F || 	nop                            ; 0400E2 || 044D3F 00          11828  ERR:            BLKB    1,0               ; Error Number
	nop                            ; 044D40 || 	nop                            ; 0400E3 || 044D40 00          11829  LISTON:         BLKB    1,0               ; LISTO (bottom nibble)
	nop                            ; 044D41 || 	nop                            ; 0400E4 || 044D41 00          11839  INCREM:         BLKB    1,0               ; Auto-Increment Value
	nop                            ; 044D42 || 	nop                            ; 0400E5 || 044D42 00          11843  FLAGS:          BLKB    1,0       ; Miscellaneous flags
	nop                            ; 044D43 || 	nop                            ; 0400E6 || 044D43 00 00       11846  OSWRCHPT:       BLKB    2,0       ; Pointer for *EDIT
	nop                            ; 044D44 || 	nop                            ; 0400E7
	nop                            ; 044D45 || 	nop                            ; 0400E8 || 044D45 00          11847  OSWRCHCH:       BLKB    1,0       ; Channel of OSWRCH
	nop                            ; 044D46 || 	nop                            ; 0400E9 || 044D46 00          11850  OSWRCHFH:       BLKB    1,0       ; File handle for OSWRCHCHN
	nop                            ; 044D47 || 	nop                            ; 0400DA || 044D47 00          11851  KEYDOWN:        BLKB    1,0       ; Keydown flag
	nop                            ; 044D48 || 	nop                            ; 0400DB || 044D48 00          11852  KEYASCII:       BLKB    1,0       ; ASCII code of pressed key
	nop                            ; 044D49 || 	nop                            ; 0400DC || 044D49 00          11853  KEYCOUNT:       BLKB    1,0       ; Counts every time a key is pressed
	nop                            ; 044D4A || 	nop                            ; 0400DD || 044D4A 00 00 00    11854  R0:             BLKB    3,0       ; General purpose storage for 8/16 to 24 bit operations
	nop                            ; 044D4B || 	nop                            ; 0400DE
	nop                            ; 044D4C || 	nop                            ; 0400DF
	nop                            ; 044D4D || 	nop                            ; 0400E0 || 044D4D 00 00 00    11855  R1:             BLKB    3,0
	nop                            ; 044D4E || 	nop                            ; 0400E1
	nop                            ; 044D4F || 	nop                            ; 0400E2
	nop                            ; 044D50 || 	nop                            ; 0400E3 || 044D50 00 00 00 00 11871  			ALIGN	256
	nop                            ; 044D51 || 	nop                            ; 0400E4
	nop                            ; 044D52 || 	nop                            ; 0400E5
	nop                            ; 044D53 || 	nop                            ; 0400E6
	nop                            ; 044D54 || 	nop                            ; 0400E7
	nop                            ; 044D55 || 	nop                            ; 0400E8
	nop                            ; 044D56 || 	nop                            ; 0400E9
	nop                            ; 044D57 || 	nop                            ; 0400DA
	nop                            ; 044D58 || 	nop                            ; 0400DB
	nop                            ; 044D59 || 	nop                            ; 0400DC
	nop                            ; 044D5A || 	nop                            ; 0400DD
	nop                            ; 044D5B || 	nop                            ; 0400DE
	nop                            ; 044D5C || 	nop                            ; 0400DF
	nop                            ; 044D5D || 	nop                            ; 0400E0
	nop                            ; 044D5E || 	nop                            ; 0400E1
	nop                            ; 044D5F || 	nop                            ; 0400E2
	nop                            ; 044D60 || 	nop                            ; 0400E3
	nop                            ; 044D61 || 	nop                            ; 0400E4
	nop                            ; 044D62 || 	nop                            ; 0400E5
	nop                            ; 044D63 || 	nop                            ; 0400E6
	nop                            ; 044D64 || 	nop                            ; 0400E7
	nop                            ; 044D65 || 	nop                            ; 0400E8
	nop                            ; 044D66 || 	nop                            ; 0400E9
	nop                            ; 044D67 || 	nop                            ; 0400DA
	nop                            ; 044D68 || 	nop                            ; 0400DB
	nop                            ; 044D69 || 	nop                            ; 0400DC
	nop                            ; 044D6A || 	nop                            ; 0400DD
	nop                            ; 044D6B || 	nop                            ; 0400DE
	nop                            ; 044D6C || 	nop                            ; 0400DF
	nop                            ; 044D6D || 	nop                            ; 0400E0
	nop                            ; 044D6E || 	nop                            ; 0400E1
	nop                            ; 044D6F || 	nop                            ; 0400E2
	nop                            ; 044D70 || 	nop                            ; 0400E3
	nop                            ; 044D71 || 	nop                            ; 0400E4
	nop                            ; 044D72 || 	nop                            ; 0400E5
	nop                            ; 044D73 || 	nop                            ; 0400E6
	nop                            ; 044D74 || 	nop                            ; 0400E7
	nop                            ; 044D75 || 	nop                            ; 0400E8
	nop                            ; 044D76 || 	nop                            ; 0400E9
	nop                            ; 044D77 || 	nop                            ; 0400DA
	nop                            ; 044D78 || 	nop                            ; 0400DB
	nop                            ; 044D79 || 	nop                            ; 0400DC
	nop                            ; 044D7A || 	nop                            ; 0400DD
	nop                            ; 044D7B || 	nop                            ; 0400DE
	nop                            ; 044D7C || 	nop                            ; 0400DF
	nop                            ; 044D7D || 	nop                            ; 0400E0
	nop                            ; 044D7E || 	nop                            ; 0400E1
	nop                            ; 044D7F || 	nop                            ; 0400E2
	nop                            ; 044D80 || 	nop                            ; 0400E3
	nop                            ; 044D81 || 	nop                            ; 0400E4
	nop                            ; 044D82 || 	nop                            ; 0400E5
	nop                            ; 044D83 || 	nop                            ; 0400E6
	nop                            ; 044D84 || 	nop                            ; 0400E7
	nop                            ; 044D85 || 	nop                            ; 0400E8
	nop                            ; 044D86 || 	nop                            ; 0400E9
	nop                            ; 044D87 || 	nop                            ; 0400DA
	nop                            ; 044D88 || 	nop                            ; 0400DB
	nop                            ; 044D89 || 	nop                            ; 0400DC
	nop                            ; 044D8A || 	nop                            ; 0400DD
	nop                            ; 044D8B || 	nop                            ; 0400DE
	nop                            ; 044D8C || 	nop                            ; 0400DF
	nop                            ; 044D8D || 	nop                            ; 0400E0
	nop                            ; 044D8E || 	nop                            ; 0400E1
	nop                            ; 044D8F || 	nop                            ; 0400E2
	nop                            ; 044D90 || 	nop                            ; 0400E3
	nop                            ; 044D91 || 	nop                            ; 0400E4
	nop                            ; 044D92 || 	nop                            ; 0400E5
	nop                            ; 044D93 || 	nop                            ; 0400E6
	nop                            ; 044D94 || 	nop                            ; 0400E7
	nop                            ; 044D95 || 	nop                            ; 0400E8
	nop                            ; 044D96 || 	nop                            ; 0400E9
	nop                            ; 044D97 || 	nop                            ; 0400DA
	nop                            ; 044D98 || 	nop                            ; 0400DB
	nop                            ; 044D99 || 	nop                            ; 0400DC
	nop                            ; 044D9A || 	nop                            ; 0400DD
	nop                            ; 044D9B || 	nop                            ; 0400DE
	nop                            ; 044D9C || 	nop                            ; 0400DF
	nop                            ; 044D9D || 	nop                            ; 0400E0
	nop                            ; 044D9E || 	nop                            ; 0400E1
	nop                            ; 044D9F || 	nop                            ; 0400E2
	nop                            ; 044DA0 || 	nop                            ; 0400E3
	nop                            ; 044DA1 || 	nop                            ; 0400E4
	nop                            ; 044DA2 || 	nop                            ; 0400E5
	nop                            ; 044DA3 || 	nop                            ; 0400E6
	nop                            ; 044DA4 || 	nop                            ; 0400E7
	nop                            ; 044DA5 || 	nop                            ; 0400E8
	nop                            ; 044DA6 || 	nop                            ; 0400E9
	nop                            ; 044DA7 || 	nop                            ; 0400DA
	nop                            ; 044DA8 || 	nop                            ; 0400DB
	nop                            ; 044DA9 || 	nop                            ; 0400DC
	nop                            ; 044DAA || 	nop                            ; 0400DD
	nop                            ; 044DAB || 	nop                            ; 0400DE
	nop                            ; 044DAC || 	nop                            ; 0400DF
	nop                            ; 044DAD || 	nop                            ; 0400E0
	nop                            ; 044DAE || 	nop                            ; 0400E1
	nop                            ; 044DAF || 	nop                            ; 0400E2
	nop                            ; 044DB0 || 	nop                            ; 0400E3
	nop                            ; 044DB1 || 	nop                            ; 0400E4
	nop                            ; 044DB2 || 	nop                            ; 0400E5
	nop                            ; 044DB3 || 	nop                            ; 0400E6
	nop                            ; 044DB4 || 	nop                            ; 0400E7
	nop                            ; 044DB5 || 	nop                            ; 0400E8
	nop                            ; 044DB6 || 	nop                            ; 0400E9
	nop                            ; 044DB7 || 	nop                            ; 0400DA
	nop                            ; 044DB8 || 	nop                            ; 0400DB
	nop                            ; 044DB9 || 	nop                            ; 0400DC
	nop                            ; 044DBA || 	nop                            ; 0400DD
	nop                            ; 044DBB || 	nop                            ; 0400DE
	nop                            ; 044DBC || 	nop                            ; 0400DF
	nop                            ; 044DBD || 	nop                            ; 0400E0
	nop                            ; 044DBE || 	nop                            ; 0400E1
	nop                            ; 044DBF || 	nop                            ; 0400E2
	nop                            ; 044DC0 || 	nop                            ; 0400E3
	nop                            ; 044DC1 || 	nop                            ; 0400E4
	nop                            ; 044DC2 || 	nop                            ; 0400E5
	nop                            ; 044DC3 || 	nop                            ; 0400E6
	nop                            ; 044DC4 || 	nop                            ; 0400E7
	nop                            ; 044DC5 || 	nop                            ; 0400E8
	nop                            ; 044DC6 || 	nop                            ; 0400E9
	nop                            ; 044DC7 || 	nop                            ; 0400DA
	nop                            ; 044DC8 || 	nop                            ; 0400DB
	nop                            ; 044DC9 || 	nop                            ; 0400DC
	nop                            ; 044DCA || 	nop                            ; 0400DD
	nop                            ; 044DCB || 	nop                            ; 0400DE
	nop                            ; 044DCC || 	nop                            ; 0400DF
	nop                            ; 044DCD || 	nop                            ; 0400E0
	nop                            ; 044DCE || 	nop                            ; 0400E1
	nop                            ; 044DCF || 	nop                            ; 0400E2
	nop                            ; 044DD0 || 	nop                            ; 0400E3
	nop                            ; 044DD1 || 	nop                            ; 0400E4
	nop                            ; 044DD2 || 	nop                            ; 0400E5
	nop                            ; 044DD3 || 	nop                            ; 0400E6
	nop                            ; 044DD4 || 	nop                            ; 0400E7
	nop                            ; 044DD5 || 	nop                            ; 0400E8
	nop                            ; 044DD6 || 	nop                            ; 0400E9
	nop                            ; 044DD7 || 	nop                            ; 0400DA
	nop                            ; 044DD8 || 	nop                            ; 0400DB
	nop                            ; 044DD9 || 	nop                            ; 0400DC
	nop                            ; 044DDA || 	nop                            ; 0400DD
	nop                            ; 044DDB || 	nop                            ; 0400DE
	nop                            ; 044DDC || 	nop                            ; 0400DF
	nop                            ; 044DDD || 	nop                            ; 0400E0
	nop                            ; 044DDE || 	nop                            ; 0400E1
	nop                            ; 044DDF || 	nop                            ; 0400E2
	nop                            ; 044DE0 || 	nop                            ; 0400E3
	nop                            ; 044DE1 || 	nop                            ; 0400E4
	nop                            ; 044DE2 || 	nop                            ; 0400E5
	nop                            ; 044DE3 || 	nop                            ; 0400E6
	nop                            ; 044DE4 || 	nop                            ; 0400E7
	nop                            ; 044DE5 || 	nop                            ; 0400E8
	nop                            ; 044DE6 || 	nop                            ; 0400E9
	nop                            ; 044DE7 || 	nop                            ; 0400DA
	nop                            ; 044DE8 || 	nop                            ; 0400DB
	nop                            ; 044DE9 || 	nop                            ; 0400DC
	nop                            ; 044DEA || 	nop                            ; 0400DD
	nop                            ; 044DEB || 	nop                            ; 0400DE
	nop                            ; 044DEC || 	nop                            ; 0400DF
	nop                            ; 044DED || 	nop                            ; 0400E0
	nop                            ; 044DEE || 	nop                            ; 0400E1
	nop                            ; 044DEF || 	nop                            ; 0400E2
	nop                            ; 044DF0 || 	nop                            ; 0400E3
	nop                            ; 044DF1 || 	nop                            ; 0400E4
	nop                            ; 044DF2 || 	nop                            ; 0400E5
	nop                            ; 044DF3 || 	nop                            ; 0400E6
	nop                            ; 044DF4 || 	nop                            ; 0400E7
	nop                            ; 044DF5 || 	nop                            ; 0400E8
	nop                            ; 044DF6 || 	nop                            ; 0400E9
	nop                            ; 044DF7
	nop                            ; 044DF8
	nop                            ; 044DF9
	nop                            ; 044DFA
	nop                            ; 044DFB
	nop                            ; 044DFC
	nop                            ; 044DFD
	nop                            ; 044DFE
	nop                            ; 044DFF
                                
