	jp	$040045                     ; 040000                                         || 040000 C3 45 00 04 0480  			JP	_start				; Jump to start
	ld	h,d                         ; 040004                                         || 040004 62 62 63 62 0484  _exec_name:		DB	"bbcbasic24ez.bin", 0		; The executable name, only used in argv
	ld	h,d                         ; 040005
	ld	h,e                         ; 040006
	ld	h,d                         ; 040007
	ld	h,c                         ; 040008
	ld	(hl),e                      ; 040009
	ld	l,c                         ; 04000A
	ld	h,e                         ; 04000B
	ld	($7a6534),a                 ; 04000C
	ld	l,$62                       ; 040010
	ld	l,c                         ; 040012
	ld	l,(hl)                      ; 040013
	nop                            ; 040014
	nop                            ; 040015                                         || 040015 00 00 00 00 0486  			ALIGN	64
	nop                            ; 040016
	nop                            ; 040017 || 	nop                            ; 0400DA
	nop                            ; 040018 || 	nop                            ; 0400DB
	nop                            ; 040019 || 	nop                            ; 0400DC
	nop                            ; 04001A || 	nop                            ; 0400DD
	nop                            ; 04001B || 	nop                            ; 0400DE
	nop                            ; 04001C || 	nop                            ; 0400DF
	nop                            ; 04001D || 	nop                            ; 0400E0
	nop                            ; 04001E || 	nop                            ; 0400E1
	nop                            ; 04001F || 	nop                            ; 0400E2
	nop                            ; 040020 || 	nop                            ; 0400E3
	nop                            ; 040021 || 	nop                            ; 0400E4
	nop                            ; 040022 || 	nop                            ; 0400E5
	nop                            ; 040023 || 	nop                            ; 0400E6
	nop                            ; 040024 || 	nop                            ; 0400E7
	nop                            ; 040025 || 	nop                            ; 0400E8
	nop                            ; 040026 || 	nop                            ; 0400E9
	nop                            ; 040027 || 	nop                            ; 0400DA
	nop                            ; 040028 || 	nop                            ; 0400DB
	nop                            ; 040029 || 	nop                            ; 0400DC
	nop                            ; 04002A || 	nop                            ; 0400DD
	nop                            ; 04002B || 	nop                            ; 0400DE
	nop                            ; 04002C || 	nop                            ; 0400DF
	nop                            ; 04002D || 	nop                            ; 0400E0
	nop                            ; 04002E || 	nop                            ; 0400E1
	nop                            ; 04002F || 	nop                            ; 0400E2
	nop                            ; 040030 || 	nop                            ; 0400E3
	nop                            ; 040031 || 	nop                            ; 0400E4
	nop                            ; 040032 || 	nop                            ; 0400E5
	nop                            ; 040033 || 	nop                            ; 0400E6
	nop                            ; 040034 || 	nop                            ; 0400E7
	nop                            ; 040035 || 	nop                            ; 0400E8
	nop                            ; 040036 || 	nop                            ; 0400E9
	nop                            ; 040037 || 	nop                            ; 0400DA
	nop                            ; 040038 || 	nop                            ; 0400DB
	nop                            ; 040039 || 	nop                            ; 0400DC
	nop                            ; 04003A || 	nop                            ; 0400DD
	nop                            ; 04003B || 	nop                            ; 0400DE
	nop                            ; 04003C || 	nop                            ; 0400DF
	nop                            ; 04003D || 	nop                            ; 0400E0
	nop                            ; 04003E || 	nop                            ; 0400E1
	nop                            ; 04003F || 	nop                            ; 0400E2
	ld	c,l                         ; 040040                                         || 040040 4D 4F 53    0488  			DB	"MOS"				; Flag for MOS - to confirm this is a valid MOS command
	ld	c,a                         ; 040041
	ld	d,e                         ; 040042
	nop                            ; 040043 || 	nop                            ; 0400E6 || 040043 00          0489  			DB	00h				; MOS header version 0
	ld	bc,$d5c5f5                  ; 040044                                         || 040044 01          0490  			DB	01h				; Flag for run mode (0: Z80, 1: ADL)
	push	ix                        ; 040048                                         || 040048 DD E5       0497  			PUSH		IX
	push	iy                        ; 04004A                                         || 04004A FD E5       0498  			PUSH		IY
	ld	($0400d7),sp                ; 04004C || 	ld	($0400d7),sp                ; 04004C || 04004C ED 73 D7 00 0500  			LD		(_sps), SP 		; Preserve the 24-bit stack pointer (SPS)
	ld	ix,$0400da                  ; 040051 || 	ld	ix,$0400da                  ; 040051 || 040051 DD 21 DA 00 0502  			LD		IX, _argv_ptrs		; The argv array pointer address
	push	ix                        ; 040056 || 	push	ix                        ; 040056 || 040056 DD E5       0503  			PUSH		IX
	call	$040088                   ; 040058 || 	call	$040088                   ; 040058 || 040058 CD 88 00 04 0504  			CALL		_parse_params		; Parse the parameters
	pop	ix                         ; 04005C || 	pop	ix                         ; 04005C || 04005C DD E1       0505  			POP		IX			; IX: argv
	ld	b,$00                       ; 04005E || 	ld	b,$00                       ; 04005E || 04005E 06 00       0506  			LD		B, 0			;  C: argc
	call	$040075                   ; 040060 || 	call	$040075                   ; 040060 || 040060 CD 75 00 04 0507  			CALL		_clear_ram
	jp	$042ff9                     ; 040064 || 	jp	$042fb6                     ; 040064 || 040064 C3 F9 2F 04 0508  			JP		_main			; Start user code
	ld	sp,($0400d7)                ; 040068 || 	ld	sp,($0400d7)                ; 040068 || 040068 ED 7B D7 00 0512  _end:			LD		SP, (_sps)		; Restore the stack pointer
	pop	iy                         ; 04006D || 	pop	iy                         ; 04006D || 04006D FD E1       0514  			POP		IY			; Restore the registers
	pop	ix                         ; 04006F || 	pop	ix                         ; 04006F || 04006F DD E1       0515  			POP		IX
	pop	de                         ; 040071 || 	pop	de                         ; 040071 || 040071 D1          0516  			POP		DE
	pop	bc                         ; 040072 || 	pop	bc                         ; 040072 || 040072 C1          0517  			POP		BC
	pop	af                         ; 040073 || 	pop	af                         ; 040073 || 040073 F1          0518  			POP		AF
	ret                            ; 040074 || 	ret                            ; 040074 || 040074 C9          0519  			RET					; Return to MOS
	push	bc                        ; 040075 || 	push	bc                        ; 040075 || 040075 C5          0523  _clear_ram:		PUSH		BC
	ld	hl,$044a00                  ; 040076 || 	ld	hl,$044a00                  ; 040076 || 040076 21 00 4A 04 0524  			LD		HL, RAM_START
	ld	de,$044a01                  ; 04007A || 	ld	de,$044a01                  ; 04007A || 04007A 11 01 4A 04 0525  			LD		DE, RAM_START + 1
	ld	bc,$00034f                  ; 04007E || 	ld	bc,$00034f                  ; 04007E || 04007E 01 4F 03 00 0526  			LD		BC, RAM_END - RAM_START - 1
	xor	a                          ; 040082 || 	xor	a                          ; 040082 || 040082 AF          0527  			XOR		A
	ld	(hl),a                      ; 040083 || 	ld	(hl),a                      ; 040083 || 040083 77          0528  			LD		(HL), A
	ldir                           ; 040084 || 	ldir                           ; 040084 || 040084 ED B0       0529  			LDIR
	pop	bc                         ; 040086 || 	pop	bc                         ; 040086 || 040086 C1          0530  			POP		BC
	ret                            ; 040087 || 	ret                            ; 040087 || 040087 C9          0531  			RET
	ld	bc,$040004                  ; 040088 || 	ld	bc,$040004                  ; 040088 || 040088 01 04 00 04 0540  _parse_params:		LD	BC, _exec_name
	ld	(ix),bc                     ; 04008C || 	ld	(ix),bc                     ; 04008C || 04008C DD 0F 00    0541  			LD	(IX+0), BC		; ARGV[0] = the executable name
	inc	ix                         ; 04008F || 	inc	ix                         ; 04008F || 04008F DD 23       0542  			INC	IX
	inc	ix                         ; 040091 || 	inc	ix                         ; 040091 || 040091 DD 23       0543  			INC	IX
	inc	ix                         ; 040093 || 	inc	ix                         ; 040093 || 040093 DD 23       0544  			INC	IX
	call	$0400d0                   ; 040095 || 	call	$0400d0                   ; 040095 || 040095 CD D0 00 04 0545  			CALL	_skip_spaces		; Skip HL past any leading spaces
	ld	bc,$000001                  ; 040099 || 	ld	bc,$000001                  ; 040099 || 040099 01 01 00 00 0547  			LD	BC, 1			; C: ARGC = 1 - also clears out top 16 bits of BCU
	ld	b,$0f                       ; 04009D || 	ld	b,$0f                       ; 04009D || 04009D 06 0F       0548  			LD	B, argv_ptrs_max - 1	; B: Maximum number of argv_ptrs
	push	bc                        ; 04009F || 	push	bc                        ; 04009F || 04009F C5          0551  			PUSH	BC			; Stack ARGC
	push	hl                        ; 0400A0 || 	push	hl                        ; 0400A0 || 0400A0 E5          0552  			PUSH	HL			; Stack start address of token
	call	$0400c1                   ; 0400A1 || 	call	$0400c1                   ; 0400A1 || 0400A1 CD C1 00 04 0553  			CALL	_get_token		; Get the next token
	ld	a,c                         ; 0400A5 || 	ld	a,c                         ; 0400A5 || 0400A5 79          0554  			LD	A, C			; A: Length of the token in characters
	pop	de                         ; 0400A6 || 	pop	de                         ; 0400A6 || 0400A6 D1          0555  			POP	DE			; Start address of token (was in HL)
	pop	bc                         ; 0400A7 || 	pop	bc                         ; 0400A7 || 0400A7 C1          0556  			POP	BC			; ARGC
	or	a                           ; 0400A8 || 	or	a                           ; 0400A8 || 0400A8 B7          0557  			OR	A			; Check for A=0 (no token found) OR at end of string
	ret	z                          ; 0400A9 || 	ret	z                          ; 0400A9 || 0400A9 C8          0558  			RET	Z
	ld	(ix),de                     ; 0400AA || 	ld	(ix),de                     ; 0400AA || 0400AA DD 1F 00    0560  			LD	(IX+0), DE		; Store the pointer to the token
	push	hl                        ; 0400AD || 	push	hl                        ; 0400AD || 0400AD E5          0561  			PUSH	HL			; DE=HL
	pop	de                         ; 0400AE || 	pop	de                         ; 0400AE || 0400AE D1          0562  			POP	DE
	call	$0400d0                   ; 0400AF || 	call	$0400d0                   ; 0400AF || 0400AF CD D0 00 04 0563  			CALL	_skip_spaces		; And skip HL past any spaces onto the next character
	xor	a                          ; 0400B3 || 	xor	a                          ; 0400B3 || 0400B3 AF          0564  			XOR	A
	ld	(de),a                      ; 0400B4 || 	ld	(de),a                      ; 0400B4 || 0400B4 12          0565  			LD	(DE), A			; Zero-terminate the token
	inc	ix                         ; 0400B5 || 	inc	ix                         ; 0400B5 || 0400B5 DD 23       0566  			INC	IX
	inc	ix                         ; 0400B7 || 	inc	ix                         ; 0400B7 || 0400B7 DD 23       0567  			INC	IX
	inc	ix                         ; 0400B9 || 	inc	ix                         ; 0400B9 || 0400B9 DD 23       0568  			INC	IX			; Advance to next pointer position
	inc	c                          ; 0400BB || 	inc	c                          ; 0400BB || 0400BB 0C          0569  			INC	C			; Increment ARGC
	ld	a,c                         ; 0400BC || 	ld	a,c                         ; 0400BC || 0400BC 79          0570  			LD	A, C			; Check for C >= A
	cp	b                           ; 0400BD || 	cp	b                           ; 0400BD || 0400BD B8          0571  			CP	B
	jr	c,$-$1f                     ; 0400BE || 	jr	c,$-$1f                     ; 0400BE || 0400BE 38 DF       0572  			JR	C, _parse_params_1	; And loop
	ret                            ; 0400C0 || 	ret                            ; 0400C0 || 0400C0 C9          0573  			RET
	ld	c,$00                       ; 0400C1 || 	ld	c,$00                       ; 0400C1 || 0400C1 0E 00       0582  _get_token:		LD	C, 0			; Initialise length
	ld	a,(hl)                      ; 0400C3 || 	ld	a,(hl)                      ; 0400C3 || 0400C3 7E          0583  @@:			LD	A, (HL)			; Get the character from the parameter string
	or	a                           ; 0400C4 || 	or	a                           ; 0400C4 || 0400C4 B7          0584  			OR	A			; Exit if 0 (end of parameter string in MOS)
	ret	z                          ; 0400C5 || 	ret	z                          ; 0400C5 || 0400C5 C8          0585  			RET 	Z
	cp	$0d                         ; 0400C6 || 	cp	$0d                         ; 0400C6 || 0400C6 FE 0D       0586  			CP	13			; Exit if CR (end of parameter string in BBC BASIC)
	ret	z                          ; 0400C8 || 	ret	z                          ; 0400C8 || 0400C8 C8          0587  			RET	Z
	cp	$20                         ; 0400C9 || 	cp	$20                         ; 0400C9 || 0400C9 FE 20       0588  			CP	' '			; Exit if space (end of token)
	ret	z                          ; 0400CB || 	ret	z                          ; 0400CB || 0400CB C8          0589  			RET	Z
	inc	hl                         ; 0400CC || 	inc	hl                         ; 0400CC || 0400CC 23          0590  			INC	HL			; Advance to next character
	inc	c                          ; 0400CD || 	inc	c                          ; 0400CD || 0400CD 0C          0591  			INC 	C			; Increment length
	jr	$-$0b                       ; 0400CE || 	jr	$-$0b                       ; 0400CE || 0400CE 18 F3       0592  			JR	@B
	ld	a,(hl)                      ; 0400D0 || 	ld	a,(hl)                      ; 0400D0 || 0400D0 7E          0601  _skip_spaces:		LD	A, (HL)			; Get the character from the parameter string
	cp	$20                         ; 0400D1 || 	cp	$20                         ; 0400D1 || 0400D1 FE 20       0602  			CP	' '			; Exit if not space
	ret	nz                         ; 0400D3 || 	ret	nz                         ; 0400D3 || 0400D3 C0          0603  			RET	NZ
	inc	hl                         ; 0400D4 || 	inc	hl                         ; 0400D4 || 0400D4 23          0604  			INC	HL			; Advance to next character
	jr	$-$05                       ; 0400D5 || 	jr	$-$05                       ; 0400D5 || 0400D5 18 F9       0605  			JR	_skip_spaces		; Increment length
	nop                            ; 0400D7                                         || 0400D7             0609  _sps:			DS	3			; Storage for the stack pointer
	nop                            ; 0400D8
	nop                            ; 0400D9
	nop                            ; 0400DA || 	nop                            ; 0400DA || 0400DA 00 00 00 00 0610  _argv_ptrs:		BLKP	argv_ptrs_max, 0	; Storage for the argv array pointers
	nop                            ; 0400DB || 	nop                            ; 0400DB
	nop                            ; 0400DC || 	nop                            ; 0400DC
	nop                            ; 0400DD || 	nop                            ; 0400DD
	nop                            ; 0400DE || 	nop                            ; 0400DE
	nop                            ; 0400DF || 	nop                            ; 0400DF
	nop                            ; 0400E0 || 	nop                            ; 0400E0
	nop                            ; 0400E1 || 	nop                            ; 0400DA
	nop                            ; 0400E2 || 	nop                            ; 0400DB
	nop                            ; 0400E3 || 	nop                            ; 0400DC
	nop                            ; 0400E4 || 	nop                            ; 0400DD
	nop                            ; 0400E5 || 	nop                            ; 0400DE
	nop                            ; 0400E6 || 	nop                            ; 0400DF
	nop                            ; 0400E7 || 	nop                            ; 0400E0
	nop                            ; 0400E8 || 	nop                            ; 0400E1
	nop                            ; 0400E9 || 	nop                            ; 0400E2
	nop                            ; 0400EA || 	nop                            ; 0400E3
	nop                            ; 0400EB || 	nop                            ; 0400E4
	nop                            ; 0400EC || 	nop                            ; 0400E5
	nop                            ; 0400ED || 	nop                            ; 0400E6
	nop                            ; 0400EE || 	nop                            ; 0400E7
	nop                            ; 0400EF || 	nop                            ; 0400E8
	nop                            ; 0400F0 || 	nop                            ; 0400E9
	nop                            ; 0400F1 || 	nop                            ; 0400DA
	nop                            ; 0400F2 || 	nop                            ; 0400DB
	nop                            ; 0400F3 || 	nop                            ; 0400DC
	nop                            ; 0400F4 || 	nop                            ; 0400DD
	nop                            ; 0400F5 || 	nop                            ; 0400DE
	nop                            ; 0400F6 || 	nop                            ; 0400DF
	nop                            ; 0400F7 || 	nop                            ; 0400E0
	nop                            ; 0400F8 || 	nop                            ; 0400E1
	nop                            ; 0400F9 || 	nop                            ; 0400E2
	nop                            ; 0400FA || 	nop                            ; 0400E3
	nop                            ; 0400FB || 	nop                            ; 0400E4
	nop                            ; 0400FC || 	nop                            ; 0400E5
	nop                            ; 0400FD || 	nop                            ; 0400E6
	nop                            ; 0400FE || 	nop                            ; 0400E7
	nop                            ; 0400FF || 	nop                            ; 0400E8
	nop                            ; 040100 || 	nop                            ; 0400E9
	nop                            ; 040101
	nop                            ; 040102
	nop                            ; 040103
	nop                            ; 040104
	nop                            ; 040105
	nop                            ; 040106
	nop                            ; 040107
	nop                            ; 040108
	nop                            ; 040109
	xor	a                          ; 04010A                                         || 04010A AF          0636  			XOR     A
	call	$0437d8                   ; 04010B                                         || 04010B CD D8 37 04 0637  			CALL    EXTERR
	ld	d,e                         ; 04010F                                         || 04010F 53 6F 72 72 0638  			DEFB    "Sorry"
	ld	l,a                         ; 040110
	ld	(hl),d                      ; 040111
	ld	(hl),d                      ; 040112
	ld	a,c                         ; 040113
	nop                            ; 040114                                         || 040114 00          0639  			DEFB    0
	or	$08                         ; 040115                                         || 040115 F6 08 04    0745  FUNTBL:			DW24	DECODE			; Line number
	inc	b                          ; 040117
	and	h                          ; 040118                                         || 040118 A4 05 04    0746  			DW24	OPENIN			; OPENIN
	dec	b                          ; 040119
	inc	b                          ; 04011A
	add	a,$05                      ; 04011B                                         || 04011B C6 05 04    0747  			DW24	PTR_EV			; PTR
	inc	b                          ; 04011D
	ld	h,b                         ; 04011E                                         || 04011E 60 05 04    0748  			DW24	PAGEV			; PAGE
	dec	b                          ; 04011F
	inc	b                          ; 040120
	ret	nc                         ; 040121                                         || 040121 D0 05 04    0749  			DW24	TIMEV			; TIME
	dec	b                          ; 040122
	inc	b                          ; 040123
	ld	c,h                         ; 040124                                         || 040124 4C 05 04    0750  			DW24	LOMEMV			; LOMEM
	dec	b                          ; 040125
	inc	b                          ; 040126
	ld	d,(hl)                      ; 040127                                         || 040127 56 05 04    0751  			DW24	HIMEMV			; HIMEM
	dec	b                          ; 040128
	inc	b                          ; 040129
	inc	h                          ; 04012A                                         || 04012A 24 06 04    0752  			DW24	ABSV			; ABS
	ld	b,$04                       ; 04012B
	ld	h,b                         ; 04012D                                         || 04012D 60 06 04    0753  			DW24	ACS			; ACS
	ld	b,$04                       ; 04012E
	ld	a,(bc)                      ; 040130                                         || 040130 0A 01 04    0754  			DW24	ADVAL			; ADVAL
	ld	bc,$053504                  ; 040131
	inc	b                          ; 040135
	ld	e,b                         ; 040136                                         || 040136 58 06 04    0756  			DW24	ASN			; ASN
	ld	b,$04                       ; 040137
	ld	e,h                         ; 040139                                         || 040139 5C 06 04    0757  			DW24	ATN			; ATN
	ld	b,$04                       ; 04013A
	cp	$04                         ; 04013C                                         || 04013C FE 04 04    0758  			DW24	BGET			; BGET
	inc	b                          ; 04013E || 	inc	b                          ; 040133
	ld	b,h                         ; 04013F                                         || 04013F 44 06 04    0759  			DW24	COS			; COS
	ld	b,$04                       ; 040140 || 	ld	b,$04                       ; 040135
	adc	a,e                        ; 040142                                         || 040142 8B 05 04    0760  			DW24	COUNTV			; COUNT
	dec	b                          ; 040143 || 	dec	b                          ; 040138
	inc	b                          ; 040144 || 	inc	b                          ; 040139
	inc	l                          ; 040145                                         || 040145 2C 06 04    0761  			DW24	DEG			; DEG
	ld	b,$04                       ; 040146 || 	ld	b,$04                       ; 04013B
	ld	a,a                         ; 040148                                         || 040148 7F 05 04    0762  			DW24	ERLV			; ERL
	dec	b                          ; 040149 || 	dec	b                          ; 04013E
	inc	b                          ; 04014A || 	inc	b                          ; 04013F
	add	a,l                        ; 04014B                                         || 04014B 85 05 04    0763  			DW24	ERRV			; ERR
	dec	b                          ; 04014C || 	dec	b                          ; 040141
	inc	b                          ; 04014D || 	inc	b                          ; 040142
	adc	a,c                        ; 04014E                                         || 04014E 89 06 04    0764  			DW24	EVAL_			; EVAL
	ld	b,$04                       ; 04014F || 	ld	b,$04                       ; 040144
	ld	c,h                         ; 040151                                         || 040151 4C 06 04    0765  			DW24	EXP			; EXP
	ld	b,$04                       ; 040152
	cp	h                           ; 040154                                         || 040154 BC 05 04    0766  			DW24	EXT			; EXT
	dec	b                          ; 040155
	inc	b                          ; 040156
	and	e                          ; 040157                                         || 040157 A3 09 04    0767  			DW24	ZERO			; FALSE
	add	hl,bc                      ; 040158
	inc	b                          ; 040159
	sub	d                          ; 04015A                                         || 04015A 92 10 04    0768  			DW24	FN_EX			; FN
	djnz	$+$06                     ; 04015B
	inc	e                          ; 04015D                                         || 04015D 1C 05 04    0769  			DW24	GET			; GET
	dec	b                          ; 04015E
	inc	b                          ; 04015F
	dec	bc                         ; 040160                                         || 040160 0B 05 04    0770  			DW24	INKEY			; INKEY
	dec	b                          ; 040161
	inc	b                          ; 040162
	dec	sp                         ; 040163                                         || 040163 3B 07 04    0771  			DW24	INSTR			; INSTR(
	rlca                           ; 040164
	inc	b                          ; 040165
	jr	c,$+$08                     ; 040166                                         || 040166 38 06 04    0772  			DW24	INT_			; INT
	inc	b                          ; 040168
	ld	b,l                         ; 040169                                         || 040169 45 05 04    0773  			DW24	LEN			; LEN
	dec	b                          ; 04016A
	inc	b                          ; 04016B
	ld	d,b                         ; 04016C                                         || 04016C 50 06 04    0774  			DW24	LN			; LN
	ld	b,$04                       ; 04016D
	ld	d,h                         ; 04016F                                         || 04016F 54 06 04    0775  			DW24	LOG			; LOG
	ld	b,$04                       ; 040170
	jr	z,$+$08                     ; 040172                                         || 040172 28 06 04    0776  			DW24	NOTK			; NOT
	inc	b                          ; 040174
	and	b                          ; 040175                                         || 040175 A0 05 04    0777  			DW24	OPENUP			; OPENUP
	dec	b                          ; 040176
	inc	b                          ; 040177
	sbc	a,l                        ; 040178                                         || 040178 9D 05 04    0778  			DW24	OPENOT			; OPENOUT
	dec	b                          ; 040179
	inc	b                          ; 04017A
	jr	nz,$+$08                    ; 04017B                                         || 04017B 20 06 04    0779  			DW24	PI			; PI
	inc	b                          ; 04017D
	ret	nc                         ; 04017E                                         || 04017E D0 44 04    0780  			DW24	POINT			; POINT(
	ld	b,h                         ; 04017F
	inc	b                          ; 040180
	trap                           ; 040181                                         || 040181 DD 04 04    0781  			DW24	POS			; POS
	inc	b                          ; 040183
	jr	nc,$+$08                    ; 040184                                         || 040184 30 06 04    0782  			DW24	RAD			; RAD
	inc	b                          ; 040186
	cp	l                           ; 040187                                         || 040187 BD 06 04    0783  			DW24	RND			; RND
	ld	b,$04                       ; 040188
	inc	(hl)                       ; 04018A                                         || 04018A 34 06 04    0784  			DW24	SGN			; SGN
	ld	b,$04                       ; 04018B
	ld	c,b                         ; 04018D                                         || 04018D 48 06 04    0785  			DW24	SIN			; SIN
	ld	b,$04                       ; 04018E
	inc	a                          ; 040190                                         || 040190 3C 06 04    0786  			DW24	SQR			; SQR
	ld	b,$04                       ; 040191
	ld.sis	b,$04                   ; 040193                                         || 040193 40 06 04    0787  			DW24	TAN			; TAN
	ld	l,d                         ; 040196                                         || 040196 6A 05 04    0788  			DW24	TOPV			; TO(P)
	dec	b                          ; 040197
	inc	b                          ; 040198
	dec	d                          ; 040199                                         || 040199 15 06 04    0789  			DW24	TRUE			; TRUE
	ld	b,$04                       ; 04019A
	ld	e,a                         ; 04019C                                         || 04019C 5F 15 04    0790  			DW24	USR			; USR
	dec	d                          ; 04019D
	inc	b                          ; 04019E
	ld	a,d                         ; 04019F                                         || 04019F 7A 06 04    0791  			DW24	VAL			; VAL
	ld	b,$04                       ; 0401A0
	and	$04                        ; 0401A2                                         || 0401A2 E6 04 04    0792  			DW24	VPOS			; VPOS
	inc	b                          ; 0401A4 || 	inc	b                          ; 040199
	rst	$08                        ; 0401A5                                         || 0401A5 CF 07 04    0793  			DW24	CHRS			; CHRS
	rlca                           ; 0401A6 || 	rlca                           ; 04019B
	inc	b                          ; 0401A7 || 	inc	b                          ; 04019C
	rst	$10                        ; 0401A8 || 	rst	$00                        ; 04019D || 0401A8 D7 07 04    0794  			DW24	GETS			; GETS
	rlca                           ; 0401A9 || 	rlca                           ; 04019E
	inc	b                          ; 0401AA || 	inc	b                          ; 04019F
	ret	pe                         ; 0401AB                                         || 0401AB E8 07 04    0795  			DW24	INKEYS			; INKEYS
	rlca                           ; 0401AC || 	rlca                           ; 0401A1
	inc	b                          ; 0401AD || 	inc	b                          ; 0401A2
	ld	l,l                         ; 0401AE                                         || 0401AE 6D 08 04    0796  			DW24	LEFTS			; LEFTS(
	ex	af,af'                      ; 0401AF || 	ex	af,af'                      ; 0401A4
	inc	b                          ; 0401B0 || 	inc	b                          ; 0401A5
	dec	(hl)                       ; 0401B1                                         || 0401B1 35 08 04    0797  			DW24	MIDS			; MIDS(
	ex	af,af'                      ; 0401B2 || 	ex	af,af'                      ; 0401A7
	inc	b                          ; 0401B3
	adc	a,l                        ; 0401B4                                         || 0401B4 8D 08 04    0798  			DW24	RIGHTS			; RIGHTS(
	ex	af,af'                      ; 0401B5
	inc	b                          ; 0401B6
	ld	e,d                         ; 0401B7                                         || 0401B7 5A 09 04    0799  			DW24	STRS			; STR$
	add	hl,bc                      ; 0401B8
	inc	b                          ; 0401B9
	xor	(hl)                       ; 0401BA                                         || 0401BA AE 08 04    0800  			DW24	STRING_			; STRINGS(
	ex	af,af'                      ; 0401BB
	inc	b                          ; 0401BC
	xor	$04                        ; 0401BD                                         || 0401BD EE 04 04    0801  			DW24	EOF			; EOF
	inc	b                          ; 0401BF
	nop                            ; 0401C0                                         || 0401C0 00 06 04    0813  SOPTBL:			DW24	SLE			; <= (STRING)
	ld	b,$04                       ; 0401C1
	add	hl,bc                      ; 0401C3                                         || 0401C3 09 06 04    0814  			DW24	SNE			; <>
	ld	b,$04                       ; 0401C4
	ld	sp,hl                       ; 0401C6                                         || 0401C6 F9 05 04    0815  			DW24	SGE			; >=
	dec	b                          ; 0401C7 || 	dec	b                          ; 0401BC
	inc	b                          ; 0401C8 || 	inc	b                          ; 0401BD
	jp	pe,$100405                  ; 0401C9                                         || 0401C9 EA 05 04    0816  			DW24	SLT			; <
	ld	b,$04                       ; 0401CD || 	ld	b,$04                       ; 0401C2
	pop	af                         ; 0401CF                                         || 0401CF F1 05 04    0818  			DW24	SGT			; >
	dec	b                          ; 0401D0 || 	dec	b                          ; 0401C5
	inc	b                          ; 0401D1 || 	inc	b                          ; 0401C6
	call	$0401eb                   ; 0401D2 || 	call	$0401e0                   ; 0401C7 || 0401D2 CD EB 01 04 0839  EXPR:			CALL    EXPR1			; Get first operator by calling Level 6
	cp	$82                         ; 0401D6 || 	cp	$82                         ; 0401CB || 0401D6 FE 82       0840  EXPR0A:			CP      EORK            	; Is operator EOR?
	jr	z,$+$05                     ; 0401D8 || 	jr	z,$+$05                     ; 0401CD || 0401D8 28 03       0841  			JR      Z,EXPR0B		; Yes, so skip to next bit
	cp	$84                         ; 0401DA || 	cp	$84                         ; 0401CF || 0401DA FE 84       0842  			CP      ORK			; Is operator OR
	ret	nz                         ; 0401DC || 	ret	nz                         ; 0401D1 || 0401DC C0          0843  			RET     NZ			; No, so return
	call	$040a51                   ; 0401DD || 	call	$040a3e                   ; 0401D2 || 0401DD CD 51 0A 04 0845  EXPR0B:			CALL    SAVE_EV            	; Save first operand
	call	$0401eb                   ; 0401E1 || 	call	$0401e0                   ; 0401D6 || 0401E1 CD EB 01 04 0846  			CALL    EXPR1           	; Get second operand
	call	$040a60                   ; 0401E5 || 	call	$040a4d                   ; 0401DA || 0401E5 CD 60 0A 04 0847  			CALL    DOIT            	; Do the operation
	jr	$-$13                       ; 0401E9 || 	jr	$-$13                       ; 0401DE || 0401E9 18 EB       0848  			JR      EXPR0A          	; And continue
	call	$040200                   ; 0401EB || 	call	$0401f5                   ; 0401E0 || 0401EB CD 00 02 04 0852  EXPR1:			CALL    EXPR2			; Get first operator by calling Level 5
	cp	$80                         ; 0401EF || 	cp	$80                         ; 0401E4 || 0401EF FE 80       0853  EXPR1A:			CP      ANDK			; Is operator AND?
	ret	nz                         ; 0401F1 || 	ret	nz                         ; 0401E6 || 0401F1 C0          0854  			RET     NZ			; No, so return
	call	$040a51                   ; 0401F2 || 	call	$040a3e                   ; 0401E7 || 0401F2 CD 51 0A 04 0855  			CALL    SAVE_EV			; Save first operand
	call	$040200                   ; 0401F6 || 	call	$0401f5                   ; 0401EB || 0401F6 CD 00 02 04 0856  			CALL    EXPR2			; Get second operand
	call	$040a60                   ; 0401FA || 	call	$040a4d                   ; 0401EF || 0401FA CD 60 0A 04 0857  			CALL    DOIT			; Do the operation
	jr	$-$0f                       ; 0401FE || 	jr	$-$0f                       ; 0401F3 || 0401FE 18 EF       0858  			JR      EXPR1A			; And continue
	call	$040272                   ; 040200 || 	call	$040267                   ; 0401F5 || 040200 CD 72 02 04 0862  EXPR2:			CALL    EXPR3			; Get first operator by calling Level 4
	call	$040a28                   ; 040204 || 	call	$040a15                   ; 0401F9 || 040204 CD 28 0A 04 0863  			CALL    RELOP?			; Is it ">", "=" or "<"?
	ret	nz                         ; 040208 || 	ret	nz                         ; 0401FD || 040208 C0          0864  			RET     NZ			; No, so return
	ld	b,a                         ; 040209 || 	ld	b,a                         ; 0401FE || 040209 47          0865  			LD      B,A			; Store the first operator in B
	inc	iy                         ; 04020A || 	inc	iy                         ; 0401FF || 04020A FD 23       0866  			INC     IY              	; Bump over operator
	call	$040a83                   ; 04020C || 	call	$040a70                   ; 040201 || 04020C CD 83 0A 04 0867  			CALL    NXT			;
	call	$040a28                   ; 040210 || 	call	$040a15                   ; 040205 || 040210 CD 28 0A 04 0868  			CALL    RELOP?          	; Is it a compound operator?
	jr	nz,$+$0b                    ; 040214 || 	jr	nz,$+$0b                    ; 040209 || 040214 20 09       0869  			JR      NZ,EXPR2B		; No, so skip next bit
	inc	iy                         ; 040216 || 	inc	iy                         ; 04020B || 040216 FD 23       0870  			INC     IY			; Bump over operator
	cp	b                           ; 040218 || 	cp	b                           ; 04020D || 040218 B8          0871  			CP      B			; Compare with first
	jp	z,$040caa                   ; 040219 || 	jp	z,$040c97                   ; 04020E || 040219 CA AA 0C 04 0872  			JP      Z,SYNTAX        	; Trap illegal combinations ">>", "==", "<<" (but not "><", "=>", "=<")
	add	a,b                        ; 04021D || 	add	a,b                        ; 040212 || 04021D 80          0873  			ADD     A,B
	ld	b,a                         ; 04021E || 	ld	b,a                         ; 040213 || 04021E 47          0874  			LD      B,A			; B: Unique code for the compound operator
	ld	a,b                         ; 04021F || 	ld	a,b                         ; 040214 || 04021F 78          0875  EXPR2B:			LD      A,B			; A: Code for the operator/compound operator
	ex	af,af'                      ; 040220 || 	ex	af,af'                      ; 040215 || 040220 08          0876  			EX      AF,AF'
	jp	m,$04023b                   ; 040221 || 	jp	m,$040230                   ; 040216 || 040221 FA 3B 02 04 0877  			JP      M,EXPR2S		; If it is a string, then branch here to handle it
	ex	af,af'                      ; 040225 || 	ex	af,af'                      ; 04021A || 040225 08          0878  			EX      AF,AF'
	sub	$04                        ; 040226 || 	sub	$04                        ; 04021B || 040226 D6 04       0879  			SUB     4
	cp	$3a                         ; 040228 || 	cp	$3a                         ; 04021D || 040228 FE 3A       0880  			CP      '>'-4
	jr	nz,$+$04                    ; 04022A || 	jr	nz,$+$04                    ; 04021F || 04022A 20 02       0881  			JR      NZ,EXPR2C
	add	a,$02                      ; 04022C || 	add	a,$02                      ; 040221 || 04022C C6 02       0882  			ADD     A,2
	call	$040a53                   ; 04022E || 	call	$040a40                   ; 040223 || 04022E CD 53 0A 04 0883  EXPR2C:			CALL    SAVE1
	call	$040272                   ; 040232 || 	call	$040267                   ; 040227 || 040232 CD 72 02 04 0884  			CALL    EXPR3
	call	$040a60                   ; 040236 || 	call	$040a4d                   ; 04022B || 040236 CD 60 0A 04 0885  			CALL    DOIT            	; NB: Must NOT be "JP DOIT"
	ret                            ; 04023A || 	ret                            ; 04022F || 04023A C9          0886  			RET
	ex	af,af'                      ; 04023B || 	ex	af,af'                      ; 040230 || 04023B 08          0888  EXPR2S:			EX      AF,AF'			; Handle string comparisons
	dec	a                          ; 04023C || 	dec	a                          ; 040231 || 04023C 3D          0889  			DEC     A
	and	$07                        ; 04023D || 	and	$07                        ; 040232 || 04023D E6 07       0890  			AND     7
	call	$0409c4                   ; 04023F || 	call	$0409b4                   ; 040234 || 04023F CD C4 09 04 0891  			CALL    PUSHS           	; Save string on the stack
	push	af                        ; 040243 || 	push	af                        ; 040238 || 040243 F5          0892  			PUSH    AF              	; Save the operator
	call	$040272                   ; 040244 || 	call	$040267                   ; 040239 || 040244 CD 72 02 04 0893  			CALL    EXPR3           	; Get the second string
	ex	af,af'                      ; 040248 || 	ex	af,af'                      ; 04023D || 040248 08          0894  			EX      AF,AF'
	jp	p,$040346                   ; 040249 || 	jp	p,$040336                   ; 04023E || 040249 F2 46 03 04 0895  			JP      P,TYPE_EV_
	pop	af                         ; 04024D || 	pop	af                         ; 040242 || 04024D F1          0896  			POP     AF
	ld	c,e                         ; 04024E || 	ld	c,e                         ; 040243 || 04024E 4B          0897  			LD      C,E             	; Length of string #2
	pop	de                         ; 04024F || 	pop	de                         ; 040244 || 04024F D1          0898  			POP     DE
	ld	hl,$000000                  ; 040250 || 	ld	hl,$000000                  ; 040245 || 040250 21 00 00 00 0899  			LD      HL,0
	add	hl,sp                      ; 040254 || 	add	hl,sp                      ; 040249 || 040254 39          0900  			ADD     HL,SP
	ld	b,e                         ; 040255 || 	ld	b,e                         ; 04024A || 040255 43          0901  			LD      B,E             	; Length of string #1
	push	de                        ; 040256 || 	push	de                        ; 04024B || 040256 D5          0902  			PUSH    DE
	ld	de,$044a00                  ; 040257 || 	ld	de,$044a00                  ; 04024C || 040257 11 00 4A 04 0903  			LD      DE,ACCS
	ex	de,hl                       ; 04025B || 	ex	de,hl                       ; 040250 || 04025B EB          0904  			EX      DE,HL
	call	$040a8f                   ; 04025C || 	call	$040a7c                   ; 040251 || 04025C CD 8F 0A 04 0905  			CALL    DISPT2
	pop	de                         ; 040260 || 	pop	de                         ; 040255 || 040260 D1          0906  			POP     DE
	ex	de,hl                       ; 040261 || 	ex	de,hl                       ; 040256 || 040261 EB          0907  			EX      DE,HL
	ld	a,l                         ; 040262 || 	ld	a,l                         ; 040257 || 040262 7D          0908  			LD	A,L
	ld	hl,$000000                  ; 040263 || 	ld	hl,$000000                  ; 040258 || 040263 21 00 00 00 0909  			LD	HL,0
	ld	l,a                         ; 040267 || 	ld	l,a                         ; 04025C || 040267 6F          0910  			LD	L,A
	add	hl,sp                      ; 040268 || 	add	hl,sp                      ; 04025D || 040268 39          0911  			ADD     HL,SP
	ld	sp,hl                       ; 040269 || 	ld	sp,hl                       ; 04025E || 040269 F9          0912  			LD      SP,HL
	ex	de,hl                       ; 04026A || 	ex	de,hl                       ; 04025F || 04026A EB          0913  			EX      DE,HL
	xor	a                          ; 04026B || 	xor	a                          ; 040260 || 04026B AF          0914  			XOR     A               	; Numeric marker
	ld	c,a                         ; 04026C || 	ld	c,a                         ; 040261 || 04026C 4F          0915  			LD      C,A             	; Integer marker
	ex	af,af'                      ; 04026D || 	ex	af,af'                      ; 040262 || 04026D 08          0916  			EX      AF,AF'
	ld	a,(iy)                      ; 04026E || 	ld	a,(iy)                      ; 040263 || 04026E FD 7E 00    0917  			LD      A,(IY)
	ret                            ; 040271 || 	ret                            ; 040266 || 040271 C9          0918  			RET
	call	$0402d4                   ; 040272 || 	call	$0402c4                   ; 040267 || 040272 CD D4 02 04 0922  EXPR3:			CALL    EXPR4			; Get first operator by calling Level 3
	cp	$2d                         ; 040276 || 	cp	$2d                         ; 04026B || 040276 FE 2D       0923  EXPR3A:			CP      '-'			; Is it "-"?
	jr	z,$+$0b                     ; 040278 || 	jr	z,$+$0b                     ; 04026D || 040278 28 09       0924  			JR      Z,EXPR3B		; Yes, so skip the next bit
	cp	$2b                         ; 04027A || 	cp	$2b                         ; 04026F || 04027A FE 2B       0925  			CP      '+'			; Is it "+"?
	ret	nz                         ; 04027C || 	ret	nz                         ; 040271 || 04027C C0          0926  			RET     NZ			; No, so return
	ex	af,af'                      ; 04027D || 	ex	af,af'                      ; 040272 || 04027D 08          0927  			EX      AF,AF'			; Get the type
	jp	m,$040291                   ; 04027E || 	jp	m,$040286                   ; 040273 || 04027E FA 91 02 04 0928  			JP      M,EXPR3S		; Branch here if string
	ex	af,af'                      ; 040282 || 	ex	af,af'                      ; 040277 || 040282 08          0929  			EX      AF,AF'
	call	$040a51                   ; 040283 || 	call	$040a3e                   ; 040278 || 040283 CD 51 0A 04 0930  EXPR3B:			CALL    SAVE_EV			; Save the first operator
	call	$0402d4                   ; 040287 || 	call	$0402c4                   ; 04027C || 040287 CD D4 02 04 0931  			CALL    EXPR4			; Fetch the second operator
	call	$040a60                   ; 04028B || 	call	$040a4d                   ; 040280 || 04028B CD 60 0A 04 0932  			CALL    DOIT			; Do the operation
	jr	$-$19                       ; 04028F || 	jr	$-$19                       ; 040284 || 04028F 18 E5       0933  			JR      EXPR3A			; And continue
	ex	af,af'                      ; 040291 || 	ex	af,af'                      ; 040286 || 040291 08          0935  EXPR3S:			EX      AF,AF'			; Handle string concatenation
	inc	iy                         ; 040292 || 	inc	iy                         ; 040287 || 040292 FD 23       0936  			INC     IY              	; Bump past the "+"
	call	$0409c4                   ; 040294 || 	call	$0409b4                   ; 040289 || 040294 CD C4 09 04 0937  			CALL    PUSHS           	; Save the string on the stack
	call	$0402d4                   ; 040298 || 	call	$0402c4                   ; 04028D || 040298 CD D4 02 04 0938  			CALL    EXPR4           	; Fetch the second operator
	ex	af,af'                      ; 04029C                                         || 04029C 08          0939  			EX      AF,AF'
	jp	p,$040346                   ; 04029D                                         || 04029D F2 46 03 04 0940  			JP      P,TYPE_EV_			; If it is not a string, then Error: "Type mismatch"
	ld	bc,$000000                  ; 0402A1                                         || 0402A1 01 00 00 00 0941  			LD	BC, 0			; Clear BC
	ld	c,e                         ; 0402A5                                         || 0402A5 4B          0942  			LD      C,E             	; C: Length of the second string
	pop	de                         ; 0402A6                                         || 0402A6 D1          0943  			POP     DE
	push	de                        ; 0402A7                                         || 0402A7 D5          0944  			PUSH    DE
	ld	hl,$044a00                  ; 0402A8                                         || 0402A8 21 00 4A 04 0945  			LD      HL,ACCS
	ld	a,e                         ; 0402AC                                         || 0402AC 7B          0946  			LD	A,E			;  E: Length of the first string
	ld	de,$044a00                  ; 0402AD                                         || 0402AD 11 00 4A 04 0947  			LD      DE,ACCS
	ld	e,a                         ; 0402B1                                         || 0402B1 5F          0948  			LD	E,A 			; DE: Pointer to the end of the first string
	ld	a,c                         ; 0402B2                                         || 0402B2 79          0949  			LD      A,C
	or	a                           ; 0402B3                                         || 0402B3 B7          0950  			OR      A
	jr	z,$+$11                     ; 0402B4                                         || 0402B4 28 0F       0951  			JR      Z,EXP3S3
	ld	l,a                         ; 0402B6                                         || 0402B6 6F          0952  			LD      L,A             	; Source
	add	a,e                        ; 0402B7                                         || 0402B7 83          0953  			ADD     A,E
	ld	e,a                         ; 0402B8                                         || 0402B8 5F          0954  			LD      E,A             	; Destination
	ld	a,$13                       ; 0402B9 || 	ld	a,$13                       ; 0402A9 || 0402B9 3E 13       0955  			LD      A,19
	jp	c,$0437c1                   ; 0402BB || 	jp	c,$043760                   ; 0402AB || 0402BB DA C1 37 04 0956  			JP      C,ERROR_         	; A carry indicates string > 255 bytes, so Error: "String too long"
	push	de                        ; 0402BF || 	push	de                        ; 0402AF || 0402BF D5          0957  			PUSH    DE
	dec	e                          ; 0402C0 || 	dec	e                          ; 0402B0 || 0402C0 1D          0958  			DEC     E
	dec	l                          ; 0402C1 || 	dec	l                          ; 0402B1 || 0402C1 2D          0959  			DEC     L
	lddr                           ; 0402C2 || 	lddr                           ; 0402B2 || 0402C2 ED B8       0960  			LDDR                    	; Copy
	pop	de                         ; 0402C4 || 	pop	de                         ; 0402B4 || 0402C4 D1          0961  			POP     DE
	exx                            ; 0402C5 || 	exx                            ; 0402B5 || 0402C5 D9          0962  EXP3S3:			EXX
	pop	bc                         ; 0402C6 || 	pop	bc                         ; 0402B6 || 0402C6 C1          0963  			POP     BC
	call	$0409f1                   ; 0402C7 || 	call	$0409de                   ; 0402B7 || 0402C7 CD F1 09 04 0964  			CALL    POPS            	; Restore from stack
	exx                            ; 0402CB || 	exx                            ; 0402BB || 0402CB D9          0965  			EXX
	or	$80                         ; 0402CC || 	or	$80                         ; 0402BC || 0402CC F6 80       0966  			OR      80H             	; Flag as a string
	ex	af,af'                      ; 0402CE || 	ex	af,af'                      ; 0402BE || 0402CE 08          0967  			EX      AF,AF'
	ld	a,(iy)                      ; 0402CF || 	ld	a,(iy)                      ; 0402BF || 0402CF FD 7E 00    0968  			LD      A,(IY)			; Fetch the next character
	jr	$-$5c                       ; 0402D2 || 	jr	$-$57                       ; 0402C2 || 0402D2 18 A2       0969  			JR      EXPR3A			; And continue
	call	$0402f5                   ; 0402D4 || 	call	$0402e5                   ; 0402C4 || 0402D4 CD F5 02 04 0973  EXPR4:			CALL    EXPR5			; Get first operator by calling Level 2
	cp	$2a                         ; 0402D8 || 	cp	$2a                         ; 0402C8 || 0402D8 FE 2A       0974  EXPR4A:			CP      '*'			; "*" is valid
	jr	z,$+$0d                     ; 0402DA || 	jr	z,$+$0d                     ; 0402CA || 0402DA 28 0B       0975  			JR      Z,EXPR4B
	cp	$2f                         ; 0402DC || 	cp	$2f                         ; 0402CC || 0402DC FE 2F       0976  			CP      '/'			; "/" is valid
	jr	z,$+$09                     ; 0402DE || 	jr	z,$+$09                     ; 0402CE || 0402DE 28 07       0977  			JR      Z,EXPR4B
	cp	$83                         ; 0402E0 || 	cp	$83                         ; 0402D0 || 0402E0 FE 83       0978  			CP      MODK			; MOD token is valid
	jr	z,$+$05                     ; 0402E2 || 	jr	z,$+$05                     ; 0402D2 || 0402E2 28 03       0979  			JR      Z,EXPR4B
	cp	$81                         ; 0402E4 || 	cp	$81                         ; 0402D4 || 0402E4 FE 81       0980  			CP      DIVK			; DIV token is valid
	ret	nz                         ; 0402E6 || 	ret	nz                         ; 0402D6 || 0402E6 C0          0981  			RET     NZ			; And return if it is anything else
	call	$040a51                   ; 0402E7 || 	call	$040a3e                   ; 0402D7 || 0402E7 CD 51 0A 04 0982  EXPR4B:			CALL    SAVE_EV
	call	$0402f5                   ; 0402EB || 	call	$0402e5                   ; 0402DB || 0402EB CD F5 02 04 0983  			CALL    EXPR5
	call	$040a60                   ; 0402EF || 	call	$040a4d                   ; 0402DF || 0402EF CD 60 0A 04 0984  			CALL    DOIT
	jr	$-$1b                       ; 0402F3 || 	jr	$-$1b                       ; 0402E3 || 0402F3 18 E3       0985  			JR      EXPR4A
	call	$0403d5                   ; 0402F5 || 	call	$0403c5                   ; 0402E5 || 0402F5 CD D5 03 04 0989  EXPR5:			CALL    ITEM			; Get variable
	or	a                           ; 0402F9 || 	or	a                           ; 0402E9 || 0402F9 B7          0990  			OR      A               	; Test type
	ex	af,af'                      ; 0402FA || 	ex	af,af'                      ; 0402EA || 0402FA 08          0991  			EX      AF,AF'          	; Save type
	call	$040a83                   ; 0402FB || 	call	$040a70                   ; 0402EB || 0402FB CD 83 0A 04 0992  EXPR5A:			CALL    NXT			; Skip spaces
	cp	$5e                         ; 0402FF || 	cp	$5e                         ; 0402EF || 0402FF FE 5E       0993  			CP      '^'			; Is the operator "^"?
	ret	nz                         ; 040301 || 	ret	nz                         ; 0402F1 || 040301 C0          0994  			RET     NZ			; No, so return
	call	$040a51                   ; 040302 || 	call	$040a3e                   ; 0402F2 || 040302 CD 51 0A 04 0995  			CALL    SAVE_EV			; Save first operand
	call	$0403d5                   ; 040306 || 	call	$0403c5                   ; 0402F6 || 040306 CD D5 03 04 0996  			CALL    ITEM			; Get second operand
	or	a                           ; 04030A || 	or	a                           ; 0402FA || 04030A B7          0997  			OR      A			; Test type
	ex	af,af'                      ; 04030B || 	ex	af,af'                      ; 0402FB || 04030B 08          0998  			EX      AF,AF'			; Save type
	call	$040a60                   ; 04030C || 	call	$040a4d                   ; 0402FC || 04030C CD 60 0A 04 0999  			CALL    DOIT			; Do the operation
	jr	$-$15                       ; 040310 || 	jr	$-$15                       ; 040300 || 040310 18 E9       1000  			JR      EXPR5A			; And continue
	call	$0401d2                   ; 040312 || 	call	$0401c7                   ; 040302 || 040312 CD D2 01 04 1004  EXPRN:			CALL    EXPR			; Evaluate expression
	ex	af,af'                      ; 040316 || 	ex	af,af'                      ; 040306 || 040316 08          1005  			EX      AF,AF'			; Get the type
	ret	p                          ; 040317 || 	ret	p                          ; 040307 || 040317 F0          1006  			RET     P			; And return if it is a number
	jr	$+$2e                       ; 040318 || 	jr	$+$2e                       ; 040308 || 040318 18 2C       1007  			JR      TYPE_EV_			; Otherwise Error: "Type mismatch"
	call	$0401d2                   ; 04031A || 	call	$0401c7                   ; 04030A || 04031A CD D2 01 04 1011  EXPRI:			CALL    EXPR			; Evaluate the expression
	ex	af,af'                      ; 04031E || 	ex	af,af'                      ; 04030E || 04031E 08          1012  			EX      AF,AF'			; Get the type
	jp	p,$040672                   ; 04031F || 	jp	p,$040662                   ; 04030F || 04031F F2 72 06 04 1013  			JP      P,SFIX			; If it is numeric, then convert to fixed-point notation
	jr	$+$23                       ; 040323 || 	jr	$+$23                       ; 040313 || 040323 18 21       1014  			JR      TYPE_EV_			; Otherwise Error: "Type mismatch"
	call	$0401d2                   ; 040325 || 	call	$0401c7                   ; 040315 || 040325 CD D2 01 04 1018  EXPRS:			CALL    EXPR			; Evaluate the expression
	ex	af,af'                      ; 040329 || 	ex	af,af'                      ; 040319 || 040329 08          1019  			EX      AF,AF'			; Get the type
	ret	m                          ; 04032A || 	ret	m                          ; 04031A || 04032A F8          1020  			RET     M			; And return if it is a string
	jr	$+$1b                       ; 04032B || 	jr	$+$1b                       ; 04031B || 04032B 18 19       1021  			JR      TYPE_EV_			; Otherwise Error: "Type mismatch"
	call	$0403d5                   ; 04032D || 	call	$0403c5                   ; 04031D || 04032D CD D5 03 04 1025  ITEMN:			CALL    ITEM			; Get the variable
	or	a                           ; 040331 || 	or	a                           ; 040321 || 040331 B7          1026  			OR      A			; Test the type
	ret	p                          ; 040332 || 	ret	p                          ; 040322 || 040332 F0          1027  			RET     P			; And return if it is a number
	jr	$+$13                       ; 040333 || 	jr	$+$13                       ; 040323 || 040333 18 11       1028  			JR      TYPE_EV_			; Otherwise Error: "Type mismatch"
	call	$0403d5                   ; 040335 || 	call	$0403c5                   ; 040325 || 040335 CD D5 03 04 1032  ITEMI:			CALL    ITEM			; Get the variable
	or	a                           ; 040339 || 	or	a                           ; 040329 || 040339 B7          1033  			OR      A			; Test the type
	jp	p,$040672                   ; 04033A || 	jp	p,$040662                   ; 04032A || 04033A F2 72 06 04 1034  			JP      P,SFIX			; If it is numeric, then convert to fixed-point notation
	jr	$+$08                       ; 04033E || 	jr	$+$08                       ; 04032E || 04033E 18 06       1035  			JR      TYPE_EV_			; Otherwise Error: "Type mismatch"
	call	$0403d5                   ; 040340 || 	call	$0403c5                   ; 040330 || 040340 CD D5 03 04 1039  ITEMS:			CALL    ITEM			; Get the variable
	or	a                           ; 040344 || 	or	a                           ; 040334 || 040344 B7          1040  			OR      A			; Test the type
	ret	m                          ; 040345 || 	ret	m                          ; 040335 || 040345 F8          1041  			RET     M			; If it is a string, then return
	ld	a,$06                       ; 040346 || 	ld	a,$06                       ; 040336 || 040346 3E 06       1043  TYPE_EV_:			LD      A,6			; Error: "Type mismatch"
	jp	$0437c1                     ; 040348 || 	jp	$043760                     ; 040338 || 040348 C3 C1 37 04 1044  			JP      ERROR_
	call	$0401d2                   ; 04034C || 	call	$0401c7                   ; 04033C || 04034C CD D2 01 04 1048  ITEM1:			CALL    EXPR            	; Evaluate the expression
	call	$040a42                   ; 040350 || 	call	$040a2f                   ; 040340 || 040350 CD 42 0A 04 1049  			CALL    BRAKET			; Check for closing bracket
	ex	af,af'                      ; 040354 || 	ex	af,af'                      ; 040344 || 040354 08          1050  			EX      AF,AF'
	ret                            ; 040355 || 	ret                            ; 040345 || 040355 C9          1051  			RET
	call	$0409a3                   ; 040356 || 	call	$040993                   ; 040346 || 040356 CD A3 09 04 1058  HEX:			CALL    ZERO			; Set result to 0
	call	$040a0b                   ; 04035A || 	call	$0409f8                   ; 04034A || 04035A CD 0B 0A 04 1059  			CALL    HEXDIG			; Fetch the character from IY
	jr	c,$+$1d                     ; 04035E || 	jr	c,$+$1d                     ; 04034E || 04035E 38 1B       1060  			JR      C,BADHEX		; If invalid HEX character, then Error: "Bad HEX"
	inc	iy                         ; 040360 || 	inc	iy                         ; 040350 || 040360 FD 23       1061  HEX1:			INC     IY			; Move pointer to next character
	and	$0f                        ; 040362 || 	and	$0f                        ; 040352 || 040362 E6 0F       1062  			AND     0FH			; Clear the top nibble
	ld	b,$04                       ; 040364 || 	ld	b,$04                       ; 040354 || 040364 06 04       1063  			LD      B,4			; Loop counter
	exx                            ; 040366 || 	exx                            ; 040356 || 040366 D9          1065  HEX2:			EXX				; Shift the result left B (4) times. This makes
	add.sil	hl,hl                  ; 040367 || 	add.sil	hl,hl                  ; 040357 || 040367 52 29       1066  			ADD.S   HL,HL			; space for the incoming nibble in the least significant 4 bits
	exx                            ; 040369 || 	exx                            ; 040359 || 040369 D9          1067  			EXX				; .
	adc.sil	hl,hl                  ; 04036A || 	adc.sil	hl,hl                  ; 04035A || 04036A 52 ED 6A    1068  			ADC.S   HL,HL			; .
	djnz	$-$07                     ; 04036D || 	djnz	$-$07                     ; 04035D || 04036D 10 F7       1069  			DJNZ    HEX2			; And loop
	exx                            ; 04036F || 	exx                            ; 04035F || 04036F D9          1070  			EXX
	or	l                           ; 040370 || 	or	l                           ; 040360 || 040370 B5          1071  			OR      L			; OR in the digit
	ld	l,a                         ; 040371 || 	ld	l,a                         ; 040361 || 040371 6F          1072  			LD      L,A
	exx                            ; 040372 || 	exx                            ; 040362 || 040372 D9          1073  			EXX
	call	$040a0b                   ; 040373 || 	call	$0409f8                   ; 040363 || 040373 CD 0B 0A 04 1075  			CALL    HEXDIG			; Fetch the next character
	jr	nc,$-$17                    ; 040377 || 	jr	nc,$-$17                    ; 040367 || 040377 30 E7       1076  			JR      NC,HEX1			; If it is a HEX digit then loop
	xor	a                          ; 040379 || 	xor	a                          ; 040369 || 040379 AF          1077  			XOR     A			; Clear A
	ret                            ; 04037A || 	ret                            ; 04036A || 04037A C9          1078  			RET
	ld	a,$1c                       ; 04037B || 	ld	a,$1c                       ; 04036B || 04037B 3E 1C       1080  BADHEX:			LD      A,28
	jp	$0437c1                     ; 04037D || 	jp	$043760                     ; 04036D || 04037D C3 C1 37 04 1081  			JP      ERROR_          	; Error: "Bad HEX"
	call	$0409a3                   ; 040381 || 	call	$040993                   ; 040371 || 040381 CD A3 09 04 1088  BIN:			CALL    ZERO			; Set result to 0
	call	$040a1e                   ; 040385 || 	call	$040a0b                   ; 040375 || 040385 CD 1E 0A 04 1089  			CALL	BINDIG			; Fetch the character from IY
	jr	c,$+$15                     ; 040389 || 	jr	c,$+$15                     ; 040379 || 040389 38 13       1090  			JR	C,BADBIN		; If invalid BIN character then Error: "Bad Binary"
	inc	iy                         ; 04038B || 	inc	iy                         ; 04037B || 04038B FD 23       1091  BIN1:			INC	IY			; Move pointer to next character
	rrca                           ; 04038D || 	rrca                           ; 04037D || 04038D 0F          1092  			RRCA				; Bit 0 of ASCII '0' is 0, and ASCII '1' is 1, so shift that bit into carry
	exx                            ; 04038E || 	exx                            ; 04037E || 04038E D9          1093  			EXX				;
	adc.sil	hl,hl                  ; 04038F || 	adc.sil	hl,hl                  ; 04037F || 04038F 52 ED 6A    1094  			ADC.S	HL,HL			; And shift back into into H'L'HL (note the ADC)
	exx                            ; 040392 || 	exx                            ; 040382 || 040392 D9          1095  			EXX
	adc.sil	hl,hl                  ; 040393 || 	adc.sil	hl,hl                  ; 040383 || 040393 52 ED 6A    1096  			ADC.S	HL,HL
	call	$040a1e                   ; 040396 || 	call	$040a0b                   ; 040386 || 040396 CD 1E 0A 04 1097  			CALL	BINDIG			; Fetch the next character
	jr	nc,$-$0f                    ; 04039A || 	jr	nc,$-$0f                    ; 04038A || 04039A 30 EF       1098  			JR	NC,BIN1
	xor	a                          ; 04039C || 	xor	a                          ; 04038C || 04039C AF          1099  			XOR	A			; Clear A
	ret                            ; 04039D || 	ret                            ; 04038D || 04039D C9          1100  			RET
	ld	a,$1c                       ; 04039E || 	ld	a,$1c                       ; 04038E || 04039E 3E 1C       1102  BADBIN:			LD	A, 28			; Error: "Bad Binary" - reuses same error code as Bad HEX
	call	$0437d8                   ; 0403A0 || 	call	$043777                   ; 040390 || 0403A0 CD D8 37 04 1103  			CALL	EXTERR
	ld	b,d                         ; 0403A4 || 	ld	b,d                         ; 040394 || 0403A4 42 61 64 20 1104  			DB	"Bad Binary", 0
	ld	h,c                         ; 0403A5 || 	ld	h,c                         ; 040395
	ld	h,h                         ; 0403A6 || 	ld	h,h                         ; 040396
	jr	nz,$+$44                    ; 0403A7 || 	jr	nz,$+$44                    ; 040397
	ld	l,c                         ; 0403A9 || 	ld	l,c                         ; 040399
	ld	l,(hl)                      ; 0403AA || 	ld	l,(hl)                      ; 04039A
	ld	h,c                         ; 0403AB || 	ld	h,c                         ; 04039B
	ld	(hl),d                      ; 0403AC || 	ld	(hl),d                      ; 04039C
	ld	a,c                         ; 0403AD || 	ld	a,c                         ; 04039D
	nop                            ; 0403AE || 	nop                            ; 04039E
	call	$04032d                   ; 0403AF || 	call	$04031d                   ; 04039F || 0403AF CD 2D 03 04 1111  MINUS:			CALL    ITEMN			; Get the numeric argument
	dec	c                          ; 0403B3 || 	dec	c                          ; 0403A3 || 0403B3 0D          1112  MINUS0:			DEC     C			; Check exponent (C)
	inc	c                          ; 0403B4 || 	inc	c                          ; 0403A4 || 0403B4 0C          1113  			INC     C			; If it is zero, then it's either a FP zero or an integer
	jr	z,$+$08                     ; 0403B5 || 	jr	z,$+$08                     ; 0403A5 || 0403B5 28 06       1114  			JR      Z,NEGATE_EV        	; So do an integer negation
	ld	a,h                         ; 0403B7 || 	ld	a,h                         ; 0403A7 || 0403B7 7C          1116  			LD      A,H			; Do a FP negation by
	xor	$80                        ; 0403B8 || 	xor	$80                        ; 0403A8 || 0403B8 EE 80       1117  			XOR     80H             	; Toggling the sign bit (H)
	ld	h,a                         ; 0403BA || 	ld	h,a                         ; 0403AA || 0403BA 67          1118  			LD      H,A
	xor	a                          ; 0403BB || 	xor	a                          ; 0403AB || 0403BB AF          1119  			XOR     A               	; Numeric marker
	ret                            ; 0403BC || 	ret                            ; 0403AC || 0403BC C9          1120  			RET
	exx                            ; 0403BD || 	exx                            ; 0403AD || 0403BD D9          1122  NEGATE_EV:			EXX				; This section does a two's complement negation on H'L'HLC
	ld	a,h                         ; 0403BE || 	ld	a,h                         ; 0403AE || 0403BE 7C          1123  			LD      A,H			; First do a one's complement by negating all the bytes
	cpl                            ; 0403BF || 	cpl                            ; 0403AF || 0403BF 2F          1124  			CPL
	ld	h,a                         ; 0403C0 || 	ld	h,a                         ; 0403B0 || 0403C0 67          1125  			LD      H,A
	ld	a,l                         ; 0403C1 || 	ld	a,l                         ; 0403B1 || 0403C1 7D          1126  			LD      A,L
	cpl                            ; 0403C2 || 	cpl                            ; 0403B2 || 0403C2 2F          1127  			CPL
	ld	l,a                         ; 0403C3 || 	ld	l,a                         ; 0403B3 || 0403C3 6F          1128  			LD      L,A
	exx                            ; 0403C4 || 	exx                            ; 0403B4 || 0403C4 D9          1129  			EXX
	ld	a,h                         ; 0403C5 || 	ld	a,h                         ; 0403B5 || 0403C5 7C          1130  			LD      A,H
	cpl                            ; 0403C6 || 	cpl                            ; 0403B6 || 0403C6 2F          1131  			CPL
	ld	h,a                         ; 0403C7 || 	ld	h,a                         ; 0403B7 || 0403C7 67          1132  			LD      H,A
	ld	a,l                         ; 0403C8 || 	ld	a,l                         ; 0403B8 || 0403C8 7D          1133  			LD      A,L
	cpl                            ; 0403C9 || 	cpl                            ; 0403B9 || 0403C9 2F          1134  			CPL
	ld	l,a                         ; 0403CA || 	ld	l,a                         ; 0403BA || 0403CA 6F          1135  			LD      L,A
	exx                            ; 0403CB || 	exx                            ; 0403BB || 0403CB D9          1136  ADD1:			EXX				; Then add 1
	inc	hl                         ; 0403CC || 	inc	hl                         ; 0403BC || 0403CC 23          1137  			INC     HL
	ld	a,h                         ; 0403CD || 	ld	a,h                         ; 0403BD || 0403CD 7C          1138  			LD      A,H
	or	l                           ; 0403CE || 	or	l                           ; 0403BE || 0403CE B5          1139  			OR      L
	exx                            ; 0403CF || 	exx                            ; 0403BF || 0403CF D9          1140  			EXX
	ld	a,$00                       ; 0403D0 || 	ld	a,$00                       ; 0403C0 || 0403D0 3E 00       1141  			LD      A,0             	; Numeric marker
	ret	nz                         ; 0403D2 || 	ret	nz                         ; 0403C2 || 0403D2 C0          1142  			RET     NZ
	inc	hl                         ; 0403D3 || 	inc	hl                         ; 0403C3 || 0403D3 23          1143  			INC     HL
	ret                            ; 0403D4 || 	ret                            ; 0403C4 || 0403D4 C9          1144  			RET
	call	$04168c                   ; 0403D5 || 	call	$04164f                   ; 0403C5 || 0403D5 CD 8C 16 04 1153  ITEM:			CALL    CHECK			; Check there's at least a page of free memory left and Error: "No room" if not
	call	$040a83                   ; 0403D9 || 	call	$040a70                   ; 0403C9 || 0403D9 CD 83 0A 04 1154  			CALL    NXT			; Skip spaces
	inc	iy                         ; 0403DD || 	inc	iy                         ; 0403CD || 0403DD FD 23       1155  			INC     IY			; Move to the prefix character
	cp	$26                         ; 0403DF || 	cp	$26                         ; 0403CF || 0403DF FE 26       1156  			CP      '&'			; If `&`
	jp	z,$040356                   ; 0403E1 || 	jp	z,$040346                   ; 0403D1 || 0403E1 CA 56 03 04 1157  			JP      Z,HEX           	; Then get a HEX constant
	cp	$25                         ; 0403E5 || 	cp	$25                         ; 0403D5 || 0403E5 FE 25       1158  			CP	'%'			; If '%'
	jr	z,$-$66                     ; 0403E7 || 	jr	z,$-$66                     ; 0403D7 || 0403E7 28 98       1159  			JR	Z,BIN			; Then get a BINARY constant
	cp	$2d                         ; 0403E9 || 	cp	$2d                         ; 0403D9 || 0403E9 FE 2D       1160  			CP      '-'			; If `-`
	jr	z,$-$3c                     ; 0403EB || 	jr	z,$-$3c                     ; 0403DB || 0403EB 28 C2       1161  			JR      Z,MINUS         	; Then get a negative number
	cp	$2b                         ; 0403ED || 	cp	$2b                         ; 0403DD || 0403ED FE 2B       1162  			CP      '+'			; If `+`
	jp	z,$04032d                   ; 0403EF || 	jp	z,$04031d                   ; 0403DF || 0403EF CA 2D 03 04 1163  			JP      Z,ITEMN         	; Then just fetch the number (unary plus)
	cp	$28                         ; 0403F3 || 	cp	$28                         ; 0403E3 || 0403F3 FE 28       1164  			CP      '('			; If `(`
	jp	z,$04034c                   ; 0403F5 || 	jp	z,$04033c                   ; 0403E5 || 0403F5 CA 4C 03 04 1165  			JP      Z,ITEM1         	; Start of a bracketed expression
	cp	$22                         ; 0403F9 || 	cp	$22                         ; 0403E9 || 0403F9 FE 22       1166  			CP      34			; If `"`
	jr	z,$+$7c                     ; 0403FB || 	jr	z,$+$7c                     ; 0403EB || 0403FB 28 7A       1167  			JR      Z,CONS          	; Start of a string constant
	cp	$c6                         ; 0403FD || 	cp	$c6                         ; 0403ED || 0403FD FE C6       1168  			CP      TCMD			; Is it out of range of the function table?
	jp	nc,$040caa                  ; 0403FF || 	jp	nc,$040c97                  ; 0403EF || 0403FF D2 AA 0C 04 1169  			JP      NC,SYNTAX       	; Error: "Syntax Error"
	cp	$8d                         ; 040403 || 	cp	$8d                         ; 0403F3 || 040403 FE 8D       1170  			CP      FUNTOK			; If it is in range, then
	jp	nc,$040a96                  ; 040405 || 	jp	nc,$040a83                  ; 0403F5 || 040405 D2 96 0A 04 1171  			JP      NC,DISPAT       	; It's a function
	dec	iy                         ; 040409 || 	dec	iy                         ; 0403F9 || 040409 FD 2B       1172  			DEC     IY
	cp	$3a                         ; 04040B || 	cp	$3a                         ; 0403FB || 04040B FE 3A       1173  			CP      ':'
	jr	nc,$+$0e                    ; 04040D || 	jr	nc,$+$0e                    ; 0403FD || 04040D 30 0C       1174  			JR      NC,ITEM2		; VARIABLE?
	cp	$30                         ; 04040F || 	cp	$30                         ; 0403FF || 04040F FE 30       1175  			CP      '0'
	jp	nc,$04049e                  ; 040411 || 	jp	nc,$04048e                  ; 040401 || 040411 D2 9E 04 04 1176  			JP      NC,CON			; NUMERIC CONSTANT
	cp	$2e                         ; 040415 || 	cp	$2e                         ; 040405 || 040415 FE 2E       1177  			CP      '.'
	jp	z,$04049e                   ; 040417 || 	jp	z,$04048e                   ; 040407 || 040417 CA 9E 04 04 1178  			JP      Z,CON			; NUMERIC CONSTANT
	call	$043a9b                   ; 04041B || 	call	$043a3a                   ; 04040B || 04041B CD 9B 3A 04 1179  ITEM2:			CALL    GETVAR			; VARIABLE
	jr	nz,$+$39                    ; 04041F || 	jr	nz,$+$39                    ; 04040F || 04041F 20 37       1180  			JR      NZ,NOSUCH
	or	a                           ; 040421 || 	or	a                           ; 040411 || 040421 B7          1181  			OR      A
	jp	m,$0404b0                   ; 040422 || 	jp	m,$0404a0                   ; 040412 || 040422 FA B0 04 04 1182  			JP      M,LOADS			; STRING VARIABLE
	or	a                           ; 040426 || 	or	a                           ; 040416 || 040426 B7          1183  LOADN:			OR      A
	jr	z,$+$22                     ; 040427 || 	jr	z,$+$22                     ; 040417 || 040427 28 20       1184  			JR      Z,LOAD1			; BYTE VARIABLE
	ld	c,$00                       ; 040429 || 	ld	c,$00                       ; 040419 || 040429 0E 00       1185  			LD      C,0
	bit	0,a                        ; 04042B || 	bit	0,a                        ; 04041B || 04042B CB 47       1186  			BIT     0,A
	jr	z,$+$05                     ; 04042D || 	jr	z,$+$05                     ; 04041D || 04042D 28 03       1187  			JR      Z,LOAD4			; INTEGER VARIABLE
	ld	c,(ix+$04)                  ; 04042F || 	ld	c,(ix+$04)                  ; 04041F || 04042F DD 4E 04    1188  LOAD5:			LD      C,(IX+4)
	exx                            ; 040432 || 	exx                            ; 040422 || 040432 D9          1189  LOAD4:			EXX
	ld	hl,$000000                  ; 040433 || 	ld	hl,$000000                  ; 040423 || 040433 21 00 00 00 1190  			LD	HL, 0			; TODO: Optimise
	ld	l,(ix)                      ; 040437 || 	ld	l,(ix)                      ; 040427 || 040437 DD 6E 00    1191  			LD      L,(IX+0)
	ld	h,(ix+$01)                  ; 04043A || 	ld	h,(ix+$01)                  ; 04042A || 04043A DD 66 01    1192  			LD      H,(IX+1)
	exx                            ; 04043D || 	exx                            ; 04042D || 04043D D9          1193  			EXX
	ld	hl,$000000                  ; 04043E || 	ld	hl,$000000                  ; 04042E || 04043E 21 00 00 00 1194  			LD	HL, 0			; TODO: Optimise
	ld	l,(ix+$02)                  ; 040442 || 	ld	l,(ix+$02)                  ; 040432 || 040442 DD 6E 02    1195  			LD      L,(IX+2)
	ld	h,(ix+$03)                  ; 040445 || 	ld	h,(ix+$03)                  ; 040435 || 040445 DD 66 03    1196  			LD      H,(IX+3)
	ret                            ; 040448 || 	ret                            ; 040438 || 040448 C9          1197  			RET
	ld	hl,$000000                  ; 040449 || 	ld	hl,$000000                  ; 040439 || 040449 21 00 00 00 1199  LOAD1:			LD      HL,0
	exx                            ; 04044D || 	exx                            ; 04043D || 04044D D9          1200  			EXX
	ld	hl,$000000                  ; 04044E || 	ld	hl,$000000                  ; 04043E || 04044E 21 00 00 00 1201  			LD      HL,0			; TODO: Optimise
	ld	l,(ix)                      ; 040452 || 	ld	l,(ix)                      ; 040442 || 040452 DD 6E 00    1202  			LD      L,(IX+0)
	exx                            ; 040455 || 	exx                            ; 040445 || 040455 D9          1203  			EXX
	ld	c,h                         ; 040456 || 	ld	c,h                         ; 040446 || 040456 4C          1204  			LD      C,H
	ret                            ; 040457 || 	ret                            ; 040447 || 040457 C9          1205  			RET
	jp	c,$040caa                   ; 040458 || 	jp	c,$040c97                   ; 040448 || 040458 DA AA 0C 04 1207  NOSUCH:			JP      C,SYNTAX
	ld	a,($044d40)                 ; 04045C || 	ld	a,($044d40)                 ; 04044C || 04045C 3A 40 4D 04 1208  			LD      A,(LISTON)
	bit	5,a                        ; 040460 || 	bit	5,a                        ; 040450 || 040460 CB 6F       1209  			BIT     5,A
	ld	a,$1a                       ; 040462 || 	ld	a,$1a                       ; 040452 || 040462 3E 1A       1210  			LD      A,26
	jr	nz,$+$28                    ; 040464 || 	jr	nz,$+$28                    ; 040454 || 040464 20 26       1211  			JR      NZ,ERROR0_EV		; Throw "No such variable"
	inc	iy                         ; 040466 || 	inc	iy                         ; 040456 || 040466 FD 23       1212  NOS1:			INC     IY
	call	$043cd0                   ; 040468 || 	call	$043c6f                   ; 040458 || 040468 CD D0 3C 04 1213  			CALL    RANGE
	jr	nc,$-$06                    ; 04046C || 	jr	nc,$-$06                    ; 04045C || 04046C 30 F8       1214  			JR      NC,NOS1
	ld	ix,$044c40                  ; 04046E || 	ld	ix,$044c40                  ; 04045E || 04046E DD 21 40 4C 1215  			LD      IX,PC
	xor	a                          ; 040473 || 	xor	a                          ; 040463 || 040473 AF          1216  			XOR     A
	ld	c,a                         ; 040474 || 	ld	c,a                         ; 040464 || 040474 4F          1217  			LD      C,A
	jr	$-$43                       ; 040475 || 	jr	$-$43                       ; 040465 || 040475 18 BB       1218  			JR      LOAD4
	ld	de,$044a00                  ; 040477 || 	ld	de,$044a00                  ; 040467 || 040477 11 00 4A 04 1227  CONS:			LD      DE,ACCS			; DE: Pointer to the string accumulator
	ld	a,(iy)                      ; 04047B || 	ld	a,(iy)                      ; 04046B || 04047B FD 7E 00    1228  CONS3:			LD      A,(IY)			; Fetch the first character and
	inc	iy                         ; 04047E || 	inc	iy                         ; 04046E || 04047E FD 23       1229  			INC     IY			; Increment the pointer
	cp	$22                         ; 040480 || 	cp	$22                         ; 040470 || 040480 FE 22       1230  			CP      '"'			; Check for start quote
	jr	z,$+$0e                     ; 040482 || 	jr	z,$+$0e                     ; 040472 || 040482 28 0C       1231  			JR      Z,CONS2			; Yes, so jump to the bit that parses the string
	ld	(de),a                      ; 040484 || 	ld	(de),a                      ; 040474 || 040484 12          1233  CONS1:			LD      (DE),A			; Store the character in the string accumulator
	inc	e                          ; 040485 || 	inc	e                          ; 040475 || 040485 1C          1234  			INC     E			; Increment the string accumulator pointer
	cp	$0d                         ; 040486 || 	cp	$0d                         ; 040476 || 040486 FE 0D       1235  			CP      CR			; Is it CR
	jr	nz,$-$0d                    ; 040488 || 	jr	nz,$-$0d                    ; 040478 || 040488 20 F1       1236  			JR      NZ,CONS3		; No, so keep looping
	ld	a,$09                       ; 04048A || 	ld	a,$09                       ; 04047A || 04048A 3E 09       1238  			LD      A,9
	jp	$0437c1                     ; 04048C || 	jp	$043760                     ; 04047C || 04048C C3 C1 37 04 1239  ERROR0_EV:			JP      ERROR_           	; Throw error "Missing '"'
	ld	a,(iy)                      ; 040490 || 	ld	a,(iy)                      ; 040480 || 040490 FD 7E 00    1241  CONS2:			LD      A,(IY)			; Fetch the next character
	cp	$22                         ; 040493 || 	cp	$22                         ; 040483 || 040493 FE 22       1242  			CP      '"'			; Check for end quote?
	inc	iy                         ; 040495 || 	inc	iy                         ; 040485 || 040495 FD 23       1243  			INC     IY			; Increment the pointer
	jr	z,$-$13                     ; 040497 || 	jr	z,$-$13                     ; 040487 || 040497 28 EB       1244  			JR      Z,CONS1			; It is the end of string marker so jump to the end routine
	dec	iy                         ; 040499 || 	dec	iy                         ; 040489 || 040499 FD 2B       1245  			DEC     IY			;
	ld	a,$80                       ; 04049B || 	ld	a,$80                       ; 04048B || 04049B 3E 80       1246  			LD      A,80H           	; String marker
	ret                            ; 04049D || 	ret                            ; 04048D || 04049D C9          1247  			RET
	push	iy                        ; 04049E || 	push	iy                        ; 04048E || 04049E FD E5       1255  CON:			PUSH    IY
	pop	ix                         ; 0404A0 || 	pop	ix                         ; 040490 || 0404A0 DD E1       1256  			POP     IX
	ld	a,$24                       ; 0404A2 || 	ld	a,$24                       ; 040492 || 0404A2 3E 24       1257  			LD      A,36
	call	$0420ad                   ; 0404A4 || 	call	$04206a                   ; 040494 || 0404A4 CD AD 20 04 1258  			CALL    FPP
	jr	c,$-$1c                     ; 0404A8 || 	jr	c,$-$1c                     ; 040498 || 0404A8 38 E2       1259  			JR      C,ERROR0_EV
	push	ix                        ; 0404AA || 	push	ix                        ; 04049A || 0404AA DD E5       1260  			PUSH    IX
	pop	iy                         ; 0404AC || 	pop	iy                         ; 04049C || 0404AC FD E1       1261  			POP     IY
	xor	a                          ; 0404AE || 	xor	a                          ; 04049E || 0404AE AF          1262  			XOR     A
	ret                            ; 0404AF || 	ret                            ; 04049F || 0404AF C9          1263  			RET
	ld	de,$044a00                  ; 0404B0 || 	ld	de,$044a00                  ; 0404A0 || 0404B0 11 00 4A 04 1265  LOADS:			LD      DE,ACCS			; Where to store the string
	rra                            ; 0404B4 || 	rra                            ; 0404A4 || 0404B4 1F          1266  			RRA
	jr	nc,$+$1c                    ; 0404B5 || 	jr	nc,$+$1c                    ; 0404A5 || 0404B5 30 1A       1267  			JR      NC,LOADS2       	; Skip if it is a fixed string
	exx                            ; 0404B7 || 	exx                            ; 0404A7 || 0404B7 D9          1269  			EXX				; This block was a call to LOAD4
	ld	l,(ix)                      ; 0404B8 || 	ld	l,(ix)                      ; 0404A8 || 0404B8 DD 6E 00    1270  			LD      L,(IX+0)		; The length of the string currently stored in the allocated space
	ld	h,(ix+$01)                  ; 0404BB || 	ld	h,(ix+$01)                  ; 0404AB || 0404BB DD 66 01    1271  			LD      H,(IX+1)		; The maximum original string length
	exx                            ; 0404BE || 	exx                            ; 0404AE || 0404BE D9          1272  			EXX
	ld	hl,(ix+$02)                 ; 0404BF || 	ld	hl,(ix+$02)                 ; 0404AF || 0404BF DD 27 02    1273  			LD	HL,(IX+2)		; Address of the string (24-bit)
	exx                            ; 0404C2 || 	exx                            ; 0404B2 || 0404C2 D9          1275  			EXX
	ld	a,l                         ; 0404C3 || 	ld	a,l                         ; 0404B3 || 0404C3 7D          1276  			LD      A,L
	exx                            ; 0404C4 || 	exx                            ; 0404B4 || 0404C4 D9          1277  			EXX
	or	a                           ; 0404C5 || 	or	a                           ; 0404B5 || 0404C5 B7          1278  			OR      A
	ld	bc,$000000                  ; 0404C6 || 	ld	bc,$000000                  ; 0404B6 || 0404C6 01 00 00 00 1279  			LD	BC,0			; BC: Number of bytes to copy
	ld	c,a                         ; 0404CA || 	ld	c,a                         ; 0404BA || 0404CA 4F          1280  			LD      C,A
	ld	a,$80                       ; 0404CB || 	ld	a,$80                       ; 0404BB || 0404CB 3E 80       1281  			LD      A,80H           	; String marker
	ret	z                          ; 0404CD || 	ret	z                          ; 0404BD || 0404CD C8          1282  			RET     Z
	ldir                           ; 0404CE || 	ldir                           ; 0404BE || 0404CE ED B0       1283  			LDIR
	ret                            ; 0404D0 || 	ret                            ; 0404C0 || 0404D0 C9          1284  			RET
	ld	a,(hl)                      ; 0404D1 || 	ld	a,(hl)                      ; 0404C1 || 0404D1 7E          1285  LOADS2:			LD      A,(HL)
	ld	(de),a                      ; 0404D2 || 	ld	(de),a                      ; 0404C2 || 0404D2 12          1286  			LD      (DE),A
	inc	hl                         ; 0404D3 || 	inc	hl                         ; 0404C3 || 0404D3 23          1287  			INC     HL
	cp	$0d                         ; 0404D4 || 	cp	$0d                         ; 0404C4 || 0404D4 FE 0D       1288  			CP      CR
	ld	a,$80                       ; 0404D6 || 	ld	a,$80                       ; 0404C6 || 0404D6 3E 80       1289  			LD      A,80H           	; String marker
	ret	z                          ; 0404D8 || 	ret	z                          ; 0404C8 || 0404D8 C8          1290  			RET     Z
	inc	e                          ; 0404D9 || 	inc	e                          ; 0404C9 || 0404D9 1C          1291  			INC     E
	jr	nz,$-$09                    ; 0404DA || 	jr	nz,$-$09                    ; 0404CA || 0404DA 20 F5       1292  			JR      NZ,LOADS2
	ret                            ; 0404DC || 	ret                            ; 0404CC || 0404DC C9          1293  			RET                     	; Return null string
	call	$043f2d                   ; 0404DD || 	call	$043ecc                   ; 0404CD || 0404DD CD 2D 3F 04 1322  POS:			CALL    GETCSR			; Return the horizontal cursor position
	ex	de,hl                       ; 0404E1 || 	ex	de,hl                       ; 0404D1 || 0404E1 EB          1323  			EX      DE,HL			;  L: The X cursor position
	jp	$040591                     ; 0404E2 || 	jp	$040581                     ; 0404D2 || 0404E2 C3 91 05 04 1324  			JP      COUNT1			; Return an 8-bit value
	call	$043f2d                   ; 0404E6 || 	call	$043ecc                   ; 0404D6 || 0404E6 CD 2D 3F 04 1326  VPOS:			CALL    GETCSR			; Return the vertical cursor position
	jp	$040591                     ; 0404EA || 	jp	$040581                     ; 0404DA || 0404EA C3 91 05 04 1327  			JP      COUNT1			; Return an 8-bit value
	call	$0418c3                   ; 0404EE || 	call	$041886                   ; 0404DE || 0404EE CD C3 18 04 1329  EOF:			CALL    CHANEL			; Check for EOF
	call	$0443b6                   ; 0404F2 || 	call	$044344                   ; 0404E2 || 0404F2 CD B6 43 04 1330  			CALL    OSSTAT
	jp	z,$040615                   ; 0404F6 || 	jp	z,$040605                   ; 0404E6 || 0404F6 CA 15 06 04 1331  			JP      Z,TRUE			; Yes, so return true
	jp	$0409a3                     ; 0404FA || 	jp	$040993                     ; 0404EA || 0404FA C3 A3 09 04 1332  			JP      ZERO			; Otherwise return false (zero)
	call	$0418c3                   ; 0404FE || 	call	$041886                   ; 0404EE || 0404FE CD C3 18 04 1334  BGET:			CALL    CHANEL          	; Channel number
	call	$0443a5                   ; 040502 || 	call	$044333                   ; 0404F2 || 040502 CD A5 43 04 1335  			CALL    OSBGET
	ld	l,a                         ; 040506 || 	ld	l,a                         ; 0404F6 || 040506 6F          1336  			LD      L,A
	jp	$04058f                     ; 040507 || 	jp	$04057f                     ; 0404F7 || 040507 C3 8F 05 04 1337  			JP      COUNT0			; Return an 8-bit value
	call	$040335                   ; 04050B || 	call	$040325                   ; 0404FB || 04050B CD 35 03 04 1339  INKEY:			CALL    ITEMI			; Get the argument
	bit	7,h                        ; 04050F || 	bit	7,h                        ; 0404FF || 04050F CB 7C       1340  			BIT	7, H			; Check the sign
	exx                            ; 040511 || 	exx                            ; 040501 || 040511 D9          1341  			EXX				; HL: The argument
	jp	nz,$0407fb                  ; 040512 || 	jp	nz,$0407eb                  ; 040502 || 040512 C2 FB 07 04 1342  			JP	NZ, INKEYM		; It's negative, so do INKEY(-n)
	call	$0407ed                   ; 040516 || 	call	$0407dd                   ; 040506 || 040516 CD ED 07 04 1343  			CALL	INKEY0 			; Do INKEY(n)
	jr	$+$1f                       ; 04051A || 	jr	$+$1f                       ; 04050A || 04051A 18 1D       1344  			JR      ASC0			; Return a numeric value
	call	$040a83                   ; 04051C || 	call	$040a70                   ; 04050C || 04051C CD 83 0A 04 1346  GET:			CALL    NXT			; Skip whitespace
	cp	$28                         ; 040520 || 	cp	$28                         ; 040510 || 040520 FE 28       1347  			CP      '('			; Is it GET(
	jr	nz,$+$0d                    ; 040522 || 	jr	nz,$+$0d                    ; 040512 || 040522 20 0B       1348  			JR      NZ,GET0			; No, so get a keyboard character
	call	$040335                   ; 040524 || 	call	$040325                   ; 040514 || 040524 CD 35 03 04 1349  			CALL    ITEMI           	; Yes, so fetch the port address
	exx                            ; 040528 || 	exx                            ; 040518 || 040528 D9          1350  			EXX
	ld	b,h                         ; 040529 || 	ld	b,h                         ; 040519 || 040529 44          1351  			LD      B,H			; BC: The port address
	ld	c,l                         ; 04052A || 	ld	c,l                         ; 04051A || 04052A 4D          1352  			LD      C,L
	in	l,(bc)                      ; 04052B || 	in	l,(bc)                      ; 04051B || 04052B ED 68       1353  			IN      L,(C)           	;  L: Input from port BC
	jr	$+$62                       ; 04052D || 	jr	$+$62                       ; 04051D || 04052D 18 60       1354  			JR      COUNT0			; Return an 8-bit value
	call	$0407d7                   ; 04052F || 	call	$0407c7                   ; 04051F || 04052F CD D7 07 04 1356  GET0:			CALL    GETS			; Read the keyboard character
	jr	$+$0c                       ; 040533 || 	jr	$+$0c                       ; 040523 || 040533 18 0A       1357  			JR      ASC1			; And return the value
	call	$040340                   ; 040535 || 	call	$040330                   ; 040525 || 040535 CD 40 03 04 1359  ASC:			CALL    ITEMS			; Get the string argument argument
	xor	a                          ; 040539 || 	xor	a                          ; 040529 || 040539 AF          1360  ASC0:			XOR     A			; Quickly check the length of the string in ACCS
	cp	e                           ; 04053A || 	cp	e                           ; 04052A || 04053A BB          1361  			CP      E			; Is the pointer 0
	jp	z,$040615                   ; 04053B || 	jp	z,$040605                   ; 04052B || 04053B CA 15 06 04 1362  			JP      Z,TRUE          	; Yes, so return -1 as it is a null string
	ld	hl,($044a00)                ; 04053F || 	ld	hl,($044a00)                ; 04052F || 04053F 2A 00 4A 04 1363  ASC1:			LD      HL,(ACCS)		;  L: The first character (H will be discarded in COUNT0
	jr	$+$4c                       ; 040543 || 	jr	$+$4c                       ; 040533 || 040543 18 4A       1364  			JR      COUNT0			; An 8-bit value
	call	$040340                   ; 040545 || 	call	$040330                   ; 040535 || 040545 CD 40 03 04 1366  LEN:			CALL    ITEMS			; Get the string argument
	ex	de,hl                       ; 040549 || 	ex	de,hl                       ; 040539 || 040549 EB          1367  			EX      DE,HL			; HL: Pointer into ACCS
	jr	$+$45                       ; 04054A || 	jr	$+$45                       ; 04053A || 04054A 18 43       1368  			JR      COUNT0			; Return L
	ld	hl,($044d1a)                ; 04054C || 	ld	hl,($044d1a)                ; 04053C || 04054C 2A 1A 4D 04 1370  LOMEMV:			LD      HL,(LOMEM)		; Return the LOMEM system variable
	ld	a,($044d1c)                 ; 040550 || 	ld	a,($044d1c)                 ; 040540 || 040550 3A 1C 4D 04 1371  			LD	A, (LOMEM+2)
	jr	$+$43                       ; 040554 || 	jr	$+$43                       ; 040544 || 040554 18 41       1372  			JR      COUNT2			; A 24-bit value
	ld	hl,($044d20)                ; 040556 || 	ld	hl,($044d20)                ; 040546 || 040556 2A 20 4D 04 1374  HIMEMV:			LD      HL,(HIMEM)		; Return the HIMEM system variable
	ld	a,($044d22)                 ; 04055A || 	ld	a,($044d22)                 ; 04054A || 04055A 3A 22 4D 04 1375  			LD	A, (HIMEM+2)
	jr	$+$39                       ; 04055E || 	jr	$+$39                       ; 04054E || 04055E 18 37       1376  			JR      COUNT2			; A 24-bit value
	ld	hl,($044d14)                ; 040560 || 	ld	hl,($044d14)                ; 040550 || 040560 2A 14 4D 04 1378  PAGEV:			LD    	HL,(PAGE_)		; Return the PAGE system variable
	ld	a,($044d16)                 ; 040564 || 	ld	a,($044d16)                 ; 040554 || 040564 3A 16 4D 04 1379  			LD	A, (PAGE_+2)		; A 24-bit value
	jr	$+$2f                       ; 040568 || 	jr	$+$2f                       ; 040558 || 040568 18 2D       1380  			JR      COUNT2
	ld	a,(iy)                      ; 04056A || 	ld	a,(iy)                      ; 04055A || 04056A FD 7E 00    1382  TOPV:			LD      A,(IY)			; Return the TOP system variable
	inc	iy                         ; 04056D || 	inc	iy                         ; 04055D || 04056D FD 23       1383  			INC     IY              	; Skip "P"
	cp	$50                         ; 04056F || 	cp	$50                         ; 04055F || 04056F FE 50       1384  			CP      'P'
	jp	nz,$040caa                  ; 040571 || 	jp	nz,$040c97                  ; 040561 || 040571 C2 AA 0C 04 1385  			JP      NZ,SYNTAX       	; Throw "Syntax Error"
	ld	hl,($044d17)                ; 040575 || 	ld	hl,($044d17)                ; 040565 || 040575 2A 17 4D 04 1386  			LD      HL,(TOP)
	ld	a,($044d19)                 ; 040579 || 	ld	a,($044d19)                 ; 040569 || 040579 3A 19 4D 04 1387  			LD	A, (TOP+2)
	jr	$+$1a                       ; 04057D || 	jr	$+$1a                       ; 04056D || 04057D 18 18       1388  			JR      COUNT2
	ld	hl,($044d33)                ; 04057F || 	ld	hl,($044d33)                ; 04056F || 04057F 2A 33 4D 04 1390  ERLV:			LD      HL,(ERL)		; Return the error line
	jr	$+$0e                       ; 040583 || 	jr	$+$0e                       ; 040573 || 040583 18 0C       1391  			JR      COUNT1			; A 16-bit value
	ld	hl,($044d3f)                ; 040585 || 	ld	hl,($044d3f)                ; 040575 || 040585 2A 3F 4D 04 1393  ERRV:			LD      HL,(ERR)		; Return the error value
	jr	$+$06                       ; 040589 || 	jr	$+$06                       ; 040579 || 040589 18 04       1394  			JR      COUNT0			; An 8-bit value
	ld	hl,($044d3d)                ; 04058B || 	ld	hl,($044d3d)                ; 04057B || 04058B 2A 3D 4D 04 1396  COUNTV:			LD      HL,(COUNT)		; Return the print position sysvar
	ld	h,$00                       ; 04058F || 	ld	h,$00                       ; 04057F || 04058F 26 00       1398  COUNT0:			LD      H,0			; Return L
	exx                            ; 040591 || 	exx                            ; 040581 || 040591 D9          1399  COUNT1:			EXX				; Return HL
	xor	a                          ; 040592 || 	xor	a                          ; 040582 || 040592 AF          1400  			XOR     A
	ld	c,a                         ; 040593 || 	ld	c,a                         ; 040583 || 040593 4F          1401  			LD      C,A             	; Integer marker
	ld	h,a                         ; 040594 || 	ld	h,a                         ; 040584 || 040594 67          1402  			LD      H,A
	ld	l,a                         ; 040595 || 	ld	l,a                         ; 040585 || 040595 6F          1403  			LD      L,A
	ret                            ; 040596 || 	ret                            ; 040586 || 040596 C9          1404  			RET
	exx                            ; 040597 || 	exx                            ; 040587 || 040597 D9          1405  COUNT2:			EXX
	ld	l,a                         ; 040598 || 	ld	l,a                         ; 040588 || 040598 6F          1406  			LD	L,A
	xor	a                          ; 040599 || 	xor	a                          ; 040589 || 040599 AF          1407  			XOR	A
	ld	c,a                         ; 04059A || 	ld	c,a                         ; 04058A || 04059A 4F          1408  			LD	C,A			; Integer marker
	ld	h,a                         ; 04059B || 	ld	h,a                         ; 04058B || 04059B 67          1409  			LD	H,A
	ret                            ; 04059C || 	ret                            ; 04058C || 04059C C9          1410  			RET
	xor	a                          ; 04059D || 	xor	a                          ; 04058D || 04059D AF          1417  OPENOT:			XOR     A			; Open for writing
	jr	$+$08                       ; 04059E || 	jr	$+$08                       ; 04058E || 04059E 18 06       1418  			JR	OPENIN_1
	ld	a,$02                       ; 0405A0 || 	ld	a,$02                       ; 040590 || 0405A0 3E 02       1420  OPENUP:			LD      A,2			; Open for reading / writing
	jr	$+$04                       ; 0405A2 || 	jr	$+$04                       ; 040592 || 0405A2 18 02       1421  			JR	OPENIN_1
	ld	a,$01                       ; 0405A4 || 	ld	a,$01                       ; 040594 || 0405A4 3E 01       1423  OPENIN:			LD      A,1			; Open for reading
	push	af                        ; 0405A6 || 	push	af                        ; 040596 || 0405A6 F5          1425  OPENIN_1:		PUSH    AF              	; Save OPEN type
	call	$040340                   ; 0405A7 || 	call	$040330                   ; 040597 || 0405A7 CD 40 03 04 1426  			CALL    ITEMS           	; Fetch the filename
	ld	a,$0d                       ; 0405AB || 	ld	a,$0d                       ; 04059B || 0405AB 3E 0D       1427  			LD      A,CR
	ld	(de),a                      ; 0405AD || 	ld	(de),a                      ; 04059D || 0405AD 12          1428  			LD      (DE),A
	pop	af                         ; 0405AE || 	pop	af                         ; 04059E || 0405AE F1          1429  			POP     AF              	; Restore the OPEN type
	add	a,$ff                      ; 0405AF || 	add	a,$ff                      ; 04059F || 0405AF C6 FF       1430  			ADD     A,-1            	; Affect the flags
	ld	hl,$044a00                  ; 0405B1 || 	ld	hl,$044a00                  ; 0405A1 || 0405B1 21 00 4A 04 1431  			LD      HL,ACCS
	call	$04438e                   ; 0405B5 || 	call	$04431c                   ; 0405A5 || 0405B5 CD 8E 43 04 1432  			CALL    OSOPEN			; Call the OS specific OPEN routine in patch.asm
	ld	l,a                         ; 0405B9 || 	ld	l,a                         ; 0405A9 || 0405B9 6F          1433  			LD      L,A			; L: Channel number
	jr	$-$2b                       ; 0405BA || 	jr	$-$2b                       ; 0405AA || 0405BA 18 D3       1434  			JR      COUNT0			; Return channel number to BASIC
	call	$0418c3                   ; 0405BC || 	call	$041886                   ; 0405AC || 0405BC CD C3 18 04 1440  EXT:			CALL    CHANEL
	call	$0443ec                   ; 0405C0 || 	call	$04437a                   ; 0405B0 || 0405C0 CD EC 43 04 1441  			CALL    GETEXT
	jr	$+$17                       ; 0405C4 || 	jr	$+$17                       ; 0405B4 || 0405C4 18 15       1442  			JR      TIME0
	call	$0418c3                   ; 0405C6 || 	call	$041886                   ; 0405B6 || 0405C6 CD C3 18 04 1444  PTR_EV:			CALL    CHANEL
	call	$0443c0                   ; 0405CA || 	call	$04434e                   ; 0405BA || 0405CA CD C0 43 04 1445  			CALL    GETPTR
	jr	$+$0d                       ; 0405CE || 	jr	$+$0d                       ; 0405BE || 0405CE 18 0B       1446  			JR      TIME0
	ld	a,(iy)                      ; 0405D0 || 	ld	a,(iy)                      ; 0405C0 || 0405D0 FD 7E 00    1451  TIMEV:			LD      A,(IY)
	cp	$24                         ; 0405D3 || 	cp	$24                         ; 0405C3 || 0405D3 FE 24       1452  			CP      '$'
	jr	z,$+$0c                     ; 0405D5 || 	jr	z,$+$0c                     ; 0405C5 || 0405D5 28 0A       1453  			JR      Z,TIMEVS
	call	$043f0d                   ; 0405D7 || 	call	$043eac                   ; 0405C7 || 0405D7 CD 0D 3F 04 1454  			CALL    GETIME
	push	de                        ; 0405DB || 	push	de                        ; 0405CB || 0405DB D5          1455  TIME0:			PUSH    DE
	exx                            ; 0405DC || 	exx                            ; 0405CC || 0405DC D9          1456  			EXX
	pop	hl                         ; 0405DD || 	pop	hl                         ; 0405CD || 0405DD E1          1457  			POP     HL
	xor	a                          ; 0405DE || 	xor	a                          ; 0405CE || 0405DE AF          1458  			XOR     A
	ld	c,a                         ; 0405DF || 	ld	c,a                         ; 0405CF || 0405DF 4F          1459  			LD      C,A
	ret                            ; 0405E0 || 	ret                            ; 0405D0 || 0405E0 C9          1460  			RET
	inc	iy                         ; 0405E1 || 	inc	iy                         ; 0405D1 || 0405E1 FD 23       1465  TIMEVS:			INC     IY              ;SKIP $
	call	$044405                   ; 0405E3 || 	call	$044393                   ; 0405D3 || 0405E3 CD 05 44 04 1466  			CALL    GETIMS
	ld	a,$80                       ; 0405E7 || 	ld	a,$80                       ; 0405D7 || 0405E7 3E 80       1467  			LD      A,80H           ;MARK STRING
	ret                            ; 0405E9 || 	ret                            ; 0405D9 || 0405E9 C9          1468  			RET
	call	$04099f                   ; 0405EA || 	call	$04098f                   ; 0405DA || 0405EA CD 9F 09 04 1472  SLT:			CALL    SCP
	ret	nc                         ; 0405EE || 	ret	nc                         ; 0405DE || 0405EE D0          1473  			RET     NC
	jr	$+$26                       ; 0405EF || 	jr	$+$26                       ; 0405DF || 0405EF 18 24       1474  			JR      TRUE
	call	$04099f                   ; 0405F1 || 	call	$04098f                   ; 0405E1 || 0405F1 CD 9F 09 04 1476  SGT:			CALL    SCP
	ret	z                          ; 0405F5 || 	ret	z                          ; 0405E5 || 0405F5 C8          1477  			RET     Z
	ret	c                          ; 0405F6 || 	ret	c                          ; 0405E6 || 0405F6 D8          1478  			RET     C
	jr	$+$1e                       ; 0405F7 || 	jr	$+$1e                       ; 0405E7 || 0405F7 18 1C       1479  			JR      TRUE
	call	$04099f                   ; 0405F9 || 	call	$04098f                   ; 0405E9 || 0405F9 CD 9F 09 04 1481  SGE:			CALL    SCP
	ret	c                          ; 0405FD || 	ret	c                          ; 0405ED || 0405FD D8          1482  			RET     C
	jr	$+$17                       ; 0405FE || 	jr	$+$17                       ; 0405EE || 0405FE 18 15       1483  			JR      TRUE
	call	$04099f                   ; 040600 || 	call	$04098f                   ; 0405F0 || 040600 CD 9F 09 04 1485  SLE:			CALL    SCP
	jr	z,$+$11                     ; 040604 || 	jr	z,$+$11                     ; 0405F4 || 040604 28 0F       1486  			JR      Z,TRUE
	ret	nc                         ; 040606 || 	ret	nc                         ; 0405F6 || 040606 D0          1487  			RET     NC
	jr	$+$0e                       ; 040607 || 	jr	$+$0e                       ; 0405F7 || 040607 18 0C       1488  			JR      TRUE
	call	$04099f                   ; 040609 || 	call	$04098f                   ; 0405F9 || 040609 CD 9F 09 04 1490  SNE:			CALL    SCP
	ret	z                          ; 04060D || 	ret	z                          ; 0405FD || 04060D C8          1491  			RET     Z
	jr	$+$07                       ; 04060E || 	jr	$+$07                       ; 0405FE || 04060E 18 05       1492  			JR      TRUE
	call	$04099f                   ; 040610 || 	call	$04098f                   ; 040600 || 040610 CD 9F 09 04 1494  SEQ:			CALL    SCP
	ret	nz                         ; 040614 || 	ret	nz                         ; 040604 || 040614 C0          1495  			RET     NZ
	ld	a,$ff                       ; 040615 || 	ld	a,$ff                       ; 040605 || 040615 3E FF       1496  TRUE:			LD      A,-1
	exx                            ; 040617 || 	exx                            ; 040607 || 040617 D9          1497  			EXX
	ld	h,a                         ; 040618 || 	ld	h,a                         ; 040608 || 040618 67          1498  			LD      H,A
	ld	l,a                         ; 040619 || 	ld	l,a                         ; 040609 || 040619 6F          1499  			LD      L,A
	exx                            ; 04061A || 	exx                            ; 04060A || 04061A D9          1500  			EXX
	ld	h,a                         ; 04061B || 	ld	h,a                         ; 04060B || 04061B 67          1501  			LD      H,A
	ld	l,a                         ; 04061C || 	ld	l,a                         ; 04060C || 04061C 6F          1502  			LD      L,A
	inc	a                          ; 04061D || 	inc	a                          ; 04060D || 04061D 3C          1503  			INC     A
	ld	c,a                         ; 04061E || 	ld	c,a                         ; 04060E || 04061E 4F          1504  			LD      C,A
	ret                            ; 04061F || 	ret                            ; 04060F || 04061F C9          1505  			RET
	ld	a,$23                       ; 040620 || 	ld	a,$23                       ; 040610 || 040620 3E 23       1510  PI:			LD      A,35
	jr	$+$46                       ; 040622 || 	jr	$+$46                       ; 040612 || 040622 18 44       1511  			JR      FPP1
	ld	a,$10                       ; 040624 || 	ld	a,$10                       ; 040614 || 040624 3E 10       1516  ABSV:			LD      A,16
	jr	$+$3c                       ; 040626 || 	jr	$+$3c                       ; 040616 || 040626 18 3A       1517  			JR      FPPN
	ld	a,$1a                       ; 040628 || 	ld	a,$1a                       ; 040618 || 040628 3E 1A       1522  NOTK:			LD      A,26
	jr	$+$38                       ; 04062A || 	jr	$+$38                       ; 04061A || 04062A 18 36       1523  			JR      FPPN
	ld	a,$15                       ; 04062C || 	ld	a,$15                       ; 04061C || 04062C 3E 15       1528  DEG:			LD      A,21
	jr	$+$34                       ; 04062E || 	jr	$+$34                       ; 04061E || 04062E 18 32       1529  			JR      FPPN
	ld	a,$1b                       ; 040630 || 	ld	a,$1b                       ; 040620 || 040630 3E 1B       1534  RAD:			LD      A,27
	jr	$+$30                       ; 040632 || 	jr	$+$30                       ; 040622 || 040632 18 2E       1535  			JR      FPPN
	ld	a,$1c                       ; 040634 || 	ld	a,$1c                       ; 040624 || 040634 3E 1C       1540  SGN:			LD      A,28
	jr	$+$2c                       ; 040636 || 	jr	$+$2c                       ; 040626 || 040636 18 2A       1541  			JR      FPPN
	ld	a,$17                       ; 040638 || 	ld	a,$17                       ; 040628 || 040638 3E 17       1546  INT_:			LD      A,23
	jr	$+$28                       ; 04063A || 	jr	$+$28                       ; 04062A || 04063A 18 26       1547  			JR      FPPN
	ld	a,$1e                       ; 04063C || 	ld	a,$23                       ; 040610 || 04063C 3E 1E       1552  SQR:			LD      A,30
	jr	$+$24                       ; 04063E || 	jr	$+$46                       ; 040612 || 04063E 18 22       1553  			JR      FPPN
	ld	a,$1f                       ; 040640 || 	ld	a,$10                       ; 040614 || 040640 3E 1F       1558  TAN:			LD      A,31
	jr	$+$20                       ; 040642 || 	jr	$+$3c                       ; 040616 || 040642 18 1E       1559  			JR      FPPN
	ld	a,$14                       ; 040644 || 	ld	a,$1a                       ; 040618 || 040644 3E 14       1564  COS:			LD      A,20
	jr	$+$1c                       ; 040646 || 	jr	$+$38                       ; 04061A || 040646 18 1A       1565  			JR      FPPN
	ld	a,$1d                       ; 040648 || 	ld	a,$15                       ; 04061C || 040648 3E 1D       1570  SIN:			LD      A,29
	jr	$+$18                       ; 04064A || 	jr	$+$34                       ; 04061E || 04064A 18 16       1571  			JR      FPPN
	ld	a,$16                       ; 04064C || 	ld	a,$1b                       ; 040620 || 04064C 3E 16       1576  EXP:			LD      A,22
	jr	$+$14                       ; 04064E || 	jr	$+$30                       ; 040622 || 04064E 18 12       1577  			JR      FPPN
	ld	a,$18                       ; 040650 || 	ld	a,$1c                       ; 040624 || 040650 3E 18       1582  LN:			LD      A,24
	jr	$+$10                       ; 040652 || 	jr	$+$2c                       ; 040626 || 040652 18 0E       1583  			JR      FPPN
	ld	a,$19                       ; 040654 || 	ld	a,$17                       ; 040628 || 040654 3E 19       1588  LOG:			LD      A,25
	jr	$+$0c                       ; 040656 || 	jr	$+$28                       ; 04062A || 040656 18 0A       1589  			JR      FPPN
	ld	a,$12                       ; 040658 || 	ld	a,$1e                       ; 04062C || 040658 3E 12       1594  ASN:			LD      A,18
	jr	$+$08                       ; 04065A || 	jr	$+$24                       ; 04062E || 04065A 18 06       1595  			JR      FPPN
	ld	a,$13                       ; 04065C || 	ld	a,$13                       ; 04064C || 04065C 3E 13       1600  ATN:			LD      A,19
	jr	$+$04                       ; 04065E || 	jr	$+$04                       ; 04064E || 04065E 18 02       1601  			JR      FPPN
	ld	a,$11                       ; 040660 || 	ld	a,$11                       ; 040650 || 040660 3E 11       1606  ACS:			LD      A,17
	push	af                        ; 040662 || 	push	af                        ; 040652 || 040662 F5          1607  FPPN:			PUSH    AF
	call	$04032d                   ; 040663 || 	call	$04031d                   ; 040653 || 040663 CD 2D 03 04 1608  			CALL    ITEMN
	pop	af                         ; 040667 || 	pop	af                         ; 040657 || 040667 F1          1609  			POP     AF
	call	$0420ad                   ; 040668 || 	call	$04206a                   ; 040658 || 040668 CD AD 20 04 1610  FPP1:			CALL    FPP
	jp	c,$0437c1                   ; 04066C || 	jp	c,$043760                   ; 04065C || 04066C DA C1 37 04 1611  			JP      C,ERROR_
	xor	a                          ; 040670 || 	xor	a                          ; 040660 || 040670 AF          1612  			XOR     A
	ret                            ; 040671 || 	ret                            ; 040661 || 040671 C9          1613  			RET
	ld	a,$26                       ; 040672 || 	ld	a,$26                       ; 040662 || 040672 3E 26       1617  SFIX:			LD      A,38
	jr	$-$0c                       ; 040674 || 	jr	$-$0c                       ; 040664 || 040674 18 F2       1618  			JR      FPP1
	ld	a,$27                       ; 040676 || 	ld	a,$27                       ; 040666 || 040676 3E 27       1622  SFLOAT:			LD      A,39
	jr	$-$10                       ; 040678 || 	jr	$-$10                       ; 040668 || 040678 18 EE       1623  			JR      FPP1
	call	$040340                   ; 04067A || 	call	$040330                   ; 04066A || 04067A CD 40 03 04 1628  VAL:			CALL    ITEMS
	xor	a                          ; 04067E || 	xor	a                          ; 04066E || 04067E AF          1629  VAL0:			XOR     A
	ld	(de),a                      ; 04067F || 	ld	(de),a                      ; 04066F || 04067F 12          1630  			LD      (DE),A
	ld	ix,$044a00                  ; 040680 || 	ld	ix,$044a00                  ; 040670 || 040680 DD 21 00 4A 1631  			LD      IX,ACCS
	ld	a,$24                       ; 040685 || 	ld	a,$24                       ; 040675 || 040685 3E 24       1632  			LD      A,36
	jr	$-$1f                       ; 040687 || 	jr	$-$1f                       ; 040677 || 040687 18 DF       1633  			JR      FPP1
	call	$040340                   ; 040689 || 	call	$040330                   ; 040679 || 040689 CD 40 03 04 1638  EVAL_:			CALL    ITEMS
	ld	a,$0d                       ; 04068D || 	ld	a,$0d                       ; 04067D || 04068D 3E 0D       1639  			LD      A,CR
	ld	(de),a                      ; 04068F || 	ld	(de),a                      ; 04067F || 04068F 12          1640  			LD      (DE),A
	push	iy                        ; 040690 || 	push	iy                        ; 040680 || 040690 FD E5       1641  			PUSH    IY
	ld	de,$044a00                  ; 040692 || 	ld	de,$044a00                  ; 040682 || 040692 11 00 4A 04 1642  			LD      DE,ACCS
	ld	iy,$044a00                  ; 040696 || 	ld	iy,$044a00                  ; 040686 || 040696 FD 21 00 4A 1643  			LD      IY,ACCS
	ld	c,$00                       ; 04069B || 	ld	c,$00                       ; 04068B || 04069B 0E 00       1644  			LD      C,0
	call	$043d00                   ; 04069D || 	call	$043c9f                   ; 04068D || 04069D CD 00 3D 04 1645  			CALL    LEXAN2          ;TOKENISE
	ld	(de),a                      ; 0406A1 || 	ld	(de),a                      ; 040691 || 0406A1 12          1646  			LD      (DE),A
	inc	de                         ; 0406A2 || 	inc	de                         ; 040692 || 0406A2 13          1647  			INC     DE
	xor	a                          ; 0406A3 || 	xor	a                          ; 040693 || 0406A3 AF          1648  			XOR     A
	call	$0409c4                   ; 0406A4 || 	call	$0409b4                   ; 040694 || 0406A4 CD C4 09 04 1649  			CALL    PUSHS           ;PUT ON STACK
	ld	iy,$000003                  ; 0406A8 || 	ld	iy,$000003                  ; 040698 || 0406A8 FD 21 03 00 1650  			LD      IY,SIZEW	;WAS 2
	add	iy,sp                      ; 0406AD || 	add	iy,sp                      ; 04069D || 0406AD FD 39       1651  			ADD     IY,SP
	call	$0401d2                   ; 0406AF || 	call	$0401c7                   ; 04069F || 0406AF CD D2 01 04 1652  			CALL    EXPR
	pop	iy                         ; 0406B3 || 	pop	iy                         ; 0406A3 || 0406B3 FD E1       1653  			POP     IY
	add	iy,sp                      ; 0406B5 || 	add	iy,sp                      ; 0406A5 || 0406B5 FD 39       1654  			ADD     IY,SP
	ld	sp,iy                       ; 0406B7 || 	ld	sp,iy                       ; 0406A7 || 0406B7 FD F9       1655  			LD      SP,IY           ;ADJUST STACK POINTER
	pop	iy                         ; 0406B9 || 	pop	iy                         ; 0406A9 || 0406B9 FD E1       1656  			POP     IY
	ex	af,af'                      ; 0406BB || 	ex	af,af'                      ; 0406AB || 0406BB 08          1657  			EX      AF,AF'
	ret                            ; 0406BC || 	ret                            ; 0406AC || 0406BC C9          1658  			RET
	ld	ix,$044d38                  ; 0406BD || 	ld	ix,$044d38                  ; 0406AD || 0406BD DD 21 38 4D 1667  RND:			LD      IX,RANDOM
	call	$040a83                   ; 0406C2 || 	call	$040a70                   ; 0406B2 || 0406C2 CD 83 0A 04 1668  			CALL    NXT
	cp	$28                         ; 0406C6 || 	cp	$28                         ; 0406B6 || 0406C6 FE 28       1669  			CP      '('
	jr	z,$+$22                     ; 0406C8 || 	jr	z,$+$22                     ; 0406B8 || 0406C8 28 20       1670  			JR      Z,RND5          ;ARGUMENT FOLLOWS
	call	$04042f                   ; 0406CA || 	call	$04041f                   ; 0406BA || 0406CA CD 2F 04 04 1671  			CALL    LOAD5
	rr	c                           ; 0406CE || 	rr	c                           ; 0406BE || 0406CE CB 19       1672  RND1:			RR      C
	ld	b,$20                       ; 0406D0 || 	ld	b,$20                       ; 0406C0 || 0406D0 06 20       1673  			LD      B,32
	exx                            ; 0406D2 || 	exx                            ; 0406C2 || 0406D2 D9          1674  RND2:			EXX                     ;CALCULATE NEXT
	adc.sil	hl,hl                  ; 0406D3 || 	adc.sil	hl,hl                  ; 0406C3 || 0406D3 52 ED 6A    1675  			ADC.S   HL,HL
	exx                            ; 0406D6 || 	exx                            ; 0406C6 || 0406D6 D9          1676  			EXX
	adc.sil	hl,hl                  ; 0406D7 || 	adc.sil	hl,hl                  ; 0406C7 || 0406D7 52 ED 6A    1677  			ADC.S   HL,HL
	bit	3,l                        ; 0406DA || 	bit	3,l                        ; 0406CA || 0406DA CB 5D       1678  			BIT     3,L
	jr	z,$+$03                     ; 0406DC || 	jr	z,$+$03                     ; 0406CC || 0406DC 28 01       1679  			JR      Z,RND3
	ccf                            ; 0406DE || 	ccf                            ; 0406CE || 0406DE 3F          1680  			CCF
	djnz	$-$0d                     ; 0406DF || 	djnz	$-$0d                     ; 0406CF || 0406DF 10 F1       1681  RND3:			DJNZ    RND2
	rl	c                           ; 0406E1 || 	rl	c                           ; 0406D1 || 0406E1 CB 11       1682  RND4:			RL      C               ;SAVE CARRY
	call	$041618                   ; 0406E3 || 	call	$0415db                   ; 0406D3 || 0406E3 CD 18 16 04 1683  			CALL    STORE5          ;STORE NEW NUMBER
	xor	a                          ; 0406E7 || 	xor	a                          ; 0406D7 || 0406E7 AF          1684  			XOR     A
	ld	c,a                         ; 0406E8 || 	ld	c,a                         ; 0406D8 || 0406E8 4F          1685  			LD      C,A
	ret                            ; 0406E9 || 	ret                            ; 0406D9 || 0406E9 C9          1686  			RET
	call	$040335                   ; 0406EA || 	call	$040325                   ; 0406DA || 0406EA CD 35 03 04 1687  RND5:			CALL    ITEMI
	ld	ix,$044d38                  ; 0406EE || 	ld	ix,$044d38                  ; 0406DE || 0406EE DD 21 38 4D 1688  			LD      IX,RANDOM
	bit	7,h                        ; 0406F3 || 	bit	7,h                        ; 0406E3 || 0406F3 CB 7C       1689  			BIT     7,H             ;NEGATIVE?
	scf                            ; 0406F5 || 	scf                            ; 0406E5 || 0406F5 37          1690  			SCF
	jr	nz,$-$15                    ; 0406F6 || 	jr	nz,$-$15                    ; 0406E6 || 0406F6 20 E9       1691  			JR      NZ,RND4         ;SEED
	call	$0408ef                   ; 0406F8 || 	call	$0408df                   ; 0406E8 || 0406F8 CD EF 08 04 1692  			CALL    TEST
	push	af                        ; 0406FC || 	push	af                        ; 0406EC || 0406FC F5          1693  			PUSH    AF
	call	$0408e7                   ; 0406FD || 	call	$0408d7                   ; 0406ED || 0406FD CD E7 08 04 1694  			CALL    SWAP
	exx                            ; 040701 || 	exx                            ; 0406F1 || 040701 D9          1695  			EXX
	call	$04042f                   ; 040702 || 	call	$04041f                   ; 0406F2 || 040702 CD 2F 04 04 1696  			CALL    LOAD5
	call	nz,$0406ce                ; 040706 || 	call	nz,$0406be                ; 0406F6 || 040706 C4 CE 06 04 1697  			CALL    NZ,RND1         ;NEXT IF NON-ZERO
	exx                            ; 04070A || 	exx                            ; 0406FA || 04070A D9          1698  			EXX                     ;SCRAMBLE (CARE!)
	ld	c,$7f                       ; 04070B || 	ld	c,$7f                       ; 0406FB || 04070B 0E 7F       1699  			LD      C,7FH
	bit	7,h                        ; 04070D || 	bit	7,h                        ; 0406FD || 04070D CB 7C       1700  RND6:			BIT     7,H             ;FLOAT
	jr	nz,$+$0c                    ; 04070F || 	jr	nz,$+$0c                    ; 0406FF || 04070F 20 0A       1701  			JR      NZ,RND7
	exx                            ; 040711 || 	exx                            ; 040701 || 040711 D9          1702  			EXX
	add.sil	hl,hl                  ; 040712 || 	add.sil	hl,hl                  ; 040702 || 040712 52 29       1703  			ADD.S   HL,HL
	exx                            ; 040714 || 	exx                            ; 040704 || 040714 D9          1704  			EXX
	adc.sil	hl,hl                  ; 040715 || 	adc.sil	hl,hl                  ; 040705 || 040715 52 ED 6A    1705  			ADC.S   HL,HL
	dec	c                          ; 040718 || 	dec	c                          ; 040708 || 040718 0D          1706  			DEC     C
	jr	nz,$-$0c                    ; 040719 || 	jr	nz,$-$0c                    ; 040709 || 040719 20 F2       1707  			JR      NZ,RND6
	res	7,h                        ; 04071B || 	res	7,h                        ; 04070B || 04071B CB BC       1708  RND7:			RES     7,H             ;POSITIVE 0-0.999999
	pop	af                         ; 04071D || 	pop	af                         ; 04070D || 04071D F1          1709  			POP     AF
	ret	z                          ; 04071E || 	ret	z                          ; 04070E || 04071E C8          1710  			RET     Z               ;ZERO ARGUMENT
	exx                            ; 04071F || 	exx                            ; 04070F || 04071F D9          1711  			EXX
	ld	a,e                         ; 040720 || 	ld	a,e                         ; 040710 || 040720 7B          1712  			LD      A,E
	dec	a                          ; 040721 || 	dec	a                          ; 040711 || 040721 3D          1713  			DEC     A
	or	d                           ; 040722 || 	or	d                           ; 040712 || 040722 B2          1714  			OR      D
	exx                            ; 040723 || 	exx                            ; 040713 || 040723 D9          1715  			EXX
	or	e                           ; 040724 || 	or	e                           ; 040714 || 040724 B3          1716  			OR      E
	or	d                           ; 040725 || 	or	d                           ; 040715 || 040725 B2          1717  			OR      D
	ret	z                          ; 040726 || 	ret	z                          ; 040716 || 040726 C8          1718  			RET     Z               ;ARGUMENT=1
	ld	b,$00                       ; 040727 || 	ld	b,$00                       ; 040717 || 040727 06 00       1719  			LD      B,0             ;INTEGER MARKER
	ld	a,$0a                       ; 040729 || 	ld	a,$0a                       ; 040719 || 040729 3E 0A       1720  			LD      A,10
	call	$0420ad                   ; 04072B || 	call	$04206a                   ; 04071B || 04072B CD AD 20 04 1721  			CALL    FPP             ;MULTIPLY
	jp	c,$0437c1                   ; 04072F || 	jp	c,$043760                   ; 04071F || 04072F DA C1 37 04 1722  			JP      C,ERROR_
	call	$040672                   ; 040733 || 	call	$040662                   ; 040723 || 040733 CD 72 06 04 1723  			CALL    SFIX
	jp	$0403cb                     ; 040737 || 	jp	$0403bb                     ; 040727 || 040737 C3 CB 03 04 1724  			JP      ADD1
	call	$040a31                   ; 04073B || 	call	$040a1e                   ; 04072B || 04073B CD 31 0A 04 1729  INSTR:			CALL    EXPRSC			; Get the first string expression
	call	$0409c4                   ; 04073F || 	call	$0409b4                   ; 04072F || 04073F CD C4 09 04 1730  			CALL    PUSHS           	; Push the string onto the stack
	call	$040325                   ; 040743 || 	call	$040315                   ; 040733 || 040743 CD 25 03 04 1731  			CALL    EXPRS           	; Get the second string expression
	pop	bc                         ; 040747 || 	pop	bc                         ; 040737 || 040747 C1          1732  			POP     BC			;  C: String length, B: Value of A before PUSHS was called
	ld	hl,$000000                  ; 040748 || 	ld	hl,$000000                  ; 040738 || 040748 21 00 00 00 1733  			LD      HL,0
	add	hl,sp                      ; 04074C || 	add	hl,sp                      ; 04073C || 04074C 39          1734  			ADD     HL,SP           	; HL: Pointer to main string
	push	bc                        ; 04074D || 	push	bc                        ; 04073D || 04074D C5          1735  			PUSH    BC              	;  C: Main string length
	ld	b,e                         ; 04074E || 	ld	b,e                         ; 04073E || 04074E 43          1736  			LD      B,E             	;  B: Sub-string length
	call	$040a83                   ; 04074F || 	call	$040a70                   ; 04073F || 04074F CD 83 0A 04 1737  			CALL    NXT			; Skip whitespace
	cp	$2c                         ; 040753 || 	cp	$2c                         ; 040743 || 040753 FE 2C       1738  			CP      ','			; Check if there is a comma for the third parameter
	ld	a,$00                       ; 040755 || 	ld	a,$00                       ; 040745 || 040755 3E 00       1739  			LD      A,0			;  A: Default start position in string
	jr	nz,$+$1c                    ; 040757 || 	jr	nz,$+$1c                    ; 040747 || 040757 20 1A       1740  			JR      NZ,INSTR1		; No, so skip the next bit
	inc	iy                         ; 040759 || 	inc	iy                         ; 040749 || 040759 FD 23       1741  			INC     IY              	; Skip the comma
	push	bc                        ; 04075B || 	push	bc                        ; 04074B || 04075B C5          1742  			PUSH    BC              	; Save the lengths
	push	hl                        ; 04075C || 	push	hl                        ; 04074C || 04075C E5          1743  			PUSH    HL              	; Save the pointer to the main string
	call	$0409c4                   ; 04075D || 	call	$0409b4                   ; 04074D || 04075D CD C4 09 04 1744  			CALL    PUSHS			; Push the string onto the stack
	call	$04031a                   ; 040761 || 	call	$04030a                   ; 040751 || 040761 CD 1A 03 04 1745  			CALL    EXPRI			; Get the third (numeric) parameter - the starting position
	pop	bc                         ; 040765 || 	pop	bc                         ; 040755 || 040765 C1          1746  			POP     BC			;  C: String length, B: Value of A before PUSHS was called (discarded)
	call	$0409f1                   ; 040766 || 	call	$0409de                   ; 040756 || 040766 CD F1 09 04 1747  			CALL    POPS			; Pop the string off the stack
	pop	hl                         ; 04076A || 	pop	hl                         ; 04075A || 04076A E1          1748  			POP     HL              	; Restore the pointer to the main string
	pop	bc                         ; 04076B || 	pop	bc                         ; 04075B || 04076B C1          1749  			POP     BC              	; Restore the lengths
	exx                            ; 04076C || 	exx                            ; 04075C || 04076C D9          1750  			EXX
	ld	a,l                         ; 04076D || 	ld	a,l                         ; 04075D || 04076D 7D          1751  			LD      A,L			; A: The start position in the  string
	exx                            ; 04076E || 	exx                            ; 04075E || 04076E D9          1752  			EXX
	or	a                           ; 04076F || 	or	a                           ; 04075F || 04076F B7          1753  			OR      A			; Set the flags
	jr	z,$+$03                     ; 040770 || 	jr	z,$+$03                     ; 040760 || 040770 28 01       1754  			JR      Z,INSTR1		; If it is zero, then skip
	dec	a                          ; 040772 || 	dec	a                          ; 040762 || 040772 3D          1755  			DEC     A
	ld	de,$044a00                  ; 040773 || 	ld	de,$044a00                  ; 040763 || 040773 11 00 4A 04 1756  INSTR1:			LD      DE,ACCS         	; DE: Pointer to the sub string
	call	$040795                   ; 040777 || 	call	$040785                   ; 040767 || 040777 CD 95 07 04 1757  			CALL    SEARCH			; Do the search
	pop	de                         ; 04077B || 	pop	de                         ; 04076B || 04077B D1          1758  			POP     DE
	jr	z,$+$05                     ; 04077C || 	jr	z,$+$05                     ; 04076C || 04077C 28 03       1759  			JR      Z,INSTR2        	; NB: Carry cleared
	sbc	hl,hl                      ; 04077E || 	sbc	hl,hl                      ; 04076E || 04077E ED 62       1760  			SBC     HL,HL
	add	hl,sp                      ; 040780 || 	add	hl,sp                      ; 040770 || 040780 39          1761  			ADD     HL,SP
	sbc	hl,sp                      ; 040781 || 	sbc	hl,sp                      ; 040771 || 040781 ED 72       1762  INSTR2:			SBC     HL,SP
	ex	de,hl                       ; 040783 || 	ex	de,hl                       ; 040773 || 040783 EB          1763  			EX      DE,HL
	ld	a,l                         ; 040784 || 	ld	a,l                         ; 040774 || 040784 7D          1764  			LD	A,L
	ld	hl,$000000                  ; 040785 || 	ld	hl,$000000                  ; 040775 || 040785 21 00 00 00 1765  			LD      HL,0
	ld	l,a                         ; 040789 || 	ld	l,a                         ; 040779 || 040789 6F          1766  			LD	L,A
	add	hl,sp                      ; 04078A || 	add	hl,sp                      ; 04077A || 04078A 39          1767  			ADD     HL,SP
	ld	sp,hl                       ; 04078B || 	ld	sp,hl                       ; 04077B || 04078B F9          1768  			LD      SP,HL
	ex	de,hl                       ; 04078C || 	ex	de,hl                       ; 04077C || 04078C EB          1769  			EX      DE,HL
	call	$040a42                   ; 04078D || 	call	$040a2f                   ; 04077D || 04078D CD 42 0A 04 1770  			CALL    BRAKET			; Check for closing bracket
	jp	$040591                     ; 040791 || 	jp	$040581                     ; 040781 || 040791 C3 91 05 04 1771  			JP      COUNT1			; Return a numeric integer
	push	bc                        ; 040795 || 	push	bc                        ; 040785 || 040795 C5          1781  SEARCH:			PUSH    BC			; Add the starting offset to HL
	ld	bc,$000000                  ; 040796 || 	ld	bc,$000000                  ; 040786 || 040796 01 00 00 00 1782  			LD      BC,0
	ld	c,a                         ; 04079A || 	ld	c,a                         ; 04078A || 04079A 4F          1783  			LD      C,A
	add	hl,bc                      ; 04079B || 	add	hl,bc                      ; 04078B || 04079B 09          1784  			ADD     HL,BC           	; New start address
	pop	bc                         ; 04079C || 	pop	bc                         ; 04078C || 04079C C1          1785  			POP     BC
	sub	c                          ; 04079D || 	sub	c                          ; 04078D || 04079D 91          1786  			SUB     C			; If the starting offset > main string length, then do nothing
	jr	nc,$+$2e                    ; 04079E || 	jr	nc,$+$2e                    ; 04078E || 04079E 30 2C       1787  			JR      NC,SRCH4
	neg                            ; 0407A0 || 	neg                            ; 040790 || 0407A0 ED 44       1788  			NEG
	ld	c,a                         ; 0407A2 || 	ld	c,a                         ; 040792 || 0407A2 4F          1789  			LD      C,A             	; Remaining length
	push	bc                        ; 0407A3 || 	push	bc                        ; 040793 || 0407A3 C5          1791  SRCH1:			PUSH    BC
	ld	a,c                         ; 0407A4 || 	ld	a,c                         ; 040794 || 0407A4 79          1792  			LD	A,C
	ld	bc,$000000                  ; 0407A5 || 	ld	bc,$000000                  ; 040795 || 0407A5 01 00 00 00 1793  			LD	BC,0
	ld	c,a                         ; 0407A9 || 	ld	c,a                         ; 040799 || 0407A9 4F          1794  			LD	C,A
	ld	a,(de)                      ; 0407AA || 	ld	a,(de)                      ; 04079A || 0407AA 1A          1795  			LD      A,(DE)
	cpir                           ; 0407AB || 	cpir                           ; 04079B || 0407AB ED B1       1796  			CPIR                    	; Find the first character
	ld	a,c                         ; 0407AD || 	ld	a,c                         ; 04079D || 0407AD 79          1797  			LD      A,C
	pop	bc                         ; 0407AE || 	pop	bc                         ; 04079E || 0407AE C1          1798  			POP     BC
	jr	nz,$+$1d                    ; 0407AF || 	jr	nz,$+$1d                    ; 04079F || 0407AF 20 1B       1799  			JR      NZ,SRCH4
	ld	c,a                         ; 0407B1 || 	ld	c,a                         ; 0407A1 || 0407B1 4F          1800  			LD      C,A
	dec	b                          ; 0407B2 || 	dec	b                          ; 0407A2 || 0407B2 05          1804  			DEC     B			; Bug fix
	cp	b                           ; 0407B3 || 	cp	b                           ; 0407A3 || 0407B3 B8          1805  			CP      B			; Bug fix
	inc	b                          ; 0407B4 || 	inc	b                          ; 0407A4 || 0407B4 04          1806  			INC     B			; Bug fix
	jr	c,$+$17                     ; 0407B5 || 	jr	c,$+$17                     ; 0407A5 || 0407B5 38 15       1807  			JR      C,SRCH4			; Bug fix
	push	bc                        ; 0407B7 || 	push	bc                        ; 0407A7 || 0407B7 C5          1809  			PUSH    BC
	push	de                        ; 0407B8 || 	push	de                        ; 0407A8 || 0407B8 D5          1810  			PUSH    DE
	push	hl                        ; 0407B9 || 	push	hl                        ; 0407A9 || 0407B9 E5          1811  			PUSH    HL
	dec	b                          ; 0407BA || 	dec	b                          ; 0407AA || 0407BA 05          1812  			DEC     B
	jr	z,$+$0a                     ; 0407BB || 	jr	z,$+$0a                     ; 0407AB || 0407BB 28 08       1813  			JR      Z,SRCH3         	; Found!
	inc	de                         ; 0407BD || 	inc	de                         ; 0407AD || 0407BD 13          1814  SRCH2:			INC     DE
	ld	a,(de)                      ; 0407BE || 	ld	a,(de)                      ; 0407AE || 0407BE 1A          1815  			LD      A,(DE)
	cp	(hl)                        ; 0407BF || 	cp	(hl)                        ; 0407AF || 0407BF BE          1816  			CP      (HL)
	jr	nz,$+$05                    ; 0407C0 || 	jr	nz,$+$05                    ; 0407B0 || 0407C0 20 03       1817  			JR      NZ,SRCH3
	inc	hl                         ; 0407C2 || 	inc	hl                         ; 0407B2 || 0407C2 23          1818  			INC     HL
	djnz	$-$06                     ; 0407C3 || 	djnz	$-$06                     ; 0407B3 || 0407C3 10 F8       1819  			DJNZ    SRCH2
	pop	hl                         ; 0407C5 || 	pop	hl                         ; 0407B5 || 0407C5 E1          1820  SRCH3:			POP     HL
	pop	de                         ; 0407C6 || 	pop	de                         ; 0407B6 || 0407C6 D1          1821  			POP     DE
	pop	bc                         ; 0407C7 || 	pop	bc                         ; 0407B7 || 0407C7 C1          1822  			POP     BC
	jr	nz,$-$25                    ; 0407C8 || 	jr	nz,$-$25                    ; 0407B8 || 0407C8 20 D9       1823  			JR      NZ,SRCH1
	xor	a                          ; 0407CA || 	xor	a                          ; 0407BA || 0407CA AF          1824  			XOR     A               	; Flags: Z, NC
	ret                            ; 0407CB || 	ret                            ; 0407BB || 0407CB C9          1825  			RET                     	; Found
	or	$ff                         ; 0407CC || 	or	$ff                         ; 0407BC || 0407CC F6 FF       1827  SRCH4:			OR      0FFH            	; Flags: NZ, NC
	ret                            ; 0407CE || 	ret                            ; 0407BE || 0407CE C9          1828  			RET                     	; Not found
	call	$040335                   ; 0407CF || 	call	$040325                   ; 0407BF || 0407CF CD 35 03 04 1833  CHRS:			CALL    ITEMI
	exx                            ; 0407D3 || 	exx                            ; 0407C3 || 0407D3 D9          1834  			EXX
	ld	a,l                         ; 0407D4 || 	ld	a,l                         ; 0407C4 || 0407D4 7D          1835  			LD      A,L
	jr	$+$10                       ; 0407D5 || 	jr	$+$10                       ; 0407C5 || 0407D5 18 0E       1836  			JR      GET1
	call	$040a83                   ; 0407D7 || 	call	$040a70                   ; 0407C7 || 0407D7 CD 83 0A 04 1841  GETS:			CALL	NXT		;NEW CODE FOR GET$(X,Y)
	cp	$28                         ; 0407DB || 	cp	$28                         ; 0407CB || 0407DB FE 28       1842  			CP	'('
	jp	z,$044463                   ; 0407DD || 	jp	z,$0443fc                   ; 0407CD || 0407DD CA 63 44 04 1843  			JP	Z, GETSCHR	;CALL FUNCTION IN PATCH.Z80
	call	$043f8a                   ; 0407E1 || 	call	$043f29                   ; 0407D1 || 0407E1 CD 8A 3F 04 1844  			CALL    OSRDCH
	scf                            ; 0407E5 || 	scf                            ; 0407D5 || 0407E5 37          1845  GET1:			SCF
	jr	$+$0b                       ; 0407E6 || 	jr	$+$0b                       ; 0407D6 || 0407E6 18 09       1846  			JR      INKEY1
	call	$040335                   ; 0407E8 || 	call	$040325                   ; 0407D8 || 0407E8 CD 35 03 04 1853  INKEYS:			CALL    ITEMI			; Fetch the argument
	exx                            ; 0407EC || 	exx                            ; 0407DC || 0407EC D9          1854  			EXX
	call	$043f93                   ; 0407ED || 	call	$043f32                   ; 0407DD || 0407ED CD 93 3F 04 1855  INKEY0:			CALL    OSKEY			; This is the entry point for INKEY(n)
	ld	de,$044a00                  ; 0407F1 || 	ld	de,$044a00                  ; 0407E1 || 0407F1 11 00 4A 04 1856  INKEY1:			LD      DE,ACCS			; Store the result in the string accumulator
	ld	(de),a                      ; 0407F5 || 	ld	(de),a                      ; 0407E5 || 0407F5 12          1857  			LD      (DE),A
	ld	a,$80                       ; 0407F6 || 	ld	a,$80                       ; 0407E6 || 0407F6 3E 80       1858  			LD      A,80H
	ret	nc                         ; 0407F8 || 	ret	nc                         ; 0407E8 || 0407F8 D0          1859  			RET     NC
	inc	e                          ; 0407F9 || 	inc	e                          ; 0407E9 || 0407F9 1C          1860  			INC     E
	ret                            ; 0407FA || 	ret                            ; 0407EA || 0407FA C9          1861  			RET
	ld	a,$1e                       ; 0407FB || 	ld	a,$1e                       ; 0407EB || 0407FB 3E 1E       0001M 			LD	A, function
	rst.lis	$08                    ; 0407FD || 	rst.lis	$08                    ; 0407ED || 0407FD 49 CF       0002M 			RST.LIS	08h
	inc	hl                         ; 0407FF || 	inc	hl                         ; 0407EF || 0407FF 23          1867  			INC	HL			; Index from 0
	ld	a,l                         ; 040800 || 	ld	a,l                         ; 0407F0 || 040800 7D          1868  			LD	A, L			; Negate the LSB of the answer
	neg                            ; 040801 || 	neg                            ; 0407F1 || 040801 ED 44       1869  			NEG
	ld	c,a                         ; 040803 || 	ld	c,a                         ; 0407F3 || 040803 4F          1870  			LD	C, A			;  E: The positive keycode value
	ld	a,$01                       ; 040804 || 	ld	a,$01                       ; 0407F4 || 040804 3E 01       1871  			LD	A, 1			; Throw an "Out of range" error
	jp	m,$0437c1                   ; 040806 || 	jp	m,$043760                   ; 0407F6 || 040806 FA C1 37 04 1872  			JP	M, ERROR_		; if the argument < - 128
	ld	hl,$04082d                  ; 04080A || 	ld	hl,$04081d                  ; 0407FA || 04080A 21 2D 08 04 1874  			LD	HL, BITLOOKUP		; HL: The bit lookup table
	ld	de,$000000                  ; 04080E || 	ld	de,$000000                  ; 0407FE || 04080E 11 00 00 00 1875  			LD	DE, 0
	ld	a,c                         ; 040812 || 	ld	a,c                         ; 040802 || 040812 79          1876  			LD	A, C
	and	$07                        ; 040813 || 	and	$07                        ; 040803 || 040813 E6 07       1877  			AND	00000111b		; Just need the first three bits
	ld	e,a                         ; 040815 || 	ld	e,a                         ; 040805 || 040815 5F          1878  			LD	E, A			; DE: The bit number
	add	hl,de                      ; 040816 || 	add	hl,de                      ; 040806 || 040816 19          1879  			ADD	HL, DE
	ld	b,(hl)                      ; 040817 || 	ld	b,(hl)                      ; 040807 || 040817 46          1880  			LD	B, (HL)			;  B: The mask
	ld	a,c                         ; 040818 || 	ld	a,c                         ; 040808 || 040818 79          1882  			LD	A, C			; Fetch the keycode again
	and	$78                        ; 040819 || 	and	$78                        ; 040809 || 040819 E6 78       1883  			AND	01111000b		; And divide by 8
	rrca                           ; 04081B || 	rrca                           ; 04080B || 04081B 0F          1884  			RRCA
	rrca                           ; 04081C || 	rrca                           ; 04080C || 04081C 0F          1885  			RRCA
	rrca                           ; 04081D || 	rrca                           ; 04080D || 04081D 0F          1886  			RRCA
	ld	e,a                         ; 04081E || 	ld	e,a                         ; 04080E || 04081E 5F          1887  			LD	E, A			; DE: The offset (the MSW has already been cleared previously)
	add	ix,de                      ; 04081F || 	add	ix,de                      ; 04080F || 04081F DD 19       1888  			ADD	IX, DE			; IX: The address
	ld	a,b                         ; 040821 || 	ld	a,b                         ; 040811 || 040821 78          1889  			LD	A, B			;  B: The mask
	and	(ix)                       ; 040822 || 	and	(ix)                       ; 040812 || 040822 DD A6 00    1890  			AND	(IX+0)			; Check whether the bit is set
	jp	z,$0409a3                   ; 040825 || 	jp	z,$040993                   ; 040815 || 040825 CA A3 09 04 1891  			JP	Z, ZERO			; No, so return 0
	jp	$040615                     ; 040829 || 	jp	$040605                     ; 040819 || 040829 C3 15 06 04 1892  			JP	TRUE			; Otherwise return -1
	ld	bc,$080402                  ; 04082D || 	ld	bc,$080402                  ; 04081D || 04082D 01 02 04 08 1896  BITLOOKUP:		DB	01h, 02h, 04h, 08h
	djnz	$+$22                     ; 040831 || 	djnz	$+$22                     ; 040821 || 040831 10 20 40 80 1897  			DB	10h, 20h, 40h, 80h
	add.sis	a,b                    ; 040833 || 	add.sis	a,b                    ; 040823
	call	$040a31                   ; 040835 || 	call	$040a1e                   ; 040825 || 040835 CD 31 0A 04 1902  MIDS:			CALL    EXPRSC			; Get the first string expression
	call	$0409c4                   ; 040839 || 	call	$0409b4                   ; 040829 || 040839 CD C4 09 04 1903  			CALL    PUSHS           	; Push the string onto the stack from the string accumulator (ACCS)
	call	$04031a                   ; 04083D || 	call	$04030a                   ; 04082D || 04083D CD 1A 03 04 1904  			CALL    EXPRI			; Get the second expression
	pop	bc                         ; 040841 || 	pop	bc                         ; 040831 || 040841 C1          1905  			POP     BC			; C: String length, B: Value of A before PUSHS was called
	call	$0409f1                   ; 040842 || 	call	$0409de                   ; 040832 || 040842 CD F1 09 04 1906  			CALL    POPS			; Pop the string back off the stack to the string accumulator
	exx                            ; 040846 || 	exx                            ; 040836 || 040846 D9          1907  			EXX
	ld	a,l                         ; 040847 || 	ld	a,l                         ; 040837 || 040847 7D          1908  			LD      A,L			; A: The start index
	exx                            ; 040848 || 	exx                            ; 040838 || 040848 D9          1909  			EXX
	or	a                           ; 040849 || 	or	a                           ; 040839 || 040849 B7          1910  			OR      A			; If the start index is 0, then we don't need to do the next bit
	jr	z,$+$10                     ; 04084A || 	jr	z,$+$10                     ; 04083A || 04084A 28 0E       1911  			JR      Z,MIDS1
	dec	a                          ; 04084C || 	dec	a                          ; 04083C || 04084C 3D          1912  			DEC     A
	ld	l,a                         ; 04084D || 	ld	l,a                         ; 04083D || 04084D 6F          1913  			LD      L,A			; L: The start index - 1
	sub	e                          ; 04084E || 	sub	e                          ; 04083E || 04084E 93          1914  			SUB     E			; Subtract from the string length
	ld	e,$00                       ; 04084F || 	ld	e,$00                       ; 04083F || 04084F 1E 00       1915  			LD      E,0			; Preemptively set the string length to 0
	jr	nc,$+$09                    ; 040851 || 	jr	nc,$+$09                    ; 040841 || 040851 30 07       1916  			JR      NC,MIDS1		; If the first parameter is greater than the string length, then do nothing
	neg                            ; 040853 || 	neg                            ; 040843 || 040853 ED 44       1917  			NEG				; Negate the answer and
	ld	c,a                         ; 040855 || 	ld	c,a                         ; 040845 || 040855 4F          1918  			LD      C,A			; C: Number of bytes to copy
	call	$040899                   ; 040856 || 	call	$040889                   ; 040846 || 040856 CD 99 08 04 1919  			CALL    RIGHT1			; We can do a RIGHT$ at this point with the result
	call	$040a83                   ; 04085A || 	call	$040a70                   ; 04084A || 04085A CD 83 0A 04 1920  MIDS1:			CALL    NXT			; Skip whitespace
	cp	$2c                         ; 04085E || 	cp	$2c                         ; 04084E || 04085E FE 2C       1921  			CP      ','			; Check for a comma
	inc	iy                         ; 040860 || 	inc	iy                         ; 040850 || 040860 FD 23       1922  			INC     IY			; Advance to the next character in the BASIC line
	jr	z,$+$0f                     ; 040862 || 	jr	z,$+$0f                     ; 040852 || 040862 28 0D       1923  			JR      Z,LEFT1			; If there is a comma then we do a LEFT$ on the remainder
	dec	iy                         ; 040864 || 	dec	iy                         ; 040854 || 040864 FD 2B       1924  			DEC     IY			; Restore the BASIC program pointer
	call	$040a42                   ; 040866 || 	call	$040a2f                   ; 040856 || 040866 CD 42 0A 04 1925  			CALL    BRAKET			; Check for a bracket
	ld	a,$80                       ; 04086A || 	ld	a,$80                       ; 04085A || 04086A 3E 80       1926  			LD      A,80H			; String marker
	ret                            ; 04086C || 	ret                            ; 04085C || 04086C C9          1927  			RET
	call	$040a31                   ; 04086D || 	call	$040a1e                   ; 04085D || 04086D CD 31 0A 04 1933  LEFTS:			CALL    EXPRSC			; Get the first string expression
	call	$0409c4                   ; 040871 || 	call	$0409b4                   ; 040861 || 040871 CD C4 09 04 1934  LEFT1:			CALL    PUSHS           	; Push the string onto the stack from the string accumulator (ACCS)
	call	$04031a                   ; 040875 || 	call	$04030a                   ; 040865 || 040875 CD 1A 03 04 1935  			CALL    EXPRI			; Get the second expression
	pop	bc                         ; 040879 || 	pop	bc                         ; 040869 || 040879 C1          1936  			POP     BC			; C: String length, B: Value of A before PUSHS was called
	call	$0409f1                   ; 04087A || 	call	$0409de                   ; 04086A || 04087A CD F1 09 04 1937  			CALL    POPS			; Pop the string back off the stack to the string accumulator (ACCS)
	call	$040a42                   ; 04087E || 	call	$040a2f                   ; 04086E || 04087E CD 42 0A 04 1938  			CALL    BRAKET			; Check for closing bracket
	exx                            ; 040882 || 	exx                            ; 040872 || 040882 D9          1939  			EXX
	ld	a,l                         ; 040883 || 	ld	a,l                         ; 040873 || 040883 7D          1940  			LD      A,L			; L: The second parameter
	exx                            ; 040884 || 	exx                            ; 040874 || 040884 D9          1941  			EXX
	cp	e                           ; 040885 || 	cp	e                           ; 040875 || 040885 BB          1942  			CP      E			; Compare with the string length
	jr	nc,$+$04                    ; 040886 || 	jr	nc,$+$04                    ; 040876 || 040886 30 02       1943  			JR      NC,LEFT3		; If it is greater than or equal then do nothing
	ld	l,e                         ; 040888 || 	ld	l,e                         ; 040878 || 040888 6B          1944  			LD      L,E             	; For RIGHTS, no effect in LEFTS
	ld	e,a                         ; 040889 || 	ld	e,a                         ; 040879 || 040889 5F          1945  LEFT2:			LD      E,A			; E: The new length of string
	ld	a,$80                       ; 04088A || 	ld	a,$80                       ; 04087A || 04088A 3E 80       1946  LEFT3:			LD      A,80H           	; String marker
	ret                            ; 04088C || 	ret                            ; 04087C || 04088C C9          1947  			RET
	call	$04086d                   ; 04088D || 	call	$04085d                   ; 04087D || 04088D CD 6D 08 04 1952  RIGHTS:			CALL    LEFTS			; Call LEFTS to get the string
	ret	nc                         ; 040891 || 	ret	nc                         ; 040881 || 040891 D0          1953  			RET     NC			; Do nothing if the second parameter is >= string length
	inc	e                          ; 040892 || 	inc	e                          ; 040882 || 040892 1C          1954  			INC     E			; Check for a zero length string
	dec	e                          ; 040893 || 	dec	e                          ; 040883 || 040893 1D          1955  			DEC     E
	ret	z                          ; 040894 || 	ret	z                          ; 040884 || 040894 C8          1956  			RET     Z			; Yes, so do nothing
	ld	c,e                         ; 040895 || 	ld	c,e                         ; 040885 || 040895 4B          1957  			LD      C,E			;  C: Number of bytes to copy
	ld	a,l                         ; 040896 || 	ld	a,l                         ; 040886 || 040896 7D          1958  			LD      A,L
	sub	e                          ; 040897 || 	sub	e                          ; 040887 || 040897 93          1959  			SUB     E
	ld	l,a                         ; 040898 || 	ld	l,a                         ; 040888 || 040898 6F          1960  			LD      L,A			;  L: Index into the string
	ld	a,c                         ; 040899 || 	ld	a,c                         ; 040889 || 040899 79          1961  RIGHT1:			LD	A,C
	ld	bc,$000000                  ; 04089A || 	ld	bc,$000000                  ; 04088A || 04089A 01 00 00 00 1962  			LD	BC,0
	ld	c,a                         ; 04089E || 	ld	c,a                         ; 04088E || 04089E 4F          1963  			LD	C,A			; BC: Number of bytes to copy (with top word cleared)
	ld	a,l                         ; 04089F || 	ld	a,l                         ; 04088F || 04089F 7D          1964  			LD	A,L
	ld	hl,$044a00                  ; 0408A0 || 	ld	hl,$044a00                  ; 040890 || 0408A0 21 00 4A 04 1965  			LD	HL,ACCS
	ld	l,a                         ; 0408A4 || 	ld	l,a                         ; 040894 || 0408A4 6F          1966  			LD	L,A			; HL: Source (in ACCS)
	ld	de,$044a00                  ; 0408A5 || 	ld	de,$044a00                  ; 040895 || 0408A5 11 00 4A 04 1967  			LD      DE,ACCS			; DE: Destination (start of ACCS)
	ldir                           ; 0408A9 || 	ldir                           ; 040899 || 0408A9 ED B0       1968  			LDIR                    	; Copy
	ld	a,$80                       ; 0408AB || 	ld	a,$80                       ; 04089B || 0408AB 3E 80       1969  			LD      A,80H			; String marker
	ret                            ; 0408AD || 	ret                            ; 04089D || 0408AD C9          1970  			RET
	call	$04031a                   ; 0408AE || 	call	$04030a                   ; 04089E || 0408AE CD 1A 03 04 1975  STRING_:		CALL    EXPRI			; Get number of times to replicate
	call	$040a35                   ; 0408B2 || 	call	$040a22                   ; 0408A2 || 0408B2 CD 35 0A 04 1976  			CALL    COMMA			; Check for comma
	exx                            ; 0408B6 || 	exx                            ; 0408A6 || 0408B6 D9          1977  			EXX
	ld	a,l                         ; 0408B7 || 	ld	a,l                         ; 0408A7 || 0408B7 7D          1978  			LD      A,L			; L: Number of iterations of string
	exx                            ; 0408B8 || 	exx                            ; 0408A8 || 0408B8 D9          1979  			EXX
	push	af                        ; 0408B9 || 	push	af                        ; 0408A9 || 0408B9 F5          1980  			PUSH    AF
	call	$040325                   ; 0408BA || 	call	$040315                   ; 0408AA || 0408BA CD 25 03 04 1981  			CALL    EXPRS			; Get the string
	call	$040a42                   ; 0408BE || 	call	$040a2f                   ; 0408AE || 0408BE CD 42 0A 04 1982  			CALL    BRAKET			; Check for closing bracket
	pop	af                         ; 0408C2 || 	pop	af                         ; 0408B2 || 0408C2 F1          1983  			POP     AF			; A: Number of iterations of string
	or	a                           ; 0408C3 || 	or	a                           ; 0408B3 || 0408C3 B7          1984  			OR      A			; Set flags
	jr	z,$-$3b                     ; 0408C4 || 	jr	z,$-$3b                     ; 0408B4 || 0408C4 28 C3       1985  			JR      Z,LEFT2         	; If iterations is 0, then this will return an empty string
	dec	a                          ; 0408C6 || 	dec	a                          ; 0408B6 || 0408C6 3D          1986  			DEC     A
	ld	c,a                         ; 0408C7 || 	ld	c,a                         ; 0408B7 || 0408C7 4F          1987  			LD      C,A			; C: Loop counter
	ld	a,$80                       ; 0408C8 || 	ld	a,$80                       ; 0408B8 || 0408C8 3E 80       1988  			LD      A,80H			; String marker
	ret	z                          ; 0408CA || 	ret	z                          ; 0408BA || 0408CA C8          1989  			RET     Z
	inc	e                          ; 0408CB || 	inc	e                          ; 0408BB || 0408CB 1C          1990  			INC     E			; Check for empty string
	dec	e                          ; 0408CC || 	dec	e                          ; 0408BC || 0408CC 1D          1991  			DEC     E
	ret	z                          ; 0408CD || 	ret	z                          ; 0408BD || 0408CD C8          1992  			RET     Z              		; And return
	ld	b,e                         ; 0408CE || 	ld	b,e                         ; 0408BE || 0408CE 43          1993  			LD      B,E			; B: String length tally
	ld	hl,$044a00                  ; 0408CF || 	ld	hl,$044a00                  ; 0408BF || 0408CF 21 00 4A 04 1994  			LD	HL,ACCS
	push	bc                        ; 0408D3 || 	push	bc                        ; 0408C3 || 0408D3 C5          1995  STRIN1:			PUSH    BC
	ld	a,(hl)                      ; 0408D4 || 	ld	a,(hl)                      ; 0408C4 || 0408D4 7E          1996  STRIN2:			LD      A,(HL)
	inc	hl                         ; 0408D5 || 	inc	hl                         ; 0408C5 || 0408D5 23          1997  			INC     HL
	ld	(de),a                      ; 0408D6 || 	ld	(de),a                      ; 0408C6 || 0408D6 12          1998  			LD      (DE),A
	inc	e                          ; 0408D7 || 	inc	e                          ; 0408C7 || 0408D7 1C          1999  			INC     E
	ld	a,$13                       ; 0408D8 || 	ld	a,$13                       ; 0408C8 || 0408D8 3E 13       2000  			LD      A,19
	jp	z,$0437c1                   ; 0408DA || 	jp	z,$043760                   ; 0408CA || 0408DA CA C1 37 04 2001  			JP      Z,ERROR_         	; Throw a "String too long" error
	djnz	$-$0a                     ; 0408DE || 	djnz	$-$0a                     ; 0408CE || 0408DE 10 F4       2002  			DJNZ    STRIN2
	pop	bc                         ; 0408E0 || 	pop	bc                         ; 0408D0 || 0408E0 C1          2003  			POP     BC
	dec	c                          ; 0408E1 || 	dec	c                          ; 0408D1 || 0408E1 0D          2004  			DEC     C
	jr	nz,$-$0f                    ; 0408E2 || 	jr	nz,$-$0f                    ; 0408D2 || 0408E2 20 EF       2005  			JR      NZ,STRIN1
	ld	a,$80                       ; 0408E4 || 	ld	a,$80                       ; 0408D4 || 0408E4 3E 80       2006  			LD      A,80H
	ret                            ; 0408E6 || 	ret                            ; 0408D6 || 0408E6 C9          2007  			RET
	ld	a,c                         ; 0408E7 || 	ld	a,c                         ; 0408D7 || 0408E7 79          2015  SWAP:			LD      A,C
	ld	c,b                         ; 0408E8 || 	ld	c,b                         ; 0408D8 || 0408E8 48          2016  			LD      C,B
	ld	b,a                         ; 0408E9 || 	ld	b,a                         ; 0408D9 || 0408E9 47          2017  			LD      B,A
	ex	de,hl                       ; 0408EA || 	ex	de,hl                       ; 0408DA || 0408EA EB          2018  			EX      DE,HL
	exx                            ; 0408EB || 	exx                            ; 0408DB || 0408EB D9          2019  			EXX
	ex	de,hl                       ; 0408EC || 	ex	de,hl                       ; 0408DC || 0408EC EB          2020  			EX      DE,HL
	exx                            ; 0408ED || 	exx                            ; 0408DD || 0408ED D9          2021  			EXX
	ret                            ; 0408EE || 	ret                            ; 0408DE || 0408EE C9          2022  			RET
	ld	a,h                         ; 0408EF || 	ld	a,h                         ; 0408DF || 0408EF 7C          2028  TEST:			LD      A,H
	or	l                           ; 0408F0 || 	or	l                           ; 0408E0 || 0408F0 B5          2029  			OR      L
	exx                            ; 0408F1 || 	exx                            ; 0408E1 || 0408F1 D9          2030  			EXX
	or	h                           ; 0408F2 || 	or	h                           ; 0408E2 || 0408F2 B4          2031  			OR      H
	or	l                           ; 0408F3 || 	or	l                           ; 0408E3 || 0408F3 B5          2032  			OR      L
	exx                            ; 0408F4 || 	exx                            ; 0408E4 || 0408F4 D9          2033  			EXX
	ret                            ; 0408F5 || 	ret                            ; 0408E5 || 0408F5 C9          2034  			RET
	exx                            ; 0408F6 || 	exx                            ; 0408E6 || 0408F6 D9          2041  DECODE:			EXX
	ld	hl,$000000                  ; 0408F7 || 	ld	hl,$000000                  ; 0408E7 || 0408F7 21 00 00 00 2042  			LD	HL, 0
	ld	a,(iy)                      ; 0408FB || 	ld	a,(iy)                      ; 0408EB || 0408FB FD 7E 00    2043  			LD      A,(IY)
	inc	iy                         ; 0408FE || 	inc	iy                         ; 0408EE || 0408FE FD 23       2044  			INC     IY
	rla                            ; 040900 || 	rla                            ; 0408F0 || 040900 17          2045  			RLA
	rla                            ; 040901 || 	rla                            ; 0408F1 || 040901 17          2046  			RLA
	ld	h,a                         ; 040902 || 	ld	h,a                         ; 0408F2 || 040902 67          2047  			LD      H,A
	and	$c0                        ; 040903 || 	and	$c0                        ; 0408F3 || 040903 E6 C0       2048  			AND     0C0H
	xor	(iy)                       ; 040905 || 	xor	(iy)                       ; 0408F5 || 040905 FD AE 00    2049  			XOR     (IY)
	inc	iy                         ; 040908 || 	inc	iy                         ; 0408F8 || 040908 FD 23       2050  			INC     IY
	ld	l,a                         ; 04090A || 	ld	l,a                         ; 0408FA || 04090A 6F          2051  			LD      L,A
	ld	a,h                         ; 04090B || 	ld	a,h                         ; 0408FB || 04090B 7C          2052  			LD      A,H
	rla                            ; 04090C || 	rla                            ; 0408FC || 04090C 17          2053  			RLA
	rla                            ; 04090D || 	rla                            ; 0408FD || 04090D 17          2054  			RLA
	and	$c0                        ; 04090E || 	and	$c0                        ; 0408FE || 04090E E6 C0       2055  			AND     0C0H
	xor	(iy)                       ; 040910 || 	xor	(iy)                       ; 040900 || 040910 FD AE 00    2056  			XOR     (IY)
	inc	iy                         ; 040913 || 	inc	iy                         ; 040903 || 040913 FD 23       2057  			INC     IY
	ld	h,a                         ; 040915 || 	ld	h,a                         ; 040905 || 040915 67          2058  			LD      H,A
	exx                            ; 040916 || 	exx                            ; 040906 || 040916 D9          2059  			EXX
	ld	hl,$000000                  ; 040917 || 	ld	hl,$000000                  ; 040907 || 040917 21 00 00 00 2064  			LD	HL, 0
	ld	c,l                         ; 04091B || 	ld	c,l                         ; 04090B || 04091B 4D          2065  			LD	C, L
	ret                            ; 04091C || 	ret                            ; 04090C || 04091C C9          2066  			RET
	inc	iy                         ; 04091D || 	inc	iy                         ; 04090D || 04091D FD 23       2073  HEXSTS:			INC     IY              ;SKIP TILDE
	call	$04032d                   ; 04091F || 	call	$04031d                   ; 04090F || 04091F CD 2D 03 04 2074  			CALL    ITEMN
	call	$04092a                   ; 040923 || 	call	$04091a                   ; 040913 || 040923 CD 2A 09 04 2075  			CALL    HEXSTR
	ld	a,$80                       ; 040927 || 	ld	a,$80                       ; 040917 || 040927 3E 80       2076  			LD      A,80H
	ret                            ; 040929 || 	ret                            ; 040919 || 040929 C9          2077  			RET
	call	$040672                   ; 04092A || 	call	$040662                   ; 04091A || 04092A CD 72 06 04 2079  HEXSTR:			CALL    SFIX
	ld	bc,$000008                  ; 04092E || 	ld	bc,$000008                  ; 04091E || 04092E 01 08 00 00 2080  			LD      BC,8
	ld	de,$044a00                  ; 040932 || 	ld	de,$044a00                  ; 040922 || 040932 11 00 4A 04 2081  			LD      DE,ACCS
	push	bc                        ; 040936 || 	push	bc                        ; 040926 || 040936 C5          2082  HEXST1:			PUSH    BC
	ld	b,$04                       ; 040937 || 	ld	b,$04                       ; 040927 || 040937 06 04       2083  			LD      B,4
	xor	a                          ; 040939 || 	xor	a                          ; 040929 || 040939 AF          2084  			XOR     A
	exx                            ; 04093A || 	exx                            ; 04092A || 04093A D9          2085  HEXST2:			EXX
	add.sil	hl,hl                  ; 04093B || 	add.sil	hl,hl                  ; 04092B || 04093B 52 29       2086  			ADD.S	HL,HL
	exx                            ; 04093D || 	exx                            ; 04092D || 04093D D9          2087  			EXX
	adc.sil	hl,hl                  ; 04093E || 	adc.sil	hl,hl                  ; 04092E || 04093E 52 ED 6A    2088  			ADC.S	HL,HL
	rla                            ; 040941 || 	rla                            ; 040931 || 040941 17          2089  			RLA
	djnz	$-$08                     ; 040942 || 	djnz	$-$08                     ; 040932 || 040942 10 F6       2090  			DJNZ    HEXST2
	pop	bc                         ; 040944 || 	pop	bc                         ; 040934 || 040944 C1          2091  			POP     BC
	dec	c                          ; 040945 || 	dec	c                          ; 040935 || 040945 0D          2092  			DEC     C
	ret	m                          ; 040946 || 	ret	m                          ; 040936 || 040946 F8          2093  			RET     M
	jr	z,$+$08                     ; 040947 || 	jr	z,$+$08                     ; 040937 || 040947 28 06       2094  			JR      Z,HEXST3
	or	a                           ; 040949 || 	or	a                           ; 040939 || 040949 B7          2095  			OR      A
	jr	nz,$+$05                    ; 04094A || 	jr	nz,$+$05                    ; 04093A || 04094A 20 03       2096  			JR      NZ,HEXST3
	cp	b                           ; 04094C || 	cp	b                           ; 04093C || 04094C B8          2097  			CP      B
	jr	z,$-$17                     ; 04094D || 	jr	z,$-$17                     ; 04093D || 04094D 28 E7       2098  			JR      Z,HEXST1
	add	a,$90                      ; 04094F || 	add	a,$90                      ; 04093F || 04094F C6 90       2099  HEXST3:			ADD     A,90H
	daa                            ; 040951 || 	daa                            ; 040941 || 040951 27          2100  			DAA
	adc	a,$40                      ; 040952 || 	adc	a,$40                      ; 040942 || 040952 CE 40       2101  			ADC     A,40H
	daa                            ; 040954 || 	daa                            ; 040944 || 040954 27          2102  			DAA
	ld	(de),a                      ; 040955 || 	ld	(de),a                      ; 040945 || 040955 12          2103  			LD      (DE),A
	inc	de                         ; 040956 || 	inc	de                         ; 040946 || 040956 13          2104  			INC     DE
	ld	b,a                         ; 040957 || 	ld	b,a                         ; 040947 || 040957 47          2105  			LD      B,A
	jr	$-$22                       ; 040958 || 	jr	$-$22                       ; 040948 || 040958 18 DC       2106  			JR      HEXST1
	call	$040a83                   ; 04095A || 	call	$040a70                   ; 04094A || 04095A CD 83 0A 04 2116  STRS:			CALL    NXT
	cp	$7e                         ; 04095E || 	cp	$7e                         ; 04094E || 04095E FE 7E       2117  			CP      '~'
	jr	z,$-$43                     ; 040960 || 	jr	z,$-$43                     ; 040950 || 040960 28 BB       2118  			JR      Z,HEXSTS
	call	$04032d                   ; 040962 || 	call	$04031d                   ; 040952 || 040962 CD 2D 03 04 2119  			CALL    ITEMN
	ld	ix,$044c00                  ; 040966 || 	ld	ix,$044c00                  ; 040956 || 040966 DD 21 00 4C 2120  			LD      IX,STAVAR
	ld	a,(ix+$03)                  ; 04096B || 	ld	a,(ix+$03)                  ; 04095B || 04096B DD 7E 03    2121  			LD      A,(IX+3)
	or	a                           ; 04096E || 	or	a                           ; 04095E || 04096E B7          2122  			OR      A
	ld	ix,$04099c                  ; 04096F || 	ld	ix,$04098c                  ; 04095F || 04096F DD 21 9C 09 2123  			LD      IX,G9-1         ;G9 FORMAT
	jr	z,$+$07                     ; 040974 || 	jr	z,$+$07                     ; 040964 || 040974 28 05       2124  			JR      Z,STR0
	ld	ix,$044c00                  ; 040976 || 	ld	ix,$044c00                  ; 040966 || 040976 DD 21 00 4C 2125  STR:			LD      IX,STAVAR
	ld	de,$044a00                  ; 04097B || 	ld	de,$044a00                  ; 04096B || 04097B 11 00 4A 04 2126  STR0:			LD      DE,ACCS
	ld	a,$25                       ; 04097F || 	ld	a,$25                       ; 04096F || 04097F 3E 25       2127  			LD      A,37
	call	$0420ad                   ; 040981 || 	call	$04206a                   ; 040971 || 040981 CD AD 20 04 2128  			CALL    FPP
	jp	c,$0437c1                   ; 040985 || 	jp	c,$043760                   ; 040975 || 040985 DA C1 37 04 2129  			JP      C,ERROR_
	bit	0,(ix+$02)                 ; 040989 || 	bit	0,(ix+$02)                 ; 040979 || 040989 DD CB 02 46 2130  			BIT     0,(IX+2)
	ld	a,$80                       ; 04098D || 	ld	a,$80                       ; 04097D || 04098D 3E 80       2131  STR1:			LD      A,80H           ;STRING MARKER
	ret	z                          ; 04098F || 	ret	z                          ; 04097F || 04098F C8          2132  			RET     Z
	ld	a,c                         ; 040990 || 	ld	a,c                         ; 040980 || 040990 79          2133  			LD      A,C
	add	a,$04                      ; 040991 || 	add	a,$04                      ; 040981 || 040991 C6 04       2134  			ADD     A,4
	cp	e                           ; 040993 || 	cp	e                           ; 040983 || 040993 BB          2135  STR2:			CP      E
	jr	z,$-$07                     ; 040994 || 	jr	z,$-$07                     ; 040984 || 040994 28 F7       2136  			JR      Z,STR1
	ex	de,hl                       ; 040996 || 	ex	de,hl                       ; 040986 || 040996 EB          2137  			EX      DE,HL
	ld	(hl),$20                    ; 040997 || 	ld	(hl),$20                    ; 040987 || 040997 36 20       2138  			LD      (HL),' '        ;TRAILING SPACE
	inc	hl                         ; 040999 || 	inc	hl                         ; 040989 || 040999 23          2139  			INC     HL
	ex	de,hl                       ; 04099A || 	ex	de,hl                       ; 04098A || 04099A EB          2140  			EX      DE,HL
	jr	$-$08                       ; 04099B || 	jr	$-$08                       ; 04098B || 04099B 18 F6       2141  			JR      STR2
	add	hl,bc                      ; 04099D || 	add	hl,bc                      ; 04098D || 04099D 09 00       2143  G9:			DW    9
	nop                            ; 04099E || 	nop                            ; 04098E
	call	$0409ad                   ; 04099F || 	call	$04099d                   ; 04098F || 04099F CD AD 09 04 2149  SCP:			CALL	SCP0
	ld	a,$00                       ; 0409A3 || 	ld	a,$00                       ; 040993 || 0409A3 3E 00       2151  ZERO:			LD      A,0
	exx                            ; 0409A5 || 	exx                            ; 040995 || 0409A5 D9          2152  			EXX
	ld	h,a                         ; 0409A6 || 	ld	h,a                         ; 040996 || 0409A6 67          2153  			LD      H,A
	ld	l,a                         ; 0409A7 || 	ld	l,a                         ; 040997 || 0409A7 6F          2154  			LD      L,A
	exx                            ; 0409A8 || 	exx                            ; 040998 || 0409A8 D9          2155  			EXX
	ld	h,a                         ; 0409A9 || 	ld	h,a                         ; 040999 || 0409A9 67          2156  			LD      H,A
	ld	l,a                         ; 0409AA || 	ld	l,a                         ; 04099A || 0409AA 6F          2157  			LD      L,A
	ld	c,a                         ; 0409AB || 	ld	c,a                         ; 04099B || 0409AB 4F          2158  			LD      C,A
	ret                            ; 0409AC || 	ret                            ; 04099C || 0409AC C9          2159  			RET
	inc	b                          ; 0409AD || 	inc	b                          ; 04099D || 0409AD 04          2161  SCP0:			INC     B
	inc	c                          ; 0409AE || 	inc	c                          ; 04099E || 0409AE 0C          2162  			INC     C
	dec	b                          ; 0409AF || 	dec	b                          ; 04099F || 0409AF 05          2163  SCP1:			DEC     B
	jr	z,$+$0c                     ; 0409B0 || 	jr	z,$+$0c                     ; 0409A0 || 0409B0 28 0A       2164  			JR      Z,SCP2
	dec	c                          ; 0409B2 || 	dec	c                          ; 0409A2 || 0409B2 0D          2165  			DEC     C
	jr	z,$+$0e                     ; 0409B3 || 	jr	z,$+$0e                     ; 0409A3 || 0409B3 28 0C       2166  			JR      Z,SCP3
	ld	a,(de)                      ; 0409B5 || 	ld	a,(de)                      ; 0409A5 || 0409B5 1A          2167  			LD      A,(DE)
	cp	(hl)                        ; 0409B6 || 	cp	(hl)                        ; 0409A6 || 0409B6 BE          2168  			CP      (HL)
	ret	nz                         ; 0409B7 || 	ret	nz                         ; 0409A7 || 0409B7 C0          2169  			RET     NZ
	inc	de                         ; 0409B8 || 	inc	de                         ; 0409A8 || 0409B8 13          2170  			INC     DE
	inc	hl                         ; 0409B9 || 	inc	hl                         ; 0409A9 || 0409B9 23          2171  			INC     HL
	jr	$-$0b                       ; 0409BA || 	jr	$-$0b                       ; 0409AA || 0409BA 18 F3       2172  			JR      SCP1
	or	a                           ; 0409BC || 	or	a                           ; 0409AC || 0409BC B7          2173  SCP2:			OR      A
	dec	c                          ; 0409BD || 	dec	c                          ; 0409AD || 0409BD 0D          2174  			DEC     C
	ret	z                          ; 0409BE || 	ret	z                          ; 0409AE || 0409BE C8          2175  			RET     Z
	scf                            ; 0409BF || 	scf                            ; 0409AF || 0409BF 37          2176  			SCF
	ret                            ; 0409C0 || 	ret                            ; 0409B0 || 0409C0 C9          2177  			RET
	or	a                           ; 0409C1 || 	or	a                           ; 0409B1 || 0409C1 B7          2178  SCP3:			OR      A
	inc	c                          ; 0409C2 || 	inc	c                          ; 0409B2 || 0409C2 0C          2179  			INC     C
	ret                            ; 0409C3 || 	ret                            ; 0409B3 || 0409C3 C9          2180  			RET
	call	$04168c                   ; 0409C4 || 	call	$04164f                   ; 0409B4 || 0409C4 CD 8C 16 04 2188  PUSHS:			CALL    CHECK			; Check if there is sufficient space on the stack
	pop	ix                         ; 0409C8 || 	pop	ix                         ; 0409B8 || 0409C8 DD E1       2189  			POP     IX              	; IX: Return address
	or	a                           ; 0409CA || 	or	a                           ; 0409BA || 0409CA B7          2190  			OR      A               	; Clear the carry flag
	ld	bc,$000000                  ; 0409CB || 	ld	bc,$000000                  ; 0409BB || 0409CB 01 00 00 00 2191  			LD	BC,0			; BC: Length of the string
	ld	c,e                         ; 0409CF || 	ld	c,e                         ; 0409BF || 0409CF 4B          2192  			LD	C,E
	ld	hl,$044a00                  ; 0409D0 || 	ld	hl,$044a00                  ; 0409C0 || 0409D0 21 00 4A 04 2193  			LD      HL,ACCS			; HL: Pointer to the string accumulator
	ld	de,$044a00                  ; 0409D4 || 	ld	de,$044a00                  ; 0409C4 || 0409D4 11 00 4A 04 2194  			LD	DE,ACCS
	ld	e,c                         ; 0409D8 || 	ld	e,c                         ; 0409C8 || 0409D8 59          2195  			LD	E,C 			; DE: Pointer to the end of the string in the accumulator
	sbc	hl,de                      ; 0409D9 || 	sbc	hl,de                      ; 0409C9 || 0409D9 ED 52       2196  			SBC     HL,DE			; HL: Number of bytes to reserve on the stack (a negative number)
	add	hl,sp                      ; 0409DB || 	add	hl,sp                      ; 0409CB || 0409DB 39          2197  			ADD     HL,SP			; Grow the stack
	ld	sp,hl                       ; 0409DC || 	ld	sp,hl                       ; 0409CC || 0409DC F9          2198  			LD      SP,HL
	ld	d,a                         ; 0409DD                                         || 0409DD 57          2199  			LD      D,A			;  D: This needs to be set to A for some functions
	ld	b,a                         ; 0409DE                                         || 0409DE 47          2200  			LD	B,A			; Stack A and C (the string length)
	push	bc                        ; 0409DF                                         || 0409DF C5          2201  			PUSH    BC			; Note that this stacks 3 bytes, not 2; the MSB is irrelevant
	ld	b,$00                       ; 0409E0                                         || 0409E0 06 00       2202  			LD	B,0			; Reset B to 0 for the LDIR in this function
	jr	z,$+$0d                     ; 0409E2 || 	jr	z,$+$0d                     ; 0409CF || 0409E2 28 0B       2203  			JR      Z,PUSHS1        	; Is it zero length?
	ld	de,$044a00                  ; 0409E4 || 	ld	de,$044a00                  ; 0409D1 || 0409E4 11 00 4A 04 2204  			LD      DE,ACCS			; DE: Destination
	ex	de,hl                       ; 0409E8 || 	ex	de,hl                       ; 0409D5 || 0409E8 EB          2205  			EX      DE,HL			; HL: Destination, DE: Address on stack
	ldir                           ; 0409E9 || 	ldir                           ; 0409D6 || 0409E9 ED B0       2206  			LDIR	                    	; Copy to stack
	call	$04168c                   ; 0409EB || 	call	$04164f                   ; 0409D8 || 0409EB CD 8C 16 04 2207  			CALL    CHECK			; Final check to see if there is sufficient space on the stack
	jp	(ix)                        ; 0409EF || 	jp	(ix)                        ; 0409DC || 0409EF DD E9       2208  PUSHS1:			JP      (IX)            	; Effectively "RET" (IX contains the return address)
	pop	ix                         ; 0409F1 || 	pop	ix                         ; 0409DE || 0409F1 DD E1       2216  POPS:			POP     IX              	; IX: Return address
	ld	l,c                         ; 0409F3 || 	ld	l,c                         ; 0409E0 || 0409F3 69          2217  			LD	L,C			; Temporarily store string length in L
	ld	bc,$000000                  ; 0409F4 || 	ld	bc,$000000                  ; 0409E1 || 0409F4 01 00 00 00 2218  			LD	BC,0
	ld	c,l                         ; 0409F8 || 	ld	c,l                         ; 0409E5 || 0409F8 4D          2219  			LD	C,L			; BC: Number of bytes to copy
	ld	hl,$000000                  ; 0409F9 || 	ld	hl,$000000                  ; 0409E6 || 0409F9 21 00 00 00 2220  			LD      HL,0			; HL: 0
	add	hl,sp                      ; 0409FD || 	add	hl,sp                      ; 0409EA || 0409FD 39          2221  			ADD     HL,SP			; HL: Stack address
	ld	de,$044a00                  ; 0409FE || 	ld	de,$044a00                  ; 0409EB || 0409FE 11 00 4A 04 2222  			LD      DE,ACCS			; DE: Destination
	inc	c                          ; 040A02 || 	inc	c                          ; 0409EF || 040A02 0C          2223  			INC     C			; Quick check to see if this is a zero length string
	dec	c                          ; 040A03 || 	dec	c                          ; 0409F0 || 040A03 0D          2224  			DEC     C
	jr	z,$+$04                     ; 040A04 || 	jr	z,$+$04                     ; 0409F1 || 040A04 28 02       2225  			JR      Z,POPS1         	; Yes it is, so skip
	ldir                           ; 040A06 || 	ldir                           ; 0409F3 || 040A06 ED B0       2226  			LDIR                    	; No, so copy from the stack
	ld	sp,hl                       ; 040A08 || 	ld	sp,hl                       ; 0409F5 || 040A08 F9          2227  POPS1:			LD      SP,HL			; Shrink the stack
	jp	(ix)                        ; 040A09 || 	jp	(ix)                        ; 0409F6 || 040A09 DD E9       2228  			JP      (IX)            	; Effectively "RET" (IX contains the return address)
	ld	a,(iy)                      ; 040A0B || 	ld	a,(iy)                      ; 0409F8 || 040A0B FD 7E 00    2230  HEXDIG:			LD      A,(IY)
	cp	$30                         ; 040A0E || 	cp	$30                         ; 0409FB || 040A0E FE 30       2231  			CP      '0'
	ret	c                          ; 040A10 || 	ret	c                          ; 0409FD || 040A10 D8          2232  			RET     C
	cp	$3a                         ; 040A11 || 	cp	$3a                         ; 0409FE || 040A11 FE 3A       2233  			CP      '9'+1
	ccf                            ; 040A13 || 	ccf                            ; 040A00 || 040A13 3F          2234  			CCF
	ret	nc                         ; 040A14 || 	ret	nc                         ; 040A01 || 040A14 D0          2235  			RET     NC
	cp	$41                         ; 040A15 || 	cp	$41                         ; 040A02 || 040A15 FE 41       2236  			CP      'A'
	ret	c                          ; 040A17 || 	ret	c                          ; 040A04 || 040A17 D8          2237  			RET     C
	sub	$37                        ; 040A18 || 	sub	$37                        ; 040A05 || 040A18 D6 37       2238  			SUB     'A'-10
	cp	$10                         ; 040A1A || 	cp	$10                         ; 040A07 || 040A1A FE 10       2239  			CP      16
	ccf                            ; 040A1C || 	ccf                            ; 040A09 || 040A1C 3F          2240  			CCF
	ret                            ; 040A1D || 	ret                            ; 040A0A || 040A1D C9          2241  			RET
	ld	a,(iy)                      ; 040A1E || 	ld	a,(iy)                      ; 040A0B || 040A1E FD 7E 00    2243  BINDIG:			LD	A,(IY)
	cp	$30                         ; 040A21 || 	cp	$30                         ; 040A0E || 040A21 FE 30       2244  			CP	'0'
	ret	c                          ; 040A23 || 	ret	c                          ; 040A10 || 040A23 D8          2245  			RET	C
	cp	$32                         ; 040A24 || 	cp	$32                         ; 040A11 || 040A24 FE 32       2246  			CP	'1'+1
	ccf                            ; 040A26 || 	ccf                            ; 040A13 || 040A26 3F          2247  			CCF
	ret                            ; 040A27 || 	ret                            ; 040A14 || 040A27 C9          2248  			RET
	cp	$3e                         ; 040A28 || 	cp	$3e                         ; 040A15 || 040A28 FE 3E       2250  RELOP?:			CP      '>'
	ret	nc                         ; 040A2A || 	ret	nc                         ; 040A17 || 040A2A D0          2251  			RET     NC
	cp	$3d                         ; 040A2B || 	cp	$3d                         ; 040A18 || 040A2B FE 3D       2252  			CP      '='
	ret	nc                         ; 040A2D || 	ret	nc                         ; 040A1A || 040A2D D0          2253  			RET     NC
	cp	$3c                         ; 040A2E || 	cp	$3c                         ; 040A1B || 040A2E FE 3C       2254  			CP      '<'
	ret                            ; 040A30 || 	ret                            ; 040A1D || 040A30 C9          2255  			RET
	call	$040325                   ; 040A31 || 	call	$040315                   ; 040A1E || 040A31 CD 25 03 04 2257  EXPRSC:			CALL    EXPRS
	call	$040a83                   ; 040A35 || 	call	$040a70                   ; 040A22 || 040A35 CD 83 0A 04 2258  COMMA:			CALL    NXT
	inc	iy                         ; 040A39 || 	inc	iy                         ; 040A26 || 040A39 FD 23       2259  			INC     IY
	cp	$2c                         ; 040A3B || 	cp	$2c                         ; 040A28 || 040A3B FE 2C       2260  			CP      ','
	ret	z                          ; 040A3D || 	ret	z                          ; 040A2A || 040A3D C8          2261  			RET     Z
	ld	a,$05                       ; 040A3E || 	ld	a,$05                       ; 040A2B || 040A3E 3E 05       2262  			LD      A,5
	jr	$+$0d                       ; 040A40 || 	jr	$+$0d                       ; 040A2D || 040A40 18 0B       2263  			JR      ERROR1_EV          ;"Missing ,"
	call	$040a83                   ; 040A42 || 	call	$040a70                   ; 040A2F || 040A42 CD 83 0A 04 2265  BRAKET:			CALL    NXT
	inc	iy                         ; 040A46 || 	inc	iy                         ; 040A33 || 040A46 FD 23       2266  			INC     IY
	cp	$29                         ; 040A48 || 	cp	$29                         ; 040A35 || 040A48 FE 29       2267  			CP      ')'
	ret	z                          ; 040A4A || 	ret	z                          ; 040A37 || 040A4A C8          2268  			RET     Z
	ld	a,$1b                       ; 040A4B || 	ld	a,$1b                       ; 040A38 || 040A4B 3E 1B       2269  			LD      A,27
	jp	$0437c1                     ; 040A4D || 	jp	$043760                     ; 040A3A || 040A4D C3 C1 37 04 2270  ERROR1_EV:			JP      ERROR_           ;"Missing )"
	inc	iy                         ; 040A51 || 	inc	iy                         ; 040A3E || 040A51 FD 23       2272  SAVE_EV:			INC     IY
	ex	af,af'                      ; 040A53 || 	ex	af,af'                      ; 040A40 || 040A53 08          2273  SAVE1:			EX      AF,AF'
	jp	m,$040346                   ; 040A54 || 	jp	m,$040336                   ; 040A41 || 040A54 FA 46 03 04 2274  			JP      M,TYPE_EV_
	ex	af,af'                      ; 040A58 || 	ex	af,af'                      ; 040A45 || 040A58 08          2275  			EX      AF,AF'
	ex	(sp),hl                     ; 040A59 || 	ex	(sp),hl                     ; 040A46 || 040A59 E3          2276  			EX      (SP),HL
	exx                            ; 040A5A || 	exx                            ; 040A47 || 040A5A D9          2277  			EXX
	push	hl                        ; 040A5B || 	push	hl                        ; 040A48 || 040A5B E5          2278  			PUSH    HL
	exx                            ; 040A5C || 	exx                            ; 040A49 || 040A5C D9          2279  			EXX
	push	af                        ; 040A5D || 	push	af                        ; 040A4A || 040A5D F5          2280  			PUSH    AF
	push	bc                        ; 040A5E || 	push	bc                        ; 040A4B || 040A5E C5          2281  			PUSH    BC
	jp	(hl)                        ; 040A5F || 	jp	(hl)                        ; 040A4C || 040A5F E9          2282  			JP      (HL)
	ex	af,af'                      ; 040A60 || 	ex	af,af'                      ; 040A4D || 040A60 08          2284  DOIT:			EX      AF,AF'
	jp	m,$040346                   ; 040A61 || 	jp	m,$040336                   ; 040A4E || 040A61 FA 46 03 04 2285  			JP      M,TYPE_EV_
	exx                            ; 040A65 || 	exx                            ; 040A52 || 040A65 D9          2286  			EXX
	pop	bc                         ; 040A66 || 	pop	bc                         ; 040A53 || 040A66 C1          2287  			POP     BC              ;RETURN ADDRESS
	exx                            ; 040A67 || 	exx                            ; 040A54 || 040A67 D9          2288  			EXX
	ld	a,c                         ; 040A68 || 	ld	a,c                         ; 040A55 || 040A68 79          2289  			LD      A,C
	pop	bc                         ; 040A69 || 	pop	bc                         ; 040A56 || 040A69 C1          2290  			POP     BC
	ld	b,a                         ; 040A6A || 	ld	b,a                         ; 040A57 || 040A6A 47          2291  			LD      B,A
	pop	af                         ; 040A6B || 	pop	af                         ; 040A58 || 040A6B F1          2292  			POP     AF              ;OPERATOR
	exx                            ; 040A6C || 	exx                            ; 040A59 || 040A6C D9          2293  			EXX
	ex	de,hl                       ; 040A6D || 	ex	de,hl                       ; 040A5A || 040A6D EB          2294  			EX      DE,HL
	pop	hl                         ; 040A6E || 	pop	hl                         ; 040A5B || 040A6E E1          2295  			POP     HL
	exx                            ; 040A6F || 	exx                            ; 040A5C || 040A6F D9          2296  			EXX
	ex	de,hl                       ; 040A70 || 	ex	de,hl                       ; 040A5D || 040A70 EB          2297  			EX      DE,HL
	pop	hl                         ; 040A71 || 	pop	hl                         ; 040A5E || 040A71 E1          2298  			POP     HL
	exx                            ; 040A72 || 	exx                            ; 040A5F || 040A72 D9          2299  			EXX
	push	bc                        ; 040A73 || 	push	bc                        ; 040A60 || 040A73 C5          2300  			PUSH    BC
	exx                            ; 040A74 || 	exx                            ; 040A61 || 040A74 D9          2301  			EXX
	and	$0f                        ; 040A75 || 	and	$0f                        ; 040A62 || 040A75 E6 0F       2302  			AND     0FH
	call	$0420ad                   ; 040A77 || 	call	$04206a                   ; 040A64 || 040A77 CD AD 20 04 2303  			CALL    FPP
	jr	c,$-$2e                     ; 040A7B || 	jr	c,$-$2e                     ; 040A68 || 040A7B 38 D0       2304  			JR      C,ERROR1_EV
	xor	a                          ; 040A7D || 	xor	a                          ; 040A6A || 040A7D AF          2305  			XOR     A
	ex	af,af'                      ; 040A7E || 	ex	af,af'                      ; 040A6B || 040A7E 08          2306  			EX      AF,AF'          ;TYPE
	ld	a,(iy)                      ; 040A7F || 	ld	a,(iy)                      ; 040A6C || 040A7F FD 7E 00    2307  			LD      A,(IY)
	ret                            ; 040A82 || 	ret                            ; 040A6F || 040A82 C9          2308  			RET
	ld	a,(iy)                      ; 040A83 || 	ld	a,(iy)                      ; 040A70 || 040A83 FD 7E 00    2316  NXT:			LD      A,(IY)			; Fetch the character
	cp	$20                         ; 040A86 || 	cp	$20                         ; 040A73 || 040A86 FE 20       2317  			CP      ' '			; If it is space, then return
	ret	nz                         ; 040A88 || 	ret	nz                         ; 040A75 || 040A88 C0          2318  			RET     NZ
	inc	iy                         ; 040A89 || 	inc	iy                         ; 040A76 || 040A89 FD 23       2319  			INC     IY			; Increment the pointer and
	jp	$040a83                     ; 040A8B || 	jp	$040a70                     ; 040A78 || 040A8B C3 83 0A 04 2320  			JP      NXT			; Loop
	push	hl                        ; 040A8F || 	push	hl                        ; 040A7C || 040A8F E5          2322  DISPT2:			PUSH    HL
	ld	hl,$0401c0                  ; 040A90 || 	ld	hl,$0401b5                  ; 040A7D || 040A90 21 C0 01 04 2323  			LD      HL,SOPTBL
	jr	$+$09                       ; 040A94 || 	jr	$+$09                       ; 040A81 || 040A94 18 07       2324  			JR      DISPT0
	push	hl                        ; 040A96 || 	push	hl                        ; 040A83 || 040A96 E5          2326  DISPAT:			PUSH    HL
	sub	$8d                        ; 040A97 || 	sub	$8d                        ; 040A84 || 040A97 D6 8D       2327  			SUB     FUNTOK
	ld	hl,$040115                  ; 040A99 || 	ld	hl,$04010a                  ; 040A86 || 040A99 21 15 01 04 2328  			LD      HL,FUNTBL
	push	bc                        ; 040A9D || 	push	bc                        ; 040A8A || 040A9D C5          2329  DISPT0:			PUSH    BC
	ld	bc,$000003                  ; 040A9E || 	ld	bc,$000003                  ; 040A8B || 040A9E 01 03 00 00 2331  			LD	BC, 3
	ld	b,a                         ; 040AA2 || 	ld	b,a                         ; 040A8F || 040AA2 47          2332  			LD	B, A
	mlt	bc                         ; 040AA3 || 	mlt	bc                         ; 040A90 || 040AA3 ED 4C       2333  			MLT	BC
	add	hl,bc                      ; 040AA5 || 	add	hl,bc                      ; 040A92 || 040AA5 09          2334  			ADD	HL, BC
	ld	hl,(hl)                     ; 040AA6                                         || 040AA6 ED 27       2335  			LD	HL, (HL)
	pop	bc                         ; 040AA8                                         || 040AA8 C1          2346  			POP     BC
	ex	(sp),hl                     ; 040AA9                                         || 040AA9 E3          2347  			EX      (SP),HL
	ret                            ; 040AAA                                         || 040AAA C9          2348  			RET                     ;OFF TO ROUTINE
	ld	c,d                         ; 040AAB                                         || 040AAB 4A 37 04    2510  CMDTAB:			DW24  AUTO			; C6H
	scf                            ; 040AAC
	inc	b                          ; 040AAD
	xor	l                          ; 040AAE                                         || 040AAE AD 35 04    2511  			DW24  DELETE			; C7H
	dec	(hl)                       ; 040AAF
	inc	b                          ; 040AB0
	adc	a,e                        ; 040AB1                                         || 040AB1 8B 37 04    2512  			DW24  LOAD			; C8H
	scf                            ; 040AB2
	inc	b                          ; 040AB3
	ret	pe                         ; 040AB4                                         || 040AB4 E8 35 04    2513  			DW24  LIST_			; C9H
	dec	(hl)                       ; 040AB5
	inc	b                          ; 040AB6
	ld	l,b                         ; 040AB7                                         || 040AB7 68 37 04    2514  			DW24  NEW			; CAH
	scf                            ; 040AB8
	inc	b                          ; 040AB9
	ld	l,(hl)                      ; 040ABA                                         || 040ABA 6E 37 04    2515  			DW24  OLD			; CBH
	scf                            ; 040ABB
	inc	b                          ; 040ABC
	ld	(hl),a                      ; 040ABD                                         || 040ABD 77 36 04    2516  			DW24  RENUM			; CCH
	ld	(hl),$04                    ; 040ABE
	sbc	a,h                        ; 040AC0                                         || 040AC0 9C 37 04    2517  			DW24  SAVE			; CDH
	scf                            ; 040AC1
	inc	b                          ; 040AC2
	push	hl                        ; 040AC3                                         || 040AC3 E5 15 04    2518  			DW24  PUT			; CEH
	dec	d                          ; 040AC4
	inc	b                          ; 040AC5
	in	a,($13)                     ; 040AC6                                         || 040AC6 DB 13 04    2519  			DW24  PTR_EX			; CFH
	inc	b                          ; 040AC8
	push	af                        ; 040AC9                                         || 040AC9 F5 13 04    2520  			DW24  PAGEV_EX			; D0H
	inc	de                         ; 040ACA
	inc	b                          ; 040ACB
	ex	af,af'                      ; 040ACC                                         || 040ACC 08 14 04    2521  			DW24  TIMEV_EX			; D1H
	inc	d                          ; 040ACD
	inc	b                          ; 040ACE
	ld	sp,$4a0414                  ; 040ACF                                         || 040ACF 31 14 04    2522  			DW24  LOMEMV_EX			; D2H
	inc	d                          ; 040AD3
	inc	b                          ; 040AD4
	adc	a,l                        ; 040AD5                                         || 040AD5 8D 46 04    2524  			DW24  SOUND			; D4H
	ld	b,(hl)                      ; 040AD6
	inc	b                          ; 040AD7
	rst	$38                        ; 040AD8                                         || 040AD8 FF 14 04    2525  			DW24  BPUT			; D5H
	inc	d                          ; 040AD9
	inc	b                          ; 040ADA
	rla                            ; 040ADB                                         || 040ADB 17 15 04    2526  			DW24  CALL_			; D6H
	dec	d                          ; 040ADC
	inc	b                          ; 040ADD
	ld	e,a                         ; 040ADE                                         || 040ADE 5F 0B 04    2527  			DW24  CHAIN			; D7H
	dec	bc                         ; 040ADF
	inc	b                          ; 040AE0
	xor	d                          ; 040AE1                                         || 040AE1 AA 13 04    2528  			DW24  CLR			; D8H
	inc	de                         ; 040AE2
	inc	b                          ; 040AE3
	di                             ; 040AE4                                         || 040AE4 F3 14 04    2529  			DW24  CLOSE			; D9H
	inc	d                          ; 040AE5
	inc	b                          ; 040AE6
	add	hl,hl                      ; 040AE7                                         || 040AE7 29 44 04    2530  			DW24  CLG			; DAH
	ld	b,h                         ; 040AE8
	inc	b                          ; 040AE9
	ld	a,l                         ; 040AEA                                         || 040AEA 7D 13 04    2531  			DW24  CLS			; DBH
	inc	de                         ; 040AEB
	inc	b                          ; 040AEC
	ld	a,$0c                       ; 040AED                                         || 040AED 3E 0C 04    2532  			DW24  REM_EX             		; DCH: DATA
	inc	b                          ; 040AEF
	ld	a,$0c                       ; 040AF0                                         || 040AF0 3E 0C 04    2533  			DW24  REM_EX             		; DDH: DEF
	inc	b                          ; 040AF2
	inc	b                          ; 040AF3                                         || 040AF3 04 0D 04    2534  			DW24  DIM_EX			; DEH
	dec	c                          ; 040AF4
	inc	b                          ; 040AF5
	ld	d,e                         ; 040AF6                                         || 040AF6 53 46 04    2535  			DW24  DRAW			; DFH
	ld	b,(hl)                      ; 040AF7
	inc	b                          ; 040AF8
	exx                            ; 040AF9                                         || 040AF9 D9 0B 04    2536  			DW24  END_			; E0H
	dec	bc                         ; 040AFA
	inc	b                          ; 040AFB
	sub	l                          ; 040AFC                                         || 040AFC 95 11 04    2537  			DW24  ENDPRO			; E1H
	ld	de,$010a04                  ; 040AFD
	inc	b                          ; 040B01
	xor	d                          ; 040B02                                         || 040B02 AA 0F 04    2539  			DW24  FOR_EX			; E3H
	rrca                           ; 040B03
	inc	b                          ; 040B04
	ld	e,d                         ; 040B05                                         || 040B05 5A 0F 04    2540  			DW24  GOSUB_EX			; E4H
	rrca                           ; 040B06
	inc	b                          ; 040B07
	ld	a,$0f                       ; 040B08                                         || 040B08 3E 0F 04    2541  			DW24  GOTO_EX			; E5H
	inc	b                          ; 040B0A
	rst	$20                        ; 040B0B                                         || 040B0B E7 45 04    2542  			DW24  GCOL			; E6H
	ld	b,l                         ; 040B0C
	inc	b                          ; 040B0D
	inc.lis	de                     ; 040B0E                                         || 040B0E 49 13 04    2543  			DW24  IF_			; E7H
	inc	b                          ; 040B10
	scf                            ; 040B11                                         || 040B11 37 12 04    2544  			DW24  INPUT			; E8H
	ld	(de),a                      ; 040B12
	inc	b                          ; 040B13
	ld	e,a                         ; 040B14                                         || 040B14 5F 0C 04    2545  			DW24  LET			; E9H
	inc	c                          ; 040B15
	inc	b                          ; 040B16
	ld	a,($390411)                 ; 040B17                                         || 040B17 3A 11 04    2546  			DW24  LOCAL_EX_			; EAH
	ld	b,h                         ; 040B1B
	inc	b                          ; 040B1C
	ld	c,e                         ; 040B1D                                         || 040B1D 4B 46 04    2548  			DW24  MOVE			; ECH
	ld	b,(hl)                      ; 040B1E
	inc	b                          ; 040B1F
	ret	m                          ; 040B20                                         || 040B20 F8 0F 04    2549  			DW24  NEXT_EX			; EDH
	rrca                           ; 040B21
	inc	b                          ; 040B22
	pop	de                         ; 040B23                                         || 040B23 D1 0E 04    2550  			DW24  ON_EX_			; EEH
	ld	c,$04                       ; 040B24
	or	h                           ; 040B26                                         || 040B26 B4 14 04    2551  			DW24  VDU			; EFH
	inc	d                          ; 040B27
	inc	b                          ; 040B28
	add	hl,de                      ; 040B29                                         || 040B29 19 46 04    2552  			DW24  PLOT			; F0H
	ld	b,(hl)                      ; 040B2A
	inc	b                          ; 040B2B
	jp	c,$97040d                   ; 040B2C                                         || 040B2C DA 0D 04    2553  			DW24  PRINT_			; F1H
	djnz	$+$06                     ; 040B30
	jp	(hl)                        ; 040B32                                         || 040B32 E9 12 04    2555  			DW24  READ			; F3H
	ld	(de),a                      ; 040B33
	inc	b                          ; 040B34
	ld	a,$0c                       ; 040B35                                         || 040B35 3E 0C 04    2556  			DW24  REM_EX			; F4H
	inc	b                          ; 040B37
	ld	a,d                         ; 040B38                                         || 040B38 7A 0F 04    2557  			DW24  REPEAT_EX			; F5H
	rrca                           ; 040B39
	inc	b                          ; 040B3A
	and	d                          ; 040B3B                                         || 040B3B A2 13 04    2558  			DW24  REPOR			; F6H
	inc	de                         ; 040B3C || 	inc	de                         ; 040B29
	inc	b                          ; 040B3D || 	inc	b                          ; 040B2A
	or	h                           ; 040B3E                                         || 040B3E B4 13 04    2559  			DW24  RESTOR_EX			; F7H
	inc	de                         ; 040B3F || 	inc	de                         ; 040B2C
	inc	b                          ; 040B40 || 	inc	b                          ; 040B2D
	ld	l,b                         ; 040B41                                         || 040B41 68 0F 04    2560  			DW24  RETURN			; F8H
	rrca                           ; 040B42 || 	rrca                           ; 040B2F
	inc	b                          ; 040B43 || 	inc	b                          ; 040B30
	ld	e,c                         ; 040B44                                         || 040B44 59 0B 04    2561  			DW24  RUN			; F9H
	dec	bc                         ; 040B45 || 	dec	bc                         ; 040B32
	inc	b                          ; 040B46 || 	inc	b                          ; 040B33
	adc	a,d                        ; 040B47                                         || 040B47 8A 13 04    2562  			DW24  STOP			; FAH
	inc	de                         ; 040B48 || 	inc	de                         ; 040B35
	inc	b                          ; 040B49 || 	inc	b                          ; 040B36
	dec	(hl)                       ; 040B4A                                         || 040B4A 35 45 04    2563  			DW24  COLOUR			; FBH
	ld	b,l                         ; 040B4B
	inc	b                          ; 040B4C
	sub	(hl)                       ; 040B4D                                         || 040B4D 96 14 04    2564  			DW24  TRACE_EX			; FCH
	inc	d                          ; 040B4E
	inc	b                          ; 040B4F
	add	a,h                        ; 040B50                                         || 040B50 84 0F 04    2565  			DW24  UNTIL_EX			; FDH
	rrca                           ; 040B51
	inc	b                          ; 040B52
	adc	a,b                        ; 040B53                                         || 040B53 88 14 04    2566  			DW24  WIDTHV			; FEH
	inc	d                          ; 040B54
	inc	b                          ; 040B55
	inc	h                          ; 040B56                                         || 040B56 24 0C 04    2567  			DW24  CLI             		; FFH: OSCLI
	inc	c                          ; 040B57
	inc	b                          ; 040B58
	call	$0417b7                   ; 040B59                                         || 040B59 CD B7 17 04 2572  RUN:			CALL    TERMQ			; Standalone RUN command?
	jr	z,$+$12                     ; 040B5D                                         || 040B5D 28 10       2573  			JR      Z,RUN0			; Yes, so just RUN the code
	call	$040325                   ; 040B5F                                         || 040B5F CD 25 03 04 2577  CHAIN:			CALL    EXPRS			; Get the filename
	ld	a,$0d                       ; 040B63 || 	ld	a,$0d                       ; 040B50 || 040B63 3E 0D       2578  			LD      A,CR			; Terminate it with a CR
	ld	(de),a                      ; 040B65 || 	ld	(de),a                      ; 040B52 || 040B65 12          2579  			LD      (DE),A
	ld	sp,($044d20)                ; 040B66 || 	ld	sp,($044d20)                ; 040B53 || 040B66 ED 7B 20 4D 2580  CHAIN0:			LD      SP,(HIMEM)		; Reset SP
	call	$043880                   ; 040B6B || 	call	$04381f                   ; 040B58 || 040B6B CD 80 38 04 2581  			CALL    LOAD0			; And load the file in
	ld	sp,($044d20)                ; 040B6F || 	ld	sp,($044d20)                ; 040B5C || 040B6F ED 7B 20 4D 2583  RUN0:			LD      SP,(HIMEM)      	; Prepare for RUN
	ld	ix,$044d38                  ; 040B74 || 	ld	ix,$044d38                  ; 040B61 || 040B74 DD 21 38 4D 2584  			LD      IX,RANDOM		; Pointer to the RANDOM sysvar
	ld	a,r                         ; 040B79 || 	ld	a,r                         ; 040B66 || 040B79 ED 5F       2585  @@:			LD      A, R			; Use the R register to seed the random number generator
	jr	z,$-$02                     ; 040B7B || 	jr	z,$-$02                     ; 040B68 || 040B7B 28 FC       2586  			JR      Z, @B			; Loop unti we get a non-zero value in A
	rlca                           ; 040B7D || 	rlca                           ; 040B6A || 040B7D 07          2587  			RLCA				; Rotate it
	rlca                           ; 040B7E || 	rlca                           ; 040B6B || 040B7E 07          2588  			RLCA
	ld	(ix+$03),a                  ; 040B7F || 	ld	(ix+$03),a                  ; 040B6C || 040B7F DD 77 03    2589  			LD      (IX+3),A		; And store
	sbc	a,a                        ; 040B82 || 	sbc	a,a                        ; 040B6F || 040B82 9F          2590  			SBC     A,A			; Depending upon the C flag, this will either be 00h or FFh
	ld	(ix+$04),a                  ; 040B83 || 	ld	(ix+$04),a                  ; 040B70 || 040B83 DD 77 04    2591  			LD      (IX+4),A		; And store
	call	$0438d7                   ; 040B86 || 	call	$043876                   ; 040B73 || 040B86 CD D7 38 04 2592  			CALL    CLEAR
	ld	hl,$000000                  ; 040B8A || 	ld	hl,$000000                  ; 040B77 || 040B8A 21 00 00 00 2593  			LD      HL,0			; Clear the error trap sysvar
	ld	($044d2c),hl                ; 040B8E || 	ld	($044d2c),hl                ; 040B7B || 040B8E 22 2C 4D 04 2594  			LD      (ERRTRP),HL
	ld	hl,($044d14)                ; 040B92 || 	ld	hl,($044d14)                ; 040B7F || 040B92 2A 14 4D 04 2595  			LD      HL,(PAGE_)		; Load HL with the start of program memory (PAGE)
	ld	a,$dc                       ; 040B96 || 	ld	a,$dc                       ; 040B83 || 040B96 3E DC       2596  			LD      A,DATA_			; The DATA token value
	call	$04188b                   ; 040B98 || 	call	$04184e                   ; 040B85 || 040B98 CD 8B 18 04 2597  			CALL    SEARCH_EX          	; Search for the first DATA token in the tokenised listing
	ld	($044d31),hl                ; 040B9C || 	ld	($044d31),hl                ; 040B89 || 040B9C 22 31 4D 04 2598  			LD      (DATPTR),HL     	; Set data pointer
	ld	iy,($044d14)                ; 040BA0 || 	ld	iy,($044d14)                ; 040B8D || 040BA0 FD 2A 14 4D 2599  			LD      IY,(PAGE_)		; Load IY with the start of program memory
	call	$040bed                   ; 040BA5 || 	call	$040bda                   ; 040B92 || 040BA5 CD ED 0B 04 2601  XEQ0:			CALL    NEWLIN
	ld	($044d35),iy                ; 040BA9 || 	ld	($044d35),iy                ; 040B96 || 040BA9 FD 22 35 4D 2602  XEQ:			LD      (ERRLIN),IY     	; Error pointer
	call	$043fce                   ; 040BAE || 	call	$043f6d                   ; 040B9B || 040BAE CD CE 3F 04 2603  			CALL    TRAP           		; Check keyboard
	call	$040a83                   ; 040BB2 || 	call	$040a70                   ; 040B9F || 040BB2 CD 83 0A 04 2604  XEQ1:			CALL    NXT
	inc	iy                         ; 040BB6 || 	inc	iy                         ; 040BA3 || 040BB6 FD 23       2605  			INC     IY
	cp	$3a                         ; 040BB8 || 	cp	$3a                         ; 040BA5 || 040BB8 FE 3A       2606  			CP      ':'             	; Seperator
	jr	z,$-$08                     ; 040BBA || 	jr	z,$-$08                     ; 040BA7 || 040BBA 28 F6       2607  			JR      Z,XEQ1
	cp	$0d                         ; 040BBC || 	cp	$0d                         ; 040BA9 || 040BBC FE 0D       2608  			CP      CR
	jr	z,$-$19                     ; 040BBE || 	jr	z,$-$19                     ; 040BAB || 040BBE 28 E5       2609  			JR      Z,XEQ0          	; New program line
	sub	$c6                        ; 040BC0 || 	sub	$c6                        ; 040BAD || 040BC0 D6 C6       2610  			SUB     TCMD
	jp	c,$040c4d                   ; 040BC2 || 	jp	c,$040c3a                   ; 040BAF || 040BC2 DA 4D 0C 04 2611  			JP      C,LET0          	; Implied "LET"
	ld	bc,$000003                  ; 040BC6 || 	ld	bc,$000003                  ; 040BB3 || 040BC6 01 03 00 00 2613  			LD	BC, 3
	ld	b,a                         ; 040BCA || 	ld	b,a                         ; 040BB7 || 040BCA 47          2614  			LD	B, A
	mlt	bc                         ; 040BCB || 	mlt	bc                         ; 040BB8 || 040BCB ED 4C       2615  			MLT	BC
	ld	hl,$040aab                  ; 040BCD || 	ld	hl,$040a98                  ; 040BBA || 040BCD 21 AB 0A 04 2616  			LD	HL,CMDTAB
	add	hl,bc                      ; 040BD1 || 	add	hl,bc                      ; 040BBE || 040BD1 09          2617  			ADD	HL, BC
	ld	hl,(hl)                     ; 040BD2 || 	ld	hl,(hl)                     ; 040BBF || 040BD2 ED 27       2618  			LD	HL, (HL)		; Table entry
	call	$040a83                   ; 040BD4 || 	call	$040a70                   ; 040BC1 || 040BD4 CD 83 0A 04 2630  			CALL    NXT
	jp	(hl)                        ; 040BD8 || 	jp	(hl)                        ; 040BC5 || 040BD8 E9          2631  			JP      (HL)            	; Execute the statement
	call	$043a0f                   ; 040BD9 || 	call	$0439ae                   ; 040BC6 || 040BD9 CD 0F 3A 04 2635  END_:			CALL    SETLIN          ;FIND CURRENT LINE
	ld	a,h                         ; 040BDD || 	ld	a,h                         ; 040BCA || 040BDD 7C          2636  			LD      A,H
	or	l                           ; 040BDE || 	or	l                           ; 040BCB || 040BDE B5          2637  			OR      L               ;DIRECT?
	jp	z,$0430e1                   ; 040BDF || 	jp	z,$043080                   ; 040BCC || 040BDF CA E1 30 04 2638  			JP      Z,CLOOP
	ld	e,$00                       ; 040BE3 || 	ld	e,$00                       ; 040BD0 || 040BE3 1E 00       2639  			LD      E,0
	call	$04439d                   ; 040BE5 || 	call	$04432b                   ; 040BD2 || 040BE5 CD 9D 43 04 2640  			CALL    OSSHUT          ;CLOSE ALL FILES
	jp	$0430e0                     ; 040BE9 || 	jp	$04307f                     ; 040BD6 || 040BE9 C3 E0 30 04 2641  			JP      WARM            ;"Ready"
	ld	a,(iy)                      ; 040BED || 	ld	a,(iy)                      ; 040BDA || 040BED FD 7E 00    2643  NEWLIN:			LD      A,(IY+0)        ;A=LINE LENGTH
	ld	bc,$000003                  ; 040BF0 || 	ld	bc,$000003                  ; 040BDD || 040BF0 01 03 00 00 2644  			LD      BC,3
	add	iy,bc                      ; 040BF4 || 	add	iy,bc                      ; 040BE1 || 040BF4 FD 09       2645  			ADD     IY,BC
	or	a                           ; 040BF6 || 	or	a                           ; 040BE3 || 040BF6 B7          2646  			OR      A
	jr	z,$-$1e                     ; 040BF7 || 	jr	z,$-$1e                     ; 040BE4 || 040BF7 28 E0       2647  			JR      Z,END_           ;LENGTH=0, EXIT
	ld	hl,($044d26)                ; 040BF9 || 	ld	hl,($044d26)                ; 040BE6 || 040BF9 2A 26 4D 04 2648  			LD      HL,(TRACEN)
	ld	a,h                         ; 040BFD || 	ld	a,h                         ; 040BEA || 040BFD 7C          2649  			LD      A,H
	or	l                           ; 040BFE || 	or	l                           ; 040BEB || 040BFE B5          2650  			OR      L
	ret	z                          ; 040BFF || 	ret	z                          ; 040BEC || 040BFF C8          2651  			RET     Z
	ld	de,$000000                  ; 040C00 || 	ld	de,$000000                  ; 040BED || 040C00 11 00 00 00 2652  			LD	DE, 0		;Clear DE
	ld	d,(iy-$01)                  ; 040C04 || 	ld	d,(iy-$01)                  ; 040BF1 || 040C04 FD 56 FF    2653  			LD      D,(IY-1)        ;DE = LINE NUMBER
	ld	e,(iy-$02)                  ; 040C07 || 	ld	e,(iy-$02)                  ; 040BF4 || 040C07 FD 5E FE    2654  			LD      E,(IY-2)
	sbc	hl,de                      ; 040C0A || 	sbc	hl,de                      ; 040BF7 || 040C0A ED 52       2655  			SBC     HL,DE
	ret	c                          ; 040C0C || 	ret	c                          ; 040BF9 || 040C0C D8          2656  			RET     C
	ex	de,hl                       ; 040C0D || 	ex	de,hl                       ; 040BFA || 040C0D EB          2657  			EX      DE,HL
	ld	a,$5b                       ; 040C0E || 	ld	a,$5b                       ; 040BFB || 040C0E 3E 5B       2658  			LD      A,'['           ;TRACE
	call	$0439b0                   ; 040C10 || 	call	$04394f                   ; 040BFD || 040C10 CD B0 39 04 2659  			CALL    OUTCHR
	call	$043a58                   ; 040C14 || 	call	$0439f7                   ; 040C01 || 040C14 CD 58 3A 04 2660  			CALL    PBCDL
	ld	a,$5d                       ; 040C18 || 	ld	a,$5d                       ; 040C05 || 040C18 3E 5D       2661  			LD      A,']'
	call	$0439b0                   ; 040C1A || 	call	$04394f                   ; 040C07 || 040C1A CD B0 39 04 2662  			CALL    OUTCHR
	ld	a,$20                       ; 040C1E || 	ld	a,$20                       ; 040C0B || 040C1E 3E 20       2663  			LD      A,' '
	jp	$0439b0                     ; 040C20 || 	jp	$04394f                     ; 040C0D || 040C20 C3 B0 39 04 2664  			JP      OUTCHR
	call	$040325                   ; 040C24 || 	call	$040315                   ; 040C11 || 040C24 CD 25 03 04 2670  CLI:			CALL    EXPRS
	ld	a,$0d                       ; 040C28 || 	ld	a,$0d                       ; 040C15 || 040C28 3E 0D       2671  			LD      A,CR
	ld	(de),a                      ; 040C2A || 	ld	(de),a                      ; 040C17 || 040C2A 12          2672  			LD      (DE),A
	ld	hl,$044a00                  ; 040C2B || 	ld	hl,$044a00                  ; 040C18 || 040C2B 21 00 4A 04 2673  			LD      HL,ACCS
	call	$043ff1                   ; 040C2F || 	call	$043f90                   ; 040C1C || 040C2F CD F1 3F 04 2674  			CALL    OSCLI
	jp	$040ba9                     ; 040C33 || 	jp	$040b96                     ; 040C20 || 040C33 C3 A9 0B 04 2675  			JP      XEQ
	push	iy                        ; 040C37 || 	push	iy                        ; 040C24 || 040C37 FD E5       2679  EXT_EX:			PUSH    IY
	pop	hl                         ; 040C39 || 	pop	hl                         ; 040C26 || 040C39 E1          2680  			POP     HL
	call	$043ff1                   ; 040C3A || 	call	$043f90                   ; 040C27 || 040C3A CD F1 3F 04 2681  			CALL    OSCLI
	push	iy                        ; 040C3E || 	push	iy                        ; 040C2B || 040C3E FD E5       2682  REM_EX:			PUSH    IY
	pop	hl                         ; 040C40 || 	pop	hl                         ; 040C2D || 040C40 E1          2683  			POP     HL
	ld	a,$0d                       ; 040C41 || 	ld	a,$0d                       ; 040C2E || 040C41 3E 0D       2684  			LD      A,CR
	ld	b,a                         ; 040C43 || 	ld	b,a                         ; 040C30 || 040C43 47          2685  			LD      B,A
	cpir                           ; 040C44 || 	cpir                           ; 040C31 || 040C44 ED B1       2686  			CPIR                    ;FIND LINE END
	push	hl                        ; 040C46 || 	push	hl                        ; 040C33 || 040C46 E5          2687  			PUSH    HL
	pop	iy                         ; 040C47 || 	pop	iy                         ; 040C34 || 040C47 FD E1       2688  			POP     IY
	jp	$040ba5                     ; 040C49 || 	jp	$040b92                     ; 040C36 || 040C49 C3 A5 0B 04 2689  			JP      XEQ0
	cp	$c5                         ; 040C4D || 	cp	$c5                         ; 040C3A || 040C4D FE C5       2693  LET0:			CP      ELSE_-TCMD
	jr	z,$-$11                     ; 040C4F || 	jr	z,$-$11                     ; 040C3C || 040C4F 28 ED       2694  			JR      Z,REM_EX
	cp	$64                         ; 040C51 || 	cp	$64                         ; 040C3E || 040C51 FE 64       2701  			CP      '*'-TCMD & 0FFH
	jr	z,$-$1c                     ; 040C53 || 	jr	z,$-$1c                     ; 040C40 || 040C53 28 E2       2702  			JR      Z,EXT_EX
	cp	$77                         ; 040C55 || 	cp	$77                         ; 040C42 || 040C55 FE 77       2703  			CP      '='-TCMD & 0FFH
	jr	z,$+$5d                     ; 040C57 || 	jr	z,$+$5d                     ; 040C44 || 040C57 28 5B       2704  			JR      Z,FNEND
	cp	$95                         ; 040C59 || 	cp	$95                         ; 040C46 || 040C59 FE 95       2705  			CP      '['-TCMD & 0FFH
	jr	z,$+$27                     ; 040C5B || 	jr	z,$+$27                     ; 040C48 || 040C5B 28 25       2706  			JR      Z,ASM
	dec	iy                         ; 040C5D || 	dec	iy                         ; 040C4A || 040C5D FD 2B       2707  			DEC     IY
	call	$0415fb                   ; 040C5F || 	call	$0415be                   ; 040C4C || 040C5F CD FB 15 04 2708  LET:			CALL    ASSIGN			; Assign the variable
	jp	z,$040ba9                   ; 040C63 || 	jp	z,$040b96                   ; 040C50 || 040C63 CA A9 0B 04 2709  			JP      Z,XEQ			; Return if Z as it is a numeric variable that has been assigned in ASSIGN
	jr	c,$+$43                     ; 040C67 || 	jr	c,$+$43                     ; 040C54 || 040C67 38 41       2710  			JR      C,SYNTAX        	; Return if C as it is an illegal variable
	push	af                        ; 040C69 || 	push	af                        ; 040C56 || 040C69 F5          2712  			PUSH    AF              	; At this point we're dealing with a string type (A=81h)
	call	$0417cd                   ; 040C6A || 	call	$041790                   ; 040C57 || 040C6A CD CD 17 04 2713  			CALL    EQUALS			; Check if the variable is followed by an '=' symbol; this will throw a 'Mistake' error if not
	push	hl                        ; 040C6E || 	push	hl                        ; 040C5B || 040C6E E5          2714  			PUSH    HL			; HL: Address of the variable
	call	$040325                   ; 040C6F || 	call	$040315                   ; 040C5C || 040C6F CD 25 03 04 2715  			CALL    EXPRS
	pop	ix                         ; 040C73 || 	pop	ix                         ; 040C60 || 040C73 DD E1       2716  			POP     IX			; IX: Address of the variable
	pop	af                         ; 040C75 || 	pop	af                         ; 040C62 || 040C75 F1          2717  			POP     AF			; AF: The variable type
	call	$04163d                   ; 040C76 || 	call	$041600                   ; 040C63 || 040C76 CD 3D 16 04 2718  			CALL    STACCS			; Copy the string from ACCS to the variable area
	jp	$040ba9                     ; 040C7A || 	jp	$040b96                     ; 040C67 || 040C7A C3 A9 0B 04 2719  XEQR:			JP      XEQ
	call	$040bed                   ; 040C7E || 	call	$040bda                   ; 040C6B || 040C7E CD ED 0B 04 2721  ASM0:			CALL    NEWLIN
	ld	($044d35),iy                ; 040C82 || 	ld	($044d35),iy                ; 040C6F || 040C82 FD 22 35 4D 2722  ASM:			LD      (ERRLIN),IY
	call	$043fce                   ; 040C87 || 	call	$043f6d                   ; 040C74 || 040C87 CD CE 3F 04 2723  			CALL    TRAP
	call	$0418d8                   ; 040C8B || 	call	$04189b                   ; 040C78 || 040C8B CD D8 18 04 2724  			CALL    ASSEM
	jr	c,$+$1b                     ; 040C8F || 	jr	c,$+$1b                     ; 040C7C || 040C8F 38 19       2725  			JR      C,SYNTAX
	cp	$0d                         ; 040C91 || 	cp	$0d                         ; 040C7E || 040C91 FE 0D       2726  			CP      CR
	jr	z,$-$15                     ; 040C93 || 	jr	z,$-$15                     ; 040C80 || 040C93 28 E9       2727  			JR      Z,ASM0
	ld	hl,$044d40                  ; 040C95 || 	ld	hl,$044d40                  ; 040C82 || 040C95 21 40 4D 04 2728  			LD      HL,LISTON
	ld	a,(hl)                      ; 040C99 || 	ld	a,(hl)                      ; 040C86 || 040C99 7E          2729  			LD      A,(HL)
	and	$0f                        ; 040C9A || 	and	$0f                        ; 040C87 || 040C9A E6 0F       2730  			AND     0FH
	or	$b0                         ; 040C9C || 	or	$b0                         ; 040C89 || 040C9C F6 B0       2731  			OR      B0H
	ld	(hl),a                      ; 040C9E || 	ld	(hl),a                      ; 040C8B || 040C9E 77          2732  			LD      (HL),A
	jr	$-$25                       ; 040C9F || 	jr	$-$25                       ; 040C8C || 040C9F 18 D9       2733  			JR      XEQR
	call	$043a9b                   ; 040CA1 || 	call	$043a3a                   ; 040C8E || 040CA1 CD 9B 3A 04 2735  VAR_:			CALL    GETVAR
	ret	z                          ; 040CA5 || 	ret	z                          ; 040C92 || 040CA5 C8          2736  			RET     Z
	jp	nc,$043a8a                  ; 040CA6 || 	jp	nc,$043a29                  ; 040C93 || 040CA6 D2 8A 3A 04 2737  			JP      NC,PUTVAR
	ld	a,$10                       ; 040CAA || 	ld	a,$10                       ; 040C97 || 040CAA 3E 10       2738  SYNTAX:			LD      A,16            ;"Syntax error"
	jr	$+$04                       ; 040CAC || 	jr	$+$04                       ; 040C99 || 040CAC 18 02       2739  			JR	ERROR0_EX
	ld	a,$11                       ; 040CAE || 	ld	a,$11                       ; 040C9B || 040CAE 3E 11       2740  ESCAPE:			LD      A,17            ;"Escape"
	jp	$0437c1                     ; 040CB0 || 	jp	$043760                     ; 040C9D || 040CB0 C3 C1 37 04 2741  ERROR0_EX:			JP      ERROR_
	call	$0401d2                   ; 040CB4 || 	call	$0401c7                   ; 040CA1 || 040CB4 CD D2 01 04 2745  FNEND:			CALL    EXPR            ;FUNCTION RESULT
	ld	b,e                         ; 040CB8 || 	ld	b,e                         ; 040CA5 || 040CB8 43          2746  			LD      B,E
	ex	de,hl                       ; 040CB9 || 	ex	de,hl                       ; 040CA6 || 040CB9 EB          2747  			EX      DE,HL
	exx                            ; 040CBA || 	exx                            ; 040CA7 || 040CBA D9          2748  			EXX                     ;SAVE RESULT
	ex	de,hl                       ; 040CBB || 	ex	de,hl                       ; 040CA8 || 040CBB EB          2749  			EX      DE,HL           ; IN DEB'C'D'E'
	pop	bc                         ; 040CBC || 	pop	bc                         ; 040CA9 || 040CBC C1          2750  FNEND5:			POP     BC
	ld	hl,$041795                  ; 040CBD || 	ld	hl,$041758                  ; 040CAA || 040CBD 21 95 17 04 2751  			LD      HL,LOCCHK
	or	a                           ; 040CC1 || 	or	a                           ; 040CAE || 040CC1 B7          2752  			OR      A
	sbc	hl,bc                      ; 040CC2 || 	sbc	hl,bc                      ; 040CAF || 040CC2 ED 42       2753  			SBC     HL,BC
	jr	z,$+$1e                     ; 040CC4 || 	jr	z,$+$1e                     ; 040CB1 || 040CC4 28 1C       2754  			JR      Z,FNEND0        ;LOCAL VARIABLE
	ld	hl,$041097                  ; 040CC6 || 	ld	hl,$041084                  ; 040CB3 || 040CC6 21 97 10 04 2755  			LD      HL,FNCHK
	or	a                           ; 040CCA || 	or	a                           ; 040CB7 || 040CCA B7          2756  			OR      A
	sbc	hl,bc                      ; 040CCB || 	sbc	hl,bc                      ; 040CB8 || 040CCB ED 42       2757  			SBC     HL,BC
	ld	a,$07                       ; 040CCD || 	ld	a,$07                       ; 040CBA || 040CCD 3E 07       2758  			LD      A,7
	jr	nz,$-$1f                    ; 040CCF || 	jr	nz,$-$1f                    ; 040CBC || 040CCF 20 DF       2759  			JR      NZ,ERROR0_EX       ;"No FN"
	pop	iy                         ; 040CD1 || 	pop	iy                         ; 040CBE || 040CD1 FD E1       2760  			POP     IY
	ld	($044d35),iy                ; 040CD3 || 	ld	($044d35),iy                ; 040CC0 || 040CD3 FD 22 35 4D 2761  			LD      (ERRLIN),IY     ;IN CASE OF ERROR
	ex	de,hl                       ; 040CD8 || 	ex	de,hl                       ; 040CC5 || 040CD8 EB          2762  			EX      DE,HL
	exx                            ; 040CD9 || 	exx                            ; 040CC6 || 040CD9 D9          2763  			EXX
	ex	de,hl                       ; 040CDA || 	ex	de,hl                       ; 040CC7 || 040CDA EB          2764  			EX      DE,HL
	ld	de,$044a00                  ; 040CDB || 	ld	de,$044a00                  ; 040CC8 || 040CDB 11 00 4A 04 2765  			LD      DE,ACCS
	ld	e,b                         ; 040CDF || 	ld	e,b                         ; 040CCC || 040CDF 58          2766  			LD      E,B
	ex	af,af'                      ; 040CE0 || 	ex	af,af'                      ; 040CCD || 040CE0 08          2767  			EX      AF,AF'
	ret                            ; 040CE1 || 	ret                            ; 040CCE || 040CE1 C9          2768  			RET
	pop	ix                         ; 040CE2 || 	pop	ix                         ; 040CCF || 040CE2 DD E1       2770  FNEND0:			POP     IX
	pop	bc                         ; 040CE4 || 	pop	bc                         ; 040CD1 || 040CE4 C1          2771  			POP     BC
	ld	a,b                         ; 040CE5 || 	ld	a,b                         ; 040CD2 || 040CE5 78          2772  			LD      A,B
	or	a                           ; 040CE6 || 	or	a                           ; 040CD3 || 040CE6 B7          2773  			OR      A
	jp	m,$040cf5                   ; 040CE7 || 	jp	m,$040ce2                   ; 040CD4 || 040CE7 FA F5 0C 04 2774  			JP      M,FNEND1        ;STRING
	pop	hl                         ; 040CEB || 	pop	hl                         ; 040CD8 || 040CEB E1          2775  			POP     HL
	exx                            ; 040CEC || 	exx                            ; 040CD9 || 040CEC D9          2776  			EXX
	pop	hl                         ; 040CED || 	pop	hl                         ; 040CDA || 040CED E1          2777  			POP     HL
	exx                            ; 040CEE || 	exx                            ; 040CDB || 040CEE D9          2778  			EXX
	call	$041613                   ; 040CEF || 	call	$0415d6                   ; 040CDC || 040CEF CD 13 16 04 2779  			CALL    STORE
	jr	$-$37                       ; 040CF3 || 	jr	$-$37                       ; 040CE0 || 040CF3 18 C7       2780  			JR      FNEND5
	ld	hl,$000000                  ; 040CF5 || 	ld	hl,$000000                  ; 040CE2 || 040CF5 21 00 00 00 2781  FNEND1:			LD      HL,0
	add	hl,sp                      ; 040CF9 || 	add	hl,sp                      ; 040CE6 || 040CF9 39          2782  			ADD     HL,SP
	push	de                        ; 040CFA || 	push	de                        ; 040CE7 || 040CFA D5          2783  			PUSH    DE
	ld	e,c                         ; 040CFB || 	ld	e,c                         ; 040CE8 || 040CFB 59          2784  			LD      E,C
	call	$041641                   ; 040CFC || 	call	$041604                   ; 040CE9 || 040CFC CD 41 16 04 2785  			CALL    STORES
	pop	de                         ; 040D00 || 	pop	de                         ; 040CED || 040D00 D1          2786  			POP     DE
	ld	sp,hl                       ; 040D01 || 	ld	sp,hl                       ; 040CEE || 040D01 F9          2787  			LD      SP,HL
	jr	$-$46                       ; 040D02 || 	jr	$-$46                       ; 040CEF || 040D02 18 B8       2788  			JR      FNEND5
	call	$043a9b                   ; 040D04 || 	call	$043a3a                   ; 040CF1 || 040D04 CD 9B 3A 04 2793  DIM_EX:			CALL    GETVAR          	; Get the variable
	jp	c,$040d94                   ; 040D08 || 	jp	c,$040d81                   ; 040CF5 || 040D08 DA 94 0D 04 2794  			JP      C,BADDIM		; Throw a "Bad Dim" error
	jp	z,$040d9e                   ; 040D0C || 	jp	z,$040d8b                   ; 040CF9 || 040D0C CA 9E 0D 04 2795  			JP      Z,DIM4			; If Z then the command is DIM var% expr, so don't need to create an entity
	call	$043c0f                   ; 040D10 || 	call	$043bae                   ; 040CFD || 040D10 CD 0F 3C 04 2796  			CALL    CREATE			; Create a new entity
	push	hl                        ; 040D14 || 	push	hl                        ; 040D01 || 040D14 E5          2797  			PUSH    HL			; HL: Address of the entity
	pop	ix                         ; 040D15 || 	pop	ix                         ; 040D02 || 040D15 DD E1       2798  			POP     IX			; IX: Address of the entity
	ld	a,(iy)                      ; 040D17 || 	ld	a,(iy)                      ; 040D04 || 040D17 FD 7E 00    2799  			LD      A,(IY)			; Fetch the next character from the tokenised string
	cp	$28                         ; 040D1A || 	cp	$28                         ; 040D07 || 040D1A FE 28       2800  			CP      '('			; Check for opening brackets
	ld	a,d                         ; 040D1C || 	ld	a,d                         ; 040D09 || 040D1C 7A          2801  			LD      A,D			;  A: The dimension variable type (04h = Integer, 05h = Float, 81h = String)
	jr	nz,$+$81                    ; 040D1D || 	jr	nz,$+$81                    ; 040D0A || 040D1D 20 7F       2802  			JR      NZ,DIM4			; It is not a bracket; the command is DIM var expr
	push	hl                        ; 040D1F || 	push	hl                        ; 040D0C || 040D1F E5          2806  			PUSH    HL			; HL: Address of the entity
	push	af                        ; 040D20 || 	push	af                        ; 040D0D || 040D20 F5          2807  			PUSH    AF           	   	;  A: Entity type (04h = Integer, 05h = Float, 81h = String)
	ld	de,$000001                  ; 040D21 || 	ld	de,$000001                  ; 040D0E || 040D21 11 01 00 00 2808  			LD      DE,1			; DE: Total size of array accumulator (important for multi-dimensioned arrays)
	ld	b,d                         ; 040D25 || 	ld	b,d                         ; 040D12 || 040D25 42          2809  			LD      B,D			;  B: The number of dimensions in the array
	inc	iy                         ; 040D26 || 	inc	iy                         ; 040D13 || 040D26 FD 23       2811  DIM1:			INC     IY			; Skip to the next token
	push	bc                        ; 040D28 || 	push	bc                        ; 040D15 || 040D28 C5          2812  			PUSH    BC			; Stack the dimension counter
	push	de                        ; 040D29 || 	push	de                        ; 040D16 || 040D29 D5          2813  			PUSH    DE			; Stack the total size of array accumulator
	push	ix                        ; 040D2A || 	push	ix                        ; 040D17 || 040D2A DD E5       2814  			PUSH    IX			; Stack the entity address
	call	$04031a                   ; 040D2C || 	call	$04030a                   ; 040D19 || 040D2C CD 1A 03 04 2815  			CALL    EXPRI           	; Fetch the size of this dimension
	bit	7,h                        ; 040D30 || 	bit	7,h                        ; 040D1D || 040D30 CB 7C       2816  			BIT     7,H			; If it is negative then
	jr	nz,$+$62                    ; 040D32 || 	jr	nz,$+$62                    ; 040D1F || 040D32 20 60       2817  			JR      NZ,BADDIM		; Throw a "Bad Dim" error
	exx                            ; 040D34 || 	exx                            ; 040D21 || 040D34 D9          2818  			EXX
	inc	hl                         ; 040D35 || 	inc	hl                         ; 040D22 || 040D35 23          2819  			INC     HL			; HL: Size of this dimension; increment (BBC BASIC DIMs are always one bigger)
	pop	ix                         ; 040D36 || 	pop	ix                         ; 040D23 || 040D36 DD E1       2820  			POP     IX			; IX: The entity address
	inc	ix                         ; 040D38 || 	inc	ix                         ; 040D25 || 040D38 DD 23       2821  			INC     IX
	ld	(ix),l                      ; 040D3A || 	ld	(ix),l                      ; 040D27 || 040D3A DD 75 00    2822  			LD      (IX),L          	; Save the size of this dimension in the entity
	inc	ix                         ; 040D3D || 	inc	ix                         ; 040D2A || 040D3D DD 23       2823  			INC     IX
	ld	(ix),h                      ; 040D3F || 	ld	(ix),h                      ; 040D2C || 040D3F DD 74 00    2824  			LD      (IX),H
	pop	bc                         ; 040D42 || 	pop	bc                         ; 040D2F || 040D42 C1          2825  			POP     BC
	call	$0418af                   ; 040D43 || 	call	$041872                   ; 040D30 || 040D43 CD AF 18 04 2826  			CALL    MUL16           	; HL = HL * BC (Number of Dimensions * Total size of array accumulator)
	jr	c,$+$51                     ; 040D47 || 	jr	c,$+$51                     ; 040D34 || 040D47 38 4F       2827  			JR      C,NOROOM        	; Throw a "No Room" error if overflow
	ex	de,hl                       ; 040D49 || 	ex	de,hl                       ; 040D36 || 040D49 EB          2828  			EX      DE,HL           	; DE: The new total size of array accumulator
	pop	bc                         ; 040D4A || 	pop	bc                         ; 040D37 || 040D4A C1          2829  			POP     BC
	inc	b                          ; 040D4B || 	inc	b                          ; 040D38 || 040D4B 04          2830  			INC     B               	;  B: The dimension counter; increment
	ld	a,(iy)                      ; 040D4C || 	ld	a,(iy)                      ; 040D39 || 040D4C FD 7E 00    2831  			LD      A,(IY)			; Fetch the nex token
	cp	$2c                         ; 040D4F || 	cp	$2c                         ; 040D3C || 040D4F FE 2C       2832  			CP      ','             	; Check for another dimension in the array
	jr	z,$-$2b                     ; 040D51 || 	jr	z,$-$2b                     ; 040D3E || 040D51 28 D3       2833  			JR      Z,DIM1			; And loop
	call	$040a42                   ; 040D53 || 	call	$040a2f                   ; 040D40 || 040D53 CD 42 0A 04 2835  			CALL    BRAKET          	; Check for closing bracket
	pop	af                         ; 040D57 || 	pop	af                         ; 040D44 || 040D57 F1          2836  			POP     AF              	; Restore the type
	inc	ix                         ; 040D58 || 	inc	ix                         ; 040D45 || 040D58 DD 23       2837  			INC     IX
	ex	(sp),ix                     ; 040D5A || 	ex	(sp),ix                     ; 040D47 || 040D5A DD E3       2838  			EX      (SP),IX
	ld	(ix),b                      ; 040D5C || 	ld	(ix),b                      ; 040D49 || 040D5C DD 70 00    2839  			LD      (IX),B          	; Number of dimensions
	call	$0418a2                   ; 040D5F || 	call	$041865                   ; 040D4C || 040D5F CD A2 18 04 2840  			CALL    X4OR5           	; Dimension Accumulator Value * 4 or * 5 depending on type
	pop	hl                         ; 040D63 || 	pop	hl                         ; 040D50 || 040D63 E1          2841  			POP     HL			; Restore the entity address
	jr	c,$+$34                     ; 040D64 || 	jr	c,$+$34                     ; 040D51 || 040D64 38 32       2842  			JR      C,NOROOM		; Throw a "No Room" error if there is an overflow
	add	hl,de                      ; 040D66 || 	add	hl,de                      ; 040D53 || 040D66 19          2846  DIM3:			ADD     HL,DE
	jr	c,$+$31                     ; 040D67 || 	jr	c,$+$31                     ; 040D54 || 040D67 38 2F       2847  			JR      C,NOROOM
	push	hl                        ; 040D69 || 	push	hl                        ; 040D56 || 040D69 E5          2848  			PUSH    HL
	inc	h                          ; 040D6A || 	inc	h                          ; 040D57 || 040D6A 24          2849  			INC     H
	jr	z,$+$2d                     ; 040D6B || 	jr	z,$+$2d                     ; 040D58 || 040D6B 28 2B       2850  			JR      Z,NOROOM
	sbc	hl,sp                      ; 040D6D || 	sbc	hl,sp                      ; 040D5A || 040D6D ED 72       2851  			SBC     HL,SP
	jr	nc,$+$29                    ; 040D6F || 	jr	nc,$+$29                    ; 040D5C || 040D6F 30 27       2852  			JR      NC,NOROOM       	; Throw an "Out of Space" error
	pop	hl                         ; 040D71 || 	pop	hl                         ; 040D5E || 040D71 E1          2853  			POP     HL
	ld	($044d1d),hl                ; 040D72 || 	ld	($044d1d),hl                ; 040D5F || 040D72 22 1D 4D 04 2854  			LD      (FREE),HL
	ld	a,d                         ; 040D76 || 	ld	a,d                         ; 040D63 || 040D76 7A          2855  DIM2:			LD      A,D
	or	e                           ; 040D77 || 	or	e                           ; 040D64 || 040D77 B3          2856  			OR      E
	jr	z,$+$08                     ; 040D78 || 	jr	z,$+$08                     ; 040D65 || 040D78 28 06       2857  			JR      Z,DIM5
	dec	hl                         ; 040D7A || 	dec	hl                         ; 040D67 || 040D7A 2B          2858  			DEC     HL
	ld	(hl),$00                    ; 040D7B || 	ld	(hl),$00                    ; 040D68 || 040D7B 36 00       2859  			LD      (HL),0         		; Initialise the array
	dec	de                         ; 040D7D || 	dec	de                         ; 040D6A || 040D7D 1B          2860  			DEC     DE
	jr	$-$08                       ; 040D7E || 	jr	$-$08                       ; 040D6B || 040D7E 18 F6       2861  			JR      DIM2
	call	$040a83                   ; 040D80 || 	call	$040a70                   ; 040D6D || 040D80 CD 83 0A 04 2862  DIM5:			CALL    NXT
	cp	$2c                         ; 040D84 || 	cp	$2c                         ; 040D71 || 040D84 FE 2C       2863  			CP      ','            		; Another variable?
	jp	nz,$040ba9                  ; 040D86 || 	jp	nz,$040b96                  ; 040D73 || 040D86 C2 A9 0B 04 2864  			JP      NZ,XEQ
	inc	iy                         ; 040D8A || 	inc	iy                         ; 040D77 || 040D8A FD 23       2865  			INC     IY
	call	$040a83                   ; 040D8C || 	call	$040a70                   ; 040D79 || 040D8C CD 83 0A 04 2866  			CALL    NXT
	jp	$040d04                     ; 040D90 || 	jp	$040cf1                     ; 040D7D || 040D90 C3 04 0D 04 2867  			JP      DIM_EX
	ld	a,$0a                       ; 040D94 || 	ld	a,$0a                       ; 040D81 || 040D94 3E 0A       2871  BADDIM:			LD      A,10            	; Throw a "Bad DIM" error
	jr	$+$04                       ; 040D96 || 	jr	$+$04                       ; 040D83 || 040D96 18 02       2872  			JR	ERROR1_EX
	ld	a,$0b                       ; 040D98 || 	ld	a,$0b                       ; 040D85 || 040D98 3E 0B       2873  NOROOM:			LD      A,11            	; Throw a "DIM space" error
	jp	$0437c1                     ; 040D9A || 	jp	$043760                     ; 040D87 || 040D9A C3 C1 37 04 2874  ERROR1_EX:			JP      ERROR_
	or	a                           ; 040D9E || 	or	a                           ; 040D8B || 040D9E B7          2879  DIM4:			OR      A			;  A: The dimension variable type
	jr	z,$-$0b                     ; 040D9F || 	jr	z,$-$0b                     ; 040D8C || 040D9F 28 F3       2880  			JR      Z,BADDIM		; Throw "Bad Dim" if variable is an 8-bit indirection
	jp	m,$040d94                   ; 040DA1 || 	jp	m,$040d81                   ; 040D8E || 040DA1 FA 94 0D 04 2881  			JP      M,BADDIM        	; or a string
	ld	b,a                         ; 040DA5 || 	ld	b,a                         ; 040D92 || 040DA5 47          2882  			LD      B,A			; Temporarily store the dimension variable type in B
	ld	a,(iy-$01)                  ; 040DA6 || 	ld	a,(iy-$01)                  ; 040D93 || 040DA6 FD 7E FF    2883  			LD      A,(IY-1)		; Get the last character but one
	cp	$29                         ; 040DA9 || 	cp	$29                         ; 040D96 || 040DA9 FE 29       2884  			CP      ')'			; Check if it is a trailing bracket
	jr	z,$-$17                     ; 040DAB || 	jr	z,$-$17                     ; 040D98 || 040DAB 28 E7       2885  			JR      Z,BADDIM		; And throw a "Bad Dim" error if there is a trailing bracket
	ld	hl,$000000                  ; 040DAD || 	ld	hl,$000000                  ; 040D9A || 040DAD 21 00 00 00 2887  			LD	HL,0			; Clear HL
	ld	a,($044d1d)                 ; 040DB1 || 	ld	a,($044d1d)                 ; 040D9E || 040DB1 3A 1D 4D 04 2888  			LD	A,(FREE+0)		; HL: Lower 16 bits of FREE
	ld	l,a                         ; 040DB5 || 	ld	l,a                         ; 040DA2 || 040DB5 6F          2889  			LD	L,A
	ld	a,($044d1e)                 ; 040DB6 || 	ld	a,($044d1e)                 ; 040DA3 || 040DB6 3A 1E 4D 04 2890  			LD	A,(FREE+1)
	ld	h,a                         ; 040DBA || 	ld	h,a                         ; 040DA7 || 040DBA 67          2891  			LD	H,A
	ld	a,b                         ; 040DBB || 	ld	a,b                         ; 040DA8 || 040DBB 78          2892  			LD	A,B			; Restore the dimension variable type
	exx                            ; 040DBC || 	exx                            ; 040DA9 || 040DBC D9          2893  			EXX
	ld	hl,$000000                  ; 040DBD || 	ld	hl,$000000                  ; 040DAA || 040DBD 21 00 00 00 2894  			LD	HL,0			; Clear HL
	ld	b,a                         ; 040DC1 || 	ld	b,a                         ; 040DAE || 040DC1 47          2895  			LD	B,A			; Temporarily store the dimension variable type in B
	ld	a,($044d1f)                 ; 040DC2 || 	ld	a,($044d1f)                 ; 040DAF || 040DC2 3A 1F 4D 04 2896  			LD	A,(FREE+2)		; HL: Upper 8 bits of FREE (bits 16-23)
	ld	l,a                         ; 040DC6 || 	ld	l,a                         ; 040DB3 || 040DC6 6F          2897  			LD	L,A
	ld	a,b                         ; 040DC7 || 	ld	a,b                         ; 040DB4 || 040DC7 78          2898  			LD	A,B			; Restore the dimension variable type
	ld	c,h                         ; 040DC8 || 	ld	c,h                         ; 040DB5 || 040DC8 4C          2899  			LD	C,H
	call	$041613                   ; 040DC9 || 	call	$0415d6                   ; 040DB6 || 040DC9 CD 13 16 04 2900  			CALL    STORE           	; Store the address
	call	$04031a                   ; 040DCD || 	call	$04030a                   ; 040DBA || 040DCD CD 1A 03 04 2901  			CALL    EXPRI			; Get the number of bytes to store
	exx                            ; 040DD1 || 	exx                            ; 040DBE || 040DD1 D9          2902  			EXX
	inc	hl                         ; 040DD2 || 	inc	hl                         ; 040DBF || 040DD2 23          2903  			INC     HL			; Add one to it
	ex	de,hl                       ; 040DD3 || 	ex	de,hl                       ; 040DC0 || 040DD3 EB          2904  			EX      DE,HL
	ld	hl,($044d1d)                ; 040DD4 || 	ld	hl,($044d1d)                ; 040DC1 || 040DD4 2A 1D 4D 04 2905  			LD      HL,(FREE)
	jr	$-$72                       ; 040DD8 || 	jr	$-$72                       ; 040DC5 || 040DD8 18 8C       2906  			JR      DIM3			; Continue with the DIM
	cp	$23                         ; 040DDA || 	cp	$23                         ; 040DC7 || 040DDA FE 23       2911  PRINT_:			CP      '#'
	jr	nz,$+$7e                    ; 040DDC || 	jr	nz,$+$7e                    ; 040DC9 || 040DDC 20 7C       2912  			JR      NZ,PRINT0
	call	$0418cf                   ; 040DDE || 	call	$041892                   ; 040DCB || 040DDE CD CF 18 04 2913  			CALL    CHNL            ;CHANNEL NO. = E
	call	$040a83                   ; 040DE2 || 	call	$040a70                   ; 040DCF || 040DE2 CD 83 0A 04 2914  PRNTN1:			CALL    NXT
	cp	$2c                         ; 040DE6 || 	cp	$2c                         ; 040DD3 || 040DE6 FE 2C       2915  			CP      ','
	jp	nz,$040ba9                  ; 040DE8 || 	jp	nz,$040b96                  ; 040DD5 || 040DE8 C2 A9 0B 04 2916  			JP      NZ,XEQ
	inc	iy                         ; 040DEC || 	inc	iy                         ; 040DD9 || 040DEC FD 23       2917  			INC     IY
	push	de                        ; 040DEE || 	push	de                        ; 040DDB || 040DEE D5          2918  			PUSH    DE
	call	$0401d2                   ; 040DEF || 	call	$0401c7                   ; 040DDC || 040DEF CD D2 01 04 2919  			CALL    EXPR            ;ITEM TO PRINT
	ex	af,af'                      ; 040DF3 || 	ex	af,af'                      ; 040DE0 || 040DF3 08          2920  			EX      AF,AF'
	jp	m,$040e1a                   ; 040DF4 || 	jp	m,$040e07                   ; 040DE1 || 040DF4 FA 1A 0E 04 2921  			JP      M,PRNTN2        ;STRING
	pop	de                         ; 040DF8 || 	pop	de                         ; 040DE5 || 040DF8 D1          2922  			POP     DE
	push	bc                        ; 040DF9 || 	push	bc                        ; 040DE6 || 040DF9 C5          2923  			PUSH    BC
	exx                            ; 040DFA || 	exx                            ; 040DE7 || 040DFA D9          2924  			EXX
	ld	a,l                         ; 040DFB || 	ld	a,l                         ; 040DE8 || 040DFB 7D          2925  			LD      A,L
	exx                            ; 040DFC || 	exx                            ; 040DE9 || 040DFC D9          2926  			EXX
	call	$0443ad                   ; 040DFD || 	call	$04433b                   ; 040DEA || 040DFD CD AD 43 04 2927  			CALL    OSBPUT
	exx                            ; 040E01 || 	exx                            ; 040DEE || 040E01 D9          2928  			EXX
	ld	a,h                         ; 040E02 || 	ld	a,h                         ; 040DEF || 040E02 7C          2929  			LD      A,H
	exx                            ; 040E03 || 	exx                            ; 040DF0 || 040E03 D9          2930  			EXX
	call	$0443ad                   ; 040E04 || 	call	$04433b                   ; 040DF1 || 040E04 CD AD 43 04 2931  			CALL    OSBPUT
	ld	a,l                         ; 040E08 || 	ld	a,l                         ; 040DF5 || 040E08 7D          2932  			LD      A,L
	call	$0443ad                   ; 040E09 || 	call	$04433b                   ; 040DF6 || 040E09 CD AD 43 04 2933  			CALL    OSBPUT
	ld	a,h                         ; 040E0D || 	ld	a,h                         ; 040DFA || 040E0D 7C          2934  			LD      A,H
	call	$0443ad                   ; 040E0E || 	call	$04433b                   ; 040DFB || 040E0E CD AD 43 04 2935  			CALL    OSBPUT
	pop	bc                         ; 040E12 || 	pop	bc                         ; 040DFF || 040E12 C1          2936  			POP     BC
	ld	a,c                         ; 040E13 || 	ld	a,c                         ; 040E00 || 040E13 79          2937  			LD      A,C
	call	$0443ad                   ; 040E14 || 	call	$04433b                   ; 040E01 || 040E14 CD AD 43 04 2938  			CALL    OSBPUT
	jr	$-$36                       ; 040E18 || 	jr	$-$36                       ; 040E05 || 040E18 18 C8       2939  			JR      PRNTN1
	ld	c,e                         ; 040E1A || 	ld	c,e                         ; 040E07 || 040E1A 4B          2940  PRNTN2:			LD      C,E
	pop	de                         ; 040E1B || 	pop	de                         ; 040E08 || 040E1B D1          2941  			POP     DE
	ld	hl,$044a00                  ; 040E1C || 	ld	hl,$044a00                  ; 040E09 || 040E1C 21 00 4A 04 2942  			LD      HL,ACCS
	inc	c                          ; 040E20 || 	inc	c                          ; 040E0D || 040E20 0C          2943  			INC     C
	dec	c                          ; 040E21 || 	dec	c                          ; 040E0E || 040E21 0D          2944  PRNTN3:			DEC     C
	jr	z,$+$0c                     ; 040E22 || 	jr	z,$+$0c                     ; 040E0F || 040E22 28 0A       2945  			JR      Z,PRNTN4
	ld	a,(hl)                      ; 040E24 || 	ld	a,(hl)                      ; 040E11 || 040E24 7E          2946  			LD      A,(HL)
	inc	hl                         ; 040E25 || 	inc	hl                         ; 040E12 || 040E25 23          2947  			INC     HL
	push	bc                        ; 040E26 || 	push	bc                        ; 040E13 || 040E26 C5          2948  			PUSH    BC
	call	$0443ad                   ; 040E27 || 	call	$04433b                   ; 040E14 || 040E27 CD AD 43 04 2949  			CALL    OSBPUT
	pop	bc                         ; 040E2B || 	pop	bc                         ; 040E18 || 040E2B C1          2950  			POP     BC
	jr	$-$0b                       ; 040E2C || 	jr	$-$0b                       ; 040E19 || 040E2C 18 F3       2951  			JR      PRNTN3
	ld	a,$0d                       ; 040E2E || 	ld	a,$0d                       ; 040E1B || 040E2E 3E 0D       2952  PRNTN4:			LD      A,CR
	call	$0443ad                   ; 040E30 || 	call	$04433b                   ; 040E1D || 040E30 CD AD 43 04 2953  			CALL    OSBPUT
	jr	$-$52                       ; 040E34 || 	jr	$-$52                       ; 040E21 || 040E34 18 AC       2954  			JR      PRNTN1
	ld	b,$02                       ; 040E36 || 	ld	b,$02                       ; 040E23 || 040E36 06 02       2956  PRINT6:			LD      B,2
	jr	$+$29                       ; 040E38 || 	jr	$+$29                       ; 040E25 || 040E38 18 27       2957  			JR      PRINTC
	ld	bc,$000100                  ; 040E3A || 	ld	bc,$000100                  ; 040E27 || 040E3A 01 00 01 00 2958  PRINT8:			LD      BC,100H
	jr	$+$23                       ; 040E3E || 	jr	$+$23                       ; 040E2B || 040E3E 18 21       2959  			JR      PRINTC
	ld	hl,$044c00                  ; 040E40 || 	ld	hl,$044c00                  ; 040E2D || 040E40 21 00 4C 04 2960  PRINT9:			LD      HL,STAVAR
	xor	a                          ; 040E44 || 	xor	a                          ; 040E31 || 040E44 AF          2961  			XOR     A
	cp	(hl)                        ; 040E45 || 	cp	(hl)                        ; 040E32 || 040E45 BE          2962  			CP      (HL)
	jr	z,$+$14                     ; 040E46 || 	jr	z,$+$14                     ; 040E33 || 040E46 28 12       2963  			JR      Z,PRINT0
	ld	a,($044d3d)                 ; 040E48 || 	ld	a,($044d3d)                 ; 040E35 || 040E48 3A 3D 4D 04 2964  			LD      A,(COUNT)
	or	a                           ; 040E4C || 	or	a                           ; 040E39 || 040E4C B7          2965  			OR      A
	jr	z,$+$0d                     ; 040E4D || 	jr	z,$+$0d                     ; 040E3A || 040E4D 28 0B       2966  			JR      Z,PRINT0
	sub	(hl)                       ; 040E4F || 	sub	(hl)                       ; 040E3C || 040E4F 96          2967  PRINTA:			SUB     (HL)
	jr	z,$+$0a                     ; 040E50 || 	jr	z,$+$0a                     ; 040E3D || 040E50 28 08       2968  			JR      Z,PRINT0
	jr	nc,$-$03                    ; 040E52 || 	jr	nc,$-$03                    ; 040E3F || 040E52 30 FB       2969  			JR      NC,PRINTA
	neg                            ; 040E54 || 	neg                            ; 040E41 || 040E54 ED 44       2970  			NEG
	call	$04182c                   ; 040E56 || 	call	$0417ef                   ; 040E43 || 040E56 CD 2C 18 04 2971  			CALL    FILL
	ld	a,($044c00)                 ; 040E5A || 	ld	a,($044c00)                 ; 040E47 || 040E5A 3A 00 4C 04 2972  PRINT0:			LD      A,(STAVAR)
	ld	c,a                         ; 040E5E || 	ld	c,a                         ; 040E4B || 040E5E 4F          2973  			LD      C,A             ;PRINTS
	ld	b,$00                       ; 040E5F || 	ld	b,$00                       ; 040E4C || 040E5F 06 00       2974  			LD      B,0             ;PRINTF
	call	$0417b7                   ; 040E61 || 	call	$04177a                   ; 040E4E || 040E61 CD B7 17 04 2975  PRINTC:			CALL    TERMQ
	jr	z,$+$41                     ; 040E65 || 	jr	z,$+$41                     ; 040E52 || 040E65 28 3F       2976  			JR      Z,PRINT4
	res	0,b                        ; 040E67 || 	res	0,b                        ; 040E54 || 040E67 CB 80       2977  			RES     0,B
	inc	iy                         ; 040E69 || 	inc	iy                         ; 040E56 || 040E69 FD 23       2978  			INC     IY
	cp	$7e                         ; 040E6B || 	cp	$7e                         ; 040E58 || 040E6B FE 7E       2979  			CP      '~'
	jr	z,$-$37                     ; 040E6D || 	jr	z,$-$37                     ; 040E5A || 040E6D 28 C7       2980  			JR      Z,PRINT6
	cp	$3b                         ; 040E6F || 	cp	$3b                         ; 040E5C || 040E6F FE 3B       2981  			CP      ';'
	jr	z,$-$37                     ; 040E71 || 	jr	z,$-$37                     ; 040E5E || 040E71 28 C7       2982  			JR      Z,PRINT8
	cp	$2c                         ; 040E73 || 	cp	$2c                         ; 040E60 || 040E73 FE 2C       2983  			CP      ','
	jr	z,$-$35                     ; 040E75 || 	jr	z,$-$35                     ; 040E62 || 040E75 28 C9       2984  			JR      Z,PRINT9
	call	$0417dc                   ; 040E77 || 	call	$04179f                   ; 040E64 || 040E77 CD DC 17 04 2985  			CALL    FORMAT          ;SPC, TAB, '
	jr	z,$-$1a                     ; 040E7B || 	jr	z,$-$1a                     ; 040E68 || 040E7B 28 E4       2986  			JR      Z,PRINTC
	dec	iy                         ; 040E7D || 	dec	iy                         ; 040E6A || 040E7D FD 2B       2987  			DEC     IY
	push	bc                        ; 040E7F || 	push	bc                        ; 040E6C || 040E7F C5          2988  			PUSH    BC
	call	$0401d2                   ; 040E80 || 	call	$0401c7                   ; 040E6D || 040E80 CD D2 01 04 2989  			CALL    EXPR            ;VARIABLE TYPE
	ex	af,af'                      ; 040E84 || 	ex	af,af'                      ; 040E71 || 040E84 08          2990  			EX      AF,AF'
	jp	m,$040e9f                   ; 040E85 || 	jp	m,$040e8c                   ; 040E72 || 040E85 FA 9F 0E 04 2991  			JP      M,PRINT3        ;STRING
	pop	de                         ; 040E89 || 	pop	de                         ; 040E76 || 040E89 D1          2992  			POP     DE
	push	de                        ; 040E8A || 	push	de                        ; 040E77 || 040E8A D5          2993  			PUSH    DE
	bit	1,d                        ; 040E8B || 	bit	1,d                        ; 040E78 || 040E8B CB 4A       2994  			BIT     1,D
	push	af                        ; 040E8D || 	push	af                        ; 040E7A || 040E8D F5          2995  			PUSH    AF
	call	z,$040976                 ; 040E8E || 	call	z,$040966                 ; 040E7B || 040E8E CC 76 09 04 2996  			CALL    Z,STR           ;DECIMAL
	pop	af                         ; 040E92 || 	pop	af                         ; 040E7F || 040E92 F1          2997  			POP     AF
	call	nz,$04092a                ; 040E93 || 	call	nz,$04091a                ; 040E80 || 040E93 C4 2A 09 04 2998  			CALL    NZ,HEXSTR       ;HEX
	pop	bc                         ; 040E97 || 	pop	bc                         ; 040E84 || 040E97 C1          2999  			POP     BC
	push	bc                        ; 040E98 || 	push	bc                        ; 040E85 || 040E98 C5          3000  			PUSH    BC
	ld	a,c                         ; 040E99 || 	ld	a,c                         ; 040E86 || 040E99 79          3001  			LD      A,C
	sub	e                          ; 040E9A || 	sub	e                          ; 040E87 || 040E9A 93          3002  			SUB     E
	call	nc,$04182c                ; 040E9B || 	call	nc,$0417ef                ; 040E88 || 040E9B D4 2C 18 04 3003  			CALL    NC,FILL         ;RIGHT JUSTIFY
	pop	bc                         ; 040E9F || 	pop	bc                         ; 040E8C || 040E9F C1          3004  PRINT3:			POP     BC
	call	$04183b                   ; 040EA0 || 	call	$0417fe                   ; 040E8D || 040EA0 CD 3B 18 04 3005  			CALL    PTEXT           ;PRINT
	jr	$-$43                       ; 040EA4 || 	jr	$-$43                       ; 040E91 || 040EA4 18 BB       3006  			JR      PRINTC
	bit	0,b                        ; 040EA6 || 	bit	0,b                        ; 040E93 || 040EA6 CB 40       3007  PRINT4:			BIT     0,B
	call	z,$0439a8                 ; 040EA8 || 	call	z,$043947                 ; 040E95 || 040EA8 CC A8 39 04 3008  			CALL    Z,CRLF
	jp	$040ba9                     ; 040EAC || 	jp	$040b96                     ; 040E99 || 040EAC C3 A9 0B 04 3009  			JP      XEQ
	inc	iy                         ; 040EB0 || 	inc	iy                         ; 040E9D || 040EB0 FD 23       3014  ONERR:			INC     IY              ;SKIP "ERROR"
	ld	hl,$000000                  ; 040EB2 || 	ld	hl,$000000                  ; 040E9F || 040EB2 21 00 00 00 3015  			LD      HL,0
	ld	($044d2c),hl                ; 040EB6 || 	ld	($044d2c),hl                ; 040EA3 || 040EB6 22 2C 4D 04 3016  			LD      (ERRTRP),HL
	call	$040a83                   ; 040EBA || 	call	$040a70                   ; 040EA7 || 040EBA CD 83 0A 04 3017  			CALL    NXT
	cp	$87                         ; 040EBE || 	cp	$87                         ; 040EAB || 040EBE FE 87       3018  			CP      OFF_
	inc	iy                         ; 040EC0 || 	inc	iy                         ; 040EAD || 040EC0 FD 23       3019  			INC     IY
	jp	z,$040ba9                   ; 040EC2 || 	jp	z,$040b96                   ; 040EAF || 040EC2 CA A9 0B 04 3020  			JP      Z,XEQ
	dec	iy                         ; 040EC6 || 	dec	iy                         ; 040EB3 || 040EC6 FD 2B       3021  			DEC     IY
	ld	($044d2c),iy                ; 040EC8 || 	ld	($044d2c),iy                ; 040EB5 || 040EC8 FD 22 2C 4D 3022  			LD      (ERRTRP),IY
	jp	$040c3e                     ; 040ECD || 	jp	$040c2b                     ; 040EBA || 040ECD C3 3E 0C 04 3023  			JP      REM_EX
	cp	$85                         ; 040ED1 || 	cp	$85                         ; 040EBE || 040ED1 FE 85       3031  ON_EX_:			CP      TERROR
	jr	z,$-$23                     ; 040ED3 || 	jr	z,$-$23                     ; 040EC0 || 040ED3 28 DB       3032  			JR      Z,ONERR         ;"ON ERROR"
	call	$04031a                   ; 040ED5 || 	call	$04030a                   ; 040EC2 || 040ED5 CD 1A 03 04 3033  			CALL    EXPRI
	ld	a,(iy)                      ; 040ED9 || 	ld	a,(iy)                      ; 040EC6 || 040ED9 FD 7E 00    3034  			LD      A,(IY)
	inc	iy                         ; 040EDC || 	inc	iy                         ; 040EC9 || 040EDC FD 23       3035  			INC     IY
	ld	e,$2c                       ; 040EDE || 	ld	e,$2c                       ; 040ECB || 040EDE 1E 2C       3036  			LD      E,','           ;SEPARATOR
	cp	$e5                         ; 040EE0 || 	cp	$e5                         ; 040ECD || 040EE0 FE E5       3037  			CP      TGOTO
	jr	z,$+$0d                     ; 040EE2 || 	jr	z,$+$0d                     ; 040ECF || 040EE2 28 0B       3038  			JR      Z,ON1
	cp	$e4                         ; 040EE4 || 	cp	$e4                         ; 040ED1 || 040EE4 FE E4       3039  			CP      TGOSUB
	jr	z,$+$09                     ; 040EE6 || 	jr	z,$+$09                     ; 040ED3 || 040EE6 28 07       3040  			JR      Z,ON1
	ld	e,$f2                       ; 040EE8 || 	ld	e,$f2                       ; 040ED5 || 040EE8 1E F2       3041  			LD      E,TPROC
	cp	e                           ; 040EEA || 	cp	e                           ; 040ED7 || 040EEA BB          3042  			CP      E
	ld	a,$27                       ; 040EEB || 	ld	a,$27                       ; 040ED8 || 040EEB 3E 27       3043  			LD      A,39
	jr	nz,$+$47                    ; 040EED || 	jr	nz,$+$47                    ; 040EDA || 040EED 20 45       3044  			JR      NZ,ERROR2_EX       ;"ON syntax"
	ld	d,a                         ; 040EEF || 	ld	d,a                         ; 040EDC || 040EEF 57          3045  ON1:			LD      D,A
	exx                            ; 040EF0 || 	exx                            ; 040EDD || 040EF0 D9          3046  			EXX
	push	hl                        ; 040EF1 || 	push	hl                        ; 040EDE || 040EF1 E5          3047  			PUSH    HL
	exx                            ; 040EF2 || 	exx                            ; 040EDF || 040EF2 D9          3048  			EXX
	pop	bc                         ; 040EF3 || 	pop	bc                         ; 040EE0 || 040EF3 C1          3049  			POP     BC              ;ON INDEX
	ld	a,b                         ; 040EF4 || 	ld	a,b                         ; 040EE1 || 040EF4 78          3050  			LD      A,B
	or	h                           ; 040EF5 || 	or	h                           ; 040EE2 || 040EF5 B4          3051  			OR      H
	or	l                           ; 040EF6 || 	or	l                           ; 040EE3 || 040EF6 B5          3052  			OR      L
	jr	nz,$+$2c                    ; 040EF7 || 	jr	nz,$+$2c                    ; 040EE4 || 040EF7 20 2A       3053  			JR      NZ,ON4          ;OUT OF RANGE
	or	c                           ; 040EF9 || 	or	c                           ; 040EE6 || 040EF9 B1          3054  			OR      C
	jr	z,$+$29                     ; 040EFA || 	jr	z,$+$29                     ; 040EE7 || 040EFA 28 27       3055  			JR      Z,ON4
	dec	c                          ; 040EFC || 	dec	c                          ; 040EE9 || 040EFC 0D          3056  			DEC     C
	jr	z,$+$10                     ; 040EFD || 	jr	z,$+$10                     ; 040EEA || 040EFD 28 0E       3057  			JR      Z,ON3           ;INDEX=1
	call	$0417b7                   ; 040EFF || 	call	$04177a                   ; 040EEC || 040EFF CD B7 17 04 3058  ON2:			CALL    TERMQ
	jr	z,$+$20                     ; 040F03 || 	jr	z,$+$20                     ; 040EF0 || 040F03 28 1E       3059  			JR      Z,ON4           ;OUT OF RANGE
	inc	iy                         ; 040F05 || 	inc	iy                         ; 040EF2 || 040F05 FD 23       3060  			INC     IY              ;SKIP DELIMITER
	cp	e                           ; 040F07 || 	cp	e                           ; 040EF4 || 040F07 BB          3061  			CP      E
	jr	nz,$-$09                    ; 040F08 || 	jr	nz,$-$09                    ; 040EF5 || 040F08 20 F5       3062  			JR      NZ,ON2
	dec	c                          ; 040F0A || 	dec	c                          ; 040EF7 || 040F0A 0D          3063  			DEC     C
	jr	nz,$-$0c                    ; 040F0B || 	jr	nz,$-$0c                    ; 040EF8 || 040F0B 20 F2       3064  			JR      NZ,ON2
	ld	a,e                         ; 040F0D || 	ld	a,e                         ; 040EFA || 040F0D 7B          3065  ON3:			LD      A,E
	cp	$f2                         ; 040F0E || 	cp	$f2                         ; 040EFB || 040F0E FE F2       3066  			CP      TPROC
	jr	z,$+$28                     ; 040F10 || 	jr	z,$+$28                     ; 040EFD || 040F10 28 26       3067  			JR      Z,ONPROC
	push	de                        ; 040F12 || 	push	de                        ; 040EFF || 040F12 D5          3068  			PUSH    DE
	call	$040335                   ; 040F13 || 	call	$040325                   ; 040F00 || 040F13 CD 35 03 04 3069  			CALL    ITEMI           ;LINE NUMBER
	pop	de                         ; 040F17 || 	pop	de                         ; 040F04 || 040F17 D1          3070  			POP     DE
	ld	a,d                         ; 040F18 || 	ld	a,d                         ; 040F05 || 040F18 7A          3071  			LD      A,D
	cp	$e5                         ; 040F19 || 	cp	$e5                         ; 040F06 || 040F19 FE E5       3072  			CP      TGOTO
	jr	z,$+$2f                     ; 040F1B || 	jr	z,$+$2f                     ; 040F08 || 040F1B 28 2D       3073  			JR      Z,GOTO2
	call	$0417c4                   ; 040F1D || 	call	$041787                   ; 040F0A || 040F1D CD C4 17 04 3074  			CALL    SPAN            ;SKIP REST OF LIST
	jr	$+$3d                       ; 040F21 || 	jr	$+$3d                       ; 040F0E || 040F21 18 3B       3075  			JR      GOSUB1
	ld	a,(iy)                      ; 040F23 || 	ld	a,(iy)                      ; 040F10 || 040F23 FD 7E 00    3077  ON4:			LD      A,(IY)
	inc	iy                         ; 040F26 || 	inc	iy                         ; 040F13 || 040F26 FD 23       3078  			INC     IY
	cp	$8b                         ; 040F28 || 	cp	$8b                         ; 040F15 || 040F28 FE 8B       3079  			CP      ELSE_
	jp	z,$04135e                   ; 040F2A || 	jp	z,$04134b                   ; 040F17 || 040F2A CA 5E 13 04 3080  			JP      Z,IF1           ;ELSE CLAUSE
	cp	$0d                         ; 040F2E || 	cp	$0d                         ; 040F1B || 040F2E FE 0D       3081  			CP      CR
	jr	nz,$-$0d                    ; 040F30 || 	jr	nz,$-$0d                    ; 040F1D || 040F30 20 F1       3082  			JR      NZ,ON4
	ld	a,$28                       ; 040F32 || 	ld	a,$28                       ; 040F1F || 040F32 3E 28       3083  			LD      A,40
	jp	$0437c1                     ; 040F34 || 	jp	$043760                     ; 040F21 || 040F34 C3 C1 37 04 3084  ERROR2_EX:			JP      ERROR_           ;"ON range"
	ld	a,$ee                       ; 040F38 || 	ld	a,$ee                       ; 040F25 || 040F38 3E EE       3086  ONPROC:			LD      A,TON
	jp	$041097                     ; 040F3A || 	jp	$041084                     ; 040F27 || 040F3A C3 97 10 04 3087  			JP      PROC_EX
	call	$040335                   ; 040F3E || 	call	$040325                   ; 040F2B || 040F3E CD 35 03 04 3091  GOTO_EX:			CALL    ITEMI           	; Fetch the line number
	call	$0417b7                   ; 040F42 || 	call	$04177a                   ; 040F2F || 040F42 CD B7 17 04 3092  GOTO1:			CALL    TERMQ			; Check for terminator
	jp	nz,$040caa                  ; 040F46 || 	jp	nz,$040c97                  ; 040F33 || 040F46 C2 AA 0C 04 3093  			JP      NZ,SYNTAX		; Throw a "Syntax Error" if not found
	exx                            ; 040F4A || 	exx                            ; 040F37 || 040F4A D9          3094  GOTO2:			EXX
	call	$0439f0                   ; 040F4B || 	call	$04398f                   ; 040F38 || 040F4B CD F0 39 04 3095  			CALL    FINDL			; HL: Line number - Find the line
	push	hl                        ; 040F4F || 	push	hl                        ; 040F3C || 040F4F E5          3096  			PUSH    HL			; HL: Address of the line
	pop	iy                         ; 040F50 || 	pop	iy                         ; 040F3D || 040F50 FD E1       3097  			POP     IY			; IY = HL
	jp	z,$040ba5                   ; 040F52 || 	jp	z,$040b92                   ; 040F3F || 040F52 CA A5 0B 04 3098  			JP      Z,XEQ0			; If the line is found, then continue execution at that point
	ld	a,$29                       ; 040F56 || 	ld	a,$29                       ; 040F43 || 040F56 3E 29       3099  			LD      A,41			; Otherwise throw a "No such line" error
	jr	$-$24                       ; 040F58 || 	jr	$-$24                       ; 040F45 || 040F58 18 DA       3100  			JR      ERROR2_EX
	call	$040335                   ; 040F5A || 	call	$040325                   ; 040F47 || 040F5A CD 35 03 04 3107  GOSUB_EX:			CALL    ITEMI			; Fetch the line number
	push	iy                        ; 040F5E || 	push	iy                        ; 040F4B || 040F5E FD E5       3108  GOSUB1:			PUSH    IY              	; Push the current execution address onto the execution stack
	call	$04168c                   ; 040F60 || 	call	$04164f                   ; 040F4D || 040F60 CD 8C 16 04 3109  			CALL    CHECK           	; Check there is enough room
	call	$040f42                   ; 040F64 || 	call	$040f2f                   ; 040F51 || 040F64 CD 42 0F 04 3110  			CALL    GOTO1           	; Push the marker (address of GOSCHK) onto the execution stack and GOTO the line number
	pop	de                         ; 040F68 || 	pop	de                         ; 040F55 || 040F68 D1          3118  RETURN:			POP     DE			; Pop the marker off the execution stack
	ld	hl,$040f68                  ; 040F69 || 	ld	hl,$040f55                  ; 040F56 || 040F69 21 68 0F 04 3119  			LD      HL,GOSCHK		; Compare with GOSCHK
	or	a                           ; 040F6D || 	or	a                           ; 040F5A || 040F6D B7          3120  			OR      A
	sbc	hl,de                      ; 040F6E || 	sbc	hl,de                      ; 040F5B || 040F6E ED 52       3121  			SBC     HL,DE
	pop	iy                         ; 040F70 || 	pop	iy                         ; 040F5D || 040F70 FD E1       3122  			POP     IY			; Pop the return address off the execution stack
	jp	z,$040ba9                   ; 040F72 || 	jp	z,$040b96                   ; 040F5F || 040F72 CA A9 0B 04 3123  			JP      Z,XEQ			; Provided this has been called by a GOSUB then continue execution at the return address
	ld	a,$26                       ; 040F76 || 	ld	a,$26                       ; 040F63 || 040F76 3E 26       3124  			LD      A,38			; Otherwise throw a "No GOSUB" error
	jr	$-$44                       ; 040F78 || 	jr	$-$44                       ; 040F65 || 040F78 18 BA       3125  			JR      ERROR2_EX
	push	iy                        ; 040F7A || 	push	iy                        ; 040F67 || 040F7A FD E5       3132  REPEAT_EX:			PUSH    IY			; Push the current execution address onto the execution stack
	call	$04168c                   ; 040F7C || 	call	$04164f                   ; 040F69 || 040F7C CD 8C 16 04 3133  			CALL    CHECK			; Check if there is enough room
	call	$040ba9                   ; 040F80 || 	call	$040b96                   ; 040F6D || 040F80 CD A9 0B 04 3134  			CALL    XEQ			; Push the marker (address of REPCHK) onto the execution stack and continue execution
	pop	bc                         ; 040F84 || 	pop	bc                         ; 040F71 || 040F84 C1          3143  UNTIL_EX:			POP     BC			; Fetch the marker
	push	bc                        ; 040F85 || 	push	bc                        ; 040F72 || 040F85 C5          3144  			PUSH    BC			; And push it back onto the execution stack
	ld	hl,$040f84                  ; 040F86 || 	ld	hl,$040f71                  ; 040F73 || 040F86 21 84 0F 04 3145  			LD      HL,REPCHK		; Compare with REPCHK
	or	a                           ; 040F8A || 	or	a                           ; 040F77 || 040F8A B7          3146  			OR      A
	sbc	hl,bc                      ; 040F8B || 	sbc	hl,bc                      ; 040F78 || 040F8B ED 42       3147  			SBC     HL,BC
	ld	a,$2b                       ; 040F8D || 	ld	a,$2b                       ; 040F7A || 040F8D 3E 2B       3148  			LD      A,43
	jr	nz,$-$5b                    ; 040F8F || 	jr	nz,$-$5b                    ; 040F7C || 040F8F 20 A3       3149  			JR      NZ,ERROR2_EX		; Throw a "No REPEAT" if this value does not match
	call	$04031a                   ; 040F91 || 	call	$04030a                   ; 040F7E || 040F91 CD 1A 03 04 3150  			CALL    EXPRI			; Fetch the expression
	call	$0408ef                   ; 040F95 || 	call	$0408df                   ; 040F82 || 040F95 CD EF 08 04 3151  			CALL    TEST			; Test if the expression evaluates to zero
	pop	bc                         ; 040F99 || 	pop	bc                         ; 040F86 || 040F99 C1          3152  			POP     BC			; Pop the marker
	pop	de                         ; 040F9A || 	pop	de                         ; 040F87 || 040F9A D1          3153  			POP     DE			; Pop the address of the REPEAT instruction
	jr	nz,$+$07                    ; 040F9B || 	jr	nz,$+$07                    ; 040F88 || 040F9B 20 05       3154  			JR      NZ,XEQ2         	; If it is TRUE, then continue execution after the UNTIL instruction (we're done looping)
	push	de                        ; 040F9D || 	push	de                        ; 040F8A || 040F9D D5          3155  			PUSH    DE			; Push the address of the REPEAT instruction back on the stack
	push	bc                        ; 040F9E || 	push	bc                        ; 040F8B || 040F9E C5          3156  			PUSH    BC			; Push the marker back on the stack
	push	de                        ; 040F9F || 	push	de                        ; 040F8C || 040F9F D5          3157  			PUSH    DE			; IY = DE
	pop	iy                         ; 040FA0 || 	pop	iy                         ; 040F8D || 040FA0 FD E1       3158  			POP     IY			; This sets the execution address back to the REPEAT instruction
	jp	$040ba9                     ; 040FA2 || 	jp	$040b96                     ; 040F8F || 040FA2 C3 A9 0B 04 3159  XEQ2:			JP      XEQ			; Continue execution
	ld	a,$22                       ; 040FA6 || 	ld	a,$22                       ; 040F93 || 040FA6 3E 22       3169  FORVAR:			LD      A,34
	jr	$-$74                       ; 040FA8 || 	jr	$-$74                       ; 040F95 || 040FA8 18 8A       3170  			JR      ERROR2_EX          	; Throw "FOR variable" error
	call	$0415fb                   ; 040FAA || 	call	$0415be                   ; 040F97 || 040FAA CD FB 15 04 3172  FOR_EX:			CALL    ASSIGN			; Assign the START expression value to a variable
	jr	nz,$-$08                    ; 040FAE || 	jr	nz,$-$08                    ; 040F9B || 040FAE 20 F6       3173  			JR      NZ,FORVAR       	; If the variable is a string, or invalid, then throw a "FOR variable" error
	push	af                        ; 040FB0 || 	push	af                        ; 040F9D || 040FB0 F5          3174  			PUSH    AF              	; Save the variable type
	ld	a,(iy)                      ; 040FB1 || 	ld	a,(iy)                      ; 040F9E || 040FB1 FD 7E 00    3175  			LD      A,(IY)			; Check the next token
	cp	$b8                         ; 040FB4 || 	cp	$b8                         ; 040FA1 || 040FB4 FE B8       3176  			CP      TO			; Compare with the token value for "TO"
	ld	a,$24                       ; 040FB6 || 	ld	a,$24                       ; 040FA3 || 040FB6 3E 24       3177  			LD      A,36			; Set the error code to 36 ("No TO")
	jp	nz,$040f34                  ; 040FB8 || 	jp	nz,$040f21                  ; 040FA5 || 040FB8 C2 34 0F 04 3178  			JP      NZ,ERROR2_EX       	; And throw the error if that token is missing
	inc	iy                         ; 040FBC || 	inc	iy                         ; 040FA9 || 040FBC FD 23       3179  			INC     IY			; Skip to the next token
	push	ix                        ; 040FBE || 	push	ix                        ; 040FAB || 040FBE DD E5       3181  			PUSH    IX
	call	$040312                   ; 040FC0 || 	call	$040302                   ; 040FAD || 040FC0 CD 12 03 04 3182  			CALL    EXPRN           	; Fetch the LIMIT expression value
	pop	ix                         ; 040FC4 || 	pop	ix                         ; 040FB1 || 040FC4 DD E1       3183  			POP     IX
	pop	af                         ; 040FC6 || 	pop	af                         ; 040FB3 || 040FC6 F1          3184  			POP     AF
	ld	b,a                         ; 040FC7 || 	ld	b,a                         ; 040FB4 || 040FC7 47          3185  			LD      B,A             	; B: LIMIT value type (04h = Integer, 05h = Float)
	push	bc                        ; 040FC8 || 	push	bc                        ; 040FB5 || 040FC8 C5          3186  			PUSH    BC              	; Stack the LIMIT value
	push	hl                        ; 040FC9 || 	push	hl                        ; 040FB6 || 040FC9 E5          3187  			PUSH    HL
	ld	hl,$000000                  ; 040FCA || 	ld	hl,$000000                  ; 040FB7 || 040FCA 21 00 00 00 3188  			LD      HL,0
	ld	c,h                         ; 040FCE || 	ld	c,h                         ; 040FBB || 040FCE 4C          3189  			LD      C,H
	exx                            ; 040FCF || 	exx                            ; 040FBC || 040FCF D9          3190  			EXX
	push	hl                        ; 040FD0 || 	push	hl                        ; 040FBD || 040FD0 E5          3191  			PUSH    HL
	ld	hl,$000001                  ; 040FD1 || 	ld	hl,$000001                  ; 040FBE || 040FD1 21 01 00 00 3193  			LD      HL,1            	; The preset STEP value is 1
	exx                            ; 040FD5 || 	exx                            ; 040FC2 || 040FD5 D9          3194  			EXX
	ld	a,(iy)                      ; 040FD6 || 	ld	a,(iy)                      ; 040FC3 || 040FD6 FD 7E 00    3195  			LD      A,(IY)			; Fetch the next token
	cp	$88                         ; 040FD9 || 	cp	$88                         ; 040FC6 || 040FD9 FE 88       3196  			CP      STEP			; Compare with the token value for "STEP"
	jr	nz,$+$0c                    ; 040FDB || 	jr	nz,$+$0c                    ; 040FC8 || 040FDB 20 0A       3197  			JR      NZ,FOR1			; If there is no STEP token, then skip the next bit
	inc	iy                         ; 040FDD || 	inc	iy                         ; 040FCA || 040FDD FD 23       3199  			INC     IY			; Skip past the STEP token
	push	ix                        ; 040FDF || 	push	ix                        ; 040FCC || 040FDF DD E5       3200  			PUSH    IX
	call	$040312                   ; 040FE1 || 	call	$040302                   ; 040FCE || 040FE1 CD 12 03 04 3201  			CALL    EXPRN          		; Fetch the STEP expression value
	pop	ix                         ; 040FE5 || 	pop	ix                         ; 040FD2 || 040FE5 DD E1       3202  			POP     IX
	push	bc                        ; 040FE7 || 	push	bc                        ; 040FD4 || 040FE7 C5          3204  FOR1:			PUSH    BC			; Stack the STEP value
	push	hl                        ; 040FE8 || 	push	hl                        ; 040FD5 || 040FE8 E5          3205  			PUSH    HL
	exx                            ; 040FE9 || 	exx                            ; 040FD6 || 040FE9 D9          3206  			EXX
	push	hl                        ; 040FEA || 	push	hl                        ; 040FD7 || 040FEA E5          3207  			PUSH    HL
	exx                            ; 040FEB || 	exx                            ; 040FD8 || 040FEB D9          3208  			EXX
	push	iy                        ; 040FEC || 	push	iy                        ; 040FD9 || 040FEC FD E5       3210  			PUSH    IY              	; Stack the current execution address
	push	ix                        ; 040FEE || 	push	ix                        ; 040FDB || 040FEE DD E5       3211  			PUSH    IX              	; Stack the loop variable
	call	$04168c                   ; 040FF0 || 	call	$04164f                   ; 040FDD || 040FF0 CD 8C 16 04 3212  			CALL    CHECK
	call	$040ba9                   ; 040FF4 || 	call	$040b96                   ; 040FE1 || 040FF4 CD A9 0B 04 3213  			CALL    XEQ
	pop	bc                         ; 040FF8 || 	pop	bc                         ; 040FE5 || 040FF8 C1          3225  NEXT_EX:			POP     BC              	; Pop the marker off the execution stack
	ld	hl,$040ff8                  ; 040FF9 || 	ld	hl,$040fe5                  ; 040FE6 || 040FF9 21 F8 0F 04 3226  			LD      HL,FORCHK		; Compare with FORCHK
	or	a                           ; 040FFD || 	or	a                           ; 040FEA || 040FFD B7          3227  			OR      A
	sbc	hl,bc                      ; 040FFE || 	sbc	hl,bc                      ; 040FEB || 040FFE ED 42       3228  			SBC     HL,BC
	ld	a,$20                       ; 041000 || 	ld	a,$20                       ; 040FED || 041000 3E 20       3229  			LD      A,32
	jp	nz,$04108e                  ; 041002 || 	jp	nz,$04107b                  ; 040FEF || 041002 C2 8E 10 04 3230  			JP      NZ,ERROR3_EX      		; If this does not match, throw a "No FOR" error
	call	$0417b7                   ; 041006 || 	call	$04177a                   ; 040FF3 || 041006 CD B7 17 04 3231  			CALL    TERMQ			; Check for terminator (a NEXT without a variable)
	pop	hl                         ; 04100A || 	pop	hl                         ; 040FF7 || 04100A E1          3232  			POP     HL			; Pop the address of the loop variable off the execution stack
	push	hl                        ; 04100B || 	push	hl                        ; 040FF8 || 04100B E5          3233  			PUSH    HL			; Push it back onto the execution stack
	push	bc                        ; 04100C || 	push	bc                        ; 040FF9 || 04100C C5          3234  			PUSH    BC			; Push the marker back onto the execution stack
	push	hl                        ; 04100D || 	push	hl                        ; 040FFA || 04100D E5          3235  			PUSH    HL			; HL: Address of the loop variable off the stack
	call	nz,$043a9b                ; 04100E || 	call	nz,$043a3a                ; 040FFB || 04100E C4 9B 3A 04 3236  			CALL    NZ,GETVAR       	; If there is no terminator, get the variable from the args
	pop	de                         ; 041012 || 	pop	de                         ; 040FFF || 041012 D1          3237  			POP     DE			; DE: Address of the loop variable off the stack
	ex	de,hl                       ; 041013 || 	ex	de,hl                       ; 041000 || 041013 EB          3238  			EX      DE,HL			; HL: Address of the loop variable off the stack, DE: Address of the variable from args
	or	a                           ; 041014 || 	or	a                           ; 041001 || 041014 B7          3239  			OR      A
	sbc	hl,de                      ; 041015 || 	sbc	hl,de                      ; 041002 || 041015 ED 52       3240  NEXT0:			SBC     HL,DE			; Compare to make sure that the variables match
	jr	nz,$+$63                    ; 041017 || 	jr	nz,$+$63                    ; 041004 || 041017 20 61       3241  			JR      NZ,NEXT1		; They don't, so jump to NEXT1
	push	de                        ; 041019 || 	push	de                        ; 041006 || 041019 D5          3242  			PUSH    DE
	ld	ix,$00000c                  ; 04101A || 	ld	ix,$00000c                  ; 041007 || 04101A DD 21 0C 00 3243  			LD      IX,9+3			; IX: Address of the STEP value on the execution stack
	add	ix,sp                      ; 04101F || 	add	ix,sp                      ; 04100C || 04101F DD 39       3244  			ADD     IX,SP
	call	$042a24                   ; 041021 || 	call	$0429e1                   ; 04100E || 041021 CD 24 2A 04 3245  			CALL    DLOAD5_SPL      	; Load the STEP value
	ld	a,(ix+$10)                  ; 041025 || 	ld	a,(ix+$10)                  ; 041012 || 041025 DD 7E 10    3246  			LD      A,(IX+16)       	; Get the STEP type
	pop	ix                         ; 041028 || 	pop	ix                         ; 041015 || 041028 DD E1       3247  			POP     IX
	call	$040426                   ; 04102A || 	call	$040416                   ; 041017 || 04102A CD 26 04 04 3248  			CALL    LOADN           	; Load the LOOP variable
	bit	7,d                        ; 04102E || 	bit	7,d                        ; 04101B || 04102E CB 7A       3249  			BIT     7,D             	; Check the sign
	push	af                        ; 041030 || 	push	af                        ; 04101D || 041030 F5          3250  			PUSH    AF
	ld	a,$0b                       ; 041031 || 	ld	a,$0b                       ; 04101E || 041031 3E 0B       3251  			LD      A,'+' & 0FH
	call	$0420ad                   ; 041033 || 	call	$04206a                   ; 041020 || 041033 CD AD 20 04 3252  			CALL    FPP             	; Add the STEP
	jr	c,$+$57                     ; 041037 || 	jr	c,$+$57                     ; 041024 || 041037 38 55       3253  			JR      C,ERROR3_EX
	pop	af                         ; 041039 || 	pop	af                         ; 041026 || 041039 F1          3254  			POP     AF              	; Restore TYPE
	push	af                        ; 04103A || 	push	af                        ; 041027 || 04103A F5          3255  			PUSH    AF
	call	$041613                   ; 04103B || 	call	$0415d6                   ; 041028 || 04103B CD 13 16 04 3256  			CALL    STORE           	; Update the variable
	ld	ix,$000015                  ; 04103F || 	ld	ix,$000015                  ; 04102C || 04103F DD 21 15 00 3257  			LD      IX,18+3			; IX: Address of the LIMIT value on the execution stack
	add	ix,sp                      ; 041044 || 	add	ix,sp                      ; 041031 || 041044 DD 39       3258  			ADD     IX,SP
	call	$042a24                   ; 041046 || 	call	$0429e1                   ; 041033 || 041046 CD 24 2A 04 3259  			CALL    DLOAD5_SPL      	; Load the LIMIT value
	pop	af                         ; 04104A || 	pop	af                         ; 041037 || 04104A F1          3260  			POP     AF
	call	z,$0408e7                 ; 04104B || 	call	z,$0408d7                 ; 041038 || 04104B CC E7 08 04 3261  			CALL    Z,SWAP			; Swap the arguments if the sign is ?
	ld	a,$08                       ; 04104F || 	ld	a,$08                       ; 04103C || 04104F 3E 08       3263  			LD      A,0+'<'-4 & 0FH ; ez80asm doesn't do () in expressions
	call	$0420ad                   ; 041051 || 	call	$04206a                   ; 04103E || 041051 CD AD 20 04 3264  			CALL    FPP             	; Test against the limit
	jr	c,$+$39                     ; 041055 || 	jr	c,$+$39                     ; 041042 || 041055 38 37       3265  			JR      C,ERROR3_EX		; Throw an error if FPP returns bad
	inc	h                          ; 041057 || 	inc	h                          ; 041044 || 041057 24          3266  			INC     H
	jr	nz,$+$16                    ; 041058 || 	jr	nz,$+$16                    ; 041045 || 041058 20 14       3267  			JR      NZ,LOOP_        	; Keep looping
	ld	hl,$00001b                  ; 04105A || 	ld	hl,$00001b                  ; 041047 || 04105A 21 1B 00 00 3268  			LD      HL,27			; Adjust the stack
	add	hl,sp                      ; 04105E || 	add	hl,sp                      ; 04104B || 04105E 39          3269  			ADD     HL,SP
	ld	sp,hl                       ; 04105F || 	ld	sp,hl                       ; 04104C || 04105F F9          3270  			LD      SP,HL
	call	$040a83                   ; 041060 || 	call	$040a70                   ; 04104D || 041060 CD 83 0A 04 3271  			CALL    NXT
	cp	$2c                         ; 041064 || 	cp	$2c                         ; 041051 || 041064 FE 2C       3272  			CP      ','			; Check for multiple variables
	jp	nz,$040ba9                  ; 041066 || 	jp	nz,$040b96                  ; 041053 || 041066 C2 A9 0B 04 3273  			JP      NZ,XEQ			; No, so we are done at ths point
	inc	iy                         ; 04106A || 	inc	iy                         ; 041057 || 04106A FD 23       3274  			INC     IY			; Increment to the next variable
	jr	$-$74                       ; 04106C || 	jr	$-$74                       ; 041059 || 04106C 18 8A       3275  			JR      NEXT_EX			; And continue
	pop	bc                         ; 04106E || 	pop	bc                         ; 04105B || 04106E C1          3277  LOOP_:			POP     BC
	pop	de                         ; 04106F || 	pop	de                         ; 04105C || 04106F D1          3278  			POP     DE
	pop	iy                         ; 041070 || 	pop	iy                         ; 04105D || 041070 FD E1       3279  			POP     IY
	push	iy                        ; 041072 || 	push	iy                        ; 04105F || 041072 FD E5       3280  			PUSH    IY
	push	de                        ; 041074 || 	push	de                        ; 041061 || 041074 D5          3281  			PUSH    DE
	push	bc                        ; 041075 || 	push	bc                        ; 041062 || 041075 C5          3282  			PUSH    BC
	jp	$040ba9                     ; 041076 || 	jp	$040b96                     ; 041063 || 041076 C3 A9 0B 04 3283  			JP      XEQ
	ld	hl,$00001b                  ; 04107A || 	ld	hl,$00001b                  ; 041067 || 04107A 21 1B 00 00 3285  NEXT1:			LD      HL,27			; TODO: What does this do?
	add	hl,sp                      ; 04107E || 	add	hl,sp                      ; 04106B || 04107E 39          3286  			ADD     HL,SP
	ld	sp,hl                       ; 04107F || 	ld	sp,hl                       ; 04106C || 04107F F9          3287  			LD      SP,HL			; Adjust the stack
	pop	bc                         ; 041080 || 	pop	bc                         ; 04106D || 041080 C1          3288  			POP     BC
	ld	hl,$040ff8                  ; 041081 || 	ld	hl,$040fe5                  ; 04106E || 041081 21 F8 0F 04 3289  			LD      HL,FORCHK
	sbc	hl,bc                      ; 041085 || 	sbc	hl,bc                      ; 041072 || 041085 ED 42       3290  			SBC     HL,BC
	pop	hl                         ; 041087 || 	pop	hl                         ; 041074 || 041087 E1          3291  			POP     HL              	; Variable pointer
	push	hl                        ; 041088 || 	push	hl                        ; 041075 || 041088 E5          3292  			PUSH    HL
	push	bc                        ; 041089 || 	push	bc                        ; 041076 || 041089 C5          3293  			PUSH    BC
	jr	z,$-$75                     ; 04108A || 	jr	z,$-$75                     ; 041077 || 04108A 28 89       3294  			JR      Z,NEXT0
	ld	a,$21                       ; 04108C || 	ld	a,$21                       ; 041079 || 04108C 3E 21       3296  			LD      A,33
	jp	$0437c1                     ; 04108E || 	jp	$043760                     ; 04107B || 04108E C3 C1 37 04 3297  ERROR3_EX:			JP      ERROR_           	; Throw the error "Can't match FOR"
	push	af                        ; 041092 || 	push	af                        ; 04107F || 041092 F5          3302  FN_EX:			PUSH    AF              	; Push A onto the stack; this'll be checked for the token ON (TON) in PROC5
	call	$04109c                   ; 041093 || 	call	$041089                   ; 041080 || 041093 CD 9C 10 04 3303  			CALL    PROC1
	push	af                        ; 041097 || 	push	af                        ; 041084 || 041097 F5          3312  PROC_EX:			PUSH    AF			; Push A onto the stack; this'll be checked for the token ON (TON) in PROC5,
	call	$04109c                   ; 041098 || 	call	$041089                   ; 041085 || 041098 CD 9C 10 04 3313  			CALL    PROC1			; and is also space reserved on the stack for the return address
	call	$04168c                   ; 04109C || 	call	$04164f                   ; 041089 || 04109C CD 8C 16 04 3316  PROC1:			CALL    CHECK			; Check there is space for this
	dec	iy                         ; 0410A0 || 	dec	iy                         ; 04108D || 0410A0 FD 2B       3317  			DEC     IY			; Decrement IY to the PROC token
	push	iy                        ; 0410A2 || 	push	iy                        ; 04108F || 0410A2 FD E5       3318  			PUSH    IY			; Stack the pointer
	call	$043b5c                   ; 0410A4 || 	call	$043afb                   ; 041091 || 0410A4 CD 5C 3B 04 3319  			CALL    GETDEF			; Search for this PROC/FN entry in the dynamic area
	pop	bc                         ; 0410A8 || 	pop	bc                         ; 041095 || 0410A8 C1          3320  			POP     BC			; BC = IY
	jr	z,$+$43                     ; 0410A9 || 	jr	z,$+$43                     ; 041096 || 0410A9 28 41       3321  			JR      Z,PROC4			; If found in the dynamic area then skip to PROC4
	ld	a,$1e                       ; 0410AB || 	ld	a,$1e                       ; 041098 || 0410AB 3E 1E       3322  			LD      A,30
	jr	c,$-$1f                     ; 0410AD || 	jr	c,$-$1f                     ; 04109A || 0410AD 38 DF       3323  			JR      C,ERROR3_EX        	; Throw error "Bad call" if invalid PROC/FN call
	push	bc                        ; 0410AF || 	push	bc                        ; 04109C || 0410AF C5          3328  			PUSH    BC			; BC: Still pointing to the PROC token in the tokenised line
	ld	hl,($044d14)                ; 0410B0 || 	ld	hl,($044d14)                ; 04109D || 0410B0 2A 14 4D 04 3329  			LD      HL,(PAGE_)		; HL: Start of program memory
	ld	a,$dd                       ; 0410B4 || 	ld	a,$dd                       ; 0410A1 || 0410B4 3E DD       3331  PROC2:			LD      A,DEF_			;  A: The token to search for
	call	$04188b                   ; 0410B6 || 	call	$04184e                   ; 0410A3 || 0410B6 CD 8B 18 04 3332  			CALL    SEARCH_EX          	; Look for "DEF" as the first token in a program line
	jr	c,$+$28                     ; 0410BA || 	jr	c,$+$28                     ; 0410A7 || 0410BA 38 26       3333  			JR      C,PROC3			; Not found, so jump to PROC3
	push	hl                        ; 0410BC || 	push	hl                        ; 0410A9 || 0410BC E5          3334  			PUSH    HL			; HL: Points to the DEF token in the DEFPROC
	pop	iy                         ; 0410BD || 	pop	iy                         ; 0410AA || 0410BD FD E1       3335  			POP     IY			; IY = HL
	inc	iy                         ; 0410BF || 	inc	iy                         ; 0410AC || 0410BF FD 23       3336  			INC     IY              	; Skip the DEF token
	call	$040a83                   ; 0410C1 || 	call	$040a70                   ; 0410AE || 0410C1 CD 83 0A 04 3337  			CALL    NXT			; And any whitespace
	call	$043b5c                   ; 0410C5 || 	call	$043afb                   ; 0410B2 || 0410C5 CD 5C 3B 04 3338  			CALL    GETDEF			; Search for this PROC/FN entry in the dynamic area
	push	iy                        ; 0410C9 || 	push	iy                        ; 0410B6 || 0410C9 FD E5       3339  			PUSH    IY
	pop	de                         ; 0410CB || 	pop	de                         ; 0410B8 || 0410CB D1          3340  			POP     DE			; DE: Points to the PROC/FN token in tokenised line of the DEFPROC
	jr	c,$+$0b                     ; 0410CC || 	jr	c,$+$0b                     ; 0410B9 || 0410CC 38 09       3341  			JR      C,PROC6			; Skip if there is an error (neither FN or PROC first)
	call	nz,$043c0f                ; 0410CE || 	call	nz,$043bae                ; 0410BB || 0410CE C4 0F 3C 04 3342  			CALL    NZ,CREATE		; Create an entity in the dynamic area
	push	iy                        ; 0410D2 || 	push	iy                        ; 0410BF || 0410D2 FD E5       3343  			PUSH    IY			; IY: Pointer to the DEFPROC/FN arguments
	pop	de                         ; 0410D4 || 	pop	de                         ; 0410C1 || 0410D4 D1          3344  			POP     DE			; DE = IY
	ld	(hl),de                     ; 0410D5 || 	ld	(hl),de                     ; 0410C2 || 0410D5 ED 1F       3345  			LD	(HL),DE			; Save address
	ex	de,hl                       ; 0410D7 || 	ex	de,hl                       ; 0410C4 || 0410D7 EB          3347  PROC6:			EX      DE,HL			; HL: Address of the procedure
	ld	a,$0d                       ; 0410D8 || 	ld	a,$0d                       ; 0410C5 || 0410D8 3E 0D       3348  			LD      A,CR			; The character to search for
	ld	bc,$000100                  ; 0410DA || 	ld	bc,$000100                  ; 0410C7 || 0410DA 01 00 01 00 3349  			LD	BC,100h			; Only need to search 256 bytes or so ahead; maximum line length
	cpir                           ; 0410DE || 	cpir                           ; 0410CB || 0410DE ED B1       3350  			CPIR                    	; Skip to next line
	jr	$-$2c                       ; 0410E0 || 	jr	$-$2c                       ; 0410CD || 0410E0 18 D2       3351  			JR      PROC2			; Rinse, lather and repeat
	pop	iy                         ; 0410E2 || 	pop	iy                         ; 0410CF || 0410E2 FD E1       3355  PROC3:			POP     IY              	; Restore the execution address
	call	$043b5c                   ; 0410E4 || 	call	$043afb                   ; 0410D1 || 0410E4 CD 5C 3B 04 3356  			CALL    GETDEF			; Search for this PROC/FN entry in the dynamic area
	ld	a,$1d                       ; 0410E8 || 	ld	a,$1d                       ; 0410D5 || 0410E8 3E 1D       3357  			LD      A,29
	jr	nz,$-$5c                    ; 0410EA || 	jr	nz,$-$5c                    ; 0410D7 || 0410EA 20 A2       3358  			JR      NZ,ERROR3_EX      		; Throw error "No such FN/PROC" if not found
	ld	de,(hl)                     ; 0410EC || 	ld	de,(hl)                     ; 0410D9 || 0410EC ED 17       3362  PROC4:			LD	DE,(HL)			; HL: Address of pointer; fetch entity address in DE
	ld	hl,$000003                  ; 0410EE || 	ld	hl,$000003                  ; 0410DB || 0410EE 21 03 00 00 3363  			LD	HL,3
	add	hl,sp                      ; 0410F2 || 	add	hl,sp                      ; 0410DF || 0410F2 39          3364  			ADD     HL,SP
	call	$040a83                   ; 0410F3 || 	call	$040a70                   ; 0410E0 || 0410F3 CD 83 0A 04 3365  			CALL    NXT             	; Allow space before "("
	push	de                        ; 0410F7 || 	push	de                        ; 0410E4 || 0410F7 D5          3366  			PUSH    DE              	; Exchange DE and IY
	ex	(sp),iy                     ; 0410F8 || 	ex	(sp),iy                     ; 0410E5 || 0410F8 FD E3       3367  			EX      (SP),IY
	cp	$28                         ; 0410FA || 	cp	$28                         ; 0410E7 || 0410FA FE 28       3368  			CP      '('             	; Arguments?
	pop	de                         ; 0410FC || 	pop	de                         ; 0410E9 || 0410FC D1          3369  			POP     DE			; NB: This has been moved after the compare otherwise DE gets corrupted later? IDK why!?!
	jr	nz,$+$22                    ; 0410FD || 	jr	nz,$+$22                    ; 0410EA || 0410FD 20 20       3370  			JR      NZ,PROC5
	call	$040a83                   ; 0410FF || 	call	$040a70                   ; 0410EC || 0410FF CD 83 0A 04 3371  			CALL    NXT             	; Allow space before "("
	cp	$28                         ; 041103 || 	cp	$28                         ; 0410F0 || 041103 FE 28       3372  			CP      '('
	jp	nz,$040caa                  ; 041105 || 	jp	nz,$040c97                  ; 0410F2 || 041105 C2 AA 0C 04 3373  			JP      NZ,SYNTAX       	; Throw "Syntax error"
	push	iy                        ; 041109 || 	push	iy                        ; 0410F6 || 041109 FD E5       3374  			PUSH    IY
	pop	bc                         ; 04110B || 	pop	bc                         ; 0410F8 || 04110B C1          3375  			POP     BC              	; Save IY in BC
	exx                            ; 04110C || 	exx                            ; 0410F9 || 04110C D9          3376  			EXX
	call	$041737                   ; 04110D || 	call	$0416fa                   ; 0410FA || 04110D CD 37 17 04 3377  			CALL    SAVLOC          	; Save local parameters
	call	$040a42                   ; 041111 || 	call	$040a2f                   ; 0410FE || 041111 CD 42 0A 04 3378  			CALL    BRAKET          	; Closing bracket
	exx                            ; 041115 || 	exx                            ; 041102 || 041115 D9          3379  			EXX
	push	bc                        ; 041116 || 	push	bc                        ; 041103 || 041116 C5          3380  			PUSH    BC
	pop	iy                         ; 041117 || 	pop	iy                         ; 041104 || 041117 FD E1       3381  			POP     IY              	; Restore IY
	push	hl                        ; 041119 || 	push	hl                        ; 041106 || 041119 E5          3382  			PUSH    HL
	call	$0416b3                   ; 04111A || 	call	$041676                   ; 041107 || 04111A CD B3 16 04 3383  			CALL    ARGUE           	; Transfer arguments
	pop	hl                         ; 04111E || 	pop	hl                         ; 04110B || 04111E E1          3384  			POP     HL
	inc	hl                         ; 04111F || 	inc	hl                         ; 04110C || 04111F 23          3386  PROC5:			INC	HL			; Increment to the ON PROC flag address
	ld	a,(hl)                      ; 041120 || 	ld	a,(hl)                      ; 04110D || 041120 7E          3387  			LD	A, (HL)			; And fetch the value
	dec	hl                         ; 041121 || 	dec	hl                         ; 04110E || 041121 2B          3388  			DEC 	HL
	ld	(hl),de                     ; 041122 || 	ld	(hl),de                     ; 04110F || 041122 ED 1F       3389  			LD	(HL), DE		; Save the ENDPROC return address pointer in the BASIC listing
	cp	$ee                         ; 041124 || 	cp	$ee                         ; 041111 || 041124 FE EE       3390  			CP	TON			; Was it "ON PROC"?
	jp	nz,$040ba9                  ; 041126 || 	jp	nz,$040b96                  ; 041113 || 041126 C2 A9 0B 04 3391  			JP	NZ, XEQ			; No, so back to XEQ
	push	de                        ; 04112A || 	push	de                        ; 041117 || 04112A D5          3392  			PUSH    DE			; Exchange DE and IY
	ex	(sp),iy                     ; 04112B || 	ex	(sp),iy                     ; 041118 || 04112B FD E3       3393  			EX      (SP),IY
	call	$0417c4                   ; 04112D || 	call	$041787                   ; 04111A || 04112D CD C4 17 04 3394  			CALL    SPAN            	; Skip rest of ON list
	ex	(sp),iy                     ; 041131 || 	ex	(sp),iy                     ; 04111E || 041131 FD E3       3395  			EX      (SP),IY			; Exchange DE and IY
	pop	de                         ; 041133 || 	pop	de                         ; 041120 || 041133 D1          3396  			POP     DE
	ld	(hl),de                     ; 041134 || 	ld	(hl),de                     ; 041121 || 041134 ED 1F       3397  			LD	(HL), DE		; Save the return address
	jp	$040ba9                     ; 041136 || 	jp	$040b96                     ; 041123 || 041136 C3 A9 0B 04 3398  			JP      XEQ
	pop	bc                         ; 04113A || 	pop	bc                         ; 041127 || 04113A C1          3402  LOCAL_EX_:			POP     BC			; BC: The current check marker (on the stack)
	push	bc                        ; 04113B || 	push	bc                        ; 041128 || 04113B C5          3403  			PUSH    BC
	ld	hl,$041097                  ; 04113C || 	ld	hl,$041084                  ; 041129 || 04113C 21 97 10 04 3404  			LD      HL,FNCHK		; Check if we are in a FN
	or	a                           ; 041140 || 	or	a                           ; 04112D || 041140 B7          3405  			OR      A
	sbc	hl,bc                      ; 041141 || 	sbc	hl,bc                      ; 04112E || 041141 ED 42       3406  			SBC     HL,BC
	jr	z,$+$18                     ; 041143 || 	jr	z,$+$18                     ; 041130 || 041143 28 16       3407  			JR      Z,LOCAL1		; Yes, so all good, we can use local
	ld	hl,$04109c                  ; 041145 || 	ld	hl,$041089                  ; 041132 || 041145 21 9C 10 04 3408  			LD      HL,PROCHK		; Now check if we are in a PROC
	or	a                           ; 041149 || 	or	a                           ; 041136 || 041149 B7          3409  			OR      A
	sbc	hl,bc                      ; 04114A || 	sbc	hl,bc                      ; 041137 || 04114A ED 42       3410  			SBC     HL,BC
	jr	z,$+$0f                     ; 04114C || 	jr	z,$+$0f                     ; 041139 || 04114C 28 0D       3411  			JR      Z,LOCAL1		; Again, all good, we can use local
	ld	hl,$041795                  ; 04114E || 	ld	hl,$041758                  ; 04113B || 04114E 21 95 17 04 3412  			LD      HL,LOCCHK		; Finally check for the local parameters marker
	or	a                           ; 041152 || 	or	a                           ; 04113F || 041152 B7          3413  			OR      A
	sbc	hl,bc                      ; 041153 || 	sbc	hl,bc                      ; 041140 || 041153 ED 42       3414  			SBC     HL,BC			; If it is not present, then
	ld	a,$0c                       ; 041155 || 	ld	a,$0c                       ; 041142 || 041155 3E 0C       3415  			LD      A,12
	jp	nz,$0437c1                  ; 041157 || 	jp	nz,$043760                  ; 041144 || 041157 C2 C1 37 04 3416  			JP      NZ,ERROR_        	; Then throw a "Not LOCAL" errr
	push	iy                        ; 04115B || 	push	iy                        ; 041148 || 04115B FD E5       3420  LOCAL1:			PUSH    IY			; IY: BASIC pointer
	pop	bc                         ; 04115D || 	pop	bc                         ; 04114A || 04115D C1          3421  			POP     BC			; BC: Copy of the BASIC pointer
	exx                            ; 04115E || 	exx                            ; 04114B || 04115E D9          3422  			EXX
	dec	iy                         ; 04115F || 	dec	iy                         ; 04114C || 04115F FD 2B       3423  			DEC     IY
	call	$041737                   ; 041161 || 	call	$0416fa                   ; 04114E || 041161 CD 37 17 04 3424  			CALL    SAVLOC
	exx                            ; 041165 || 	exx                            ; 041152 || 041165 D9          3425  			EXX
	push	bc                        ; 041166 || 	push	bc                        ; 041153 || 041166 C5          3426  			PUSH    BC
	pop	iy                         ; 041167 || 	pop	iy                         ; 041154 || 041167 FD E1       3427  			POP     IY
	call	$043a9b                   ; 041169 || 	call	$043a3a                   ; 041156 || 041169 CD 9B 3A 04 3429  LOCAL2:			CALL    GETVAR			; Get the variable location
	jp	nz,$040caa                  ; 04116D || 	jp	nz,$040c97                  ; 04115A || 04116D C2 AA 0C 04 3430  			JP      NZ,SYNTAX
	or	a                           ; 041171 || 	or	a                           ; 04115E || 041171 B7          3431  			OR      A               	; Check the variable type (80h = string)
	ex	af,af'                      ; 041172 || 	ex	af,af'                      ; 04115F || 041172 08          3432  			EX      AF,AF'
	call	$0409a3                   ; 041173 || 	call	$040993                   ; 041160 || 041173 CD A3 09 04 3433  			CALL    ZERO			; Zero the variable anyway
	ex	af,af'                      ; 041177 || 	ex	af,af'                      ; 041164 || 041177 08          3434  			EX      AF,AF'
	push	af                        ; 041178 || 	push	af                        ; 041165 || 041178 F5          3435  			PUSH    AF
	call	p,$041613                 ; 041179 || 	call	p,$0415d6                 ; 041166 || 041179 F4 13 16 04 3436  			CALL    P,STORE         	; Call STORE if it is not a string
	pop	af                         ; 04117D || 	pop	af                         ; 04116A || 04117D F1          3437  			POP     AF
	ld	e,c                         ; 04117E || 	ld	e,c                         ; 04116B || 04117E 59          3438  			LD      E,C
	call	m,$041641                 ; 04117F || 	call	m,$041604                 ; 04116C || 04117F FC 41 16 04 3439  			CALL    M,STORES		; Call STORES if it is a string
	call	$040a83                   ; 041183 || 	call	$040a70                   ; 041170 || 041183 CD 83 0A 04 3440  			CALL    NXT			; Skip to the next character in the expression
	cp	$2c                         ; 041187 || 	cp	$2c                         ; 041174 || 041187 FE 2C       3441  			CP      ','			; Is it a comma?
	jp	nz,$040ba9                  ; 041189 || 	jp	nz,$040b96                  ; 041176 || 041189 C2 A9 0B 04 3442  			JP      NZ,XEQ			; No, so we're done, carry on executing
	inc	iy                         ; 04118D || 	inc	iy                         ; 04117A || 04118D FD 23       3443  			INC     IY			; Yes, so skip the comma
	call	$040a83                   ; 04118F || 	call	$040a70                   ; 04117C || 04118F CD 83 0A 04 3444  			CALL    NXT			; And any whitespace
	jr	$-$2a                       ; 041193 || 	jr	$-$2a                       ; 041180 || 041193 18 D4       3445  			JR      LOCAL2			; Then loop back and handle any further local variables
	pop	bc                         ; 041195 || 	pop	bc                         ; 041182 || 041195 C1          3449  ENDPRO:			POP     BC			; Pop the check value off the stack
	ld	hl,$041795                  ; 041196 || 	ld	hl,$041758                  ; 041183 || 041196 21 95 17 04 3450  			LD      HL,LOCCHK		; Check if it is the LOCAL Marker
	or	a                           ; 04119A || 	or	a                           ; 041187 || 04119A B7          3451  			OR      A
	sbc	hl,bc                      ; 04119B || 	sbc	hl,bc                      ; 041188 || 04119B ED 42       3452  			SBC     HL,BC
	jr	z,$+$15                     ; 04119D || 	jr	z,$+$15                     ; 04118A || 04119D 28 13       3453  			JR      Z,UNSTK         	; Yes, it is, so first need to unstack the local variables
	ld	hl,$04109c                  ; 04119F || 	ld	hl,$041089                  ; 04118C || 04119F 21 9C 10 04 3455  			LD      HL,PROCHK       	; Check if it is the PROC marker
	or	a                           ; 0411A3 || 	or	a                           ; 041190 || 0411A3 B7          3456  			OR      A
	sbc	hl,bc                      ; 0411A4 || 	sbc	hl,bc                      ; 041191 || 0411A4 ED 42       3457  			SBC     HL,BC
	pop	iy                         ; 0411A6 || 	pop	iy                         ; 041193 || 0411A6 FD E1       3458  			POP     IY
	jp	z,$040ba9                   ; 0411A8 || 	jp	z,$040b96                   ; 041195 || 0411A8 CA A9 0B 04 3459  			JP      Z,XEQ			; Yes, it is, so carry on, all is good
	ld	a,$0d                       ; 0411AC || 	ld	a,$0d                       ; 041199 || 0411AC 3E 0D       3460  			LD      A,13			; Otherwise throw the "No PROC" error
	jp	$0437c1                     ; 0411AE || 	jp	$043760                     ; 04119B || 0411AE C3 C1 37 04 3461  			JP      ERROR_
	pop	ix                         ; 0411B2 || 	pop	ix                         ; 04119F || 0411B2 DD E1       3463  UNSTK:			POP     IX			; Unstack a single local variable
	pop	bc                         ; 0411B4 || 	pop	bc                         ; 0411A1 || 0411B4 C1          3464  			POP     BC
	ld	a,b                         ; 0411B5 || 	ld	a,b                         ; 0411A2 || 0411B5 78          3465  			LD      A,B
	or	a                           ; 0411B6 || 	or	a                           ; 0411A3 || 0411B6 B7          3466  			OR      A
	jp	m,$0411c5                   ; 0411B7 || 	jp	m,$0411b2                   ; 0411A4 || 0411B7 FA C5 11 04 3467  			JP      M,UNSTK1        	; Jump here if it is a string? (80h)
	pop	hl                         ; 0411BB || 	pop	hl                         ; 0411A8 || 0411BB E1          3468  			POP     HL			; Unstack a normal variable
	exx                            ; 0411BC || 	exx                            ; 0411A9 || 0411BC D9          3469  			EXX
	pop	hl                         ; 0411BD || 	pop	hl                         ; 0411AA || 0411BD E1          3470  			POP     HL
	exx                            ; 0411BE || 	exx                            ; 0411AB || 0411BE D9          3471  			EXX
	call	$041613                   ; 0411BF || 	call	$0415d6                   ; 0411AC || 0411BF CD 13 16 04 3472  			CALL    STORE			; TODO: Not sure why or where it is being stored at this point
	jr	$-$2e                       ; 0411C3 || 	jr	$-$2e                       ; 0411B0 || 0411C3 18 D0       3473  			JR      ENDPRO			; And loop back to ENDPRO
	ld	hl,$000000                  ; 0411C5 || 	ld	hl,$000000                  ; 0411B2 || 0411C5 21 00 00 00 3475  UNSTK1:			LD      HL,0			; Unstack a string
	add	hl,sp                      ; 0411C9 || 	add	hl,sp                      ; 0411B6 || 0411C9 39          3476  			ADD     HL,SP
	ld	e,c                         ; 0411CA || 	ld	e,c                         ; 0411B7 || 0411CA 59          3477  			LD      E,C
	call	$041641                   ; 0411CB || 	call	$041604                   ; 0411B8 || 0411CB CD 41 16 04 3478  			CALL    STORES			; TODO: Not sure why or where it is being stored at this point
	ld	sp,hl                       ; 0411CF || 	ld	sp,hl                       ; 0411BC || 0411CF F9          3479  			LD      SP,HL
	jr	$-$3b                       ; 0411D0 || 	jr	$-$3b                       ; 0411BD || 0411D0 18 C3       3480  			JR      ENDPRO
	call	$0418cf                   ; 0411D2 || 	call	$041892                   ; 0411BF || 0411D2 CD CF 18 04 3484  INPUTN:			CALL    CHNL            ;E = CHANNEL NUMBER
	call	$040a83                   ; 0411D6 || 	call	$040a70                   ; 0411C3 || 0411D6 CD 83 0A 04 3485  INPN1:			CALL    NXT
	cp	$2c                         ; 0411DA || 	cp	$2c                         ; 0411C7 || 0411DA FE 2C       3486  			CP      ','
	jp	nz,$040ba9                  ; 0411DC || 	jp	nz,$040b96                  ; 0411C9 || 0411DC C2 A9 0B 04 3487  			JP      NZ,XEQ
	inc	iy                         ; 0411E0 || 	inc	iy                         ; 0411CD || 0411E0 FD 23       3488  			INC     IY
	call	$040a83                   ; 0411E2 || 	call	$040a70                   ; 0411CF || 0411E2 CD 83 0A 04 3489  			CALL    NXT
	push	de                        ; 0411E6 || 	push	de                        ; 0411D3 || 0411E6 D5          3490  			PUSH    DE
	call	$040ca1                   ; 0411E7 || 	call	$040c8e                   ; 0411D4 || 0411E7 CD A1 0C 04 3491  			CALL    VAR_
	pop	de                         ; 0411EB || 	pop	de                         ; 0411D8 || 0411EB D1          3492  			POP     DE
	push	af                        ; 0411EC || 	push	af                        ; 0411D9 || 0411EC F5          3493  			PUSH    AF              ;SAVE TYPE
	push	hl                        ; 0411ED || 	push	hl                        ; 0411DA || 0411ED E5          3494  			PUSH    HL              ;VARPTR
	or	a                           ; 0411EE || 	or	a                           ; 0411DB || 0411EE B7          3495  			OR      A
	jp	m,$04121b                   ; 0411EF || 	jp	m,$041208                   ; 0411DC || 0411EF FA 1B 12 04 3496  			JP      M,INPN2         ;STRING
	call	$0443a5                   ; 0411F3 || 	call	$044333                   ; 0411E0 || 0411F3 CD A5 43 04 3497  			CALL    OSBGET
	exx                            ; 0411F7 || 	exx                            ; 0411E4 || 0411F7 D9          3498  			EXX
	ld	l,a                         ; 0411F8 || 	ld	l,a                         ; 0411E5 || 0411F8 6F          3499  			LD      L,A
	exx                            ; 0411F9 || 	exx                            ; 0411E6 || 0411F9 D9          3500  			EXX
	call	$0443a5                   ; 0411FA || 	call	$044333                   ; 0411E7 || 0411FA CD A5 43 04 3501  			CALL    OSBGET
	exx                            ; 0411FE || 	exx                            ; 0411EB || 0411FE D9          3502  			EXX
	ld	h,a                         ; 0411FF || 	ld	h,a                         ; 0411EC || 0411FF 67          3503  			LD      H,A
	exx                            ; 041200 || 	exx                            ; 0411ED || 041200 D9          3504  			EXX
	call	$0443a5                   ; 041201 || 	call	$044333                   ; 0411EE || 041201 CD A5 43 04 3505  			CALL    OSBGET
	ld	l,a                         ; 041205 || 	ld	l,a                         ; 0411F2 || 041205 6F          3506  			LD      L,A
	call	$0443a5                   ; 041206 || 	call	$044333                   ; 0411F3 || 041206 CD A5 43 04 3507  			CALL    OSBGET
	ld	h,a                         ; 04120A || 	ld	h,a                         ; 0411F7 || 04120A 67          3508  			LD      H,A
	call	$0443a5                   ; 04120B || 	call	$044333                   ; 0411F8 || 04120B CD A5 43 04 3509  			CALL    OSBGET
	ld	c,a                         ; 04120F || 	ld	c,a                         ; 0411FC || 04120F 4F          3510  			LD      C,A
	pop	ix                         ; 041210 || 	pop	ix                         ; 0411FD || 041210 DD E1       3511  			POP     IX
	pop	af                         ; 041212 || 	pop	af                         ; 0411FF || 041212 F1          3512  			POP     AF              ;RESTORE TYPE
	push	de                        ; 041213 || 	push	de                        ; 041200 || 041213 D5          3513  			PUSH    DE              ;SAVE CHANNEL
	call	$041613                   ; 041214 || 	call	$0415d6                   ; 041201 || 041214 CD 13 16 04 3514  			CALL    STORE
	pop	de                         ; 041218 || 	pop	de                         ; 041205 || 041218 D1          3515  			POP     DE
	jr	$-$43                       ; 041219 || 	jr	$-$43                       ; 041206 || 041219 18 BB       3516  			JR      INPN1
	ld	hl,$044a00                  ; 04121B || 	ld	hl,$044a00                  ; 041208 || 04121B 21 00 4A 04 3517  INPN2:			LD      HL,ACCS
	call	$0443a5                   ; 04121F || 	call	$044333                   ; 04120C || 04121F CD A5 43 04 3518  INPN3:			CALL    OSBGET
	cp	$0d                         ; 041223 || 	cp	$0d                         ; 041210 || 041223 FE 0D       3519  			CP      CR
	jr	z,$+$06                     ; 041225 || 	jr	z,$+$06                     ; 041212 || 041225 28 04       3520  			JR      Z,INPN4
	ld	(hl),a                      ; 041227 || 	ld	(hl),a                      ; 041214 || 041227 77          3521  			LD      (HL),A
	inc	l                          ; 041228 || 	inc	l                          ; 041215 || 041228 2C          3522  			INC     L
	jr	nz,$-$0a                    ; 041229 || 	jr	nz,$-$0a                    ; 041216 || 041229 20 F4       3523  			JR      NZ,INPN3
	pop	ix                         ; 04122B || 	pop	ix                         ; 041218 || 04122B DD E1       3524  INPN4:			POP     IX
	pop	af                         ; 04122D || 	pop	af                         ; 04121A || 04122D F1          3525  			POP     AF
	push	de                        ; 04122E || 	push	de                        ; 04121B || 04122E D5          3526  			PUSH    DE
	ex	de,hl                       ; 04122F || 	ex	de,hl                       ; 04121C || 04122F EB          3527  			EX      DE,HL
	call	$04163d                   ; 041230 || 	call	$041600                   ; 04121D || 041230 CD 3D 16 04 3528  			CALL    STACCS
	pop	de                         ; 041234 || 	pop	de                         ; 041221 || 041234 D1          3529  			POP     DE
	jr	$-$5f                       ; 041235 || 	jr	$-$5f                       ; 041222 || 041235 18 9F       3530  			JR      INPN1
	cp	$23                         ; 041237 || 	cp	$23                         ; 041224 || 041237 FE 23       3535  INPUT:			CP      '#'
	jr	z,$-$67                     ; 041239 || 	jr	z,$-$67                     ; 041226 || 041239 28 97       3536  			JR      Z,INPUTN
	ld	c,$00                       ; 04123B || 	ld	c,$00                       ; 041228 || 04123B 0E 00       3537  			LD      C,0             ;FLAG PROMPT
	cp	$86                         ; 04123D || 	cp	$86                         ; 04122A || 04123D FE 86       3538  			CP      LINE_
	jr	nz,$+$06                    ; 04123F || 	jr	nz,$+$06                    ; 04122C || 04123F 20 04       3539  			JR      NZ,INPUT0
	inc	iy                         ; 041241 || 	inc	iy                         ; 04122E || 041241 FD 23       3540  			INC     IY              ;SKIP "LINE"
	ld	c,$80                       ; 041243 || 	ld	c,$80                       ; 041230 || 041243 0E 80       3541  			LD      C,80H
	ld	hl,$044b00                  ; 041245 || 	ld	hl,$044b00                  ; 041232 || 041245 21 00 4B 04 3542  INPUT0:			LD      HL,BUFFER
	ld	(hl),$0d                    ; 041249 || 	ld	(hl),$0d                    ; 041236 || 041249 36 0D       3543  			LD      (HL),CR         ;INITIALISE EMPTY
	call	$0417b7                   ; 04124B || 	call	$04177a                   ; 041238 || 04124B CD B7 17 04 3544  INPUT1:			CALL    TERMQ
	jp	z,$040ba9                   ; 04124F || 	jp	z,$040b96                   ; 04123C || 04124F CA A9 0B 04 3545  			JP      Z,XEQ           ;DONE
	inc	iy                         ; 041253 || 	inc	iy                         ; 041240 || 041253 FD 23       3546  			INC     IY
	cp	$2c                         ; 041255 || 	cp	$2c                         ; 041242 || 041255 FE 2C       3547  			CP      ','
	jr	z,$+$5e                     ; 041257 || 	jr	z,$+$5e                     ; 041244 || 041257 28 5C       3548  			JR      Z,INPUT3        ;SKIP COMMA
	cp	$3b                         ; 041259 || 	cp	$3b                         ; 041246 || 041259 FE 3B       3549  			CP      ';'
	jr	z,$+$5a                     ; 04125B || 	jr	z,$+$5a                     ; 041248 || 04125B 28 58       3550  			JR      Z,INPUT3
	push	hl                        ; 04125D || 	push	hl                        ; 04124A || 04125D E5          3551  			PUSH    HL              ;SAVE BUFFER POINTER
	cp	$22                         ; 04125E || 	cp	$22                         ; 04124B || 04125E FE 22       3552  			CP      34		;ASCII ""
	jr	nz,$+$0e                    ; 041260 || 	jr	nz,$+$0e                    ; 04124D || 041260 20 0C       3553  			JR      NZ,INPUT6
	push	bc                        ; 041262 || 	push	bc                        ; 04124F || 041262 C5          3554  			PUSH    BC
	call	$040477                   ; 041263 || 	call	$040467                   ; 041250 || 041263 CD 77 04 04 3555  			CALL    CONS
	pop	bc                         ; 041267 || 	pop	bc                         ; 041254 || 041267 C1          3556  			POP     BC
	call	$04183b                   ; 041268 || 	call	$0417fe                   ; 041255 || 041268 CD 3B 18 04 3557  			CALL    PTEXT           ;PRINT PROMPT
	jr	$+$08                       ; 04126C || 	jr	$+$08                       ; 041259 || 04126C 18 06       3558  			JR      INPUT9
	call	$0417dc                   ; 04126E || 	call	$04179f                   ; 04125B || 04126E CD DC 17 04 3559  INPUT6:			CALL    FORMAT          ;SPC, TAB, '
	jr	nz,$+$07                    ; 041272 || 	jr	nz,$+$07                    ; 04125F || 041272 20 05       3560  			JR      NZ,INPUT2
	pop	hl                         ; 041274 || 	pop	hl                         ; 041261 || 041274 E1          3561  INPUT9:			POP     HL
	set	0,c                        ; 041275 || 	set	0,c                        ; 041262 || 041275 CB C1       3562  			SET     0,C             ;FLAG NO PROMPT
	jr	$-$32                       ; 041277 || 	jr	$-$32                       ; 041264 || 041277 18 CC       3563  			JR      INPUT0
	dec	iy                         ; 041279 || 	dec	iy                         ; 041266 || 041279 FD 2B       3564  INPUT2:			DEC     IY
	push	bc                        ; 04127B || 	push	bc                        ; 041268 || 04127B C5          3565  			PUSH    BC
	call	$040ca1                   ; 04127C || 	call	$040c8e                   ; 041269 || 04127C CD A1 0C 04 3566  			CALL    VAR_
	pop	bc                         ; 041280 || 	pop	bc                         ; 04126D || 041280 C1          3567  			POP     BC
	pop	hl                         ; 041281 || 	pop	hl                         ; 04126E || 041281 E1          3568  			POP     HL
	push	af                        ; 041282 || 	push	af                        ; 04126F || 041282 F5          3569  			PUSH    AF              ;SAVE TYPE
	ld	a,(hl)                      ; 041283 || 	ld	a,(hl)                      ; 041270 || 041283 7E          3570  			LD      A,(HL)
	inc	hl                         ; 041284 || 	inc	hl                         ; 041271 || 041284 23          3571  			INC     HL
	cp	$0d                         ; 041285 || 	cp	$0d                         ; 041272 || 041285 FE 0D       3572  			CP      CR              ;BUFFER EMPTY?
	call	z,$0412b9                 ; 041287 || 	call	z,$0412a6                 ; 041274 || 041287 CC B9 12 04 3573  			CALL    Z,REFILL
	bit	7,c                        ; 04128B || 	bit	7,c                        ; 041278 || 04128B CB 79       3574  			BIT     7,C
	push	af                        ; 04128D || 	push	af                        ; 04127A || 04128D F5          3575  			PUSH    AF
	call	nz,$04185d                ; 04128E || 	call	nz,$041820                ; 04127B || 04128E C4 5D 18 04 3576  			CALL    NZ,LINES
	pop	af                         ; 041292 || 	pop	af                         ; 04127F || 041292 F1          3577  			POP     AF
	call	z,$04184a                 ; 041293 || 	call	z,$04180d                 ; 041280 || 041293 CC 4A 18 04 3578  			CALL    Z,FETCHS
	pop	af                         ; 041297 || 	pop	af                         ; 041284 || 041297 F1          3579  			POP     AF              ;RESTORE TYPE
	push	bc                        ; 041298 || 	push	bc                        ; 041285 || 041298 C5          3580  			PUSH    BC
	push	hl                        ; 041299 || 	push	hl                        ; 041286 || 041299 E5          3581  			PUSH    HL
	or	a                           ; 04129A || 	or	a                           ; 041287 || 04129A B7          3582  			OR      A
	jp	m,$0412af                   ; 04129B || 	jp	m,$04129c                   ; 041288 || 04129B FA AF 12 04 3583  			JP      M,INPUT4        ;STRING
	push	af                        ; 04129F || 	push	af                        ; 04128C || 04129F F5          3584  			PUSH    AF
	push	ix                        ; 0412A0 || 	push	ix                        ; 04128D || 0412A0 DD E5       3585  			PUSH    IX
	call	$04067e                   ; 0412A2 || 	call	$04066e                   ; 04128F || 0412A2 CD 7E 06 04 3586  			CALL    VAL0
	pop	ix                         ; 0412A6 || 	pop	ix                         ; 041293 || 0412A6 DD E1       3587  			POP     IX
	pop	af                         ; 0412A8 || 	pop	af                         ; 041295 || 0412A8 F1          3588  			POP     AF
	call	$041613                   ; 0412A9 || 	call	$0415d6                   ; 041296 || 0412A9 CD 13 16 04 3589  			CALL    STORE
	jr	$+$06                       ; 0412AD || 	jr	$+$06                       ; 04129A || 0412AD 18 04       3590  			JR      INPUT5
	call	$04163d                   ; 0412AF || 	call	$041600                   ; 04129C || 0412AF CD 3D 16 04 3591  INPUT4:			CALL    STACCS
	pop	hl                         ; 0412B3 || 	pop	hl                         ; 0412A0 || 0412B3 E1          3592  INPUT5:			POP     HL
	pop	bc                         ; 0412B4 || 	pop	bc                         ; 0412A1 || 0412B4 C1          3593  			POP     BC
	res	0,c                        ; 0412B5 || 	res	0,c                        ; 0412A2 || 0412B5 CB 81       3594  INPUT3:			RES     0,C
	jr	$-$6c                       ; 0412B7 || 	jr	$-$6c                       ; 0412A4 || 0412B7 18 92       3595  			JR      INPUT1
	bit	0,c                        ; 0412B9 || 	bit	0,c                        ; 0412A6 || 0412B9 CB 41       3597  REFILL:			BIT     0,C
	jr	nz,$+$0e                    ; 0412BB || 	jr	nz,$+$0e                    ; 0412A8 || 0412BB 20 0C       3598  			JR      NZ,REFIL0       ;NO PROMPT
	ld	a,$3f                       ; 0412BD || 	ld	a,$3f                       ; 0412AA || 0412BD 3E 3F       3599  			LD      A,'?'
	call	$0439b0                   ; 0412BF || 	call	$04394f                   ; 0412AC || 0412BF CD B0 39 04 3600  			CALL    OUTCHR          ;PROMPT
	ld	a,$20                       ; 0412C3 || 	ld	a,$20                       ; 0412B0 || 0412C3 3E 20       3601  			LD      A,' '
	call	$0439b0                   ; 0412C5 || 	call	$04394f                   ; 0412B2 || 0412C5 CD B0 39 04 3602  			CALL    OUTCHR
	ld	hl,$044b00                  ; 0412C9 || 	ld	hl,$044b00                  ; 0412B6 || 0412C9 21 00 4B 04 3603  REFIL0:			LD      HL,BUFFER
	push	bc                        ; 0412CD || 	push	bc                        ; 0412BA || 0412CD C5          3604  			PUSH    BC
	push	hl                        ; 0412CE || 	push	hl                        ; 0412BB || 0412CE E5          3605  			PUSH    HL
	push	ix                        ; 0412CF || 	push	ix                        ; 0412BC || 0412CF DD E5       3606  			PUSH    IX
	call	$043ec0                   ; 0412D1 || 	call	$043e5f                   ; 0412BE || 0412D1 CD C0 3E 04 3607  			CALL    OSLINE
	pop	ix                         ; 0412D5 || 	pop	ix                         ; 0412C2 || 0412D5 DD E1       3608  			POP     IX
	pop	hl                         ; 0412D7 || 	pop	hl                         ; 0412C4 || 0412D7 E1          3609  			POP     HL
	pop	bc                         ; 0412D8 || 	pop	bc                         ; 0412C5 || 0412D8 C1          3610  			POP     BC
	ld	b,a                         ; 0412D9 || 	ld	b,a                         ; 0412C6 || 0412D9 47          3611  			LD      B,A             ;POS AT ENTRY
	xor	a                          ; 0412DA || 	xor	a                          ; 0412C7 || 0412DA AF          3612  			XOR     A
	ld	($044d3d),a                 ; 0412DB || 	ld	($044d3d),a                 ; 0412C8 || 0412DB 32 3D 4D 04 3613  			LD      (COUNT),A
	cp	b                           ; 0412DF || 	cp	b                           ; 0412CC || 0412DF B8          3614  			CP      B
	ret	z                          ; 0412E0 || 	ret	z                          ; 0412CD || 0412E0 C8          3615  			RET     Z
	ld	a,(hl)                      ; 0412E1 || 	ld	a,(hl)                      ; 0412CE || 0412E1 7E          3616  REFIL1:			LD      A,(HL)
	cp	$0d                         ; 0412E2 || 	cp	$0d                         ; 0412CF || 0412E2 FE 0D       3617  			CP      CR
	ret	z                          ; 0412E4 || 	ret	z                          ; 0412D1 || 0412E4 C8          3618  			RET     Z
	inc	hl                         ; 0412E5 || 	inc	hl                         ; 0412D2 || 0412E5 23          3619  			INC     HL
	djnz	$-$05                     ; 0412E6 || 	djnz	$-$05                     ; 0412D3 || 0412E6 10 F9       3620  			DJNZ    REFIL1
	ret                            ; 0412E8 || 	ret                            ; 0412D5 || 0412E8 C9          3621  			RET
	cp	$23                         ; 0412E9 || 	cp	$23                         ; 0412D6 || 0412E9 FE 23       3625  READ:			CP      '#'
	jp	z,$0411d2                   ; 0412EB || 	jp	z,$0411bf                   ; 0412D8 || 0412EB CA D2 11 04 3626  			JP      Z,INPUTN
	ld	hl,($044d31)                ; 0412EF || 	ld	hl,($044d31)                ; 0412DC || 0412EF 2A 31 4D 04 3627  			LD      HL,(DATPTR)
	ld	a,(hl)                      ; 0412F3 || 	ld	a,(hl)                      ; 0412E0 || 0412F3 7E          3628  READ0:			LD      A,(HL)
	inc	hl                         ; 0412F4 || 	inc	hl                         ; 0412E1 || 0412F4 23          3629  			INC     HL              ;SKIP COMMA OR "DATA"
	cp	$0d                         ; 0412F5 || 	cp	$0d                         ; 0412E2 || 0412F5 FE 0D       3630  			CP      CR              ;END OF DATA STMT?
	call	z,$04133b                 ; 0412F7 || 	call	z,$041328                 ; 0412E4 || 0412F7 CC 3B 13 04 3631  			CALL    Z,GETDAT
	push	hl                        ; 0412FB || 	push	hl                        ; 0412E8 || 0412FB E5          3632  			PUSH    HL
	call	$040ca1                   ; 0412FC || 	call	$040c8e                   ; 0412E9 || 0412FC CD A1 0C 04 3633  			CALL    VAR_
	pop	hl                         ; 041300 || 	pop	hl                         ; 0412ED || 041300 E1          3634  			POP     HL
	or	a                           ; 041301 || 	or	a                           ; 0412EE || 041301 B7          3635  			OR      A
	jp	m,$04131b                   ; 041302 || 	jp	m,$041308                   ; 0412EF || 041302 FA 1B 13 04 3636  			JP      M,READ1         ;STRING
	push	hl                        ; 041306 || 	push	hl                        ; 0412F3 || 041306 E5          3637  			PUSH    HL
	ex	(sp),iy                     ; 041307 || 	ex	(sp),iy                     ; 0412F4 || 041307 FD E3       3638  			EX      (SP),IY
	push	af                        ; 041309 || 	push	af                        ; 0412F6 || 041309 F5          3639  			PUSH    AF              ;SAVE TYPE
	push	ix                        ; 04130A || 	push	ix                        ; 0412F7 || 04130A DD E5       3640  			PUSH    IX
	call	$040312                   ; 04130C || 	call	$040302                   ; 0412F9 || 04130C CD 12 03 04 3641  			CALL    EXPRN
	pop	ix                         ; 041310 || 	pop	ix                         ; 0412FD || 041310 DD E1       3642  			POP     IX
	pop	af                         ; 041312 || 	pop	af                         ; 0412FF || 041312 F1          3643  			POP     AF
	call	$041613                   ; 041313 || 	call	$0415d6                   ; 041300 || 041313 CD 13 16 04 3644  			CALL    STORE
	ex	(sp),iy                     ; 041317 || 	ex	(sp),iy                     ; 041304 || 041317 FD E3       3645  			EX      (SP),IY
	jr	$+$0b                       ; 041319 || 	jr	$+$0b                       ; 041306 || 041319 18 09       3646  			JR      READ2
	call	$04184a                   ; 04131B || 	call	$04180d                   ; 041308 || 04131B CD 4A 18 04 3647  READ1:			CALL    FETCHS
	push	hl                        ; 04131F || 	push	hl                        ; 04130C || 04131F E5          3648  			PUSH    HL
	call	$04163d                   ; 041320 || 	call	$041600                   ; 04130D || 041320 CD 3D 16 04 3649  			CALL    STACCS
	pop	hl                         ; 041324 || 	pop	hl                         ; 041311 || 041324 E1          3650  READ2:			POP     HL
	ld	($044d31),hl                ; 041325 || 	ld	($044d31),hl                ; 041312 || 041325 22 31 4D 04 3651  			LD      (DATPTR),HL
	call	$040a83                   ; 041329 || 	call	$040a70                   ; 041316 || 041329 CD 83 0A 04 3652  			CALL    NXT
	cp	$2c                         ; 04132D || 	cp	$2c                         ; 04131A || 04132D FE 2C       3653  			CP      ','
	jp	nz,$040ba9                  ; 04132F || 	jp	nz,$040b96                  ; 04131C || 04132F C2 A9 0B 04 3654  			JP      NZ,XEQ
	inc	iy                         ; 041333 || 	inc	iy                         ; 041320 || 041333 FD 23       3655  			INC     IY
	call	$040a83                   ; 041335 || 	call	$040a70                   ; 041322 || 041335 CD 83 0A 04 3656  			CALL    NXT
	jr	$-$46                       ; 041339 || 	jr	$-$46                       ; 041326 || 041339 18 B8       3657  			JR      READ0
	ld	a,$dc                       ; 04133B || 	ld	a,$dc                       ; 041328 || 04133B 3E DC       3659  GETDAT:			LD      A,DATA_
	call	$04188b                   ; 04133D || 	call	$04184e                   ; 04132A || 04133D CD 8B 18 04 3660  			CALL    SEARCH_EX
	inc	hl                         ; 041341 || 	inc	hl                         ; 04132E || 041341 23          3661  			INC     HL
	ret	nc                         ; 041342 || 	ret	nc                         ; 04132F || 041342 D0          3662  			RET     NC
	ld	a,$2a                       ; 041343 || 	ld	a,$2a                       ; 041330 || 041343 3E 2A       3663  			LD      A,42
	jp	$0437c1                     ; 041345 || 	jp	$043760                     ; 041332 || 041345 C3 C1 37 04 3664  ERROR4:			JP      ERROR_           ;"Out of DATA"
	call	$04031a                   ; 041349 || 	call	$04030a                   ; 041336 || 041349 CD 1A 03 04 3670  IF_:			CALL    EXPRI
	call	$0408ef                   ; 04134D || 	call	$0408df                   ; 04133A || 04134D CD EF 08 04 3671  			CALL    TEST
	jr	z,$+$1b                     ; 041351 || 	jr	z,$+$1b                     ; 04133E || 041351 28 19       3672  			JR      Z,IFNOT         ;FALSE
	ld	a,(iy)                      ; 041353 || 	ld	a,(iy)                      ; 041340 || 041353 FD 7E 00    3673  			LD      A,(IY)
	cp	$8c                         ; 041356 || 	cp	$8c                         ; 041343 || 041356 FE 8C       3674  			CP      THEN
	jp	nz,$040ba9                  ; 041358 || 	jp	nz,$040b96                  ; 041345 || 041358 C2 A9 0B 04 3675  			JP      NZ,XEQ
	inc	iy                         ; 04135C || 	inc	iy                         ; 041349 || 04135C FD 23       3676  			INC     IY              ;SKIP "THEN"
	call	$040a83                   ; 04135E || 	call	$040a70                   ; 04134B || 04135E CD 83 0A 04 3677  IF1:			CALL    NXT
	cp	$8d                         ; 041362 || 	cp	$8d                         ; 04134F || 041362 FE 8D       3678  			CP      LINO
	jp	nz,$040ba9                  ; 041364 || 	jp	nz,$040b96                  ; 041351 || 041364 C2 A9 0B 04 3679  			JP      NZ,XEQ          ;STATEMENT FOLLOWS
	jp	$040f3e                     ; 041368 || 	jp	$040f2b                     ; 041355 || 041368 C3 3E 0F 04 3680  			JP      GOTO_EX            ;LINE NO. FOLLOWS
	ld	a,(iy)                      ; 04136C || 	ld	a,(iy)                      ; 041359 || 04136C FD 7E 00    3681  IFNOT:			LD      A,(IY)
	cp	$0d                         ; 04136F || 	cp	$0d                         ; 04135C || 04136F FE 0D       3682  			CP      CR
	inc	iy                         ; 041371 || 	inc	iy                         ; 04135E || 041371 FD 23       3683  			INC     IY
	jp	z,$040ba5                   ; 041373 || 	jp	z,$040b92                   ; 041360 || 041373 CA A5 0B 04 3684  			JP      Z,XEQ0          ;END OF LINE
	cp	$8b                         ; 041377 || 	cp	$8b                         ; 041364 || 041377 FE 8B       3685  			CP      ELSE_
	jr	nz,$-$0d                    ; 041379 || 	jr	nz,$-$0d                    ; 041366 || 041379 20 F1       3686  			JR      NZ,IFNOT
	jr	$-$1d                       ; 04137B || 	jr	$-$1d                       ; 041368 || 04137B 18 E1       3687  			JR      IF1
	call	$044433                   ; 04137D || 	call	$0443cc                   ; 04136A || 04137D CD 33 44 04 3691  CLS:		CALL    CLRSCN
	xor	a                          ; 041381 || 	xor	a                          ; 04136E || 041381 AF          3692  			XOR     A
	ld	($044d3d),a                 ; 041382 || 	ld	($044d3d),a                 ; 04136F || 041382 32 3D 4D 04 3693  			LD      (COUNT),A
	jp	$040ba9                     ; 041386 || 	jp	$040b96                     ; 041373 || 041386 C3 A9 0B 04 3694  			JP      XEQ
	call	$043df1                   ; 04138A || 	call	$043d90                   ; 041377 || 04138A CD F1 3D 04 3698  STOP:			CALL    TELL
	dec	c                          ; 04138E || 	dec	c                          ; 04137B || 04138E 0D          3699  			DB	CR
	ld	a,(bc)                      ; 04138F || 	ld	a,(bc)                      ; 04137C || 04138F 0A          3700  			DB	LF
	jp	m,$0fcd00                   ; 041390 || 	jp	m,$aecd00                   ; 04137D || 041390 FA          3701  			DB	TSTOP
	ld	a,($43cd04)                 ; 041394
	ld	a,($a8cd04)                 ; 041398
	add	hl,sp                      ; 04139C
	inc	b                          ; 04139D
	jp	$0430e1                     ; 04139E || 	jp	$043080                     ; 04138B || 04139E C3 E1 30 04 3706  			JP      CLOOP
	call	$043de3                   ; 0413A2 || 	call	$043d82                   ; 04138F || 0413A2 CD E3 3D 04 3710  REPOR:			CALL    REPORT
	jp	$040ba9                     ; 0413A6 || 	jp	$040b96                     ; 041393 || 0413A6 C3 A9 0B 04 3711  			JP      XEQ
	call	$0438d7                   ; 0413AA || 	call	$043876                   ; 041397 || 0413AA CD D7 38 04 3715  CLR:			CALL    CLEAR
	ld	hl,($044d14)                ; 0413AE || 	ld	hl,($044d14)                ; 04139B || 0413AE 2A 14 4D 04 3716  			LD      HL,(PAGE_)
	jr	$+$1b                       ; 0413B2 || 	jr	$+$1b                       ; 04139F || 0413B2 18 19       3717  			JR      RESTR1
	ld	hl,($044d14)                ; 0413B4 || 	ld	hl,($044d14)                ; 0413A1 || 0413B4 2A 14 4D 04 3721  RESTOR_EX:			LD      HL,(PAGE_)
	call	$0417b7                   ; 0413B8 || 	call	$04177a                   ; 0413A5 || 0413B8 CD B7 17 04 3722  			CALL    TERMQ
	jr	z,$+$11                     ; 0413BC || 	jr	z,$+$11                     ; 0413A9 || 0413BC 28 0F       3723  			JR      Z,RESTR1
	call	$040335                   ; 0413BE || 	call	$040325                   ; 0413AB || 0413BE CD 35 03 04 3724  			CALL    ITEMI
	exx                            ; 0413C2 || 	exx                            ; 0413AF || 0413C2 D9          3725  			EXX
	call	$0439f0                   ; 0413C3 || 	call	$04398f                   ; 0413B0 || 0413C3 CD F0 39 04 3726  			CALL    FINDL           ;SEARCH FOR LINE
	ld	a,$29                       ; 0413C7 || 	ld	a,$29                       ; 0413B4 || 0413C7 3E 29       3727  			LD      A,41
	jp	nz,$041345                  ; 0413C9 || 	jp	nz,$041332                  ; 0413B6 || 0413C9 C2 45 13 04 3728  			JP      NZ,ERROR4       ;"No such line"
	ld	a,$dc                       ; 0413CD || 	ld	a,$dc                       ; 0413BA || 0413CD 3E DC       3729  RESTR1:			LD      A,DATA_
	call	$04188b                   ; 0413CF || 	call	$04184e                   ; 0413BC || 0413CF CD 8B 18 04 3730  			CALL    SEARCH_EX
	ld	($044d31),hl                ; 0413D3 || 	ld	($044d31),hl                ; 0413C0 || 0413D3 22 31 4D 04 3731  			LD      (DATPTR),HL
	jp	$040ba9                     ; 0413D7 || 	jp	$040b96                     ; 0413C4 || 0413D7 C3 A9 0B 04 3732  			JP      XEQ
	call	$0418c3                   ; 0413DB || 	call	$041886                   ; 0413C8 || 0413DB CD C3 18 04 3740  PTR_EX:			CALL    CHANEL
	call	$0417cd                   ; 0413DF || 	call	$041790                   ; 0413CC || 0413DF CD CD 17 04 3741  			CALL    EQUALS
	ld	a,e                         ; 0413E3 || 	ld	a,e                         ; 0413D0 || 0413E3 7B          3742  			LD      A,E
	push	af                        ; 0413E4 || 	push	af                        ; 0413D1 || 0413E4 F5          3743  			PUSH    AF
	call	$04031a                   ; 0413E5 || 	call	$04030a                   ; 0413D2 || 0413E5 CD 1A 03 04 3744  			CALL    EXPRI
	push	hl                        ; 0413E9 || 	push	hl                        ; 0413D6 || 0413E9 E5          3745  			PUSH    HL
	exx                            ; 0413EA || 	exx                            ; 0413D7 || 0413EA D9          3746  			EXX
	pop	de                         ; 0413EB || 	pop	de                         ; 0413D8 || 0413EB D1          3747  			POP     DE
	pop	af                         ; 0413EC || 	pop	af                         ; 0413D9 || 0413EC F1          3748  			POP     AF
	call	$0443d9                   ; 0413ED || 	call	$044367                   ; 0413DA || 0413ED CD D9 43 04 3749  			CALL    PUTPTR
	jp	$040ba9                     ; 0413F1 || 	jp	$040b96                     ; 0413DE || 0413F1 C3 A9 0B 04 3750  			JP      XEQ
	call	$0417cd                   ; 0413F5 || 	call	$041790                   ; 0413E2 || 0413F5 CD CD 17 04 3752  PAGEV_EX:			CALL    EQUALS
	call	$04031a                   ; 0413F9 || 	call	$04030a                   ; 0413E6 || 0413F9 CD 1A 03 04 3753  			CALL    EXPRI
	exx                            ; 0413FD || 	exx                            ; 0413EA || 0413FD D9          3754  			EXX
	ld	l,$00                       ; 0413FE || 	ld	l,$00                       ; 0413EB || 0413FE 2E 00       3755  			LD      L,0
	ld	($044d14),hl                ; 041400 || 	ld	($044d14),hl                ; 0413ED || 041400 22 14 4D 04 3756  			LD      (PAGE_),HL
	jp	$040ba9                     ; 041404 || 	jp	$040b96                     ; 0413F1 || 041404 C3 A9 0B 04 3757  			JP      XEQ
	cp	$24                         ; 041408 || 	cp	$24                         ; 0413F5 || 041408 FE 24       3759  TIMEV_EX:			CP      '$'
	jr	z,$+$15                     ; 04140A || 	jr	z,$+$15                     ; 0413F7 || 04140A 28 13       3760  			JR      Z,TIMEVS_EX
	call	$0417cd                   ; 04140C || 	call	$041790                   ; 0413F9 || 04140C CD CD 17 04 3761  			CALL    EQUALS
	call	$04031a                   ; 041410 || 	call	$04030a                   ; 0413FD || 041410 CD 1A 03 04 3762  			CALL    EXPRI
	push	hl                        ; 041414 || 	push	hl                        ; 041401 || 041414 E5          3763  			PUSH    HL
	exx                            ; 041415 || 	exx                            ; 041402 || 041415 D9          3764  			EXX
	pop	de                         ; 041416 || 	pop	de                         ; 041403 || 041416 D1          3765  			POP     DE
	call	$043ef8                   ; 041417 || 	call	$043e97                   ; 041404 || 041417 CD F8 3E 04 3766  			CALL    PUTIME
	jp	$040ba9                     ; 04141B || 	jp	$040b96                     ; 041408 || 04141B C3 A9 0B 04 3767  			JP      XEQ
	inc	iy                         ; 04141F || 	inc	iy                         ; 04140C || 04141F FD 23       3769  TIMEVS_EX:			INC     IY              ;SKIP '$'
	call	$0417cd                   ; 041421 || 	call	$041790                   ; 04140E || 041421 CD CD 17 04 3770  			CALL    EQUALS
	call	$040325                   ; 041425 || 	call	$040315                   ; 041412 || 041425 CD 25 03 04 3771  			CALL    EXPRS
	call	$04010a                   ; 041429 || 	call	$0443b7                   ; 041416 || 041429 CD 0A 01 04 3772  			CALL    PUTIMS
	jp	$040ba9                     ; 04142D || 	jp	$040b96                     ; 04141A || 04142D C3 A9 0B 04 3773  			JP      XEQ
	call	$0417cd                   ; 041431 || 	call	$041790                   ; 04141E || 041431 CD CD 17 04 3775  LOMEMV_EX:			CALL    EQUALS
	call	$04031a                   ; 041435 || 	call	$04030a                   ; 041422 || 041435 CD 1A 03 04 3776  			CALL    EXPRI
	call	$0438d7                   ; 041439                                         || 041439 CD D7 38 04 3777  			CALL    CLEAR
	exx                            ; 04143D                                         || 04143D D9          3778  			EXX
	ld	($044d1a),hl                ; 04143E                                         || 04143E 22 1A 4D 04 3779  			LD      (LOMEM),HL
	ld	($044d1d),hl                ; 041442                                         || 041442 22 1D 4D 04 3780  			LD      (FREE),HL
	jp	$040ba9                     ; 041446                                         || 041446 C3 A9 0B 04 3781  			JP      XEQ
	call	$0417cd                   ; 04144A                                         || 04144A CD CD 17 04 3783  HIMEMV_EX:			CALL    EQUALS			; Check for '=' and throw an error if not found
	call	$04031a                   ; 04144E                                         || 04144E CD 1A 03 04 3784  			CALL    EXPRI			; Load the expression into registers
	ld	a,l                         ; 041452                                         || 041452 7D          3785  			LD	A,L			;  A: The MSB of the 24-bit value
	exx                            ; 041453                                         || 041453 D9          3786  			EXX				; HL: The LSW of the 24-bit value
	ld	($044d4a),hl                ; 041454                                         || 041454 22 4A 4D 04 3787  			LD	(R0),HL
	ld	($044d4c),a                 ; 041458                                         || 041458 32 4C 4D 04 3788  			LD	(R0+2),A
	ld	hl,($044d1d)                ; 04145C                                         || 04145C 2A 1D 4D 04 3789  			LD	HL,(FREE)
	ld	de,$000100                  ; 041460                                         || 041460 11 00 01 00 3790  			LD      DE,256
	add	hl,de                      ; 041464                                         || 041464 19          3791  			ADD	HL,DE
	ex	de,hl                       ; 041465                                         || 041465 EB          3792  			EX	DE,HL			; DE: FREE + 256
	ld	hl,($044d4a)                ; 041466                                         || 041466 2A 4A 4D 04 3793  			LD	HL,(R0)			; HL: The passed expression
	xor	a                          ; 04146A || 	xor	a                          ; 041446 || 04146A AF          3794  			XOR     A
	sbc	hl,de                      ; 04146B || 	sbc	hl,de                      ; 041447 || 04146B ED 52       3795  			SBC     HL,DE
	add	hl,de                      ; 04146D || 	add	hl,de                      ; 041449 || 04146D 19          3796  			ADD     HL,DE			; Do a bounds check
	jp	c,$0437c1                   ; 04146E || 	jp	c,$043760                   ; 04144A || 04146E DA C1 37 04 3797  			JP      C,ERROR_         	; Throw the error: "No room"
	ld	de,($044d20)                ; 041472 || 	ld	de,($044d20)                ; 04144E || 041472 ED 5B 20 4D 3798  			LD      DE,(HIMEM)
	ld	($044d20),hl                ; 041477 || 	ld	($044d20),hl                ; 041453 || 041477 22 20 4D 04 3799  			LD      (HIMEM),HL
	ex	de,hl                       ; 04147B || 	ex	de,hl                       ; 041457 || 04147B EB          3800  			EX      DE,HL
	sbc	hl,sp                      ; 04147C || 	sbc	hl,sp                      ; 041458 || 04147C ED 72       3801  			SBC     HL,SP			; Adjust the stack
	jp	nz,$040ba9                  ; 04147E || 	jp	nz,$040b96                  ; 04145A || 04147E C2 A9 0B 04 3802  			JP      NZ,XEQ
	ex	de,hl                       ; 041482 || 	ex	de,hl                       ; 04145E || 041482 EB          3803  			EX      DE,HL
	ld	sp,hl                       ; 041483 || 	ld	sp,hl                       ; 04145F || 041483 F9          3804  			LD      SP,HL           	; Load the SP
	jp	$040ba9                     ; 041484 || 	jp	$040b96                     ; 041460 || 041484 C3 A9 0B 04 3805  			JP      XEQ
	call	$04031a                   ; 041488 || 	call	$04030a                   ; 041464 || 041488 CD 1A 03 04 3809  WIDTHV:			CALL    EXPRI
	exx                            ; 04148C || 	exx                            ; 041468 || 04148C D9          3810  			EXX
	ld	a,l                         ; 04148D || 	ld	a,l                         ; 041469 || 04148D 7D          3811  			LD      A,L
	ld	($044d3e),a                 ; 04148E || 	ld	($044d3e),a                 ; 04146A || 04148E 32 3E 4D 04 3812  			LD      (WIDTH),A
	jp	$040ba9                     ; 041492 || 	jp	$040b96                     ; 04146E || 041492 C3 A9 0B 04 3813  			JP      XEQ
	inc	iy                         ; 041496 || 	inc	iy                         ; 041472 || 041496 FD 23       3819  TRACE_EX:			INC     IY
	ld	hl,$000000                  ; 041498 || 	ld	hl,$000000                  ; 041474 || 041498 21 00 00 00 3820  			LD      HL,0
	cp	$ee                         ; 04149C || 	cp	$ee                         ; 041478 || 04149C FE EE       3821  			CP      TON
	jr	z,$+$0d                     ; 04149E || 	jr	z,$+$0d                     ; 04147A || 04149E 28 0B       3822  			JR      Z,TRACE0
	cp	$87                         ; 0414A0 || 	cp	$87                         ; 04147C || 0414A0 FE 87       3823  			CP      OFF_
	jr	z,$+$0a                     ; 0414A2 || 	jr	z,$+$0a                     ; 04147E || 0414A2 28 08       3824  			JR      Z,TRACE1
	dec	iy                         ; 0414A4 || 	dec	iy                         ; 041480 || 0414A4 FD 2B       3825  			DEC     IY
	call	$04031a                   ; 0414A6 || 	call	$04030a                   ; 041482 || 0414A6 CD 1A 03 04 3826  			CALL    EXPRI
	exx                            ; 0414AA || 	exx                            ; 041486 || 0414AA D9          3827  			EXX
	dec	hl                         ; 0414AB || 	dec	hl                         ; 041487 || 0414AB 2B          3828  TRACE0:			DEC     HL
	ld	($044d26),hl                ; 0414AC || 	ld	($044d26),hl                ; 041488 || 0414AC 22 26 4D 04 3829  TRACE1:			LD      (TRACEN),HL
	jp	$040ba9                     ; 0414B0 || 	jp	$040b96                     ; 04148C || 0414B0 C3 A9 0B 04 3830  			JP      XEQ
	ld	ix,$044b00                  ; 0414B4                                         || 0414B4 DD 21 00 4B 3834  VDU:			LD	IX,BUFFER		; Storage for the VDU stream
	push	ix                        ; 0414B9                                         || 0414B9 DD E5       3835  VDU1:			PUSH	IX
	call	$04031a                   ; 0414BB                                         || 0414BB CD 1A 03 04 3836  			CALL    EXPRI			; Fetch the VDU character
	pop	ix                         ; 0414BF                                         || 0414BF DD E1       3837  			POP	IX
	exx                            ; 0414C1                                         || 0414C1 D9          3838  			EXX
	ld	(ix),l                      ; 0414C2                                         || 0414C2 DD 75 00    3839  			LD	(IX+0),L		; Write out the character to the buffer
	inc	ix                         ; 0414C5                                         || 0414C5 DD 23       3840  			INC	IX
	ld	a,(iy)                      ; 0414C7                                         || 0414C7 FD 7E 00    3841  			LD      A,(IY)			;  A: The separator character
	cp	$2c                         ; 0414CA                                         || 0414CA FE 2C       3842  			CP      ','			; Is it a comma?
	jr	z,$+$0b                     ; 0414CC                                         || 0414CC 28 09       3843  			JR      Z,VDU2			; Yes, so it's a byte value - skip to next expression
	cp	$3b                         ; 0414CE                                         || 0414CE FE 3B       3844  			CP      ';'			; Is it a semicolon?
	jr	nz,$+$09                    ; 0414D0                                         || 0414D0 20 07       3845  			JR      NZ,VDU3			; No, so skip to the next expression
	ld	(ix),h                      ; 0414D2                                         || 0414D2 DD 74 00    3846  			LD	(IX+0),H		; Write out the high byte to the buffer
	inc	ix                         ; 0414D5                                         || 0414D5 DD 23       3847  			INC	IX
	inc	iy                         ; 0414D7                                         || 0414D7 FD 23       3848  VDU2:			INC     IY			; Skip to the next character
	call	$0417b7                   ; 0414D9                                         || 0414D9 CD B7 17 04 3849  VDU3:			CALL    TERMQ			; Skip past white space
	jr	nz,$-$24                    ; 0414DD                                         || 0414DD 20 DA       3850  			JR      NZ,VDU1			; Loop unti reached end of the VDU command
	ld	a,ixl                       ; 0414DF                                         || 0414DF DD 7D       3851  			LD	A,IXL			;  A: Number of bytes to write out
	or	a                           ; 0414E1                                         || 0414E1 B7          3852  			OR	A
	jr	z,$+$0d                     ; 0414E2                                         || 0414E2 28 0B       3853  			JR 	Z,VDU4			; No bytes to write, so skip the next bit
	ld	hl,$044b00                  ; 0414E4                                         || 0414E4 21 00 4B 04 3854  			LD	HL,BUFFER		; HL: Start of stream
	ld	bc,$000000                  ; 0414E8                                         || 0414E8 01 00 00 00 3855  			LD	BC,0
	ld	c,a                         ; 0414EC                                         || 0414EC 4F          3856  			LD	C,A			; BC: Number of bytes to write out
	rst.lil	$18                    ; 0414ED                                         || 0414ED 5B DF       3857  			RST.LIL	18h			; Output the buffer to MOS
	jp	$040ba9                     ; 0414EF || 	jp	$040b96                     ; 0414B2 || 0414EF C3 A9 0B 04 3858  VDU4:			JP      XEQ
	call	$0418c3                   ; 0414F3 || 	call	$041886                   ; 0414B6 || 0414F3 CD C3 18 04 3862  CLOSE:			CALL    CHANEL			; Fetch the channel number
	call	$04439d                   ; 0414F7 || 	call	$04432b                   ; 0414BA || 0414F7 CD 9D 43 04 3863  			CALL    OSSHUT			; Close the channel
	jp	$040ba9                     ; 0414FB || 	jp	$040b96                     ; 0414BE || 0414FB C3 A9 0B 04 3864  			JP      XEQ
	call	$0418c3                   ; 0414FF || 	call	$041886                   ; 0414C2 || 0414FF CD C3 18 04 3868  BPUT:			CALL    CHANEL          	; Fetch the channel number
	push	de                        ; 041503 || 	push	de                        ; 0414C6 || 041503 D5          3869  			PUSH    DE			; DE: Channel number
	call	$040a35                   ; 041504 || 	call	$040a22                   ; 0414C7 || 041504 CD 35 0A 04 3870  			CALL    COMMA			; Skip to the next expression
	call	$04031a                   ; 041508 || 	call	$04030a                   ; 0414CB || 041508 CD 1A 03 04 3871  			CALL    EXPRI           	; Feth the data
	exx                            ; 04150C || 	exx                            ; 0414CF || 04150C D9          3872  			EXX
	ld	a,l                         ; 04150D || 	ld	a,l                         ; 0414D0 || 04150D 7D          3873  			LD      A,L			; A: The byte to write
	pop	de                         ; 04150E || 	pop	de                         ; 0414D1 || 04150E D1          3874  			POP     DE
	call	$0443ad                   ; 04150F || 	call	$04433b                   ; 0414D2 || 04150F CD AD 43 04 3875  			CALL    OSBPUT			; Write the byte out
	jp	$040ba9                     ; 041513 || 	jp	$040b96                     ; 0414D6 || 041513 C3 A9 0B 04 3876  			JP      XEQ
	call	$04031a                   ; 041517 || 	call	$04030a                   ; 0414DA || 041517 CD 1A 03 04 3889  CALL_:			CALL    EXPRI           	; Fetch the address
	ld	a,l                         ; 04151B || 	ld	a,l                         ; 0414DE || 04151B 7D          3890  			LD	A,L			;  A: MSB of address
	exx                            ; 04151C || 	exx                            ; 0414DF || 04151C D9          3891  			EXX
	ld	($044d4a),hl                ; 04151D || 	ld	($044d4a),hl                ; 0414E0 || 04151D 22 4A 4D 04 3892  			LD	(R0+0),HL		; HL: LSW of address
	ld	($044d4c),a                 ; 041521 || 	ld	($044d4c),a                 ; 0414E4 || 041521 32 4C 4D 04 3893  			LD	(R0+2),A
	ld	b,$00                       ; 041525 || 	ld	b,$00                       ; 0414E8 || 041525 06 00       3894  			LD      B,0             	;  B: The parameter counter
	ld	de,$044b00                  ; 041527 || 	ld	de,$044b00                  ; 0414EA || 041527 11 00 4B 04 3895  			LD      DE,BUFFER       	; DE: Vector
	call	$040a83                   ; 04152B || 	call	$040a70                   ; 0414EE || 04152B CD 83 0A 04 3897  CALL1:			CALL    NXT			; Skip whitespace
	cp	$2c                         ; 04152F || 	cp	$2c                         ; 0414F2 || 04152F FE 2C       3898  			CP      ','			; Check for comma
	jr	nz,$+$1d                    ; 041531 || 	jr	nz,$+$1d                    ; 0414F4 || 041531 20 1B       3899  			JR      NZ,CALL2		; If no more parameters, then jump here
	inc	iy                         ; 041533 || 	inc	iy                         ; 0414F6 || 041533 FD 23       3900  			INC     IY			; Skip to the next character
	inc	b                          ; 041535 || 	inc	b                          ; 0414F8 || 041535 04          3901  			INC     B			; Increment the parameter count
	call	$040a83                   ; 041536 || 	call	$040a70                   ; 0414F9 || 041536 CD 83 0A 04 3902  			CALL    NXT			; Skip whitespace
	push	bc                        ; 04153A || 	push	bc                        ; 0414FD || 04153A C5          3903  			PUSH    BC
	push	de                        ; 04153B || 	push	de                        ; 0414FE || 04153B D5          3904  			PUSH    DE
	call	$040ca1                   ; 04153C || 	call	$040c8e                   ; 0414FF || 04153C CD A1 0C 04 3905  			CALL    VAR_
	pop	de                         ; 041540 || 	pop	de                         ; 041503 || 041540 D1          3906  			POP     DE
	pop	bc                         ; 041541 || 	pop	bc                         ; 041504 || 041541 C1          3907  			POP     BC
	inc	de                         ; 041542 || 	inc	de                         ; 041505 || 041542 13          3908  			INC     DE
	ld	(de),a                      ; 041543 || 	ld	(de),a                      ; 041506 || 041543 12          3909  			LD      (DE),A			; Save the parameter type
	inc	de                         ; 041544 || 	inc	de                         ; 041507 || 041544 13          3910  			INC     DE
	ex	de,hl                       ; 041545 || 	ex	de,hl                       ; 041508 || 041545 EB          3911  			EX      DE,HL
	ld	(hl),de                     ; 041546 || 	ld	(hl),de                     ; 041509 || 041546 ED 1F       3912  			LD	(HL),DE			; Save the parameter address (3 bytes)
	inc	hl                         ; 041548 || 	inc	hl                         ; 04150B || 041548 23          3913  			INC	HL
	inc	hl                         ; 041549 || 	inc	hl                         ; 04150C || 041549 23          3914  			INC	HL
	inc	hl                         ; 04154A || 	inc	hl                         ; 04150D || 04154A 23          3915  			INC	HL
	ex	de,hl                       ; 04154B || 	ex	de,hl                       ; 04150E || 04154B EB          3916  			EX      DE,HL
	jr	$-$21                       ; 04154C || 	jr	$-$21                       ; 04150F || 04154C 18 DD       3917  			JR      CALL1
	ld	a,b                         ; 04154E || 	ld	a,b                         ; 041511 || 04154E 78          3919  CALL2:			LD      A,B
	ld	($044b00),a                 ; 04154F || 	ld	($044b00),a                 ; 041512 || 04154F 32 00 4B 04 3920  			LD      (BUFFER),A      	; Save the parameter count
	ld	hl,($044d4a)                ; 041553 || 	ld	hl,($044d4a)                ; 041516 || 041553 2A 4A 4D 04 3921  			LD	HL,(R0)			; HL: Address of the code
	call	$041571                   ; 041557 || 	call	$041534                   ; 04151A || 041557 CD 71 15 04 3922  			CALL    USR1			; And call it
	jp	$040ba9                     ; 04155B || 	jp	$040b96                     ; 04151E || 04155B C3 A9 0B 04 3923  			JP      XEQ
	call	$040335                   ; 04155F || 	call	$040325                   ; 041522 || 04155F CD 35 03 04 3927  USR:			CALL    ITEMI			; Evaluate the expression
	ld	a,l                         ; 041563 || 	ld	a,l                         ; 041526 || 041563 7D          3928  			LD	A,L			;  A: MSB of address
	exx                            ; 041564 || 	exx                            ; 041527 || 041564 D9          3929  			EXX
	ld	($044d4a),hl                ; 041565 || 	ld	($044d4a),hl                ; 041528 || 041565 22 4A 4D 04 3930  			LD	(R0+0),HL		; HL: LSW of address
	ld	($044d4c),a                 ; 041569 || 	ld	($044d4c),a                 ; 04152C || 041569 32 4C 4D 04 3931  			LD	(R0+2),A
	ld	hl,($044d4a)                ; 04156D || 	ld	hl,($044d4a)                ; 041530 || 04156D 2A 4A 4D 04 3932  			LD	HL,(R0)			; Get the 24-bit address in HL
	push	hl                        ; 041571 || 	push	hl                        ; 041534 || 041571 E5          3934  USR1:			PUSH    HL              	; Address on stack
	ex	(sp),iy                     ; 041572 || 	ex	(sp),iy                     ; 041535 || 041572 FD E3       3935  			EX      (SP),IY
	inc	h                          ; 041574 || 	inc	h                          ; 041537 || 041574 24          3936  			INC     H               	; Check for PAGE &00FFxx
	or	h                           ; 041575 || 	or	h                           ; 041538 || 041575 B4          3937  			OR	H
	ld	hl,$0415e0                  ; 041576 || 	ld	hl,$0415a3                  ; 041539 || 041576 21 E0 15 04 3938  			LD      HL,USR2         	; Return address
	push	hl                        ; 04157A || 	push	hl                        ; 04153D || 04157A E5          3939  			PUSH    HL
	ld	ix,$044c00                  ; 04157B || 	ld	ix,$044c00                  ; 04153E || 04157B DD 21 00 4C 3940  			LD      IX,STAVAR
	call	z,$044363                 ; 041580 || 	call	z,$0442f1                 ; 041543 || 041580 CC 63 43 04 3941  			CALL    Z,OSCALL        	; Intercept &00FFxx
	ld	c,(ix+$18)                  ; 041584 || 	ld	c,(ix+$18)                  ; 041547 || 041584 DD 4E 18    3943  			LD      C, (IX+24)		; F%
	push	bc                        ; 041587 || 	push	bc                        ; 04154A || 041587 C5          3944  			PUSH    BC
	ld	a,(ix+$08)                  ; 041588 || 	ld	a,(ix+$08)                  ; 04154B || 041588 DD 7E 08    3946  			LD	A, (IX+8)		; B% -> MSW
	ld	($044d4b),a                 ; 04158B || 	ld	($044d4b),a                 ; 04154E || 04158B 32 4B 4D 04 3947  			LD	(R0+1), A
	ld	a,(ix+$09)                  ; 04158F || 	ld	a,(ix+$09)                  ; 041552 || 04158F DD 7E 09    3948  			LD	A, (IX+9)
	ld	($044d4c),a                 ; 041592 || 	ld	($044d4c),a                 ; 041555 || 041592 32 4C 4D 04 3949  			LD	(R0+2), A
	ld	a,(ix+$0c)                  ; 041596 || 	ld	a,(ix+$0c)                  ; 041559 || 041596 DD 7E 0C    3950  			LD	A, (IX+12)		; C% -> LSB
	ld	($044d4a),a                 ; 041599 || 	ld	($044d4a),a                 ; 04155C || 041599 32 4A 4D 04 3951  			LD	(R0+0), A
	ld	bc,($044d4a)                ; 04159D || 	ld	bc,($044d4a)                ; 041560 || 04159D ED 4B 4A 4D 3952  			LD	BC, (R0)
	ld	a,(ix+$10)                  ; 0415A2 || 	ld	a,(ix+$10)                  ; 041565 || 0415A2 DD 7E 10    3954  			LD	A, (IX+16)		; D% -> MSW
	ld	($044d4b),a                 ; 0415A5 || 	ld	($044d4b),a                 ; 041568 || 0415A5 32 4B 4D 04 3955  			LD	(R0+1), A
	ld	a,(ix+$11)                  ; 0415A9 || 	ld	a,(ix+$11)                  ; 04156C || 0415A9 DD 7E 11    3956  			LD	A, (IX+17)
	ld	($044d4c),a                 ; 0415AC || 	ld	($044d4c),a                 ; 04156F || 0415AC 32 4C 4D 04 3957  			LD	(R0+2), A
	ld	a,(ix+$14)                  ; 0415B0 || 	ld	a,(ix+$14)                  ; 041573 || 0415B0 DD 7E 14    3958  			LD	A, (IX+20)		; E% -> LSB
	ld	($044d4a),a                 ; 0415B3 || 	ld	($044d4a),a                 ; 041576 || 0415B3 32 4A 4D 04 3959  			LD	(R0+0), A
	ld	de,($044d4a)                ; 0415B7 || 	ld	de,($044d4a)                ; 04157A || 0415B7 ED 5B 4A 4D 3960  			LD	DE, (R0)
	ld	a,(ix+$20)                  ; 0415BC || 	ld	a,(ix+$20)                  ; 04157F || 0415BC DD 7E 20    3962  			LD	A, (IX+32)		; H% -> MSW
	ld	($044d4b),a                 ; 0415BF || 	ld	($044d4b),a                 ; 041582 || 0415BF 32 4B 4D 04 3963  			LD	(R0+1), A
	ld	a,(ix+$21)                  ; 0415C3 || 	ld	a,(ix+$21)                  ; 041586 || 0415C3 DD 7E 21    3964  			LD	A, (IX+33)
	ld	($044d4c),a                 ; 0415C6 || 	ld	($044d4c),a                 ; 041589 || 0415C6 32 4C 4D 04 3965  			LD	(R0+2), A
	ld	a,(ix+$30)                  ; 0415CA || 	ld	a,(ix+$30)                  ; 04158D || 0415CA DD 7E 30    3966  			LD	A, (IX+48)		; L% -> LSB
	ld	($044d4a),a                 ; 0415CD || 	ld	($044d4a),a                 ; 041590 || 0415CD 32 4A 4D 04 3967  			LD	(R0+0), A
	ld	hl,($044d4a)                ; 0415D1 || 	ld	hl,($044d4a)                ; 041594 || 0415D1 2A 4A 4D 04 3968  			LD	HL, (R0)
	pop	af                         ; 0415D5 || 	pop	af                         ; 041598 || 0415D5 F1          3970  			POP     AF			; F%
	ld	a,(ix+$04)                  ; 0415D6 || 	ld	a,(ix+$04)                  ; 041599 || 0415D6 DD 7E 04    3971  			LD      A, (IX+4)        	; A%
	ld	ix,$044b00                  ; 0415D9 || 	ld	ix,$044b00                  ; 04159C || 0415D9 DD 21 00 4B 3973  			LD      IX,BUFFER
	jp	(iy)                        ; 0415DE || 	jp	(iy)                        ; 0415A1 || 0415DE FD E9       3974  			JP      (IY)            	; Off to user routine
	pop	iy                         ; 0415E0 || 	pop	iy                         ; 0415A3 || 0415E0 FD E1       3976  USR2:			POP     IY
	xor	a                          ; 0415E2 || 	xor	a                          ; 0415A5 || 0415E2 AF          3977  			XOR     A
	ld	c,a                         ; 0415E3 || 	ld	c,a                         ; 0415A6 || 0415E3 4F          3978  			LD      C,A
	ret                            ; 0415E4 || 	ret                            ; 0415A7 || 0415E4 C9          3979  			RET
	call	$04031a                   ; 0415E5 || 	call	$04030a                   ; 0415A8 || 0415E5 CD 1A 03 04 3983  PUT:			CALL    EXPRI           ;PORT ADDRESS
	exx                            ; 0415E9 || 	exx                            ; 0415AC || 0415E9 D9          3984  			EXX
	push	hl                        ; 0415EA || 	push	hl                        ; 0415AD || 0415EA E5          3985  			PUSH    HL
	call	$040a35                   ; 0415EB || 	call	$040a22                   ; 0415AE || 0415EB CD 35 0A 04 3986  			CALL    COMMA
	call	$04031a                   ; 0415EF || 	call	$04030a                   ; 0415B2 || 0415EF CD 1A 03 04 3987  			CALL    EXPRI           ;DATA
	exx                            ; 0415F3 || 	exx                            ; 0415B6 || 0415F3 D9          3988  			EXX
	pop	bc                         ; 0415F4 || 	pop	bc                         ; 0415B7 || 0415F4 C1          3989  			POP     BC
	out	(bc),l                     ; 0415F5 || 	out	(bc),l                     ; 0415B8 || 0415F5 ED 69       3990  			OUT     (C),L           ;OUTPUT TO PORT BC
	jp	$040ba9                     ; 0415F7 || 	jp	$040b96                     ; 0415BA || 0415F7 C3 A9 0B 04 3991  			JP      XEQ
	call	$043a9b                   ; 0415FB || 	call	$043a3a                   ; 0415BE || 0415FB CD 9B 3A 04 4000  ASSIGN:			CALL    GETVAR          	; Try to get the variable
	ret	c                          ; 0415FF || 	ret	c                          ; 0415C2 || 0415FF D8          4001  			RET     C               	; Return with C if it is an illegal variable
	call	nz,$043a8a                ; 041600 || 	call	nz,$043a29                ; 0415C3 || 041600 C4 8A 3A 04 4002  			CALL    NZ,PUTVAR		; If it does not exist, then create the variable
	or	a                           ; 041604 || 	or	a                           ; 0415C7 || 041604 B7          4003  			OR      A
	ret	m                          ; 041605 || 	ret	m                          ; 0415C8 || 041605 F8          4004  			RET     M               	; Return if type is string (81h)
	push	af                        ; 041606 || 	push	af                        ; 0415C9 || 041606 F5          4005  			PUSH    AF              	; It's a numeric type from this point on
	call	$0417cd                   ; 041607 || 	call	$041790                   ; 0415CA || 041607 CD CD 17 04 4006  			CALL    EQUALS			; Check if the variable is followed by an '=' symbol; this will throw a 'Mistake' error if not
	push	hl                        ; 04160B || 	push	hl                        ; 0415CE || 04160B E5          4007  			PUSH    HL
	call	$040312                   ; 04160C || 	call	$040302                   ; 0415CF || 04160C CD 12 03 04 4008  			CALL    EXPRN
	pop	ix                         ; 041610 || 	pop	ix                         ; 0415D3 || 041610 DD E1       4009  			POP     IX
	pop	af                         ; 041612 || 	pop	af                         ; 0415D5 || 041612 F1          4010  			POP     AF
	bit	0,a                        ; 041613 || 	bit	0,a                        ; 0415D6 || 041613 CB 47       4011  STORE:			BIT     0,A
	jr	z,$+$15                     ; 041615 || 	jr	z,$+$15                     ; 0415D8 || 041615 28 13       4012  			JR      Z,STOREI
	cp	a                           ; 041617 || 	cp	a                           ; 0415DA || 041617 BF          4013  			CP      A               	; Set the variable to 0
	ld	(ix+$04),c                  ; 041618 || 	ld	(ix+$04),c                  ; 0415DB || 041618 DD 71 04    4014  STORE5:			LD      (IX+4),C
	exx                            ; 04161B || 	exx                            ; 0415DE || 04161B D9          4015  STORE4:			EXX
	ld	(ix),l                      ; 04161C || 	ld	(ix),l                      ; 0415DF || 04161C DD 75 00    4016  			LD      (IX+0),L
	ld	(ix+$01),h                  ; 04161F || 	ld	(ix+$01),h                  ; 0415E2 || 04161F DD 74 01    4017  			LD      (IX+1),H
	exx                            ; 041622 || 	exx                            ; 0415E5 || 041622 D9          4018  			EXX
	ld	(ix+$02),l                  ; 041623 || 	ld	(ix+$02),l                  ; 0415E6 || 041623 DD 75 02    4019  			LD      (IX+2),L
	ld	(ix+$03),h                  ; 041626 || 	ld	(ix+$03),h                  ; 0415E9 || 041626 DD 74 03    4020  			LD      (IX+3),H
	ret                            ; 041629 || 	ret                            ; 0415EC || 041629 C9          4021  			RET
	push	af                        ; 04162A || 	push	af                        ; 0415ED || 04162A F5          4022  STOREI:			PUSH    AF
	inc	c                          ; 04162B || 	inc	c                          ; 0415EE || 04162B 0C          4023  			INC     C               ;SPEED - & PRESERVE F'
	dec	c                          ; 04162C || 	dec	c                          ; 0415EF || 04162C 0D          4024  			DEC     C               ; WHEN CALLED BY FNEND0
	call	nz,$040672                ; 04162D || 	call	nz,$040662                ; 0415F0 || 04162D C4 72 06 04 4025  			CALL    NZ,SFIX         ;CONVERT TO INTEGER
	pop	af                         ; 041631 || 	pop	af                         ; 0415F4 || 041631 F1          4026  			POP     AF
	cp	$04                         ; 041632 || 	cp	$04                         ; 0415F5 || 041632 FE 04       4027  			CP      4
	jr	z,$-$19                     ; 041634 || 	jr	z,$-$19                     ; 0415F7 || 041634 28 E5       4028  			JR      Z,STORE4
	cp	a                           ; 041636 || 	cp	a                           ; 0415F9 || 041636 BF          4029  			CP      A               ;SET ZERO
	exx                            ; 041637 || 	exx                            ; 0415FA || 041637 D9          4030  STORE1:			EXX
	ld	(ix),l                      ; 041638 || 	ld	(ix),l                      ; 0415FB || 041638 DD 75 00    4031  			LD      (IX+0),L
	exx                            ; 04163B || 	exx                            ; 0415FE || 04163B D9          4032  			EXX
	ret                            ; 04163C || 	ret                            ; 0415FF || 04163C C9          4033  			RET
	ld	hl,$044a00                  ; 04163D || 	ld	hl,$044a00                  ; 041600 || 04163D 21 00 4A 04 4040  STACCS:			LD      HL,ACCS			; HL: Pointer to the string accumulator
	rra                            ; 041641 || 	rra                            ; 041604 || 041641 1F          4056  STORES:			RRA				; Rotate right to shift bit 0 into carry
	jr	nc,$+$5f                    ; 041642 || 	jr	nc,$+$5f                    ; 041605 || 041642 30 5D       4057  			JR      NC,STORS3		; It's a fixed/static string, so skip the next bit
	push	hl                        ; 041644 || 	push	hl                        ; 041607 || 041644 E5          4058  			PUSH    HL			; Stack ACCS
	exx                            ; 041645 || 	exx                            ; 041608 || 041645 D9          4062  			EXX				; This block was a call to LOAD4
	ld	l,(ix)                      ; 041646 || 	ld	l,(ix)                      ; 041609 || 041646 DD 6E 00    4063  			LD      L,(IX+0)		; The length of the string currently stored in the allocated space
	ld	h,(ix+$01)                  ; 041649 || 	ld	h,(ix+$01)                  ; 04160C || 041649 DD 66 01    4064  			LD      H,(IX+1)		; The maximum original string length
	exx                            ; 04164C || 	exx                            ; 04160F || 04164C D9          4065  			EXX
	ld	hl,(ix+$02)                 ; 04164D || 	ld	hl,(ix+$02)                 ; 041610 || 04164D DD 27 02    4066  			LD	HL,(IX+2)		; Address of the string (24-bit)
	ld	a,e                         ; 041650 || 	ld	a,e                         ; 041613 || 041650 7B          4068  			LD      A,E             	; E : Length of string in ACCS (as passed to the function)
	exx                            ; 041651 || 	exx                            ; 041614 || 041651 D9          4069  			EXX
	ld	l,a                         ; 041652 || 	ld	l,a                         ; 041615 || 041652 6F          4070  			LD      L,A			; L': Length of string currently stored on the stack
	ld	a,h                         ; 041653 || 	ld	a,h                         ; 041616 || 041653 7C          4071  			LD      A,H             	; H': The maximum (original) string length
	exx                            ; 041654 || 	exx                            ; 041617 || 041654 D9          4072  			EXX
	cp	e                           ; 041655 || 	cp	e                           ; 041618 || 041655 BB          4073  			CP      E			; Check whether there is enough room for the string in ACCS in the allocated space
	jr	nc,$+$19                    ; 041656 || 	jr	nc,$+$19                    ; 041619 || 041656 30 17       4074  			JR      NC,STORS1       	; Yes there is, so skip the next bit
	exx                            ; 041658 || 	exx                            ; 04161B || 041658 D9          4080  			EXX
	ld	h,l                         ; 041659 || 	ld	h,l                         ; 04161C || 041659 65          4081  			LD      H,L			; H: Set the maximum string length to the string length
	exx                            ; 04165A || 	exx                            ; 04161D || 04165A D9          4082  			EXX
	push	hl                        ; 04165B || 	push	hl                        ; 04161E || 04165B E5          4083  			PUSH    HL
	ld	bc,$000000                  ; 04165C || 	ld	bc,$000000                  ; 04161F || 04165C 01 00 00 00 4084  			LD	BC, 0
	ld	c,a                         ; 041660 || 	ld	c,a                         ; 041623 || 041660 4F          4085  			LD      C,A			; BC: The maximum (original) string length
	add	hl,bc                      ; 041661 || 	add	hl,bc                      ; 041624 || 041661 09          4086  			ADD     HL,BC			; Work out whether this is the last string in memory
	ld	bc,($044d1d)                ; 041662 || 	ld	bc,($044d1d)                ; 041625 || 041662 ED 4B 1D 4D 4087  			LD      BC,(FREE)
	sbc	hl,bc                      ; 041667 || 	sbc	hl,bc                      ; 04162A || 041667 ED 42       4088  			SBC     HL,BC			; Is string last?
	pop	hl                         ; 041669 || 	pop	hl                         ; 04162C || 041669 E1          4089  			POP     HL
	scf                            ; 04166A || 	scf                            ; 04162D || 04166A 37          4090  			SCF
	jr	z,$+$04                     ; 04166B || 	jr	z,$+$04                     ; 04162E || 04166B 28 02       4091  			JR      Z,STORS1
	push	bc                        ; 04166D || 	push	bc                        ; 041630 || 04166D C5          4093  			push bc
	pop	hl                         ; 04166E || 	pop	hl                         ; 041631 || 04166E E1          4094  			pop hl
	exx                            ; 04166F || 	exx                            ; 041632 || 04166F D9          4101  STORS1:			EXX				; This block was a call to STORE4
	ld	(ix),l                      ; 041670 || 	ld	(ix),l                      ; 041633 || 041670 DD 75 00    4102  			LD      (IX+0),L		; The actual string length (must be less then H')
	ld	(ix+$01),h                  ; 041673 || 	ld	(ix+$01),h                  ; 041636 || 041673 DD 74 01    4103  			LD      (IX+1),H		; The maximum (original) string length
	exx                            ; 041676 || 	exx                            ; 041639 || 041676 D9          4104  			EXX
	ld	(ix+$02),hl                 ; 041677 || 	ld	(ix+$02),hl                 ; 04163A || 041677 DD 2F 02    4105  			LD	(IX+2),HL		; The pointer to the original string
	ld	bc,$000000                  ; 04167A || 	ld	bc,$000000                  ; 04163D || 04167A 01 00 00 00 4107  			LD	BC, 0
	ld	c,e                         ; 04167E || 	ld	c,e                         ; 041641 || 04167E 4B          4108  			LD      C,E			; BC: The new string length
	ex	de,hl                       ; 04167F || 	ex	de,hl                       ; 041642 || 04167F EB          4109  			EX      DE,HL
	pop	hl                         ; 041680 || 	pop	hl                         ; 041643 || 041680 E1          4110  			POP     HL
	dec	c                          ; 041681 || 	dec	c                          ; 041644 || 041681 0D          4111  			DEC     C			; Strings can only be 255 bytes long, so this is a quick way to
	inc	c                          ; 041682 || 	inc	c                          ; 041645 || 041682 0C          4112  			INC     C			; check whether BC is 0 without affecting the carry flag
	ret	z                          ; 041683 || 	ret	z                          ; 041646 || 041683 C8          4113  			RET     Z               	; It is, so it's a NULL string, don't need to do anything else here
	ldir                           ; 041684 || 	ldir                           ; 041647 || 041684 ED B0       4114  			LDIR				; Replace the string in memory
	ret	nc                         ; 041686 || 	ret	nc                         ; 041649 || 041686 D0          4115  			RET     NC
	ld	($044d1d),de                ; 041687 || 	ld	($044d1d),de                ; 04164A || 041687 ED 53 1D 4D 4116  			LD      (FREE),DE		; Set the new value of FREE and fall through to CHECK
	push	hl                        ; 04168C || 	push	hl                        ; 04164F || 04168C E5          4120  CHECK:			PUSH    HL
	push	bc                        ; 04168D || 	push	bc                        ; 041650 || 04168D C5          4121  			PUSH	BC
	ld	hl,($044d1d)                ; 04168E || 	ld	hl,($044d1d)                ; 041651 || 04168E 2A 1D 4D 04 4122  			LD      HL,(FREE)		; HL: Address of first free space byte
	ld	bc,$000100                  ; 041692 || 	ld	bc,$000100                  ; 041655 || 041692 01 00 01 00 4123  			LD	BC,100h			; BC: One page of memory
	add	hl,bc                      ; 041696 || 	add	hl,bc                      ; 041659 || 041696 09          4124  			ADD	HL,BC			; Add a page to FREE
	sbc	hl,sp                      ; 041697 || 	sbc	hl,sp                      ; 04165A || 041697 ED 72       4125  			SBC     HL,SP			; And subtract the current SP
	pop	bc                         ; 041699 || 	pop	bc                         ; 04165C || 041699 C1          4126  			POP	BC
	pop	hl                         ; 04169A || 	pop	hl                         ; 04165D || 04169A E1          4127  			POP     HL
	ret	c                          ; 04169B || 	ret	c                          ; 04165E || 04169B D8          4128  			RET     C			; The SP is not in the same page, so just return
	xor	a                          ; 04169C || 	xor	a                          ; 04165F || 04169C AF          4129  			XOR     A			; Otherwise
	jp	$0437c1                     ; 04169D || 	jp	$043760                     ; 041660 || 04169D C3 C1 37 04 4130  			JP      ERROR_			; Throw error "No room"
	ld	bc,$000000                  ; 0416A1 || 	ld	bc,$000000                  ; 041664 || 0416A1 01 00 00 00 4132  STORS3:			LD	BC,0
	ld	c,e                         ; 0416A5 || 	ld	c,e                         ; 041668 || 0416A5 4B          4133  			LD      C,E			; BC: String length
	push	ix                        ; 0416A6 || 	push	ix                        ; 041669 || 0416A6 DD E5       4134  			PUSH    IX
	pop	de                         ; 0416A8 || 	pop	de                         ; 04166B || 0416A8 D1          4135  			POP     DE			; DE: Destination
	xor	a                          ; 0416A9 || 	xor	a                          ; 04166C || 0416A9 AF          4136  			XOR     A			; Check if string length is 0
	cp	c                           ; 0416AA || 	cp	c                           ; 04166D || 0416AA B9          4137  			CP      C
	jr	z,$+$04                     ; 0416AB || 	jr	z,$+$04                     ; 04166E || 0416AB 28 02       4138  			JR      Z,STORS5		; Yes, so don't copy
	ldir                           ; 0416AD || 	ldir                           ; 041670 || 0416AD ED B0       4139  			LDIR
	ld	a,$0d                       ; 0416AF || 	ld	a,$0d                       ; 041672 || 0416AF 3E 0D       4140  STORS5:			LD      A,CR			; Finally add the terminator
	ld	(de),a                      ; 0416B1 || 	ld	(de),a                      ; 041674 || 0416B1 12          4141  			LD      (DE),A
	ret                            ; 0416B2 || 	ret                            ; 041675 || 0416B2 C9          4142  			RET
	ld	a,$ff                       ; 0416B3 || 	ld	a,$ff                       ; 041676 || 0416B3 3E FF       4153  ARGUE:			LD      A,-1
	push	af                        ; 0416B5 || 	push	af                        ; 041678 || 0416B5 F5          4154  			PUSH    AF              	; Put marker on the stack
	inc	iy                         ; 0416B6 || 	inc	iy                         ; 041679 || 0416B6 FD 23       4155  ARGUE1:			INC     IY              	; Bump past '(' or ',''
	inc	de                         ; 0416B8 || 	inc	de                         ; 04167B || 0416B8 13          4156  			INC     DE
	push	de                        ; 0416B9 || 	push	de                        ; 04167C || 0416B9 D5          4157  			PUSH    DE
	call	$040a83                   ; 0416BA || 	call	$040a70                   ; 04167D || 0416BA CD 83 0A 04 4158  			CALL    NXT			; Skip any whitespace
	call	$043a9b                   ; 0416BE || 	call	$043a3a                   ; 041681 || 0416BE CD 9B 3A 04 4159  			CALL    GETVAR			; Get the location of the variable in HL/IX
	jr	c,$+$41                     ; 0416C2 || 	jr	c,$+$41                     ; 041685 || 0416C2 38 3F       4160  			JR      C,ARGERR		; If the parameter contains an illegal character then throw an error
	call	nz,$043a8a                ; 0416C4 || 	call	nz,$043a29                ; 041687 || 0416C4 C4 8A 3A 04 4161  			CALL    NZ,PUTVAR
	pop	de                         ; 0416C8 || 	pop	de                         ; 04168B || 0416C8 D1          4162  			POP     DE
	push	hl                        ; 0416C9 || 	push	hl                        ; 04168C || 0416C9 E5          4163  			PUSH    HL              	; VARPTR
	or	a                           ; 0416CA || 	or	a                           ; 04168D || 0416CA B7          4164  			OR      A               	; Check the variable type
	push	af                        ; 0416CB || 	push	af                        ; 04168E || 0416CB F5          4165  			PUSH    AF
	push	de                        ; 0416CC || 	push	de                        ; 04168F || 0416CC D5          4166  			PUSH    DE
	ex	(sp),iy                     ; 0416CD || 	ex	(sp),iy                     ; 041690 || 0416CD FD E3       4167  			EX      (SP),IY
	jp	m,$0416e7                   ; 0416CF || 	jp	m,$0416aa                   ; 041692 || 0416CF FA E7 16 04 4168  			JP      M,ARGUE2        	; Jump here if it is a string
	call	$040312                   ; 0416D3 || 	call	$040302                   ; 041696 || 0416D3 CD 12 03 04 4170  			CALL    EXPRN           	; At this point it is numeric, so get the numeric expression value
	ex	(sp),iy                     ; 0416D7 || 	ex	(sp),iy                     ; 04169A || 0416D7 FD E3       4171  			EX      (SP),IY
	pop	de                         ; 0416D9 || 	pop	de                         ; 04169C || 0416D9 D1          4172  			POP     DE
	pop	af                         ; 0416DA || 	pop	af                         ; 04169D || 0416DA F1          4173  			POP     AF
	exx                            ; 0416DB || 	exx                            ; 04169E || 0416DB D9          4174  			EXX
	push	hl                        ; 0416DC || 	push	hl                        ; 04169F || 0416DC E5          4175  			PUSH    HL
	exx                            ; 0416DD || 	exx                            ; 0416A0 || 0416DD D9          4176  			EXX
	push	hl                        ; 0416DE || 	push	hl                        ; 0416A1 || 0416DE E5          4177  			PUSH    HL
	ld	b,a                         ; 0416DF || 	ld	b,a                         ; 0416A2 || 0416DF 47          4178  			LD      B,A
	push	bc                        ; 0416E0 || 	push	bc                        ; 0416A3 || 0416E0 C5          4179  			PUSH    BC
	call	$04168c                   ; 0416E1 || 	call	$04164f                   ; 0416A4 || 0416E1 CD 8C 16 04 4180  			CALL    CHECK           	; Check room
	jr	$+$11                       ; 0416E5 || 	jr	$+$11                       ; 0416A8 || 0416E5 18 0F       4181  			JR      ARGUE4
	call	$040325                   ; 0416E7 || 	call	$040315                   ; 0416AA || 0416E7 CD 25 03 04 4183  ARGUE2:			CALL    EXPRS			; At this point it is a string variable, so get the string expression value
	ex	(sp),iy                     ; 0416EB || 	ex	(sp),iy                     ; 0416AE || 0416EB FD E3       4184  			EX      (SP),IY
	exx                            ; 0416ED || 	exx                            ; 0416B0 || 0416ED D9          4185  			EXX
	pop	de                         ; 0416EE || 	pop	de                         ; 0416B1 || 0416EE D1          4186  			POP     DE
	exx                            ; 0416EF || 	exx                            ; 0416B2 || 0416EF D9          4187  			EXX
	pop	af                         ; 0416F0 || 	pop	af                         ; 0416B3 || 0416F0 F1          4188  			POP     AF
	call	$0409c4                   ; 0416F1 || 	call	$0409b4                   ; 0416B4 || 0416F1 CD C4 09 04 4189  			CALL    PUSHS
	exx                            ; 0416F5 || 	exx                            ; 0416B8 || 0416F5 D9          4190  			EXX
	call	$040a83                   ; 0416F6 || 	call	$040a70                   ; 0416B9 || 0416F6 CD 83 0A 04 4192  ARGUE4:			CALL    NXT			; Skip whitespace
	cp	$2c                         ; 0416FA || 	cp	$2c                         ; 0416BD || 0416FA FE 2C       4193  			CP      ','			; Check to see if the next value is a comma
	jr	nz,$+$0d                    ; 0416FC || 	jr	nz,$+$0d                    ; 0416BF || 0416FC 20 0B       4194  			JR      NZ,ARGUE5		; No, so jump here
	ld	a,(de)                      ; 0416FE || 	ld	a,(de)                      ; 0416C1 || 0416FE 1A          4195  			LD      A,(DE)
	cp	$2c                         ; 0416FF || 	cp	$2c                         ; 0416C2 || 0416FF FE 2C       4196  			CP      ','			; Are there any more arguments?
	jr	z,$-$4b                     ; 041701 || 	jr	z,$-$4b                     ; 0416C4 || 041701 28 B3       4197  			JR      Z,ARGUE1        	; Yes, so loop
	ld	a,$1f                       ; 041703 || 	ld	a,$1f                       ; 0416C6 || 041703 3E 1F       4199  ARGERR:			LD      A,31
	jp	$0437c1                     ; 041705 || 	jp	$043760                     ; 0416C8 || 041705 C3 C1 37 04 4200  			JP      ERROR_           	; Throw error "Arguments"
	call	$040a42                   ; 041709 || 	call	$040a2f                   ; 0416CC || 041709 CD 42 0A 04 4202  ARGUE5:			CALL    BRAKET			; Check for end bracket (throws an error if missing)
	ld	a,(de)                      ; 04170D || 	ld	a,(de)                      ; 0416D0 || 04170D 1A          4203  			LD      A,(DE)
	cp	$29                         ; 04170E || 	cp	$29                         ; 0416D1 || 04170E FE 29       4204  			CP      ')'
	jr	nz,$-$0d                    ; 041710 || 	jr	nz,$-$0d                    ; 0416D3 || 041710 20 F1       4205  			JR      NZ,ARGERR
	inc	de                         ; 041712 || 	inc	de                         ; 0416D5 || 041712 13          4206  			INC     DE
	exx                            ; 041713 || 	exx                            ; 0416D6 || 041713 D9          4207  			EXX
	pop	bc                         ; 041714 || 	pop	bc                         ; 0416D7 || 041714 C1          4208  ARGUE6:			POP     BC
	ld	a,b                         ; 041715 || 	ld	a,b                         ; 0416D8 || 041715 78          4209  			LD      A,B
	inc	a                          ; 041716 || 	inc	a                          ; 0416D9 || 041716 3C          4210  			INC     A
	exx                            ; 041717 || 	exx                            ; 0416DA || 041717 D9          4211  			EXX
	ret	z                          ; 041718 || 	ret	z                          ; 0416DB || 041718 C8          4212  			RET     Z               	; Marker popped
	exx                            ; 041719 || 	exx                            ; 0416DC || 041719 D9          4213  			EXX
	dec	a                          ; 04171A || 	dec	a                          ; 0416DD || 04171A 3D          4214  			DEC     A
	jp	m,$04172b                   ; 04171B || 	jp	m,$0416ee                   ; 0416DE || 04171B FA 2B 17 04 4215  			JP      M,ARGUE7        	; If it is a string, then jump here
	pop	hl                         ; 04171F || 	pop	hl                         ; 0416E2 || 04171F E1          4216  			POP     HL
	exx                            ; 041720 || 	exx                            ; 0416E3 || 041720 D9          4217  			EXX
	pop	hl                         ; 041721 || 	pop	hl                         ; 0416E4 || 041721 E1          4218  			POP     HL
	exx                            ; 041722 || 	exx                            ; 0416E5 || 041722 D9          4219  			EXX
	pop	ix                         ; 041723 || 	pop	ix                         ; 0416E6 || 041723 DD E1       4220  			POP     IX
	call	$041613                   ; 041725 || 	call	$0415d6                   ; 0416E8 || 041725 CD 13 16 04 4221  			CALL    STORE	           	; Write to dummy variable
	jr	$-$15                       ; 041729 || 	jr	$-$15                       ; 0416EC || 041729 18 E9       4222  			JR      ARGUE6
	call	$0409f1                   ; 04172B || 	call	$0409de                   ; 0416EE || 04172B CD F1 09 04 4224  ARGUE7:			CALL    POPS
	pop	ix                         ; 04172F || 	pop	ix                         ; 0416F2 || 04172F DD E1       4225  			POP     IX
	call	$04163d                   ; 041731 || 	call	$041600                   ; 0416F4 || 041731 CD 3D 16 04 4226  			CALL    STACCS
	jr	$-$21                       ; 041735 || 	jr	$-$21                       ; 0416F8 || 041735 18 DD       4227  			JR      ARGUE6
	pop	de                         ; 041737 || 	pop	de                         ; 0416FA || 041737 D1          4236  SAVLOC:			POP     DE              	; DE: Return address (from the CALL)
	inc	iy                         ; 041738 || 	inc	iy                         ; 0416FB || 041738 FD 23       4238  SAVLO1:			INC     IY              	; Bump past '(' or ','
	call	$040a83                   ; 04173A || 	call	$040a70                   ; 0416FD || 04173A CD 83 0A 04 4239  			CALL    NXT			; And also any whitespace
	push	de                        ; 04173E || 	push	de                        ; 041701 || 04173E D5          4240  			PUSH    DE			; Push the return address back onto the stack
	exx                            ; 04173F || 	exx                            ; 041702 || 04173F D9          4241  			EXX
	push	bc                        ; 041740 || 	push	bc                        ; 041703 || 041740 C5          4242  			PUSH    BC
	push	de                        ; 041741 || 	push	de                        ; 041704 || 041741 D5          4243  			PUSH    DE
	push	hl                        ; 041742 || 	push	hl                        ; 041705 || 041742 E5          4244  			PUSH    HL
	exx                            ; 041743 || 	exx                            ; 041706 || 041743 D9          4245  			EXX
	call	$040ca1                   ; 041744 || 	call	$040c8e                   ; 041707 || 041744 CD A1 0C 04 4246  			CALL    VAR_             	; Dummy variable
	exx                            ; 041748 || 	exx                            ; 04170B || 041748 D9          4247  			EXX
	pop	hl                         ; 041749 || 	pop	hl                         ; 04170C || 041749 E1          4248  			POP     HL
	pop	de                         ; 04174A || 	pop	de                         ; 04170D || 04174A D1          4249  			POP     DE
	pop	bc                         ; 04174B || 	pop	bc                         ; 04170E || 04174B C1          4250  			POP     BC
	exx                            ; 04174C || 	exx                            ; 04170F || 04174C D9          4251  			EXX
	pop	de                         ; 04174D || 	pop	de                         ; 041710 || 04174D D1          4252  			POP     DE
	or	a                           ; 04174E || 	or	a                           ; 041711 || 04174E B7          4253  			OR      A               	; Check the variable type
	jp	m,$041762                   ; 04174F || 	jp	m,$041725                   ; 041712 || 04174F FA 62 17 04 4254  			JP      M,SAVLO2        	; 80h = string, so jump to save a local string
	exx                            ; 041753 || 	exx                            ; 041716 || 041753 D9          4255  			EXX
	push	hl                        ; 041754 || 	push	hl                        ; 041717 || 041754 E5          4256  			PUSH    HL              	; Save H'L'
	exx                            ; 041755 || 	exx                            ; 041718 || 041755 D9          4257  			EXX
	ld	b,a                         ; 041756 || 	ld	b,a                         ; 041719 || 041756 47          4258  			LD      B,A             	;  B: Variable type
	call	$040426                   ; 041757 || 	call	$040416                   ; 04171A || 041757 CD 26 04 04 4259  			CALL    LOADN
	exx                            ; 04175B || 	exx                            ; 04171E || 04175B D9          4260  			EXX
	ex	(sp),hl                     ; 04175C || 	ex	(sp),hl                     ; 04171F || 04175C E3          4261  			EX      (SP),HL
	exx                            ; 04175D || 	exx                            ; 041720 || 04175D D9          4262  			EXX
	push	hl                        ; 04175E || 	push	hl                        ; 041721 || 04175E E5          4263  			PUSH    HL
	push	bc                        ; 04175F || 	push	bc                        ; 041722 || 04175F C5          4264  			PUSH    BC
	jr	$+$2f                       ; 041760 || 	jr	$+$2f                       ; 041723 || 041760 18 2D       4265  			JR      SAVLO4
	push	af                        ; 041762 || 	push	af                        ; 041725 || 041762 F5          4267  SAVLO2:			PUSH    AF              	; Save the type (string)
	push	de                        ; 041763 || 	push	de                        ; 041726 || 041763 D5          4268  			PUSH    DE
	exx                            ; 041764 || 	exx                            ; 041727 || 041764 D9          4269  			EXX
	push	hl                        ; 041765 || 	push	hl                        ; 041728 || 041765 E5          4270  			PUSH    HL
	exx                            ; 041766 || 	exx                            ; 041729 || 041766 D9          4271  			EXX
	call	$0404b0                   ; 041767 || 	call	$0404a0                   ; 04172A || 041767 CD B0 04 04 4272  			CALL    LOADS
	exx                            ; 04176B || 	exx                            ; 04172E || 04176B D9          4273  			EXX
	pop	hl                         ; 04176C || 	pop	hl                         ; 04172F || 04176C E1          4274  			POP     HL
	exx                            ; 04176D || 	exx                            ; 041730 || 04176D D9          4275  			EXX
	ld	bc,$000000                  ; 04176E || 	ld	bc,$000000                  ; 041731 || 04176E 01 00 00 00 4276  			LD	BC,0
	ld	c,e                         ; 041772 || 	ld	c,e                         ; 041735 || 041772 4B          4277  			LD      C,E			; BC: String length
	pop	de                         ; 041773 || 	pop	de                         ; 041736 || 041773 D1          4278  			POP     DE
	call	$04168c                   ; 041774 || 	call	$04164f                   ; 041737 || 041774 CD 8C 16 04 4279  			CALL    CHECK			; Check if there is space on the stack
	pop	af                         ; 041778 || 	pop	af                         ; 04173B || 041778 F1          4280  			POP     AF              	; Level stack
	ld	hl,$000000                  ; 041779 || 	ld	hl,$000000                  ; 04173C || 041779 21 00 00 00 4281  			LD      HL,0
	sbc	hl,bc                      ; 04177D || 	sbc	hl,bc                      ; 041740 || 04177D ED 42       4282  			SBC     HL,BC			; HL: Number of bytes required on the stack for the string
	add	hl,sp                      ; 04177F || 	add	hl,sp                      ; 041742 || 04177F 39          4283  			ADD     HL,SP			; Make space for the string on the stack
	ld	sp,hl                       ; 041780 || 	ld	sp,hl                       ; 041743 || 041780 F9          4284  			LD      SP,HL
	ld	b,a                         ; 041781 || 	ld	b,a                         ; 041744 || 041781 47          4285  			LD      B,A             	;  B: Variable type
	push	bc                        ; 041782 || 	push	bc                        ; 041745 || 041782 C5          4286  			PUSH    BC
	jr	z,$+$0c                     ; 041783 || 	jr	z,$+$0c                     ; 041746 || 041783 28 0A       4287  			JR      Z,SAVLO4
	push	de                        ; 041785 || 	push	de                        ; 041748 || 041785 D5          4288  			PUSH    DE
	ld	de,$044a00                  ; 041786 || 	ld	de,$044a00                  ; 041749 || 041786 11 00 4A 04 4289  			LD      DE,ACCS
	ex	de,hl                       ; 04178A || 	ex	de,hl                       ; 04174D || 04178A EB          4290  			EX      DE,HL
	ld	b,l                         ; 04178B || 	ld	b,l                         ; 04174E || 04178B 45          4291  			LD      B,L
	ldir                           ; 04178C || 	ldir                           ; 04174F || 04178C ED B0       4292  			LDIR                    	; Save the string onto the stack
	pop	de                         ; 04178E || 	pop	de                         ; 041751 || 04178E D1          4293  			POP     DE
	push	ix                        ; 04178F || 	push	ix                        ; 041752 || 04178F DD E5       4295  SAVLO4:			PUSH    IX			; VARPTR
	call	$041795                   ; 041791 || 	call	$041758                   ; 041754 || 041791 CD 95 17 04 4296  			CALL    SAVLO5
	call	$04168c                   ; 041795 || 	call	$04164f                   ; 041758 || 041795 CD 8C 16 04 4298  SAVLO5:			CALL    CHECK
	call	$040a83                   ; 041799 || 	call	$040a70                   ; 04175C || 041799 CD 83 0A 04 4299  			CALL    NXT
	cp	$2c                         ; 04179D || 	cp	$2c                         ; 041760 || 04179D FE 2C       4300  			CP      ','             	; Are there any more local variables?
	jr	z,$-$67                     ; 04179F || 	jr	z,$-$67                     ; 041762 || 04179F 28 97       4301  			JR      Z,SAVLO1		; Yes, so loop
	ex	de,hl                       ; 0417A1 || 	ex	de,hl                       ; 041764 || 0417A1 EB          4302  			EX      DE,HL			; DE -> HL: The return address
	jp	(hl)                        ; 0417A2 || 	jp	(hl)                        ; 041765 || 0417A2 E9          4303  			JP      (HL)            	; And effectvely return
	ld	a,(iy)                      ; 0417A3 || 	ld	a,(iy)                      ; 041766 || 0417A3 FD 7E 00    4305  DELIM:			LD      A,(IY)          	; Assembler delimiter
	cp	$20                         ; 0417A6 || 	cp	$20                         ; 041769 || 0417A6 FE 20       4306  			CP      ' '
	ret	z                          ; 0417A8 || 	ret	z                          ; 04176B || 0417A8 C8          4307  			RET     Z
	cp	$2c                         ; 0417A9 || 	cp	$2c                         ; 04176C || 0417A9 FE 2C       4308  			CP      ','
	ret	z                          ; 0417AB || 	ret	z                          ; 04176E || 0417AB C8          4309  			RET     Z
	cp	$29                         ; 0417AC || 	cp	$29                         ; 04176F || 0417AC FE 29       4310  			CP      ')'
	ret	z                          ; 0417AE || 	ret	z                          ; 041771 || 0417AE C8          4311  			RET     Z
	cp	$3b                         ; 0417AF || 	cp	$3b                         ; 041772 || 0417AF FE 3B       4312  TERM:			CP      ';'             	; Assembler terminator
	ret	z                          ; 0417B1 || 	ret	z                          ; 041774 || 0417B1 C8          4313  			RET     Z
	cp	$5c                         ; 0417B2 || 	cp	$5c                         ; 041775 || 0417B2 FE 5C       4314  			CP      '\'
	ret	z                          ; 0417B4 || 	ret	z                          ; 041777 || 0417B4 C8          4315  			RET     Z
	jr	$+$09                       ; 0417B5 || 	jr	$+$09                       ; 041778 || 0417B5 18 07       4316  			JR      TERM0
	call	$040a83                   ; 0417B7 || 	call	$040a70                   ; 04177A || 0417B7 CD 83 0A 04 4318  TERMQ:			CALL    NXT
	cp	$8b                         ; 0417BB || 	cp	$8b                         ; 04177E || 0417BB FE 8B       4319  			CP      ELSE_
	ret	nc                         ; 0417BD || 	ret	nc                         ; 041780 || 0417BD D0          4320  			RET     NC
	cp	$3a                         ; 0417BE || 	cp	$3a                         ; 041781 || 0417BE FE 3A       4321  TERM0:			CP      ':'             	; Assembler seperator
	ret	nc                         ; 0417C0 || 	ret	nc                         ; 041783 || 0417C0 D0          4322  			RET     NC
	cp	$0d                         ; 0417C1 || 	cp	$0d                         ; 041784 || 0417C1 FE 0D       4323  			CP      CR
	ret                            ; 0417C3 || 	ret                            ; 041786 || 0417C3 C9          4324  			RET
	call	$0417b7                   ; 0417C4 || 	call	$04177a                   ; 041787 || 0417C4 CD B7 17 04 4326  SPAN:			CALL    TERMQ
	ret	z                          ; 0417C8 || 	ret	z                          ; 04178B || 0417C8 C8          4327  			RET     Z
	inc	iy                         ; 0417C9 || 	inc	iy                         ; 04178C || 0417C9 FD 23       4328  			INC     IY
	jr	$-$07                       ; 0417CB || 	jr	$-$07                       ; 04178E || 0417CB 18 F7       4329  			JR      SPAN
	call	$040a83                   ; 0417CD || 	call	$040a70                   ; 041790 || 0417CD CD 83 0A 04 4333  EQUALS:			CALL    NXT			; Skip whitespace
	inc	iy                         ; 0417D1 || 	inc	iy                         ; 041794 || 0417D1 FD 23       4334  			INC     IY			; Skip past the character in question
	cp	$3d                         ; 0417D3 || 	cp	$3d                         ; 041796 || 0417D3 FE 3D       4335  			CP      '='			; Is it '='
	ret	z                          ; 0417D5 || 	ret	z                          ; 041798 || 0417D5 C8          4336  			RET     Z			; Yes, so return
	ld	a,$04                       ; 0417D6 || 	ld	a,$04                       ; 041799 || 0417D6 3E 04       4337  			LD      A,4			; Otherwise
	jp	$0437c1                     ; 0417D8 || 	jp	$043760                     ; 04179B || 0417D8 C3 C1 37 04 4338  			JP      ERROR_           	; Throw error "Mistake"
	cp	$8a                         ; 0417DC || 	cp	$8a                         ; 04179F || 0417DC FE 8A       4340  FORMAT:			CP      TAB
	jr	z,$+$0f                     ; 0417DE || 	jr	z,$+$0f                     ; 0417A1 || 0417DE 28 0D       4341  			JR      Z,DOTAB
	cp	$89                         ; 0417E0 || 	cp	$89                         ; 0417A3 || 0417E0 FE 89       4342  			CP      SPC
	jr	z,$+$42                     ; 0417E2 || 	jr	z,$+$42                     ; 0417A5 || 0417E2 28 40       4343  			JR      Z,DOSPC
	cp	$27                         ; 0417E4 || 	cp	$27                         ; 0417A7 || 0417E4 FE 27       4344  			CP      '''
	ret	nz                         ; 0417E6 || 	ret	nz                         ; 0417A9 || 0417E6 C0          4345  			RET     NZ
	call	$0439a8                   ; 0417E7 || 	call	$043947                   ; 0417AA || 0417E7 CD A8 39 04 4346  			CALL    CRLF
	xor	a                          ; 0417EB || 	xor	a                          ; 0417AE || 0417EB AF          4347  			XOR     A
	ret                            ; 0417EC || 	ret                            ; 0417AF || 0417EC C9          4348  			RET
	push	bc                        ; 0417ED || 	push	bc                        ; 0417B0 || 0417ED C5          4350  DOTAB:			PUSH    BC
	call	$04031a                   ; 0417EE || 	call	$04030a                   ; 0417B1 || 0417EE CD 1A 03 04 4351  			CALL    EXPRI
	exx                            ; 0417F2 || 	exx                            ; 0417B5 || 0417F2 D9          4352  			EXX
	pop	bc                         ; 0417F3 || 	pop	bc                         ; 0417B6 || 0417F3 C1          4353  			POP     BC
	ld	a,(iy)                      ; 0417F4 || 	ld	a,(iy)                      ; 0417B7 || 0417F4 FD 7E 00    4354  			LD      A,(IY)
	cp	$2c                         ; 0417F7 || 	cp	$2c                         ; 0417BA || 0417F7 FE 2C       4355  			CP      ','
	jr	z,$+$16                     ; 0417F9 || 	jr	z,$+$16                     ; 0417BC || 0417F9 28 14       4356  			JR      Z,DOTAB1
	call	$040a42                   ; 0417FB || 	call	$040a2f                   ; 0417BE || 0417FB CD 42 0A 04 4357  			CALL    BRAKET
	ld	a,l                         ; 0417FF || 	ld	a,l                         ; 0417C2 || 0417FF 7D          4358  			LD      A,L
	ld	hl,$044d3d                  ; 041800 || 	ld	hl,$044d3d                  ; 0417C3 || 041800 21 3D 4D 04 4359  TABIT:			LD      HL,COUNT
	cp	(hl)                        ; 041804 || 	cp	(hl)                        ; 0417C7 || 041804 BE          4360  			CP      (HL)
	ret	z                          ; 041805 || 	ret	z                          ; 0417C8 || 041805 C8          4361  			RET     Z
	push	af                        ; 041806 || 	push	af                        ; 0417C9 || 041806 F5          4362  			PUSH    AF
	call	c,$0439a8                 ; 041807 || 	call	c,$043947                 ; 0417CA || 041807 DC A8 39 04 4363  			CALL    C,CRLF
	pop	af                         ; 04180B || 	pop	af                         ; 0417CE || 04180B F1          4364  			POP     AF
	sub	(hl)                       ; 04180C || 	sub	(hl)                       ; 0417CF || 04180C 96          4365  			SUB     (HL)
	jr	$+$1f                       ; 04180D || 	jr	$+$1f                       ; 0417D0 || 04180D 18 1D       4366  			JR      FILL
	inc	iy                         ; 04180F || 	inc	iy                         ; 0417D2 || 04180F FD 23       4367  DOTAB1:			INC     IY
	push	bc                        ; 041811 || 	push	bc                        ; 0417D4 || 041811 C5          4368  			PUSH    BC
	push	hl                        ; 041812 || 	push	hl                        ; 0417D5 || 041812 E5          4369  			PUSH    HL
	call	$04031a                   ; 041813 || 	call	$04030a                   ; 0417D6 || 041813 CD 1A 03 04 4370  			CALL    EXPRI
	exx                            ; 041817 || 	exx                            ; 0417DA || 041817 D9          4371  			EXX
	pop	de                         ; 041818 || 	pop	de                         ; 0417DB || 041818 D1          4372  			POP     DE
	pop	bc                         ; 041819 || 	pop	bc                         ; 0417DC || 041819 C1          4373  			POP     BC
	call	$040a42                   ; 04181A || 	call	$040a2f                   ; 0417DD || 04181A CD 42 0A 04 4374  			CALL    BRAKET
	call	$043f22                   ; 04181E || 	call	$043ec1                   ; 0417E1 || 04181E CD 22 3F 04 4375  			CALL    PUTCSR
	xor	a                          ; 041822 || 	xor	a                          ; 0417E5 || 041822 AF          4376  			XOR     A
	ret                            ; 041823 || 	ret                            ; 0417E6 || 041823 C9          4377  			RET
	push	bc                        ; 041824 || 	push	bc                        ; 0417E7 || 041824 C5          4379  DOSPC:			PUSH    BC
	call	$040335                   ; 041825 || 	call	$040325                   ; 0417E8 || 041825 CD 35 03 04 4380  			CALL    ITEMI
	exx                            ; 041829 || 	exx                            ; 0417EC || 041829 D9          4381  			EXX
	ld	a,l                         ; 04182A || 	ld	a,l                         ; 0417ED || 04182A 7D          4382  			LD      A,L
	pop	bc                         ; 04182B || 	pop	bc                         ; 0417EE || 04182B C1          4383  			POP     BC
	or	a                           ; 04182C || 	or	a                           ; 0417EF || 04182C B7          4384  FILL:			OR      A
	ret	z                          ; 04182D || 	ret	z                          ; 0417F0 || 04182D C8          4385  			RET     Z
	push	bc                        ; 04182E || 	push	bc                        ; 0417F1 || 04182E C5          4386  			PUSH    BC
	ld	b,a                         ; 04182F || 	ld	b,a                         ; 0417F2 || 04182F 47          4387  			LD      B,A
	ld	a,$20                       ; 041830 || 	ld	a,$20                       ; 0417F3 || 041830 3E 20       4388  FILL1:			LD      A,' '
	call	$0439b0                   ; 041832 || 	call	$04394f                   ; 0417F5 || 041832 CD B0 39 04 4389  			CALL    OUTCHR
	djnz	$-$06                     ; 041836 || 	djnz	$-$06                     ; 0417F9 || 041836 10 F8       4390  			DJNZ    FILL1
	pop	bc                         ; 041838 || 	pop	bc                         ; 0417FB || 041838 C1          4391  			POP     BC
	xor	a                          ; 041839 || 	xor	a                          ; 0417FC || 041839 AF          4392  			XOR     A
	ret                            ; 04183A || 	ret                            ; 0417FD || 04183A C9          4393  			RET
	ld	hl,$044a00                  ; 04183B || 	ld	hl,$044a00                  ; 0417FE || 04183B 21 00 4A 04 4395  PTEXT:			LD      HL,ACCS
	inc	e                          ; 04183F || 	inc	e                          ; 041802 || 04183F 1C          4396  			INC     E
	dec	e                          ; 041840 || 	dec	e                          ; 041803 || 041840 1D          4397  PTEXT1:			DEC     E
	ret	z                          ; 041841 || 	ret	z                          ; 041804 || 041841 C8          4398  			RET     Z
	ld	a,(hl)                      ; 041842 || 	ld	a,(hl)                      ; 041805 || 041842 7E          4399  			LD      A,(HL)
	inc	hl                         ; 041843 || 	inc	hl                         ; 041806 || 041843 23          4400  			INC     HL
	call	$0439b0                   ; 041844 || 	call	$04394f                   ; 041807 || 041844 CD B0 39 04 4401  			CALL    OUTCHR
	jr	$-$08                       ; 041848 || 	jr	$-$08                       ; 04180B || 041848 18 F6       4402  			JR      PTEXT1
	push	af                        ; 04184A || 	push	af                        ; 04180D || 04184A F5          4404  FETCHS:			PUSH    AF
	push	bc                        ; 04184B || 	push	bc                        ; 04180E || 04184B C5          4405  			PUSH    BC
	push	hl                        ; 04184C || 	push	hl                        ; 04180F || 04184C E5          4406  			PUSH    HL
	ex	(sp),iy                     ; 04184D || 	ex	(sp),iy                     ; 041810 || 04184D FD E3       4407  			EX      (SP),IY
	call	$04186a                   ; 04184F || 	call	$04182d                   ; 041812 || 04184F CD 6A 18 04 4408  			CALL    XTRACT
	call	$040a83                   ; 041853 || 	call	$040a70                   ; 041816 || 041853 CD 83 0A 04 4409  			CALL    NXT
	ex	(sp),iy                     ; 041857 || 	ex	(sp),iy                     ; 04181A || 041857 FD E3       4410  			EX      (SP),IY
	pop	hl                         ; 041859 || 	pop	hl                         ; 04181C || 041859 E1          4411  			POP     HL
	pop	bc                         ; 04185A || 	pop	bc                         ; 04181D || 04185A C1          4412  			POP     BC
	pop	af                         ; 04185B || 	pop	af                         ; 04181E || 04185B F1          4413  			POP     AF
	ret                            ; 04185C || 	ret                            ; 04181F || 04185C C9          4414  			RET
	ld	de,$044a00                  ; 04185D || 	ld	de,$044a00                  ; 041820 || 04185D 11 00 4A 04 4416  LINES:			LD      DE,ACCS
	ld	a,(hl)                      ; 041861 || 	ld	a,(hl)                      ; 041824 || 041861 7E          4417  LINE1S:			LD      A,(HL)
	ld	(de),a                      ; 041862 || 	ld	(de),a                      ; 041825 || 041862 12          4418  			LD      (DE),A
	cp	$0d                         ; 041863 || 	cp	$0d                         ; 041826 || 041863 FE 0D       4419  			CP      CR
	ret	z                          ; 041865 || 	ret	z                          ; 041828 || 041865 C8          4420  			RET     Z
	inc	hl                         ; 041866 || 	inc	hl                         ; 041829 || 041866 23          4421  			INC     HL
	inc	e                          ; 041867 || 	inc	e                          ; 04182A || 041867 1C          4422  			INC     E
	jr	$-$07                       ; 041868 || 	jr	$-$07                       ; 04182B || 041868 18 F7       4423  			JR      LINE1S
	call	$040a83                   ; 04186A || 	call	$040a70                   ; 04182D || 04186A CD 83 0A 04 4425  XTRACT:			CALL    NXT
	cp	$22                         ; 04186E || 	cp	$22                         ; 041831 || 04186E FE 22       4426  			CP      '"'
	inc	iy                         ; 041870 || 	inc	iy                         ; 041833 || 041870 FD 23       4427  			INC     IY
	jp	z,$040477                   ; 041872 || 	jp	z,$040467                   ; 041835 || 041872 CA 77 04 04 4428  			JP      Z,CONS
	dec	iy                         ; 041876 || 	dec	iy                         ; 041839 || 041876 FD 2B       4429  			DEC     IY
	ld	de,$044a00                  ; 041878 || 	ld	de,$044a00                  ; 04183B || 041878 11 00 4A 04 4430  			LD      DE,ACCS
	ld	a,(iy)                      ; 04187C || 	ld	a,(iy)                      ; 04183F || 04187C FD 7E 00    4431  XTRAC1:			LD      A,(IY)
	ld	(de),a                      ; 04187F || 	ld	(de),a                      ; 041842 || 04187F 12          4432  			LD      (DE),A
	cp	$2c                         ; 041880 || 	cp	$2c                         ; 041843 || 041880 FE 2C       4433  			CP      ','
	ret	z                          ; 041882 || 	ret	z                          ; 041845 || 041882 C8          4434  			RET     Z
	cp	$0d                         ; 041883 || 	cp	$0d                         ; 041846 || 041883 FE 0D       4435  			CP      CR
	ret	z                          ; 041885 || 	ret	z                          ; 041848 || 041885 C8          4436  			RET     Z
	inc	iy                         ; 041886 || 	inc	iy                         ; 041849 || 041886 FD 23       4437  			INC     IY
	inc	e                          ; 041888 || 	inc	e                          ; 04184B || 041888 1C          4438  			INC     E
	jr	$-$0d                       ; 041889 || 	jr	$-$0d                       ; 04184C || 041889 18 F1       4439  			JR      XTRAC1
	ld	bc,$000000                  ; 04188B || 	ld	bc,$000000                  ; 04184E || 04188B 01 00 00 00 4449  SEARCH_EX:			LD      BC,0			; Clear BC
	ld	c,(hl)                      ; 04188F || 	ld	c,(hl)                      ; 041852 || 04188F 4E          4451  SRCH1_EX:			LD      C,(HL)			;  C: Fetch the line length
	inc	c                          ; 041890 || 	inc	c                          ; 041853 || 041890 0C          4452  			INC     C			; Check for 0, i.e. end of program marker
	dec	c                          ; 041891 || 	dec	c                          ; 041854 || 041891 0D          4453  			DEC     C
	jr	z,$+$0d                     ; 041892 || 	jr	z,$+$0d                     ; 041855 || 041892 28 0B       4454  			JR      Z,SRCH2_EX         	; Not found the token, so end
	inc	hl                         ; 041894 || 	inc	hl                         ; 041857 || 041894 23          4455  			INC     HL			; Skip the line length and line number
	inc	hl                         ; 041895 || 	inc	hl                         ; 041858 || 041895 23          4456  			INC     HL
	inc	hl                         ; 041896 || 	inc	hl                         ; 041859 || 041896 23          4457  			INC     HL
	cp	(hl)                        ; 041897 || 	cp	(hl)                        ; 04185A || 041897 BE          4458  			CP      (HL)			; Compare with the token
	ret	z                          ; 041898 || 	ret	z                          ; 04185B || 041898 C8          4459  			RET     Z			; Found it, so return with carry not set
	dec	c                          ; 041899 || 	dec	c                          ; 04185C || 041899 0D          4460  			DEC     C			; Skip to the next line
	dec	c                          ; 04189A || 	dec	c                          ; 04185D || 04189A 0D          4461  			DEC     C
	dec	c                          ; 04189B || 	dec	c                          ; 04185E || 04189B 0D          4462  			DEC     C
	add	hl,bc                      ; 04189C || 	add	hl,bc                      ; 04185F || 04189C 09          4463  			ADD     HL,BC
	jr	$-$0e                       ; 04189D || 	jr	$-$0e                       ; 041860 || 04189D 18 F0       4464  			JR      SRCH1_EX			; Rinse, lather and repeat
	dec	hl                         ; 04189F || 	dec	hl                         ; 041862 || 04189F 2B          4466  SRCH2_EX:			DEC     HL              	; Token not found, so back up to the CR at the end of the last line
	scf                            ; 0418A0 || 	scf                            ; 041863 || 0418A0 37          4467  			SCF				; And set the carry flag
	ret                            ; 0418A1 || 	ret                            ; 041864 || 0418A1 C9          4468  			RET
	cp	$04                         ; 0418A2 || 	cp	$04                         ; 041865 || 0418A2 FE 04       4482  X4OR5:			CP      4			; Check A = 4 (Z flag is used later)
	push	de                        ; 0418A4 || 	push	de                        ; 041867 || 0418A4 D5          4484  			push de
	pop	hl                         ; 0418A5 || 	pop	hl                         ; 041868 || 0418A5 E1          4485  			pop hl
	add	hl,hl                      ; 0418A6 || 	add	hl,hl                      ; 041869 || 0418A6 29          4486  			ADD     HL,HL			; Multiply by 2 (note this operation preserves the zero flag)
	ret	c                          ; 0418A7 || 	ret	c                          ; 04186A || 0418A7 D8          4487  			RET     C			; Exit if overflow
	add	hl,hl                      ; 0418A8 || 	add	hl,hl                      ; 04186B || 0418A8 29          4488  			ADD     HL,HL			; Multiply by 2 again
	ret	c                          ; 0418A9 || 	ret	c                          ; 04186C || 0418A9 D8          4489  			RET     C			; Exit if overflow
	ex	de,hl                       ; 0418AA || 	ex	de,hl                       ; 04186D || 0418AA EB          4490  			EX      DE,HL			; DE: Product
	ret	z                          ; 0418AB || 	ret	z                          ; 04186E || 0418AB C8          4491  			RET     Z			; Exit if A = 4
	add	hl,de                      ; 0418AC || 	add	hl,de                      ; 04186F || 0418AC 19          4492  			ADD     HL,DE			; Add original value to HL (effectively multiplying by 5)
	ex	de,hl                       ; 0418AD || 	ex	de,hl                       ; 041870 || 0418AD EB          4493  			EX      DE,HL			; DE: Product
	ret                            ; 0418AE || 	ret                            ; 041871 || 0418AE C9          4494  			RET
	push	bc                        ; 0418AF || 	push	bc                        ; 041872 || 0418AF C5          4503  MUL16:			PUSH	BC
	ld	d,c                         ; 0418B0 || 	ld	d,c                         ; 041873 || 0418B0 51          4504  			LD	D, C			; Set up the registers for the multiplies
	ld	e,l                         ; 0418B1 || 	ld	e,l                         ; 041874 || 0418B1 5D          4505  			LD	E, L
	ld	l,c                         ; 0418B2 || 	ld	l,c                         ; 041875 || 0418B2 69          4506  			LD	L, C
	ld	c,e                         ; 0418B3 || 	ld	c,e                         ; 041876 || 0418B3 4B          4507  			LD	C, E
	mlt	hl                         ; 0418B4 || 	mlt	hl                         ; 041877 || 0418B4 ED 6C       4508  			MLT	HL			; HL = H * C (*256)
	mlt	de                         ; 0418B6 || 	mlt	de                         ; 041879 || 0418B6 ED 5C       4509  			MLT	DE			; DE = L * C
	mlt	bc                         ; 0418B8 || 	mlt	bc                         ; 04187B || 0418B8 ED 4C       4510  			MLT	BC			; BC = B * L (*256)
	add	hl,bc                      ; 0418BA || 	add	hl,bc                      ; 04187D || 0418BA 09          4511  			ADD	HL, BC			; HL = The sum of the two most significant multiplications
	pop	bc                         ; 0418BB || 	pop	bc                         ; 04187E || 0418BB C1          4512  			POP	BC
	xor	a                          ; 0418BC || 	xor	a                          ; 04187F || 0418BC AF          4513  			XOR	A
	sbc	a,h                        ; 0418BD || 	sbc	a,h                        ; 041880 || 0418BD 9C          4514  			SBC	H			; If H is not zero then it's an overflow
	ret	c                          ; 0418BE || 	ret	c                          ; 041881 || 0418BE D8          4515  			RET	C
	ld	h,l                         ; 0418BF || 	ld	h,l                         ; 041882 || 0418BF 65          4516  			LD	H, L			; HL = ((H * C) + (B * L) * 256) + (L * C)
	ld	l,a                         ; 0418C0 || 	ld	l,a                         ; 041883 || 0418C0 6F          4517  			LD	L, A
	add	hl,de                      ; 0418C1 || 	add	hl,de                      ; 041884 || 0418C1 19          4518  			ADD	HL, DE
	ret                            ; 0418C2 || 	ret                            ; 041885 || 0418C2 C9          4519  			RET
	call	$040a83                   ; 0418C3 || 	call	$040a70                   ; 041886 || 0418C3 CD 83 0A 04 4521  CHANEL:			CALL    NXT			; Skip whitespace
	cp	$23                         ; 0418C7 || 	cp	$23                         ; 04188A || 0418C7 FE 23       4522  			CP      '#'			; Check for the '#' symbol
	ld	a,$2d                       ; 0418C9 || 	ld	a,$2d                       ; 04188C || 0418C9 3E 2D       4523  			LD      A,45
	jp	nz,$0437c1                  ; 0418CB || 	jp	nz,$043760                  ; 04188E || 0418CB C2 C1 37 04 4524  			JP      NZ,ERROR_        	; If it is missing, then throw a "Missing #" error
	inc	iy                         ; 0418CF || 	inc	iy                         ; 041892 || 0418CF FD 23       4525  CHNL:			INC     IY             		; Bump past the '#'
	call	$040335                   ; 0418D1 || 	call	$040325                   ; 041894 || 0418D1 CD 35 03 04 4526  			CALL    ITEMI			; Get the channel number
	exx                            ; 0418D5 || 	exx                            ; 041898 || 0418D5 D9          4527  			EXX
	ex	de,hl                       ; 0418D6 || 	ex	de,hl                       ; 041899 || 0418D6 EB          4528  			EX      DE,HL			; DE: The channel number
	ret                            ; 0418D7 || 	ret                            ; 04189A || 0418D7 C9          4529  			RET
	call	$041df8                   ; 0418D8 || 	call	$041db5                   ; 04189B || 0418D8 CD F8 1D 04 4536  ASSEM:			CALL    SKIP
	inc	iy                         ; 0418DC || 	inc	iy                         ; 04189F || 0418DC FD 23       4537  			INC     IY
	cp	$3a                         ; 0418DE || 	cp	$3a                         ; 0418A1 || 0418DE FE 3A       4538  			CP      ':'
	jr	z,$-$08                     ; 0418E0 || 	jr	z,$-$08                     ; 0418A3 || 0418E0 28 F6       4539  			JR      Z,ASSEM
	cp	$5d                         ; 0418E2 || 	cp	$5d                         ; 0418A5 || 0418E2 FE 5D       4540  			CP      ']'
	ret	z                          ; 0418E4 || 	ret	z                          ; 0418A7 || 0418E4 C8          4541  			RET     Z
	cp	$0d                         ; 0418E5 || 	cp	$0d                         ; 0418A8 || 0418E5 FE 0D       4542  			CP      CR
	ret	z                          ; 0418E7 || 	ret	z                          ; 0418AA || 0418E7 C8          4543  			RET     Z
	dec	iy                         ; 0418E8 || 	dec	iy                         ; 0418AB || 0418E8 FD 2B       4544  			DEC     IY
	ld	ix,($044c40)                ; 0418EA || 	ld	ix,($044c40)                ; 0418AD || 0418EA DD 2A 40 4C 4545  			LD      IX,(PC)         	; Program counter (P% - defined in equs.inc)
	ld	hl,$044d40                  ; 0418EF || 	ld	hl,$044d40                  ; 0418B2 || 0418EF 21 40 4D 04 4546  			LD      HL,LISTON
	bit	6,(hl)                     ; 0418F3 || 	bit	6,(hl)                     ; 0418B6 || 0418F3 CB 76       4547  			BIT     6,(HL)
	jr	z,$+$07                     ; 0418F5 || 	jr	z,$+$07                     ; 0418B8 || 0418F5 28 05       4548  			JR      Z,ASSEM0
	ld	ix,($044c3c)                ; 0418F7 || 	ld	ix,($044c3c)                ; 0418BA || 0418F7 DD 2A 3C 4C 4549  			LD      IX,(OC)         	; Code origin (O% - defined in equs.inc)
	push	ix                        ; 0418FC || 	push	ix                        ; 0418BF || 0418FC DD E5       4550  ASSEM0:			PUSH    IX
	push	iy                        ; 0418FE || 	push	iy                        ; 0418C1 || 0418FE FD E5       4551  			PUSH    IY
	call	$0419b0                   ; 041900 || 	call	$041973                   ; 0418C3 || 041900 CD B0 19 04 4552  			CALL    ASMB
	pop	bc                         ; 041904 || 	pop	bc                         ; 0418C7 || 041904 C1          4553  			POP     BC
	pop	de                         ; 041905 || 	pop	de                         ; 0418C8 || 041905 D1          4554  			POP     DE
	ret	c                          ; 041906 || 	ret	c                          ; 0418C9 || 041906 D8          4555  			RET     C
	call	$041df8                   ; 041907 || 	call	$041db5                   ; 0418CA || 041907 CD F8 1D 04 4556  			CALL    SKIP
	scf                            ; 04190B || 	scf                            ; 0418CE || 04190B 37          4557  			SCF
	ret	nz                         ; 04190C || 	ret	nz                         ; 0418CF || 04190C C0          4558  			RET     NZ
	dec	iy                         ; 04190D || 	dec	iy                         ; 0418D0 || 04190D FD 2B       4559  			DEC     IY
	inc	iy                         ; 04190F || 	inc	iy                         ; 0418D2 || 04190F FD 23       4560  ASSEM3:			INC     IY
	ld	a,(iy)                      ; 041911 || 	ld	a,(iy)                      ; 0418D4 || 041911 FD 7E 00    4561  			LD      A,(IY)
	call	$0417be                   ; 041914 || 	call	$041781                   ; 0418D7 || 041914 CD BE 17 04 4562  			CALL    TERM0
	jr	nz,$-$09                    ; 041918 || 	jr	nz,$-$09                    ; 0418DB || 041918 20 F5       4563  			JR      NZ,ASSEM3
	ld	a,($044d40)                 ; 04191A || 	ld	a,($044d40)                 ; 0418DD || 04191A 3A 40 4D 04 4564  			LD      A,(LISTON)
	push	ix                        ; 04191E || 	push	ix                        ; 0418E1 || 04191E DD E5       4565  			PUSH    IX
	pop	hl                         ; 041920 || 	pop	hl                         ; 0418E3 || 041920 E1          4566  			POP     HL
	or	a                           ; 041921 || 	or	a                           ; 0418E4 || 041921 B7          4567  			OR      A
	sbc	hl,de                      ; 041922 || 	sbc	hl,de                      ; 0418E5 || 041922 ED 52       4568  			SBC     HL,DE
	ex	de,hl                       ; 041924 || 	ex	de,hl                       ; 0418E7 || 041924 EB          4569  			EX      DE,HL           	; DE: Number of bytes
	push	hl                        ; 041925 || 	push	hl                        ; 0418E8 || 041925 E5          4570  			PUSH    HL
	ld	hl,($044c40)                ; 041926 || 	ld	hl,($044c40)                ; 0418E9 || 041926 2A 40 4C 04 4571  			LD      HL,(PC)
	push	hl                        ; 04192A || 	push	hl                        ; 0418ED || 04192A E5          4572  			PUSH    HL
	add	hl,de                      ; 04192B || 	add	hl,de                      ; 0418EE || 04192B 19          4573  			ADD     HL,DE
	ld	($044c40),hl                ; 04192C || 	ld	($044c40),hl                ; 0418EF || 04192C 22 40 4C 04 4574  			LD      (PC),HL         	; Update PC
	bit	6,a                        ; 041930 || 	bit	6,a                        ; 0418F3 || 041930 CB 77       4575  			BIT     6,A
	jr	z,$+$0b                     ; 041932 || 	jr	z,$+$0b                     ; 0418F5 || 041932 28 09       4576  			JR      Z,ASSEM5
	ld	hl,($044c3c)                ; 041934 || 	ld	hl,($044c3c)                ; 0418F7 || 041934 2A 3C 4C 04 4577  			LD      HL,(OC)
	add	hl,de                      ; 041938 || 	add	hl,de                      ; 0418FB || 041938 19          4578  			ADD     HL,DE
	ld	($044c3c),hl                ; 041939 || 	ld	($044c3c),hl                ; 0418FC || 041939 22 3C 4C 04 4579  			LD      (OC),HL         	; Update OC
	pop	hl                         ; 04193D || 	pop	hl                         ; 041900 || 04193D E1          4580  ASSEM5:			POP     HL              	; Old PC
	pop	ix                         ; 04193E || 	pop	ix                         ; 041901 || 04193E DD E1       4581  			POP     IX              	; Code here
	bit	4,a                        ; 041940 || 	bit	4,a                        ; 041903 || 041940 CB 67       4582  			BIT     4,A
	jr	z,$-$6a                     ; 041942 || 	jr	z,$-$6a                     ; 041905 || 041942 28 94       4583  			JR      Z,ASSEM
	ld	($044d4a),hl                ; 041944 || 	ld	($044d4a),hl                ; 041907 || 041944 22 4A 4D 04 4584  			LD	(R0),HL			; Store HL in R0 so we can access the MSB
	ld	a,($044d4c)                 ; 041948 || 	ld	a,($044d4c)                 ; 04190B || 041948 3A 4C 4D 04 4585  			LD	A,(R0+2)		; Print out the address
	call	$04199a                   ; 04194C || 	call	$04195d                   ; 04190F || 04194C CD 9A 19 04 4586  			CALL	HEX_EX
	ld	a,h                         ; 041950 || 	ld	a,h                         ; 041913 || 041950 7C          4587  			LD      A,H
	call	$04199a                   ; 041951 || 	call	$04195d                   ; 041914 || 041951 CD 9A 19 04 4588  			CALL    HEX_EX
	ld	a,l                         ; 041955 || 	ld	a,l                         ; 041918 || 041955 7D          4589  			LD      A,L
	call	$041992                   ; 041956 || 	call	$041955                   ; 041919 || 041956 CD 92 19 04 4590  			CALL    HEXSP
	xor	a                          ; 04195A || 	xor	a                          ; 04191D || 04195A AF          4591  			XOR     A
	cp	e                           ; 04195B || 	cp	e                           ; 04191E || 04195B BB          4592  			CP      E
	jr	z,$+$1a                     ; 04195C || 	jr	z,$+$1a                     ; 04191F || 04195C 28 18       4593  			JR      Z,ASSEM2
	ld	a,($044d3d)                 ; 04195E || 	ld	a,($044d3d)                 ; 041921 || 04195E 3A 3D 4D 04 4595  ASSEM1:			LD      A,(COUNT)
	cp	$14                         ; 041962 || 	cp	$14                         ; 041925 || 041962 FE 14       4596  			CP      20
	ld	a,$07                       ; 041964 || 	ld	a,$07                       ; 041927 || 041964 3E 07       4597  			LD      A,7
	call	nc,$041800                ; 041966 || 	call	nc,$0417c3                ; 041929 || 041966 D4 00 18 04 4598  			CALL    NC,TABIT        	; Next line
	ld	a,(ix)                      ; 04196A || 	ld	a,(ix)                      ; 04192D || 04196A DD 7E 00    4599  			LD      A,(IX)
	call	$041992                   ; 04196D || 	call	$041955                   ; 041930 || 04196D CD 92 19 04 4600  			CALL    HEXSP
	inc	ix                         ; 041971 || 	inc	ix                         ; 041934 || 041971 DD 23       4601  			INC     IX
	dec	e                          ; 041973 || 	dec	e                          ; 041936 || 041973 1D          4602  			DEC     E
	jr	nz,$-$16                    ; 041974 || 	jr	nz,$-$16                    ; 041937 || 041974 20 E8       4603  			JR      NZ,ASSEM1
	ld	a,$16                       ; 041976 || 	ld	a,$16                       ; 041939 || 041976 3E 16       4605  ASSEM2:			LD      A,22			; Tab to the disassembly field
	call	$041800                   ; 041978 || 	call	$0417c3                   ; 04193B || 041978 CD 00 18 04 4606  			CALL    TABIT
	push	iy                        ; 04197C || 	push	iy                        ; 04193F || 04197C FD E5       4607  			PUSH    IY
	pop	hl                         ; 04197E || 	pop	hl                         ; 041941 || 04197E E1          4608  			POP     HL
	sbc	hl,bc                      ; 04197F || 	sbc	hl,bc                      ; 041942 || 04197F ED 42       4609  			SBC     HL,BC
	ld	a,(bc)                      ; 041981 || 	ld	a,(bc)                      ; 041944 || 041981 0A          4610  ASSEM4:			LD      A,(BC)
	call	$0439cd                   ; 041982 || 	call	$04396c                   ; 041945 || 041982 CD CD 39 04 4611  			CALL    OUT_
	inc	bc                         ; 041986 || 	inc	bc                         ; 041949 || 041986 03          4612  			INC     BC
	dec	l                          ; 041987 || 	dec	l                          ; 04194A || 041987 2D          4613  			DEC     L
	jr	nz,$-$07                    ; 041988 || 	jr	nz,$-$07                    ; 04194B || 041988 20 F7       4614  			JR      NZ,ASSEM4
	call	$0439a8                   ; 04198A || 	call	$043947                   ; 04194D || 04198A CD A8 39 04 4615  			CALL    CRLF
	jp	$0418d8                     ; 04198E || 	jp	$04189b                     ; 041951 || 04198E C3 D8 18 04 4616  			JP      ASSEM
	call	$04199a                   ; 041992 || 	call	$04195d                   ; 041955 || 041992 CD 9A 19 04 4618  HEXSP:			CALL    HEX_EX
	ld	a,$20                       ; 041996 || 	ld	a,$20                       ; 041959 || 041996 3E 20       4619  			LD      A,' '
	jr	$+$14                       ; 041998 || 	jr	$+$14                       ; 04195B || 041998 18 12       4620  			JR      OUTCH1
	push	af                        ; 04199A || 	push	af                        ; 04195D || 04199A F5          4621  HEX_EX:			PUSH    AF
	rrca                           ; 04199B || 	rrca                           ; 04195E || 04199B 0F          4622  			RRCA
	rrca                           ; 04199C || 	rrca                           ; 04195F || 04199C 0F          4623  			RRCA
	rrca                           ; 04199D || 	rrca                           ; 041960 || 04199D 0F          4624  			RRCA
	rrca                           ; 04199E || 	rrca                           ; 041961 || 04199E 0F          4625  			RRCA
	call	$0419a4                   ; 04199F || 	call	$041967                   ; 041962 || 04199F CD A4 19 04 4626  			CALL    HEXOUT
	pop	af                         ; 0419A3 || 	pop	af                         ; 041966 || 0419A3 F1          4627  			POP     AF
	and	$0f                        ; 0419A4 || 	and	$0f                        ; 041967 || 0419A4 E6 0F       4628  HEXOUT:			AND     0FH
	add	a,$90                      ; 0419A6 || 	add	a,$90                      ; 041969 || 0419A6 C6 90       4629  			ADD     A,90H
	daa                            ; 0419A8 || 	daa                            ; 04196B || 0419A8 27          4630  			DAA
	adc	a,$40                      ; 0419A9 || 	adc	a,$40                      ; 04196C || 0419A9 CE 40       4631  			ADC     A,40H
	daa                            ; 0419AB || 	daa                            ; 04196E || 0419AB 27          4632  			DAA
	jp	$0439cd                     ; 0419AC || 	jp	$04396c                     ; 04196F || 0419AC C3 CD 39 04 4633  OUTCH1:			JP      OUT_
	cp	$2e                         ; 0419B0 || 	cp	$2e                         ; 041973 || 0419B0 FE 2E       4649  ASMB:			CP      '.'			; Check for a dot; this indicates a label
	jr	nz,$+$21                    ; 0419B2 || 	jr	nz,$+$21                    ; 041975 || 0419B2 20 1F       4650  			JR      NZ,ASMB1		; No, so just process the instruction
	inc	iy                         ; 0419B4 || 	inc	iy                         ; 041977 || 0419B4 FD 23       4651  			INC     IY			; Skip past the dot to the label name
	push	ix                        ; 0419B6 || 	push	ix                        ; 041979 || 0419B6 DD E5       4652  			PUSH    IX			; Store the code destination pointer
	call	$040ca1                   ; 0419B8 || 	call	$040c8e                   ; 04197B || 0419B8 CD A1 0C 04 4653  			CALL    VAR_			; Create a variable
	push	af                        ; 0419BC || 	push	af                        ; 04197F || 0419BC F5          4654  			PUSH    AF
	call	$0409a3                   ; 0419BD || 	call	$040993                   ; 041980 || 0419BD CD A3 09 04 4655  			CALL    ZERO			; Zero it
	ld	a,($044c42)                 ; 0419C1 || 	ld	a,($044c42)                 ; 041984 || 0419C1 3A 42 4C 04 4656  			LD	A,(PC+2)
	ld	l,a                         ; 0419C5 || 	ld	l,a                         ; 041988 || 0419C5 6F          4657  			LD	L,A			; The MSB of the 24-bit address
	exx                            ; 0419C6 || 	exx                            ; 041989 || 0419C6 D9          4658  			EXX
	ld	hl,($044c40)                ; 0419C7 || 	ld	hl,($044c40)                ; 04198A || 0419C7 2A 40 4C 04 4659  			LD      HL,(PC)			; The LSW of the 24-bit address (only 16-bits used)
	exx                            ; 0419CB || 	exx                            ; 04198E || 0419CB D9          4660  			EXX
	pop	af                         ; 0419CC || 	pop	af                         ; 04198F || 0419CC F1          4661  			POP     AF
	call	$041613                   ; 0419CD || 	call	$0415d6                   ; 041990 || 0419CD CD 13 16 04 4662  			CALL    STORE			; Store the program counter
	pop	ix                         ; 0419D1 || 	pop	ix                         ; 041994 || 0419D1 DD E1       4663  			POP     IX			; Restore the code destination pointer
	ld	a,($044d40)                 ; 0419D3 || 	ld	a,($044d40)                 ; 041996 || 0419D3 3A 40 4D 04 4665  ASMB1:			LD	A,(LISTON)		; Get the OPT flags
	and	$80                        ; 0419D7 || 	and	$80                        ; 04199A || 0419D7 E6 80       4666  			AND	80H
	ld	d,a                         ; 0419D9 || 	ld	d,a                         ; 04199C || 0419D9 57          4667  			LD      D,A     		;  D: Clear the flags and set the initial ADL mode (copied from bit 7 of LISTON)
	call	$041df8                   ; 0419DA || 	call	$041db5                   ; 04199D || 0419DA CD F8 1D 04 4668  			CALL    SKIP			; Skip any whitespace
	ret	z                          ; 0419DE || 	ret	z                          ; 0419A1 || 0419DE C8          4669  			RET     Z			; And return if there is nothing further to process
	cp	$d6                         ; 0419DF || 	cp	$d6                         ; 0419A2 || 0419DF FE D6       4670  			CP      TCALL			; Check if it is the token CALL (it will have been tokenised by BASIC)
	ld	c,$c4                       ; 0419E1 || 	ld	c,$c4                       ; 0419A4 || 0419E1 0E C4       4671  			LD      C,0C4H			;  A: The base operand
	inc	iy                         ; 0419E3 || 	inc	iy                         ; 0419A6 || 0419E3 FD 23       4672  			INC     IY			; Skip past the token
	jp	z,$041b2d                   ; 0419E5 || 	jp	z,$041aea                   ; 0419A8 || 0419E5 CA 2D 1B 04 4673  			JP      Z,GROUP13_1		; And jump to GROUP13, which handles CALL
	dec	iy                         ; 0419E9 || 	dec	iy                         ; 0419AC || 0419E9 FD 2B       4674  			DEC     IY			; Skip back, as we're not doing the above at this point
	ld	hl,$041e0f                  ; 0419EB || 	ld	hl,$041dcc                  ; 0419AE || 0419EB 21 0F 1E 04 4675  			LD      HL,OPCODS		; HL: Pointer to the eZ80 opcodes table
	call	$041da7                   ; 0419EF || 	call	$041d64                   ; 0419B2 || 0419EF CD A7 1D 04 4676  			CALL    FIND			; Find the opcode
	ret	c                          ; 0419F3 || 	ret	c                          ; 0419B6 || 0419F3 D8          4677  			RET     C			; If not found, then return; carry indicates an error condition
	ld	c,b                         ; 0419F4 || 	ld	c,b                         ; 0419B7 || 0419F4 48          4678  			LD      C,B     		;  C: A copy of the opcode
	sub	$44                        ; 0419F5 || 	sub	$44                        ; 0419B8 || 0419F5 D6 44       4683  			SUB     68			; The number of opcodes in GROUP0 and GROUP1
	jr	nc,$+$0a                    ; 0419F7 || 	jr	nc,$+$0a                    ; 0419BA || 0419F7 30 08       4684  			JR      NC,GROUP02		; If not in that range, then check GROUP2
	cp	$cb                         ; 0419F9 || 	cp	$cb                         ; 0419BC || 0419F9 FE CB       4685  			CP      15-68			; Anything between 15 and 68 (neat compare trick here)
	call	nc,$041d00                ; 0419FB || 	call	nc,$041cbd                ; 0419BE || 0419FB D4 00 1D 04 4686  			CALL    NC,ED			; Needs to be prefixed with ED
	jr	$+$78                       ; 0419FF || 	jr	$+$78                       ; 0419C2 || 0419FF 18 76       4687  			JR      BYTE0			; Then write the opcode byte
	sub	$0a                        ; 041A01 || 	sub	$0a                        ; 0419C4 || 041A01 D6 0A       4692  GROUP02:		SUB     10			; The number of opcodes in GROUP2 and GROUP3
	jr	nc,$+$14                    ; 041A03 || 	jr	nc,$+$14                    ; 0419C6 || 041A03 30 12       4693  			JR      NC,GROUP04		; If not in that range, then check GROUP4
	cp	$f9                         ; 041A05 || 	cp	$f9                         ; 0419C8 || 041A05 FE F9       4694  			CP      3-10			;
	call	c,$041d95                 ; 041A07 || 	call	c,$041d52                 ; 0419CA || 041A07 DC 95 1D 04 4695  			CALL    C,BIT_
	ret	c                          ; 041A0B || 	ret	c                          ; 0419CE || 041A0B D8          4696  			RET     C
	call	$041d66                   ; 041A0C || 	call	$041d23                   ; 0419CF || 041A0C CD 66 1D 04 4697  			CALL    REGLO
	ret	c                          ; 041A10 || 	ret	c                          ; 0419D3 || 041A10 D8          4698  			RET     C
	call	$041d04                   ; 041A11 || 	call	$041cc1                   ; 0419D4 || 041A11 CD 04 1D 04 4699  			CALL    CB
	jr	$+$62                       ; 041A15 || 	jr	$+$62                       ; 0419D8 || 041A15 18 60       4700  			JR      BYTE0
	sub	$03                        ; 041A17 || 	sub	$03                        ; 0419DA || 041A17 D6 03       4704  GROUP04:		SUB     3			; The number of opcodes in GROUP4
	jr	nc,$+$09                    ; 041A19 || 	jr	nc,$+$09                    ; 0419DC || 041A19 30 07       4705  			JR      NC,GROUP05		; If not in that range, then check GROUP5
	call	$041d88                   ; 041A1B || 	call	$041d45                   ; 0419DE || 041A1B CD 88 1D 04 4706  GROUP04_1:		CALL    PAIR_EX
	ret	c                          ; 041A1F || 	ret	c                          ; 0419E2 || 041A1F D8          4707  			RET     C
	jr	$+$57                       ; 041A20 || 	jr	$+$57                       ; 0419E3 || 041A20 18 55       4708  			JR      BYTE0
	sub	$0a                        ; 041A22 || 	sub	$0a                        ; 0419E5 || 041A22 D6 0A       4713  GROUP05:		SUB     8+2			; The number of opcodes in GROUP5 and GROUP6
	jr	nc,$+$3b                    ; 041A24 || 	jr	nc,$+$3b                    ; 0419E7 || 041A24 30 39       4714  			JR      NC,GROUP07
	cp	$fd                         ; 041A26 || 	cp	$fd                         ; 0419E9 || 041A26 FE FD       4715  			CP      5-8
	ld	b,$07                       ; 041A28 || 	ld	b,$07                       ; 0419EB || 041A28 06 07       4716  			LD      B,7
	call	nc,$041d14                ; 041A2A || 	call	nc,$041cd1                ; 0419ED || 041A2A D4 14 1D 04 4717  			CALL    NC,OPND			; Get the first operand
	ld	a,b                         ; 041A2E || 	ld	a,b                         ; 0419F1 || 041A2E 78          4718  			LD      A,B
	cp	$07                         ; 041A2F || 	cp	$07                         ; 0419F2 || 041A2F FE 07       4719  			CP      7			; Is the operand 'A'?
	jr	nz,$+$17                    ; 041A31 || 	jr	nz,$+$17                    ; 0419F4 || 041A31 20 15       4720  			JR      NZ,GROUP05_HL		; No, so check for HL, IX or IY
	call	$041d66                   ; 041A33 || 	call	$041d23                   ; 0419F6 || 041A33 CD 66 1D 04 4722  GROUP05_1:		CALL    REGLO			; Handle ADD A,?
	ld	a,c                         ; 041A37 || 	ld	a,c                         ; 0419FA || 041A37 79          4723  			LD      A,C
	jr	nc,$+$30                    ; 041A38 || 	jr	nc,$+$30                    ; 0419FB || 041A38 30 2E       4724  			JR      NC,BIND1		; If it is a register, then write that out
	xor	$46                        ; 041A3A || 	xor	$46                        ; 0419FD || 041A3A EE 46       4725  			XOR     46H			; Handle ADD A,n
	call	$041d06                   ; 041A3C || 	call	$041cc3                   ; 0419FF || 041A3C CD 06 1D 04 4726  			CALL    BIND
	call	$041d46                   ; 041A40 || 	call	$041d03                   ; 041A03 || 041A40 CD 46 1D 04 4727  DB_:			CALL    NUMBER
	jp	$041aff                     ; 041A44 || 	jp	$041abc                     ; 041A07 || 041A44 C3 FF 1A 04 4728  			JP      VAL8
	and	$3f                        ; 041A48 || 	and	$3f                        ; 041A0B || 041A48 E6 3F       4730  GROUP05_HL:		AND     3FH
	cp	$0c                         ; 041A4A || 	cp	$0c                         ; 041A0D || 041A4A FE 0C       4731  			CP      12
	scf                            ; 041A4C || 	scf                            ; 041A0F || 041A4C 37          4732  			SCF
	ret	nz                         ; 041A4D || 	ret	nz                         ; 041A10 || 041A4D C0          4733  			RET     NZ
	ld	a,c                         ; 041A4E || 	ld	a,c                         ; 041A11 || 041A4E 79          4734  			LD      A,C
	cp	$80                         ; 041A4F || 	cp	$80                         ; 041A12 || 041A4F FE 80       4735  			CP      80H
	ld	c,$09                       ; 041A51 || 	ld	c,$09                       ; 041A14 || 041A51 0E 09       4736  			LD      C,9
	jr	z,$-$38                     ; 041A53 || 	jr	z,$-$38                     ; 041A16 || 041A53 28 C6       4737  			JR      Z,GROUP04_1
	xor	$1c                        ; 041A55 || 	xor	$1c                        ; 041A18 || 041A55 EE 1C       4738  			XOR     1CH
	rrca                           ; 041A57 || 	rrca                           ; 041A1A || 041A57 0F          4739  			RRCA
	ld	c,a                         ; 041A58 || 	ld	c,a                         ; 041A1B || 041A58 4F          4740  			LD      C,A
	call	$041d00                   ; 041A59 || 	call	$041cbd                   ; 041A1C || 041A59 CD 00 1D 04 4741  			CALL    ED
	jr	$-$42                       ; 041A5D || 	jr	$-$42                       ; 041A20 || 041A5D 18 BC       4742  			JR      GROUP04_1
	sub	$02                        ; 041A5F || 	sub	$02                        ; 041A22 || 041A5F D6 02       4746  GROUP07:		SUB     2			; The number of opcodes in GROUP7
	jr	nc,$+$1b                    ; 041A61 || 	jr	nc,$+$1b                    ; 041A24 || 041A61 30 19       4747  			JR      NC,GROUP08
	call	$041d6d                   ; 041A63 || 	call	$041d2a                   ; 041A26 || 041A63 CD 6D 1D 04 4748  			CALL    REGHI
	ld	a,c                         ; 041A67 || 	ld	a,c                         ; 041A2A || 041A67 79          4749  			LD      A,C
	jp	nc,$041d06                  ; 041A68 || 	jp	nc,$041cc3                  ; 041A2B || 041A68 D2 06 1D 04 4750  BIND1:			JP      NC,BIND
	xor	$64                        ; 041A6C || 	xor	$64                        ; 041A2F || 041A6C EE 64       4751  			XOR     64H
	rlca                           ; 041A6E || 	rlca                           ; 041A31 || 041A6E 07          4752  			RLCA
	rlca                           ; 041A6F || 	rlca                           ; 041A32 || 041A6F 07          4753  			RLCA
	rlca                           ; 041A70 || 	rlca                           ; 041A33 || 041A70 07          4754  			RLCA
	ld	c,a                         ; 041A71 || 	ld	c,a                         ; 041A34 || 041A71 4F          4755  			LD      C,A
	call	$041d8d                   ; 041A72 || 	call	$041d4a                   ; 041A35 || 041A72 CD 8D 1D 04 4756  			CALL    PAIR1_EX
	ret	c                          ; 041A76 || 	ret	c                          ; 041A39 || 041A76 D8          4757  			RET     C
	ld	a,c                         ; 041A77 || 	ld	a,c                         ; 041A3A || 041A77 79          4758  BYTE0:			LD      A,C
	jp	$041d35                     ; 041A78 || 	jp	$041cf2                     ; 041A3B || 041A78 C3 35 1D 04 4759  			JP      BYTE_
	sub	$02                        ; 041A7C || 	sub	$02                        ; 041A3F || 041A7C D6 02       4763  GROUP08:		SUB	2			; The number of opcodes in GROUP8
	jr	nc,$+$2e                    ; 041A7E || 	jr	nc,$+$28                    ; 041A41 || 041A7E 30 2C       4764  			JR	NC,GROUP09
	cp	$ff                         ; 041A80 || 	cp	$ff                         ; 041A43 || 041A80 FE FF       4765  			CP	1-2
	call	z,$041d46                 ; 041A82 || 	call	z,$041d03                 ; 041A45 || 041A82 CC 46 1D 04 4766  			CALL    Z,NUMBER		; Fetch number first if OUT
	ex	af,af'                      ; 041A86 || 	ex	af,af'                      ; 041A49 || 041A86 08          4767  			EX      AF,AF'			; Save flags
	call	$041d5a                   ; 041A87 || 	call	$041d17                   ; 041A4A || 041A87 CD 5A 1D 04 4768  			CALL    REG			; Get the register value regardless
	ret	c                          ; 041A8B || 	ret	c                          ; 041A4E || 041A8B D8          4769  			RET     C			; Return if not a register
	ex	af,af'                      ; 041A8C || 	ex	af,af'                      ; 041A4F || 041A8C 08          4770  			EX      AF,AF'			; Restore the flags
	call	c,$041d46                 ; 041A8D || 	call	c,$041d03                 ; 041A50 || 041A8D DC 46 1D 04 4771  			CALL    C,NUMBER		; Fetch number last if IN
	ld	a,b                         ; 041A91 || 	ld	a,b                         ; 041A54 || 041A91 78          4772  			LD	A,B			; Get the register number
	cp	$06                         ; 041A92 || 	cp	$06                         ; 041A55 || 041A92 FE 06       4773  			CP	6			; Fail on (HL)
	scf                            ; 041A94 || 	scf                            ; 041A57 || 041A94 37          4774  			SCF
	ret	z                          ; 041A95 || 	ret	z                          ; 041A58 || 041A95 C8          4775  			RET	Z
	cp	$08                         ; 041A96 || 	cp	$08                         ; 041A59 || 041A96 FE 08       4776  			CP	8			; Check it is just single pairs only
	ccf                            ; 041A98 || 	ccf                            ; 041A5B || 041A98 3F          4777  			CCF
	ret	c                          ; 041A99 || 	ret	c                          ; 041A5C || 041A99 D8          4778  			RET	C			; And return if it is an invalid register
	rlca                           ; 041A9A || 	rlca                           ; 041A5D || 041A9A 07          4779  			RLCA				; Bind with the operand
	rlca                           ; 041A9B || 	rlca                           ; 041A31 || 041A9B 07          4780  			RLCA
	rlca                           ; 041A9C || 	rlca                           ; 041A32 || 041A9C 07          4781  			RLCA
	add	a,c                        ; 041A9D                                         || 041A9D 81          4782  			ADD	A,C
	ld	c,a                         ; 041A9E || 	ld	c,a                         ; 041A34 || 041A9E 4F          4783  			LD	C,A
	call	$041d00                   ; 041A9F || 	call	$041d4a                   ; 041A35 || 041A9F CD 00 1D 04 4784  			CALL	ED			; Prefix with ED
	ld	a,c                         ; 041AA3                                         || 041AA3 79          4785  			LD	A,C
	call	$041d35                   ; 041AA4                                         || 041AA4 CD 35 1D 04 4786  			CALL	BYTE_			; Write out the operand
	jp	$041aff                     ; 041AA8 || 	jp	$041cf2                     ; 041A3B || 041AA8 C3 FF 1A 04 4787  			JP	VAL8			; Write out the value
	sub	$02                        ; 041AAC || 	sub	$02                        ; 041A3F || 041AAC D6 02       4792  GROUP09:		SUB     2			; The number of opcodes in GROUP09 amd GROUP10
	jr	nc,$+$27                    ; 041AAE || 	jr	nc,$+$28                    ; 041A41 || 041AAE 30 25       4793  			JR      NC,GROUP11
	cp	$ff                         ; 041AB0 || 	cp	$ff                         ; 041A43 || 041AB0 FE FF       4794  			CP      1-2			; Check if Group 9 or Group 1
	call	z,$041cf4                 ; 041AB2 || 	call	z,$041d03                 ; 041A45 || 041AB2 CC F4 1C 04 4795  			CALL    Z,CORN			; Call CORN if Group 10 (OUT)
	ex	af,af'                      ; 041AB6 || 	ex	af,af'                      ; 041A49 || 041AB6 08          4796  			EX      AF,AF'			; Save flags
	call	$041d6d                   ; 041AB7 || 	call	$041d17                   ; 041A4A || 041AB7 CD 6D 1D 04 4797  			CALL    REGHI			; Get the register value regardless
	ret	c                          ; 041ABB || 	ret	c                          ; 041A4E || 041ABB D8          4798  			RET     C			; Return if not a register
	ex	af,af'                      ; 041ABC || 	ex	af,af'                      ; 041A4F || 041ABC 08          4799  			EX      AF,AF'			; Restore the flags
	call	c,$041cf4                 ; 041ABD || 	call	c,$041cb1                 ; 041A7A || 041ABD DC F4 1C 04 4800  			CALL    C,CORN			; Call CORN if Group 9 (IN)
	inc	h                          ; 041AC1 || 	inc	h                          ; 041A7E || 041AC1 24          4801  			INC     H			; If it is IN r,(C) or OUT (C),r then
	jr	z,$-$4b                     ; 041AC2 || 	jr	z,$-$45                     ; 041A7F || 041AC2 28 B3       4802  			JR      Z,BYTE0			; Just write the operand out
	ld	a,b                         ; 041AC4 || 	ld	a,b                         ; 041A81 || 041AC4 78          4804  			LD      A,B			; Check the register
	cp	$07                         ; 041AC5 || 	cp	$07                         ; 041A82 || 041AC5 FE 07       4805  			CP      7
	scf                            ; 041AC7 || 	scf                            ; 041A84 || 041AC7 37          4806  			SCF
	ret	nz                         ; 041AC8 || 	ret	nz                         ; 041A85 || 041AC8 C0          4807  			RET     NZ			; If it is not A, then return
	ld	a,c                         ; 041AC9 || 	ld	a,c                         ; 041A86 || 041AC9 79          4809  			LD      A,C			; Bind the register with the operand
	xor	$03                        ; 041ACA || 	xor	$03                        ; 041A87 || 041ACA EE 03       4810  			XOR     3
	rlca                           ; 041ACC || 	rlca                           ; 041A89 || 041ACC 07          4811  			RLCA
	rlca                           ; 041ACD || 	rlca                           ; 041A8A || 041ACD 07          4812  			RLCA
	rlca                           ; 041ACE || 	rlca                           ; 041A8B || 041ACE 07          4813  			RLCA
	call	$041d35                   ; 041ACF || 	call	$041cf2                   ; 041A8C || 041ACF CD 35 1D 04 4814  			CALL    BYTE_			; Write out the operand
	jr	$+$2c                       ; 041AD3 || 	jr	$+$2c                       ; 041A90 || 041AD3 18 2A       4815  			JR      VAL8			; And the value
	sub	$02                        ; 041AD5 || 	sub	$02                        ; 041A92 || 041AD5 D6 02       4819  GROUP11:		SUB     2			; The number of opcodes in GROUP11
	jr	nc,$+$2d                    ; 041AD7 || 	jr	nc,$+$2d                    ; 041A94 || 041AD7 30 2B       4820  			JR      NC,GROUP12
	cp	$ff                         ; 041AD9 || 	cp	$ff                         ; 041A96 || 041AD9 FE FF       4821  			CP      1-2
	call	nz,$041d74                ; 041ADB || 	call	nz,$041d31                ; 041A98 || 041ADB C4 74 1D 04 4822  			CALL    NZ,COND_
	ld	a,c                         ; 041ADF || 	ld	a,c                         ; 041A9C || 041ADF 79          4823  			LD      A,C
	jr	nc,$+$04                    ; 041AE0 || 	jr	nc,$+$04                    ; 041A9D || 041AE0 30 02       4824  			JR      NC,@F
	ld	a,$18                       ; 041AE2 || 	ld	a,$18                       ; 041A9F || 041AE2 3E 18       4825  			LD      A,18H
	call	$041d35                   ; 041AE4 || 	call	$041cf2                   ; 041AA1 || 041AE4 CD 35 1D 04 4826  @@:			CALL    BYTE_
	call	$041d46                   ; 041AE8 || 	call	$041d03                   ; 041AA5 || 041AE8 CD 46 1D 04 4827  			CALL    NUMBER
	ld	de,($044c40)                ; 041AEC || 	ld	de,($044c40)                ; 041AA9 || 041AEC ED 5B 40 4C 4828  			LD      DE,(PC)
	inc	de                         ; 041AF1 || 	inc	de                         ; 041AAE || 041AF1 13          4829  			INC     DE
	scf                            ; 041AF2 || 	scf                            ; 041AAF || 041AF2 37          4830  			SCF
	sbc	hl,de                      ; 041AF3 || 	sbc	hl,de                      ; 041AB0 || 041AF3 ED 52       4831  			SBC     HL,DE
	ld	a,l                         ; 041AF5 || 	ld	a,l                         ; 041AB2 || 041AF5 7D          4832  			LD      A,L
	rla                            ; 041AF6 || 	rla                            ; 041AB3 || 041AF6 17          4833  			RLA
	sbc	a,a                        ; 041AF7 || 	sbc	a,a                        ; 041AB4 || 041AF7 9F          4834  			SBC     A,A
	cp	h                           ; 041AF8 || 	cp	h                           ; 041AB5 || 041AF8 BC          4835  			CP      H
	ld	a,$01                       ; 041AF9 || 	ld	a,$01                       ; 041AB6 || 041AF9 3E 01       4836  TOOFAR:			LD      A,1
	jp	nz,$0437c1                  ; 041AFB || 	jp	nz,$043760                  ; 041AB8 || 041AFB C2 C1 37 04 4837  			JP      NZ,ERROR_		; Throw an "Out of range" error
	ld	a,l                         ; 041AFF || 	ld	a,l                         ; 041ABC || 041AFF 7D          4838  VAL8:			LD      A,L
	jp	$041d35                     ; 041B00 || 	jp	$041cf2                     ; 041ABD || 041B00 C3 35 1D 04 4839  			JP      BYTE_
	sub	$01                        ; 041B04 || 	sub	$01                        ; 041AC1 || 041B04 D6 01       4843  GROUP12:		SUB	1			; The number of opcodes in GROUP12
	jr	nc,$+$23                    ; 041B06 || 	jr	nc,$+$23                    ; 041AC3 || 041B06 30 21       4844  			JR	NC,GROUP13
	call	$041c5a                   ; 041B08 || 	call	$041c17                   ; 041AC5 || 041B08 CD 5A 1C 04 4845  			CALL	EZ80SF_PART		; Evaluate the suffix (just LIL and SIS)
	ret	c                          ; 041B0C || 	ret	c                          ; 041AC9 || 041B0C D8          4846  			RET	C			; Exit if an invalid suffix is provided
	call	$041d74                   ; 041B0D || 	call	$041d31                   ; 041ACA || 041B0D CD 74 1D 04 4847  			CALL    COND_			; Evaluate the conditions
	ld	a,c                         ; 041B11 || 	ld	a,c                         ; 041ACE || 041B11 79          4848  			LD      A,C
	jr	nc,$+$0f                    ; 041B12 || 	jr	nc,$+$0f                    ; 041ACF || 041B12 30 0D       4849  			JR      NC,GROUP12_1
	ld	a,b                         ; 041B14 || 	ld	a,b                         ; 041AD1 || 041B14 78          4850  			LD      A,B
	and	$3f                        ; 041B15 || 	and	$3f                        ; 041AD2 || 041B15 E6 3F       4851  			AND     3FH
	cp	$06                         ; 041B17 || 	cp	$06                         ; 041AD4 || 041B17 FE 06       4852  			CP      6
	ld	a,$e9                       ; 041B19 || 	ld	a,$e9                       ; 041AD6 || 041B19 3E E9       4853  			LD      A,0E9H
	jp	z,$041d35                   ; 041B1B || 	jp	z,$041cf2                   ; 041AD8 || 041B1B CA 35 1D 04 4854  			JP      Z,BYTE_
	ld	a,$c3                       ; 041B1F || 	ld	a,$c3                       ; 041ADC || 041B1F 3E C3       4855  			LD      A,0C3H
	call	$041d35                   ; 041B21 || 	call	$041cf2                   ; 041ADE || 041B21 CD 35 1D 04 4856  GROUP12_1:		CALL    BYTE_			; Output the opcode (with conditions)
	jp	$041caf                     ; 041B25 || 	jp	$041c6c                     ; 041AE2 || 041B25 C3 AF 1C 04 4857  			JP	ADDR_			; Output the address
	sub	$01                        ; 041B29 || 	sub	$01                        ; 041AE6 || 041B29 D6 01       4861  GROUP13:		SUB	1			; The number of opcodes in GROUP13
	jr	nc,$+$0e                    ; 041B2B || 	jr	nc,$+$0e                    ; 041AE8 || 041B2B 30 0C       4862  			JR	NC,GROUP14
	call	$041c72                   ; 041B2D || 	call	$041c2f                   ; 041AEA || 041B2D CD 72 1C 04 4863  GROUP13_1:		CALL	EZ80SF_FULL		; Evaluate the suffix
	call	$041b54                   ; 041B31 || 	call	$041b11                   ; 041AEE || 041B31 CD 54 1B 04 4864  			CALL    GROUP15_1		; Output the opcode (with conditions)
	jp	$041caf                     ; 041B35 || 	jp	$041c6c                     ; 041AF2 || 041B35 C3 AF 1C 04 4865  			JP	ADDR_			; Output the address
	sub	$01                        ; 041B39 || 	sub	$01                        ; 041AF6 || 041B39 D6 01       4869  GROUP14:		SUB	1			; The number of opcodes in GROUP14
	jr	nc,$+$15                    ; 041B3B || 	jr	nc,$+$15                    ; 041AF8 || 041B3B 30 13       4870  			JR	NC,GROUP15
	call	$041c72                   ; 041B3D || 	call	$041c2f                   ; 041AFA || 041B3D CD 72 1C 04 4871  			CALL	EZ80SF_FULL		; Evaluate the suffix
	ret	c                          ; 041B41 || 	ret	c                          ; 041AFE || 041B41 D8          4872  			RET	C			; Exit if an invalid suffix provided
	call	$041d46                   ; 041B42 || 	call	$041d03                   ; 041AFF || 041B42 CD 46 1D 04 4873  			CALL    NUMBER
	and	c                          ; 041B46 || 	and	c                          ; 041B03 || 041B46 A1          4874  			AND     C
	or	h                           ; 041B47 || 	or	h                           ; 041B04 || 041B47 B4          4875  			OR      H
	jr	nz,$-$4f                    ; 041B48 || 	jr	nz,$-$4f                    ; 041B05 || 041B48 20 AF       4876  			JR      NZ,TOOFAR
	ld	a,l                         ; 041B4A || 	ld	a,l                         ; 041B07 || 041B4A 7D          4877  			LD      A,L
	or	c                           ; 041B4B || 	or	c                           ; 041B08 || 041B4B B1          4878  			OR      C
	jp	$041d35                     ; 041B4C || 	jp	$041cf2                     ; 041B09 || 041B4C C3 35 1D 04 4879  	  		JP      BYTE_
	sub	$01                        ; 041B50 || 	sub	$01                        ; 041B0D || 041B50 D6 01       4883  GROUP15:		SUB	1			; The number of opcodes in GROUP15
	jr	nc,$+$11                    ; 041B52 || 	jr	nc,$+$11                    ; 041B0F || 041B52 30 0F       4884  			JR	NC,GROUP16
	call	$041d74                   ; 041B54 || 	call	$041d31                   ; 041B11 || 041B54 CD 74 1D 04 4885  GROUP15_1:		CALL    COND_
	ld	a,c                         ; 041B58 || 	ld	a,c                         ; 041B15 || 041B58 79          4886  			LD      A,C
	jp	nc,$041d35                  ; 041B59 || 	jp	nc,$041cf2                  ; 041B16 || 041B59 D2 35 1D 04 4887  			JP      NC,BYTE_
	or	$09                         ; 041B5D || 	or	$09                         ; 041B1A || 041B5D F6 09       4888  			OR      9
	jp	$041d35                     ; 041B5F || 	jp	$041cf2                     ; 041B1C || 041B5F C3 35 1D 04 4889  			JP      BYTE_
	sub	$01                        ; 041B63 || 	sub	$01                        ; 041B20 || 041B63 D6 01       4893  GROUP16:		SUB	1			; The number of opcodes in GROUP16
	jr	nc,$+$76                    ; 041B65 || 	jr	nc,$+$76                    ; 041B22 || 041B65 30 74       4894  			JR	NC,GROUP17
	call	$041c72                   ; 041B67 || 	call	$041c2f                   ; 041B24 || 041B67 CD 72 1C 04 4895  			CALL	EZ80SF_FULL		; Evaluate the suffix
	call	$041da3                   ; 041B6B || 	call	$041d60                   ; 041B28 || 041B6B CD A3 1D 04 4896  			CALL    LDOP			; Check for accumulator loads
	jp	nc,$041ccf                  ; 041B6F || 	jp	nc,$041c8c                  ; 041B2C || 041B6F D2 CF 1C 04 4897  			JP      NC,LDA			; Yes, so jump here
	call	$041d6d                   ; 041B73 || 	call	$041d2a                   ; 041B30 || 041B73 CD 6D 1D 04 4898  			CALL    REGHI
	ex	af,af'                      ; 041B77 || 	ex	af,af'                      ; 041B34 || 041B77 08          4899  			EX      AF,AF'
	call	$041df8                   ; 041B78 || 	call	$041db5                   ; 041B35 || 041B78 CD F8 1D 04 4900  			CALL    SKIP
	cp	$28                         ; 041B7C || 	cp	$28                         ; 041B39 || 041B7C FE 28       4901  			CP      '('			; Check for bracket
	jr	z,$+$26                     ; 041B7E || 	jr	z,$+$26                     ; 041B3B || 041B7E 28 24       4902  			JR      Z,LDIN			; Yes, so we're doing an indirect load from memory
	ex	af,af'                      ; 041B80 || 	ex	af,af'                      ; 041B3D || 041B80 08          4903  			EX      AF,AF'
	jp	nc,$041a33                  ; 041B81 || 	jp	nc,$0419f6                  ; 041B3E || 041B81 D2 33 1A 04 4904  			JP      NC,GROUP05_1		; Load single register direct; go here
	ld	c,$01                       ; 041B85 || 	ld	c,$01                       ; 041B42 || 041B85 0E 01       4905  			LD      C,1
	call	$041d8d                   ; 041B87 || 	call	$041d4a                   ; 041B44 || 041B87 CD 8D 1D 04 4906  			CALL    PAIR1_EX
	ret	c                          ; 041B8B || 	ret	c                          ; 041B48 || 041B8B D8          4907  			RET     C
	ld	a,$0e                       ; 041B8C || 	ld	a,$0e                       ; 041B49 || 041B8C 3E 0E       4908  			LD      A,14
	cp	b                           ; 041B8E || 	cp	b                           ; 041B4B || 041B8E B8          4909  			CP      B
	ld	b,a                         ; 041B8F || 	ld	b,a                         ; 041B4C || 041B8F 47          4910  			LD      B,A
	call	z,$041d88                 ; 041B90 || 	call	z,$041d45                 ; 041B4D || 041B90 CC 88 1D 04 4911  			CALL    Z,PAIR_EX
	ld	a,b                         ; 041B94 || 	ld	a,b                         ; 041B51 || 041B94 78          4912  			LD      A,B
	and	$3f                        ; 041B95 || 	and	$3f                        ; 041B52 || 041B95 E6 3F       4913  			AND     3FH
	cp	$0c                         ; 041B97 || 	cp	$0c                         ; 041B54 || 041B97 FE 0C       4914  			CP      12
	ld	a,c                         ; 041B99 || 	ld	a,c                         ; 041B56 || 041B99 79          4915  			LD      A,C
	jp	nz,$041b21                  ; 041B9A || 	jp	nz,$041ade                  ; 041B57 || 041B9A C2 21 1B 04 4916  			JP      NZ,GROUP12_1		; Load register pair direct; go here
	ld	a,$f9                       ; 041B9E || 	ld	a,$f9                       ; 041B5B || 041B9E 3E F9       4917  			LD      A,0F9H
	jp	$041d35                     ; 041BA0 || 	jp	$041cf2                     ; 041B5D || 041BA0 C3 35 1D 04 4918  			JP      BYTE_
	ex	af,af'                      ; 041BA4 || 	ex	af,af'                      ; 041B61 || 041BA4 08          4920  LDIN:			EX      AF,AF'
	push	bc                        ; 041BA5 || 	push	bc                        ; 041B62 || 041BA5 C5          4921  			PUSH    BC
	call	nc,$041d66                ; 041BA6 || 	call	nc,$041d23                ; 041B63 || 041BA6 D4 66 1D 04 4922  			CALL    NC,REGLO
	ld	a,c                         ; 041BAA || 	ld	a,c                         ; 041B67 || 041BAA 79          4923  			LD      A,C
	pop	bc                         ; 041BAB || 	pop	bc                         ; 041B68 || 041BAB C1          4924  			POP     BC
	jp	nc,$041d06                  ; 041BAC || 	jp	nc,$041cc3                  ; 041B69 || 041BAC D2 06 1D 04 4925  			JP      NC,BIND
	ld	c,$0a                       ; 041BB0 || 	ld	c,$0a                       ; 041B6D || 041BB0 0E 0A       4926  			LD      C,0AH
	call	$041d8d                   ; 041BB2 || 	call	$041d4a                   ; 041B6F || 041BB2 CD 8D 1D 04 4927  			CALL    PAIR1_EX
	call	$041cda                   ; 041BB6 || 	call	$041c97                   ; 041B73 || 041BB6 CD DA 1C 04 4928  			CALL    LD16
	jp	nc,$041b21                  ; 041BBA || 	jp	nc,$041ade                  ; 041B77 || 041BBA D2 21 1B 04 4929  			JP      NC,GROUP12_1
	call	$041d46                   ; 041BBE || 	call	$041d03                   ; 041B7B || 041BBE CD 46 1D 04 4930  			CALL    NUMBER
	ld	c,$02                       ; 041BC2 || 	ld	c,$02                       ; 041B7F || 041BC2 0E 02       4931  			LD      C,2
	call	$041d88                   ; 041BC4 || 	call	$041d45                   ; 041B81 || 041BC4 CD 88 1D 04 4932  			CALL    PAIR_EX
	call	$041cda                   ; 041BC8 || 	call	$041c97                   ; 041B85 || 041BC8 CD DA 1C 04 4933  			CALL    LD16
	ret	c                          ; 041BCC || 	ret	c                          ; 041B89 || 041BCC D8          4934  			RET     C
	call	$041d35                   ; 041BCD || 	call	$041cf2                   ; 041B8A || 041BCD CD 35 1D 04 4935  			CALL    BYTE_
	bit	7,d                        ; 041BD1 || 	bit	7,d                        ; 041B8E || 041BD1 CB 7A       4936  			BIT	7,D			; Check the ADL flag
	jp	nz,$041cc4                  ; 041BD3 || 	jp	nz,$041c81                  ; 041B90 || 041BD3 C2 C4 1C 04 4937  			JP	NZ,VAL24 		; If it is set, then use 24-bit addresses
	jp	$041cb7                     ; 041BD7 || 	jp	$041c74                     ; 041B94 || 041BD7 C3 B7 1C 04 4938  			JP      VAL16			; Otherwise use 16-bit addresses
	sub	$01                        ; 041BDB || 	sub	$01                        ; 041B98 || 041BDB D6 01       4942  GROUP17:		SUB	1			; The number of opcodes in GROUP17
	jr	nc,$+$27                    ; 041BDD || 	jr	nc,$+$27                    ; 041B9A || 041BDD 30 25       4943  			JR	NC,OPTS
	call	$041d00                   ; 041BDF || 	call	$041cbd                   ; 041B9C || 041BDF CD 00 1D 04 4944  			CALL	ED			; Needs to be prefixed with ED
	call	$041d5a                   ; 041BE3 || 	call	$041d17                   ; 041BA0 || 041BE3 CD 5A 1D 04 4945  			CALL	REG			; Fetch the register
	jr	nc,$+$10                    ; 041BE7 || 	jr	nc,$+$10                    ; 041BA4 || 041BE7 30 0E       4946  			JR	NC,GROUP17_1		; It's just a register
	ld	a,$64                       ; 041BE9 || 	ld	a,$64                       ; 041BA6 || 041BE9 3E 64       4948  			LD	A,64H			; Opcode for TST n
	call	$041d35                   ; 041BEB || 	call	$041cf2                   ; 041BA8 || 041BEB CD 35 1D 04 4949  			CALL	BYTE_			; Write out the opcode
	call	$041d46                   ; 041BEF || 	call	$041d03                   ; 041BAC || 041BEF CD 46 1D 04 4950  			CALL	NUMBER			; Get the number
	jp	$041aff                     ; 041BF3 || 	jp	$041abc                     ; 041BB0 || 041BF3 C3 FF 1A 04 4951  			JP	VAL8			; And write that out
	ld	a,b                         ; 041BF7 || 	ld	a,b                         ; 041BB4 || 041BF7 78          4953  GROUP17_1:		LD	A,B			; Check the register rangs
	cp	$08                         ; 041BF8 || 	cp	$08                         ; 041BB5 || 041BF8 FE 08       4954  			CP	8
	ccf                            ; 041BFA || 	ccf                            ; 041BB7 || 041BFA 3F          4955  			CCF
	ret	c                          ; 041BFB || 	ret	c                          ; 041BB8 || 041BFB D8          4956  			RET	C			; Ret with carry flag set for error if out of range
	rlca                           ; 041BFC || 	rlca                           ; 041BB9 || 041BFC 07          4957  			RLCA				; Get the opcode value
	rlca                           ; 041BFD || 	rlca                           ; 041BBA || 041BFD 07          4958  			RLCA
	rlca                           ; 041BFE || 	rlca                           ; 041BBB || 041BFE 07          4959  			RLCA
	add	a,c                        ; 041BFF || 	add	a,c                        ; 041BBC || 041BFF 81          4960  			ADD	A,C			; Add the opcode base in
	jp	$041d35                     ; 041C00 || 	jp	$041cf2                     ; 041BBD || 041C00 C3 35 1D 04 4961  			JP	BYTE_
	sub	$02                        ; 041C04 || 	sub	$02                        ; 041BC1 || 041C04 D6 02       4966  OPTS:			SUB	2
	jr	nc,$+$2d                    ; 041C06 || 	jr	nc,$+$2d                    ; 041BC3 || 041C06 30 2B       4967  			JR	NC, DEFS
	cp	$ff                         ; 041C08 || 	cp	$ff                         ; 041BC5 || 041C08 FE FF       4968  			CP	1-2			; Check for ADL opcode
	jr	z,$+$15                     ; 041C0A || 	jr	z,$+$15                     ; 041BC7 || 041C0A 28 13       4969  			JR	Z, ADL_
	call	$041d46                   ; 041C0C || 	call	$041d03                   ; 041BC9 || 041C0C CD 46 1D 04 4971  OPT:			CALL    NUMBER			; Fetch the OPT value
	ld	hl,$044d40                  ; 041C10 || 	ld	hl,$044d40                  ; 041BCD || 041C10 21 40 4D 04 4972  			LD      HL,LISTON		; Address of the LISTON/OPT flag
	and	$07                        ; 041C14 || 	and	$07                        ; 041BD1 || 041C14 E6 07       4973  			AND	7			; Only interested in the first three bits
	ld	c,a                         ; 041C16 || 	ld	c,a                         ; 041BD3 || 041C16 4F          4974  			LD      C,A			; Store the new OPT value in C
	rld                            ; 041C17 || 	rld                            ; 041BD4 || 041C17 ED 6F       4975  			RLD				; Shift the top nibble of LISTON (OPT) into A
	and	$08                        ; 041C19 || 	and	$08                        ; 041BD6 || 041C19 E6 08       4976  			AND	8			; Clear the bottom three bits, preserving the ADL bit
	or	c                           ; 041C1B || 	or	c                           ; 041BD8 || 041C1B B1          4977  			OR	C			; OR in the new value
	rrd                            ; 041C1C || 	rrd                            ; 041BD9 || 041C1C ED 67       4978  			RRD				; And shift the nibble back in
	ret                            ; 041C1E || 	ret                            ; 041BDB || 041C1E C9          4979  			RET
	call	$041d46                   ; 041C1F || 	call	$041d03                   ; 041BDC || 041C1F CD 46 1D 04 4981  ADL_:			CALL	NUMBER			; Fetch the ADL value
	and	$01                        ; 041C23 || 	and	$01                        ; 041BE0 || 041C23 E6 01       4982  			AND	1			; Only interested if it is 0 or 1
	rrca                           ; 041C25 || 	rrca                           ; 041BE2 || 041C25 0F          4983  			RRCA				; Rotate to bit 7
	ld	c,a                         ; 041C26 || 	ld	c,a                         ; 041BE3 || 041C26 4F          4984  			LD	C,A			; Store in C
	ld	a,($044d40)                 ; 041C27 || 	ld	a,($044d40)                 ; 041BE4 || 041C27 3A 40 4D 04 4985  			LD	A,(LISTON)		; Get the LISTON system variable
	and	$7f                        ; 041C2B || 	and	$7f                        ; 041BE8 || 041C2B E6 7F       4986  			AND	7Fh			; Clear bit 7
	or	c                           ; 041C2D || 	or	c                           ; 041BEA || 041C2D B1          4987  			OR	C			; OR in the ADL value
	ld	($044d40),a                 ; 041C2E || 	ld	($044d40),a                 ; 041BEB || 041C2E 32 40 4D 04 4988  			LD	(LISTON),A		; Store
	ret                            ; 041C32 || 	ret                            ; 041BEF || 041C32 C9          4989  			RET
	or	a                           ; 041C33 || 	or	a                           ; 041BF0 || 041C33 B7          4993  DEFS:			OR	A			; Handle DEFB
	jp	z,$041a40                   ; 041C34 || 	jp	z,$041a03                   ; 041BF1 || 041C34 CA 40 1A 04 4994  			JP	Z, DB_
	dec	a                          ; 041C38 || 	dec	a                          ; 041BF5 || 041C38 3D          4995  			DEC	A			; Handle DEFW
	jp	z,$041cb3                   ; 041C39 || 	jp	z,$041c70                   ; 041BF6 || 041C39 CA B3 1C 04 4996  			JP	Z, ADDR16
	dec	a                          ; 041C3D || 	dec	a                          ; 041BFA || 041C3D 3D          4997  			DEC	A			; Handle DEFL
	jp	z,$041cc0                   ; 041C3E || 	jp	z,$041c7d                   ; 041BFB || 041C3E CA C0 1C 04 4998  			JP	Z, ADDR24
	push	ix                        ; 041C42 || 	push	ix                        ; 041BFF || 041C42 DD E5       5000  			PUSH    IX			; Handle DEFM
	call	$040325                   ; 041C44 || 	call	$040315                   ; 041C01 || 041C44 CD 25 03 04 5001  			CALL    EXPRS
	pop	ix                         ; 041C48 || 	pop	ix                         ; 041C05 || 041C48 DD E1       5002  			POP     IX
	ld	hl,$044a00                  ; 041C4A || 	ld	hl,$044a00                  ; 041C07 || 041C4A 21 00 4A 04 5003  			LD      HL,ACCS
	xor	a                          ; 041C4E || 	xor	a                          ; 041C0B || 041C4E AF          5004  @@:			XOR     A
	cp	e                           ; 041C4F || 	cp	e                           ; 041C0C || 041C4F BB          5005  			CP      E
	ret	z                          ; 041C50 || 	ret	z                          ; 041C0D || 041C50 C8          5006  			RET     Z
	ld	a,(hl)                      ; 041C51 || 	ld	a,(hl)                      ; 041C0E || 041C51 7E          5007  			LD      A,(HL)
	inc	hl                         ; 041C52 || 	inc	hl                         ; 041C0F || 041C52 23          5008  			INC     HL
	call	$041d35                   ; 041C53 || 	call	$041cf2                   ; 041C10 || 041C53 CD 35 1D 04 5009  			CALL    BYTE_
	dec	e                          ; 041C57 || 	dec	e                          ; 041C14 || 041C57 1D          5010  			DEC     E
	jr	$-$0a                       ; 041C58 || 	jr	$-$0a                       ; 041C15 || 041C58 18 F4       5011  			JR      @B
	ld	a,(iy)                      ; 041C5A || 	ld	a,(iy)                      ; 041C17 || 041C5A FD 7E 00    5016  EZ80SF_PART:		LD	A,(IY)			; Check for a dot
	cp	$2e                         ; 041C5D || 	cp	$2e                         ; 041C1A || 041C5D FE 2E       5017  			CP	'.'
	jr	z,$+$04                     ; 041C5F || 	jr	z,$+$04                     ; 041C1C || 041C5F 28 02       5018  			JR	Z, @F			; If present, then carry on processing the eZ80 suffix
	or	a                           ; 041C61 || 	or	a                           ; 041C1E || 041C61 B7          5019  			OR	A			; Reset the carry flag (no error)
	ret                            ; 041C62 || 	ret                            ; 041C1F || 041C62 C9          5020  			RET				; And return
	inc	iy                         ; 041C63 || 	inc	iy                         ; 041C20 || 041C63 FD 23       5021  @@:			INC	IY			; Skip the dot
	push	bc                        ; 041C65 || 	push	bc                        ; 041C22 || 041C65 C5          5022  			PUSH	BC			; Push the operand
	ld	hl,$04208e                  ; 041C66 || 	ld	hl,$04204b                  ; 041C23 || 041C66 21 8E 20 04 5023  			LD	HL,EZ80SFS_2		; Check the shorter fully qualified table (just LIL and SIS)
	call	$041da7                   ; 041C6A || 	call	$041d64                   ; 041C27 || 041C6A CD A7 1D 04 5024  			CALL	FIND			; Look up the operand
	jr	nc,$+$26                    ; 041C6E || 	jr	nc,$+$26                    ; 041C2B || 041C6E 30 24       5025  			JR	NC,EZ80SF_OK
	pop	bc                         ; 041C70 || 	pop	bc                         ; 041C2D || 041C70 C1          5026  			POP	BC			; Not found at this point, so will return with a C (error)
	ret                            ; 041C71 || 	ret                            ; 041C2E || 041C71 C9          5027  			RET
	ld	a,(iy)                      ; 041C72 || 	ld	a,(iy)                      ; 041C2F || 041C72 FD 7E 00    5029  EZ80SF_FULL:		LD	A,(IY)			; Check for a dot
	cp	$2e                         ; 041C75 || 	cp	$2e                         ; 041C32 || 041C75 FE 2E       5030  			CP	'.'
	jr	z,$+$04                     ; 041C77 || 	jr	z,$+$04                     ; 041C34 || 041C77 28 02       5031  			JR	Z,@F			; If present, then carry on processing the eZ80 suffix
	or	a                           ; 041C79 || 	or	a                           ; 041C36 || 041C79 B7          5032  			OR	A			; Reset the carry flag (no error)
	ret                            ; 041C7A || 	ret                            ; 041C37 || 041C7A C9          5033  			RET				; And return
	inc	iy                         ; 041C7B || 	inc	iy                         ; 041C38 || 041C7B FD 23       5034  @@:			INC	IY 			; Skip the dot
	push	bc                        ; 041C7D || 	push	bc                        ; 041C3A || 041C7D C5          5035  			PUSH	BC			; Push the operand
	ld	hl,$042086                  ; 041C7E || 	ld	hl,$042043                  ; 041C3B || 041C7E 21 86 20 04 5036  			LD	HL,EZ80SFS_1		; First check the fully qualified table
	call	$041da7                   ; 041C82 || 	call	$041d64                   ; 041C3F || 041C82 CD A7 1D 04 5037  			CALL	FIND 			; Look up the operand
	jr	nc,$+$0e                    ; 041C86 || 	jr	nc,$+$0e                    ; 041C43 || 041C86 30 0C       5038  			JR	NC,EZ80SF_OK		; Yes, we've found it, so go write it out
	call	$041ca3                   ; 041C88 || 	call	$041c60                   ; 041C45 || 041C88 CD A3 1C 04 5039  			CALL	EZ80SF_TABLE		; Get the correct shortcut table in HL based upon the ADL mode
	call	$041da7                   ; 041C8C || 	call	$041d64                   ; 041C49 || 041C8C CD A7 1D 04 5040  			CALL	FIND
	jr	nc,$+$04                    ; 041C90 || 	jr	nc,$+$04                    ; 041C4D || 041C90 30 02       5041  			JR	NC,EZ80SF_OK
	pop	bc                         ; 041C92 || 	pop	bc                         ; 041C4F || 041C92 C1          5042  			POP	BC			; Not found at this point, so will return with a C (error)
	ret                            ; 041C93 || 	ret                            ; 041C50 || 041C93 C9          5043  			RET
	ld	a,b                         ; 041C94 || 	ld	a,b                         ; 041C51 || 041C94 78          5045  EZ80SF_OK:		LD	A,B			; The operand value
	call	nc,$041d35                ; 041C95 || 	call	nc,$041cf2                ; 041C52 || 041C95 D4 35 1D 04 5046  			CALL	NC,BYTE_ 		; Write it out if found
	res	7,d                        ; 041C99 || 	res	7,d                        ; 041C56 || 041C99 CB BA       5047  			RES	7,D			; Clear the default ADL mode from the flags
	and	$02                        ; 041C9B || 	and	$02                        ; 041C58 || 041C9B E6 02       5048  			AND	2			; Check the second half of the suffix (.xxL)
	rrca                           ; 041C9D || 	rrca                           ; 041C5A || 041C9D 0F          5049  			RRCA				; Shift into bit 7
	rrca                           ; 041C9E || 	rrca                           ; 041C5B || 041C9E 0F          5050  			RRCA
	or	d                           ; 041C9F || 	or	d                           ; 041C5C || 041C9F B2          5051  			OR	D			; Or into bit 7 of D
	ld	d,a                         ; 041CA0 || 	ld	d,a                         ; 041C5D || 041CA0 57          5052  			LD	D,A
	pop	bc                         ; 041CA1 || 	pop	bc                         ; 041C5E || 041CA1 C1          5053  			POP	BC 			; Restore the operand
	ret                            ; 041CA2 || 	ret                            ; 041C5F || 041CA2 C9          5054  			RET
	ld	hl,$042097                  ; 041CA3 || 	ld	hl,$042054                  ; 041C60 || 041CA3 21 97 20 04 5056  EZ80SF_TABLE:		LD	HL,EZ80SFS_ADL0		; Return with the ADL0 lookup table
	bit	7,d                        ; 041CA7 || 	bit	7,d                        ; 041C64 || 041CA7 CB 7A       5057  			BIT 	7,D			; if bit 7 of D is 0
	ret	z                          ; 041CA9 || 	ret	z                          ; 041C66 || 041CA9 C8          5058  			RET	Z
	ld	hl,$0420a2                  ; 041CAA || 	ld	hl,$04205f                  ; 041C67 || 041CAA 21 A2 20 04 5059  			LD	HL,EZ80SFS_ADL1		; Otherwise return with the ADL1 lookup table
	ret                            ; 041CAE || 	ret                            ; 041C6B || 041CAE C9          5060  			RET
	bit	7,d                        ; 041CAF || 	bit	7,d                        ; 041C6C || 041CAF CB 7A       5062  ADDR_:			BIT	7,D			; Check the ADL flag
	jr	nz,$+$0f                    ; 041CB1 || 	jr	nz,$+$0f                    ; 041C6E || 041CB1 20 0D       5063  			JR	NZ,ADDR24 		; If it is set, then use 24-bit addresses
	call	$041d46                   ; 041CB3 || 	call	$041d03                   ; 041C70 || 041CB3 CD 46 1D 04 5065  ADDR16:			CALL	NUMBER			; Fetch an address (16-bit) and fall through to VAL16
	call	$041aff                   ; 041CB7 || 	call	$041abc                   ; 041C74 || 041CB7 CD FF 1A 04 5066  VAL16:			CALL    VAL8			; Write out a 16-bit value (HL)
	ld	a,h                         ; 041CBB || 	ld	a,h                         ; 041C78 || 041CBB 7C          5067  			LD      A,H
	jp	$041d35                     ; 041CBC || 	jp	$041cf2                     ; 041C79 || 041CBC C3 35 1D 04 5068  			JP      BYTE_
	call	$041d46                   ; 041CC0 || 	call	$041d03                   ; 041C7D || 041CC0 CD 46 1D 04 5070  ADDR24:			CALL    NUMBER			; Fetch an address (24-bit) and fall through to VAL24
	call	$041cb7                   ; 041CC4 || 	call	$041c74                   ; 041C81 || 041CC4 CD B7 1C 04 5071  VAL24:			CALL	VAL16			; Lower 16-bits are in HL
	exx                            ; 041CC8 || 	exx                            ; 041C85 || 041CC8 D9          5072  			EXX
	ld	a,l                         ; 041CC9 || 	ld	a,l                         ; 041C86 || 041CC9 7D          5073  			LD	A,L			; Upper 16-bits are in HL', just need L' to make up 24-bit value
	exx                            ; 041CCA || 	exx                            ; 041C87 || 041CCA D9          5074  			EXX
	jp	$041d35                     ; 041CCB || 	jp	$041cf2                     ; 041C88 || 041CCB C3 35 1D 04 5075  			JP	BYTE_
	cp	$04                         ; 041CCF || 	cp	$04                         ; 041C8C || 041CCF FE 04       5077  LDA:			CP      4
	call	c,$041d00                 ; 041CD1 || 	call	c,$041cbd                 ; 041C8E || 041CD1 DC 00 1D 04 5078  			CALL    C,ED
	ld	a,b                         ; 041CD5 || 	ld	a,b                         ; 041C92 || 041CD5 78          5079  			LD      A,B
	jp	$041d35                     ; 041CD6 || 	jp	$041cf2                     ; 041C93 || 041CD6 C3 35 1D 04 5080  			JP      BYTE_
	ld	a,b                         ; 041CDA || 	ld	a,b                         ; 041C97 || 041CDA 78          5082  LD16:			LD      A,B
	jr	c,$+$11                     ; 041CDB || 	jr	c,$+$11                     ; 041C98 || 041CDB 38 0F       5083  			JR      C,LD8
	ld	a,b                         ; 041CDD || 	ld	a,b                         ; 041C9A || 041CDD 78          5084  			LD      A,B
	and	$3f                        ; 041CDE || 	and	$3f                        ; 041C9B || 041CDE E6 3F       5085  			AND     3FH
	cp	$0c                         ; 041CE0 || 	cp	$0c                         ; 041C9D || 041CE0 FE 0C       5086  			CP      12
	ld	a,c                         ; 041CE2 || 	ld	a,c                         ; 041C9F || 041CE2 79          5087  			LD      A,C
	ret	z                          ; 041CE3 || 	ret	z                          ; 041CA0 || 041CE3 C8          5088  			RET     Z
	call	$041d00                   ; 041CE4 || 	call	$041cbd                   ; 041CA1 || 041CE4 CD 00 1D 04 5089  			CALL    ED
	ld	a,c                         ; 041CE8 || 	ld	a,c                         ; 041CA5 || 041CE8 79          5090  			LD      A,C
	or	$43                         ; 041CE9 || 	or	$43                         ; 041CA6 || 041CE9 F6 43       5091  			OR      43H
	ret                            ; 041CEB || 	ret                            ; 041CA8 || 041CEB C9          5092  			RET
	cp	$07                         ; 041CEC || 	cp	$07                         ; 041CA9 || 041CEC FE 07       5094  LD8:			CP      7
	scf                            ; 041CEE || 	scf                            ; 041CAB || 041CEE 37          5095  			SCF
	ret	nz                         ; 041CEF || 	ret	nz                         ; 041CAC || 041CEF C0          5096  			RET     NZ
	ld	a,c                         ; 041CF0 || 	ld	a,c                         ; 041CAD || 041CF0 79          5097  			LD      A,C
	or	$30                         ; 041CF1 || 	or	$30                         ; 041CAE || 041CF1 F6 30       5098  			OR      30H
	ret                            ; 041CF3 || 	ret                            ; 041CB0 || 041CF3 C9          5099  			RET
	push	bc                        ; 041CF4 || 	push	bc                        ; 041CB1 || 041CF4 C5          5103  CORN:			PUSH    BC
	call	$041d14                   ; 041CF5 || 	call	$041cd1                   ; 041CB2 || 041CF5 CD 14 1D 04 5104  			CALL    OPND			; Get the operand
	bit	5,b                        ; 041CF9 || 	bit	5,b                        ; 041CB6 || 041CF9 CB 68       5105  			BIT     5,B
	pop	bc                         ; 041CFB || 	pop	bc                         ; 041CB8 || 041CFB C1          5106  			POP     BC
	jr	z,$+$4a                     ; 041CFC || 	jr	z,$+$4a                     ; 041CB9 || 041CFC 28 48       5107  			JR      Z,NUMBER		; If bit 5 is clear, then it's IN A,(N) or OUT (N),A, so fetch the port number
	ld	h,$ff                       ; 041CFE || 	ld	h,$ff                       ; 041CBB || 041CFE 26 FF       5108  			LD      H,-1			; At this point it's IN r,(C) or OUT (C),r, so flag by setting H to &FF
	ld	a,$ed                       ; 041D00 || 	ld	a,$ed                       ; 041CBD || 041D00 3E ED       5110  ED:			LD      A,0EDH			; Write an ED prefix out
	jr	$+$33                       ; 041D02 || 	jr	$+$33                       ; 041CBF || 041D02 18 31       5111  			JR      BYTE_
	ld	a,$cb                       ; 041D04 || 	ld	a,$cb                       ; 041CC1 || 041D04 3E CB       5113  CB:			LD      A,0CBH
	cp	$76                         ; 041D06 || 	cp	$76                         ; 041CC3 || 041D06 FE 76       5114  BIND:			CP      76H
	scf                            ; 041D08 || 	scf                            ; 041CC5 || 041D08 37          5115  			SCF
	ret	z                          ; 041D09 || 	ret	z                          ; 041CC6 || 041D09 C8          5116  			RET     Z               	; Reject LD (HL),(HL)
	call	$041d35                   ; 041D0A || 	call	$041cf2                   ; 041CC7 || 041D0A CD 35 1D 04 5117  			CALL    BYTE_
	bit	6,d                        ; 041D0E || 	bit	6,d                        ; 041CCB || 041D0E CB 72       5118  			BIT	6,D			; Check the index bit in flags
	ret	z                          ; 041D10 || 	ret	z                          ; 041CCD || 041D10 C8          5119  			RET     Z
	ld	a,e                         ; 041D11 || 	ld	a,e                         ; 041CCE || 041D11 7B          5120  			LD      A,E			; If there is an index, output the offset
	jr	$+$23                       ; 041D12 || 	jr	$+$23                       ; 041CCF || 041D12 18 21       5121  			JR      BYTE_
	push	hl                        ; 041D14 || 	push	hl                        ; 041CD1 || 041D14 E5          5130  OPND:			PUSH    HL			; Preserve HL
	ld	hl,$042018                  ; 041D15 || 	ld	hl,$041fd5                  ; 041CD2 || 041D15 21 18 20 04 5131  			LD      HL,OPRNDS		; The operands table
	call	$041da7                   ; 041D19 || 	call	$041d64                   ; 041CD6 || 041D19 CD A7 1D 04 5132  			CALL    FIND			; Find the operand
	pop	hl                         ; 041D1D || 	pop	hl                         ; 041CDA || 041D1D E1          5133  			POP     HL
	ret	c                          ; 041D1E || 	ret	c                          ; 041CDB || 041D1E D8          5134  			RET     C			; Return if not found
	bit	7,b                        ; 041D1F || 	bit	7,b                        ; 041CDC || 041D1F CB 78       5135  			BIT     7,B			; Check if it is an index register (IX, IY)
	ret	z                          ; 041D21 || 	ret	z                          ; 041CDE || 041D21 C8          5136  			RET     Z			; Return if it isn't
	set	6,d                        ; 041D22 || 	set	6,d                        ; 041CDF || 041D22 CB F2       5137  			SET	6,D			; Set flag to indicate we've got an index
	bit	3,b                        ; 041D24 || 	bit	3,b                        ; 041CE1 || 041D24 CB 58       5138  			BIT     3,B			; Check if an offset is required
	push	hl                        ; 041D26 || 	push	hl                        ; 041CE3 || 041D26 E5          5139  			PUSH    HL
	call	z,$041d3c                 ; 041D27 || 	call	z,$041cf9                 ; 041CE4 || 041D27 CC 3C 1D 04 5140  			CALL    Z,OFFSET_EX		; If bit 3 of B is zero, then get the offset
	ld	e,l                         ; 041D2B || 	ld	e,l                         ; 041CE8 || 041D2B 5D          5141  			LD      E,L			; E: The offset
	pop	hl                         ; 041D2C || 	pop	hl                         ; 041CE9 || 041D2C E1          5142  			POP     HL
	ld	a,$dd                       ; 041D2D || 	ld	a,$dd                       ; 041CEA || 041D2D 3E DD       5143  			LD	A,DDH			; IX prefix
	bit	6,b                        ; 041D2F || 	bit	6,b                        ; 041CEC || 041D2F CB 70       5144  			BIT     6,B			; If bit 6 is reset then
	jr	z,$+$04                     ; 041D31 || 	jr	z,$+$04                     ; 041CEE || 041D31 28 02       5145  			JR      Z,BYTE_			; It's an IX instruction, otherwise set
	ld	a,$fd                       ; 041D33 || 	ld	a,$fd                       ; 041CF0 || 041D33 3E FD       5146  			LD	A,FDH			; IY prefix
	ld	(ix),a                      ; 041D35 || 	ld	(ix),a                      ; 041CF2 || 041D35 DD 77 00    5148  BYTE_:			LD      (IX),A			; Write a byte out
	inc	ix                         ; 041D38 || 	inc	ix                         ; 041CF5 || 041D38 DD 23       5149  			INC     IX
	or	a                           ; 041D3A || 	or	a                           ; 041CF7 || 041D3A B7          5150  			OR      A
	ret                            ; 041D3B || 	ret                            ; 041CF8 || 041D3B C9          5151  			RET
	ld	a,(iy)                      ; 041D3C || 	ld	a,(iy)                      ; 041CF9 || 041D3C FD 7E 00    5153  OFFSET_EX:			LD      A,(IY)
	cp	$29                         ; 041D3F || 	cp	$29                         ; 041CFC || 041D3F FE 29       5154  			CP      ')'
	ld	hl,$000000                  ; 041D41 || 	ld	hl,$000000                  ; 041CFE || 041D41 21 00 00 00 5155  			LD      HL,0
	ret	z                          ; 041D45 || 	ret	z                          ; 041D02 || 041D45 C8          5156  			RET     Z
	call	$041df8                   ; 041D46 || 	call	$041db5                   ; 041D03 || 041D46 CD F8 1D 04 5157  NUMBER:			CALL    SKIP
	push	bc                        ; 041D4A || 	push	bc                        ; 041D07 || 041D4A C5          5158  			PUSH    BC
	push	de                        ; 041D4B || 	push	de                        ; 041D08 || 041D4B D5          5159  			PUSH    DE
	push	ix                        ; 041D4C || 	push	ix                        ; 041D09 || 041D4C DD E5       5160  			PUSH    IX
	call	$04031a                   ; 041D4E || 	call	$04030a                   ; 041D0B || 041D4E CD 1A 03 04 5161  			CALL    EXPRI
	pop	ix                         ; 041D52 || 	pop	ix                         ; 041D0F || 041D52 DD E1       5162  			POP     IX
	exx                            ; 041D54 || 	exx                            ; 041D11 || 041D54 D9          5163  			EXX
	pop	de                         ; 041D55 || 	pop	de                         ; 041D12 || 041D55 D1          5164  			POP     DE
	pop	bc                         ; 041D56 || 	pop	bc                         ; 041D13 || 041D56 C1          5165  			POP     BC
	ld	a,l                         ; 041D57 || 	ld	a,l                         ; 041D14 || 041D57 7D          5166  			LD      A,L
	or	a                           ; 041D58 || 	or	a                           ; 041D15 || 041D58 B7          5167  			OR      A
	ret                            ; 041D59 || 	ret                            ; 041D16 || 041D59 C9          5168  			RET
	call	$041d14                   ; 041D5A || 	call	$041cd1                   ; 041D17 || 041D5A CD 14 1D 04 5170  REG:			CALL    OPND
	ret	c                          ; 041D5E || 	ret	c                          ; 041D1B || 041D5E D8          5171  			RET     C
	ld	a,b                         ; 041D5F || 	ld	a,b                         ; 041D1C || 041D5F 78          5172  			LD      A,B
	and	$3f                        ; 041D60 || 	and	$3f                        ; 041D1D || 041D60 E6 3F       5173  			AND     3FH
	cp	$08                         ; 041D62 || 	cp	$08                         ; 041D1F || 041D62 FE 08       5174  			CP      8
	ccf                            ; 041D64 || 	ccf                            ; 041D21 || 041D64 3F          5175  			CCF
	ret                            ; 041D65 || 	ret                            ; 041D22 || 041D65 C9          5176  			RET
	call	$041d5a                   ; 041D66 || 	call	$041d17                   ; 041D23 || 041D66 CD 5A 1D 04 5178  REGLO:			CALL    REG
	ret	c                          ; 041D6A || 	ret	c                          ; 041D27 || 041D6A D8          5179  			RET     C
	jr	$+$35                       ; 041D6B || 	jr	$+$35                       ; 041D28 || 041D6B 18 33       5180  			JR      ORC
	call	$041d5a                   ; 041D6D || 	call	$041d17                   ; 041D2A || 041D6D CD 5A 1D 04 5182  REGHI:			CALL    REG
	ret	c                          ; 041D71 || 	ret	c                          ; 041D2E || 041D71 D8          5183  			RET     C
	jr	$+$2b                       ; 041D72 || 	jr	$+$2b                       ; 041D2F || 041D72 18 29       5184  			JR      SHL3
	call	$041d14                   ; 041D74 || 	call	$041cd1                   ; 041D31 || 041D74 CD 14 1D 04 5186  COND_:			CALL    OPND
	ret	c                          ; 041D78 || 	ret	c                          ; 041D35 || 041D78 D8          5187  			RET     C
	ld	a,b                         ; 041D79 || 	ld	a,b                         ; 041D36 || 041D79 78          5188  			LD      A,B
	and	$1f                        ; 041D7A || 	and	$1f                        ; 041D37 || 041D7A E6 1F       5189  			AND     1FH
	sub	$10                        ; 041D7C || 	sub	$10                        ; 041D39 || 041D7C D6 10       5190  			SUB     16
	jr	nc,$+$1f                    ; 041D7E || 	jr	nc,$+$1f                    ; 041D3B || 041D7E 30 1D       5191  			JR      NC,SHL3
	cp	$f1                         ; 041D80 || 	cp	$f1                         ; 041D3D || 041D80 FE F1       5192  			CP      -15
	scf                            ; 041D82 || 	scf                            ; 041D3F || 041D82 37          5193  			SCF
	ret	nz                         ; 041D83 || 	ret	nz                         ; 041D40 || 041D83 C0          5194  			RET     NZ
	ld	a,$03                       ; 041D84 || 	ld	a,$03                       ; 041D41 || 041D84 3E 03       5195  			LD      A,3
	jr	$+$17                       ; 041D86 || 	jr	$+$17                       ; 041D43 || 041D86 18 15       5196  			JR      SHL3
	call	$041d14                   ; 041D88 || 	call	$041cd1                   ; 041D45 || 041D88 CD 14 1D 04 5198  PAIR_EX:			CALL    OPND
	ret	c                          ; 041D8C || 	ret	c                          ; 041D49 || 041D8C D8          5199  			RET     C
	ld	a,b                         ; 041D8D || 	ld	a,b                         ; 041D4A || 041D8D 78          5200  PAIR1_EX:			LD      A,B
	and	$0f                        ; 041D8E || 	and	$0f                        ; 041D4B || 041D8E E6 0F       5201  			AND     0FH
	sub	$08                        ; 041D90 || 	sub	$08                        ; 041D4D || 041D90 D6 08       5202  			SUB     8
	ret	c                          ; 041D92 || 	ret	c                          ; 041D4F || 041D92 D8          5203  			RET     C
	jr	$+$0a                       ; 041D93 || 	jr	$+$0a                       ; 041D50 || 041D93 18 08       5204  			JR      SHL3
	call	$041d46                   ; 041D95 || 	call	$041d03                   ; 041D52 || 041D95 CD 46 1D 04 5206  BIT_:			CALL    NUMBER
	cp	$08                         ; 041D99 || 	cp	$08                         ; 041D56 || 041D99 FE 08       5207  			CP      8
	ccf                            ; 041D9B || 	ccf                            ; 041D58 || 041D9B 3F          5208  			CCF
	ret	c                          ; 041D9C || 	ret	c                          ; 041D59 || 041D9C D8          5209  			RET     C
	rlca                           ; 041D9D || 	rlca                           ; 041D5A || 041D9D 07          5210  SHL3:			RLCA
	rlca                           ; 041D9E || 	rlca                           ; 041D5B || 041D9E 07          5211  			RLCA
	rlca                           ; 041D9F || 	rlca                           ; 041D5C || 041D9F 07          5212  			RLCA
	or	c                           ; 041DA0 || 	or	c                           ; 041D5D || 041DA0 B1          5213  ORC:			OR      C
	ld	c,a                         ; 041DA1 || 	ld	c,a                         ; 041D5E || 041DA1 4F          5214  			LD      C,A
	ret                            ; 041DA2 || 	ret                            ; 041D5F || 041DA2 C9          5215  			RET
	ld	hl,$04205d                  ; 041DA3 || 	ld	hl,$04201a                  ; 041D60 || 041DA3 21 5D 20 04 5217  LDOP:			LD      HL,LDOPS
	call	$041df8                   ; 041DA7 || 	call	$041db5                   ; 041D64 || 041DA7 CD F8 1D 04 5228  FIND:			CALL    SKIP			; Skip delimiters
	ld	b,$00                       ; 041DAB || 	ld	b,$00                       ; 041D68 || 041DAB 06 00       5230  EXIT_:			LD      B,0			; Set B to 0
	scf                            ; 041DAD || 	scf                            ; 041D6A || 041DAD 37          5231  			SCF				; Set the carry flag
	ret	z                          ; 041DAE || 	ret	z                          ; 041D6B || 041DAE C8          5232  			RET     Z			; Returns if Z
	cp	$dd                         ; 041DAF || 	cp	$dd                         ; 041D6C || 041DAF FE DD       5234  			CP      DEF_			; Special case for token DEF (used in DEFB, DEFW, DEFL, DEFM)
	jr	z,$+$06                     ; 041DB1 || 	jr	z,$+$06                     ; 041D6E || 041DB1 28 04       5235  			JR      Z,FIND0
	cp	$85                         ; 041DB3 || 	cp	$85                         ; 041D70 || 041DB3 FE 85       5236  			CP      TOR+1			; Special case for tokens AND and OR
	ccf                            ; 041DB5 || 	ccf                            ; 041D72 || 041DB5 3F          5237  			CCF
	ret	c                          ; 041DB6 || 	ret	c                          ; 041D73 || 041DB6 D8          5238  			RET     C
	ld	a,(hl)                      ; 041DB7 || 	ld	a,(hl)                      ; 041D74 || 041DB7 7E          5239  FIND0:			LD      A,(HL)			; Check for the end of the table (0 byte marker)
	or	a                           ; 041DB8 || 	or	a                           ; 041D75 || 041DB8 B7          5240  			OR      A
	jr	z,$-$0e                     ; 041DB9 || 	jr	z,$-$0e                     ; 041D76 || 041DB9 28 F0       5241  			JR      Z,EXIT_			; Exit
	xor	(iy)                       ; 041DBB || 	xor	(iy)                       ; 041D78 || 041DBB FD AE 00    5242  			XOR     (IY)
	and	$5f                        ; 041DBE || 	and	$5f                        ; 041D7B || 041DBE E6 5F       5243  			AND     01011111B
	jr	z,$+$0b                     ; 041DC0 || 	jr	z,$+$0b                     ; 041D7D || 041DC0 28 09       5244  			JR      Z,FIND2
	bit	7,(hl)                     ; 041DC2 || 	bit	7,(hl)                     ; 041D7F || 041DC2 CB 7E       5245  FIND1:			BIT     7,(HL)
	inc	hl                         ; 041DC4 || 	inc	hl                         ; 041D81 || 041DC4 23          5246  			INC     HL
	jr	z,$-$03                     ; 041DC5 || 	jr	z,$-$03                     ; 041D82 || 041DC5 28 FB       5247  			JR      Z,FIND1
	inc	hl                         ; 041DC7 || 	inc	hl                         ; 041D84 || 041DC7 23          5248  			INC     HL
	inc	b                          ; 041DC8 || 	inc	b                          ; 041D85 || 041DC8 04          5249  			INC     B
	jr	$-$12                       ; 041DC9 || 	jr	$-$12                       ; 041D86 || 041DC9 18 EC       5250  			JR      FIND0
	push	iy                        ; 041DCB || 	push	iy                        ; 041D88 || 041DCB FD E5       5252  FIND2:			PUSH    IY
	bit	7,(hl)                     ; 041DCD || 	bit	7,(hl)                     ; 041D8A || 041DCD CB 7E       5253  FIND3:			BIT     7,(HL)			; Is this the end of token marker?
	inc	iy                         ; 041DCF || 	inc	iy                         ; 041D8C || 041DCF FD 23       5254  			INC     IY
	inc	hl                         ; 041DD1 || 	inc	hl                         ; 041D8E || 041DD1 23          5255  			INC     HL
	jr	nz,$+$13                    ; 041DD2 || 	jr	nz,$+$13                    ; 041D8F || 041DD2 20 11       5256  			JR      NZ,FIND5		; Yes
	cp	(hl)                        ; 041DD4 || 	cp	(hl)                        ; 041D91 || 041DD4 BE          5257  			CP      (HL)
	call	z,$041df7                 ; 041DD5 || 	call	z,$041db4                 ; 041D92 || 041DD5 CC F7 1D 04 5258  			CALL    Z,SKIP0
	ld	a,(hl)                      ; 041DD9 || 	ld	a,(hl)                      ; 041D96 || 041DD9 7E          5259  			LD      A,(HL)
	xor	(iy)                       ; 041DDA || 	xor	(iy)                       ; 041D97 || 041DDA FD AE 00    5260  			XOR     (IY)
	and	$5f                        ; 041DDD || 	and	$5f                        ; 041D9A || 041DDD E6 5F       5261  			AND     01011111B
	jr	z,$-$12                     ; 041DDF || 	jr	z,$-$12                     ; 041D9C || 041DDF 28 EC       5262  			JR      Z,FIND3
	pop	iy                         ; 041DE1 || 	pop	iy                         ; 041D9E || 041DE1 FD E1       5263  FIND4:			POP     IY
	jr	$-$21                       ; 041DE3 || 	jr	$-$21                       ; 041DA0 || 041DE3 18 DD       5264  			JR      FIND1
	call	$0417a3                   ; 041DE5 || 	call	$041766                   ; 041DA2 || 041DE5 CD A3 17 04 5266  FIND5:			CALL    DELIM			; Is it a delimiter?
	call	nz,$041e0c                ; 041DE9 || 	call	nz,$041dc9                ; 041DA6 || 041DE9 C4 0C 1E 04 5267  			CALL	NZ,DOT 			; No, so also check whether it is a dot character (for suffixes)
	call	nz,$041e06                ; 041DED || 	call	nz,$041dc3                ; 041DAA || 041DED C4 06 1E 04 5268  			CALL    NZ,SIGN			; No, so also check whether it is a SIGN character ('+' or '-')
	jr	nz,$-$10                    ; 041DF1 || 	jr	nz,$-$10                    ; 041DAE || 041DF1 20 EE       5269  			JR      NZ,FIND4		; If it is not a sign or a delimiter, then loop
	ld	a,b                         ; 041DF3 || 	ld	a,b                         ; 041DB0 || 041DF3 78          5271  FIND6:			LD      A,B			; At this point we have a token
	ld	b,(hl)                      ; 041DF4 || 	ld	b,(hl)                      ; 041DB1 || 041DF4 46          5272  			LD      B,(HL)			; Fetch the token type code
	pop	hl                         ; 041DF5 || 	pop	hl                         ; 041DB2 || 041DF5 E1          5273  			POP     HL			; Restore the stack
	ret                            ; 041DF6 || 	ret                            ; 041DB3 || 041DF6 C9          5274  			RET
	inc	hl                         ; 041DF7 || 	inc	hl                         ; 041DB4 || 041DF7 23          5276  SKIP0:			INC     HL
	call	$0417a3                   ; 041DF8 || 	call	$041766                   ; 041DB5 || 041DF8 CD A3 17 04 5277  SKIP:			CALL    DELIM			; Is it a delimiter?
	ret	nz                         ; 041DFC || 	ret	nz                         ; 041DB9 || 041DFC C0          5278  			RET     NZ			; No, so return
	call	$0417af                   ; 041DFD || 	call	$041772                   ; 041DBA || 041DFD CD AF 17 04 5279  			CALL    TERM			; Is it a terminator?
	ret	z                          ; 041E01 || 	ret	z                          ; 041DBE || 041E01 C8          5280  			RET     Z			; Yes, so return
	inc	iy                         ; 041E02 || 	inc	iy                         ; 041DBF || 041E02 FD 23       5281  			INC     IY			; Increment the basic program counter
	jr	$-$0c                       ; 041E04 || 	jr	$-$0c                       ; 041DC1 || 041E04 18 F2       5282  			JR      SKIP			; And loop
	cp	$2b                         ; 041E06 || 	cp	$2b                         ; 041DC3 || 041E06 FE 2B       5284  SIGN:			CP      '+'			; Check whether the character is a sign symbol
	ret	z                          ; 041E08 || 	ret	z                          ; 041DC5 || 041E08 C8          5285  			RET     Z
	cp	$2d                         ; 041E09 || 	cp	$2d                         ; 041DC6 || 041E09 FE 2D       5286  			CP      '-'
	ret                            ; 041E0B || 	ret                            ; 041DC8 || 041E0B C9          5287  			RET
	cp	$2e                         ; 041E0C || 	cp	$2e                         ; 041DC9 || 041E0C FE 2E       5289  DOT:			CP	'.'			; Check if it is a dot character
	ret                            ; 041E0E || 	ret                            ; 041DCB || 041E0E C9          5290  			RET
	ld	c,(hl)                      ; 041E0F || 	ld	c,(hl)                      ; 041DCC || 041E0F 4E 4F 50 00 5296  OPCODS:			DB	"NO","P"+80H,00h	; # 00h
	ld	c,a                         ; 041E10 || 	ld	c,a                         ; 041DCD
	ld	d,b                         ; 041E11
	nop                            ; 041E12 || 	nop                            ; 041DCF
	ld.sil	c,h                     ; 041E13 || 	ld.sil	c,h                     ; 041DD0 || 041E13 52 4C 43 41 5297  			DB	"RLC","A"+80H,07h
	ld	b,e                         ; 041E15 || 	ld	b,e                         ; 041DD2
	ld	b,c                         ; 041E16
	rlca                           ; 041E17 || 	rlca                           ; 041DD4
	ld	b,l                         ; 041E18 || 	ld	b,l                         ; 041DD5 || 041E18 45 58 00 41 5298  			DB	"EX",0,"AF",0,"AF","'"+80H,08h
	ld	e,b                         ; 041E19 || 	ld	e,b                         ; 041DD6
	nop                            ; 041E1A || 	nop                            ; 041DD7
	ld	b,c                         ; 041E1B || 	ld	b,c                         ; 041DD8
	ld	b,(hl)                      ; 041E1C || 	ld	b,(hl)                      ; 041DD9
	nop                            ; 041E1D || 	nop                            ; 041DDA
	ld	b,c                         ; 041E1E || 	ld	b,c                         ; 041DDB
	ld	b,(hl)                      ; 041E1F || 	ld	b,(hl)                      ; 041DDC
	daa                            ; 041E20
	ex	af,af'                      ; 041E21 || 	ex	af,af'                      ; 041DDE
	noni.sil                       ; 041E22 || 	noni.sil                       ; 041DDF || 041E22 52 52 43 41 5299  			DB	"RRC","A"+80H,0FH
	ld.sil	b,e                     ; 041E23 || 	ld.sil	b,e                     ; 041DE0
	ld	b,c                         ; 041E25
	rrca                           ; 041E26 || 	rrca                           ; 041DE3
	ld.sil	c,h                     ; 041E27 || 	ld.sil	c,h                     ; 041DE4 || 041E27 52 4C 41 17 5300  			DB	"RL","A"+80H,17H
	ld	b,c                         ; 041E29
	rla                            ; 041E2A || 	rla                            ; 041DE7
	noni.sil                       ; 041E2B || 	noni.sil                       ; 041DE8 || 041E2B 52 52 41 1F 5301  			DB	"RR","A"+80H,1FH
	ld.sil	b,c                     ; 041E2C
	rra                            ; 041E2E || 	rra                            ; 041DEB
	ld	b,h                         ; 041E2F || 	ld	b,h                         ; 041DEC || 041E2F 44 41 41 27 5302  			DB	"DA","A"+80H,27H
	ld	b,c                         ; 041E30 || 	ld	b,c                         ; 041DED
	ld	b,c                         ; 041E31
	daa                            ; 041E32
	ld	b,e                         ; 041E33                                         || 041E33 43 50 4C 2F 5303  			DB	"CP","L"+80H,2FH
	ld	d,b                         ; 041E34
	ld	c,h                         ; 041E35
	cpl                            ; 041E36
	ld	d,e                         ; 041E37                                         || 041E37 53 43 46 37 5304  			DB	"SC","F"+80H,37H
	ld	b,e                         ; 041E38
	ld	b,(hl)                      ; 041E39
	scf                            ; 041E3A
	ld	b,e                         ; 041E3B                                         || 041E3B 43 43 46 3F 5305  			DB	"CC","F"+80H,3FH
	ld	b,e                         ; 041E3C
	ld	b,(hl)                      ; 041E3D
	ccf                            ; 041E3E
	ld	c,b                         ; 041E3F                                         || 041E3F 48 41 4C 54 5306  			DB	"HAL","T"+80H,76H
	ld	b,c                         ; 041E40
	ld	c,h                         ; 041E41
	ld	d,h                         ; 041E42
	halt                           ; 041E43
	ld	b,l                         ; 041E44                                         || 041E44 45 58 58 D9 5307  			DB	"EX","X"+80H,D9H
	ld	e,b                         ; 041E45
	ld	e,b                         ; 041E46
	exx                            ; 041E47
	ld	b,l                         ; 041E48                                         || 041E48 45 58 00 44 5308  			DB	"EX",0,"DE",0,"H","L"+80H,EBH
	ld	e,b                         ; 041E49
	nop                            ; 041E4A
	ld	b,h                         ; 041E4B
	ld	b,l                         ; 041E4C
	nop                            ; 041E4D
	ld	c,b                         ; 041E4E
	ld	c,h                         ; 041E4F
	ex	de,hl                       ; 041E50
	ld	b,h                         ; 041E51                                         || 041E51 44 49 F3    5309  			DB	"D","I"+80H,F3H
	di.lis                         ; 041E52
	ld	b,l                         ; 041E54                                         || 041E54 45 49 FB    5310  			DB	"E","I"+80H,FBH
	ei.lis                         ; 041E55
	ld	c,(hl)                      ; 041E57                                         || 041E57 4E 45 47 44 5315  			DB	"NE","G"+80H,44H	; 0Fh
	ld	b,l                         ; 041E58
	ld	b,a                         ; 041E59
	ld	b,h                         ; 041E5A
	ld.lis	c,l                     ; 041E5B                                         || 041E5B 49 4D 00 30 5316  			DB	"IM",0,"0"+80H,46H
	nop                            ; 041E5D
	jr	nc,$+$48                    ; 041E5E
	ld.sil	b,l                     ; 041E60                                         || 041E60 52 45 54 4E 5317  			DB	"RET","N"+80H,45H
	ld	d,h                         ; 041E62
	ld	c,(hl)                      ; 041E63
	ld	b,l                         ; 041E64
	ld	c,l                         ; 041E65                                         || 041E65 4D 4C 54 00 5318  			DB	"MLT",0,"B","C"+80H,4CH
	ld	c,h                         ; 041E66
	ld	d,h                         ; 041E67
	nop                            ; 041E68
	ld	b,d                         ; 041E69
	ld	b,e                         ; 041E6A
	ld	c,h                         ; 041E6B
	ld.sil	b,l                     ; 041E6C                                         || 041E6C 52 45 54 49 5319  			DB	"RET","I"+80H,4DH
	ld	d,h                         ; 041E6E
	ld.lis	c,l                     ; 041E6F
	ld.lis	c,l                     ; 041E71                                         || 041E71 49 4D 00 31 5320  			DB	"IM",0,"1"+80H,56H
	nop                            ; 041E73
	ld	sp,$4c4d56                  ; 041E74
	ld	d,h                         ; 041E78
	nop                            ; 041E79
	ld	b,h                         ; 041E7A
	ld	b,l                         ; 041E7B
	ld	e,h                         ; 041E7C
	ld.lis	c,l                     ; 041E7D                                         || 041E7D 49 4D 00 32 5322  			DB	"IM",0,"2"+80H,5EH
	nop                            ; 041E7F
	ld	($52525e),a                 ; 041E80
	ld	b,h                         ; 041E84
	ld	h,a                         ; 041E85
	ld	c,l                         ; 041E86                                         || 041E86 4D 4C 54 00 5324  			DB	"MLT",0,"H","L"+80H,6CH
	ld	c,h                         ; 041E87
	ld	d,h                         ; 041E88
	nop                            ; 041E89
	ld	c,b                         ; 041E8A
	ld	c,h                         ; 041E8B
	ld	l,h                         ; 041E8C
	ld	c,h                         ; 041E8D                                         || 041E8D 4C 44 00 4D 5325  			DB	"LD",0,"MB",0,"A"+80H,6DH
	ld	b,h                         ; 041E8E
	nop                            ; 041E8F
	ld	c,l                         ; 041E90 || 	ld	c,l                         ; 041E4D
	ld	b,d                         ; 041E91 || 	ld	b,d                         ; 041E4E
	nop                            ; 041E92 || 	nop                            ; 041E4F
	ld	b,c                         ; 041E93
	ld	l,l                         ; 041E94 || 	ld	l,l                         ; 041E51
	ld	c,h                         ; 041E95 || 	ld	c,h                         ; 041E52 || 041E95 4C 44 00 41 5326  			DB	"LD",0,"A",0,"M","B"+80H,6EH
	ld	b,h                         ; 041E96 || 	ld	b,h                         ; 041E53
	nop                            ; 041E97 || 	nop                            ; 041E54
	ld	b,c                         ; 041E98 || 	ld	b,c                         ; 041E55
	nop                            ; 041E99 || 	nop                            ; 041E56
	ld	c,l                         ; 041E9A || 	ld	c,l                         ; 041E57
	ld	b,d                         ; 041E9B
	ld	l,(hl)                      ; 041E9C
	ld.sil	c,h                     ; 041E9D                                         || 041E9D 52 4C 44 6F 5327  			DB	"RL","D"+80H,6FH
	ld	b,h                         ; 041E9F
	ld	l,a                         ; 041EA0
	ld	d,e                         ; 041EA1                                         || 041EA1 53 4C 50 76 5328  			DB	"SL","P"+80H,76H
	ld	c,h                         ; 041EA2
	ld	d,b                         ; 041EA3
	halt                           ; 041EA4 || 	halt                           ; 041E61
	ld	c,l                         ; 041EA5 || 	ld	c,l                         ; 041E62 || 041EA5 4D 4C 54 00 5329  			DB	"MLT",0,"S","P"+80H,7CH
	ld	c,h                         ; 041EA6 || 	ld	c,h                         ; 041E63
	ld	d,h                         ; 041EA7 || 	ld	d,h                         ; 041E64
	nop                            ; 041EA8 || 	nop                            ; 041E65
	ld	d,e                         ; 041EA9 || 	ld	d,e                         ; 041E66
	ld	d,b                         ; 041EAA
	ld	a,h                         ; 041EAB || 	ld	a,h                         ; 041E68
	ld	d,e                         ; 041EAC || 	ld	d,e                         ; 041E69 || 041EAC 53 54 4D 49 5330  			DB	"STMI","X"+80H,7DH
	ld	d,h                         ; 041EAD || 	ld	d,h                         ; 041E6A
	ld	c,l                         ; 041EAE || 	ld	c,l                         ; 041E6B
	ld.lis	e,b                     ; 041EAF
	ld	a,l                         ; 041EB1 || 	ld	a,l                         ; 041E6E
	ld.sil	d,e                     ; 041EB2                                         || 041EB2 52 53 4D 49 5331  			DB	"RSMI","X"+80H,7EH
	ld	c,l                         ; 041EB4
	ld.lis	e,b                     ; 041EB5
	ld	a,(hl)                      ; 041EB7
	ld.lis	c,(hl)                  ; 041EB8                                         || 041EB8 49 4E 49 4D 5332  			DB	"INI","M"+80H,82H
	ld.lis	c,l                     ; 041EBA
	add	a,d                        ; 041EBC
	ld	c,a                         ; 041EBD                                         || 041EBD 4F 54 49 4D 5333  			DB	"OTI","M"+80H,83H
	ld	d,h                         ; 041EBE
	ld.lis	c,l                     ; 041EBF
	add	a,e                        ; 041EC1
	ld.lis	c,(hl)                  ; 041EC2                                         || 041EC2 49 4E 49 32 5334  			DB	"INI","2"+80H,84H
	ld.lis	($4984),a               ; 041EC4
	ld	c,(hl)                      ; 041EC8
	ld	b,h                         ; 041EC9
	ld	c,l                         ; 041ECA
	adc	a,d                        ; 041ECB
	ld	c,a                         ; 041ECC                                         || 041ECC 4F 54 44 4D 5336  			DB	"OTD","M"+80H,8BH
	ld	d,h                         ; 041ECD
	ld	b,h                         ; 041ECE
	ld	c,l                         ; 041ECF
	adc	a,e                        ; 041ED0
	ld.lis	c,(hl)                  ; 041ED1                                         || 041ED1 49 4E 44 32 5337  			DB	"IND","2"+80H,8CH
	ld	b,h                         ; 041ED3
	ld	($4e498c),a                 ; 041ED4
	ld.lis	c,l                     ; 041ED8
	sub.sil	d                      ; 041EDA
	ld	c,a                         ; 041EDC                                         || 041EDC 4F 54 49 4D 5339  			DB	"OTIM","R"+80H,93H
	ld	d,h                         ; 041EDD
	ld.lis	c,l                     ; 041EDE
	sub.sil	e                      ; 041EE0
	ld.lis	c,(hl)                  ; 041EE2                                         || 041EE2 49 4E 49 32 5340  			DB	"INI2","R"+80H,94H
	ld.lis	($9452),a               ; 041EE4
	ld.lis	c,(hl)                  ; 041EE8                                         || 041EE8 49 4E 44 4D 5341  			DB	"INDM","R"+80H,9AH
	ld	b,h                         ; 041EEA
	ld	c,l                         ; 041EEB
	sbc.sil	a,d                    ; 041EEC
	ld	c,a                         ; 041EEE                                         || 041EEE 4F 54 44 4D 5342  			DB	"OTDM","R"+80H,9BH
	ld	d,h                         ; 041EEF
	ld	b,h                         ; 041EF0
	ld	c,l                         ; 041EF1
	sbc.sil	a,e                    ; 041EF2
	ld.lis	c,(hl)                  ; 041EF4                                         || 041EF4 49 4E 44 32 5343  			DB	"IND2","R"+80H,9CH
	ld	b,h                         ; 041EF6
	ld	($4c9c52),a                 ; 041EF7
	ld	b,h                         ; 041EFB
	and.lis	b                      ; 041EFC
	ld	b,e                         ; 041EFE                                         || 041EFE 43 50 49 A1 5345  			DB	"CP","I"+80H,A1H
	ld	d,b                         ; 041EFF
	and.lis	c                      ; 041F00
	ld.lis	c,(hl)                  ; 041F02                                         || 041F02 49 4E 49 A2 5346  			DB	"IN","I"+80H,A2H
	and.lis	d                      ; 041F04
	ld	c,a                         ; 041F06                                         || 041F06 4F 55 54 49 5347  			DB	"OUTI","2"+80H,A4H	; These are swapped round so that FIND will find
	ld	d,l                         ; 041F07
	ld	d,h                         ; 041F08
	ld.lis	($4fa4),a               ; 041F09
	ld	d,l                         ; 041F0D
	ld	d,h                         ; 041F0E
	and.lis	e                      ; 041F0F
	ld	c,h                         ; 041F11                                         || 041F11 4C 44 44 A8 5349  			DB	"LD","D"+80H,A8H
	ld	b,h                         ; 041F12
	ld	b,h                         ; 041F13
	xor	b                          ; 041F14
	ld	b,e                         ; 041F15                                         || 041F15 43 50 44 A9 5350  			DB	"CP","D"+80H,A9H
	ld	d,b                         ; 041F16
	ld	b,h                         ; 041F17
	xor	c                          ; 041F18
	ld.lis	c,(hl)                  ; 041F19                                         || 041F19 49 4E 44 AA 5351  			DB	"IN","D"+80H,AAH
	ld	b,h                         ; 041F1B
	xor	d                          ; 041F1C
	ld	c,a                         ; 041F1D                                         || 041F1D 4F 55 54 44 5352  			DB	"OUTD","2"+80H,ACH	; Similarly these are swapped round so that FIND
	ld	d,l                         ; 041F1E
	ld	d,h                         ; 041F1F
	ld	b,h                         ; 041F20
	ld	($554fac),a                 ; 041F21
	ld	d,h                         ; 041F25
	ld	b,h                         ; 041F26
	xor	e                          ; 041F27
	ld	c,h                         ; 041F28                                         || 041F28 4C 44 49 52 5354  			DB	"LDI","R"+80H,B0H
	ld	b,h                         ; 041F29
	noni.lis                       ; 041F2A
	or.sil	b                       ; 041F2B
	ld	b,e                         ; 041F2D                                         || 041F2D 43 50 49 52 5355  			DB	"CPI","R"+80H,B1H
	ld	d,b                         ; 041F2E
	noni.lis                       ; 041F2F
	or.sil	c                       ; 041F30
	ld.lis	c,(hl)                  ; 041F32                                         || 041F32 49 4E 49 52 5356  			DB	"INI","R"+80H,B2H
	noni.lis                       ; 041F34
	or.sil	d                       ; 041F35
	ld	c,a                         ; 041F37                                         || 041F37 4F 54 49 52 5357  			DB	"OTI","R"+80H,B3H
	ld	d,h                         ; 041F38
	noni.lis                       ; 041F39
	or.sil	e                       ; 041F3A
	ld	c,a                         ; 041F3C                                         || 041F3C 4F 54 49 32 5358  			DB	"OTI2","R"+80H,B4H
	ld	d,h                         ; 041F3D
	ld.lis	($b452),a               ; 041F3E
	ld	c,h                         ; 041F42                                         || 041F42 4C 44 44 52 5359  			DB	"LDD","R"+80H,B8H
	ld	b,h                         ; 041F43
	ld	b,h                         ; 041F44
	cp.sil	b                       ; 041F45
	ld	b,e                         ; 041F47                                         || 041F47 43 50 44 52 5360  			DB	"CPD","R"+80H,B9H
	ld	d,b                         ; 041F48
	ld	b,h                         ; 041F49
	cp.sil	c                       ; 041F4A
	ld.lis	c,(hl)                  ; 041F4C                                         || 041F4C 49 4E 44 52 5361  			DB	"IND","R"+80H,BAH
	ld	b,h                         ; 041F4E
	cp.sil	d                       ; 041F4F
	ld	c,a                         ; 041F51                                         || 041F51 4F 54 44 52 5362  			DB	"OTD","R"+80H,BBH
	ld	d,h                         ; 041F52
	ld	b,h                         ; 041F53
	cp.sil	e                       ; 041F54
	ld	c,a                         ; 041F56                                         || 041F56 4F 54 44 32 5363  			DB	"OTD2","R"+80H,BCH
	ld	d,h                         ; 041F57
	ld	b,h                         ; 041F58
	ld	($49bc52),a                 ; 041F59
	ld	c,(hl)                      ; 041F5D
	noni.lis                       ; 041F5E
	ld.sil	e,b                     ; 041F5F
	jp	nz,$49544f                  ; 041F61
	ld.sil	e,b                     ; 041F65
	jp	$444e49                     ; 041F67
	ld.sil	e,b                     ; 041F6B
	jp	z,$44544f                   ; 041F6D
	ld.sil	e,b                     ; 041F71
	bit	0,d                        ; 041F73
	ld.lis	d,h                     ; 041F75
	noni.sis                       ; 041F77
	ld.sil	b,l                     ; 041F78                                         || 041F78 52 45 53 80 5372  			DB	"RE","S"+80H,80H
	ld	d,e                         ; 041F7A
	add	a,b                        ; 041F7B
	ld	d,e                         ; 041F7C                                         || 041F7C 53 45 54 C0 5373  			DB	"SE","T"+80H,C0H
	ld	b,l                         ; 041F7D
	ld	d,h                         ; 041F7E
	ret	nz                         ; 041F7F
	ld.sil	c,h                     ; 041F80                                         || 041F80 52 4C 43 00 5377  			DB	"RL","C"+80H,00H	; 47h
	ld	b,e                         ; 041F82
	nop                            ; 041F83
	noni.sil                       ; 041F84                                         || 041F84 52 52 43 08 5378  			DB	"RR","C"+80H,08H
	ld.sil	b,e                     ; 041F85
	ex	af,af'                      ; 041F87
	ld.sil	c,h                     ; 041F88                                         || 041F88 52 4C 10    5379  			DB	"R","L"+80H,10H
	djnz	$+$54                     ; 041F8A
	jr.sil	$+$56                   ; 041F8C
	ld	c,h                         ; 041F8F
	ld	b,c                         ; 041F90
	jr	nz,$+$55                    ; 041F91
	ld.sil	b,c                     ; 041F93
	jr	z,$+$55                     ; 041F95
	ld.sil	c,h                     ; 041F97
	jr	c,$+$52                     ; 041F99
	ld	c,a                         ; 041F9B
	ld	d,b                         ; 041F9C
	pop	bc                         ; 041F9D
	ld	d,b                         ; 041F9E                                         || 041F9E 50 55 53 48 5388  			DB	"PUS","H"+80H,C5H
	ld	d,l                         ; 041F9F
	ld	d,e                         ; 041FA0
	ld	c,b                         ; 041FA1
	push	bc                        ; 041FA2
	ld	b,l                         ; 041FA3                                         || 041FA3 45 58 00 28 5389  			DB	"EX",0,"(S","P"+80H,E3H
	ld	e,b                         ; 041FA4
	nop                            ; 041FA5
	jr	z,$+$55                     ; 041FA6
	ld	d,b                         ; 041FA8
	ex	(sp),hl                     ; 041FA9
	ld	d,e                         ; 041FAA                                         || 041FAA 53 55 42 90 5393  			DB	"SU","B"+80H,90H	; 51h
	ld	d,l                         ; 041FAB
	ld	b,d                         ; 041FAC
	sub	b                          ; 041FAD
	ld	b,c                         ; 041FAE                                         || 041FAE 41 4E 44 A0 5394  			DB	"AN","D"+80H,A0H
	ld	c,(hl)                      ; 041FAF
	ld	b,h                         ; 041FB0
	and	b                          ; 041FB1
	ld	e,b                         ; 041FB2                                         || 041FB2 58 4F 52 A8 5395  			DB	"XO","R"+80H,A8H
	ld	c,a                         ; 041FB3
	xor.sil	b                      ; 041FB4
	ld	c,a                         ; 041FB6                                         || 041FB6 4F 52 B0    5396  			DB	"O","R"+80H,B0H
	or.sil	b                       ; 041FB7
	ld	b,e                         ; 041FB9                                         || 041FB9 43 50 B8    5397  			DB	"C","P"+80H,B8H
	ld	d,b                         ; 041FBA
	cp	b                           ; 041FBB
	add	a,b                        ; 041FBC                                         || 041FBC 80 A0       5398  			DB	TAND,A0H		; 56h TAND: Tokenised AND
	and	b                          ; 041FBD
	add	a,h                        ; 041FBE                                         || 041FBE 84 B0       5399  			DB	TOR,B0H			; 57h TOR: Tokenised OR
	or	b                           ; 041FBF
	ld	b,c                         ; 041FC0                                         || 041FC0 41 44 44 80 5403  			DB	"AD","D"+80H,80H	; 58h
	ld	b,h                         ; 041FC1
	ld	b,h                         ; 041FC2
	add	a,b                        ; 041FC3
	ld	b,c                         ; 041FC4                                         || 041FC4 41 44 43 88 5404  			DB	"AD","C"+80H,88H
	ld	b,h                         ; 041FC5
	ld	b,e                         ; 041FC6
	adc	a,b                        ; 041FC7
	ld	d,e                         ; 041FC8                                         || 041FC8 53 42 43 98 5405  			DB	"SB","C"+80H,98H
	ld	b,d                         ; 041FC9
	ld	b,e                         ; 041FCA
	sbc	a,b                        ; 041FCB
	ld.lis	c,(hl)                  ; 041FCC                                         || 041FCC 49 4E 43 04 5409  			DB	"IN","C"+80H,04H	; 5Bh
	ld	b,e                         ; 041FCE
	inc	b                          ; 041FCF
	ld	b,h                         ; 041FD0                                         || 041FD0 44 45 43 05 5410  			DB	"DE","C"+80H,05H
	ld	b,l                         ; 041FD1
	ld	b,e                         ; 041FD2
	dec	b                          ; 041FD3
	ld.lis	c,(hl)                  ; 041FD4                                         || 041FD4 49 4E 30 00 5414  			DB	"IN","0"+80H,00H	; 5Dh
	jr	nc,$+$02                    ; 041FD6
	ld	c,a                         ; 041FD8                                         || 041FD8 4F 55 54 30 5415  			DB	"OUT","0"+80H,01H
	ld	d,l                         ; 041FD9
	ld	d,h                         ; 041FDA
	jr	nc,$+$03                    ; 041FDB
	ld.lis	c,(hl)                  ; 041FDD                                         || 041FDD 49 4E 40    5419  			DB	"I","N"+80H,40H		; 5Fh
	ld.sis	c,a                     ; 041FDF
	ld	d,l                         ; 041FE1
	ld	d,h                         ; 041FE2
	ld	b,c                         ; 041FE3
	ld	c,d                         ; 041FE4                                         || 041FE4 4A 52 20    5427  			DB	"J","R"+80H,20H		; 61h
	jr.sil	nz,$+$47                ; 041FE5
	ld	c,d                         ; 041FE8
	ld	c,(hl)                      ; 041FE9
	ld	e,d                         ; 041FEA
	djnz	$+$4c                     ; 041FEB
	ld	d,b                         ; 041FED
	jp	nz,$4c4143                  ; 041FEE
	ld	c,h                         ; 041FF2
	call	nz,$545352                ; 041FF3
	rst	$00                        ; 041FF7
	ld.sil	b,l                     ; 041FF8                                         || 041FF8 52 45 54 C0 5444  			DB	"RE","T"+80H,C0H	; 66h
	ld	d,h                         ; 041FFA
	ret	nz                         ; 041FFB
	ld	c,h                         ; 041FFC                                         || 041FFC 4C 44 40    5448  			DB	"L","D"+80H,40H		; 67h
	ld	b,h                         ; 041FFD
	ld.sis	d,h                     ; 041FFE
	ld	d,e                         ; 042000
	ld	d,h                         ; 042001
	inc	b                          ; 042002
	ld	c,a                         ; 042003                                         || 042003 4F 50 54 00 5457  			DB	"OP","T"+80H,00H	; 69h OPT
	ld	d,b                         ; 042004
	ld	d,h                         ; 042005
	nop                            ; 042006
	ld	b,c                         ; 042007                                         || 042007 41 44 4C 00 5458  			DB	"AD","L"+80H,00H	; 6Ah ADL
	ld	b,h                         ; 042008
	ld	c,h                         ; 042009
	nop                            ; 04200A
	ld	e,l                         ; 04200B                                         || 04200B 5D 42 00    5460  			DB	DEF_ & 7FH,"B"+80H,00H	; 6Bh Tokenised DEF + B
	ld	b,d                         ; 04200C
	nop                            ; 04200D
	ld	e,l                         ; 04200E                                         || 04200E 5D 57 00    5461  			DB	DEF_ & 7FH,"W"+80H,00H	; 6Ch Tokenised DEF + W
	ld	d,a                         ; 04200F
	nop                            ; 042010
	ld	e,l                         ; 042011                                         || 042011 5D 4C 00    5462  			DB	DEF_ & 7FH,"L"+80H,00H	; 6Dh Tokenised DEF + L
	ld	c,h                         ; 042012
	nop                            ; 042013
	ld	e,l                         ; 042014                                         || 042014 5D 4D 00    5463  			DB 	DEF_ & 7FH,"M"+80H,00H	; 6Eh Tokenised DEF + M
	ld	c,l                         ; 042015
	nop                            ; 042016
	nop                            ; 042017                                         || 042017 00          5465  			DB	0
	ld	b,d                         ; 042018                                         || 042018 42 00       5469  OPRNDS:			DB	"B"+80H, 00H
	nop                            ; 042019
	ld	b,e                         ; 04201A                                         || 04201A 43 01       5470  			DB	"C"+80H, 01H
	ld	bc,$450244                  ; 04201B
	inc	bc                         ; 04201F
	ld	c,b                         ; 042020                                         || 042020 48 04       5473  			DB	"H"+80H, 04H
	inc	b                          ; 042021
	ld	c,h                         ; 042022                                         || 042022 4C 05       5474  			DB	"L"+80H, 05H
	dec	b                          ; 042023
	jr	z,$+$4a                     ; 042024                                         || 042024 28 48 4C 06 5475  			DB	"(H","L"+80H,06H
	ld	c,h                         ; 042026
	ld	b,$41                       ; 042027
	rlca                           ; 042029
	jr	z,$+$4b                     ; 04202A                                         || 04202A 28 49 58 86 5477  			DB	"(I","X"+80H,86H
	ld	e,b                         ; 04202C
	add	a,(hl)                     ; 04202D
	jr	z,$+$4b                     ; 04202E                                         || 04202E 28 49 59 C6 5478  			DB	"(I","Y"+80H,C6H
	ld	e,c                         ; 042030
	add	a,$42                      ; 042031
	ld	b,e                         ; 042033
	ex	af,af'                      ; 042034
	ld	b,h                         ; 042035                                         || 042035 44 45 0A    5481  			DB	"D","E"+80H,0AH
	ld	b,l                         ; 042036
	ld	a,(bc)                      ; 042037
	ld	c,b                         ; 042038                                         || 042038 48 4C 0C    5482  			DB	"H","L"+80H,0CH
	ld	c,h                         ; 042039
	inc	c                          ; 04203A
	ld.lis	e,b                     ; 04203B                                         || 04203B 49 58 8C    5483  			DB	"I","X"+80H,8CH
	adc	a,h                        ; 04203D
	ld.lis	e,c                     ; 04203E                                         || 04203E 49 59 CC    5484  			DB	"I","Y"+80H,CCH
	call	z,$0e4641                 ; 042040
	ld	d,e                         ; 042044                                         || 042044 53 50 0E    5486  			DB	"S","P"+80H,0EH
	ld	d,b                         ; 042045
	ld	c,$4e                       ; 042046
	ld	e,d                         ; 042048
	djnz	$+$5c                     ; 042049
	ld	de,$12434e                  ; 04204B
	ld	d,b                         ; 04204F                                         || 04204F 50 4F 14    5491  			DB	"P","O"+80H,14H
	ld	c,a                         ; 042050
	inc	d                          ; 042051
	ld	d,b                         ; 042052                                         || 042052 50 45 15    5492  			DB	"P","E"+80H,15H
	ld	b,l                         ; 042053
	dec	d                          ; 042054
	ld	d,b                         ; 042055                                         || 042055 50 16       5493  			DB	"P"+80H,16H
	ld	d,$4d                       ; 042056
	rla                            ; 042058
	jr	z,$+$45                     ; 042059                                         || 042059 28 43 20    5496  			DB	"(","C"+80H,20H
	jr	nz,$+$02                    ; 04205B
	nop.lis                        ; 04205D                                         || 04205D 49 00 41 47 5502  LDOPS:			DB	"I",0,"A"+80H,47H
	ld	b,c                         ; 04205F
	ld	b,a                         ; 042060
	nop.sil                        ; 042061                                         || 042061 52 00 41 4F 5503  			DB	"R",0,"A"+80H,4FH
	ld	b,c                         ; 042063
	ld	c,a                         ; 042064
	ld	b,c                         ; 042065                                         || 042065 41 00 49 57 5504  			DB	"A",0,"I"+80H,57H
	nop                            ; 042066
	ld.lis	d,a                     ; 042067
	ld	b,c                         ; 042069                                         || 042069 41 00 52 5F 5505  			DB	"A",0,"R"+80H,5FH
	nop                            ; 04206A
	ld.sil	e,a                     ; 04206B
	jr	z,$+$44                     ; 04206D                                         || 04206D 28 42 43 00 5506  			DB	"(BC",0,"A"+80H,02h
	ld	b,e                         ; 04206F
	nop                            ; 042070
	ld	b,c                         ; 042071
	ld	(bc),a                      ; 042072
	jr	z,$+$46                     ; 042073                                         || 042073 28 44 45 00 5507  			DB	"(DE",0,"A"+80H,12H
	ld	b,l                         ; 042075
	nop                            ; 042076
	ld	b,c                         ; 042077
	ld	(de),a                      ; 042078
	ld	b,c                         ; 042079                                         || 042079 41 00 28 42 5508  			DB	"A",0,"(B","C"+80H,0AH
	nop                            ; 04207A
	jr	z,$+$44                     ; 04207B
	ld	b,e                         ; 04207D
	ld	a,(bc)                      ; 04207E
	ld	b,c                         ; 04207F                                         || 04207F 41 00 28 44 5509  			DB	"A",0,"(D","E"+80H,1AH
	nop                            ; 042080
	jr	z,$+$46                     ; 042081
	ld	b,l                         ; 042083
	ld	a,(de)                      ; 042084
	nop                            ; 042085                                         || 042085 00          5511  			DB	0
	ld	c,h                         ; 042086                                         || 042086 4C 49 53 49 5517  EZ80SFS_1:		DB	"LI","S"+80H,49H
	ld.lis	d,e                     ; 042087
	ld.lis	d,e                     ; 042089
	ld.lis	c,h                     ; 04208B
	ld.sil	d,e                     ; 04208D
	ld.lis	d,e                     ; 04208F
	ld.sis	c,h                     ; 042091
	ld.lis	c,h                     ; 042093
	nop.lil                        ; 042095
	ld	d,e                         ; 042097                                         || 042097 53 40       5526  EZ80SFS_ADL0:		DB	"S"+80H,40H		; Equivalent to .SIS
	ld.sis	c,h                     ; 042098
	noni.lis                       ; 04209A
	ld.lis	d,e                     ; 04209B                                         || 04209B 49 53 40    5528  			DB	"I","S"+80H,40H		; Equivalent to .SIS
	noni.sis                       ; 04209D
	ld.lis	c,h                     ; 04209E                                         || 04209E 49 4C 52    5529  			DB	"I","L"+80H,52H		; Equivalent to .SIL
	nop.sil                        ; 0420A0
	ld	d,e                         ; 0420A2                                         || 0420A2 53 52       5535  EZ80SFS_ADL1:		DB	"S"+80H,52H		; Equivalent to .SIL
	ld.sil	c,h                     ; 0420A3
	noni.lil                       ; 0420A5
	ld.lis	d,e                     ; 0420A6                                         || 0420A6 49 53 49    5537  			DB	"I","S"+80H,49H		; Equivalent to .LIS
	noni.lis                       ; 0420A8
	ld.lis	c,h                     ; 0420A9                                         || 0420A9 49 4C 5B    5538  			DB	"I","L"+80H,5BH		; Equivalent to .LIL
	nop.lil                        ; 0420AB
	push	iy                        ; 0420AD                                         || 0420AD FD E5       5600  FPP:			PUSH    IY              ;Save IY
	ld	iy,$000000                  ; 0420AF                                         || 0420AF FD 21 00 00 5601          		LD      IY,0
	add	iy,sp                      ; 0420B4                                         || 0420B4 FD 39       5602          		ADD     IY,SP           ;Save SP in IY
	call	$0420c6                   ; 0420B6                                         || 0420B6 CD C6 20 04 5603          		CALL    OP              ;Perform operation
	cp	a                           ; 0420BA                                         || 0420BA BF          5604          		CP      A               ;Good return (Z, NC)
	pop	iy                         ; 0420BB                                         || 0420BB FD E1       5605  EXIT_FP_:			POP     IY              ;Restore IY
	ret                            ; 0420BD                                         || 0420BD C9          5606          		RET                     ;Return to caller
	ld	a,$01                       ; 0420BE                                         || 0420BE 3E 01       5610  BAD_FP:			LD      A,BADOP         ;"Bad operation code"
	ld	sp,iy                       ; 0420C0                                         || 0420C0 FD F9       5611  ERROR_FP_:			LD      SP,IY           ;Restore SP from IY
	or	a                           ; 0420C2 || 	or	a                           ; 04207F || 0420C2 B7          5612          		OR      A               ;Set NZ
	scf                            ; 0420C3 || 	scf                            ; 042080 || 0420C3 37          5613          		SCF                     ;Set C
	jr	$-$09                       ; 0420C4 || 	jr	$-$09                       ; 042081 || 0420C4 18 F5       5614          		JR      EXIT_FP_
	cp	$2a                         ; 0420C6 || 	cp	$2a                         ; 042083 || 0420C6 FE 2A       5619  OP:				CP      RTABLE-DTABLE/3 ; ez80asm doesn't do nested expressions
	jr	nc,$-$0a                    ; 0420C8 || 	jr	nc,$-$0a                    ; 042085 || 0420C8 30 F4       5621          		JR      NC,BAD_FP
	cp	$10                         ; 0420CA || 	cp	$10                         ; 042087 || 0420CA FE 10       5623  				CP      FTABLE-DTABLE/3 ; ditto
	jr	nc,$+$0a                    ; 0420CC || 	jr	nc,$+$0a                    ; 042089 || 0420CC 30 08       5624          		JR      NC,DISPAT_FP
	ex	af,af'                      ; 0420CE || 	ex	af,af'                      ; 04208B || 0420CE 08          5625          		EX      AF,AF'
	ld	a,b                         ; 0420CF || 	ld	a,b                         ; 04208C || 0420CF 78          5626          		LD      A,B
	or	c                           ; 0420D0 || 	or	c                           ; 04208D || 0420D0 B1          5627          		OR      C               ;Both integer?
	call	nz,$042bd9                ; 0420D1 || 	call	nz,$042b96                ; 04208E || 0420D1 C4 D9 2B 04 5628          		CALL    NZ,FLOATA       ;No, so float both
	ex	af,af'                      ; 0420D5 || 	ex	af,af'                      ; 042092 || 0420D5 08          5629          		EX      AF,AF'
	push	hl                        ; 0420D6 || 	push	hl                        ; 042093 || 0420D6 E5          5630  DISPAT_FP:			PUSH    HL
	ld	hl,$0420e9                  ; 0420D7 || 	ld	hl,$0420a6                  ; 042094 || 0420D7 21 E9 20 04 5631          		LD      HL,DTABLE
	push	bc                        ; 0420DB || 	push	bc                        ; 042098 || 0420DB C5          5632          		PUSH    BC
	ld	bc,$000003                  ; 0420DC || 	ld	bc,$000003                  ; 042099 || 0420DC 01 03 00 00 5633  			LD	BC, 3		; C = 3
	ld	b,a                         ; 0420E0 || 	ld	b,a                         ; 04209D || 0420E0 47          5634  			LD	B, A 		; B = op-code
	mlt	bc                         ; 0420E1 || 	mlt	bc                         ; 04209E || 0420E1 ED 4C       5635  			MLT 	BC 		;BC = op-code * 3
	add	hl,bc                      ; 0420E3 || 	add	hl,bc                      ; 0420A0 || 0420E3 09          5636  			ADD	HL, BC 		;Add to table base
	ld	hl,(hl)                     ; 0420E4 || 	ld	hl,(hl)                     ; 0420A1 || 0420E4 ED 27       5637  			LD	HL, (HL)	;Get the routine address (24-bit)
	pop	bc                         ; 0420E6 || 	pop	bc                         ; 0420A3 || 0420E6 C1          5648          		POP     BC
	ex	(sp),hl                     ; 0420E7 || 	ex	(sp),hl                     ; 0420A4 || 0420E7 E3          5649          		EX      (SP),HL
	ret                            ; 0420E8 || 	ret                            ; 0420A5 || 0420E8 C9          5650          		RET                     ;Off to routine
	sbc	a,e                        ; 0420E9                                         || 0420E9 9B 21 04    5654  DTABLE:			DW24  IAND            ;AND (INTEGER)
	ld	hl,$220904                  ; 0420EA || 	ld	hl,$21c604                  ; 0420A7
	inc	b                          ; 0420EE || 	inc	b                          ; 0420AB
	xor	(hl)                       ; 0420EF                                         || 0420EF AE 21 04    5656          		DW24  IEOR            ;EOR
	ld	hl,$21d404                  ; 0420F0 || 	ld	hl,$219104                  ; 0420AD
	inc	b                          ; 0420F4 || 	inc	b                          ; 0420B1
	pop	bc                         ; 0420F5                                         || 0420F5 C1 21 04    5658          		DW24  IOR             ;OR
	ld	hl,$248f04                  ; 0420F6 || 	ld	hl,$244c04                  ; 0420B3
	inc	b                          ; 0420FA || 	inc	b                          ; 0420B7
	sbc	a,(hl)                     ; 0420FB                                         || 0420FB 9E 24 04    5660          		DW24  INE             ;<>
	inc	h                          ; 0420FC
	inc	b                          ; 0420FD
	add	a,d                        ; 0420FE                                         || 0420FE 82 24 04    5661          		DW24  IGE             ;>=
	inc	h                          ; 0420FF
	inc	b                          ; 042100
	ld	h,a                         ; 042101                                         || 042101 67 24 04    5662          		DW24  ILT             ;<
	inc	h                          ; 042102
	inc	b                          ; 042103
	xor	e                          ; 042104                                         || 042104 AB 24 04    5663          		DW24  IEQ             ;=
	inc	h                          ; 042105
	inc	b                          ; 042106
	rst	$30                        ; 042107                                         || 042107 F7 22 04    5664          		DW24  IMUL            ;*
	ld	($223204),hl                ; 042108
	inc	b                          ; 04210C
	ld	(hl),h                      ; 04210D                                         || 04210D 74 24 04    5666          		DW24  IGT             ;>
	inc	h                          ; 04210E
	inc	b                          ; 04210F
	add	hl,de                      ; 042110                                         || 042110 19 22 04    5667          		DW24  ISUB            ;-
	ld	($23ae04),hl                ; 042111
	inc	b                          ; 042115
	and	h                          ; 042116                                         || 042116 A4 22 04    5669          		DW24  IDIV            ;/
	ld	($24bd04),hl                ; 042117
	inc	b                          ; 04211B
	and	e                          ; 04211C                                         || 04211C A3 28 04    5673          		DW24  ACS_FP             ;ACS
	jr	z,$+$06                     ; 04211D
	pop	hl                         ; 04211F                                         || 04211F E1 27 04    5674          		DW24  ASN_FP             ;ASN
	daa                            ; 042120
	inc	b                          ; 042121
	ld	de,$dc0428                  ; 042122                                         || 042122 11 28 04    5675          		DW24  ATN_FP             ;ATN
	dec	h                          ; 042126
	inc	b                          ; 042127
	ex	de,hl                       ; 042128                                         || 042128 EB 24 04    5677          		DW24  DEG_FP             ;DEG
	inc	h                          ; 042129
	inc	b                          ; 04212A
	sbc	a,b                        ; 04212B                                         || 04212B 98 26 04    5678          		DW24  EXP_FP             ;EXP
	ld	h,$04                       ; 04212C
	ccf                            ; 04212E                                         || 04212E 3F 25 04    5679          		DW24  INT_FP_            ;INT
	dec	h                          ; 04212F
	inc	b                          ; 042130
	ld	(hl),$27                    ; 042131                                         || 042131 36 27 04    5680          		DW24  LN_FP              ;LN
	inc	b                          ; 042133
	sla	a                          ; 042134                                         || 042134 CB 27 04    5681          		DW24  LOG_FP             ;LOG
	inc	b                          ; 042136
	ret                            ; 042137                                         || 042137 C9 24 04    5682          		DW24  NOTK_FP            ;NOT
	inc	h                          ; 042138
	inc	b                          ; 042139
	push	af                        ; 04213A                                         || 04213A F5 24 04    5683          		DW24  RAD_FP             ;RAD
	inc	h                          ; 04213B
	inc	b                          ; 04213C
	djnz	$+$27                     ; 04213D                                         || 04213D 10 25 04    5684          		DW24  SGN_FP             ;SGN
	inc	b                          ; 04213F
	jp	(hl)                        ; 042140                                         || 042140 E9 25 04    5685          		DW24  SIN_FP             ;SIN
	dec	h                          ; 042141
	inc	b                          ; 042142
	ld	e,b                         ; 042143                                         || 042143 58 25 04    5686          		DW24  SQR_FP             ;SQR
	dec	h                          ; 042144
	inc	b                          ; 042145
	or	(hl)                        ; 042146                                         || 042146 B6 25 04    5687          		DW24  TAN_FP             ;TAN
	dec	h                          ; 042147
	inc	b                          ; 042148
	ld	h,(hl)                      ; 042149                                         || 042149 66 2C 04    5689  		        DW24  ZERO_FP            ;ZERO
	inc	l                          ; 04214A
	inc	b                          ; 04214B
	ld	(hl),c                      ; 04214C                                         || 04214C 71 26 04    5690          		DW24  FONE_FP            ;FONE
	ld	h,$04                       ; 04214D
	or	b                           ; 04214F                                         || 04214F B0 24 04    5691          		DW24  TRUE_FP            ;TRUE
	inc	h                          ; 042150
	inc	b                          ; 042151
	inc	ixh                        ; 042152                                         || 042152 DD 24 04    5692          		DW24  PI_FP              ;PI
	inc	b                          ; 042154
	inc	h                          ; 042155                                         || 042155 24 25 04    5694  		        DW24  VAL_FP             ;VAL
	dec	h                          ; 042156
	inc	b                          ; 042157
	xor	h                          ; 042158                                         || 042158 AC 28 04    5695          		DW24  STR_FP             ;STR$
	jr	z,$+$06                     ; 042159
	dec	c                          ; 04215B                                         || 04215B 0D 2B 04    5697          		DW24  SFIX_FP            ;FIX
	dec	hl                         ; 04215C
	inc	b                          ; 04215D
	jp	(hl)                        ; 04215E                                         || 04215E E9 2B 04    5698          		DW24  SFLOAT_FP          ;FLOAT
	dec	hl                         ; 04215F
	inc	b                          ; 042160
	scf                            ; 042161                                         || 042161 37 2C 04    5700  		        DW24  FTEST_FP           ;TEST
	inc	l                          ; 042162
	inc	b                          ; 042163
	inc.lis	l                      ; 042164                                         || 042164 49 2C 04    5701          		DW24  FCOMP_FP           ;COMPARE
	inc	b                          ; 042166
	sub	a                          ; 042167                                         || 042167 97 21 04    5703  RTABLE:			DW24  FAND            ;AND (FLOATING-POINT)
	ld	hl,$220504                  ; 042168
	inc	b                          ; 04216C
	xor	d                          ; 04216D                                         || 04216D AA 21 04    5705          		DW24  FEOR            ;EOR
	ld	hl,$21d004                  ; 04216E
	inc	b                          ; 042172
	cp	l                           ; 042173                                         || 042173 BD 21 04    5707          		DW24  FFOR             ;OR
	ld	hl,$248904                  ; 042174
	inc	b                          ; 042178
	sbc	a,b                        ; 042179                                         || 042179 98 24 04    5709          		DW24  FNE             ;<>
	inc	h                          ; 04217A
	inc	b                          ; 04217B
	ld	a,h                         ; 04217C                                         || 04217C 7C 24 04    5710          		DW24  FGE             ;>=
	inc	h                          ; 04217D
	inc	b                          ; 04217E
	ld	h,c                         ; 04217F                                         || 04217F 61 24 04    5711          		DW24  FLT             ;<
	inc	h                          ; 042180
	inc	b                          ; 042181
	and	l                          ; 042182                                         || 042182 A5 24 04    5712          		DW24  FEQ             ;=
	inc	h                          ; 042183
	inc	b                          ; 042184
	ld	d,c                         ; 042185                                         || 042185 51 23 04    5713          		DW24  FMUL            ;*
	inc	hl                         ; 042186
	inc	b                          ; 042187
	ccf                            ; 042188                                         || 042188 3F 22 04    5714          		DW24  FADD            ;+
	ld	($246e04),hl                ; 042189
	inc	b                          ; 04218D
	ld	h,$22                       ; 04218E                                         || 04218E 26 22 04    5716          		DW24  FSUB            ;-
	inc	b                          ; 042190
	ld	l,$24                       ; 042191                                         || 042191 2E 24 04    5717          		DW24  FPOW            ;^
	inc	b                          ; 042193
	xor	b                          ; 042194                                         || 042194 A8 22 04    5718          		DW24  FDIV            ;/
	ld	($01cd04),hl                ; 042195
	dec	hl                         ; 042199
	inc	b                          ; 04219A
	ld	a,h                         ; 04219B                                         || 04219B 7C          5732  IAND:			LD      A,H
	and	d                          ; 04219C                                         || 04219C A2          5733          		AND     D
	ld	h,a                         ; 04219D                                         || 04219D 67          5734          		LD      H,A
	ld	a,l                         ; 04219E                                         || 04219E 7D          5735          		LD      A,L
	and	e                          ; 04219F                                         || 04219F A3          5736          		AND     E
	ld	l,a                         ; 0421A0                                         || 0421A0 6F          5737          		LD      L,A
	exx                            ; 0421A1 || 	exx                            ; 04215E || 0421A1 D9          5738          		EXX
	ld	a,h                         ; 0421A2 || 	ld	a,h                         ; 04215F || 0421A2 7C          5739          		LD      A,H
	and	d                          ; 0421A3 || 	and	d                          ; 042160 || 0421A3 A2          5740          		AND     D
	ld	h,a                         ; 0421A4 || 	ld	h,a                         ; 042161 || 0421A4 67          5741          		LD      H,A
	ld	a,l                         ; 0421A5 || 	ld	a,l                         ; 042162 || 0421A5 7D          5742          		LD      A,L
	and	e                          ; 0421A6 || 	and	e                          ; 042163 || 0421A6 A3          5743          		AND     E
	ld	l,a                         ; 0421A7 || 	ld	l,a                         ; 042164 || 0421A7 6F          5744          		LD      L,A
	exx                            ; 0421A8 || 	exx                            ; 042165 || 0421A8 D9          5745          		EXX
	ret                            ; 0421A9 || 	ret                            ; 042166 || 0421A9 C9          5746          		RET
	call	$042b01                   ; 0421AA || 	call	$042abe                   ; 042167 || 0421AA CD 01 2B 04 5751  FEOR:			CALL    FIX2
	ld	a,h                         ; 0421AE || 	ld	a,h                         ; 04216B || 0421AE 7C          5752  IEOR:			LD      A,H
	xor	d                          ; 0421AF || 	xor	d                          ; 04216C || 0421AF AA          5753          		XOR     D
	ld	h,a                         ; 0421B0 || 	ld	h,a                         ; 04216D || 0421B0 67          5754          		LD      H,A
	ld	a,l                         ; 0421B1 || 	ld	a,l                         ; 04216E || 0421B1 7D          5755          		LD      A,L
	xor	e                          ; 0421B2 || 	xor	e                          ; 04216F || 0421B2 AB          5756          		XOR     E
	ld	l,a                         ; 0421B3 || 	ld	l,a                         ; 042170 || 0421B3 6F          5757          		LD      L,A
	exx                            ; 0421B4 || 	exx                            ; 042171 || 0421B4 D9          5758          		EXX
	ld	a,h                         ; 0421B5 || 	ld	a,h                         ; 042172 || 0421B5 7C          5759          		LD      A,H
	xor	d                          ; 0421B6 || 	xor	d                          ; 042173 || 0421B6 AA          5760          		XOR     D
	ld	h,a                         ; 0421B7 || 	ld	h,a                         ; 042174 || 0421B7 67          5761          		LD      H,A
	ld	a,l                         ; 0421B8 || 	ld	a,l                         ; 042175 || 0421B8 7D          5762          		LD      A,L
	xor	e                          ; 0421B9 || 	xor	e                          ; 042176 || 0421B9 AB          5763          		XOR     E
	ld	l,a                         ; 0421BA || 	ld	l,a                         ; 042177 || 0421BA 6F          5764          		LD      L,A
	exx                            ; 0421BB || 	exx                            ; 042178 || 0421BB D9          5765          		EXX
	ret                            ; 0421BC || 	ret                            ; 042179 || 0421BC C9          5766          		RET
	call	$042b01                   ; 0421BD || 	call	$042abe                   ; 04217A || 0421BD CD 01 2B 04 5771  FFOR:			CALL    FIX2
	ld	a,h                         ; 0421C1 || 	ld	a,h                         ; 04217E || 0421C1 7C          5772  IOR:			LD      A,H
	or	d                           ; 0421C2 || 	or	d                           ; 04217F || 0421C2 B2          5773          		OR      D
	ld	h,a                         ; 0421C3 || 	ld	h,a                         ; 042180 || 0421C3 67          5774          		LD      H,A
	ld	a,l                         ; 0421C4 || 	ld	a,l                         ; 042181 || 0421C4 7D          5775          		LD      A,L
	or	e                           ; 0421C5 || 	or	e                           ; 042182 || 0421C5 B3          5776          		OR      E
	ld	l,a                         ; 0421C6 || 	ld	l,a                         ; 042183 || 0421C6 6F          5777          		LD      L,A
	exx                            ; 0421C7 || 	exx                            ; 042184 || 0421C7 D9          5778          		EXX
	ld	a,h                         ; 0421C8 || 	ld	a,h                         ; 042185 || 0421C8 7C          5779          		LD      A,H
	or	d                           ; 0421C9 || 	or	d                           ; 042186 || 0421C9 B2          5780          		OR      D
	ld	h,a                         ; 0421CA || 	ld	h,a                         ; 042187 || 0421CA 67          5781          		LD      H,A
	ld	a,l                         ; 0421CB || 	ld	a,l                         ; 042188 || 0421CB 7D          5782          		LD      A,L
	or	e                           ; 0421CC || 	or	e                           ; 042189 || 0421CC B3          5783          		OR      E
	ld	l,a                         ; 0421CD || 	ld	l,a                         ; 04218A || 0421CD 6F          5784          		LD      L,A
	exx                            ; 0421CE || 	exx                            ; 04218B || 0421CE D9          5785          		EXX
	ret                            ; 0421CF || 	ret                            ; 04218C || 0421CF C9          5786          		RET
	call	$042b01                   ; 0421D0 || 	call	$042abe                   ; 04218D || 0421D0 CD 01 2B 04 5791  FMOD:			CALL    FIX2
	ld	a,h                         ; 0421D4 || 	ld	a,h                         ; 042191 || 0421D4 7C          5792  IMOD:			LD      A,H
	xor	d                          ; 0421D5 || 	xor	d                          ; 042192 || 0421D5 AA          5793          		XOR     D               ;DIV RESULT SIGN
	bit	7,h                        ; 0421D6 || 	bit	7,h                        ; 042193 || 0421D6 CB 7C       5794          		BIT     7,H
	ex	af,af'                      ; 0421D8 || 	ex	af,af'                      ; 042195 || 0421D8 08          5795          		EX      AF,AF'
	bit	7,h                        ; 0421D9 || 	bit	7,h                        ; 042196 || 0421D9 CB 7C       5796          		BIT     7,H
	call	nz,$042b1d                ; 0421DB || 	call	nz,$042ada                ; 042198 || 0421DB C4 1D 2B 04 5797          		CALL    NZ,NEGATE       ;MAKE ARGUMENTS +VE
	call	$042c1a                   ; 0421DF || 	call	$042bd7                   ; 04219C || 0421DF CD 1A 2C 04 5798          		CALL    SWAP_FP
	bit	7,h                        ; 0421E3 || 	bit	7,h                        ; 0421A0 || 0421E3 CB 7C       5799          		BIT     7,H
	call	nz,$042b1d                ; 0421E5 || 	call	nz,$042ada                ; 0421A2 || 0421E5 C4 1D 2B 04 5800          		CALL    NZ,NEGATE
	ld	b,h                         ; 0421E9 || 	ld	b,h                         ; 0421A6 || 0421E9 44          5801          		LD      B,H
	ld	c,l                         ; 0421EA || 	ld	c,l                         ; 0421A7 || 0421EA 4D          5802          		LD      C,L
	ld	hl,$000000                  ; 0421EB || 	ld	hl,$000000                  ; 0421A8 || 0421EB 21 00 00 00 5803          		LD      HL,0
	exx                            ; 0421EF || 	exx                            ; 0421AC || 0421EF D9          5804          		EXX
	ld	b,h                         ; 0421F0 || 	ld	b,h                         ; 0421AD || 0421F0 44          5805          		LD      B,H
	ld	c,l                         ; 0421F1 || 	ld	c,l                         ; 0421AE || 0421F1 4D          5806          		LD      C,L
	ld	hl,$000000                  ; 0421F2 || 	ld	hl,$000000                  ; 0421AF || 0421F2 21 00 00 00 5807          		LD      HL,0
	ld	a,$df                       ; 0421F6 || 	ld	a,$df                       ; 0421B3 || 0421F6 3E DF       5808          		LD      A,-33
	call	$042da7                   ; 0421F8 || 	call	$042d64                   ; 0421B5 || 0421F8 CD A7 2D 04 5809          		CALL    DIVA            ;DIVIDE
	exx                            ; 0421FC || 	exx                            ; 0421B9 || 0421FC D9          5810          		EXX
	ld	c,$00                       ; 0421FD || 	ld	c,$00                       ; 0421BA || 0421FD 0E 00       5811          		LD      C,0             ;INTEGER MARKER
	ex	af,af'                      ; 0421FF || 	ex	af,af'                      ; 0421BC || 0421FF 08          5812          		EX      AF,AF'
	ret	z                          ; 042200 || 	ret	z                          ; 0421BD || 042200 C8          5813          		RET     Z
	jp	$042b1d                     ; 042201 || 	jp	$042ada                     ; 0421BE || 042201 C3 1D 2B 04 5814          		JP      NEGATE
	call	$042b01                   ; 042205 || 	call	$042abe                   ; 0421C2 || 042205 CD 01 2B 04 5818  FBDIV:			CALL    FIX2
	call	$0421d4                   ; 042209 || 	call	$042191                   ; 0421C6 || 042209 CD D4 21 04 5819  IBDIV:			CALL    IMOD
	or	a                           ; 04220D || 	or	a                           ; 0421CA || 04220D B7          5820          		OR      A
	call	$042c1a                   ; 04220E || 	call	$042bd7                   ; 0421CB || 04220E CD 1A 2C 04 5821          		CALL    SWAP_FP
	ld	c,$00                       ; 042212 || 	ld	c,$00                       ; 0421CF || 042212 0E 00       5822          		LD      C,0
	ret	p                          ; 042214 || 	ret	p                          ; 0421D1 || 042214 F0          5823          		RET     P
	jp	$042b1d                     ; 042215 || 	jp	$042ada                     ; 0421D2 || 042215 C3 1D 2B 04 5824          		JP      NEGATE
	call	$042cb5                   ; 042219 || 	call	$042c72                   ; 0421D6 || 042219 CD B5 2C 04 5829  ISUB:			CALL    SUB_
	ret	po                         ; 04221D || 	ret	po                         ; 0421DA || 04221D E0          5830          		RET     PO
	call	$042cad                   ; 04221E || 	call	$042c6a                   ; 0421DB || 04221E CD AD 2C 04 5831          		CALL    ADD_
	call	$042bdd                   ; 042222 || 	call	$042b9a                   ; 0421DF || 042222 CD DD 2B 04 5832          		CALL    FLOAT2
	ld	a,d                         ; 042226 || 	ld	a,d                         ; 0421E3 || 042226 7A          5833  FSUB:			LD      A,D
	xor	$80                        ; 042227 || 	xor	$80                        ; 0421E4 || 042227 EE 80       5834          		XOR     80H             ;CHANGE SIGN THEN ADD
	ld	d,a                         ; 042229 || 	ld	d,a                         ; 0421E6 || 042229 57          5835          		LD      D,A
	jr	$+$15                       ; 04222A || 	jr	$+$15                       ; 0421E7 || 04222A 18 13       5836          		JR      FADD
	ld	a,h                         ; 04222C || 	ld	a,h                         ; 0421E9 || 04222C 7C          5840  RSUB:			LD      A,H
	xor	$80                        ; 04222D || 	xor	$80                        ; 0421EA || 04222D EE 80       5841          		XOR     80H
	ld	h,a                         ; 04222F || 	ld	h,a                         ; 0421EC || 04222F 67          5842          		LD      H,A
	jr	$+$0f                       ; 042230 || 	jr	$+$0f                       ; 0421ED || 042230 18 0D       5843          		JR      FADD
	call	$042cad                   ; 042232 || 	call	$042c6a                   ; 0421EF || 042232 CD AD 2C 04 5848  IADD:			CALL    ADD_
	ret	po                         ; 042236 || 	ret	po                         ; 0421F3 || 042236 E0          5849          		RET     PO
	call	$042cb5                   ; 042237 || 	call	$042c72                   ; 0421F4 || 042237 CD B5 2C 04 5850          		CALL    SUB_
	call	$042bdd                   ; 04223B || 	call	$042b9a                   ; 0421F8 || 04223B CD DD 2B 04 5851          		CALL    FLOAT2
	dec	b                          ; 04223F || 	dec	b                          ; 0421FC || 04223F 05          5852  FADD:			DEC     B
	inc	b                          ; 042240 || 	inc	b                          ; 0421FD || 042240 04          5853          		INC     B
	ret	z                          ; 042241 || 	ret	z                          ; 0421FE || 042241 C8          5854          		RET     Z               ;ARG 2 ZERO
	dec	c                          ; 042242 || 	dec	c                          ; 0421FF || 042242 0D          5855          		DEC     C
	inc	c                          ; 042243 || 	inc	c                          ; 042200 || 042243 0C          5856          		INC     C
	jp	z,$042c1a                   ; 042244 || 	jp	z,$042bd7                   ; 042201 || 042244 CA 1A 2C 04 5857          		JP      Z,SWAP_FP          ;ARG 1 ZERO
	exx                            ; 042248 || 	exx                            ; 042205 || 042248 D9          5858          		EXX
	ld	bc,$000000                  ; 042249 || 	ld	bc,$000000                  ; 042206 || 042249 01 00 00 00 5859          		LD      BC,0            ;INITIALISE
	exx                            ; 04224D || 	exx                            ; 04220A || 04224D D9          5860          		EXX
	ld	a,h                         ; 04224E || 	ld	a,h                         ; 04220B || 04224E 7C          5861          		LD      A,H
	xor	d                          ; 04224F || 	xor	d                          ; 04220C || 04224F AA          5862          		XOR     D               ;XOR SIGNS
	push	af                        ; 042250 || 	push	af                        ; 04220D || 042250 F5          5863          		PUSH    AF
	ld	a,b                         ; 042251 || 	ld	a,b                         ; 04220E || 042251 78          5864          		LD      A,B
	cp	c                           ; 042252 || 	cp	c                           ; 04220F || 042252 B9          5865          		CP      C               ;COMPARE EXPONENTS
	call	c,$042c1a                 ; 042253 || 	call	c,$042bd7                 ; 042210 || 042253 DC 1A 2C 04 5866          		CALL    C,SWAP_FP          ;MAKE DED'E'B LARGEST
	ld	a,b                         ; 042257 || 	ld	a,b                         ; 042214 || 042257 78          5867          		LD      A,B
	set	7,h                        ; 042258 || 	set	7,h                        ; 042215 || 042258 CB FC       5868          		SET     7,H             ;IMPLIED 1
	call	nz,$042aee                ; 04225A || 	call	nz,$042aab                ; 042217 || 04225A C4 EE 2A 04 5869          		CALL    NZ,FIX          ;ALIGN
	pop	af                         ; 04225E || 	pop	af                         ; 04221B || 04225E F1          5870          		POP     AF
	ld	a,d                         ; 04225F || 	ld	a,d                         ; 04221C || 04225F 7A          5871          		LD      A,D             ;SIGN OF LARGER
	set	7,d                        ; 042260 || 	set	7,d                        ; 04221D || 042260 CB FA       5872          		SET     7,D             ;IMPLIED 1
	jp	m,$042272                   ; 042262 || 	jp	m,$04222f                   ; 04221F || 042262 FA 72 22 04 5873          		JP      M,FADD3         ;SIGNS DIFFERENT
	call	$042cad                   ; 042266 || 	call	$042c6a                   ; 042223 || 042266 CD AD 2C 04 5874          		CALL    ADD_             ;HLH'L'=HLH'L'+DED'E'
	call	c,$042c22                 ; 04226A || 	call	c,$042bdf                 ; 042227 || 04226A DC 22 2C 04 5875          		CALL    C,DIV2          ;NORMALISE
	set	7,h                        ; 04226E || 	set	7,h                        ; 04222B || 04226E CB FC       5876          		SET     7,H
	jr	$+$0f                       ; 042270 || 	jr	$+$0f                       ; 04222D || 042270 18 0D       5877          		JR      FADD4
	call	$042cb5                   ; 042272 || 	call	$042c72                   ; 04222F || 042272 CD B5 2C 04 5879  FADD3:			CALL    SUB_             ;HLH'L'=HLH'L'-DED'E'
	call	c,$042b35                 ; 042276 || 	call	c,$042af2                 ; 042233 || 042276 DC 35 2B 04 5880          		CALL    C,NEG_           ;NEGATE HLH'L'B'C'
	call	$042bb4                   ; 04227A || 	call	$042b71                   ; 042237 || 04227A CD B4 2B 04 5881          		CALL    FLO48
	cpl                            ; 04227E || 	cpl                            ; 04223B || 04227E 2F          5882          		CPL                     ;CHANGE RESULT SIGN
	exx                            ; 04227F || 	exx                            ; 04223C || 04227F D9          5883  FADD4:			EXX
	ex	de,hl                       ; 042280 || 	ex	de,hl                       ; 04223D || 042280 EB          5884          		EX      DE,HL
	ld	hl,$008000                  ; 042281 || 	ld	hl,$008000                  ; 04223E || 042281 21 00 80 00 5885          		LD      HL,8000H
	or	a                           ; 042285 || 	or	a                           ; 042242 || 042285 B7          5886          		OR      A               ;CLEAR CARRY
	sbc.sil	hl,bc                  ; 042286 || 	sbc.sil	hl,bc                  ; 042243 || 042286 52 ED 42    5887          		SBC.S   HL,BC
	ex	de,hl                       ; 042289 || 	ex	de,hl                       ; 042246 || 042289 EB          5888          		EX      DE,HL
	exx                            ; 04228A || 	exx                            ; 042247 || 04228A D9          5889          		EXX
	call	z,$042c14                 ; 04228B || 	call	z,$042bd1                 ; 042248 || 04228B CC 14 2C 04 5890          		CALL    Z,ODD           ;ROUND UNBIASSED
	call	c,$042c02                 ; 04228F || 	call	c,$042bbf                 ; 04224C || 04228F DC 02 2C 04 5891          		CALL    C,ADD1_FP          ;ROUND UP
	call	c,$042c2f                 ; 042293 || 	call	c,$042bec                 ; 042250 || 042293 DC 2F 2C 04 5892          		CALL    C,INCC
	res	7,h                        ; 042297 || 	res	7,h                        ; 042254 || 042297 CB BC       5893          		RES     7,H
	dec	c                          ; 042299 || 	dec	c                          ; 042256 || 042299 0D          5894          		DEC     C
	inc	c                          ; 04229A || 	inc	c                          ; 042257 || 04229A 0C          5895          		INC     C
	jp	z,$042c66                   ; 04229B || 	jp	z,$042c23                   ; 042258 || 04229B CA 66 2C 04 5896          		JP      Z,ZERO_FP
	or	a                           ; 04229F || 	or	a                           ; 04225C || 04229F B7          5897          		OR      A               ;RESULT SIGNQ
	ret	p                          ; 0422A0 || 	ret	p                          ; 04225D || 0422A0 F0          5898          		RET     P               ;POSITIVE
	set	7,h                        ; 0422A1 || 	set	7,h                        ; 04225E || 0422A1 CB FC       5899          		SET     7,H             ;NEGATIVE
	ret                            ; 0422A3 || 	ret                            ; 042260 || 0422A3 C9          5900          		RET
	call	$042bdd                   ; 0422A4 || 	call	$042b9a                   ; 042261 || 0422A4 CD DD 2B 04 5905  IDIV:			CALL    FLOAT2
	dec	b                          ; 0422A8 || 	dec	b                          ; 042265 || 0422A8 05          5906  FDIV:			DEC     B               ;TEST FOR ZERO
	inc	b                          ; 0422A9 || 	inc	b                          ; 042266 || 0422A9 04          5907          		INC     B
	ld	a,$12                       ; 0422AA || 	ld	a,$12                       ; 042267 || 0422AA 3E 12       5908          		LD      A,DIVBY0
	jp	z,$0420c0                   ; 0422AC || 	jp	z,$04207d                   ; 042269 || 0422AC CA C0 20 04 5909          		JP      Z,ERROR_FP_         ;"Division by zero"
	dec	c                          ; 0422B0 || 	dec	c                          ; 04226D || 0422B0 0D          5910          		DEC     C               ;TEST FOR ZERO
	inc	c                          ; 0422B1 || 	inc	c                          ; 04226E || 0422B1 0C          5911          		INC     C
	ret	z                          ; 0422B2 || 	ret	z                          ; 04226F || 0422B2 C8          5912          		RET     Z
	ld	a,h                         ; 0422B3 || 	ld	a,h                         ; 042270 || 0422B3 7C          5913          		LD      A,H
	xor	d                          ; 0422B4 || 	xor	d                          ; 042271 || 0422B4 AA          5914          		XOR     D               ;CALC. RESULT SIGN
	ex	af,af'                      ; 0422B5 || 	ex	af,af'                      ; 042272 || 0422B5 08          5915          		EX      AF,AF'          ;SAVE SIGN
	set	7,d                        ; 0422B6 || 	set	7,d                        ; 042273 || 0422B6 CB FA       5916          		SET     7,D             ;REPLACE IMPLIED 1's
	set	7,h                        ; 0422B8 || 	set	7,h                        ; 042275 || 0422B8 CB FC       5917          		SET     7,H
	push	bc                        ; 0422BA || 	push	bc                        ; 042277 || 0422BA C5          5918          		PUSH    BC              ;SAVE EXPONENTS
	ld	b,d                         ; 0422BB || 	ld	b,d                         ; 042278 || 0422BB 42          5919          		LD      B,D             ;LOAD REGISTERS
	ld	c,e                         ; 0422BC || 	ld	c,e                         ; 042279 || 0422BC 4B          5920          		LD      C,E
	ld	de,$000000                  ; 0422BD || 	ld	de,$000000                  ; 04227A || 0422BD 11 00 00 00 5921          		LD      DE,0
	exx                            ; 0422C1 || 	exx                            ; 04227E || 0422C1 D9          5922          		EXX
	ld	b,d                         ; 0422C2 || 	ld	b,d                         ; 04227F || 0422C2 42          5923          		LD      B,D
	ld	c,e                         ; 0422C3 || 	ld	c,e                         ; 042280 || 0422C3 4B          5924          		LD      C,E
	ld	de,$000000                  ; 0422C4 || 	ld	de,$000000                  ; 042281 || 0422C4 11 00 00 00 5925          		LD      DE,0
	ld	a,$e0                       ; 0422C8 || 	ld	a,$e0                       ; 042285 || 0422C8 3E E0       5926          		LD      A,-32           ;LOOP COUNTER
	call	$042da7                   ; 0422CA || 	call	$042d64                   ; 042287 || 0422CA CD A7 2D 04 5927          		CALL    DIVA            ;DIVIDE
	exx                            ; 0422CE || 	exx                            ; 04228B || 0422CE D9          5928          		EXX
	bit	7,d                        ; 0422CF || 	bit	7,d                        ; 04228C || 0422CF CB 7A       5929          		BIT     7,D
	exx                            ; 0422D1 || 	exx                            ; 04228E || 0422D1 D9          5930          		EXX
	call	z,$042dc6                 ; 0422D2 || 	call	z,$042d83                 ; 04228F || 0422D2 CC C6 2D 04 5931          		CALL    Z,DIVB          ;NORMALISE & INC A
	ex	de,hl                       ; 0422D6 || 	ex	de,hl                       ; 042293 || 0422D6 EB          5932          		EX      DE,HL
	exx                            ; 0422D7 || 	exx                            ; 042294 || 0422D7 D9          5933          		EXX
	srl	b                          ; 0422D8 || 	srl	b                          ; 042295 || 0422D8 CB 38       5934          		SRL     B               ;DIVISOR/2
	rr	c                           ; 0422DA || 	rr	c                           ; 042297 || 0422DA CB 19       5935          		RR      C
	or	a                           ; 0422DC || 	or	a                           ; 042299 || 0422DC B7          5936          		OR      A               ;CLEAR CARRY
	sbc.sil	hl,bc                  ; 0422DD || 	sbc.sil	hl,bc                  ; 04229A || 0422DD 52 ED 42    5937          		SBC.S   HL,BC           ;REMAINDER-DIVISOR/2
	ccf                            ; 0422E0 || 	ccf                            ; 04229D || 0422E0 3F          5938          		CCF
	ex	de,hl                       ; 0422E1 || 	ex	de,hl                       ; 04229E || 0422E1 EB          5939          		EX      DE,HL           ;RESULT IN HLH'L'
	call	z,$042c14                 ; 0422E2 || 	call	z,$042bd1                 ; 04229F || 0422E2 CC 14 2C 04 5940          		CALL    Z,ODD           ;ROUND UNBIASSED
	call	c,$042c02                 ; 0422E6 || 	call	c,$042bbf                 ; 0422A3 || 0422E6 DC 02 2C 04 5941          		CALL    C,ADD1_FP          ;ROUND UP
	pop	bc                         ; 0422EA || 	pop	bc                         ; 0422A7 || 0422EA C1          5942          		POP     BC              ;RESTORE EXPONENTS
	call	c,$042c2f                 ; 0422EB || 	call	c,$042bec                 ; 0422A8 || 0422EB DC 2F 2C 04 5943          		CALL    C,INCC
	rra                            ; 0422EF || 	rra                            ; 0422AC || 0422EF 1F          5944          		RRA                     ;LSB OF A TO CARRY
	ld	a,c                         ; 0422F0 || 	ld	a,c                         ; 0422AD || 0422F0 79          5945          		LD      A,C             ;COMPUTE NEW EXPONENT
	sbc	a,b                        ; 0422F1 || 	sbc	a,b                        ; 0422AE || 0422F1 98          5946          		SBC     A,B
	ccf                            ; 0422F2 || 	ccf                            ; 0422AF || 0422F2 3F          5947          		CCF
	jp	$042394                     ; 0422F3 || 	jp	$042351                     ; 0422B0 || 0422F3 C3 94 23 04 5948          		JP      CHKOVF
	ld	a,h                         ; 0422F7 || 	ld	a,h                         ; 0422B4 || 0422F7 7C          5952  IMUL:			LD      A,H
	xor	d                          ; 0422F8 || 	xor	d                          ; 0422B5 || 0422F8 AA          5953          		XOR     D
	ex	af,af'                      ; 0422F9 || 	ex	af,af'                      ; 0422B6 || 0422F9 08          5954          		EX      AF,AF'          ;SAVE RESULT SIGN
	bit	7,h                        ; 0422FA || 	bit	7,h                        ; 0422B7 || 0422FA CB 7C       5955          		BIT     7,H
	call	nz,$042b1d                ; 0422FC || 	call	nz,$042ada                ; 0422B9 || 0422FC C4 1D 2B 04 5956          		CALL    NZ,NEGATE
	call	$042c1a                   ; 042300 || 	call	$042bd7                   ; 0422BD || 042300 CD 1A 2C 04 5957          		CALL    SWAP_FP
	bit	7,h                        ; 042304 || 	bit	7,h                        ; 0422C1 || 042304 CB 7C       5958          		BIT     7,H
	call	nz,$042b1d                ; 042306 || 	call	nz,$042ada                ; 0422C3 || 042306 C4 1D 2B 04 5959          		CALL    NZ,NEGATE
	ld	b,h                         ; 04230A || 	ld	b,h                         ; 0422C7 || 04230A 44          5960          		LD      B,H
	ld	c,l                         ; 04230B || 	ld	c,l                         ; 0422C8 || 04230B 4D          5961          		LD      C,L
	ld	hl,$000000                  ; 04230C || 	ld	hl,$000000                  ; 0422C9 || 04230C 21 00 00 00 5962          		LD      HL,0
	exx                            ; 042310 || 	exx                            ; 0422CD || 042310 D9          5963          		EXX
	ld	b,h                         ; 042311 || 	ld	b,h                         ; 0422CE || 042311 44          5964          		LD      B,H
	ld	c,l                         ; 042312 || 	ld	c,l                         ; 0422CF || 042312 4D          5965          		LD      C,L
	ld	hl,$000000                  ; 042313 || 	ld	hl,$000000                  ; 0422D0 || 042313 21 00 00 00 5966          		LD      HL,0
	ld	a,$df                       ; 042317 || 	ld	a,$df                       ; 0422D4 || 042317 3E DF       5967          		LD      A,-33
	call	$042dde                   ; 042319 || 	call	$042d9b                   ; 0422D6 || 042319 CD DE 2D 04 5968          		CALL    MULA            ;MULTIPLY
	exx                            ; 04231D || 	exx                            ; 0422DA || 04231D D9          5969          		EXX
	ld	c,$bf                       ; 04231E || 	ld	c,$bf                       ; 0422DB || 04231E 0E BF       5970          		LD      C,191           ;PRESET EXPONENT
	call	$042c42                   ; 042320 || 	call	$042bff                   ; 0422DD || 042320 CD 42 2C 04 5971          		CALL    TEST_FP            ;TEST RANGE
	jr	nz,$+$11                    ; 042324 || 	jr	nz,$+$11                    ; 0422E1 || 042324 20 0F       5972          		JR      NZ,IMUL1        ;TOO BIG
	bit	7,d                        ; 042326 || 	bit	7,d                        ; 0422E3 || 042326 CB 7A       5973          		BIT     7,D
	jr	nz,$+$0d                    ; 042328 || 	jr	nz,$+$0d                    ; 0422E5 || 042328 20 0B       5974          		JR      NZ,IMUL1
	call	$042c1a                   ; 04232A || 	call	$042bd7                   ; 0422E7 || 04232A CD 1A 2C 04 5975          		CALL    SWAP_FP
	ld	c,d                         ; 04232E || 	ld	c,d                         ; 0422EB || 04232E 4A          5976          		LD      C,D             ;INTEGER MARKER
	ex	af,af'                      ; 04232F || 	ex	af,af'                      ; 0422EC || 04232F 08          5977          		EX      AF,AF'
	ret	p                          ; 042330 || 	ret	p                          ; 0422ED || 042330 F0          5978          		RET     P
	jp	$042b1d                     ; 042331 || 	jp	$042ada                     ; 0422EE || 042331 C3 1D 2B 04 5979          		JP      NEGATE
	dec	c                          ; 042335 || 	dec	c                          ; 0422F2 || 042335 0D          5981  IMUL1:			DEC     C
	exx                            ; 042336 || 	exx                            ; 0422F3 || 042336 D9          5982          		EXX
	sla	e                          ; 042337 || 	sla	e                          ; 0422F4 || 042337 CB 23       5983          		SLA     E
	rl	d                           ; 042339 || 	rl	d                           ; 0422F6 || 042339 CB 12       5984          		RL      D
	exx                            ; 04233B || 	exx                            ; 0422F8 || 04233B D9          5985          		EXX
	rl	e                           ; 04233C || 	rl	e                           ; 0422F9 || 04233C CB 13       5986          		RL      E
	rl	d                           ; 04233E || 	rl	d                           ; 0422FB || 04233E CB 12       5987          		RL      D
	exx                            ; 042340 || 	exx                            ; 0422FD || 042340 D9          5988          		EXX
	adc.sil	hl,hl                  ; 042341 || 	adc.sil	hl,hl                  ; 0422FE || 042341 52 ED 6A    5989          		ADC.S   HL,HL
	exx                            ; 042344 || 	exx                            ; 042301 || 042344 D9          5990          		EXX
	adc.sil	hl,hl                  ; 042345 || 	adc.sil	hl,hl                  ; 042302 || 042345 52 ED 6A    5991          		ADC.S   HL,HL
	jp	p,$042335                   ; 042348 || 	jp	p,$0422f2                   ; 042305 || 042348 F2 35 23 04 5992          		JP      P,IMUL1         ;NORMALISE
	ex	af,af'                      ; 04234C || 	ex	af,af'                      ; 042309 || 04234C 08          5993          		EX      AF,AF'
	ret	m                          ; 04234D || 	ret	m                          ; 04230A || 04234D F8          5994          		RET     M
	res	7,h                        ; 04234E || 	res	7,h                        ; 04230B || 04234E CB BC       5995          		RES     7,H             ;POSITIVE
	ret                            ; 042350 || 	ret                            ; 04230D || 042350 C9          5996          		RET
	dec	b                          ; 042351 || 	dec	b                          ; 04230E || 042351 05          6000  FMUL:			DEC     B               ;TEST FOR ZERO
	inc	b                          ; 042352 || 	inc	b                          ; 04230F || 042352 04          6001          		INC     B
	jp	z,$042c66                   ; 042353 || 	jp	z,$042c23                   ; 042310 || 042353 CA 66 2C 04 6002          		JP      Z,ZERO_FP
	dec	c                          ; 042357 || 	dec	c                          ; 042314 || 042357 0D          6003          		DEC     C               ;TEST FOR ZERO
	inc	c                          ; 042358 || 	inc	c                          ; 042315 || 042358 0C          6004          		INC     C
	ret	z                          ; 042359 || 	ret	z                          ; 042316 || 042359 C8          6005          		RET     Z
	ld	a,h                         ; 04235A || 	ld	a,h                         ; 042317 || 04235A 7C          6006          		LD      A,H
	xor	d                          ; 04235B || 	xor	d                          ; 042318 || 04235B AA          6007          		XOR     D               ;CALC. RESULT SIGN
	ex	af,af'                      ; 04235C || 	ex	af,af'                      ; 042319 || 04235C 08          6008          		EX      AF,AF'
	set	7,d                        ; 04235D || 	set	7,d                        ; 04231A || 04235D CB FA       6009          		SET     7,D             ;REPLACE IMPLIED 1's
	set	7,h                        ; 04235F || 	set	7,h                        ; 04231C || 04235F CB FC       6010          		SET     7,H
	push	bc                        ; 042361 || 	push	bc                        ; 04231E || 042361 C5          6011          		PUSH    BC              ;SAVE EXPONENTS
	ld	b,h                         ; 042362 || 	ld	b,h                         ; 04231F || 042362 44          6012          		LD      B,H             ;LOAD REGISTERS
	ld	c,l                         ; 042363 || 	ld	c,l                         ; 042320 || 042363 4D          6013          		LD      C,L
	ld	hl,$000000                  ; 042364 || 	ld	hl,$000000                  ; 042321 || 042364 21 00 00 00 6014          		LD      HL,0
	exx                            ; 042368 || 	exx                            ; 042325 || 042368 D9          6015          		EXX
	ld	b,h                         ; 042369 || 	ld	b,h                         ; 042326 || 042369 44          6016          		LD      B,H
	ld	c,l                         ; 04236A || 	ld	c,l                         ; 042327 || 04236A 4D          6017          		LD      C,L
	ld	hl,$000000                  ; 04236B || 	ld	hl,$000000                  ; 042328 || 04236B 21 00 00 00 6018          		LD      HL,0
	ld	a,$e0                       ; 04236F || 	ld	a,$e0                       ; 04232C || 04236F 3E E0       6019          		LD      A,-32           ;LOOP COUNTER
	call	$042dde                   ; 042371 || 	call	$042d9b                   ; 04232E || 042371 CD DE 2D 04 6020          		CALL    MULA            ;MULTIPLY
	call	c,$042df4                 ; 042375 || 	call	c,$042db1                 ; 042332 || 042375 DC F4 2D 04 6021          		CALL    C,MULB          ;NORMALISE & INC A
	exx                            ; 042379 || 	exx                            ; 042336 || 042379 D9          6022          		EXX
	push	hl                        ; 04237A || 	push	hl                        ; 042337 || 04237A E5          6023          		PUSH    HL
	ld	hl,$008000                  ; 04237B || 	ld	hl,$008000                  ; 042338 || 04237B 21 00 80 00 6024          		LD      HL,8000H
	or	a                           ; 04237F || 	or	a                           ; 04233C || 04237F B7          6025          		OR      A               ;CLEAR CARRY
	sbc.sil	hl,de                  ; 042380 || 	sbc.sil	hl,de                  ; 04233D || 042380 52 ED 52    6026          		SBC.S   HL,DE
	pop	hl                         ; 042383 || 	pop	hl                         ; 042340 || 042383 E1          6027          		POP     HL
	call	z,$042c14                 ; 042384 || 	call	z,$042bd1                 ; 042341 || 042384 CC 14 2C 04 6028          		CALL    Z,ODD           ;ROUND UNBIASSED
	call	c,$042c02                 ; 042388 || 	call	c,$042bbf                 ; 042345 || 042388 DC 02 2C 04 6029          		CALL    C,ADD1_FP          ;ROUND UP
	pop	bc                         ; 04238C || 	pop	bc                         ; 042349 || 04238C C1          6030          		POP     BC              ;RESTORE EXPONENTS
	call	c,$042c2f                 ; 04238D || 	call	c,$042bec                 ; 04234A || 04238D DC 2F 2C 04 6031          		CALL    C,INCC
	rra                            ; 042391 || 	rra                            ; 04234E || 042391 1F          6032          		RRA                     ;LSB OF A TO CARRY
	ld	a,c                         ; 042392 || 	ld	a,c                         ; 04234F || 042392 79          6033          		LD      A,C             ;COMPUTE NEW EXPONENT
	adc	a,b                        ; 042393 || 	adc	a,b                        ; 042350 || 042393 88          6034          		ADC     A,B
	jr	c,$+$08                     ; 042394 || 	jr	c,$+$08                     ; 042351 || 042394 38 06       6035  CHKOVF:			JR      C,CHKO1
	jp	p,$042c66                   ; 042396 || 	jp	p,$042c23                   ; 042353 || 042396 F2 66 2C 04 6036          		JP      P,ZERO_FP          ;UNDERFLOW
	jr	$+$06                       ; 04239A || 	jr	$+$06                       ; 042357 || 04239A 18 04       6037          		JR      CHKO2
	jp	m,$042c31                   ; 04239C || 	jp	m,$042bee                   ; 042359 || 04239C FA 31 2C 04 6038  CHKO1:			JP      M,OFLOW         ;OVERFLOW
	add	a,$80                      ; 0423A0 || 	add	a,$80                      ; 04235D || 0423A0 C6 80       6039  CHKO2:			ADD     A,80H
	ld	c,a                         ; 0423A2 || 	ld	c,a                         ; 04235F || 0423A2 4F          6040          		LD      C,A
	jp	z,$042c66                   ; 0423A3 || 	jp	z,$042c23                   ; 042360 || 0423A3 CA 66 2C 04 6041          		JP      Z,ZERO_FP
	ex	af,af'                      ; 0423A7 || 	ex	af,af'                      ; 042364 || 0423A7 08          6042          		EX      AF,AF'          ;RESTORE SIGN BIT
	res	7,h                        ; 0423A8 || 	res	7,h                        ; 042365 || 0423A8 CB BC       6043          		RES     7,H
	ret	p                          ; 0423AA || 	ret	p                          ; 042367 || 0423AA F0          6044          		RET     P
	set	7,h                        ; 0423AB || 	set	7,h                        ; 042368 || 0423AB CB FC       6045          		SET     7,H
	ret                            ; 0423AD || 	ret                            ; 04236A || 0423AD C9          6046          		RET
	call	$042c1a                   ; 0423AE || 	call	$042bd7                   ; 04236B || 0423AE CD 1A 2C 04 6050  IPOW:			CALL    SWAP_FP
	bit	7,h                        ; 0423B2 || 	bit	7,h                        ; 04236F || 0423B2 CB 7C       6051          		BIT     7,H
	push	af                        ; 0423B4 || 	push	af                        ; 042371 || 0423B4 F5          6052          		PUSH    AF              ;SAVE SIGN
	call	nz,$042b1d                ; 0423B5 || 	call	nz,$042ada                ; 042372 || 0423B5 C4 1D 2B 04 6053          		CALL    NZ,NEGATE
	ld	c,b                         ; 0423B9 || 	ld	c,b                         ; 042376 || 0423B9 48          6054  IPOW0:			LD      C,B
	ld	b,$20                       ; 0423BA || 	ld	b,$20                       ; 042377 || 0423BA 06 20       6055          		LD      B,32            ;LOOP COUNTER
	call	$042cd2                   ; 0423BC || 	call	$042c8f                   ; 042379 || 0423BC CD D2 2C 04 6056  IPOW1:			CALL    X2
	jr	c,$+$0a                     ; 0423C0 || 	jr	c,$+$0a                     ; 04237D || 0423C0 38 08       6057          		JR      C,IPOW2
	djnz	$-$06                     ; 0423C2 || 	djnz	$-$06                     ; 04237F || 0423C2 10 F8       6058          		DJNZ    IPOW1
	pop	af                         ; 0423C4 || 	pop	af                         ; 042381 || 0423C4 F1          6059          		POP     AF
	exx                            ; 0423C5 || 	exx                            ; 042382 || 0423C5 D9          6060          		EXX
	inc	l                          ; 0423C6 || 	inc	l                          ; 042383 || 0423C6 2C          6061          		INC     L               ;RESULT=1
	exx                            ; 0423C7 || 	exx                            ; 042384 || 0423C7 D9          6062          		EXX
	ld	c,h                         ; 0423C8 || 	ld	c,h                         ; 042385 || 0423C8 4C          6063          		LD      C,H
	ret                            ; 0423C9 || 	ret                            ; 042386 || 0423C9 C9          6064          		RET
	pop	af                         ; 0423CA || 	pop	af                         ; 042387 || 0423CA F1          6066  IPOW2:			POP     AF
	push	bc                        ; 0423CB || 	push	bc                        ; 042388 || 0423CB C5          6067          		PUSH    BC
	ex	de,hl                       ; 0423CC || 	ex	de,hl                       ; 042389 || 0423CC EB          6068          		EX      DE,HL
	push	hl                        ; 0423CD || 	push	hl                        ; 04238A || 0423CD E5          6069          		PUSH    HL
	exx                            ; 0423CE || 	exx                            ; 04238B || 0423CE D9          6070          		EXX
	ex	de,hl                       ; 0423CF || 	ex	de,hl                       ; 04238C || 0423CF EB          6071          		EX      DE,HL
	push	hl                        ; 0423D0 || 	push	hl                        ; 04238D || 0423D0 E5          6072          		PUSH    HL
	exx                            ; 0423D1 || 	exx                            ; 04238E || 0423D1 D9          6073          		EXX
	ld	ix,$000000                  ; 0423D2 || 	ld	ix,$000000                  ; 04238F || 0423D2 DD 21 00 00 6074          		LD      IX,0
	add	ix,sp                      ; 0423D7 || 	add	ix,sp                      ; 042394 || 0423D7 DD 39       6075          		ADD     IX,SP
	jr	z,$+$4a                     ; 0423D9 || 	jr	z,$+$4a                     ; 042396 || 0423D9 28 48       6076          		JR      Z,IPOW4
	push	bc                        ; 0423DB || 	push	bc                        ; 042398 || 0423DB C5          6077          		PUSH    BC
	exx                            ; 0423DC || 	exx                            ; 042399 || 0423DC D9          6078          		EXX
	push	de                        ; 0423DD || 	push	de                        ; 04239A || 0423DD D5          6079          		PUSH    DE
	exx                            ; 0423DE || 	exx                            ; 04239B || 0423DE D9          6080          		EXX
	push	de                        ; 0423DF || 	push	de                        ; 04239C || 0423DF D5          6081          		PUSH    DE
	call	$042be9                   ; 0423E0 || 	call	$042ba6                   ; 04239D || 0423E0 CD E9 2B 04 6082          		CALL    SFLOAT_FP
	call	$04271d                   ; 0423E4 || 	call	$0426da                   ; 0423A1 || 0423E4 CD 1D 27 04 6083          		CALL    RECIP
	ld	(ix+$04),c                  ; 0423E8 || 	ld	(ix+$04),c                  ; 0423A5 || 0423E8 DD 71 04    6084          		LD      (IX+4),C
	exx                            ; 0423EB || 	exx                            ; 0423A8 || 0423EB D9          6085          		EXX
	ld	(ix),l                      ; 0423EC || 	ld	(ix),l                      ; 0423A9 || 0423EC DD 75 00    6086          		LD      (IX+0),L
	ld	(ix+$01),h                  ; 0423EF || 	ld	(ix+$01),h                  ; 0423AC || 0423EF DD 74 01    6087          		LD      (IX+1),H
	exx                            ; 0423F2 || 	exx                            ; 0423AF || 0423F2 D9          6088          		EXX
	ld	(ix+$02),l                  ; 0423F3 || 	ld	(ix+$02),l                  ; 0423B0 || 0423F3 DD 75 02    6089          		LD      (IX+2),L
	ld	(ix+$03),h                  ; 0423F6 || 	ld	(ix+$03),h                  ; 0423B3 || 0423F6 DD 74 03    6090          		LD      (IX+3),H
	jr	$+$23                       ; 0423F9 || 	jr	$+$23                       ; 0423B6 || 0423F9 18 21       6091          		JR      IPOW5
	push	bc                        ; 0423FB || 	push	bc                        ; 0423B8 || 0423FB C5          6093  IPOW3:			PUSH    BC
	exx                            ; 0423FC || 	exx                            ; 0423B9 || 0423FC D9          6094          		EXX
	sla	e                          ; 0423FD || 	sla	e                          ; 0423BA || 0423FD CB 23       6095          		SLA     E
	rl	d                           ; 0423FF || 	rl	d                           ; 0423BC || 0423FF CB 12       6096          		RL      D
	push	de                        ; 042401 || 	push	de                        ; 0423BE || 042401 D5          6097          		PUSH    DE
	exx                            ; 042402 || 	exx                            ; 0423BF || 042402 D9          6098          		EXX
	rl	e                           ; 042403 || 	rl	e                           ; 0423C0 || 042403 CB 13       6099          		RL      E
	rl	d                           ; 042405 || 	rl	d                           ; 0423C2 || 042405 CB 12       6100          		RL      D
	push	de                        ; 042407 || 	push	de                        ; 0423C4 || 042407 D5          6101          		PUSH    DE
	ld	a,$0a                       ; 042408 || 	ld	a,$0a                       ; 0423C5 || 042408 3E 0A       6102          		LD      A,'*' & 0FH
	push	af                        ; 04240A || 	push	af                        ; 0423C7 || 04240A F5          6103          		PUSH    AF
	call	$042ce6                   ; 04240B || 	call	$042ca3                   ; 0423C8 || 04240B CD E6 2C 04 6104          		CALL    COPY_
	call	$0420c6                   ; 04240F || 	call	$042083                   ; 0423CC || 04240F CD C6 20 04 6105          		CALL    OP              ;SQUARE
	pop	af                         ; 042413 || 	pop	af                         ; 0423D0 || 042413 F1          6106          		POP     AF
	call	$042a12                   ; 042414 || 	call	$0429cf                   ; 0423D1 || 042414 CD 12 2A 04 6107          		CALL    DLOAD5
	call	c,$0420c6                 ; 042418 || 	call	c,$042083                 ; 0423D5 || 042418 DC C6 20 04 6108          		CALL    C,OP            ;MULTIPLY BY X
	pop	de                         ; 04241C || 	pop	de                         ; 0423D9 || 04241C D1          6109  IPOW5:			POP     DE
	exx                            ; 04241D || 	exx                            ; 0423DA || 04241D D9          6110          		EXX
	pop	de                         ; 04241E || 	pop	de                         ; 0423DB || 04241E D1          6111          		POP     DE
	exx                            ; 04241F || 	exx                            ; 0423DC || 04241F D9          6112          		EXX
	ld	a,c                         ; 042420 || 	ld	a,c                         ; 0423DD || 042420 79          6113          		LD      A,C
	pop	bc                         ; 042421 || 	pop	bc                         ; 0423DE || 042421 C1          6114          		POP     BC
	ld	c,a                         ; 042422 || 	ld	c,a                         ; 0423DF || 042422 4F          6115          		LD      C,A
	djnz	$-$28                     ; 042423 || 	djnz	$-$28                     ; 0423E0 || 042423 10 D6       6116  IPOW4:			DJNZ    IPOW3
	pop	af                         ; 042425 || 	pop	af                         ; 0423E2 || 042425 F1          6117          		POP     AF
	pop	af                         ; 042426 || 	pop	af                         ; 0423E3 || 042426 F1          6118          		POP     AF
	pop	af                         ; 042427 || 	pop	af                         ; 0423E4 || 042427 F1          6119          		POP     AF
	ret                            ; 042428 || 	ret                            ; 0423E5 || 042428 C9          6120          		RET
	pop	af                         ; 042429 || 	pop	af                         ; 0423E6 || 042429 F1          6122  FPOW0:			POP     AF
	pop	af                         ; 04242A || 	pop	af                         ; 0423E7 || 04242A F1          6123          		POP     AF
	pop	af                         ; 04242B || 	pop	af                         ; 0423E8 || 04242B F1          6124          		POP     AF
	jr	$-$73                       ; 04242C || 	jr	$-$73                       ; 0423E9 || 04242C 18 8B       6125          		JR      IPOW0
	bit	7,d                        ; 04242E || 	bit	7,d                        ; 0423EB || 04242E CB 7A       6129  FPOW:			BIT     7,D
	push	af                        ; 042430 || 	push	af                        ; 0423ED || 042430 F5          6130          		PUSH    AF
	call	$042c1a                   ; 042431 || 	call	$042bd7                   ; 0423EE || 042431 CD 1A 2C 04 6131          		CALL    SWAP_FP
	call	$042cf6                   ; 042435 || 	call	$042cb3                   ; 0423F2 || 042435 CD F6 2C 04 6132          		CALL    PUSH5
	dec	c                          ; 042439 || 	dec	c                          ; 0423F6 || 042439 0D          6133          		DEC     C
	inc	c                          ; 04243A || 	inc	c                          ; 0423F7 || 04243A 0C          6134          		INC     C
	jr	z,$-$12                     ; 04243B || 	jr	z,$-$12                     ; 0423F8 || 04243B 28 EC       6135          		JR      Z,FPOW0
	ld	a,$9e                       ; 04243D || 	ld	a,$9e                       ; 0423FA || 04243D 3E 9E       6136          		LD      A,158
	cp	c                           ; 04243F || 	cp	c                           ; 0423FC || 04243F B9          6137          		CP      C
	jr	c,$+$0c                     ; 042440 || 	jr	c,$+$0c                     ; 0423FD || 042440 38 0A       6138          		JR      C,FPOW1
	inc	a                          ; 042442 || 	inc	a                          ; 0423FF || 042442 3C          6139          		INC     A
	call	$042aee                   ; 042443 || 	call	$042aab                   ; 042400 || 042443 CD EE 2A 04 6140          		CALL    FIX
	ex	af,af'                      ; 042447 || 	ex	af,af'                      ; 042404 || 042447 08          6141          		EX      AF,AF'
	jp	p,$042429                   ; 042448 || 	jp	p,$0423e6                   ; 042405 || 042448 F2 29 24 04 6142          		JP      P,FPOW0
	call	$042c1a                   ; 04244C || 	call	$042bd7                   ; 042409 || 04244C CD 1A 2C 04 6143  FPOW1:			CALL    SWAP_FP
	call	$04273a                   ; 042450 || 	call	$0426f7                   ; 04240D || 042450 CD 3A 27 04 6144          		CALL    LN0
	call	$042cff                   ; 042454 || 	call	$042cbc                   ; 042411 || 042454 CD FF 2C 04 6145          		CALL    POP5
	pop	af                         ; 042458 || 	pop	af                         ; 042415 || 042458 F1          6146          		POP     AF
	call	$042351                   ; 042459 || 	call	$04230e                   ; 042416 || 042459 CD 51 23 04 6147          		CALL    FMUL
	jp	$04269c                     ; 04245D || 	jp	$042659                     ; 04241A || 04245D C3 9C 26 04 6148          		JP      EXP0
	call	$042c70                   ; 042461 || 	call	$042c2d                   ; 04241E || 042461 CD 70 2C 04 6153  FLT:			CALL    FCP
	jr	$+$06                       ; 042465 || 	jr	$+$06                       ; 042422 || 042465 18 04       6154          		JR      ILT1
	call	$042c62                   ; 042467 || 	call	$042c1f                   ; 042424 || 042467 CD 62 2C 04 6155  ILT:			CALL    ICP
	ret	nc                         ; 04246B || 	ret	nc                         ; 042428 || 04246B D0          6156  ILT1:			RET     NC
	jr	$+$44                       ; 04246C || 	jr	$+$44                       ; 042429 || 04246C 18 42       6157          		JR      TRUE_FP
	call	$042c70                   ; 04246E || 	call	$042c2d                   ; 04242B || 04246E CD 70 2C 04 6159  FGT:			CALL    FCP
	jr	$+$06                       ; 042472 || 	jr	$+$06                       ; 04242F || 042472 18 04       6160          		JR      IGT1
	call	$042c62                   ; 042474 || 	call	$042c1f                   ; 042431 || 042474 CD 62 2C 04 6161  IGT:			CALL    ICP
	ret	z                          ; 042478 || 	ret	z                          ; 042435 || 042478 C8          6162  IGT1:			RET     Z
	ret	c                          ; 042479 || 	ret	c                          ; 042436 || 042479 D8          6163          		RET     C
	jr	$+$36                       ; 04247A || 	jr	$+$36                       ; 042437 || 04247A 18 34       6164          		JR      TRUE_FP
	call	$042c70                   ; 04247C || 	call	$042c2d                   ; 042439 || 04247C CD 70 2C 04 6166  FGE:			CALL    FCP
	jr	$+$06                       ; 042480 || 	jr	$+$06                       ; 04243D || 042480 18 04       6167          		JR      IGE1
	call	$042c62                   ; 042482 || 	call	$042c1f                   ; 04243F || 042482 CD 62 2C 04 6168  IGE:			CALL    ICP
	ret	c                          ; 042486 || 	ret	c                          ; 042443 || 042486 D8          6169  IGE1:			RET     C
	jr	$+$29                       ; 042487 || 	jr	$+$29                       ; 042444 || 042487 18 27       6170          		JR      TRUE_FP
	call	$042c70                   ; 042489 || 	call	$042c2d                   ; 042446 || 042489 CD 70 2C 04 6172  FLE:			CALL    FCP
	jr	$+$06                       ; 04248D || 	jr	$+$06                       ; 04244A || 04248D 18 04       6173          		JR      ILE1
	call	$042c62                   ; 04248F || 	call	$042c1f                   ; 04244C || 04248F CD 62 2C 04 6174  ILE:			CALL    ICP
	jr	z,$+$1d                     ; 042493 || 	jr	z,$+$1d                     ; 042450 || 042493 28 1B       6175  ILE1:			JR      Z,TRUE_FP
	ret	nc                         ; 042495 || 	ret	nc                         ; 042452 || 042495 D0          6176          		RET     NC
	jr	$+$1a                       ; 042496 || 	jr	$+$1a                       ; 042453 || 042496 18 18       6177          		JR      TRUE_FP
	call	$042c70                   ; 042498 || 	call	$042c2d                   ; 042455 || 042498 CD 70 2C 04 6179  FNE:			CALL    FCP
	jr	$+$06                       ; 04249C || 	jr	$+$06                       ; 042459 || 04249C 18 04       6180          		JR      INE1
	call	$042c62                   ; 04249E || 	call	$042c1f                   ; 04245B || 04249E CD 62 2C 04 6181  INE:			CALL    ICP
	ret	z                          ; 0424A2 || 	ret	z                          ; 04245F || 0424A2 C8          6182  INE1:			RET     Z
	jr	$+$0d                       ; 0424A3 || 	jr	$+$0d                       ; 042460 || 0424A3 18 0B       6183          		JR      TRUE_FP
	call	$042c70                   ; 0424A5 || 	call	$042c2d                   ; 042462 || 0424A5 CD 70 2C 04 6185  FEQ:			CALL    FCP
	jr	$+$06                       ; 0424A9 || 	jr	$+$06                       ; 042466 || 0424A9 18 04       6186          		JR      IEQ1
	call	$042c62                   ; 0424AB || 	call	$042c1f                   ; 042468 || 0424AB CD 62 2C 04 6187  IEQ:			CALL    ICP
	ret	nz                         ; 0424AF || 	ret	nz                         ; 04246C || 0424AF C0          6188  IEQ1:			RET     NZ
	ld	hl,$ffffff                  ; 0424B0 || 	ld	hl,$ffffff                  ; 04246D || 0424B0 21 FF FF FF 6189  TRUE_FP:			LD      HL,-1
	exx                            ; 0424B4 || 	exx                            ; 042471 || 0424B4 D9          6190          		EXX
	ld	hl,$ffffff                  ; 0424B5 || 	ld	hl,$ffffff                  ; 042472 || 0424B5 21 FF FF FF 6191          		LD      HL,-1
	exx                            ; 0424B9 || 	exx                            ; 042476 || 0424B9 D9          6192          		EXX
	xor	a                          ; 0424BA || 	xor	a                          ; 042477 || 0424BA AF          6193          		XOR     A
	ld	c,a                         ; 0424BB || 	ld	c,a                         ; 042478 || 0424BB 4F          6194          		LD      C,A
	ret                            ; 0424BC || 	ret                            ; 042479 || 0424BC C9          6195          		RET
	bit	7,h                        ; 0424BD || 	bit	7,h                        ; 04247A || 0424BD CB 7C       6206  ABSV_FP:			BIT     7,H
	ret	z                          ; 0424BF || 	ret	z                          ; 04247C || 0424BF C8          6207          		RET     Z               ;POSITIVE/ZERO
	dec	c                          ; 0424C0 || 	dec	c                          ; 04247D || 0424C0 0D          6208          		DEC     C
	inc	c                          ; 0424C1 || 	inc	c                          ; 04247E || 0424C1 0C          6209          		INC     C
	jp	z,$042b1d                   ; 0424C2 || 	jp	z,$042ada                   ; 04247F || 0424C2 CA 1D 2B 04 6210          		JP      Z,NEGATE        ;INTEGER
	res	7,h                        ; 0424C6 || 	res	7,h                        ; 042483 || 0424C6 CB BC       6211          		RES     7,H
	ret                            ; 0424C8 || 	ret                            ; 042485 || 0424C8 C9          6212          		RET
	call	$042b0d                   ; 0424C9 || 	call	$042aca                   ; 042486 || 0424C9 CD 0D 2B 04 6217  NOTK_FP:			CALL    SFIX_FP
	ld	a,h                         ; 0424CD || 	ld	a,h                         ; 04248A || 0424CD 7C          6218          		LD      A,H
	cpl                            ; 0424CE || 	cpl                            ; 04248B || 0424CE 2F          6219          		CPL
	ld	h,a                         ; 0424CF || 	ld	h,a                         ; 04248C || 0424CF 67          6220          		LD      H,A
	ld	a,l                         ; 0424D0 || 	ld	a,l                         ; 04248D || 0424D0 7D          6221          		LD      A,L
	cpl                            ; 0424D1 || 	cpl                            ; 04248E || 0424D1 2F          6222          		CPL
	ld	l,a                         ; 0424D2 || 	ld	l,a                         ; 04248F || 0424D2 6F          6223          		LD      L,A
	exx                            ; 0424D3 || 	exx                            ; 042490 || 0424D3 D9          6224          		EXX
	ld	a,h                         ; 0424D4 || 	ld	a,h                         ; 042491 || 0424D4 7C          6225          		LD      A,H
	cpl                            ; 0424D5 || 	cpl                            ; 042492 || 0424D5 2F          6226          		CPL
	ld	h,a                         ; 0424D6 || 	ld	h,a                         ; 042493 || 0424D6 67          6227          		LD      H,A
	ld	a,l                         ; 0424D7 || 	ld	a,l                         ; 042494 || 0424D7 7D          6228          		LD      A,L
	cpl                            ; 0424D8 || 	cpl                            ; 042495 || 0424D8 2F          6229          		CPL
	ld	l,a                         ; 0424D9 || 	ld	l,a                         ; 042496 || 0424D9 6F          6230          		LD      L,A
	exx                            ; 0424DA || 	exx                            ; 042497 || 0424DA D9          6231          		EXX
	xor	a                          ; 0424DB || 	xor	a                          ; 042498 || 0424DB AF          6232          		XOR     A               ;NUMERIC MARKER
	ret                            ; 0424DC || 	ret                            ; 042499 || 0424DC C9          6233          		RET
	ld	hl,$00490f                  ; 0424DD || 	ld	hl,$00490f                  ; 04249A || 0424DD 21 0F 49 00 6238  PI_FP:			LD      HL,490FH
	exx                            ; 0424E1 || 	exx                            ; 04249E || 0424E1 D9          6239          		EXX
	ld	hl,$00daa2                  ; 0424E2 || 	ld	hl,$00daa2                  ; 04249F || 0424E2 21 A2 DA 00 6240          		LD      HL,0DAA2H
	exx                            ; 0424E6 || 	exx                            ; 0424A3 || 0424E6 D9          6241          		EXX
	ld	c,$81                       ; 0424E7 || 	ld	c,$81                       ; 0424A4 || 0424E7 0E 81       6242          		LD      C,81H
	xor	a                          ; 0424E9 || 	xor	a                          ; 0424A6 || 0424E9 AF          6243          		XOR     A               ;NUMERIC MARKER
	ret                            ; 0424EA || 	ret                            ; 0424A7 || 0424EA C9          6244          		RET
	call	$0424ff                   ; 0424EB || 	call	$0424bc                   ; 0424A8 || 0424EB CD FF 24 04 6249  DEG_FP:			CALL    FPI180
	call	$042351                   ; 0424EF || 	call	$04230e                   ; 0424AC || 0424EF CD 51 23 04 6250          		CALL    FMUL
	xor	a                          ; 0424F3 || 	xor	a                          ; 0424B0 || 0424F3 AF          6251          		XOR     A
	ret                            ; 0424F4 || 	ret                            ; 0424B1 || 0424F4 C9          6252          		RET
	call	$0424ff                   ; 0424F5 || 	call	$0424bc                   ; 0424B2 || 0424F5 CD FF 24 04 6257  RAD_FP:			CALL    FPI180
	call	$0422a8                   ; 0424F9 || 	call	$042265                   ; 0424B6 || 0424F9 CD A8 22 04 6258          		CALL    FDIV
	xor	a                          ; 0424FD || 	xor	a                          ; 0424BA || 0424FD AF          6259          		XOR     A
	ret                            ; 0424FE || 	ret                            ; 0424BB || 0424FE C9          6260          		RET
	call	$042be9                   ; 0424FF || 	call	$042ba6                   ; 0424BC || 0424FF CD E9 2B 04 6264  FPI180:			CALL    SFLOAT_FP
	ld	de,$00652e                  ; 042503 || 	ld	de,$00652e                  ; 0424C0 || 042503 11 2E 65 00 6265          		LD      DE,652EH
	exx                            ; 042507 || 	exx                            ; 0424C4 || 042507 D9          6266          		EXX
	ld	de,$00e0d3                  ; 042508 || 	ld	de,$00e0d3                  ; 0424C5 || 042508 11 D3 E0 00 6267          		LD      DE,0E0D3H
	exx                            ; 04250C || 	exx                            ; 0424C9 || 04250C D9          6268          		EXX
	ld	b,$85                       ; 04250D || 	ld	b,$85                       ; 0424CA || 04250D 06 85       6269          		LD      B,85H
	ret                            ; 04250F || 	ret                            ; 0424CC || 04250F C9          6270          		RET
	call	$042c42                   ; 042510 || 	call	$042bff                   ; 0424CD || 042510 CD 42 2C 04 6275  SGN_FP:			CALL    TEST_FP
	or	c                           ; 042514 || 	or	c                           ; 0424D1 || 042514 B1          6276          		OR      C
	ret	z                          ; 042515 || 	ret	z                          ; 0424D2 || 042515 C8          6277          		RET     Z               ;ZERO
	bit	7,h                        ; 042516 || 	bit	7,h                        ; 0424D3 || 042516 CB 7C       6278          		BIT     7,H
	jp	nz,$0424b0                  ; 042518 || 	jp	nz,$04246d                  ; 0424D5 || 042518 C2 B0 24 04 6279          		JP      NZ,TRUE_FP         ;-1
	call	$042c66                   ; 04251C || 	call	$042c23                   ; 0424D9 || 04251C CD 66 2C 04 6280          		CALL    ZERO_FP
	jp	$042c02                     ; 042520 || 	jp	$042bbf                     ; 0424DD || 042520 C3 02 2C 04 6281          		JP      ADD1_FP            ;1
	call	$042e80                   ; 042524 || 	call	$042e3d                   ; 0424E1 || 042524 CD 80 2E 04 6287  VAL_FP:			CALL    SIGNQ
	push	af                        ; 042528 || 	push	af                        ; 0424E5 || 042528 F5          6288          		PUSH    AF
	call	$042a30                   ; 042529 || 	call	$0429ed                   ; 0424E6 || 042529 CD 30 2A 04 6289          		CALL    CON_FP
	pop	af                         ; 04252D || 	pop	af                         ; 0424EA || 04252D F1          6290          		POP     AF
	cp	$2d                         ; 04252E || 	cp	$2d                         ; 0424EB || 04252E FE 2D       6291          		CP      '-'
	ld	a,$00                       ; 042530 || 	ld	a,$00                       ; 0424ED || 042530 3E 00       6292          		LD      A,0             ;NUMERIC MARKER
	ret	nz                         ; 042532 || 	ret	nz                         ; 0424EF || 042532 C0          6293          		RET     NZ
	dec	c                          ; 042533 || 	dec	c                          ; 0424F0 || 042533 0D          6294          		DEC     C
	inc	c                          ; 042534 || 	inc	c                          ; 0424F1 || 042534 0C          6295          		INC     C
	jp	z,$042b1d                   ; 042535 || 	jp	z,$042ada                   ; 0424F2 || 042535 CA 1D 2B 04 6296          		JP      Z,NEGATE        ;ZERO/INTEGER
	ld	a,h                         ; 042539 || 	ld	a,h                         ; 0424F6 || 042539 7C          6297          		LD      A,H
	xor	$80                        ; 04253A || 	xor	$80                        ; 0424F7 || 04253A EE 80       6298          		XOR     80H             ;CHANGE SIGN (FP)
	ld	h,a                         ; 04253C || 	ld	h,a                         ; 0424F9 || 04253C 67          6299          		LD      H,A
	xor	a                          ; 04253D || 	xor	a                          ; 0424FA || 04253D AF          6300          		XOR     A
	ret                            ; 04253E || 	ret                            ; 0424FB || 04253E C9          6301          		RET
	dec	c                          ; 04253F || 	dec	c                          ; 0424FC || 04253F 0D          6306  INT_FP_:			DEC     C
	inc	c                          ; 042540 || 	inc	c                          ; 0424FD || 042540 0C          6307          		INC     C
	ret	z                          ; 042541 || 	ret	z                          ; 0424FE || 042541 C8          6308          		RET     Z               ;ZERO/INTEGER
	ld	a,$9f                       ; 042542 || 	ld	a,$9f                       ; 0424FF || 042542 3E 9F       6309          		LD      A,159
	ld	b,h                         ; 042544 || 	ld	b,h                         ; 042501 || 042544 44          6310          		LD      B,H             ;B7=SIGN BIT
	call	$042aee                   ; 042545 || 	call	$042aab                   ; 042502 || 042545 CD EE 2A 04 6311          		CALL    FIX
	ex	af,af'                      ; 042549 || 	ex	af,af'                      ; 042506 || 042549 08          6312          		EX      AF,AF'
	and	b                          ; 04254A || 	and	b                          ; 042507 || 04254A A0          6313          		AND     B
	call	m,$042c02                 ; 04254B || 	call	m,$042bbf                 ; 042508 || 04254B FC 02 2C 04 6314          		CALL    M,ADD1_FP          ;NEGATIVE NON-INTEGER
	ld	a,b                         ; 04254F || 	ld	a,b                         ; 04250C || 04254F 78          6315          		LD      A,B
	or	a                           ; 042550 || 	or	a                           ; 04250D || 042550 B7          6316          		OR      A
	call	m,$042b1d                 ; 042551 || 	call	m,$042ada                 ; 04250E || 042551 FC 1D 2B 04 6317          		CALL    M,NEGATE
	xor	a                          ; 042555 || 	xor	a                          ; 042512 || 042555 AF          6318          		XOR     A
	ld	c,a                         ; 042556 || 	ld	c,a                         ; 042513 || 042556 4F          6319          		LD      C,A
	ret                            ; 042557 || 	ret                            ; 042514 || 042557 C9          6320          		RET
	call	$042be9                   ; 042558 || 	call	$042ba6                   ; 042515 || 042558 CD E9 2B 04 6325  SQR_FP:			CALL    SFLOAT_FP
	bit	7,h                        ; 04255C || 	bit	7,h                        ; 042519 || 04255C CB 7C       6326  SQR0:			BIT     7,H
	ld	a,$15                       ; 04255E || 	ld	a,$15                       ; 04251B || 04255E 3E 15       6327          		LD      A,NGROOT
	jp	nz,$0420c0                  ; 042560 || 	jp	nz,$04207d                  ; 04251D || 042560 C2 C0 20 04 6328          		JP      NZ,ERROR_FP_        ;"-ve root"
	dec	c                          ; 042564 || 	dec	c                          ; 042521 || 042564 0D          6329          		DEC     C
	inc	c                          ; 042565 || 	inc	c                          ; 042522 || 042565 0C          6330          		INC     C
	ret	z                          ; 042566 || 	ret	z                          ; 042523 || 042566 C8          6331          		RET     Z               ;ZERO
	set	7,h                        ; 042567 || 	set	7,h                        ; 042524 || 042567 CB FC       6332          		SET     7,H             ;IMPLIED 1
	bit	0,c                        ; 042569 || 	bit	0,c                        ; 042526 || 042569 CB 41       6333          		BIT     0,C
	call	z,$042c22                 ; 04256B || 	call	z,$042bdf                 ; 042528 || 04256B CC 22 2C 04 6334          		CALL    Z,DIV2          ;MAKE EXPONENT ODD
	ld	a,c                         ; 04256F || 	ld	a,c                         ; 04252C || 04256F 79          6335          		LD      A,C
	sub	$80                        ; 042570 || 	sub	$80                        ; 04252D || 042570 D6 80       6336          		SUB     80H
	sra	a                          ; 042572 || 	sra	a                          ; 04252F || 042572 CB 2F       6337          		SRA     A               ;HALVE EXPONENT
	add	a,$80                      ; 042574 || 	add	a,$80                      ; 042531 || 042574 C6 80       6338          		ADD     A,80H
	ld	c,a                         ; 042576 || 	ld	c,a                         ; 042533 || 042576 4F          6339          		LD      C,A
	push	bc                        ; 042577 || 	push	bc                        ; 042534 || 042577 C5          6340          		PUSH    BC              ;SAVE EXPONENT
	ex	de,hl                       ; 042578 || 	ex	de,hl                       ; 042535 || 042578 EB          6341          		EX      DE,HL
	ld	hl,$000000                  ; 042579 || 	ld	hl,$000000                  ; 042536 || 042579 21 00 00 00 6342          		LD      HL,0
	ld	b,h                         ; 04257D || 	ld	b,h                         ; 04253A || 04257D 44          6343          		LD      B,H
	ld	c,l                         ; 04257E || 	ld	c,l                         ; 04253B || 04257E 4D          6344          		LD      C,L
	exx                            ; 04257F || 	exx                            ; 04253C || 04257F D9          6345          		EXX
	ex	de,hl                       ; 042580 || 	ex	de,hl                       ; 04253D || 042580 EB          6346          		EX      DE,HL
	ld	hl,$000000                  ; 042581 || 	ld	hl,$000000                  ; 04253E || 042581 21 00 00 00 6347          		LD      HL,0
	ld	b,h                         ; 042585 || 	ld	b,h                         ; 042542 || 042585 44          6348          		LD      B,H
	ld	c,l                         ; 042586 || 	ld	c,l                         ; 042543 || 042586 4D          6349          		LD      C,L
	ld	a,$e1                       ; 042587 || 	ld	a,$e1                       ; 042544 || 042587 3E E1       6350          		LD      A,-31
	call	$042e18                   ; 042589 || 	call	$042dd5                   ; 042546 || 042589 CD 18 2E 04 6351          		CALL    SQRA            ;ROOT
	exx                            ; 04258D || 	exx                            ; 04254A || 04258D D9          6352          		EXX
	bit	7,b                        ; 04258E || 	bit	7,b                        ; 04254B || 04258E CB 78       6353          		BIT     7,B
	exx                            ; 042590 || 	exx                            ; 04254D || 042590 D9          6354          		EXX
	call	z,$042e18                 ; 042591 || 	call	z,$042dd5                 ; 04254E || 042591 CC 18 2E 04 6355          		CALL    Z,SQRA          ;NORMALISE & INC A
	call	$042e59                   ; 042595 || 	call	$042e16                   ; 042552 || 042595 CD 59 2E 04 6356          		CALL    SQRB
	or	a                           ; 042599 || 	or	a                           ; 042556 || 042599 B7          6357          		OR      A               ;CLEAR CARRY
	call	$042dc6                   ; 04259A || 	call	$042d83                   ; 042557 || 04259A CD C6 2D 04 6358          		CALL    DIVB
	rr	e                           ; 04259E || 	rr	e                           ; 04255B || 04259E CB 1B       6359          		RR      E               ;LSB TO CARRY
	ld	h,b                         ; 0425A0 || 	ld	h,b                         ; 04255D || 0425A0 60          6360          		LD      H,B
	ld	l,c                         ; 0425A1 || 	ld	l,c                         ; 04255E || 0425A1 69          6361          		LD      L,C
	exx                            ; 0425A2 || 	exx                            ; 04255F || 0425A2 D9          6362          		EXX
	ld	h,b                         ; 0425A3 || 	ld	h,b                         ; 042560 || 0425A3 60          6363          		LD      H,B
	ld	l,c                         ; 0425A4 || 	ld	l,c                         ; 042561 || 0425A4 69          6364          		LD      L,C
	call	c,$042c02                 ; 0425A5 || 	call	c,$042bbf                 ; 042562 || 0425A5 DC 02 2C 04 6365          		CALL    C,ADD1_FP          ;ROUND UP
	pop	bc                         ; 0425A9 || 	pop	bc                         ; 042566 || 0425A9 C1          6366          		POP     BC              ;RESTORE EXPONENT
	call	c,$042c2f                 ; 0425AA || 	call	c,$042bec                 ; 042567 || 0425AA DC 2F 2C 04 6367          		CALL    C,INCC
	rra                            ; 0425AE || 	rra                            ; 04256B || 0425AE 1F          6368          		RRA
	sbc	a,a                        ; 0425AF || 	sbc	a,a                        ; 04256C || 0425AF 9F          6369          		SBC     A,A
	add	a,c                        ; 0425B0 || 	add	a,c                        ; 04256D || 0425B0 81          6370          		ADD     A,C
	ld	c,a                         ; 0425B1 || 	ld	c,a                         ; 04256E || 0425B1 4F          6371          		LD      C,A
	res	7,h                        ; 0425B2 || 	res	7,h                        ; 04256F || 0425B2 CB BC       6372          		RES     7,H             ;POSITIVE
	xor	a                          ; 0425B4 || 	xor	a                          ; 042571 || 0425B4 AF          6373          		XOR     A
	ret                            ; 0425B5 || 	ret                            ; 042572 || 0425B5 C9          6374          		RET
	call	$042be9                   ; 0425B6 || 	call	$042ba6                   ; 042573 || 0425B6 CD E9 2B 04 6379  TAN_FP:			CALL    SFLOAT_FP
	call	$042cf6                   ; 0425BA || 	call	$042cb3                   ; 042577 || 0425BA CD F6 2C 04 6380          		CALL    PUSH5
	call	$0425e0                   ; 0425BE || 	call	$04259d                   ; 04257B || 0425BE CD E0 25 04 6381          		CALL    COS0
	call	$042cff                   ; 0425C2 || 	call	$042cbc                   ; 04257F || 0425C2 CD FF 2C 04 6382          		CALL    POP5
	call	$042cf6                   ; 0425C6 || 	call	$042cb3                   ; 042583 || 0425C6 CD F6 2C 04 6383          		CALL    PUSH5
	call	$042c1a                   ; 0425CA || 	call	$042bd7                   ; 042587 || 0425CA CD 1A 2C 04 6384          		CALL    SWAP_FP
	call	$0425ed                   ; 0425CE || 	call	$0425aa                   ; 04258B || 0425CE CD ED 25 04 6385          		CALL    SIN0
	call	$042cff                   ; 0425D2 || 	call	$042cbc                   ; 04258F || 0425D2 CD FF 2C 04 6386          		CALL    POP5
	call	$0422a8                   ; 0425D6 || 	call	$042265                   ; 042593 || 0425D6 CD A8 22 04 6387          		CALL    FDIV
	xor	a                          ; 0425DA || 	xor	a                          ; 042597 || 0425DA AF          6388          		XOR     A               ;NUMERIC MARKER
	ret                            ; 0425DB || 	ret                            ; 042598 || 0425DB C9          6389          		RET
	call	$042be9                   ; 0425DC || 	call	$042ba6                   ; 042599 || 0425DC CD E9 2B 04 6394  COS_FP:			CALL    SFLOAT_FP
	call	$042b45                   ; 0425E0 || 	call	$042b02                   ; 04259D || 0425E0 CD 45 2B 04 6395  COS0:			CALL    SCALE
	inc	e                          ; 0425E4 || 	inc	e                          ; 0425A1 || 0425E4 1C          6396          		INC     E
	inc	e                          ; 0425E5 || 	inc	e                          ; 0425A2 || 0425E5 1C          6397          		INC     E
	ld	a,e                         ; 0425E6 || 	ld	a,e                         ; 0425A3 || 0425E6 7B          6398          		LD      A,E
	jr	$+$12                       ; 0425E7 || 	jr	$+$12                       ; 0425A4 || 0425E7 18 10       6399          		JR      SIN1
	call	$042be9                   ; 0425E9 || 	call	$042ba6                   ; 0425A6 || 0425E9 CD E9 2B 04 6404  SIN_FP:			CALL    SFLOAT_FP
	push	hl                        ; 0425ED || 	push	hl                        ; 0425AA || 0425ED E5          6405  SIN0:			PUSH    HL              ;H7=SIGN
	call	$042b45                   ; 0425EE || 	call	$042b02                   ; 0425AB || 0425EE CD 45 2B 04 6406          		CALL    SCALE
	pop	af                         ; 0425F2 || 	pop	af                         ; 0425AF || 0425F2 F1          6407          		POP     AF
	rlca                           ; 0425F3 || 	rlca                           ; 0425B0 || 0425F3 07          6408          		RLCA
	rlca                           ; 0425F4 || 	rlca                           ; 0425B1 || 0425F4 07          6409          		RLCA
	rlca                           ; 0425F5 || 	rlca                           ; 0425B2 || 0425F5 07          6410          		RLCA
	and	$04                        ; 0425F6 || 	and	$04                        ; 0425B3 || 0425F6 E6 04       6411          		AND     4
	xor	e                          ; 0425F8 || 	xor	e                          ; 0425B5 || 0425F8 AB          6412          		XOR     E
	push	af                        ; 0425F9 || 	push	af                        ; 0425B6 || 0425F9 F5          6413  SIN1:			PUSH    AF              ;OCTANT
	res	7,h                        ; 0425FA || 	res	7,h                        ; 0425B7 || 0425FA CB BC       6414          		RES     7,H
	rra                            ; 0425FC || 	rra                            ; 0425B9 || 0425FC 1F          6415          		RRA
	call	$04268b                   ; 0425FD || 	call	$042648                   ; 0425BA || 0425FD CD 8B 26 04 6416          		CALL    PIBY4
	call	c,$04222c                 ; 042601 || 	call	c,$0421e9                 ; 0425BE || 042601 DC 2C 22 04 6417          		CALL    C,RSUB          ;X=(PI/4)-X
	pop	af                         ; 042605 || 	pop	af                         ; 0425C2 || 042605 F1          6418          		POP     AF
	push	af                        ; 042606 || 	push	af                        ; 0425C3 || 042606 F5          6419          		PUSH    AF
	and	$03                        ; 042607 || 	and	$03                        ; 0425C4 || 042607 E6 03       6420          		AND     3
	jp	po,$042642                  ; 042609 || 	jp	po,$0425ff                  ; 0425C6 || 042609 E2 42 26 04 6421          		JP      PO,SIN2         ;USE COSINE APPROX.
	call	$042cf6                   ; 04260D || 	call	$042cb3                   ; 0425CA || 04260D CD F6 2C 04 6422          		CALL    PUSH5           ;SAVE X
	call	$042cee                   ; 042611 || 	call	$042cab                   ; 0425CE || 042611 CD EE 2C 04 6423          		CALL    SQUARE          ;PUSH X*X
	call	$042d33                   ; 042615 || 	call	$042cf0                   ; 0425D2 || 042615 CD 33 2D 04 6424          		CALL    POLY
	or	a                           ; 042619 || 	or	a                           ; 0425D6 || 042619 B7 A8       6425          		DW	0A8B7H          ;a(8)
	xor	b                          ; 04261A || 	xor	b                          ; 0425D7
	ld	de,$266d36                  ; 04261B || 	ld	de,$266d36                  ; 0425D8 || 04261B 11 36       6426          		DW	3611H
	sbc	a,$05                      ; 04261F || 	sbc	a,$05                      ; 0425DC
	ret	nc                         ; 042621 || 	ret	nc                         ; 0425DE
	ld	(hl),e                      ; 042622 || 	ld	(hl),e                      ; 0425DF || 042622 73          6430          		DB	73H
	ret	nz                         ; 042623 || 	ret	nz                         ; 0425E0 || 042623 C0 80       6431          		DW	80C0H           ;a(4)
	add	a,b                        ; 042624 || 	add	a,b                        ; 0425E1
	adc	a,b                        ; 042625 || 	adc	a,b                        ; 0425E2 || 042625 88 08       6432          		DW	888H
	ex	af,af'                      ; 042626 || 	ex	af,af'                      ; 0425E3
	ld	a,c                         ; 042627 || 	ld	a,c                         ; 0425E4 || 042627 79          6433          		DB	79H
	sbc	a,l                        ; 042628 || 	sbc	a,l                        ; 0425E5 || 042628 9D AA       6434          		DW	0AA9DH          ;a(2)
	xor	d                          ; 042629 || 	xor	d                          ; 0425E6
	xor	d                          ; 04262A || 	xor	d                          ; 0425E7 || 04262A AA AA       6435          		DW	0AAAAH
	xor	d                          ; 04262B || 	xor	d                          ; 0425E8
	ld	a,l                         ; 04262C || 	ld	a,l                         ; 0425E9 || 04262C 7D          6436          		DB	7DH
	nop                            ; 04262D || 	nop                            ; 0425EA || 04262D 00 00       6437          		DW	0               ;a(0)
	nop                            ; 04262E || 	nop                            ; 0425EB
	nop                            ; 04262F || 	nop                            ; 0425EC || 04262F 00 00       6438          		DW	0
	nop                            ; 042630 || 	nop                            ; 0425ED
	add	a,b                        ; 042631 || 	add	a,b                        ; 0425EE || 042631 80          6439          		DB	80H
	call	$042cff                   ; 042632 || 	call	$042cbc                   ; 0425EF || 042632 CD FF 2C 04 6440          		CALL    POP5
	call	$042cff                   ; 042636 || 	call	$042cbc                   ; 0425F3 || 042636 CD FF 2C 04 6441          		CALL    POP5
	call	$042351                   ; 04263A || 	call	$04230e                   ; 0425F7 || 04263A CD 51 23 04 6442          		CALL    FMUL
	jp	$042667                     ; 04263E || 	jp	$042624                     ; 0425FB || 04263E C3 67 26 04 6443          		JP      SIN3
	call	$042cee                   ; 042642 || 	call	$042cab                   ; 0425FF || 042642 CD EE 2C 04 6445  SIN2:			CALL    SQUARE          ;PUSH X*X
	call	$042d33                   ; 042646 || 	call	$042cf0                   ; 042603 || 042646 CD 33 2D 04 6446          		CALL    POLY
	ld	(hl),c                      ; 04264A || 	ld	(hl),c                      ; 042607 || 04264A 71 D5       6447          		DW	0D571H          ;b(8)
	push	de                        ; 04264B || 	push	de                        ; 042608
	ld	a,b                         ; 04264C || 	ld	a,b                         ; 042609 || 04264C 78 4C       6448          		DW	4C78H
	ld	c,h                         ; 04264D || 	ld	c,h                         ; 04260A
	ld	(hl),b                      ; 04264E || 	ld	(hl),b                      ; 04260B || 04264E 70          6449          		DB	70H
	xor	a                          ; 04264F || 	xor	a                          ; 04260C || 04264F AF 94       6450          		DW	94AFH           ;b(6)
	sub	h                          ; 042650 || 	sub	h                          ; 04260D
	inc	bc                         ; 042651 || 	inc	bc                         ; 04260E || 042651 03 B6       6451          		DW	0B603H
	or	(hl)                        ; 042652 || 	or	(hl)                        ; 04260F
	halt                           ; 042653 || 	halt                           ; 042610 || 042653 76          6452          		DB	76H
	ret	z                          ; 042654 || 	ret	z                          ; 042611 || 042654 C8 9C       6453          		DW	9CC8H           ;b(4)
	sbc	a,h                        ; 042655 || 	sbc	a,h                        ; 042612
	xor	d                          ; 042656 || 	xor	d                          ; 042613 || 042656 AA 2A       6454          		DW	2AAAH
	ld	hl,($ffdd7b)                ; 042657 || 	ld	hl,($ffdd7b)                ; 042614
	rst	$38                        ; 04265B || 	rst	$38                        ; 042618 || 04265B FF FF       6457          		DW	0FFFFH
	rst	$38                        ; 04265C || 	rst	$38                        ; 042619
	ld	a,(hl)                      ; 04265D || 	ld	a,(hl)                      ; 04261A || 04265D 7E          6458          		DB	7EH
	nop                            ; 04265E || 	nop                            ; 04261B || 04265E 00 00       6459          		DW	0               ;b(0)
	nop                            ; 04265F || 	nop                            ; 04261C
	nop                            ; 042660 || 	nop                            ; 04261D || 042660 00 00       6460          		DW	0
	nop                            ; 042661 || 	nop                            ; 04261E
	add	a,b                        ; 042662 || 	add	a,b                        ; 04261F || 042662 80          6461          		DB	80H
	call	$042cff                   ; 042663 || 	call	$042cbc                   ; 042620 || 042663 CD FF 2C 04 6462          		CALL    POP5
	pop	af                         ; 042667 || 	pop	af                         ; 042624 || 042667 F1          6463  SIN3:			POP     AF
	and	$04                        ; 042668 || 	and	$04                        ; 042625 || 042668 E6 04       6464          		AND     4
	ret	z                          ; 04266A || 	ret	z                          ; 042627 || 04266A C8          6465          		RET     Z
	dec	c                          ; 04266B || 	dec	c                          ; 042628 || 04266B 0D          6466          		DEC     C
	inc	c                          ; 04266C || 	inc	c                          ; 042629 || 04266C 0C          6467          		INC     C
	ret	z                          ; 04266D || 	ret	z                          ; 04262A || 04266D C8          6468          		RET     Z               ;ZERO
	set	7,h                        ; 04266E || 	set	7,h                        ; 04262B || 04266E CB FC       6469          		SET     7,H             ;MAKE NEGATIVE
	ret                            ; 042670 || 	ret                            ; 04262D || 042670 C9          6470          		RET
	ld	hl,$000000                  ; 042671 || 	ld	hl,$000000                  ; 04262E || 042671 21 00 00 00 6474  FONE_FP:			LD      HL,0
	exx                            ; 042675 || 	exx                            ; 042632 || 042675 D9          6475          		EXX
	ld	hl,$000000                  ; 042676 || 	ld	hl,$000000                  ; 042633 || 042676 21 00 00 00 6476          		LD      HL,0
	exx                            ; 04267A || 	exx                            ; 042637 || 04267A D9          6477          		EXX
	ld	c,$80                       ; 04267B || 	ld	c,$80                       ; 042638 || 04267B 0E 80       6478          		LD      C,80H
	ret                            ; 04267D || 	ret                            ; 04263A || 04267D C9          6479          		RET
	ld	de,$000000                  ; 04267E || 	ld	de,$000000                  ; 04263B || 04267E 11 00 00 00 6481  DONE:			LD      DE,0
	exx                            ; 042682 || 	exx                            ; 04263F || 042682 D9          6482          		EXX
	ld	de,$000000                  ; 042683 || 	ld	de,$000000                  ; 042640 || 042683 11 00 00 00 6483          		LD      DE,0
	exx                            ; 042687 || 	exx                            ; 042644 || 042687 D9          6484          		EXX
	ld	b,$80                       ; 042688 || 	ld	b,$80                       ; 042645 || 042688 06 80       6485          		LD      B,80H
	ret                            ; 04268A || 	ret                            ; 042647 || 04268A C9          6486          		RET
	ld	de,$00490f                  ; 04268B || 	ld	de,$00490f                  ; 042648 || 04268B 11 0F 49 00 6488  PIBY4:			LD      DE,490FH
	exx                            ; 04268F || 	exx                            ; 04264C || 04268F D9          6489          		EXX
	ld	de,$00daa2                  ; 042690 || 	ld	de,$00daa2                  ; 04264D || 042690 11 A2 DA 00 6490          		LD      DE,0DAA2H
	exx                            ; 042694 || 	exx                            ; 042651 || 042694 D9          6491          		EXX
	ld	b,$7f                       ; 042695 || 	ld	b,$7f                       ; 042652 || 042695 06 7F       6492          		LD      B,7FH
	ret                            ; 042697 || 	ret                            ; 042654 || 042697 C9          6493          		RET
	call	$042be9                   ; 042698 || 	call	$042ba6                   ; 042655 || 042698 CD E9 2B 04 6498  EXP_FP:			CALL    SFLOAT_FP
	call	$042729                   ; 04269C || 	call	$0426e6                   ; 042659 || 04269C CD 29 27 04 6499  EXP0:			CALL    LN2             ;LN(2)
	exx                            ; 0426A0 || 	exx                            ; 04265D || 0426A0 D9          6500          		EXX
	dec	e                          ; 0426A1 || 	dec	e                          ; 04265E || 0426A1 1D          6501  	        	DEC     E
	ld	bc,$00d1cf                  ; 0426A2 || 	ld	bc,$00d1cf                  ; 04265F || 0426A2 01 CF D1 00 6502  		        LD      BC,0D1CFH       ;0.6931471805599453
	exx                            ; 0426A6 || 	exx                            ; 042663 || 0426A6 D9          6503          		EXX
	push	hl                        ; 0426A7 || 	push	hl                        ; 042664 || 0426A7 E5          6504          		PUSH    HL              ;H7=SIGN
	call	$042b58                   ; 0426A8 || 	call	$042b15                   ; 042665 || 0426A8 CD 58 2B 04 6505          		CALL    MOD48           ;"MODULUS"
	pop	af                         ; 0426AC || 	pop	af                         ; 042669 || 0426AC F1          6506          		POP     AF
	bit	7,e                        ; 0426AD || 	bit	7,e                        ; 04266A || 0426AD CB 7B       6507          		BIT     7,E
	jr	z,$+$0d                     ; 0426AF || 	jr	z,$+$0d                     ; 04266C || 0426AF 28 0B       6508          		JR      Z,EXP1
	rla                            ; 0426B1 || 	rla                            ; 04266E || 0426B1 17          6509          		RLA
	jp	c,$042c66                   ; 0426B2 || 	jp	c,$042c23                   ; 04266F || 0426B2 DA 66 2C 04 6510          		JP      C,ZERO_FP
	ld	a,$18                       ; 0426B6 || 	ld	a,$18                       ; 042673 || 0426B6 3E 18       6511          		LD      A,EXPRNG
	jp	$0420c0                     ; 0426B8 || 	jp	$04207d                     ; 042675 || 0426B8 C3 C0 20 04 6512          		JP      ERROR_FP_           ;"Exp range"
	and	$80                        ; 0426BC || 	and	$80                        ; 042679 || 0426BC E6 80       6514  EXP1:			AND     80H
	or	e                           ; 0426BE || 	or	e                           ; 04267B || 0426BE B3          6515          		OR      E
	push	af                        ; 0426BF || 	push	af                        ; 04267C || 0426BF F5          6516          		PUSH    AF              ;INTEGER PART
	res	7,h                        ; 0426C0 || 	res	7,h                        ; 04267D || 0426C0 CB BC       6517          		RES     7,H
	call	$042cf6                   ; 0426C2 || 	call	$042cb3                   ; 04267F || 0426C2 CD F6 2C 04 6518          		CALL    PUSH5           ;PUSH X*LN(2)
	call	$042d33                   ; 0426C6 || 	call	$042cf0                   ; 042683 || 0426C6 CD 33 2D 04 6519          		CALL    POLY
	ld	(hl),d                      ; 0426CA || 	ld	(hl),d                      ; 042687 || 0426CA 72 40       6520          		DW	4072H           ;a(7)
	ld.sis	l,$94                   ; 0426CB || 	ld.sis	l,$94                   ; 042688
	ld	(hl),e                      ; 0426CE || 	ld	(hl),e                      ; 04268B || 0426CE 73          6522          		DB	73H
	ld	h,l                         ; 0426CF || 	ld	h,l                         ; 04268C || 0426CF 65 6F       6523          		DW	6F65H           ;a(6)
	ld	l,a                         ; 0426D0 || 	ld	l,a                         ; 04268D
	ld	c,a                         ; 0426D1 || 	ld	c,a                         ; 04268E || 0426D1 4F 2E       6524          		DW	2E4FH
	ld	l,$76                       ; 0426D2 || 	ld	l,$76                       ; 04268F
	scf                            ; 0426D4 || 	scf                            ; 042691 || 0426D4 37 6D       6526          		DW	6D37H           ;a(5)
	ld	l,l                         ; 0426D5 || 	ld	l,l                         ; 042692
	ld	(bc),a                      ; 0426D6 || 	ld	(bc),a                      ; 042693 || 0426D6 02 88       6527          		DW	8802H
	adc	a,b                        ; 0426D7 || 	adc	a,b                        ; 042694
	ld	a,c                         ; 0426D8 || 	ld	a,c                         ; 042695 || 0426D8 79          6528          		DB	79H
	ld	(de),a                      ; 0426D9 || 	ld	(de),a                      ; 042696 || 0426D9 12 E5       6529          		DW	0E512H          ;a(4)
	push	hl                        ; 0426DA || 	push	hl                        ; 042697
	and	b                          ; 0426DB || 	and	b                          ; 042698 || 0426DB A0 2A       6530          		DW	2AA0H
	ld	hl,($4f147b)                ; 0426DC || 	ld	hl,($4f147b)                ; 042699
	xor	d                          ; 0426E0 || 	xor	d                          ; 04269D || 0426E0 AA AA       6533          		DW	0AAAAH
	xor	d                          ; 0426E1 || 	xor	d                          ; 04269E
	ld	a,l                         ; 0426E2 || 	ld	a,l                         ; 04269F || 0426E2 7D          6534          		DB	7DH
	ld	d,(hl)                      ; 0426E3 || 	ld	d,(hl)                      ; 0426A0 || 0426E3 56 FD       6535          		DW	0FD56H          ;a(2)
	trap                           ; 0426E4 || 	trap                           ; 0426A1
	ld	a,a                         ; 0426E6 || 	ld	a,a                         ; 0426A3
	ld	a,(hl)                      ; 0426E7 || 	ld	a,(hl)                      ; 0426A4 || 0426E7 7E          6537          		DB	7EH
	cp	$ff                         ; 0426E8 || 	cp	$ff                         ; 0426A5 || 0426E8 FE FF       6538          		DW	0FFFEH          ;a(1)
	rst	$38                        ; 0426EA || 	rst	$38                        ; 0426A7 || 0426EA FF FF       6539          		DW	0FFFFH
	rst	$38                        ; 0426EB || 	rst	$38                        ; 0426A8
	ld	a,a                         ; 0426EC || 	ld	a,a                         ; 0426A9 || 0426EC 7F          6540          		DB	7FH
	nop                            ; 0426ED || 	nop                            ; 0426AA || 0426ED 00 00       6541          		DW	0               ;a(0)
	nop                            ; 0426EE || 	nop                            ; 0426AB
	nop                            ; 0426EF || 	nop                            ; 0426AC || 0426EF 00 00       6542          		DW	0
	nop                            ; 0426F0 || 	nop                            ; 0426AD
	add	a,b                        ; 0426F1 || 	add	a,b                        ; 0426AE || 0426F1 80          6543          		DB	80H
	call	$042cff                   ; 0426F2 || 	call	$042cbc                   ; 0426AF || 0426F2 CD FF 2C 04 6544          		CALL    POP5
	pop	af                         ; 0426F6 || 	pop	af                         ; 0426B3 || 0426F6 F1          6545          		POP     AF
	push	af                        ; 0426F7 || 	push	af                        ; 0426B4 || 0426F7 F5          6546          		PUSH    AF
	call	p,$04271d                 ; 0426F8 || 	call	p,$0426da                 ; 0426B5 || 0426F8 F4 1D 27 04 6547          		CALL    P,RECIP         ;X=1/X
	pop	af                         ; 0426FC || 	pop	af                         ; 0426B9 || 0426FC F1          6548          		POP     AF
	jp	p,$042705                   ; 0426FD || 	jp	p,$0426c2                   ; 0426BA || 0426FD F2 05 27 04 6549          		JP      P,EXP4
	and	$7f                        ; 042701 || 	and	$7f                        ; 0426BE || 042701 E6 7F       6550          		AND     7FH
	neg                            ; 042703 || 	neg                            ; 0426C0 || 042703 ED 44       6551          		NEG
	add	a,$80                      ; 042705 || 	add	a,$80                      ; 0426C2 || 042705 C6 80       6552  EXP4:			ADD     A,80H
	add	a,c                        ; 042707 || 	add	a,c                        ; 0426C4 || 042707 81          6553          		ADD     A,C
	jr	c,$+$08                     ; 042708 || 	jr	c,$+$08                     ; 0426C5 || 042708 38 06       6554          		JR      C,EXP2
	jp	p,$042c66                   ; 04270A || 	jp	p,$042c23                   ; 0426C7 || 04270A F2 66 2C 04 6555          		JP      P,ZERO_FP          ;UNDERFLOW
	jr	$+$06                       ; 04270E || 	jr	$+$06                       ; 0426CB || 04270E 18 04       6556          		JR      EXP3
	jp	m,$042c31                   ; 042710 || 	jp	m,$042bee                   ; 0426CD || 042710 FA 31 2C 04 6557  EXP2:			JP      M,OFLOW         ;OVERFLOW
	add	a,$80                      ; 042714 || 	add	a,$80                      ; 0426D1 || 042714 C6 80       6558  EXP3:			ADD     A,80H
	jp	z,$042c66                   ; 042716 || 	jp	z,$042c23                   ; 0426D3 || 042716 CA 66 2C 04 6559          		JP      Z,ZERO_FP
	ld	c,a                         ; 04271A || 	ld	c,a                         ; 0426D7 || 04271A 4F          6560          		LD      C,A
	xor	a                          ; 04271B || 	xor	a                          ; 0426D8 || 04271B AF          6561          		XOR     A               ;NUMERIC MARKER
	ret                            ; 04271C || 	ret                            ; 0426D9 || 04271C C9          6562          		RET
	call	$04267e                   ; 04271D || 	call	$04263b                   ; 0426DA || 04271D CD 7E 26 04 6564  RECIP:			CALL    DONE
	call	$042c1a                   ; 042721 || 	call	$042bd7                   ; 0426DE || 042721 CD 1A 2C 04 6565  RDIV:			CALL    SWAP_FP
	jp	$0422a8                     ; 042725 || 	jp	$042265                     ; 0426E2 || 042725 C3 A8 22 04 6566          		JP      FDIV            ;RECIPROCAL
	ld	de,$003172                  ; 042729 || 	ld	de,$003172                  ; 0426E6 || 042729 11 72 31 00 6568  LN2:			LD      DE,3172H        ;LN(2)
	exx                            ; 04272D || 	exx                            ; 0426EA || 04272D D9          6569          		EXX
	ld	de,$0017f8                  ; 04272E || 	ld	de,$0017f8                  ; 0426EB || 04272E 11 F8 17 00 6570          		LD      DE,17F8H
	exx                            ; 042732 || 	exx                            ; 0426EF || 042732 D9          6571          		EXX
	ld	b,$7f                       ; 042733 || 	ld	b,$7f                       ; 0426F0 || 042733 06 7F       6572          		LD      B,7FH
	ret                            ; 042735 || 	ret                            ; 0426F2 || 042735 C9          6573          		RET
	call	$042be9                   ; 042736 || 	call	$042ba6                   ; 0426F3 || 042736 CD E9 2B 04 6578  LN_FP:			CALL    SFLOAT_FP
	ld	a,$16                       ; 04273A || 	ld	a,$16                       ; 0426F7 || 04273A 3E 16       6579  LN0:			LD      A,LOGRNG
	bit	7,h                        ; 04273C || 	bit	7,h                        ; 0426F9 || 04273C CB 7C       6580          		BIT     7,H
	jp	nz,$0420c0                  ; 04273E || 	jp	nz,$04207d                  ; 0426FB || 04273E C2 C0 20 04 6581          		JP      NZ,ERROR_FP_        ;"Log range"
	inc	c                          ; 042742 || 	inc	c                          ; 0426FF || 042742 0C          6582          		INC     C
	dec	c                          ; 042743 || 	dec	c                          ; 042700 || 042743 0D          6583          		DEC     C
	jp	z,$0420c0                   ; 042744 || 	jp	z,$04207d                   ; 042701 || 042744 CA C0 20 04 6584          		JP      Z,ERROR_FP_
	ld	de,$003504                  ; 042748 || 	ld	de,$003504                  ; 042705 || 042748 11 04 35 00 6585          		LD      DE,3504H        ;SQR(2)
	exx                            ; 04274C || 	exx                            ; 042709 || 04274C D9          6586          		EXX
	ld	de,$00f333                  ; 04274D || 	ld	de,$00f333                  ; 04270A || 04274D 11 33 F3 00 6587          		LD      DE,0F333H       ;1.41421356237
	exx                            ; 042751 || 	exx                            ; 04270E || 042751 D9          6588          		EXX
	call	$042c79                   ; 042752 || 	call	$042c36                   ; 04270F || 042752 CD 79 2C 04 6589          		CALL    ICP0            ;MANTISSA>SQR(2)?
	ld	a,c                         ; 042756 || 	ld	a,c                         ; 042713 || 042756 79          6590          		LD      A,C             ;EXPONENT
	ld	c,$80                       ; 042757 || 	ld	c,$80                       ; 042714 || 042757 0E 80       6591          		LD      C,80H           ;1 <= X < 2
	jr	c,$+$04                     ; 042759 || 	jr	c,$+$04                     ; 042716 || 042759 38 02       6592          		JR      C,LN4
	dec	c                          ; 04275B || 	dec	c                          ; 042718 || 04275B 0D          6593          		DEC     C
	inc	a                          ; 04275C || 	inc	a                          ; 042719 || 04275C 3C          6594          		INC     A
	push	af                        ; 04275D || 	push	af                        ; 04271A || 04275D F5          6595  LN4:			PUSH    AF              ;SAVE EXPONENT
	call	$042d0b                   ; 04275E || 	call	$042cc8                   ; 04271B || 04275E CD 0B 2D 04 6596          		CALL    RATIO           ;X=(X-1)/(X+1)
	call	$042cf6                   ; 042762 || 	call	$042cb3                   ; 04271F || 042762 CD F6 2C 04 6597          		CALL    PUSH5
	call	$042cee                   ; 042766 || 	call	$042cab                   ; 042723 || 042766 CD EE 2C 04 6598  		        CALL    SQUARE          ;PUSH X*X
	call	$042d33                   ; 04276A || 	call	$042cf0                   ; 042727 || 04276A CD 33 2D 04 6599          		CALL    POLY
	ld	c,b                         ; 04276E || 	ld	c,b                         ; 04272B || 04276E 48 CC       6600          		DW	0CC48H          ;a(9)
	call	z,$7d74fb                 ; 04276F || 	call	z,$7d74fb                 ; 04272C
	xor	a                          ; 042773 || 	xor	a                          ; 042730 || 042773 AF AE       6603          		DW	0AEAFH          ;a(7)
	xor	(hl)                       ; 042774 || 	xor	(hl)                       ; 042731
	rst	$38                        ; 042775 || 	rst	$38                        ; 042732 || 042775 FF 11       6604          		DW	11FFH
	ld	de,$d98c7e                  ; 042776 || 	ld	de,$d98c7e                  ; 042733
	call	$e37e4c                   ; 04277A || 	call	$e37e4c                   ; 042737 || 04277A CD 4C       6607          		DW	4CCDH
	xor	c                          ; 04277E || 	xor	c                          ; 04273B
	xor	d                          ; 04277F || 	xor	d                          ; 04273C || 04277F AA 2A       6610          		DW	2AAAH
	ld	hl,($00007f)                ; 042780 || 	ld	hl,($00007f)                ; 04273D
	nop                            ; 042784 || 	nop                            ; 042741 || 042784 00 00       6613          		DW	0
	nop                            ; 042785 || 	nop                            ; 042742
	add	a,c                        ; 042786 || 	add	a,c                        ; 042743 || 042786 81          6614          		DB	81H
	call	$042cff                   ; 042787 || 	call	$042cbc                   ; 042744 || 042787 CD FF 2C 04 6615          		CALL    POP5
	call	$042cff                   ; 04278B || 	call	$042cbc                   ; 042748 || 04278B CD FF 2C 04 6616          		CALL    POP5
	call	$042351                   ; 04278F || 	call	$04230e                   ; 04274C || 04278F CD 51 23 04 6617          		CALL    FMUL
	pop	af                         ; 042793 || 	pop	af                         ; 042750 || 042793 F1          6618          		POP     AF              ;EXPONENT
	call	$042cf6                   ; 042794 || 	call	$042cb3                   ; 042751 || 042794 CD F6 2C 04 6619          		CALL    PUSH5
	ex	af,af'                      ; 042798 || 	ex	af,af'                      ; 042755 || 042798 08          6620          		EX      AF,AF'
	call	$042c66                   ; 042799 || 	call	$042c23                   ; 042756 || 042799 CD 66 2C 04 6621          		CALL    ZERO_FP
	ex	af,af'                      ; 04279D || 	ex	af,af'                      ; 04275A || 04279D 08          6622          		EX      AF,AF'
	sub	$80                        ; 04279E || 	sub	$80                        ; 04275B || 04279E D6 80       6623          		SUB     80H
	jr	z,$+$21                     ; 0427A0 || 	jr	z,$+$21                     ; 04275D || 0427A0 28 1F       6624          		JR      Z,LN3
	jr	nc,$+$04                    ; 0427A2 || 	jr	nc,$+$04                    ; 04275F || 0427A2 30 02       6625          		JR      NC,LN1
	cpl                            ; 0427A4 || 	cpl                            ; 042761 || 0427A4 2F          6626          		CPL
	inc	a                          ; 0427A5 || 	inc	a                          ; 042762 || 0427A5 3C          6627          		INC     A
	ld	h,a                         ; 0427A6 || 	ld	h,a                         ; 042763 || 0427A6 67          6628  LN1:			LD      H,A
	ld	c,$87                       ; 0427A7 || 	ld	c,$87                       ; 042764 || 0427A7 0E 87       6629          		LD      C,87H
	push	af                        ; 0427A9 || 	push	af                        ; 042766 || 0427A9 F5          6630          		PUSH    AF
	call	$042bc9                   ; 0427AA || 	call	$042b86                   ; 042767 || 0427AA CD C9 2B 04 6631          		CALL    FLOAT_
	res	7,h                        ; 0427AE || 	res	7,h                        ; 04276B || 0427AE CB BC       6632          		RES     7,H
	call	$042729                   ; 0427B0 || 	call	$0426e6                   ; 04276D || 0427B0 CD 29 27 04 6633          		CALL    LN2
	call	$042351                   ; 0427B4 || 	call	$04230e                   ; 042771 || 0427B4 CD 51 23 04 6634          		CALL    FMUL
	pop	af                         ; 0427B8 || 	pop	af                         ; 042775 || 0427B8 F1          6635          		POP     AF
	jr	nc,$+$08                    ; 0427B9 || 	jr	nc,$+$08                    ; 042776 || 0427B9 30 06       6636          		JR      NC,LN3
	jp	m,$0427c1                   ; 0427BB || 	jp	m,$04277e                   ; 042778 || 0427BB FA C1 27 04 6637          		JP      M,LN3
	set	7,h                        ; 0427BF || 	set	7,h                        ; 04277C || 0427BF CB FC       6638          		SET     7,H
	call	$042cff                   ; 0427C1 || 	call	$042cbc                   ; 04277E || 0427C1 CD FF 2C 04 6639  LN3:			CALL    POP5
	call	$04223f                   ; 0427C5 || 	call	$0421fc                   ; 042782 || 0427C5 CD 3F 22 04 6640          		CALL    FADD
	xor	a                          ; 0427C9 || 	xor	a                          ; 042786 || 0427C9 AF          6641          		XOR     A
	ret                            ; 0427CA || 	ret                            ; 042787 || 0427CA C9          6642          		RET
	call	$042736                   ; 0427CB || 	call	$0426f3                   ; 042788 || 0427CB CD 36 27 04 6647  LOG_FP:			CALL    LN_FP
	ld	de,$005e5b                  ; 0427CF || 	ld	de,$005e5b                  ; 04278C || 0427CF 11 5B 5E 00 6648          		LD      DE,5E5BH        ;LOG(e)
	exx                            ; 0427D3 || 	exx                            ; 042790 || 0427D3 D9          6649          		EXX
	ld	de,$00d8a9                  ; 0427D4 || 	ld	de,$00d8a9                  ; 042791 || 0427D4 11 A9 D8 00 6650          		LD      DE,0D8A9H
	exx                            ; 0427D8 || 	exx                            ; 042795 || 0427D8 D9          6651          		EXX
	ld	b,$7e                       ; 0427D9 || 	ld	b,$7e                       ; 042796 || 0427D9 06 7E       6652          		LD      B,7EH
	call	$042351                   ; 0427DB || 	call	$04230e                   ; 042798 || 0427DB CD 51 23 04 6653          		CALL    FMUL
	xor	a                          ; 0427DF || 	xor	a                          ; 04279C || 0427DF AF          6654          		XOR     A
	ret                            ; 0427E0 || 	ret                            ; 04279D || 0427E0 C9          6655          		RET
	call	$042be9                   ; 0427E1 || 	call	$042ba6                   ; 04279E || 0427E1 CD E9 2B 04 6660  ASN_FP:			CALL    SFLOAT_FP
	call	$042cf6                   ; 0427E5 || 	call	$042cb3                   ; 0427A2 || 0427E5 CD F6 2C 04 6661          		CALL    PUSH5
	call	$042ce6                   ; 0427E9 || 	call	$042ca3                   ; 0427A6 || 0427E9 CD E6 2C 04 6662          		CALL    COPY_
	call	$042351                   ; 0427ED || 	call	$04230e                   ; 0427AA || 0427ED CD 51 23 04 6663          		CALL    FMUL
	call	$04267e                   ; 0427F1 || 	call	$04263b                   ; 0427AE || 0427F1 CD 7E 26 04 6664          		CALL    DONE
	call	$04222c                   ; 0427F5 || 	call	$0421e9                   ; 0427B2 || 0427F5 CD 2C 22 04 6665          		CALL    RSUB
	call	$04255c                   ; 0427F9 || 	call	$042519                   ; 0427B6 || 0427F9 CD 5C 25 04 6666          		CALL    SQR0
	call	$042cff                   ; 0427FD || 	call	$042cbc                   ; 0427BA || 0427FD CD FF 2C 04 6667          		CALL    POP5
	inc	c                          ; 042801 || 	inc	c                          ; 0427BE || 042801 0C          6668          		INC     C
	dec	c                          ; 042802 || 	dec	c                          ; 0427BF || 042802 0D          6669          		DEC     C
	ld	a,$02                       ; 042803 || 	ld	a,$02                       ; 0427C0 || 042803 3E 02       6670          		LD      A,2
	push	de                        ; 042805 || 	push	de                        ; 0427C2 || 042805 D5          6671          		PUSH    DE
	jp	z,$04288b                   ; 042806 || 	jp	z,$042848                   ; 0427C3 || 042806 CA 8B 28 04 6672          		JP      Z,ACS1
	pop	de                         ; 04280A || 	pop	de                         ; 0427C7 || 04280A D1          6673          		POP     DE
	call	$042721                   ; 04280B || 	call	$0426de                   ; 0427C8 || 04280B CD 21 27 04 6674          		CALL    RDIV
	jr	$+$06                       ; 04280F || 	jr	$+$06                       ; 0427CC || 04280F 18 04       6675          		JR      ATN0
	call	$042be9                   ; 042811 || 	call	$042ba6                   ; 0427CE || 042811 CD E9 2B 04 6680  ATN_FP:			CALL    SFLOAT_FP
	push	hl                        ; 042815 || 	push	hl                        ; 0427D2 || 042815 E5          6681  ATN0:			PUSH    HL              ;SAVE SIGN
	res	7,h                        ; 042816 || 	res	7,h                        ; 0427D3 || 042816 CB BC       6682          		RES     7,H
	ld	de,$005413                  ; 042818 || 	ld	de,$005413                  ; 0427D5 || 042818 11 13 54 00 6683          		LD      DE,5413H        ;TAN(PI/8)=SQR(2)-1
	exx                            ; 04281C || 	exx                            ; 0427D9 || 04281C D9          6684          		EXX
	ld	de,$00ccd0                  ; 04281D || 	ld	de,$00ccd0                  ; 0427DA || 04281D 11 D0 CC 00 6685          		LD      DE,0CCD0H
	exx                            ; 042821 || 	exx                            ; 0427DE || 042821 D9          6686          		EXX
	ld	b,$7e                       ; 042822 || 	ld	b,$7e                       ; 0427DF || 042822 06 7E       6687          		LD      B,7EH
	call	$042c76                   ; 042824 || 	call	$042c33                   ; 0427E1 || 042824 CD 76 2C 04 6688          		CALL    FCP0            ;COMPARE
	ld	b,$00                       ; 042828 || 	ld	b,$00                       ; 0427E5 || 042828 06 00       6689          		LD      B,0
	jr	c,$+$24                     ; 04282A || 	jr	c,$+$24                     ; 0427E7 || 04282A 38 22       6690          		JR      C,ATN2
	ld	de,$001a82                  ; 04282C || 	ld	de,$001a82                  ; 0427E9 || 04282C 11 82 1A 00 6691          		LD      DE,1A82H        ;TAN(3*PI/8)=SQR(2)+1
	exx                            ; 042830 || 	exx                            ; 0427ED || 042830 D9          6692          		EXX
	ld	de,$00799a                  ; 042831 || 	ld	de,$00799a                  ; 0427EE || 042831 11 9A 79 00 6693          		LD      DE,799AH
	exx                            ; 042835 || 	exx                            ; 0427F2 || 042835 D9          6694          		EXX
	ld	b,$81                       ; 042836 || 	ld	b,$81                       ; 0427F3 || 042836 06 81       6695          		LD      B,81H
	call	$042c76                   ; 042838 || 	call	$042c33                   ; 0427F5 || 042838 CD 76 2C 04 6696          		CALL    FCP0            ;COMPARE
	jr	c,$+$0c                     ; 04283C || 	jr	c,$+$0c                     ; 0427F9 || 04283C 38 0A       6697          		JR      C,ATN1
	call	$04271d                   ; 04283E || 	call	$0426da                   ; 0427FB || 04283E CD 1D 27 04 6698          		CALL    RECIP           ;X=1/X
	ld	b,$02                       ; 042842 || 	ld	b,$02                       ; 0427FF || 042842 06 02       6699          		LD      B,2
	jp	$04284e                     ; 042844 || 	jp	$04280b                     ; 042801 || 042844 C3 4E 28 04 6700          		JP      ATN2
	call	$042d0b                   ; 042848 || 	call	$042cc8                   ; 042805 || 042848 CD 0B 2D 04 6701  ATN1:			CALL    RATIO           ;X=(X-1)/(X+1)
	ld	b,$01                       ; 04284C || 	ld	b,$01                       ; 042809 || 04284C 06 01       6702          		LD      B,1
	push	bc                        ; 04284E || 	push	bc                        ; 04280B || 04284E C5          6703  ATN2:			PUSH    BC              ;SAVE FLAG
	call	$042cf6                   ; 04284F || 	call	$042cb3                   ; 04280C || 04284F CD F6 2C 04 6704          		CALL    PUSH5
	call	$042cee                   ; 042853 || 	call	$042cab                   ; 042810 || 042853 CD EE 2C 04 6705          		CALL    SQUARE          ;PUSH X*X
	call	$042d33                   ; 042857 || 	call	$042cf0                   ; 042814 || 042857 CD 33 2D 04 6706          		CALL    POLY
	dec	(hl)                       ; 04285B || 	dec	(hl)                       ; 042818 || 04285B 35 F3       6707          		DW	0F335H          ;a(13)
	di                             ; 04285C || 	di                             ; 042819
	ret	c                          ; 04285D || 	ret	c                          ; 04281A || 04285D D8 37       6708          		DW	37D8H
	scf                            ; 04285E || 	scf                            ; 04281B
	ld	a,e                         ; 04285F || 	ld	a,e                         ; 04281C || 04285F 7B          6709          		DB	7BH
	sub	c                          ; 042860 || 	sub	c                          ; 04281D || 042860 91 6B       6710          		DW	6B91H           ;a(11)
	ld	l,e                         ; 042861 || 	ld	l,e                         ; 04281E
	cp	c                           ; 042862 || 	cp	c                           ; 04281F || 042862 B9 AA       6711          		DW	0AAB9H
	xor	d                          ; 042863 || 	xor	d                          ; 042820
	ld	a,h                         ; 042864 || 	ld	a,h                         ; 042821 || 042864 7C          6712          		DB	7CH
	sbc	a,$41                      ; 042865 || 	sbc	a,$41                      ; 042822 || 042865 DE 41       6713          		DW	41DEH           ;a(9)
	sub	a                          ; 042867 || 	sub	a                          ; 042824 || 042867 97 61       6714          		DW	6197H
	ld	h,c                         ; 042868 || 	ld	h,c                         ; 042825
	ld	a,h                         ; 042869 || 	ld	a,h                         ; 042826 || 042869 7C          6715          		DB	7CH
	ld	a,e                         ; 04286A || 	ld	a,e                         ; 042827 || 04286A 7B 9D       6716          		DW	9D7BH           ;a(7)
	sbc	a,l                        ; 04286B || 	sbc	a,l                        ; 042828
	scf                            ; 04286C || 	scf                            ; 042829 || 04286C 37 92       6717          		DW	9237H
	sub	d                          ; 04286D || 	sub	d                          ; 04282A
	ld	a,l                         ; 04286E || 	ld	a,l                         ; 04282B || 04286E 7D          6718          		DB	7DH
	ld	e,d                         ; 04286F || 	ld	e,d                         ; 04282C || 04286F 5A 2A       6719          		DW	2A5AH           ;a(5)
	ld	hl,($7d4ccc)                ; 042870 || 	ld	hl,($7d4ccc)                ; 04282D
	ld	e,h                         ; 042874 || 	ld	e,h                         ; 042831 || 042874 5C A9       6722          		DW	0A95CH          ;a(3)
	xor	c                          ; 042875 || 	xor	c                          ; 042832
	xor	d                          ; 042876 || 	xor	d                          ; 042833 || 042876 AA AA       6723          		DW	0AAAAH
	xor	d                          ; 042877 || 	xor	d                          ; 042834
	ld	a,(hl)                      ; 042878 || 	ld	a,(hl)                      ; 042835 || 042878 7E          6724          		DB	7EH
	nop                            ; 042879 || 	nop                            ; 042836 || 042879 00 00       6725          		DW	0               ;a(1)
	nop                            ; 04287A || 	nop                            ; 042837
	nop                            ; 04287B || 	nop                            ; 042838 || 04287B 00 00       6726          		DW	0
	nop                            ; 04287C || 	nop                            ; 042839
	add	a,b                        ; 04287D || 	add	a,b                        ; 04283A || 04287D 80          6727          		DB	80H
	call	$042cff                   ; 04287E || 	call	$042cbc                   ; 04283B || 04287E CD FF 2C 04 6728          		CALL    POP5
	call	$042cff                   ; 042882 || 	call	$042cbc                   ; 04283F || 042882 CD FF 2C 04 6729          		CALL    POP5
	call	$042351                   ; 042886 || 	call	$04230e                   ; 042843 || 042886 CD 51 23 04 6730          		CALL    FMUL
	pop	af                         ; 04288A || 	pop	af                         ; 042847 || 04288A F1          6731          		POP     AF
	call	$04268b                   ; 04288B || 	call	$042648                   ; 042848 || 04288B CD 8B 26 04 6732  ACS1:			CALL    PIBY4           ;PI/4
	rra                            ; 04288F || 	rra                            ; 04284C || 04288F 1F          6733          		RRA
	push	af                        ; 042890 || 	push	af                        ; 04284D || 042890 F5          6734          		PUSH    AF
	call	c,$04223f                 ; 042891 || 	call	c,$0421fc                 ; 04284E || 042891 DC 3F 22 04 6735          		CALL    C,FADD
	pop	af                         ; 042895 || 	pop	af                         ; 042852 || 042895 F1          6736          		POP     AF
	inc	b                          ; 042896 || 	inc	b                          ; 042853 || 042896 04          6737          		INC     B
	rra                            ; 042897 || 	rra                            ; 042854 || 042897 1F          6738          		RRA
	call	c,$04222c                 ; 042898 || 	call	c,$0421e9                 ; 042855 || 042898 DC 2C 22 04 6739          		CALL    C,RSUB
	pop	af                         ; 04289C || 	pop	af                         ; 042859 || 04289C F1          6740          		POP     AF
	or	a                           ; 04289D || 	or	a                           ; 04285A || 04289D B7          6741          		OR      A
	ret	p                          ; 04289E || 	ret	p                          ; 04285B || 04289E F0          6742          		RET     P
	set	7,h                        ; 04289F || 	set	7,h                        ; 04285C || 04289F CB FC       6743          		SET     7,H             ;MAKE NEGATIVE
	xor	a                          ; 0428A1 || 	xor	a                          ; 04285E || 0428A1 AF          6744          		XOR     A
	ret                            ; 0428A2 || 	ret                            ; 04285F || 0428A2 C9          6745          		RET
	call	$0427e1                   ; 0428A3 || 	call	$04279e                   ; 042860 || 0428A3 CD E1 27 04 6750  ACS_FP:			CALL    ASN_FP
	ld	a,$02                       ; 0428A7 || 	ld	a,$02                       ; 042864 || 0428A7 3E 02       6751          		LD      A,2
	push	af                        ; 0428A9 || 	push	af                        ; 042866 || 0428A9 F5          6752          		PUSH    AF
	jr	$-$1f                       ; 0428AA || 	jr	$-$1f                       ; 042867 || 0428AA 18 DF       6753          		JR      ACS1
	call	$042be9                   ; 0428AC || 	call	$042ba6                   ; 042869 || 0428AC CD E9 2B 04 6763  STR_FP:			CALL    SFLOAT_FP
	ld	b,$00                       ; 0428B0 || 	ld	b,$00                       ; 04286D || 0428B0 06 00       6764          		LD      B,0             ;DEFAULT PT. POSITION
	bit	7,h                        ; 0428B2 || 	bit	7,h                        ; 04286F || 0428B2 CB 7C       6765          		BIT     7,H             ;NEGATIVE?
	jr	z,$+$08                     ; 0428B4 || 	jr	z,$+$08                     ; 042871 || 0428B4 28 06       6766          		JR      Z,STR10
	res	7,h                        ; 0428B6 || 	res	7,h                        ; 042873 || 0428B6 CB BC       6767          		RES     7,H
	ld	a,$2d                       ; 0428B8 || 	ld	a,$2d                       ; 042875 || 0428B8 3E 2D       6768          		LD      A,'-'
	ld	(de),a                      ; 0428BA || 	ld	(de),a                      ; 042877 || 0428BA 12          6769          		LD      (DE),A          ;STORE SIGN
	inc	de                         ; 0428BB || 	inc	de                         ; 042878 || 0428BB 13          6770          		INC     DE
	xor	a                          ; 0428BC || 	xor	a                          ; 042879 || 0428BC AF          6771  STR10:			XOR     A               ;CLEAR A
	cp	c                           ; 0428BD || 	cp	c                           ; 04287A || 0428BD B9          6772          		CP      C
	jr	z,$+$50                     ; 0428BE || 	jr	z,$+$50                     ; 04287B || 0428BE 28 4E       6773          		JR      Z,STR02          ;ZERO
	push	de                        ; 0428C0 || 	push	de                        ; 04287D || 0428C0 D5          6774          		PUSH    DE              ;SAVE TEXT POINTER
	ld	a,b                         ; 0428C1 || 	ld	a,b                         ; 04287E || 0428C1 78          6775          		LD      A,B
	push	af                        ; 0428C2 || 	push	af                        ; 04287F || 0428C2 F5          6776  STR11:			PUSH    AF              ;SAVE DECIMAL COUNTER
	ld	a,c                         ; 0428C3 || 	ld	a,c                         ; 042880 || 0428C3 79          6777          		LD      A,C             ;BINARY EXPONENT
	cp	$a1                         ; 0428C4 || 	cp	$a1                         ; 042881 || 0428C4 FE A1       6778          		CP      161
	jr	nc,$+$1e                    ; 0428C6 || 	jr	nc,$+$1e                    ; 042883 || 0428C6 30 1C       6779          		JR      NC,STR14
	cp	$9b                         ; 0428C8 || 	cp	$9b                         ; 042885 || 0428C8 FE 9B       6780          		CP      155
	jr	nc,$+$2b                    ; 0428CA || 	jr	nc,$+$2b                    ; 042887 || 0428CA 30 29       6781          		JR      NC,STR15
	cpl                            ; 0428CC || 	cpl                            ; 042889 || 0428CC 2F          6782          		CPL
	cp	$e1                         ; 0428CD || 	cp	$e1                         ; 04288A || 0428CD FE E1       6783          		CP      225
	jr	c,$+$04                     ; 0428CF || 	jr	c,$+$04                     ; 04288C || 0428CF 38 02       6784          		JR      C,STR13
	ld	a,$f8                       ; 0428D1 || 	ld	a,$f8                       ; 04288E || 0428D1 3E F8       6785          		LD      A,-8
	add	a,$1c                      ; 0428D3 || 	add	a,$1c                      ; 042890 || 0428D3 C6 1C       6786  STR13:			ADD     A,28
	call	$042d62                   ; 0428D5 || 	call	$042d1f                   ; 042892 || 0428D5 CD 62 2D 04 6787          		CALL    POWR10
	push	af                        ; 0428D9 || 	push	af                        ; 042896 || 0428D9 F5          6788          		PUSH    AF
	call	$042351                   ; 0428DA || 	call	$04230e                   ; 042897 || 0428DA CD 51 23 04 6789          		CALL    FMUL
	pop	af                         ; 0428DE || 	pop	af                         ; 04289B || 0428DE F1          6790          		POP     AF
	ld	b,a                         ; 0428DF || 	ld	b,a                         ; 04289C || 0428DF 47          6791          		LD      B,A
	pop	af                         ; 0428E0 || 	pop	af                         ; 04289D || 0428E0 F1          6792          		POP     AF
	sub	b                          ; 0428E1 || 	sub	b                          ; 04289E || 0428E1 90          6793          		SUB     B
	jr	$-$20                       ; 0428E2 || 	jr	$-$20                       ; 04289F || 0428E2 18 DE       6794          		JR      STR11
	sub	$20                        ; 0428E4 || 	sub	$20                        ; 0428A1 || 0428E4 D6 20       6795  STR14:			SUB     32
	call	$042d62                   ; 0428E6 || 	call	$042d1f                   ; 0428A3 || 0428E6 CD 62 2D 04 6796          		CALL    POWR10
	push	af                        ; 0428EA || 	push	af                        ; 0428A7 || 0428EA F5          6797          		PUSH    AF
	call	$0422a8                   ; 0428EB || 	call	$042265                   ; 0428A8 || 0428EB CD A8 22 04 6798          		CALL    FDIV
	pop	af                         ; 0428EF || 	pop	af                         ; 0428AC || 0428EF F1          6799          		POP     AF
	ld	b,a                         ; 0428F0 || 	ld	b,a                         ; 0428AD || 0428F0 47          6800          		LD      B,A
	pop	af                         ; 0428F1 || 	pop	af                         ; 0428AE || 0428F1 F1          6801          		POP     AF
	add	a,b                        ; 0428F2 || 	add	a,b                        ; 0428AF || 0428F2 80          6802          		ADD     A,B
	jr	$-$31                       ; 0428F3 || 	jr	$-$31                       ; 0428B0 || 0428F3 18 CD       6803          		JR      STR11
	ld	a,$09                       ; 0428F5 || 	ld	a,$09                       ; 0428B2 || 0428F5 3E 09       6804  STR15:			LD      A,9
	call	$042d62                   ; 0428F7 || 	call	$042d1f                   ; 0428B4 || 0428F7 CD 62 2D 04 6805          		CALL    POWR10          ;10^9
	call	$042c76                   ; 0428FB || 	call	$042c33                   ; 0428B8 || 0428FB CD 76 2C 04 6806          		CALL    FCP0
	ld	a,c                         ; 0428FF || 	ld	a,c                         ; 0428BC || 0428FF 79          6807          		LD      A,C
	pop	bc                         ; 042900 || 	pop	bc                         ; 0428BD || 042900 C1          6808          		POP     BC
	ld	c,a                         ; 042901 || 	ld	c,a                         ; 0428BE || 042901 4F          6809          		LD      C,A
	set	7,h                        ; 042902 || 	set	7,h                        ; 0428BF || 042902 CB FC       6810          		SET     7,H             ;IMPLIED 1
	call	c,$042c9e                 ; 042904 || 	call	c,$042c5b                 ; 0428C1 || 042904 DC 9E 2C 04 6811          		CALL    C,X10B          ;X10, DEC B
	pop	de                         ; 042908 || 	pop	de                         ; 0428C5 || 042908 D1          6812          		POP     DE              ;RESTORE TEXT POINTER
	res	7,c                        ; 042909 || 	res	7,c                        ; 0428C6 || 042909 CB B9       6813          		RES     7,C
	ld	a,$00                       ; 04290B || 	ld	a,$00                       ; 0428C8 || 04290B 3E 00       6814          		LD      A,0
	rla                            ; 04290D || 	rla                            ; 0428CA || 04290D 17          6815          		RLA                     ;PUT CARRY IN LSB
	inc	c                          ; 04290E || 	inc	c                          ; 0428CB || 04290E 0C          6823  STR02:			INC     C
	ex	af,af'                      ; 04290F || 	ex	af,af'                      ; 0428CC || 04290F 08          6824          		EX      AF,AF'          ;SAVE A
	ld	a,b                         ; 042910 || 	ld	a,b                         ; 0428CD || 042910 78          6825          		LD      A,B
	bit	1,(ix+$02)                 ; 042911 || 	bit	1,(ix+$02)                 ; 0428CE || 042911 DD CB 02 4E 6826          		BIT     1,(IX+2)
	jr	nz,$+$0a                    ; 042915 || 	jr	nz,$+$0a                    ; 0428D2 || 042915 20 08       6827          		JR      NZ,STR20
	xor	a                          ; 042917 || 	xor	a                          ; 0428D4 || 042917 AF          6828          		XOR     A
	cp	(ix+$01)                    ; 042918 || 	cp	(ix+$01)                    ; 0428D5 || 042918 DD BE 01    6829          		CP      (IX+1)
	jr	z,$+$0d                     ; 04291B || 	jr	z,$+$0d                     ; 0428D8 || 04291B 28 0B       6830          		JR      Z,STR21
	ld	a,$f6                       ; 04291D || 	ld	a,$f6                       ; 0428DA || 04291D 3E F6       6831          		LD      A,-10
	add	a,(ix+$01)                 ; 04291F || 	add	a,(ix+$01)                 ; 0428DC || 04291F DD 86 01    6832  STR20:			ADD     A,(IX+1)        ;SIG. FIG. COUNT
	or	a                           ; 042922 || 	or	a                           ; 0428DF || 042922 B7          6833          		OR      A               ;CLEAR CARRY
	jp	m,$042928                   ; 042923 || 	jp	m,$0428e5                   ; 0428E0 || 042923 FA 28 29 04 6834          		JP      M,STR21
	xor	a                          ; 042927 || 	xor	a                          ; 0428E4 || 042927 AF          6835          		XOR     A
	push	af                        ; 042928 || 	push	af                        ; 0428E5 || 042928 F5          6836  STR21:			PUSH    AF
	ex	af,af'                      ; 042929 || 	ex	af,af'                      ; 0428E6 || 042929 08          6837          		EX      AF,AF'          ;RESTORE A
	call	$042cd2                   ; 04292A || 	call	$042c8f                   ; 0428E7 || 04292A CD D2 2C 04 6838  STR22:			CALL    X2              ;RL AHLH'L'
	adc	a,a                        ; 04292E || 	adc	a,a                        ; 0428EB || 04292E 8F          6839          		ADC     A,A
	cp	$0a                         ; 04292F || 	cp	$0a                         ; 0428EC || 04292F FE 0A       6840          		CP      10
	jr	c,$+$07                     ; 042931 || 	jr	c,$+$07                     ; 0428EE || 042931 38 05       6841          		JR      C,STR23
	sub	$0a                        ; 042933 || 	sub	$0a                        ; 0428F0 || 042933 D6 0A       6842          		SUB     10
	exx                            ; 042935 || 	exx                            ; 0428F2 || 042935 D9          6843          		EXX
	inc	l                          ; 042936 || 	inc	l                          ; 0428F3 || 042936 2C          6844          		INC     L               ;SET RESULT BIT
	exx                            ; 042937 || 	exx                            ; 0428F4 || 042937 D9          6845          		EXX
	dec	c                          ; 042938 || 	dec	c                          ; 0428F5 || 042938 0D          6846  STR23:			DEC     C
	jr	nz,$-$0f                    ; 042939 || 	jr	nz,$-$0f                    ; 0428F6 || 042939 20 EF       6847          		JR      NZ,STR22        ;32 TIMES
	ld	c,a                         ; 04293B || 	ld	c,a                         ; 0428F8 || 04293B 4F          6848          		LD      C,A             ;REMAINDER
	ld	a,h                         ; 04293C || 	ld	a,h                         ; 0428F9 || 04293C 7C          6849          		LD      A,H
	and	$3f                        ; 04293D || 	and	$3f                        ; 0428FA || 04293D E6 3F       6850          		AND     3FH             ;CLEAR OUT JUNK
	ld	h,a                         ; 04293F || 	ld	h,a                         ; 0428FC || 04293F 67          6851          		LD      H,A
	pop	af                         ; 042940 || 	pop	af                         ; 0428FD || 042940 F1          6852          		POP     AF
	jp	p,$04294f                   ; 042941 || 	jp	p,$04290c                   ; 0428FE || 042941 F2 4F 29 04 6853          		JP      P,STR24
	inc	a                          ; 042945 || 	inc	a                          ; 042902 || 042945 3C          6854          		INC     A
	jr	nz,$+$1e                    ; 042946 || 	jr	nz,$+$1e                    ; 042903 || 042946 20 1C       6855          		JR      NZ,STR26
	ld	a,$04                       ; 042948 || 	ld	a,$04                       ; 042905 || 042948 3E 04       6856          		LD      A,4
	cp	c                           ; 04294A || 	cp	c                           ; 042907 || 04294A B9          6857          		CP      C               ;ROUND UP?
	ld	a,$00                       ; 04294B || 	ld	a,$00                       ; 042908 || 04294B 3E 00       6858          		LD      A,0
	jr	$+$17                       ; 04294D || 	jr	$+$17                       ; 04290A || 04294D 18 15       6859          		JR      STR26
	push	af                        ; 04294F || 	push	af                        ; 04290C || 04294F F5          6860  STR24:			PUSH    AF
	ld	a,c                         ; 042950 || 	ld	a,c                         ; 04290D || 042950 79          6861          		LD      A,C
	adc	a,$30                      ; 042951 || 	adc	a,$30                      ; 04290E || 042951 CE 30       6862          		ADC     A,'0'           ;ADD CARRY
	cp	$30                         ; 042953 || 	cp	$30                         ; 042910 || 042953 FE 30       6863          		CP      '0'
	jr	z,$+$07                     ; 042955 || 	jr	z,$+$07                     ; 042912 || 042955 28 05       6864          		JR      Z,STR25         ;SUPPRESS ZERO
	cp	$3a                         ; 042957 || 	cp	$3a                         ; 042914 || 042957 FE 3A       6865          		CP      '9'+1
	ccf                            ; 042959 || 	ccf                            ; 042916 || 042959 3F          6866          		CCF
	jr	nc,$+$0a                    ; 04295A || 	jr	nc,$+$0a                    ; 042917 || 04295A 30 08       6867          		JR      NC,STR26
	ex	(sp),hl                     ; 04295C || 	ex	(sp),hl                     ; 042919 || 04295C E3          6868  STR25:			EX      (SP),HL
	bit	6,l                        ; 04295D || 	bit	6,l                        ; 04291A || 04295D CB 75       6869          		BIT     6,L             ;ZERO FLAG
	ex	(sp),hl                     ; 04295F || 	ex	(sp),hl                     ; 04291C || 04295F E3          6870  		        EX      (SP),HL
	jr	nz,$+$07                    ; 042960 || 	jr	nz,$+$07                    ; 04291D || 042960 20 05       6871          		JR      NZ,STR27
	ld	a,$30                       ; 042962 || 	ld	a,$30                       ; 04291F || 042962 3E 30       6872          		LD      A,'0'
	inc	a                          ; 042964 || 	inc	a                          ; 042921 || 042964 3C          6873  STR26:			INC     A               ;SET +VE
	dec	a                          ; 042965 || 	dec	a                          ; 042922 || 042965 3D          6874          		DEC     A
	push	af                        ; 042966 || 	push	af                        ; 042923 || 042966 F5          6875          		PUSH    AF              ;PUT ON STACK + CARRY
	inc	b                          ; 042967 || 	inc	b                          ; 042924 || 042967 04          6876  STR27:			INC     B
	call	$042c42                   ; 042968 || 	call	$042bff                   ; 042925 || 042968 CD 42 2C 04 6877          		CALL    TEST_FP            ;IS HLH'L' ZERO?
	ld	c,$20                       ; 04296C || 	ld	c,$20                       ; 042929 || 04296C 0E 20       6878          		LD      C,32
	ld	a,$00                       ; 04296E || 	ld	a,$00                       ; 04292B || 04296E 3E 00       6879          		LD      A,0
	jr	nz,$-$46                    ; 042970 || 	jr	nz,$-$46                    ; 04292D || 042970 20 B8       6880          		JR      NZ,STR22
	pop	af                         ; 042972 || 	pop	af                         ; 04292F || 042972 F1          6881          		POP     AF
	push	af                        ; 042973 || 	push	af                        ; 042930 || 042973 F5          6882          		PUSH    AF
	ld	a,$00                       ; 042974 || 	ld	a,$00                       ; 042931 || 042974 3E 00       6883          		LD      A,0
	jr	c,$-$4c                     ; 042976 || 	jr	c,$-$4c                     ; 042933 || 042976 38 B2       6884          		JR      C,STR22
	ex	de,hl                       ; 042978 || 	ex	de,hl                       ; 042935 || 042978 EB          6892  STR3:			EX      DE,HL           ;STRING POINTER
	ld	c,$ff                       ; 042979 || 	ld	c,$ff                       ; 042936 || 042979 0E FF       6893          		LD      C,-1            ;FLAG "E"
	ld	d,$01                       ; 04297B || 	ld	d,$01                       ; 042938 || 04297B 16 01       6894          		LD      D,1
	ld	e,(ix+$01)                  ; 04297D || 	ld	e,(ix+$01)                  ; 04293A || 04297D DD 5E 01    6895          		LD      E,(IX+1)        ;f2
	bit	0,(ix+$02)                 ; 042980 || 	bit	0,(ix+$02)                 ; 04293D || 042980 DD CB 02 46 6896          		BIT     0,(IX+2)
	jr	nz,$+$37                    ; 042984 || 	jr	nz,$+$37                    ; 042941 || 042984 20 35       6897          		JR      NZ,STR34        ;E MODE
	bit	1,(ix+$02)                 ; 042986 || 	bit	1,(ix+$02)                 ; 042943 || 042986 DD CB 02 4E 6898          		BIT     1,(IX+2)
	jr	z,$+$14                     ; 04298A || 	jr	z,$+$14                     ; 042947 || 04298A 28 12       6899          		JR      Z,STR31
	ld	a,b                         ; 04298C || 	ld	a,b                         ; 042949 || 04298C 78          6900          		LD      A,B             ;F MODE
	or	a                           ; 04298D || 	or	a                           ; 04294A || 04298D B7          6901          		OR      A
	jr	z,$+$07                     ; 04298E || 	jr	z,$+$07                     ; 04294B || 04298E 28 05       6902          		JR      Z,STR30
	jp	m,$042995                   ; 042990 || 	jp	m,$042952                   ; 04294D || 042990 FA 95 29 04 6903          		JP      M,STR30
	ld	d,b                         ; 042994 || 	ld	d,b                         ; 042951 || 042994 50          6904          		LD      D,B
	ld	a,d                         ; 042995 || 	ld	a,d                         ; 042952 || 042995 7A          6905  STR30:			LD      A,D
	add	a,(ix+$01)                 ; 042996 || 	add	a,(ix+$01)                 ; 042953 || 042996 DD 86 01    6906          		ADD     A,(IX+1)
	ld	e,a                         ; 042999 || 	ld	e,a                         ; 042956 || 042999 5F          6907          		LD      E,A
	cp	$0b                         ; 04299A || 	cp	$0b                         ; 042957 || 04299A FE 0B       6908          		CP      11
	jr	c,$+$1b                     ; 04299C || 	jr	c,$+$1b                     ; 042959 || 04299C 38 19       6909          		JR      C,STR32
	ld	a,b                         ; 04299E || 	ld	a,b                         ; 04295B || 04299E 78          6910  STR31:			LD      A,B             ;G MODE
	ld	de,$000101                  ; 04299F || 	ld	de,$000101                  ; 04295C || 04299F 11 01 01 00 6911          		LD      DE,101H
	or	a                           ; 0429A3 || 	or	a                           ; 042960 || 0429A3 B7          6912          		OR      A
	jp	m,$0429bb                   ; 0429A4 || 	jp	m,$042978                   ; 042961 || 0429A4 FA BB 29 04 6913          		JP      M,STR34
	jr	z,$+$0f                     ; 0429A8 || 	jr	z,$+$0f                     ; 042965 || 0429A8 28 0D       6914          		JR      Z,STR32
	ld	a,(ix+$01)                  ; 0429AA || 	ld	a,(ix+$01)                  ; 042967 || 0429AA DD 7E 01    6915          		LD      A,(IX+1)
	or	a                           ; 0429AD || 	or	a                           ; 04296A || 0429AD B7          6916          		OR      A
	jr	nz,$+$04                    ; 0429AE || 	jr	nz,$+$04                    ; 04296B || 0429AE 20 02       6917          		JR      NZ,STR3A
	ld	a,$0a                       ; 0429B0 || 	ld	a,$0a                       ; 04296D || 0429B0 3E 0A       6918          		LD      A,10
	cp	b                           ; 0429B2 || 	cp	b                           ; 04296F || 0429B2 B8          6919  STR3A:			CP      B
	jr	c,$+$08                     ; 0429B3 || 	jr	c,$+$08                     ; 042970 || 0429B3 38 06       6920          		JR      C,STR34
	ld	d,b                         ; 0429B5 || 	ld	d,b                         ; 042972 || 0429B5 50          6921          		LD      D,B
	ld	e,b                         ; 0429B6 || 	ld	e,b                         ; 042973 || 0429B6 58          6922          		LD      E,B
	ld	a,b                         ; 0429B7 || 	ld	a,b                         ; 042974 || 0429B7 78          6923  STR32:			LD      A,B
	add	a,$81                      ; 0429B8 || 	add	a,$81                      ; 042975 || 0429B8 C6 81       6924          		ADD     A,129
	ld	c,a                         ; 0429BA || 	ld	c,a                         ; 042977 || 0429BA 4F          6925          		LD      C,A
	set	7,d                        ; 0429BB || 	set	7,d                        ; 042978 || 0429BB CB FA       6926  STR34:			SET     7,D
	dec	e                          ; 0429BD || 	dec	e                          ; 04297A || 0429BD 1D          6927          		DEC     E
	ld	a,d                         ; 0429BE || 	ld	a,d                         ; 04297B || 0429BE 7A          6928  STR35:			LD      A,D
	cp	c                           ; 0429BF || 	cp	c                           ; 04297C || 0429BF B9          6929          		CP      C
	jr	nc,$+$10                    ; 0429C0 || 	jr	nc,$+$10                    ; 04297D || 0429C0 30 0E       6930          		JR      NC,STR33
	pop	af                         ; 0429C2 || 	pop	af                         ; 04297F || 0429C2 F1          6931  STR36:			POP     AF
	jr	z,$+$06                     ; 0429C3 || 	jr	z,$+$06                     ; 042980 || 0429C3 28 04       6932          		JR      Z,STR37
	jp	p,$0429d2                   ; 0429C5 || 	jp	p,$04298f                   ; 042982 || 0429C5 F2 D2 29 04 6933          		JP      P,STR38
	push	af                        ; 0429C9 || 	push	af                        ; 042986 || 0429C9 F5          6934  STR37:			PUSH    AF
	inc	e                          ; 0429CA || 	inc	e                          ; 042987 || 0429CA 1C          6935          		INC     E
	dec	e                          ; 0429CB || 	dec	e                          ; 042988 || 0429CB 1D          6936          		DEC     E
	jp	m,$0429e3                   ; 0429CC || 	jp	m,$0429a0                   ; 042989 || 0429CC FA E3 29 04 6937          		JP      M,STR4
	ld	a,$30                       ; 0429D0 || 	ld	a,$30                       ; 04298D || 0429D0 3E 30       6938  STR33:			LD      A,'0'
	dec	d                          ; 0429D2 || 	dec	d                          ; 04298F || 0429D2 15          6939  STR38:			DEC     D
	jp	po,$0429da                  ; 0429D3 || 	jp	po,$042997                  ; 042990 || 0429D3 E2 DA 29 04 6940          		JP      PO,STR39
	ld	(hl),$2e                    ; 0429D7 || 	ld	(hl),$2e                    ; 042994 || 0429D7 36 2E       6941          		LD      (HL),'.'
	inc	hl                         ; 0429D9 || 	inc	hl                         ; 042996 || 0429D9 23          6942          		INC     HL
	ld	(hl),a                      ; 0429DA || 	ld	(hl),a                      ; 042997 || 0429DA 77          6943  STR39:			LD      (HL),A
	inc	hl                         ; 0429DB || 	inc	hl                         ; 042998 || 0429DB 23          6944          		INC     HL
	dec	e                          ; 0429DC || 	dec	e                          ; 042999 || 0429DC 1D          6945          		DEC     E
	jp	p,$0429be                   ; 0429DD || 	jp	p,$04297b                   ; 04299A || 0429DD F2 BE 29 04 6946          		JP      P,STR35
	jr	$-$1f                       ; 0429E1 || 	jr	$-$1f                       ; 04299E || 0429E1 18 DF       6947          		JR      STR36
	pop	af                         ; 0429E3 || 	pop	af                         ; 0429A0 || 0429E3 F1          6949  STR4:			POP     AF
	inc	c                          ; 0429E4 || 	inc	c                          ; 0429A1 || 0429E4 0C          6950  STR40:			INC     C
	ld	c,l                         ; 0429E5 || 	ld	c,l                         ; 0429A2 || 0429E5 4D          6951          		LD      C,L
	jr	nz,$+$2a                    ; 0429E6 || 	jr	nz,$+$2a                    ; 0429A3 || 0429E6 20 28       6952          		JR      NZ,STR44
	ld	(hl),$45                    ; 0429E8 || 	ld	(hl),$45                    ; 0429A5 || 0429E8 36 45       6953          		LD      (HL),'E'        ;EXPONENT
	inc	hl                         ; 0429EA || 	inc	hl                         ; 0429A7 || 0429EA 23          6954          		INC     HL
	ld	a,b                         ; 0429EB || 	ld	a,b                         ; 0429A8 || 0429EB 78          6955          		LD      A,B
	dec	a                          ; 0429EC || 	dec	a                          ; 0429A9 || 0429EC 3D          6956          		DEC     A
	jp	p,$0429f6                   ; 0429ED || 	jp	p,$0429b3                   ; 0429AA || 0429ED F2 F6 29 04 6957          		JP      P,STR41
	ld	(hl),$2d                    ; 0429F1 || 	ld	(hl),$2d                    ; 0429AE || 0429F1 36 2D       6958          		LD      (HL),'-'
	inc	hl                         ; 0429F3 || 	inc	hl                         ; 0429B0 || 0429F3 23          6959          		INC     HL
	neg                            ; 0429F4 || 	neg                            ; 0429B1 || 0429F4 ED 44       6960          		NEG
	ld	(hl),$30                    ; 0429F6 || 	ld	(hl),$30                    ; 0429B3 || 0429F6 36 30       6961  STR41:			LD      (HL),'0'
	jr	z,$+$17                     ; 0429F8 || 	jr	z,$+$17                     ; 0429B5 || 0429F8 28 15       6962          		JR      Z,STR47
	cp	$0a                         ; 0429FA || 	cp	$0a                         ; 0429B7 || 0429FA FE 0A       6963          		CP      10
	ld	b,a                         ; 0429FC || 	ld	b,a                         ; 0429B9 || 0429FC 47          6964          		LD      B,A
	ld	a,$3a                       ; 0429FD || 	ld	a,$3a                       ; 0429BA || 0429FD 3E 3A       6965          		LD      A,':'
	jr	c,$+$05                     ; 0429FF || 	jr	c,$+$05                     ; 0429BC || 0429FF 38 03       6966          		JR      C,STR42
	inc	hl                         ; 042A01 || 	inc	hl                         ; 0429BE || 042A01 23          6967          		INC     HL
	ld	(hl),$30                    ; 042A02 || 	ld	(hl),$30                    ; 0429BF || 042A02 36 30       6968          		LD      (HL),'0'
	inc	(hl)                       ; 042A04 || 	inc	(hl)                       ; 0429C1 || 042A04 34          6969  STR42:			INC     (HL)
	cp	(hl)                        ; 042A05 || 	cp	(hl)                        ; 0429C2 || 042A05 BE          6970          		CP      (HL)
	jr	nz,$+$07                    ; 042A06 || 	jr	nz,$+$07                    ; 0429C3 || 042A06 20 05       6971          		JR      NZ,STR43
	ld	(hl),$30                    ; 042A08 || 	ld	(hl),$30                    ; 0429C5 || 042A08 36 30       6972          		LD      (HL),'0'
	dec	hl                         ; 042A0A || 	dec	hl                         ; 0429C7 || 042A0A 2B          6973          		DEC     HL
	inc	(hl)                       ; 042A0B || 	inc	(hl)                       ; 0429C8 || 042A0B 34          6974          		INC     (HL)
	inc	hl                         ; 042A0C || 	inc	hl                         ; 0429C9 || 042A0C 23          6975          		INC     HL
	djnz	$-$09                     ; 042A0D || 	djnz	$-$09                     ; 0429CA || 042A0D 10 F5       6976  STR43:			DJNZ    STR42
	inc	hl                         ; 042A0F || 	inc	hl                         ; 0429CC || 042A0F 23          6977  STR47:			INC     HL
	ex	de,hl                       ; 042A10 || 	ex	de,hl                       ; 0429CD || 042A10 EB          6978  STR44:			EX      DE,HL
	ret                            ; 042A11 || 	ret                            ; 0429CE || 042A11 C9          6979        			RET
	ld	b,(ix+$04)                  ; 042A12 || 	ld	b,(ix+$04)                  ; 0429CF || 042A12 DD 46 04    6983  DLOAD5:			LD      B,(IX+4)
	exx                            ; 042A15 || 	exx                            ; 0429D2 || 042A15 D9          6984          		EXX
	ld	e,(ix)                      ; 042A16 || 	ld	e,(ix)                      ; 0429D3 || 042A16 DD 5E 00    6985          		LD      E,(IX+0)
	ld	d,(ix+$01)                  ; 042A19 || 	ld	d,(ix+$01)                  ; 0429D6 || 042A19 DD 56 01    6986          		LD      D,(IX+1)
	exx                            ; 042A1C || 	exx                            ; 0429D9 || 042A1C D9          6987          		EXX
	ld	e,(ix+$02)                  ; 042A1D || 	ld	e,(ix+$02)                  ; 0429DA || 042A1D DD 5E 02    6988          		LD      E,(IX+2)
	ld	d,(ix+$03)                  ; 042A20 || 	ld	d,(ix+$03)                  ; 0429DD || 042A20 DD 56 03    6989          		LD      D,(IX+3)
	ret                            ; 042A23 || 	ret                            ; 0429E0 || 042A23 C9          6990          		RET
	ld	b,(ix+$06)                  ; 042A24 || 	ld	b,(ix+$06)                  ; 0429E1 || 042A24 DD 46 06    6992  DLOAD5_SPL:		LD      B,(IX+6)
	exx                            ; 042A27 || 	exx                            ; 0429E4 || 042A27 D9          6993  			EXX
	ld	de,(ix)                     ; 042A28 || 	ld	de,(ix)                     ; 0429E5 || 042A28 DD 17 00    6994  			LD	DE, (IX+0)
	exx                            ; 042A2B || 	exx                            ; 0429E8 || 042A2B D9          6995  			EXX
	ld	de,(ix+$03)                 ; 042A2C || 	ld	de,(ix+$03)                 ; 0429E9 || 042A2C DD 17 03    6996  			LD	DE, (IX+3)
	ret                            ; 042A2F || 	ret                            ; 0429EC || 042A2F C9          6997  			RET
	call	$042c66                   ; 042A30 || 	call	$042c23                   ; 0429ED || 042A30 CD 66 2C 04 7005  CON_FP:			CALL    ZERO_FP            ;INITIALISE TO ZERO
	ld	c,$00                       ; 042A34 || 	ld	c,$00                       ; 0429F1 || 042A34 0E 00       7006          		LD      C,0             ;TRUNCATION COUNTER
	call	$042ac4                   ; 042A36 || 	call	$042a81                   ; 0429F3 || 042A36 CD C4 2A 04 7007          		CALL    UINT          ;GET INTEGER PART
	cp	$2e                         ; 042A3A || 	cp	$2e                         ; 0429F7 || 042A3A FE 2E       7008          		CP      '.'
	ld	b,$00                       ; 042A3C || 	ld	b,$00                       ; 0429F9 || 042A3C 06 00       7009          		LD      B,0             ;DECL. PLACE COUNTER
	call	z,$042ac2                 ; 042A3E || 	call	z,$042a7f                 ; 0429FB || 042A3E CC C2 2A 04 7010          		CALL    Z,NUMBIX        ;GET FRACTION PART
	cp	$45                         ; 042A42 || 	cp	$45                         ; 0429FF || 042A42 FE 45       7011          		CP      'E'
	ld	a,$00                       ; 042A44 || 	ld	a,$00                       ; 042A01 || 042A44 3E 00       7012          		LD      A,0             ;INITIALISE EXPONENT
	call	z,$042a90                 ; 042A46 || 	call	z,$042a4d                 ; 042A03 || 042A46 CC 90 2A 04 7013          		CALL    Z,GETEXP        ;GET EXPONENT
	bit	7,h                        ; 042A4A || 	bit	7,h                        ; 042A07 || 042A4A CB 7C       7014          		BIT     7,H
	jr	nz,$+$0a                    ; 042A4C || 	jr	nz,$+$0a                    ; 042A09 || 042A4C 20 08       7015          		JR      NZ,CON0         ;INTEGER OVERFLOW
	or	a                           ; 042A4E || 	or	a                           ; 042A0B || 042A4E B7          7016          		OR      A
	jr	nz,$+$07                    ; 042A4F || 	jr	nz,$+$07                    ; 042A0C || 042A4F 20 05       7017          		JR      NZ,CON0         ;EXPONENT NON-ZERO
	cp	b                           ; 042A51 || 	cp	b                           ; 042A0E || 042A51 B8          7018          		CP      B
	jr	nz,$+$04                    ; 042A52 || 	jr	nz,$+$04                    ; 042A0F || 042A52 20 02       7019          		JR      NZ,CON0         ;DECIMAL POINT
	cp	c                           ; 042A54 || 	cp	c                           ; 042A11 || 042A54 B9          7020          		CP      C
	ret	z                          ; 042A55 || 	ret	z                          ; 042A12 || 042A55 C8          7021          		RET     Z               ;INTEGER
	sub	b                          ; 042A56 || 	sub	b                          ; 042A13 || 042A56 90          7022  CON0:			SUB     B
	add	a,c                        ; 042A57 || 	add	a,c                        ; 042A14 || 042A57 81          7023          		ADD     A,C
	ld	c,$9f                       ; 042A58 || 	ld	c,$9f                       ; 042A15 || 042A58 0E 9F       7024          		LD      C,159
	call	$042bc9                   ; 042A5A || 	call	$042b86                   ; 042A17 || 042A5A CD C9 2B 04 7025          		CALL    FLOAT_
	res	7,h                        ; 042A5E || 	res	7,h                        ; 042A1B || 042A5E CB BC       7026          		RES     7,H             ;DITCH IMPLIED 1
	or	a                           ; 042A60 || 	or	a                           ; 042A1D || 042A60 B7          7027          		OR      A
	ret	z                          ; 042A61 || 	ret	z                          ; 042A1E || 042A61 C8          7028          		RET     Z               ;DONE
	jp	m,$042a70                   ; 042A62 || 	jp	m,$042a2d                   ; 042A1F || 042A62 FA 70 2A 04 7029          		JP      M,CON2          ;NEGATIVE EXPONENT
	call	$042d62                   ; 042A66 || 	call	$042d1f                   ; 042A23 || 042A66 CD 62 2D 04 7030          		CALL    POWR10
	call	$042351                   ; 042A6A || 	call	$04230e                   ; 042A27 || 042A6A CD 51 23 04 7031          		CALL    FMUL            ;SCALE
	xor	a                          ; 042A6E || 	xor	a                          ; 042A2B || 042A6E AF          7032          		XOR     A
	ret                            ; 042A6F || 	ret                            ; 042A2C || 042A6F C9          7033          		RET
	cp	$da                         ; 042A70 || 	cp	$da                         ; 042A2D || 042A70 FE DA       7034  CON2:			CP      -38
	jr	c,$+$0e                     ; 042A72 || 	jr	c,$+$0e                     ; 042A2F || 042A72 38 0C       7035          		JR      C,CON3          ;CAN'T SCALE IN ONE GO
	neg                            ; 042A74 || 	neg                            ; 042A31 || 042A74 ED 44       7036          		NEG
	call	$042d62                   ; 042A76 || 	call	$042d1f                   ; 042A33 || 042A76 CD 62 2D 04 7037          		CALL    POWR10
	call	$0422a8                   ; 042A7A || 	call	$042265                   ; 042A37 || 042A7A CD A8 22 04 7038          		CALL    FDIV            ;SCALE
	xor	a                          ; 042A7E || 	xor	a                          ; 042A3B || 042A7E AF          7039          		XOR     A
	ret                            ; 042A7F || 	ret                            ; 042A3C || 042A7F C9          7040          		RET
	push	af                        ; 042A80 || 	push	af                        ; 042A3D || 042A80 F5          7041  CON3:			PUSH    AF
	ld	a,$26                       ; 042A81 || 	ld	a,$26                       ; 042A3E || 042A81 3E 26       7042          		LD      A,38
	call	$042d62                   ; 042A83 || 	call	$042d1f                   ; 042A40 || 042A83 CD 62 2D 04 7043          		CALL    POWR10
	call	$0422a8                   ; 042A87 || 	call	$042265                   ; 042A44 || 042A87 CD A8 22 04 7044          		CALL    FDIV
	pop	af                         ; 042A8B || 	pop	af                         ; 042A48 || 042A8B F1          7045          		POP     AF
	add	a,$26                      ; 042A8C || 	add	a,$26                      ; 042A49 || 042A8C C6 26       7046          		ADD     A,38
	jr	$-$1e                       ; 042A8E || 	jr	$-$1e                       ; 042A4B || 042A8E 18 E0       7047          		JR      CON2
	push	bc                        ; 042A90 || 	push	bc                        ; 042A4D || 042A90 C5          7057  GETEXP:			PUSH    BC              ;SAVE REGISTERS
	ld	b,a                         ; 042A91 || 	ld	b,a                         ; 042A4E || 042A91 47          7058          		LD      B,A             ;INITIAL VALUE
	ld	c,$02                       ; 042A92 || 	ld	c,$02                       ; 042A4F || 042A92 0E 02       7059          		LD      C,2             ;2 DIGITS MAX
	inc	ix                         ; 042A94 || 	inc	ix                         ; 042A51 || 042A94 DD 23       7060          		INC     IX              ;BUMP PAST 'E'
	call	$042e80                   ; 042A96 || 	call	$042e3d                   ; 042A53 || 042A96 CD 80 2E 04 7061          		CALL    SIGNQ
	ex	af,af'                      ; 042A9A || 	ex	af,af'                      ; 042A57 || 042A9A 08          7062          		EX      AF,AF'          ;SAVE EXPONENT SIGN
	call	$042e76                   ; 042A9B || 	call	$042e33                   ; 042A58 || 042A9B CD 76 2E 04 7063  GETEX1:			CALL    DIGITQ
	jr	c,$+$1a                     ; 042A9F || 	jr	c,$+$1a                     ; 042A5C || 042A9F 38 18       7064          		JR      C,GETEX2
	ld	a,b                         ; 042AA1 || 	ld	a,b                         ; 042A5E || 042AA1 78          7065          		LD      A,B             ;B=B*10
	add	a,a                        ; 042AA2 || 	add	a,a                        ; 042A5F || 042AA2 87          7066          		ADD     A,A
	add	a,a                        ; 042AA3 || 	add	a,a                        ; 042A60 || 042AA3 87          7067          		ADD     A,A
	add	a,b                        ; 042AA4 || 	add	a,b                        ; 042A61 || 042AA4 80          7068          		ADD     A,B
	add	a,a                        ; 042AA5 || 	add	a,a                        ; 042A62 || 042AA5 87          7069          		ADD     A,A
	ld	b,a                         ; 042AA6 || 	ld	b,a                         ; 042A63 || 042AA6 47          7070          		LD      B,A
	ld	a,(ix)                      ; 042AA7 || 	ld	a,(ix)                      ; 042A64 || 042AA7 DD 7E 00    7071          		LD      A,(IX)          ;GET BACK DIGIT
	inc	ix                         ; 042AAA || 	inc	ix                         ; 042A67 || 042AAA DD 23       7072          		INC     IX
	and	$0f                        ; 042AAC || 	and	$0f                        ; 042A69 || 042AAC E6 0F       7073          		AND     0FH             ;MASK UNWANTED BITS
	add	a,b                        ; 042AAE || 	add	a,b                        ; 042A6B || 042AAE 80          7074          		ADD     A,B             ;ADD IN DIGIT
	ld	b,a                         ; 042AAF || 	ld	b,a                         ; 042A6C || 042AAF 47          7075          		LD      B,A
	dec	c                          ; 042AB0 || 	dec	c                          ; 042A6D || 042AB0 0D          7076          		DEC     C
	jp	p,$042a9b                   ; 042AB1 || 	jp	p,$042a58                   ; 042A6E || 042AB1 F2 9B 2A 04 7077          		JP      P,GETEX1
	ld	b,$64                       ; 042AB5 || 	ld	b,$64                       ; 042A72 || 042AB5 06 64       7078          		LD      B,100           ;FORCE OVERFLOW
	jr	$-$1c                       ; 042AB7 || 	jr	$-$1c                       ; 042A74 || 042AB7 18 E2       7079          		JR      GETEX1
	ex	af,af'                      ; 042AB9 || 	ex	af,af'                      ; 042A76 || 042AB9 08          7080  GETEX2:			EX      AF,AF'          ;RESTORE SIGN
	cp	$2d                         ; 042ABA || 	cp	$2d                         ; 042A77 || 042ABA FE 2D       7081          		CP      '-'
	ld	a,b                         ; 042ABC || 	ld	a,b                         ; 042A79 || 042ABC 78          7082          		LD      A,B
	pop	bc                         ; 042ABD || 	pop	bc                         ; 042A7A || 042ABD C1          7083          		POP     BC              ;RESTORE
	ret	nz                         ; 042ABE || 	ret	nz                         ; 042A7B || 042ABE C0          7084          		RET     NZ
	neg                            ; 042ABF || 	neg                            ; 042A7C || 042ABF ED 44       7085          		NEG                     ;NEGATE EXPONENT
	ret                            ; 042AC1 || 	ret                            ; 042A7E || 042AC1 C9          7086          		RET
	inc	ix                         ; 042AC2 || 	inc	ix                         ; 042A7F || 042AC2 DD 23       7099  NUMBIX:			INC     IX
	call	$042e76                   ; 042AC4 || 	call	$042e33                   ; 042A81 || 042AC4 CD 76 2E 04 7100  UINT:			CALL    DIGITQ
	ret	c                          ; 042AC8 || 	ret	c                          ; 042A85 || 042AC8 D8          7101          		RET     C
	inc	b                          ; 042AC9 || 	inc	b                          ; 042A86 || 042AC9 04          7102          		INC     B               ;INCREMENT DIGIT COUNT
	inc	ix                         ; 042ACA || 	inc	ix                         ; 042A87 || 042ACA DD 23       7103          		INC     IX
	call	$042cbf                   ; 042ACC || 	call	$042c7c                   ; 042A89 || 042ACC CD BF 2C 04 7104          		CALL    X10             ;*10 & COPY OLD VALUE
	jr	c,$+$17                     ; 042AD0 || 	jr	c,$+$17                     ; 042A8D || 042AD0 38 15       7105          		JR      C,NUMB1         ;OVERFLOW
	dec	c                          ; 042AD2 || 	dec	c                          ; 042A8F || 042AD2 0D          7106          		DEC     C               ;SEE IF TRUNCATED
	inc	c                          ; 042AD3 || 	inc	c                          ; 042A90 || 042AD3 0C          7107          		INC     C
	jr	nz,$+$13                    ; 042AD4 || 	jr	nz,$+$13                    ; 042A91 || 042AD4 20 11       7108          		JR      NZ,NUMB1        ;IMPORTANT!
	and	$0f                        ; 042AD6 || 	and	$0f                        ; 042A93 || 042AD6 E6 0F       7109          		AND     0FH
	exx                            ; 042AD8 || 	exx                            ; 042A95 || 042AD8 D9          7110          		EXX
	ld	b,$00                       ; 042AD9 || 	ld	b,$00                       ; 042A96 || 042AD9 06 00       7111          		LD      B,0
	ld	c,a                         ; 042ADB || 	ld	c,a                         ; 042A98 || 042ADB 4F          7112          		LD      C,A
	add.sil	hl,bc                  ; 042ADC || 	add.sil	hl,bc                  ; 042A99 || 042ADC 52 09       7113          		ADD.S   HL,BC           ;ADD IN DIGIT
	exx                            ; 042ADE || 	exx                            ; 042A9B || 042ADE D9          7114          		EXX
	jr	nc,$-$1b                    ; 042ADF || 	jr	nc,$-$1b                    ; 042A9C || 042ADF 30 E3       7115          		JR      NC,UINT
	inc.sil	hl                     ; 042AE1 || 	inc.sil	hl                     ; 042A9E || 042AE1 52 23       7116          		INC.S   HL              ;CARRY
	ld	a,h                         ; 042AE3 || 	ld	a,h                         ; 042AA0 || 042AE3 7C          7117          		LD      A,H
	or	l                           ; 042AE4 || 	or	l                           ; 042AA1 || 042AE4 B5          7118          		OR      L
	jr	nz,$-$21                    ; 042AE5 || 	jr	nz,$-$21                    ; 042AA2 || 042AE5 20 DD       7119          		JR      NZ,UINT
	inc	c                          ; 042AE7 || 	inc	c                          ; 042AA4 || 042AE7 0C          7120  NUMB1:			INC     C               ;TRUNCATION COUNTER
	call	$042c1d                   ; 042AE8 || 	call	$042bda                   ; 042AA5 || 042AE8 CD 1D 2C 04 7121          		CALL    SWAP1           ;RESTORE PREVIOUS VALUE
	jr	$-$28                       ; 042AEC || 	jr	$-$28                       ; 042AA9 || 042AEC 18 D6       7122          		JR      UINT
	ex	af,af'                      ; 042AEE || 	ex	af,af'                      ; 042AAB || 042AEE 08          7132  FIX:			EX      AF,AF'
	xor	a                          ; 042AEF || 	xor	a                          ; 042AAC || 042AEF AF          7133          		XOR     A
	ex	af,af'                      ; 042AF0 || 	ex	af,af'                      ; 042AAD || 042AF0 08          7134          		EX      AF,AF'
	set	7,h                        ; 042AF1 || 	set	7,h                        ; 042AAE || 042AF1 CB FC       7135          		SET     7,H             ;IMPLIED 1
	call	$042c22                   ; 042AF3 || 	call	$042bdf                   ; 042AB0 || 042AF3 CD 22 2C 04 7136  FIX1:			CALL    DIV2
	cp	c                           ; 042AF7 || 	cp	c                           ; 042AB4 || 042AF7 B9          7137          		CP      C
	ret	z                          ; 042AF8 || 	ret	z                          ; 042AB5 || 042AF8 C8          7138          		RET     Z
	jp	nc,$042af3                  ; 042AF9 || 	jp	nc,$042ab0                  ; 042AB6 || 042AF9 D2 F3 2A 04 7139          		JP      NC,FIX1
	jp	$042c31                     ; 042AFD || 	jp	$042bee                     ; 042ABA || 042AFD C3 31 2C 04 7140          		JP      OFLOW
	call	$042c1a                   ; 042B01 || 	call	$042bd7                   ; 042ABE || 042B01 CD 1A 2C 04 7150  FIX2:			CALL    SWAP_FP
	call	$042b0d                   ; 042B05 || 	call	$042aca                   ; 042AC2 || 042B05 CD 0D 2B 04 7151          		CALL    SFIX_FP
	call	$042c1a                   ; 042B09 || 	call	$042bd7                   ; 042AC6 || 042B09 CD 1A 2C 04 7152          		CALL    SWAP_FP
	dec	c                          ; 042B0D || 	dec	c                          ; 042ACA || 042B0D 0D          7153  SFIX_FP:			DEC     C
	inc	c                          ; 042B0E || 	inc	c                          ; 042ACB || 042B0E 0C          7154          		INC     C
	ret	z                          ; 042B0F || 	ret	z                          ; 042ACC || 042B0F C8          7155          		RET     Z               ;INTEGER/ZERO
	bit	7,h                        ; 042B10 || 	bit	7,h                        ; 042ACD || 042B10 CB 7C       7156          		BIT     7,H             ;SIGN
	push	af                        ; 042B12 || 	push	af                        ; 042ACF || 042B12 F5          7157          		PUSH    AF
	ld	a,$9f                       ; 042B13 || 	ld	a,$9f                       ; 042AD0 || 042B13 3E 9F       7158          		LD      A,159
	call	$042aee                   ; 042B15 || 	call	$042aab                   ; 042AD2 || 042B15 CD EE 2A 04 7159          		CALL    FIX
	pop	af                         ; 042B19 || 	pop	af                         ; 042AD6 || 042B19 F1          7160          		POP     AF
	ld	c,$00                       ; 042B1A || 	ld	c,$00                       ; 042AD7 || 042B1A 0E 00       7161          		LD      C,0
	ret	z                          ; 042B1C || 	ret	z                          ; 042AD9 || 042B1C C8          7162          		RET     Z
	or	a                           ; 042B1D || 	or	a                           ; 042ADA || 042B1D B7          7163  NEGATE:			OR      A               ;CLEAR CARRY
	exx                            ; 042B1E || 	exx                            ; 042ADB || 042B1E D9          7164          		EXX
	push	de                        ; 042B1F || 	push	de                        ; 042ADC || 042B1F D5          7165  NEG0:			PUSH    DE
	ex	de,hl                       ; 042B20 || 	ex	de,hl                       ; 042ADD || 042B20 EB          7166          		EX      DE,HL
	ld	hl,$000000                  ; 042B21 || 	ld	hl,$000000                  ; 042ADE || 042B21 21 00 00 00 7167          		LD      HL,0
	sbc.sil	hl,de                  ; 042B25 || 	sbc.sil	hl,de                  ; 042AE2 || 042B25 52 ED 52    7168          		SBC.S   HL,DE
	pop	de                         ; 042B28 || 	pop	de                         ; 042AE5 || 042B28 D1          7169          		POP     DE
	exx                            ; 042B29 || 	exx                            ; 042AE6 || 042B29 D9          7170          		EXX
	push	de                        ; 042B2A || 	push	de                        ; 042AE7 || 042B2A D5          7171          		PUSH    DE
	ex	de,hl                       ; 042B2B || 	ex	de,hl                       ; 042AE8 || 042B2B EB          7172          		EX      DE,HL
	ld	hl,$000000                  ; 042B2C || 	ld	hl,$000000                  ; 042AE9 || 042B2C 21 00 00 00 7173          		LD      HL,0
	sbc.sil	hl,de                  ; 042B30 || 	sbc.sil	hl,de                  ; 042AED || 042B30 52 ED 52    7174          		SBC.S   HL,DE
	pop	de                         ; 042B33 || 	pop	de                         ; 042AF0 || 042B33 D1          7175          		POP     DE
	ret                            ; 042B34 || 	ret                            ; 042AF1 || 042B34 C9          7176          		RET
	exx                            ; 042B35 || 	exx                            ; 042AF2 || 042B35 D9          7182  NEG_:			EXX
	cpl                            ; 042B36 || 	cpl                            ; 042AF3 || 042B36 2F          7183          		CPL
	push	hl                        ; 042B37 || 	push	hl                        ; 042AF4 || 042B37 E5          7184          		PUSH    HL
	or	a                           ; 042B38 || 	or	a                           ; 042AF5 || 042B38 B7          7185          		OR      A               ;CLEAR CARRY
	ld	hl,$000000                  ; 042B39 || 	ld	hl,$000000                  ; 042AF6 || 042B39 21 00 00 00 7186          		LD      HL,0
	sbc.sil	hl,bc                  ; 042B3D || 	sbc.sil	hl,bc                  ; 042AFA || 042B3D 52 ED 42    7187          		SBC.S   HL,BC
	ld	b,h                         ; 042B40 || 	ld	b,h                         ; 042AFD || 042B40 44          7188          		LD      B,H
	ld	c,l                         ; 042B41 || 	ld	c,l                         ; 042AFE || 042B41 4D          7189          		LD      C,L
	pop	hl                         ; 042B42 || 	pop	hl                         ; 042AFF || 042B42 E1          7190          		POP     HL
	jr	$-$24                       ; 042B43 || 	jr	$-$24                       ; 042B00 || 042B43 18 DA       7191          		JR      NEG0
	ld	a,$96                       ; 042B45 || 	ld	a,$96                       ; 042B02 || 042B45 3E 96       7204  SCALE:			LD      A,150
	cp	c                           ; 042B47 || 	cp	c                           ; 042B04 || 042B47 B9          7205          		CP      C
	ld	a,$17                       ; 042B48 || 	ld	a,$17                       ; 042B05 || 042B48 3E 17       7206          		LD      A,ACLOST
	jp	c,$0420c0                   ; 042B4A || 	jp	c,$04207d                   ; 042B07 || 042B4A DA C0 20 04 7207          		JP      C,ERROR_FP_         ;"Accuracy lost"
	call	$04268b                   ; 042B4E || 	call	$042648                   ; 042B0B || 042B4E CD 8B 26 04 7208          		CALL    PIBY4
	exx                            ; 042B52 || 	exx                            ; 042B0F || 042B52 D9          7209          		EXX
	ld	bc,$002169                  ; 042B53 || 	ld	bc,$002169                  ; 042B10 || 042B53 01 69 21 00 7210          		LD      BC,2169H        ;3.141592653589793238
	exx                            ; 042B57 || 	exx                            ; 042B14 || 042B57 D9          7211          		EXX
	set	7,d                        ; 042B58 || 	set	7,d                        ; 042B15 || 042B58 CB FA       7212  MOD48:			SET     7,D             ;IMPLIED 1
	set	7,h                        ; 042B5A || 	set	7,h                        ; 042B17 || 042B5A CB FC       7213          		SET     7,H
	ld	a,c                         ; 042B5C || 	ld	a,c                         ; 042B19 || 042B5C 79          7214          		LD      A,C
	ld	c,$00                       ; 042B5D || 	ld	c,$00                       ; 042B1A || 042B5D 0E 00       7215          		LD      C,0             ;INIT QUOTIENT
	ld	ix,$000000                  ; 042B5F || 	ld	ix,$000000                  ; 042B1C || 042B5F DD 21 00 00 7216          		LD      IX,0
	push	ix                        ; 042B64 || 	push	ix                        ; 042B21 || 042B64 DD E5       7217          		PUSH    IX              ;PUT ZERO ON STACK
	cp	b                           ; 042B66 || 	cp	b                           ; 042B23 || 042B66 B8          7218          		CP      B
	jr	c,$+$48                     ; 042B67 || 	jr	c,$+$48                     ; 042B24 || 042B67 38 46       7219          		JR      C,MOD485        ;DIVIDEND<DIVISOR
	exx                            ; 042B69 || 	exx                            ; 042B26 || 042B69 D9          7220  MOD481:			EXX                     ;CARRY=0 HERE
	ex	(sp),hl                     ; 042B6A || 	ex	(sp),hl                     ; 042B27 || 042B6A E3          7221          		EX      (SP),HL
	sbc.sil	hl,bc                  ; 042B6B || 	sbc.sil	hl,bc                  ; 042B28 || 042B6B 52 ED 42    7222          		SBC.S   HL,BC
	ex	(sp),hl                     ; 042B6E || 	ex	(sp),hl                     ; 042B2B || 042B6E E3          7223          		EX      (SP),HL
	sbc.sil	hl,de                  ; 042B6F || 	sbc.sil	hl,de                  ; 042B2C || 042B6F 52 ED 52    7224          		SBC.S   HL,DE
	exx                            ; 042B72 || 	exx                            ; 042B2F || 042B72 D9          7225          		EXX
	sbc.sil	hl,de                  ; 042B73 || 	sbc.sil	hl,de                  ; 042B30 || 042B73 52 ED 52    7226          		SBC.S   HL,DE
	jr	nc,$+$0e                    ; 042B76 || 	jr	nc,$+$0e                    ; 042B33 || 042B76 30 0C       7227          		JR      NC,MOD482       ;DIVIDEND>=DIVISOR
	exx                            ; 042B78 || 	exx                            ; 042B35 || 042B78 D9          7228          		EXX
	ex	(sp),hl                     ; 042B79 || 	ex	(sp),hl                     ; 042B36 || 042B79 E3          7229          		EX      (SP),HL
	add.sil	hl,bc                  ; 042B7A || 	add.sil	hl,bc                  ; 042B37 || 042B7A 52 09       7230          		ADD.S   HL,BC
	ex	(sp),hl                     ; 042B7C || 	ex	(sp),hl                     ; 042B39 || 042B7C E3          7231          		EX      (SP),HL
	adc.sil	hl,de                  ; 042B7D || 	adc.sil	hl,de                  ; 042B3A || 042B7D 52 ED 5A    7232          		ADC.S   HL,DE
	exx                            ; 042B80 || 	exx                            ; 042B3D || 042B80 D9          7233          		EXX
	adc.sil	hl,de                  ; 042B81 || 	adc.sil	hl,de                  ; 042B3E || 042B81 52 ED 5A    7234          		ADC.S   HL,DE
	ccf                            ; 042B84 || 	ccf                            ; 042B41 || 042B84 3F          7235  MOD482:			CCF
	rl	c                           ; 042B85 || 	rl	c                           ; 042B42 || 042B85 CB 11       7236          		RL      C               ;QUOTIENT
	jr	nc,$+$04                    ; 042B87 || 	jr	nc,$+$04                    ; 042B44 || 042B87 30 02       7237          		JR      NC,MOD483
	set	7,c                        ; 042B89 || 	set	7,c                        ; 042B46 || 042B89 CB F9       7238          		SET     7,C             ;STICKY BIT
	dec	a                          ; 042B8B || 	dec	a                          ; 042B48 || 042B8B 3D          7239  MOD483:			DEC     A
	cp	b                           ; 042B8C || 	cp	b                           ; 042B49 || 042B8C B8          7240          		CP      B
	jr	c,$+$21                     ; 042B8D || 	jr	c,$+$21                     ; 042B4A || 042B8D 38 1F       7241          		JR      C,MOD484        ;DIVIDEND<DIVISOR
	ex	(sp),hl                     ; 042B8F || 	ex	(sp),hl                     ; 042B4C || 042B8F E3          7242          		EX      (SP),HL
	add.sil	hl,hl                  ; 042B90 || 	add.sil	hl,hl                  ; 042B4D || 042B90 52 29       7243          		ADD.S   HL,HL           ;DIVIDEND * 2
	ex	(sp),hl                     ; 042B92 || 	ex	(sp),hl                     ; 042B4F || 042B92 E3          7244          		EX      (SP),HL
	exx                            ; 042B93 || 	exx                            ; 042B50 || 042B93 D9          7245          		EXX
	adc.sil	hl,hl                  ; 042B94 || 	adc.sil	hl,hl                  ; 042B51 || 042B94 52 ED 6A    7246          		ADC.S   HL,HL
	exx                            ; 042B97 || 	exx                            ; 042B54 || 042B97 D9          7247          		EXX
	adc.sil	hl,hl                  ; 042B98 || 	adc.sil	hl,hl                  ; 042B55 || 042B98 52 ED 6A    7248          		ADC.S   HL,HL
	jr	nc,$-$32                    ; 042B9B || 	jr	nc,$-$32                    ; 042B58 || 042B9B 30 CC       7249          		JR      NC,MOD481       ;AGAIN
	or	a                           ; 042B9D || 	or	a                           ; 042B5A || 042B9D B7          7250          		OR      A
	exx                            ; 042B9E || 	exx                            ; 042B5B || 042B9E D9          7251          		EXX
	ex	(sp),hl                     ; 042B9F || 	ex	(sp),hl                     ; 042B5C || 042B9F E3          7252          		EX      (SP),HL
	sbc.sil	hl,bc                  ; 042BA0 || 	sbc.sil	hl,bc                  ; 042B5D || 042BA0 52 ED 42    7253          		SBC.S   HL,BC           ;OVERFLOW, SO SUBTRACT
	ex	(sp),hl                     ; 042BA3 || 	ex	(sp),hl                     ; 042B60 || 042BA3 E3          7254          		EX      (SP),HL
	sbc.sil	hl,de                  ; 042BA4 || 	sbc.sil	hl,de                  ; 042B61 || 042BA4 52 ED 52    7255          		SBC.S   HL,DE
	exx                            ; 042BA7 || 	exx                            ; 042B64 || 042BA7 D9          7256          		EXX
	sbc.sil	hl,de                  ; 042BA8 || 	sbc.sil	hl,de                  ; 042B65 || 042BA8 52 ED 52    7257          		SBC.S   HL,DE
	or	a                           ; 042BAB || 	or	a                           ; 042B68 || 042BAB B7          7258          		OR      A
	jr	$-$28                       ; 042BAC || 	jr	$-$28                       ; 042B69 || 042BAC 18 D6       7259          		JR      MOD482
	inc	a                          ; 042BAE || 	inc	a                          ; 042B6B || 042BAE 3C          7261  MOD484:			INC     A
	ld	e,c                         ; 042BAF || 	ld	e,c                         ; 042B6C || 042BAF 59          7262  MOD485:			LD      E,C             ;QUOTIENT
	ld	c,a                         ; 042BB0 || 	ld	c,a                         ; 042B6D || 042BB0 4F          7263          		LD      C,A             ;REMAINDER EXPONENT
	exx                            ; 042BB1 || 	exx                            ; 042B6E || 042BB1 D9          7264          		EXX
	pop	bc                         ; 042BB2 || 	pop	bc                         ; 042B6F || 042BB2 C1          7265          		POP     BC
	exx                            ; 042BB3 || 	exx                            ; 042B70 || 042BB3 D9          7266          		EXX
	bit	7,h                        ; 042BB4 || 	bit	7,h                        ; 042B71 || 042BB4 CB 7C       7267  FLO48:			BIT     7,H
	ret	nz                         ; 042BB6 || 	ret	nz                         ; 042B73 || 042BB6 C0          7268          		RET     NZ
	exx                            ; 042BB7 || 	exx                            ; 042B74 || 042BB7 D9          7269          		EXX
	sla	c                          ; 042BB8 || 	sla	c                          ; 042B75 || 042BB8 CB 21       7270          		SLA     C
	rl	b                           ; 042BBA || 	rl	b                           ; 042B77 || 042BBA CB 10       7271          		RL      B
	adc.sil	hl,hl                  ; 042BBC || 	adc.sil	hl,hl                  ; 042B79 || 042BBC 52 ED 6A    7272          		ADC.S   HL,HL
	exx                            ; 042BBF || 	exx                            ; 042B7C || 042BBF D9          7273          		EXX
	adc.sil	hl,hl                  ; 042BC0 || 	adc.sil	hl,hl                  ; 042B7D || 042BC0 52 ED 6A    7274          		ADC.S   HL,HL
	dec	c                          ; 042BC3 || 	dec	c                          ; 042B80 || 042BC3 0D          7275          		DEC     C
	jp	nz,$042bb4                  ; 042BC4 || 	jp	nz,$042b71                  ; 042B81 || 042BC4 C2 B4 2B 04 7276          		JP      NZ,FLO48
	ret                            ; 042BC8 || 	ret                            ; 042B85 || 042BC8 C9          7277          		RET
	bit	7,h                        ; 042BC9 || 	bit	7,h                        ; 042B86 || 042BC9 CB 7C       7283  FLOAT_:			BIT     7,H
	ret	nz                         ; 042BCB || 	ret	nz                         ; 042B88 || 042BCB C0          7284          		RET     NZ
	exx                            ; 042BCC || 	exx                            ; 042B89 || 042BCC D9          7285          		EXX                     ;SAME AS "X2"
	add.sil	hl,hl                  ; 042BCD || 	add.sil	hl,hl                  ; 042B8A || 042BCD 52 29       7286          		ADD.S   HL,HL           ;TIME-CRITICAL
	exx                            ; 042BCF || 	exx                            ; 042B8C || 042BCF D9          7287          		EXX                     ;REGION
	adc.sil	hl,hl                  ; 042BD0 || 	adc.sil	hl,hl                  ; 042B8D || 042BD0 52 ED 6A    7288          		ADC.S   HL,HL           ;(BENCHMARKS)
	dec	c                          ; 042BD3 || 	dec	c                          ; 042B90 || 042BD3 0D          7289          		DEC     C
	jp	nz,$042bc9                  ; 042BD4 || 	jp	nz,$042b86                  ; 042B91 || 042BD4 C2 C9 2B 04 7290          		JP      NZ,FLOAT_
	ret                            ; 042BD8 || 	ret                            ; 042B95 || 042BD8 C9          7291          		RET
	ex	af,af'                      ; 042BD9 || 	ex	af,af'                      ; 042B96 || 042BD9 08          7298  FLOATA:			EX      AF,AF'
	add	a,$2a                      ; 042BDA || 	add	a,$2a                      ; 042B97 || 042BDA C6 2A       7300          		ADD     A,RTABLE-DTABLE/3 ; ez80asm doesn't do nested expressions
	ex	af,af'                      ; 042BDC || 	ex	af,af'                      ; 042B99 || 042BDC 08          7301          		EX      AF,AF'
	call	$042c1a                   ; 042BDD || 	call	$042bd7                   ; 042B9A || 042BDD CD 1A 2C 04 7302  FLOAT2:			CALL    SWAP_FP
	call	$042be9                   ; 042BE1 || 	call	$042ba6                   ; 042B9E || 042BE1 CD E9 2B 04 7303          		CALL    SFLOAT_FP
	call	$042c1a                   ; 042BE5 || 	call	$042bd7                   ; 042BA2 || 042BE5 CD 1A 2C 04 7304          		CALL    SWAP_FP
	dec	c                          ; 042BE9 || 	dec	c                          ; 042BA6 || 042BE9 0D          7305  SFLOAT_FP:			DEC     C
	inc	c                          ; 042BEA || 	inc	c                          ; 042BA7 || 042BEA 0C          7306          		INC     C
	ret	nz                         ; 042BEB || 	ret	nz                         ; 042BA8 || 042BEB C0          7307          		RET     NZ              ;ALREADY FLOATING-POINT
	call	$042c42                   ; 042BEC || 	call	$042bff                   ; 042BA9 || 042BEC CD 42 2C 04 7308          		CALL    TEST_FP
	ret	z                          ; 042BF0 || 	ret	z                          ; 042BAD || 042BF0 C8          7309          		RET     Z               ;ZERO
	ld	a,h                         ; 042BF1 || 	ld	a,h                         ; 042BAE || 042BF1 7C          7310          		LD      A,H
	or	a                           ; 042BF2 || 	or	a                           ; 042BAF || 042BF2 B7          7311          		OR      A
	call	m,$042b1d                 ; 042BF3 || 	call	m,$042ada                 ; 042BB0 || 042BF3 FC 1D 2B 04 7312          		CALL    M,NEGATE
	ld	c,$9f                       ; 042BF7 || 	ld	c,$9f                       ; 042BB4 || 042BF7 0E 9F       7313          		LD      C,159
	call	$042bc9                   ; 042BF9 || 	call	$042b86                   ; 042BB6 || 042BF9 CD C9 2B 04 7314          		CALL    FLOAT_
	or	a                           ; 042BFD || 	or	a                           ; 042BBA || 042BFD B7          7315          		OR      A
	ret	m                          ; 042BFE || 	ret	m                          ; 042BBB || 042BFE F8          7316          		RET     M               ;NEGATIVE
	res	7,h                        ; 042BFF || 	res	7,h                        ; 042BBC || 042BFF CB BC       7317          		RES     7,H
	ret                            ; 042C01 || 	ret                            ; 042BBE || 042C01 C9          7318          		RET
	exx                            ; 042C02 || 	exx                            ; 042BBF || 042C02 D9          7324  ADD1_FP:			EXX
	ld	bc,$000001                  ; 042C03 || 	ld	bc,$000001                  ; 042BC0 || 042C03 01 01 00 00 7325          		LD      BC,1
	add.sil	hl,bc                  ; 042C07 || 	add.sil	hl,bc                  ; 042BC4 || 042C07 52 09       7326          		ADD.S   HL,BC
	exx                            ; 042C09 || 	exx                            ; 042BC6 || 042C09 D9          7327          		EXX
	ret	nc                         ; 042C0A || 	ret	nc                         ; 042BC7 || 042C0A D0          7328          		RET     NC
	push	bc                        ; 042C0B || 	push	bc                        ; 042BC8 || 042C0B C5          7329          		PUSH    BC
	ld	bc,$000001                  ; 042C0C || 	ld	bc,$000001                  ; 042BC9 || 042C0C 01 01 00 00 7330          		LD      BC,1
	add.sil	hl,bc                  ; 042C10 || 	add.sil	hl,bc                  ; 042BCD || 042C10 52 09       7331          		ADD.S   HL,BC
	pop	bc                         ; 042C12 || 	pop	bc                         ; 042BCF || 042C12 C1          7332          		POP     BC
	ret                            ; 042C13 || 	ret                            ; 042BD0 || 042C13 C9          7333          		RET
	or	a                           ; 042C14 || 	or	a                           ; 042BD1 || 042C14 B7          7340  ODD:			OR      A               ;CLEAR CARRY
	exx                            ; 042C15 || 	exx                            ; 042BD2 || 042C15 D9          7341          		EXX
	set	0,l                        ; 042C16 || 	set	0,l                        ; 042BD3 || 042C16 CB C5       7342          		SET     0,L             ;MAKE ODD
	exx                            ; 042C18 || 	exx                            ; 042BD5 || 042C18 D9          7343          		EXX
	ret                            ; 042C19 || 	ret                            ; 042BD6 || 042C19 C9          7344          		RET
	ld	a,c                         ; 042C1A || 	ld	a,c                         ; 042BD7 || 042C1A 79          7352  SWAP_FP:			LD      A,C
	ld	c,b                         ; 042C1B || 	ld	c,b                         ; 042BD8 || 042C1B 48          7353          		LD      C,B
	ld	b,a                         ; 042C1C || 	ld	b,a                         ; 042BD9 || 042C1C 47          7354          		LD      B,A
	ex	de,hl                       ; 042C1D || 	ex	de,hl                       ; 042BDA || 042C1D EB          7355  SWAP1:			EX      DE,HL
	exx                            ; 042C1E || 	exx                            ; 042BDB || 042C1E D9          7356          		EXX
	ex	de,hl                       ; 042C1F || 	ex	de,hl                       ; 042BDC || 042C1F EB          7357          		EX      DE,HL
	exx                            ; 042C20 || 	exx                            ; 042BDD || 042C20 D9          7358          		EXX
	ret                            ; 042C21 || 	ret                            ; 042BDE || 042C21 C9          7359          		RET
	call	$042cdb                   ; 042C22 || 	call	$042c98                   ; 042BDF || 042C22 CD DB 2C 04 7365  DIV2:			CALL    D2
	exx                            ; 042C26 || 	exx                            ; 042BE3 || 042C26 D9          7366          		EXX
	rr	b                           ; 042C27 || 	rr	b                           ; 042BE4 || 042C27 CB 18       7367          		RR      B
	rr	c                           ; 042C29 || 	rr	c                           ; 042BE6 || 042C29 CB 19       7368          		RR      C
	ex	af,af'                      ; 042C2B || 	ex	af,af'                      ; 042BE8 || 042C2B 08          7369          		EX      AF,AF'
	or	b                           ; 042C2C || 	or	b                           ; 042BE9 || 042C2C B0          7370          		OR      B
	ex	af,af'                      ; 042C2D || 	ex	af,af'                      ; 042BEA || 042C2D 08          7371          		EX      AF,AF'
	exx                            ; 042C2E || 	exx                            ; 042BEB || 042C2E D9          7372          		EXX
	inc	c                          ; 042C2F || 	inc	c                          ; 042BEC || 042C2F 0C          7373  INCC:			INC     C
	ret	nz                         ; 042C30 || 	ret	nz                         ; 042BED || 042C30 C0          7374          		RET     NZ
	ld	a,$14                       ; 042C31 || 	ld	a,$14                       ; 042BEE || 042C31 3E 14       7375  OFLOW:			LD      A,TOOBIG_FP
	jp	$0420c0                     ; 042C33 || 	jp	$04207d                     ; 042BF0 || 042C33 C3 C0 20 04 7376          		JP      ERROR_FP_           ;"Too big"
	call	$042c42                   ; 042C37 || 	call	$042bff                   ; 042BF4 || 042C37 CD 42 2C 04 7381  FTEST_FP:			CALL    TEST_FP
	ret	z                          ; 042C3B || 	ret	z                          ; 042BF8 || 042C3B C8          7382          		RET     Z
	ld	a,h                         ; 042C3C || 	ld	a,h                         ; 042BF9 || 042C3C 7C          7383          		LD      A,H
	and	$80                        ; 042C3D || 	and	$80                        ; 042BFA || 042C3D E6 80       7384          		AND     10000000B
	or	$40                         ; 042C3F || 	or	$40                         ; 042BFC || 042C3F F6 40       7385          		OR      01000000B
	ret                            ; 042C41 || 	ret                            ; 042BFE || 042C41 C9          7386          		RET
	ld	a,h                         ; 042C42 || 	ld	a,h                         ; 042BFF || 042C42 7C          7392  TEST_FP:			LD      A,H
	or	l                           ; 042C43 || 	or	l                           ; 042C00 || 042C43 B5          7393          		OR      L
	exx                            ; 042C44 || 	exx                            ; 042C01 || 042C44 D9          7394          		EXX
	or	h                           ; 042C45 || 	or	h                           ; 042C02 || 042C45 B4          7395          		OR      H
	or	l                           ; 042C46 || 	or	l                           ; 042C03 || 042C46 B5          7396          		OR      L
	exx                            ; 042C47 || 	exx                            ; 042C04 || 042C47 D9          7397          		EXX
	ret                            ; 042C48 || 	ret                            ; 042C05 || 042C48 C9          7398          		RET
	ld	a,b                         ; 042C49 || 	ld	a,b                         ; 042C06 || 042C49 78          7403  FCOMP_FP:			LD      A,B
	or	c                           ; 042C4A || 	or	c                           ; 042C07 || 042C4A B1          7404          		OR      C               ;Both integer?
	jr	nz,$+$0d                    ; 042C4B || 	jr	nz,$+$0d                    ; 042C08 || 042C4B 20 0B       7405          		JR      NZ,FCOMP1
	call	$042c62                   ; 042C4D || 	call	$042c1f                   ; 042C0A || 042C4D CD 62 2C 04 7406          		CALL    ICP
	ld	a,$00                       ; 042C51 || 	ld	a,$00                       ; 042C0E || 042C51 3E 00       7407  FCOMP0:			LD      A,0
	ret	z                          ; 042C53 || 	ret	z                          ; 042C10 || 042C53 C8          7408          		RET     Z               ;Equal
	ld	a,$80                       ; 042C54 || 	ld	a,$80                       ; 042C11 || 042C54 3E 80       7409          		LD      A,80H
	rra                            ; 042C56 || 	rra                            ; 042C13 || 042C56 1F          7410          		RRA
	ret                            ; 042C57 || 	ret                            ; 042C14 || 042C57 C9          7411          		RET
	call	$042bdd                   ; 042C58 || 	call	$042b9a                   ; 042C15 || 042C58 CD DD 2B 04 7413  FCOMP1:			CALL    FLOAT2          ;Float both
	call	$042c70                   ; 042C5C || 	call	$042c2d                   ; 042C19 || 042C5C CD 70 2C 04 7414          		CALL    FCP
	jr	$-$0f                       ; 042C60 || 	jr	$-$0f                       ; 042C1D || 042C60 18 EF       7415          		JR      FCOMP0
	call	$042c95                   ; 042C62 || 	call	$042c52                   ; 042C1F || 042C62 CD 95 2C 04 7425  ICP:			CALL    ICP1
	ld	a,$00                       ; 042C66 || 	ld	a,$00                       ; 042C23 || 042C66 3E 00       7426  ZERO_FP:			LD      A,0
	exx                            ; 042C68 || 	exx                            ; 042C25 || 042C68 D9          7427          		EXX
	ld	h,a                         ; 042C69 || 	ld	h,a                         ; 042C26 || 042C69 67          7428          		LD      H,A
	ld	l,a                         ; 042C6A || 	ld	l,a                         ; 042C27 || 042C6A 6F          7429  	       		LD      L,A
	exx                            ; 042C6B || 	exx                            ; 042C28 || 042C6B D9          7430          		EXX
	ld	h,a                         ; 042C6C || 	ld	h,a                         ; 042C29 || 042C6C 67          7431        			LD      H,A
	ld	l,a                         ; 042C6D || 	ld	l,a                         ; 042C2A || 042C6D 6F          7432       			LD      L,A
	ld	c,a                         ; 042C6E || 	ld	c,a                         ; 042C2B || 042C6E 4F          7433  	    		LD      C,A
	ret                            ; 042C6F || 	ret                            ; 042C2C || 042C6F C9          7434          		RET
	call	$042c87                   ; 042C70 || 	call	$042c44                   ; 042C2D || 042C70 CD 87 2C 04 7436  FCP:			CALL    FCP1
	jr	$-$0e                       ; 042C74 || 	jr	$-$0e                       ; 042C31 || 042C74 18 F0       7437          		JR      ZERO_FP            ;PRESET FALSE
	ld	a,c                         ; 042C76 || 	ld	a,c                         ; 042C33 || 042C76 79          7439  FCP0:			LD      A,C
	cp	b                           ; 042C77 || 	cp	b                           ; 042C34 || 042C77 B8          7440          		CP      B               ;COMPARE EXPONENTS
	ret	nz                         ; 042C78 || 	ret	nz                         ; 042C35 || 042C78 C0          7441          		RET     NZ
	sbc.sil	hl,de                  ; 042C79 || 	sbc.sil	hl,de                  ; 042C36 || 042C79 52 ED 52    7443  			SBC.S   HL,DE           ;COMP MANTISSA MSB
	add.sil	hl,de                  ; 042C7C || 	add.sil	hl,de                  ; 042C39 || 042C7C 52 19       7444          		ADD.S   HL,DE
	ret	nz                         ; 042C7E || 	ret	nz                         ; 042C3B || 042C7E C0          7445          		RET     NZ
	exx                            ; 042C7F || 	exx                            ; 042C3C || 042C7F D9          7446          		EXX
	sbc.sil	hl,de                  ; 042C80 || 	sbc.sil	hl,de                  ; 042C3D || 042C80 52 ED 52    7447          		SBC.S   HL,DE           ;COMP MANTISSA LSB
	add.sil	hl,de                  ; 042C83 || 	add.sil	hl,de                  ; 042C40 || 042C83 52 19       7448          		ADD.S   HL,DE
	exx                            ; 042C85 || 	exx                            ; 042C42 || 042C85 D9          7449          		EXX
	ret                            ; 042C86 || 	ret                            ; 042C43 || 042C86 C9          7450          		RET
	ld	a,h                         ; 042C87 || 	ld	a,h                         ; 042C44 || 042C87 7C          7452  FCP1:			LD      A,H
	xor	d                          ; 042C88 || 	xor	d                          ; 042C45 || 042C88 AA          7453          		XOR     D
	ld	a,h                         ; 042C89 || 	ld	a,h                         ; 042C46 || 042C89 7C          7454          		LD      A,H
	rla                            ; 042C8A || 	rla                            ; 042C47 || 042C8A 17          7455          		RLA
	ret	m                          ; 042C8B || 	ret	m                          ; 042C48 || 042C8B F8          7456          		RET     M
	jr	nc,$-$16                    ; 042C8C || 	jr	nc,$-$16                    ; 042C49 || 042C8C 30 E8       7457          		JR      NC,FCP0
	call	$042c76                   ; 042C8E || 	call	$042c33                   ; 042C4B || 042C8E CD 76 2C 04 7458          		CALL    FCP0
	ret	z                          ; 042C92 || 	ret	z                          ; 042C4F || 042C92 C8          7459          		RET     Z               ;** V0.1 BUG FIX
	ccf                            ; 042C93 || 	ccf                            ; 042C50 || 042C93 3F          7460          		CCF
	ret                            ; 042C94 || 	ret                            ; 042C51 || 042C94 C9          7461          		RET
	ld	a,h                         ; 042C95 || 	ld	a,h                         ; 042C52 || 042C95 7C          7463  ICP1:			LD      A,H
	xor	d                          ; 042C96 || 	xor	d                          ; 042C53 || 042C96 AA          7464          		XOR     D
	jp	p,$042c79                   ; 042C97 || 	jp	p,$042c36                   ; 042C54 || 042C97 F2 79 2C 04 7465          		JP      P,ICP0
	ld	a,h                         ; 042C9B || 	ld	a,h                         ; 042C58 || 042C9B 7C          7466          		LD      A,H
	rla                            ; 042C9C || 	rla                            ; 042C59 || 042C9C 17          7467          		RLA
	ret                            ; 042C9D || 	ret                            ; 042C5A || 042C9D C9          7468          		RET
	dec	b                          ; 042C9E || 	dec	b                          ; 042C5B || 042C9E 05          7474  X10B:			DEC     B
	inc	c                          ; 042C9F || 	inc	c                          ; 042C5C || 042C9F 0C          7475          		INC     C
	call	$042ce7                   ; 042CA0 || 	call	$042ca4                   ; 042C5D || 042CA0 CD E7 2C 04 7476  X5:			CALL    COPY0
	call	$042cda                   ; 042CA4 || 	call	$042c97                   ; 042C61 || 042CA4 CD DA 2C 04 7477          		CALL    D2C
	call	$042cda                   ; 042CA8 || 	call	$042c97                   ; 042C65 || 042CA8 CD DA 2C 04 7478          		CALL    D2C
	ex	af,af'                      ; 042CAC || 	ex	af,af'                      ; 042C69 || 042CAC 08          7479          		EX      AF,AF'          ;SAVE CARRY
	exx                            ; 042CAD || 	exx                            ; 042C6A || 042CAD D9          7480  ADD_:			EXX
	add.sil	hl,de                  ; 042CAE || 	add.sil	hl,de                  ; 042C6B || 042CAE 52 19       7481          		ADD.S   HL,DE
	exx                            ; 042CB0 || 	exx                            ; 042C6D || 042CB0 D9          7482          		EXX
	adc.sil	hl,de                  ; 042CB1 || 	adc.sil	hl,de                  ; 042C6E || 042CB1 52 ED 5A    7483          		ADC.S   HL,DE
	ret                            ; 042CB4 || 	ret                            ; 042C71 || 042CB4 C9          7484          		RET
	exx                            ; 042CB5 || 	exx                            ; 042C72 || 042CB5 D9          7490  SUB_:			EXX
	or	a                           ; 042CB6 || 	or	a                           ; 042C73 || 042CB6 B7          7491          		OR      A
	sbc.sil	hl,de                  ; 042CB7 || 	sbc.sil	hl,de                  ; 042C74 || 042CB7 52 ED 52    7492          		SBC.S   HL,DE
	exx                            ; 042CBA || 	exx                            ; 042C77 || 042CBA D9          7493          		EXX
	sbc.sil	hl,de                  ; 042CBB || 	sbc.sil	hl,de                  ; 042C78 || 042CBB 52 ED 52    7494          		SBC.S   HL,DE
	ret                            ; 042CBE || 	ret                            ; 042C7B || 042CBE C9          7495          		RET
	call	$042ce7                   ; 042CBF || 	call	$042ca4                   ; 042C7C || 042CBF CD E7 2C 04 7508  X10:			CALL    COPY0           ;DED'E'=HLH'L'
	call	$042cd2                   ; 042CC3 || 	call	$042c8f                   ; 042C80 || 042CC3 CD D2 2C 04 7509          		CALL    X2
	ret	c                          ; 042CC7 || 	ret	c                          ; 042C84 || 042CC7 D8          7510          		RET     C               ;TOO BIG
	call	$042cd2                   ; 042CC8 || 	call	$042c8f                   ; 042C85 || 042CC8 CD D2 2C 04 7511          		CALL    X2
	ret	c                          ; 042CCC || 	ret	c                          ; 042C89 || 042CCC D8          7512          		RET     C
	call	$042cad                   ; 042CCD || 	call	$042c6a                   ; 042C8A || 042CCD CD AD 2C 04 7513          		CALL    ADD_
	ret	c                          ; 042CD1 || 	ret	c                          ; 042C8E || 042CD1 D8          7514          		RET     C
	exx                            ; 042CD2 || 	exx                            ; 042C8F || 042CD2 D9          7515  X2:			EXX
	add.sil	hl,hl                  ; 042CD3 || 	add.sil	hl,hl                  ; 042C90 || 042CD3 52 29       7516          		ADD.S   HL,HL
	exx                            ; 042CD5 || 	exx                            ; 042C92 || 042CD5 D9          7517          		EXX
	adc.sil	hl,hl                  ; 042CD6 || 	adc.sil	hl,hl                  ; 042C93 || 042CD6 52 ED 6A    7518          		ADC.S   HL,HL
	ret                            ; 042CD9 || 	ret                            ; 042C96 || 042CD9 C9          7519          		RET
	inc	c                          ; 042CDA || 	inc	c                          ; 042C97 || 042CDA 0C          7525  D2C:			INC     C
	srl	h                          ; 042CDB || 	srl	h                          ; 042C98 || 042CDB CB 3C       7526  D2:			SRL     H
	rr	l                           ; 042CDD || 	rr	l                           ; 042C9A || 042CDD CB 1D       7527          		RR      L
	exx                            ; 042CDF || 	exx                            ; 042C9C || 042CDF D9          7528          		EXX
	rr	h                           ; 042CE0 || 	rr	h                           ; 042C9D || 042CE0 CB 1C       7529          		RR      H
	rr	l                           ; 042CE2 || 	rr	l                           ; 042C9F || 042CE2 CB 1D       7530          		RR      L
	exx                            ; 042CE4 || 	exx                            ; 042CA1 || 042CE4 D9          7531          		EXX
	ret                            ; 042CE5 || 	ret                            ; 042CA2 || 042CE5 C9          7532          		RET
	ld	b,c                         ; 042CE6 || 	ld	b,c                         ; 042CA3 || 042CE6 41          7537  COPY_:			LD      B,C
	ld	d,h                         ; 042CE7 || 	ld	d,h                         ; 042CA4 || 042CE7 54          7538  COPY0:			LD      D,H
	ld	e,l                         ; 042CE8 || 	ld	e,l                         ; 042CA5 || 042CE8 5D          7539          		LD      E,L
	exx                            ; 042CE9 || 	exx                            ; 042CA6 || 042CE9 D9          7540          		EXX
	ld	d,h                         ; 042CEA || 	ld	d,h                         ; 042CA7 || 042CEA 54          7541          		LD      D,H
	ld	e,l                         ; 042CEB || 	ld	e,l                         ; 042CA8 || 042CEB 5D          7542          		LD      E,L
	exx                            ; 042CEC || 	exx                            ; 042CA9 || 042CEC D9          7543          		EXX
	ret                            ; 042CED || 	ret                            ; 042CAA || 042CED C9          7544          		RET
	call	$042ce6                   ; 042CEE || 	call	$042ca3                   ; 042CAB || 042CEE CD E6 2C 04 7550  SQUARE:			CALL    COPY_
	call	$042351                   ; 042CF2 || 	call	$04230e                   ; 042CAF || 042CF2 CD 51 23 04 7551          		CALL    FMUL
	pop	ix                         ; 042CF6 || 	pop	ix                         ; 042CB3 || 042CF6 DD E1       7552  PUSH5:			POP     IX              ;RETURN ADDRESS
	push	bc                        ; 042CF8 || 	push	bc                        ; 042CB5 || 042CF8 C5          7553          		PUSH    BC
	push	hl                        ; 042CF9 || 	push	hl                        ; 042CB6 || 042CF9 E5          7554          		PUSH    HL
	exx                            ; 042CFA || 	exx                            ; 042CB7 || 042CFA D9          7555          		EXX
	push	hl                        ; 042CFB || 	push	hl                        ; 042CB8 || 042CFB E5          7556          		PUSH    HL
	exx                            ; 042CFC || 	exx                            ; 042CB9 || 042CFC D9          7557          		EXX
	jp	(ix)                        ; 042CFD || 	jp	(ix)                        ; 042CBA || 042CFD DD E9       7558          		JP      (IX)            ;"RETURN"
	pop	ix                         ; 042CFF || 	pop	ix                         ; 042CBC || 042CFF DD E1       7563  POP5:			POP     IX              ;RETURN ADDRESS
	exx                            ; 042D01 || 	exx                            ; 042CBE || 042D01 D9          7564          		EXX
	pop	de                         ; 042D02 || 	pop	de                         ; 042CBF || 042D02 D1          7565          		POP     DE
	exx                            ; 042D03 || 	exx                            ; 042CC0 || 042D03 D9          7566          		EXX
	pop	de                         ; 042D04 || 	pop	de                         ; 042CC1 || 042D04 D1          7567          		POP     DE
	ld	a,c                         ; 042D05 || 	ld	a,c                         ; 042CC2 || 042D05 79          7568          		LD      A,C
	pop	bc                         ; 042D06 || 	pop	bc                         ; 042CC3 || 042D06 C1          7569          		POP     BC
	ld	b,c                         ; 042D07 || 	ld	b,c                         ; 042CC4 || 042D07 41          7570          		LD      B,C
	ld	c,a                         ; 042D08 || 	ld	c,a                         ; 042CC5 || 042D08 4F          7571          		LD      C,A
	jp	(ix)                        ; 042D09 || 	jp	(ix)                        ; 042CC6 || 042D09 DD E9       7572          		JP      (IX)            ;"RETURN"
	call	$042cf6                   ; 042D0B || 	call	$042cb3                   ; 042CC8 || 042D0B CD F6 2C 04 7579  RATIO:			CALL    PUSH5           ;SAVE X
	call	$04267e                   ; 042D0F || 	call	$04263b                   ; 042CCC || 042D0F CD 7E 26 04 7580          		CALL    DONE
	call	$04223f                   ; 042D13 || 	call	$0421fc                   ; 042CD0 || 042D13 CD 3F 22 04 7581          		CALL    FADD
	call	$042cff                   ; 042D17 || 	call	$042cbc                   ; 042CD4 || 042D17 CD FF 2C 04 7582          		CALL    POP5            ;RESTORE X
	call	$042cf6                   ; 042D1B || 	call	$042cb3                   ; 042CD8 || 042D1B CD F6 2C 04 7583          		CALL    PUSH5           ;SAVE X+1
	call	$042c1a                   ; 042D1F || 	call	$042bd7                   ; 042CDC || 042D1F CD 1A 2C 04 7584          		CALL    SWAP_FP
	call	$04267e                   ; 042D23 || 	call	$04263b                   ; 042CE0 || 042D23 CD 7E 26 04 7585          		CALL    DONE
	call	$042226                   ; 042D27 || 	call	$0421e3                   ; 042CE4 || 042D27 CD 26 22 04 7586          		CALL    FSUB
	call	$042cff                   ; 042D2B || 	call	$042cbc                   ; 042CE8 || 042D2B CD FF 2C 04 7587          		CALL    POP5            ;RESTORE X+1
	jp	$0422a8                     ; 042D2F || 	jp	$042265                     ; 042CEC || 042D2F C3 A8 22 04 7588          		JP      FDIV
	ld	ix,$000003                  ; 042D33 || 	ld	ix,$000003                  ; 042CF0 || 042D33 DD 21 03 00 7599  POLY:			LD      IX, 3				; Advance the SP to the return address
	add	ix,sp                      ; 042D38 || 	add	ix,sp                      ; 042CF5 || 042D38 DD 39       7600          		ADD     IX, SP
	ex	(sp),ix                     ; 042D3A || 	ex	(sp),ix                     ; 042CF7 || 042D3A DD E3       7601          		EX      (SP), IX			; IX: Points to the inline list of coefficients
	call	$042a12                   ; 042D3C || 	call	$0429cf                   ; 042CF9 || 042D3C CD 12 2A 04 7603          		CALL    DLOAD5          		; Load the first coefficient from (IX)
	call	$042351                   ; 042D40 || 	call	$04230e                   ; 042CFD || 042D40 CD 51 23 04 7604  POLY1:			CALL    FMUL
	ld	de,$000005                  ; 042D44 || 	ld	de,$000005                  ; 042D01 || 042D44 11 05 00 00 7605          		LD      DE, 5				; Skip to the next coefficient
	add	ix,de                      ; 042D48 || 	add	ix,de                      ; 042D05 || 042D48 DD 19       7606          		ADD     IX, DE
	call	$042a12                   ; 042D4A || 	call	$0429cf                   ; 042D07 || 042D4A CD 12 2A 04 7607          		CALL    DLOAD5          		; Load the second coefficient from (IX)
	ex	(sp),ix                     ; 042D4E || 	ex	(sp),ix                     ; 042D0B || 042D4E DD E3       7608          		EX      (SP), IX			; Restore the SP just in case we need to return
	inc	b                          ; 042D50 || 	inc	b                          ; 042D0D || 042D50 04          7609          		INC     B
	dec	b                          ; 042D51 || 	dec	b                          ; 042D0E || 042D51 05          7610          		DEC     B               		; Test B for end byte (80h)
	jp	m,$04223f                   ; 042D52 || 	jp	m,$0421fc                   ; 042D0F || 042D52 FA 3F 22 04 7611          		JP      M,FADD				; Yes, so add and return
	call	$04223f                   ; 042D56 || 	call	$0421fc                   ; 042D13 || 042D56 CD 3F 22 04 7612          		CALL    FADD				; No, so add
	call	$042a24                   ; 042D5A || 	call	$0429e1                   ; 042D17 || 042D5A CD 24 2A 04 7613          		CALL    DLOAD5_SPL			; Load X from SP
	ex	(sp),ix                     ; 042D5E || 	ex	(sp),ix                     ; 042D1B || 042D5E DD E3       7614          		EX      (SP), IX			; IX: Points to the inline list of coefficients
	jr	$-$20                       ; 042D60 || 	jr	$-$20                       ; 042D1D || 042D60 18 DE       7615          		JR      POLY1				; And loop
	inc	a                          ; 042D62 || 	inc	a                          ; 042D1F || 042D62 3C          7624  POWR10:			INC     A
	ex	af,af'                      ; 042D63 || 	ex	af,af'                      ; 042D20 || 042D63 08          7625          		EX      AF,AF'
	push	hl                        ; 042D64 || 	push	hl                        ; 042D21 || 042D64 E5          7626          		PUSH    HL
	exx                            ; 042D65 || 	exx                            ; 042D22 || 042D65 D9          7627          		EXX
	push	hl                        ; 042D66 || 	push	hl                        ; 042D23 || 042D66 E5          7628          		PUSH    HL
	exx                            ; 042D67 || 	exx                            ; 042D24 || 042D67 D9          7629          		EXX
	call	$04267e                   ; 042D68 || 	call	$04263b                   ; 042D25 || 042D68 CD 7E 26 04 7630          		CALL    DONE
	call	$042c1a                   ; 042D6C || 	call	$042bd7                   ; 042D29 || 042D6C CD 1A 2C 04 7631          		CALL    SWAP_FP
	xor	a                          ; 042D70 || 	xor	a                          ; 042D2D || 042D70 AF          7632          		XOR     A
	ex	af,af'                      ; 042D71 || 	ex	af,af'                      ; 042D2E || 042D71 08          7633  POWR11:			EX      AF,AF'
	dec	a                          ; 042D72 || 	dec	a                          ; 042D2F || 042D72 3D          7634          		DEC     A
	jr	z,$+$28                     ; 042D73 || 	jr	z,$+$28                     ; 042D30 || 042D73 28 26       7635          		JR      Z,POWR14        ;EXIT TYPE 1
	jp	p,$042d7d                   ; 042D75 || 	jp	p,$042d3a                   ; 042D32 || 042D75 F2 7D 2D 04 7636          		JP      P,POWR13
	cp	c                           ; 042D79 || 	cp	c                           ; 042D36 || 042D79 B9          7637          		CP      C
	jr	c,$+$21                     ; 042D7A || 	jr	c,$+$21                     ; 042D37 || 042D7A 38 1F       7638          		JR      C,POWR14        ;EXIT TYPE 2
	inc	a                          ; 042D7C || 	inc	a                          ; 042D39 || 042D7C 3C          7639          		INC     A
	ex	af,af'                      ; 042D7D || 	ex	af,af'                      ; 042D3A || 042D7D 08          7640  POWR13:			EX      AF,AF'
	inc	a                          ; 042D7E || 	inc	a                          ; 042D3B || 042D7E 3C          7641          		INC     A
	set	7,h                        ; 042D7F || 	set	7,h                        ; 042D3C || 042D7F CB FC       7642          		SET     7,H
	call	$042ca0                   ; 042D81 || 	call	$042c5d                   ; 042D3E || 042D81 CD A0 2C 04 7643          		CALL    X5
	jr	nc,$+$08                    ; 042D85 || 	jr	nc,$+$08                    ; 042D42 || 042D85 30 06       7644          		JR      NC,POWR12
	ex	af,af'                      ; 042D87 || 	ex	af,af'                      ; 042D44 || 042D87 08          7645          		EX      AF,AF'
	call	$042cda                   ; 042D88 || 	call	$042c97                   ; 042D45 || 042D88 CD DA 2C 04 7646          		CALL    D2C
	ex	af,af'                      ; 042D8C || 	ex	af,af'                      ; 042D49 || 042D8C 08          7647          		EX      AF,AF'
	ex	af,af'                      ; 042D8D || 	ex	af,af'                      ; 042D4A || 042D8D 08          7648  POWR12:			EX      AF,AF'
	call	c,$042c02                 ; 042D8E || 	call	c,$042bbf                 ; 042D4B || 042D8E DC 02 2C 04 7649          		CALL    C,ADD1_FP          ;ROUND UP
	inc	c                          ; 042D92 || 	inc	c                          ; 042D4F || 042D92 0C          7650          		INC     C
	jp	m,$042d71                   ; 042D93 || 	jp	m,$042d2e                   ; 042D50 || 042D93 FA 71 2D 04 7651          		JP      M,POWR11
	jp	$042c31                     ; 042D97 || 	jp	$042bee                     ; 042D54 || 042D97 C3 31 2C 04 7652          		JP      OFLOW
	call	$042c1a                   ; 042D9B || 	call	$042bd7                   ; 042D58 || 042D9B CD 1A 2C 04 7653  POWR14:			CALL    SWAP_FP
	res	7,d                        ; 042D9F || 	res	7,d                        ; 042D5C || 042D9F CB BA       7654          		RES     7,D
	exx                            ; 042DA1 || 	exx                            ; 042D5E || 042DA1 D9          7655          		EXX
	pop	hl                         ; 042DA2 || 	pop	hl                         ; 042D5F || 042DA2 E1          7656          		POP     HL
	exx                            ; 042DA3 || 	exx                            ; 042D60 || 042DA3 D9          7657          		EXX
	pop	hl                         ; 042DA4 || 	pop	hl                         ; 042D61 || 042DA4 E1          7658          		POP     HL
	ex	af,af'                      ; 042DA5 || 	ex	af,af'                      ; 042D62 || 042DA5 08          7659          		EX      AF,AF'
	ret                            ; 042DA6 || 	ret                            ; 042D63 || 042DA6 C9          7660          		RET
	or	a                           ; 042DA7 || 	or	a                           ; 042D64 || 042DA7 B7          7668  DIVA:			OR      A               ;CLEAR CARRY
	sbc.sil	hl,bc                  ; 042DA8 || 	sbc.sil	hl,bc                  ; 042D65 || 042DA8 52 ED 42    7670  			SBC.S   HL,BC           ;DIVIDEND-DIVISOR
	exx                            ; 042DAB || 	exx                            ; 042D68 || 042DAB D9          7671          		EXX
	sbc.sil	hl,bc                  ; 042DAC || 	sbc.sil	hl,bc                  ; 042D69 || 042DAC 52 ED 42    7672          		SBC.S   HL,BC
	exx                            ; 042DAF || 	exx                            ; 042D6C || 042DAF D9          7673          		EXX
	jr	nc,$+$09                    ; 042DB0 || 	jr	nc,$+$09                    ; 042D6D || 042DB0 30 07       7674          		JR      NC,DIV1
	add.sil	hl,bc                  ; 042DB2 || 	add.sil	hl,bc                  ; 042D6F || 042DB2 52 09       7675          		ADD.S   HL,BC           ;DIVIDEND+DIVISOR
	exx                            ; 042DB4 || 	exx                            ; 042D71 || 042DB4 D9          7676          		EXX
	adc.sil	hl,bc                  ; 042DB5 || 	adc.sil	hl,bc                  ; 042D72 || 042DB5 52 ED 4A    7677          		ADC.S   HL,BC
	exx                            ; 042DB8 || 	exx                            ; 042D75 || 042DB8 D9          7678          		EXX
	ccf                            ; 042DB9 || 	ccf                            ; 042D76 || 042DB9 3F          7679  DIV1:			CCF
	rl	e                           ; 042DBA || 	rl	e                           ; 042D77 || 042DBA CB 13       7680  DIVC:			RL      E               ;SHIFT RESULT INTO DE
	rl	d                           ; 042DBC || 	rl	d                           ; 042D79 || 042DBC CB 12       7681          		RL      D
	exx                            ; 042DBE || 	exx                            ; 042D7B || 042DBE D9          7682          		EXX
	rl	e                           ; 042DBF || 	rl	e                           ; 042D7C || 042DBF CB 13       7683          		RL      E
	rl	d                           ; 042DC1 || 	rl	d                           ; 042D7E || 042DC1 CB 12       7684          		RL      D
	exx                            ; 042DC3 || 	exx                            ; 042D80 || 042DC3 D9          7685          		EXX
	inc	a                          ; 042DC4 || 	inc	a                          ; 042D81 || 042DC4 3C          7686          		INC     A
	ret	p                          ; 042DC5 || 	ret	p                          ; 042D82 || 042DC5 F0          7687          		RET     P
	adc.sil	hl,hl                  ; 042DC6 || 	adc.sil	hl,hl                  ; 042D83 || 042DC6 52 ED 6A    7689  			ADC.S   HL,HL           ;DIVIDEND*2
	exx                            ; 042DC9 || 	exx                            ; 042D86 || 042DC9 D9          7690          		EXX
	adc.sil	hl,hl                  ; 042DCA || 	adc.sil	hl,hl                  ; 042D87 || 042DCA 52 ED 6A    7691          		ADC.S   HL,HL
	exx                            ; 042DCD || 	exx                            ; 042D8A || 042DCD D9          7692          		EXX
	jr	nc,$-$26                    ; 042DCE || 	jr	nc,$-$26                    ; 042D8B || 042DCE 30 D8       7693          		JR      NC,DIV0
	or	a                           ; 042DD0 || 	or	a                           ; 042D8D || 042DD0 B7          7694          		OR      A
	sbc.sil	hl,bc                  ; 042DD1 || 	sbc.sil	hl,bc                  ; 042D8E || 042DD1 52 ED 42    7695          		SBC.S   HL,BC           ;DIVIDEND-DIVISOR
	exx                            ; 042DD4 || 	exx                            ; 042D91 || 042DD4 D9          7696          		EXX
	sbc.sil	hl,bc                  ; 042DD5 || 	sbc.sil	hl,bc                  ; 042D92 || 042DD5 52 ED 42    7697          		SBC.S   HL,BC
	exx                            ; 042DD8 || 	exx                            ; 042D95 || 042DD8 D9          7698          		EXX
	scf                            ; 042DD9 || 	scf                            ; 042D96 || 042DD9 37          7699          		SCF
	jp	$042dba                     ; 042DDA || 	jp	$042d77                     ; 042D97 || 042DDA C3 BA 2D 04 7700          		JP      DIVC
	or	a                           ; 042DDE || 	or	a                           ; 042D9B || 042DDE B7          7708  MULA:			OR      A               ;CLEAR CARRY
	exx                            ; 042DDF || 	exx                            ; 042D9C || 042DDF D9          7709  MUL0:			EXX
	rr	d                           ; 042DE0 || 	rr	d                           ; 042D9D || 042DE0 CB 1A       7710          		RR      D               ;MULTIPLIER/2
	rr	e                           ; 042DE2 || 	rr	e                           ; 042D9F || 042DE2 CB 1B       7711          		RR      E
	exx                            ; 042DE4 || 	exx                            ; 042DA1 || 042DE4 D9          7712          		EXX
	rr	d                           ; 042DE5 || 	rr	d                           ; 042DA2 || 042DE5 CB 1A       7713          		RR      D
	rr	e                           ; 042DE7 || 	rr	e                           ; 042DA4 || 042DE7 CB 1B       7714          		RR      E
	jr	nc,$+$09                    ; 042DE9 || 	jr	nc,$+$09                    ; 042DA6 || 042DE9 30 07       7715          		JR      NC,MUL1
	add.sil	hl,bc                  ; 042DEB || 	add.sil	hl,bc                  ; 042DA8 || 042DEB 52 09       7716          		ADD.S   HL,BC           ;ADD IN MULTIPLICAND
	exx                            ; 042DED || 	exx                            ; 042DAA || 042DED D9          7717          		EXX
	adc.sil	hl,bc                  ; 042DEE || 	adc.sil	hl,bc                  ; 042DAB || 042DEE 52 ED 4A    7718          		ADC.S   HL,BC
	exx                            ; 042DF1 || 	exx                            ; 042DAE || 042DF1 D9          7719          		EXX
	inc	a                          ; 042DF2 || 	inc	a                          ; 042DAF || 042DF2 3C          7720  MUL1:			INC     A
	ret	p                          ; 042DF3 || 	ret	p                          ; 042DB0 || 042DF3 F0          7721          		RET     P
	exx                            ; 042DF4 || 	exx                            ; 042DB1 || 042DF4 D9          7722  MULB:			EXX
	rr	h                           ; 042DF5 || 	rr	h                           ; 042DB2 || 042DF5 CB 1C       7723          		RR      H               ;PRODUCT/2
	rr	l                           ; 042DF7 || 	rr	l                           ; 042DB4 || 042DF7 CB 1D       7724          		RR      L
	exx                            ; 042DF9 || 	exx                            ; 042DB6 || 042DF9 D9          7725          		EXX
	rr	h                           ; 042DFA || 	rr	h                           ; 042DB7 || 042DFA CB 1C       7726          		RR      H
	rr	l                           ; 042DFC || 	rr	l                           ; 042DB9 || 042DFC CB 1D       7727          		RR      L
	jp	$042ddf                     ; 042DFE || 	jp	$042d9c                     ; 042DBB || 042DFE C3 DF 2D 04 7728          		JP      MUL0
	sbc.sil	hl,bc                  ; 042E02 || 	sbc.sil	hl,bc                  ; 042DBF || 042E02 52 ED 42    7737  			SBC.S   HL,BC
	exx                            ; 042E05 || 	exx                            ; 042DC2 || 042E05 D9          7738          		EXX
	sbc.sil	hl,bc                  ; 042E06 || 	sbc.sil	hl,bc                  ; 042DC3 || 042E06 52 ED 42    7739          		SBC.S   HL,BC
	exx                            ; 042E09 || 	exx                            ; 042DC6 || 042E09 D9          7740          		EXX
	inc	c                          ; 042E0A || 	inc	c                          ; 042DC7 || 042E0A 0C          7741          		INC     C
	jr	nc,$+$0b                    ; 042E0B || 	jr	nc,$+$0b                    ; 042DC8 || 042E0B 30 09       7742          		JR      NC,SQR2
	dec	c                          ; 042E0D || 	dec	c                          ; 042DCA || 042E0D 0D          7743          		DEC     C
	add.sil	hl,bc                  ; 042E0E || 	add.sil	hl,bc                  ; 042DCB || 042E0E 52 09       7744          		ADD.S   HL,BC
	exx                            ; 042E10 || 	exx                            ; 042DCD || 042E10 D9          7745          		EXX
	adc.sil	hl,bc                  ; 042E11 || 	adc.sil	hl,bc                  ; 042DCE || 042E11 52 ED 4A    7746          		ADC.S   HL,BC
	exx                            ; 042E14 || 	exx                            ; 042DD1 || 042E14 D9          7747          		EXX
	dec	c                          ; 042E15 || 	dec	c                          ; 042DD2 || 042E15 0D          7748          		DEC     C
	inc	a                          ; 042E16 || 	inc	a                          ; 042DD3 || 042E16 3C          7749  SQR2:			INC     A
	ret	p                          ; 042E17 || 	ret	p                          ; 042DD4 || 042E17 F0          7750          		RET     P
	sla	c                          ; 042E18 || 	sla	c                          ; 042DD5 || 042E18 CB 21       7751  SQRA:			SLA     C
	rl	b                           ; 042E1A || 	rl	b                           ; 042DD7 || 042E1A CB 10       7752          		RL      B
	exx                            ; 042E1C || 	exx                            ; 042DD9 || 042E1C D9          7753          		EXX
	rl	c                           ; 042E1D || 	rl	c                           ; 042DDA || 042E1D CB 11       7754          		RL      C
	rl	b                           ; 042E1F || 	rl	b                           ; 042DDC || 042E1F CB 10       7755          		RL      B
	exx                            ; 042E21 || 	exx                            ; 042DDE || 042E21 D9          7756          		EXX
	inc	c                          ; 042E22 || 	inc	c                          ; 042DDF || 042E22 0C          7757          		INC     C
	sla	e                          ; 042E23 || 	sla	e                          ; 042DE0 || 042E23 CB 23       7758          		SLA     E
	rl	d                           ; 042E25 || 	rl	d                           ; 042DE2 || 042E25 CB 12       7759          		RL      D
	exx                            ; 042E27 || 	exx                            ; 042DE4 || 042E27 D9          7760          		EXX
	rl	e                           ; 042E28 || 	rl	e                           ; 042DE5 || 042E28 CB 13       7761          		RL      E
	rl	d                           ; 042E2A || 	rl	d                           ; 042DE7 || 042E2A CB 12       7762          		RL      D
	exx                            ; 042E2C || 	exx                            ; 042DE9 || 042E2C D9          7763          		EXX
	adc.sil	hl,hl                  ; 042E2D || 	adc.sil	hl,hl                  ; 042DEA || 042E2D 52 ED 6A    7764          		ADC.S   HL,HL
	exx                            ; 042E30 || 	exx                            ; 042DED || 042E30 D9          7765          		EXX
	adc.sil	hl,hl                  ; 042E31 || 	adc.sil	hl,hl                  ; 042DEE || 042E31 52 ED 6A    7766          		ADC.S   HL,HL
	exx                            ; 042E34 || 	exx                            ; 042DF1 || 042E34 D9          7767          		EXX
	sla	e                          ; 042E35 || 	sla	e                          ; 042DF2 || 042E35 CB 23       7768          		SLA     E
	rl	d                           ; 042E37 || 	rl	d                           ; 042DF4 || 042E37 CB 12       7769          		RL      D
	exx                            ; 042E39 || 	exx                            ; 042DF6 || 042E39 D9          7770          		EXX
	rl	e                           ; 042E3A || 	rl	e                           ; 042DF7 || 042E3A CB 13       7771          		RL      E
	rl	d                           ; 042E3C || 	rl	d                           ; 042DF9 || 042E3C CB 12       7772          		RL      D
	exx                            ; 042E3E || 	exx                            ; 042DFB || 042E3E D9          7773          		EXX
	adc.sil	hl,hl                  ; 042E3F || 	adc.sil	hl,hl                  ; 042DFC || 042E3F 52 ED 6A    7774          		ADC.S   HL,HL
	exx                            ; 042E42 || 	exx                            ; 042DFF || 042E42 D9          7775          		EXX
	adc.sil	hl,hl                  ; 042E43 || 	adc.sil	hl,hl                  ; 042E00 || 042E43 52 ED 6A    7776          		ADC.S   HL,HL
	exx                            ; 042E46 || 	exx                            ; 042E03 || 042E46 D9          7777          		EXX
	jp	nc,$042e02                  ; 042E47 || 	jp	nc,$042dbf                  ; 042E04 || 042E47 D2 02 2E 04 7778          		JP      NC,SQR1
	or	a                           ; 042E4B || 	or	a                           ; 042E08 || 042E4B B7          7779  SQR3:			OR      A
	sbc.sil	hl,bc                  ; 042E4C || 	sbc.sil	hl,bc                  ; 042E09 || 042E4C 52 ED 42    7780          		SBC.S   HL,BC
	exx                            ; 042E4F || 	exx                            ; 042E0C || 042E4F D9          7781          		EXX
	sbc.sil	hl,bc                  ; 042E50 || 	sbc.sil	hl,bc                  ; 042E0D || 042E50 52 ED 42    7782          		SBC.S   HL,BC
	exx                            ; 042E53 || 	exx                            ; 042E10 || 042E53 D9          7783          		EXX
	inc	c                          ; 042E54 || 	inc	c                          ; 042E11 || 042E54 0C          7784          		INC     C
	jp	$042e16                     ; 042E55 || 	jp	$042dd3                     ; 042E12 || 042E55 C3 16 2E 04 7785          		JP      SQR2
	add.sil	hl,hl                  ; 042E59 || 	add.sil	hl,hl                  ; 042E16 || 042E59 52 29       7788  			ADD.S   HL,HL
	exx                            ; 042E5B || 	exx                            ; 042E18 || 042E5B D9          7789          		EXX
	adc.sil	hl,hl                  ; 042E5C || 	adc.sil	hl,hl                  ; 042E19 || 042E5C 52 ED 6A    7790          		ADC.S   HL,HL
	exx                            ; 042E5F || 	exx                            ; 042E1C || 042E5F D9          7791          		EXX
	jr	c,$-$15                     ; 042E60 || 	jr	c,$-$15                     ; 042E1D || 042E60 38 E9       7792          		JR      C,SQR3
	inc	a                          ; 042E62 || 	inc	a                          ; 042E1F || 042E62 3C          7793          		INC     A
	inc	c                          ; 042E63 || 	inc	c                          ; 042E20 || 042E63 0C          7794          		INC     C
	sbc.sil	hl,bc                  ; 042E64 || 	sbc.sil	hl,bc                  ; 042E21 || 042E64 52 ED 42    7795          		SBC.S   HL,BC
	exx                            ; 042E67 || 	exx                            ; 042E24 || 042E67 D9          7796          		EXX
	sbc.sil	hl,bc                  ; 042E68 || 	sbc.sil	hl,bc                  ; 042E25 || 042E68 52 ED 42    7797          		SBC.S   HL,BC
	exx                            ; 042E6B || 	exx                            ; 042E28 || 042E6B D9          7798          		EXX
	ret	nc                         ; 042E6C || 	ret	nc                         ; 042E29 || 042E6C D0          7799          		RET     NC
	add.sil	hl,bc                  ; 042E6D || 	add.sil	hl,bc                  ; 042E2A || 042E6D 52 09       7800          		ADD.S   HL,BC
	exx                            ; 042E6F || 	exx                            ; 042E2C || 042E6F D9          7801          		EXX
	adc.sil	hl,bc                  ; 042E70 || 	adc.sil	hl,bc                  ; 042E2D || 042E70 52 ED 4A    7802          		ADC.S   HL,BC
	exx                            ; 042E73 || 	exx                            ; 042E30 || 042E73 D9          7803          		EXX
	dec	c                          ; 042E74 || 	dec	c                          ; 042E31 || 042E74 0D          7804          		DEC     C
	ret                            ; 042E75 || 	ret                            ; 042E32 || 042E75 C9          7805          		RET
	ld	a,(ix)                      ; 042E76 || 	ld	a,(ix)                      ; 042E33 || 042E76 DD 7E 00    7807  DIGITQ:			LD      A,(IX)
	cp	$3a                         ; 042E79 || 	cp	$3a                         ; 042E36 || 042E79 FE 3A       7808          		CP      '9'+1
	ccf                            ; 042E7B || 	ccf                            ; 042E38 || 042E7B 3F          7809          		CCF
	ret	c                          ; 042E7C || 	ret	c                          ; 042E39 || 042E7C D8          7810          		RET     C
	cp	$30                         ; 042E7D || 	cp	$30                         ; 042E3A || 042E7D FE 30       7811          		CP      '0'
	ret                            ; 042E7F || 	ret                            ; 042E3C || 042E7F C9          7812          		RET
	ld	a,(ix)                      ; 042E80 || 	ld	a,(ix)                      ; 042E3D || 042E80 DD 7E 00    7814  SIGNQ:			LD      A,(IX)
	inc	ix                         ; 042E83 || 	inc	ix                         ; 042E40 || 042E83 DD 23       7815          		INC     IX
	cp	$20                         ; 042E85 || 	cp	$20                         ; 042E42 || 042E85 FE 20       7816          		CP      ' '
	jr	z,$-$07                     ; 042E87 || 	jr	z,$-$07                     ; 042E44 || 042E87 28 F7       7817          		JR      Z,SIGNQ
	cp	$2b                         ; 042E89 || 	cp	$2b                         ; 042E46 || 042E89 FE 2B       7818          		CP      '+'
	ret	z                          ; 042E8B || 	ret	z                          ; 042E48 || 042E8B C8          7819          		RET     Z
	cp	$2d                         ; 042E8C || 	cp	$2d                         ; 042E49 || 042E8C FE 2D       7820          		CP      '-'
	ret	z                          ; 042E8E || 	ret	z                          ; 042E4B || 042E8E C8          7821          		RET     Z
	dec	ix                         ; 042E8F || 	dec	ix                         ; 042E4C || 042E8F DD 2B       7822          		DEC     IX
	ret                            ; 042E91 || 	ret                            ; 042E4E || 042E91 C9          7823          		RET; --- End fpp.asm ---
	call	$043e55                   ; 042E92 || 	call	$043df4                   ; 042E4F || 042E92 CD 55 3E 04 7848  GPIOB_SETMODE:		CALL	SWITCH_A
	xor	d                          ; 042E96                                         || 042E96 AA 2E       7849  			DW	GPIOB_M0	; Output
	ld	l,$cf                       ; 042E97 || 	ld	l,$8c                       ; 042E54
	ld	l,$ef                       ; 042E99 || 	ld	l,$ac                       ; 042E56
	ld	l,$0f                       ; 042E9B || 	ld	l,$cc                       ; 042E58
	cpl                            ; 042E9D
	ld	hl,($2f562f)                ; 042E9E                                         || 042E9E 2A 2F       7853  			DW	GPIOB_M4	; Interrupt, Dual Edge
	ld	(hl),c                      ; 042EA2                                         || 042EA2 71 2F       7855  			DW	GPIOB_M6	; Interrupt, Active Low
	cpl                            ; 042EA3
	sbc	a,b                        ; 042EA4                                         || 042EA4 98 2F       7856  			DW	GPIOB_M7	; Interrupt, Active High
	cpl                            ; 042EA5
	cp	d                           ; 042EA6                                         || 042EA6 BA 2F       7857  			DW	GPIOB_M8	; Interrupt, Falling Edge
	cpl                            ; 042EA7
	call	c,$78c52f                 ; 042EA8                                         || 042EA8 DC 2F       7858  			DW	GPIOB_M9	; Interrupt, Rising Edge
	cpl                            ; 042EAC || 	cpl                            ; 042E69 || 042EAC 2F          0003M 		CPL
	ld	c,a                         ; 042EAD || 	ld	c,a                         ; 042E6A || 042EAD 4F          0004M 		LD	C, A
	in0	a,($9b)                    ; 042EAE || 	in0	a,($9b)                    ; 042E6B || 042EAE ED 38 9B    0005M 		IN0	A, (reg)
	and	c                          ; 042EB1 || 	and	c                          ; 042E6E || 042EB1 A1          0006M 		AND	C
	out0	($9b),a                   ; 042EB2 || 	out0	($9b),a                   ; 042E6F || 042EB2 ED 39 9B    0007M 		OUT0	(reg), A
	pop	bc                         ; 042EB5 || 	pop	bc                         ; 042E72 || 042EB5 C1          0008M 		POP	BC
	push	bc                        ; 042EB6 || 	push	bc                        ; 042E73 || 042EB6 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042EB7 || 	ld	a,b                         ; 042E74 || 042EB7 78          0002M 		LD	A, val
	cpl                            ; 042EB8 || 	cpl                            ; 042E75 || 042EB8 2F          0003M 		CPL
	ld	c,a                         ; 042EB9 || 	ld	c,a                         ; 042E76 || 042EB9 4F          0004M 		LD	C, A
	in0	a,($9c)                    ; 042EBA || 	in0	a,($9c)                    ; 042E77 || 042EBA ED 38 9C    0005M 		IN0	A, (reg)
	and	c                          ; 042EBD || 	and	c                          ; 042E7A || 042EBD A1          0006M 		AND	C
	out0	($9c),a                   ; 042EBE || 	out0	($9c),a                   ; 042E7B || 042EBE ED 39 9C    0007M 		OUT0	(reg), A
	pop	bc                         ; 042EC1 || 	pop	bc                         ; 042E7E || 042EC1 C1          0008M 		POP	BC
	push	bc                        ; 042EC2 || 	push	bc                        ; 042E7F || 042EC2 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042EC3 || 	ld	a,b                         ; 042E80 || 042EC3 78          0002M 		LD	A, val
	cpl                            ; 042EC4 || 	cpl                            ; 042E81 || 042EC4 2F          0003M 		CPL
	ld	c,a                         ; 042EC5 || 	ld	c,a                         ; 042E82 || 042EC5 4F          0004M 		LD	C, A
	in0	a,($9d)                    ; 042EC6 || 	in0	a,($9d)                    ; 042E83 || 042EC6 ED 38 9D    0005M 		IN0	A, (reg)
	and	c                          ; 042EC9 || 	and	c                          ; 042E86 || 042EC9 A1          0006M 		AND	C
	out0	($9d),a                   ; 042ECA || 	out0	($9d),a                   ; 042E87 || 042ECA ED 39 9D    0007M 		OUT0	(reg), A
	pop	bc                         ; 042ECD || 	pop	bc                         ; 042E8A || 042ECD C1          0008M 		POP	BC
	ret                            ; 042ECE || 	ret                            ; 042E8B || 042ECE C9          7865  			RET
	in0	a,($9b)                    ; 042ECF || 	in0	a,($9b)                    ; 042E8C || 042ECF ED 38 9B    0001M 		IN0	A, (reg)
	or	b                           ; 042ED2 || 	or	b                           ; 042E8F || 042ED2 B0          0002M 		OR	val
	out0	($9b),a                   ; 042ED3 || 	out0	($9b),a                   ; 042E90 || 042ED3 ED 39 9B    0003M 		OUT0	(reg), A
	push	bc                        ; 042ED6 || 	push	bc                        ; 042E67 || 042ED6 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042ED7 || 	ld	a,b                         ; 042E68 || 042ED7 78          0002M 		LD	A, val
	cpl                            ; 042ED8 || 	cpl                            ; 042E69 || 042ED8 2F          0003M 		CPL
	ld	c,a                         ; 042ED9 || 	ld	c,a                         ; 042E6A || 042ED9 4F          0004M 		LD	C, A
	in0	a,($9c)                    ; 042EDA || 	in0	a,($9b)                    ; 042E6B || 042EDA ED 38 9C    0005M 		IN0	A, (reg)
	and	c                          ; 042EDD || 	and	c                          ; 042E6E || 042EDD A1          0006M 		AND	C
	out0	($9c),a                   ; 042EDE || 	out0	($9b),a                   ; 042E6F || 042EDE ED 39 9C    0007M 		OUT0	(reg), A
	pop	bc                         ; 042EE1 || 	pop	bc                         ; 042E72 || 042EE1 C1          0008M 		POP	BC
	push	bc                        ; 042EE2 || 	push	bc                        ; 042E73 || 042EE2 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042EE3 || 	ld	a,b                         ; 042E74 || 042EE3 78          0002M 		LD	A, val
	cpl                            ; 042EE4 || 	cpl                            ; 042E75 || 042EE4 2F          0003M 		CPL
	ld	c,a                         ; 042EE5 || 	ld	c,a                         ; 042E76 || 042EE5 4F          0004M 		LD	C, A
	in0	a,($9d)                    ; 042EE6 || 	in0	a,($9c)                    ; 042E77 || 042EE6 ED 38 9D    0005M 		IN0	A, (reg)
	and	c                          ; 042EE9 || 	and	c                          ; 042E7A || 042EE9 A1          0006M 		AND	C
	out0	($9d),a                   ; 042EEA || 	out0	($9c),a                   ; 042E7B || 042EEA ED 39 9D    0007M 		OUT0	(reg), A
	pop	bc                         ; 042EED || 	pop	bc                         ; 042E7E || 042EED C1          0008M 		POP	BC
	ret                            ; 042EEE || 	ret                            ; 042EAB || 042EEE C9          7872  			RET
	push	bc                        ; 042EEF || 	push	bc                        ; 042EAC || 042EEF C5          0001M 		PUSH	BC
	ld	a,b                         ; 042EF0 || 	ld	a,b                         ; 042EAD || 042EF0 78          0002M 		LD	A, val
	cpl                            ; 042EF1 || 	cpl                            ; 042EAE || 042EF1 2F          0003M 		CPL
	ld	c,a                         ; 042EF2 || 	ld	c,a                         ; 042EAF || 042EF2 4F          0004M 		LD	C, A
	in0	a,($9b)                    ; 042EF3 || 	in0	a,($9b)                    ; 042EB0 || 042EF3 ED 38 9B    0005M 		IN0	A, (reg)
	and	c                          ; 042EF6 || 	and	c                          ; 042EB3 || 042EF6 A1          0006M 		AND	C
	out0	($9b),a                   ; 042EF7 || 	out0	($9b),a                   ; 042EB4 || 042EF7 ED 39 9B    0007M 		OUT0	(reg), A
	pop	bc                         ; 042EFA || 	pop	bc                         ; 042EB7 || 042EFA C1          0008M 		POP	BC
	in0	a,($9c)                    ; 042EFB || 	in0	a,($9c)                    ; 042EB8 || 042EFB ED 38 9C    0001M 		IN0	A, (reg)
	or	b                           ; 042EFE || 	or	b                           ; 042EBB || 042EFE B0          0002M 		OR	val
	out0	($9c),a                   ; 042EFF || 	out0	($9c),a                   ; 042EBC || 042EFF ED 39 9C    0003M 		OUT0	(reg), A
	push	bc                        ; 042F02 || 	push	bc                        ; 042EBF || 042F02 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042F03 || 	ld	a,b                         ; 042EC0 || 042F03 78          0002M 		LD	A, val
	cpl                            ; 042F04 || 	cpl                            ; 042EC1 || 042F04 2F          0003M 		CPL
	ld	c,a                         ; 042F05 || 	ld	c,a                         ; 042EC2 || 042F05 4F          0004M 		LD	C, A
	in0	a,($9d)                    ; 042F06 || 	in0	a,($9d)                    ; 042EC3 || 042F06 ED 38 9D    0005M 		IN0	A, (reg)
	and	c                          ; 042F09 || 	and	c                          ; 042EC6 || 042F09 A1          0006M 		AND	C
	out0	($9d),a                   ; 042F0A || 	out0	($9d),a                   ; 042EC7 || 042F0A ED 39 9D    0007M 		OUT0	(reg), A
	pop	bc                         ; 042F0D || 	pop	bc                         ; 042ECA || 042F0D C1          0008M 		POP	BC
	ret                            ; 042F0E || 	ret                            ; 042ECB || 042F0E C9          7879  			RET
	in0	a,($9b)                    ; 042F0F || 	in0	a,($9b)                    ; 042ECC || 042F0F ED 38 9B    0001M 		IN0	A, (reg)
	or	b                           ; 042F12 || 	or	b                           ; 042ECF || 042F12 B0          0002M 		OR	val
	out0	($9b),a                   ; 042F13 || 	out0	($9b),a                   ; 042ED0 || 042F13 ED 39 9B    0003M 		OUT0	(reg), A
	in0	a,($9c)                    ; 042F16 || 	in0	a,($9c)                    ; 042ED3 || 042F16 ED 38 9C    0001M 		IN0	A, (reg)
	or	b                           ; 042F19 || 	or	b                           ; 042ED6 || 042F19 B0          0002M 		OR	val
	out0	($9c),a                   ; 042F1A || 	out0	($9c),a                   ; 042ED7 || 042F1A ED 39 9C    0003M 		OUT0	(reg), A
	push	bc                        ; 042F1D || 	push	bc                        ; 042EDA || 042F1D C5          0001M 		PUSH	BC
	ld	a,b                         ; 042F1E || 	ld	a,b                         ; 042EDB || 042F1E 78          0002M 		LD	A, val
	cpl                            ; 042F1F || 	cpl                            ; 042EDC || 042F1F 2F          0003M 		CPL
	ld	c,a                         ; 042F20 || 	ld	c,a                         ; 042EDD || 042F20 4F          0004M 		LD	C, A
	in0	a,($9d)                    ; 042F21 || 	in0	a,($9d)                    ; 042EDE || 042F21 ED 38 9D    0005M 		IN0	A, (reg)
	and	c                          ; 042F24 || 	and	c                          ; 042E86 || 042F24 A1          0006M 		AND	C
	out0	($9d),a                   ; 042F25 || 	out0	($9d),a                   ; 042E87 || 042F25 ED 39 9D    0007M 		OUT0	(reg), A
	pop	bc                         ; 042F28 || 	pop	bc                         ; 042E8A || 042F28 C1          0008M 		POP	BC
	ret                            ; 042F29 || 	ret                            ; 042E8B || 042F29 C9          7886  			RET
	in0	a,($9a)                    ; 042F2A || 	in0	a,($9b)                    ; 042E8C || 042F2A ED 38 9A    0001M 		IN0	A, (reg)
	or	b                           ; 042F2D || 	or	b                           ; 042E8F || 042F2D B0          0002M 		OR	val
	out0	($9a),a                   ; 042F2E || 	out0	($9b),a                   ; 042E90 || 042F2E ED 39 9A    0003M 		OUT0	(reg), A
	push	bc                        ; 042F31 || 	push	bc                        ; 042E93 || 042F31 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042F32 || 	ld	a,b                         ; 042E94 || 042F32 78          0002M 		LD	A, val
	cpl                            ; 042F33 || 	cpl                            ; 042E95 || 042F33 2F          0003M 		CPL
	ld	c,a                         ; 042F34 || 	ld	c,a                         ; 042E96 || 042F34 4F          0004M 		LD	C, A
	in0	a,($9b)                    ; 042F35 || 	in0	a,($9c)                    ; 042E97 || 042F35 ED 38 9B    0005M 		IN0	A, (reg)
	and	c                          ; 042F38 || 	and	c                          ; 042E9A || 042F38 A1          0006M 		AND	C
	out0	($9b),a                   ; 042F39 || 	out0	($9c),a                   ; 042E9B || 042F39 ED 39 9B    0007M 		OUT0	(reg), A
	pop	bc                         ; 042F3C || 	pop	bc                         ; 042E9E || 042F3C C1          0008M 		POP	BC
	push	bc                        ; 042F3D || 	push	bc                        ; 042E9F || 042F3D C5          0001M 		PUSH	BC
	ld	a,b                         ; 042F3E || 	ld	a,b                         ; 042E74 || 042F3E 78          0002M 		LD	A, val
	cpl                            ; 042F3F || 	cpl                            ; 042E75 || 042F3F 2F          0003M 		CPL
	ld	c,a                         ; 042F40 || 	ld	c,a                         ; 042E76 || 042F40 4F          0004M 		LD	C, A
	in0	a,($9c)                    ; 042F41 || 	in0	a,($9c)                    ; 042E77 || 042F41 ED 38 9C    0005M 		IN0	A, (reg)
	and	c                          ; 042F44 || 	and	c                          ; 042E7A || 042F44 A1          0006M 		AND	C
	out0	($9c),a                   ; 042F45 || 	out0	($9c),a                   ; 042E7B || 042F45 ED 39 9C    0007M 		OUT0	(reg), A
	pop	bc                         ; 042F48 || 	pop	bc                         ; 042E7E || 042F48 C1          0008M 		POP	BC
	push	bc                        ; 042F49 || 	push	bc                        ; 042E7F || 042F49 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042F4A || 	ld	a,b                         ; 042E80 || 042F4A 78          0002M 		LD	A, val
	cpl                            ; 042F4B || 	cpl                            ; 042E81 || 042F4B 2F          0003M 		CPL
	ld	c,a                         ; 042F4C || 	ld	c,a                         ; 042E82 || 042F4C 4F          0004M 		LD	C, A
	in0	a,($9d)                    ; 042F4D || 	in0	a,($9d)                    ; 042E83 || 042F4D ED 38 9D    0005M 		IN0	A, (reg)
	and	c                          ; 042F50 || 	and	c                          ; 042E86 || 042F50 A1          0006M 		AND	C
	out0	($9d),a                   ; 042F51 || 	out0	($9d),a                   ; 042E87 || 042F51 ED 39 9D    0007M 		OUT0	(reg), A
	pop	bc                         ; 042F54 || 	pop	bc                         ; 042E8A || 042F54 C1          0008M 		POP	BC
	ret                            ; 042F55 || 	ret                            ; 042E8B || 042F55 C9          7894  			RET
	in0	a,($9b)                    ; 042F56 || 	in0	a,($9b)                    ; 042F13 || 042F56 ED 38 9B    0001M 		IN0	A, (reg)
	or	b                           ; 042F59 || 	or	b                           ; 042F16 || 042F59 B0          0002M 		OR	val
	out0	($9b),a                   ; 042F5A || 	out0	($9b),a                   ; 042F17 || 042F5A ED 39 9B    0003M 		OUT0	(reg), A
	push	bc                        ; 042F5D || 	push	bc                        ; 042F1A || 042F5D C5          0001M 		PUSH	BC
	ld	a,b                         ; 042F5E || 	ld	a,b                         ; 042F1B || 042F5E 78          0002M 		LD	A, val
	cpl                            ; 042F5F || 	cpl                            ; 042F1C || 042F5F 2F          0003M 		CPL
	ld	c,a                         ; 042F60 || 	ld	c,a                         ; 042F1D || 042F60 4F          0004M 		LD	C, A
	in0	a,($9c)                    ; 042F61 || 	in0	a,($9c)                    ; 042F1E || 042F61 ED 38 9C    0005M 		IN0	A, (reg)
	and	c                          ; 042F64 || 	and	c                          ; 042F21 || 042F64 A1          0006M 		AND	C
	out0	($9c),a                   ; 042F65 || 	out0	($9c),a                   ; 042F22 || 042F65 ED 39 9C    0007M 		OUT0	(reg), A
	pop	bc                         ; 042F68 || 	pop	bc                         ; 042F25 || 042F68 C1          0008M 		POP	BC
	in0	a,($9d)                    ; 042F69 || 	in0	a,($9d)                    ; 042F26 || 042F69 ED 38 9D    0001M 		IN0	A, (reg)
	or	b                           ; 042F6C || 	or	b                           ; 042F29 || 042F6C B0          0002M 		OR	val
	out0	($9d),a                   ; 042F6D || 	out0	($9d),a                   ; 042F2A || 042F6D ED 39 9D    0003M 		OUT0	(reg), A
	ret                            ; 042F70 || 	ret                            ; 042F2D || 042F70 C9          7901  			RET
	push	bc                        ; 042F71 || 	push	bc                        ; 042F2E || 042F71 C5          0001M 		PUSH	BC
	ld	a,b                         ; 042F72 || 	ld	a,b                         ; 042F2F || 042F72 78          0002M 		LD	A, val
	cpl                            ; 042F73 || 	cpl                            ; 042F30 || 042F73 2F          0003M 		CPL
	ld	c,a                         ; 042F74 || 	ld	c,a                         ; 042F31 || 042F74 4F          0004M 		LD	C, A
	in0	a,($9a)                    ; 042F75 || 	in0	a,($9a)                    ; 042F32 || 042F75 ED 38 9A    0005M 		IN0	A, (reg)
	and	c                          ; 042F78 || 	and	c                          ; 042F35 || 042F78 A1          0006M 		AND	C
	out0	($9a),a                   ; 042F79 || 	out0	($9a),a                   ; 042F36 || 042F79 ED 39 9A    0007M 		OUT0	(reg), A
	pop	bc                         ; 042F7C || 	pop	bc                         ; 042F39 || 042F7C C1          0008M 		POP	BC
	push	bc                        ; 042F7D || 	push	bc                        ; 042F3A || 042F7D C5          0001M 		PUSH	BC
	ld	a,b                         ; 042F7E || 	ld	a,b                         ; 042F3B || 042F7E 78          0002M 		LD	A, val
	cpl                            ; 042F7F || 	cpl                            ; 042F3C || 042F7F 2F          0003M 		CPL
	ld	c,a                         ; 042F80 || 	ld	c,a                         ; 042F3D || 042F80 4F          0004M 		LD	C, A
	in0	a,($9b)                    ; 042F81 || 	in0	a,($9b)                    ; 042F3E || 042F81 ED 38 9B    0005M 		IN0	A, (reg)
	and	c                          ; 042F84 || 	and	c                          ; 042F41 || 042F84 A1          0006M 		AND	C
	out0	($9b),a                   ; 042F85 || 	out0	($9b),a                   ; 042F42 || 042F85 ED 39 9B    0007M 		OUT0	(reg), A
	pop	bc                         ; 042F88 || 	pop	bc                         ; 042F45 || 042F88 C1          0008M 		POP	BC
	in0	a,($9c)                    ; 042F89 || 	in0	a,($9c)                    ; 042F46 || 042F89 ED 38 9C    0001M 		IN0	A, (reg)
	or	b                           ; 042F8C || 	or	b                           ; 042F49 || 042F8C B0          0002M 		OR	val
	out0	($9c),a                   ; 042F8D || 	out0	($9c),a                   ; 042F4A || 042F8D ED 39 9C    0003M 		OUT0	(reg), A
	in0	a,($9d)                    ; 042F90 || 	in0	a,($9d)                    ; 042F4D || 042F90 ED 38 9D    0001M 		IN0	A, (reg)
	or	b                           ; 042F93 || 	or	b                           ; 042F50 || 042F93 B0          0002M 		OR	val
	out0	($9d),a                   ; 042F94 || 	out0	($9d),a                   ; 042F51 || 042F94 ED 39 9D    0003M 		OUT0	(reg), A
	ret                            ; 042F97 || 	ret                            ; 042F54 || 042F97 C9          7909  			RET
	in0	a,($9a)                    ; 042F98 || 	in0	a,($9a)                    ; 042F55 || 042F98 ED 38 9A    0001M 		IN0	A, (reg)
	or	b                           ; 042F9B || 	or	b                           ; 042F58 || 042F9B B0          0002M 		OR	val
	out0	($9a),a                   ; 042F9C || 	out0	($9a),a                   ; 042F59 || 042F9C ED 39 9A    0003M 		OUT0	(reg), A
	push	bc                        ; 042F9F || 	push	bc                        ; 042F5C || 042F9F C5          0001M 		PUSH	BC
	ld	a,b                         ; 042FA0 || 	ld	a,b                         ; 042F5D || 042FA0 78          0002M 		LD	A, val
	cpl                            ; 042FA1 || 	cpl                            ; 042F5E || 042FA1 2F          0003M 		CPL
	ld	c,a                         ; 042FA2 || 	ld	c,a                         ; 042F5F || 042FA2 4F          0004M 		LD	C, A
	in0	a,($9b)                    ; 042FA3 || 	in0	a,($9b)                    ; 042F60 || 042FA3 ED 38 9B    0005M 		IN0	A, (reg)
	and	c                          ; 042FA6 || 	and	c                          ; 042F63 || 042FA6 A1          0006M 		AND	C
	out0	($9b),a                   ; 042FA7 || 	out0	($9b),a                   ; 042F64 || 042FA7 ED 39 9B    0007M 		OUT0	(reg), A
	pop	bc                         ; 042FAA || 	pop	bc                         ; 042F67 || 042FAA C1          0008M 		POP	BC
	in0	a,($9c)                    ; 042FAB || 	in0	a,($9c)                    ; 042F68 || 042FAB ED 38 9C    0001M 		IN0	A, (reg)
	or	b                           ; 042FAE || 	or	b                           ; 042F6B || 042FAE B0          0002M 		OR	val
	out0	($9c),a                   ; 042FAF || 	out0	($9c),a                   ; 042F6C || 042FAF ED 39 9C    0003M 		OUT0	(reg), A
	in0	a,($9d)                    ; 042FB2 || 	in0	a,($9d)                    ; 042F6F || 042FB2 ED 38 9D    0001M 		IN0	A, (reg)
	or	b                           ; 042FB5 || 	or	b                           ; 042F72 || 042FB5 B0          0002M 		OR	val
	out0	($9d),a                   ; 042FB6 || 	out0	($9d),a                   ; 042F73 || 042FB6 ED 39 9D    0003M 		OUT0	(reg), A
	ret                            ; 042FB9 || 	ret                            ; 042F76 || 042FB9 C9          7918  			RET
	push	bc                        ; 042FBA || 	push	bc                        ; 042F77 || 042FBA C5          0001M 		PUSH	BC
	ld	a,b                         ; 042FBB || 	ld	a,b                         ; 042F78 || 042FBB 78          0002M 		LD	A, val
	cpl                            ; 042FBC || 	cpl                            ; 042F79 || 042FBC 2F          0003M 		CPL
	ld	c,a                         ; 042FBD || 	ld	c,a                         ; 042F7A || 042FBD 4F          0004M 		LD	C, A
	in0	a,($9a)                    ; 042FBE || 	in0	a,($9a)                    ; 042F7B || 042FBE ED 38 9A    0005M 		IN0	A, (reg)
	and	c                          ; 042FC1 || 	and	c                          ; 042F7E || 042FC1 A1          0006M 		AND	C
	out0	($9a),a                   ; 042FC2 || 	out0	($9a),a                   ; 042F7F || 042FC2 ED 39 9A    0007M 		OUT0	(reg), A
	pop	bc                         ; 042FC5 || 	pop	bc                         ; 042F82 || 042FC5 C1          0008M 		POP	BC
	in0	a,($9b)                    ; 042FC6 || 	in0	a,($9b)                    ; 042F83 || 042FC6 ED 38 9B    0001M 		IN0	A, (reg)
	or	b                           ; 042FC9 || 	or	b                           ; 042F86 || 042FC9 B0          0002M 		OR	val
	out0	($9b),a                   ; 042FCA || 	out0	($9b),a                   ; 042F87 || 042FCA ED 39 9B    0003M 		OUT0	(reg), A
	in0	a,($9c)                    ; 042FCD || 	in0	a,($9c)                    ; 042F8A || 042FCD ED 38 9C    0001M 		IN0	A, (reg)
	or	b                           ; 042FD0 || 	or	b                           ; 042F8D || 042FD0 B0          0002M 		OR	val
	out0	($9c),a                   ; 042FD1 || 	out0	($9c),a                   ; 042F8E || 042FD1 ED 39 9C    0003M 		OUT0	(reg), A
	in0	a,($9d)                    ; 042FD4 || 	in0	a,($9d)                    ; 042F91 || 042FD4 ED 38 9D    0001M 		IN0	A, (reg)
	or	b                           ; 042FD7 || 	or	b                           ; 042F94 || 042FD7 B0          0002M 		OR	val
	out0	($9d),a                   ; 042FD8 || 	out0	($9d),a                   ; 042F95 || 042FD8 ED 39 9D    0003M 		OUT0	(reg), A
	ret                            ; 042FDB || 	ret                            ; 042F98 || 042FDB C9          7927  			RET
	in0	a,($9a)                    ; 042FDC || 	in0	a,($9a)                    ; 042F99 || 042FDC ED 38 9A    0001M 		IN0	A, (reg)
	or	b                           ; 042FDF || 	or	b                           ; 042F9C || 042FDF B0          0002M 		OR	val
	out0	($9a),a                   ; 042FE0 || 	out0	($9a),a                   ; 042F9D || 042FE0 ED 39 9A    0003M 		OUT0	(reg), A
	in0	a,($9b)                    ; 042FE3 || 	in0	a,($9b)                    ; 042FA0 || 042FE3 ED 38 9B    0001M 		IN0	A, (reg)
	or	b                           ; 042FE6 || 	or	b                           ; 042FA3 || 042FE6 B0          0002M 		OR	val
	out0	($9b),a                   ; 042FE7 || 	out0	($9b),a                   ; 042FA4 || 042FE7 ED 39 9B    0003M 		OUT0	(reg), A
	in0	a,($9c)                    ; 042FEA || 	in0	a,($9c)                    ; 042FA7 || 042FEA ED 38 9C    0001M 		IN0	A, (reg)
	or	b                           ; 042FED || 	or	b                           ; 042FAA || 042FED B0          0002M 		OR	val
	out0	($9c),a                   ; 042FEE || 	out0	($9c),a                   ; 042FAB || 042FEE ED 39 9C    0003M 		OUT0	(reg), A
	in0	a,($9d)                    ; 042FF1 || 	in0	a,($9d)                    ; 042FAE || 042FF1 ED 38 9D    0001M 		IN0	A, (reg)
	or	b                           ; 042FF4 || 	or	b                           ; 042FB1 || 042FF4 B0          0002M 		OR	val
	out0	($9d),a                   ; 042FF5 || 	out0	($9d),a                   ; 042FB2 || 042FF5 ED 39 9D    0003M 		OUT0	(reg), A
	ret                            ; 042FF8 || 	ret                            ; 042FB5 || 042FF8 C9          7935  			RET	; --- End gpio.asm ---
	ld	hl,$044a00                  ; 042FF9 || 	ld	hl,$044a00                  ; 042FB6 || 042FF9 21 00 4A 04 8085  _main:			LD	HL, ACCS		; Clear the ACCS
	ld	(hl),$00                    ; 042FFD || 	ld	(hl),$00                    ; 042FBA || 042FFD 36 00       8086  			LD	(HL), 0
	ld	a,c                         ; 042FFF || 	ld	a,c                         ; 042FBC || 042FFF 79          8087  			LD	A, C
	cp	$02                         ; 043000 || 	cp	$02                         ; 042FBD || 043000 FE 02       8088  			CP	2
	jr	z,$+$2f                     ; 043002 || 	jr	z,$+$2f                     ; 042FBF || 043002 28 2D       8089  			JR	Z, AUTOLOAD		; 2 parameters = autoload
	jr	c,$+$41                     ; 043004 || 	jr	c,$+$41                     ; 042FC1 || 043004 38 3F       8090  			JR	C, COLD			; 1 parameter = normal start
	call	$0440aa                   ; 043006 || 	call	$044038                   ; 042FC3 || 043006 CD AA 40 04 8091  			CALL	STAR_VERSION
	call	$043df1                   ; 04300A || 	call	$043d90                   ; 042FC7 || 04300A CD F1 3D 04 8092  			CALL	TELL
	ld	d,l                         ; 04300E || 	ld	d,l                         ; 042FCB || 04300E 55 73 61 67 8093  			DB	"Usage:\n\r"
	ld	(hl),e                      ; 04300F || 	ld	(hl),e                      ; 042FCC
	ld	h,c                         ; 043010 || 	ld	h,c                         ; 042FCD
	ld	h,a                         ; 043011 || 	ld	h,a                         ; 042FCE
	ld	h,l                         ; 043012 || 	ld	h,l                         ; 042FCF
	ld	a,($520d0a)                 ; 043013 || 	ld	a,($520d0a)                 ; 042FD0
	ld	d,l                         ; 043017 || 	ld	d,l                         ; 042FD4
	ld	c,(hl)                      ; 043018 || 	ld	c,(hl)                      ; 042FD5
	jr	nz,$+$30                    ; 043019 || 	jr	nz,$+$30                    ; 042FD6
	jr	nz,$+$3e                    ; 04301B || 	jr	nz,$+$3e                    ; 042FD8
	ld	h,(hl)                      ; 04301D || 	ld	h,(hl)                      ; 042FDA
	ld	l,c                         ; 04301E || 	ld	l,c                         ; 042FDB
	ld	l,h                         ; 04301F || 	ld	l,h                         ; 042FDC
	ld	h,l                         ; 043020 || 	ld	h,l                         ; 042FDD
	ld	l,(hl)                      ; 043021 || 	ld	l,(hl)                      ; 042FDE
	ld	h,c                         ; 043022 || 	ld	h,c                         ; 042FDF
	ld	l,l                         ; 043023 || 	ld	l,l                         ; 042FE0
	ld	h,l                         ; 043024 || 	ld	h,l                         ; 042FE1
	ld	a,$0a                       ; 043025 || 	ld	a,$0a                       ; 042FE2
	dec	c                          ; 043027 || 	dec	c                          ; 042FE4
	nop                            ; 043028 || 	nop                            ; 042FE5
	ld	hl,$000000                  ; 043029 || 	ld	hl,$000000                  ; 042FE6 || 043029 21 00 00 00 8095  			LD	HL, 0			; The error code
	jp	$040068                     ; 04302D || 	jp	$040068                     ; 042FEA || 04302D C3 68 00 04 8096  			JP	_end
	ld	hl,(ix+$03)                 ; 043031 || 	ld	hl,(ix+$03)                 ; 042FEE || 043031 DD 27 03    8098  AUTOLOAD:		LD	HL, (IX+3)		; HLU: Address of filename
	ld	de,$044a00                  ; 043034 || 	ld	de,$044a00                  ; 042FF1 || 043034 11 00 4A 04 8099  			LD	DE, ACCS		;  DE: Destination address
	ld	a,(hl)                      ; 043038 || 	ld	a,(hl)                      ; 042FF5 || 043038 7E          8100  AUTOLOAD_1:		LD	A, (HL)			; Fetch the filename byte
	ld	(de),a                      ; 043039 || 	ld	(de),a                      ; 042FF6 || 043039 12          8101  			LD	(DE), A			;
	inc	hl                         ; 04303A || 	inc	hl                         ; 042FF7 || 04303A 23          8102  			INC	HL			; Increase the source pointer
	inc	e                          ; 04303B || 	inc	e                          ; 042FF8 || 04303B 1C          8103  			INC	E			; We only need to increase E as ACCS is on a page boundary
	jr	z,$+$05                     ; 04303C || 	jr	z,$+$05                     ; 042FF9 || 04303C 28 03       8104  			JR	Z, AUTOLOAD_2		; End if we hit the page boundary
	or	a                           ; 04303E || 	or	a                           ; 042FFB || 04303E B7          8105  			OR	A
	jr	nz,$-$07                    ; 04303F || 	jr	nz,$-$07                    ; 042FFC || 04303F 20 F7       8106  			JR	NZ, AUTOLOAD_1		; Loop until we hit a 0 byte
	dec	e                          ; 043041 || 	dec	e                          ; 042FFE || 043041 1D          8107  AUTOLOAD_2:		DEC	E
	ld	a,$0d                       ; 043042 || 	ld	a,$0d                       ; 042FFF || 043042 3E 0D       8108  			LD	A, CR
	ld	(de),a                      ; 043044 || 	ld	(de),a                      ; 043001 || 043044 12          8109  			LD	(DE), A			; Replace the 0 byte with a CR for BBC BASIC
	pop	hl                         ; 043045 || 	pop	hl                         ; 043002 || 043045 E1          8111  COLD:			POP	HL			; Pop the return address to init off SPS
	push	hl                        ; 043046 || 	push	hl                        ; 043003 || 043046 E5          8112  			PUSH	HL 			; Stack it on SPL (*BYE will use this as the return address)
	ld	hl,$044c00                  ; 043047 || 	ld	hl,$044c00                  ; 043004 || 043047 21 00 4C 04 8113  			LD	HL, STAVAR		; Cold start
	ld	sp,hl                       ; 04304B || 	ld	sp,hl                       ; 043008 || 04304B F9          8114  			LD	SP, HL
	ld	(hl),$0a                    ; 04304C || 	ld	(hl),$0a                    ; 043009 || 04304C 36 0A       8115  			LD	(HL), 10
	inc	hl                         ; 04304E || 	inc	hl                         ; 04300B || 04304E 23          8116  			INC	HL
	ld	(hl),$09                    ; 04304F || 	ld	(hl),$09                    ; 04300C || 04304F 36 09       8117  			LD	(HL),9
	call	$043fe2                   ; 043051 || 	call	$043f81                   ; 04300E || 043051 CD E2 3F 04 8118  			CALL    OSINIT			; Call the machine specific OS initialisation routines
	ld	($044d20),de                ; 043055 || 	ld	($044d20),de                ; 043012 || 043055 ED 53 20 4D 8119  			LD      (HIMEM),DE		; This returns HIMEM (ramtop) in DE - store in the HIMEM sysvar
	ld	($044d14),hl                ; 04305A || 	ld	($044d14),hl                ; 043017 || 04305A 22 14 4D 04 8120  			LD      (PAGE_),HL		; And PAGE in HL (where BASIC program storage starts) - store in PAGE sysvar
	ld	a,$b7                       ; 04305E || 	ld	a,$b7                       ; 04301B || 04305E 3E B7       8121  			LD      A,B7H           	; Set LISTO sysvar; the bottom nibble is LISTO (7), top nibble is OPT (B)
	ld	($044d40),a                 ; 043060 || 	ld	($044d40),a                 ; 04301D || 043060 32 40 4D 04 8122  			LD      (LISTON),A
	ld	hl,$0430bd                  ; 043064 || 	ld	hl,$04305c                  ; 043021 || 043064 21 BD 30 04 8123  			LD      HL,NOTICE
	ld	($044d2f),hl                ; 043068 || 	ld	($044d2f),hl                ; 043025 || 043068 22 2F 4D 04 8124  			LD      (ERRTXT),HL
	call	$0438cd                   ; 04306C || 	call	$04386c                   ; 043029 || 04306C CD CD 38 04 8125  			CALL    NEWIT			; From what I can determine, NEWIT always returns with Z flag set
	ld	a,($044a00)                 ; 043070 || 	ld	a,($044a00)                 ; 04302D || 043070 3A 00 4A 04 8126  			LD	A,(ACCS)		; Check if there is a filename in ACCS
	or	a                           ; 043074 || 	or	a                           ; 043031 || 043074 B7          8127  			OR	A
	jp	nz,$040b66                  ; 043075 || 	jp	nz,$040b53                  ; 043032 || 043075 C2 66 0B 04 8128  			JP	NZ,CHAIN0		; Yes, so load and run
	call	$0440aa                   ; 043079 || 	call	$044038                   ; 043036 || 043079 CD AA 40 04 8129  			CALL	STAR_VERSION		;
	call	$043df1                   ; 04307D || 	call	$043d90                   ; 04303A || 04307D CD F1 3D 04 8130  			CALL    TELL			; Output the welcome message
	ld	b,d                         ; 043081 || 	ld	b,d                         ; 04303E || 043081 42 42 43 20 8131  			DB    	"BBC BASIC (Z80) Version 3.00\n\r"
	ld	b,d                         ; 043082 || 	ld	b,d                         ; 04303F
	ld	b,e                         ; 043083 || 	ld	b,e                         ; 043040
	jr	nz,$+$44                    ; 043084 || 	jr	nz,$+$44                    ; 043041
	ld	b,c                         ; 043086 || 	ld	b,c                         ; 043043
	ld	d,e                         ; 043087 || 	ld	d,e                         ; 043044
	ld.lis	b,e                     ; 043088 || 	ld.lis	b,e                     ; 043045
	jr	nz,$+$2a                    ; 04308A || 	jr	nz,$+$2a                    ; 043047
	ld	e,d                         ; 04308C || 	ld	e,d                         ; 043049
	jr	c,$+$32                     ; 04308D || 	jr	c,$+$32                     ; 04304A
	add	hl,hl                      ; 04308F || 	add	hl,hl                      ; 04304C
	jr	nz,$+$58                    ; 043090 || 	jr	nz,$+$58                    ; 04304D
	ld	h,l                         ; 043092 || 	ld	h,l                         ; 04304F
	ld	(hl),d                      ; 043093 || 	ld	(hl),d                      ; 043050
	ld	(hl),e                      ; 043094 || 	ld	(hl),e                      ; 043051
	ld	l,c                         ; 043095 || 	ld	l,c                         ; 043052
	ld	l,a                         ; 043096 || 	ld	l,a                         ; 043053
	ld	l,(hl)                      ; 043097 || 	ld	l,(hl)                      ; 043054
	jr	nz,$+$35                    ; 043098 || 	jr	nz,$+$35                    ; 043055
	ld	l,$30                       ; 04309A || 	ld	l,$30                       ; 043057
	jr	nc,$+$0c                    ; 04309C || 	jr	nc,$+$0c                    ; 043059
	dec	c                          ; 04309E || 	dec	c                          ; 04305B
	ld	b,l                         ; 04309F                                         || 04309F 45 5A 38 30 8132  			db      "EZ80ASM ADL Version 0.01beta\n\r"
	ld	e,d                         ; 0430A0
	jr	c,$+$32                     ; 0430A1
	ld	b,c                         ; 0430A3
	ld	d,e                         ; 0430A4
	ld	c,l                         ; 0430A5
	jr	nz,$+$43                    ; 0430A6
	ld	b,h                         ; 0430A8
	ld	c,h                         ; 0430A9
	jr	nz,$+$58                    ; 0430AA
	ld	h,l                         ; 0430AC
	ld	(hl),d                      ; 0430AD
	ld	(hl),e                      ; 0430AE
	ld	l,c                         ; 0430AF
	ld	l,a                         ; 0430B0
	ld	l,(hl)                      ; 0430B1
	jr	nz,$+$32                    ; 0430B2
	ld	l,$30                       ; 0430B4
	ld	sp,$746562                  ; 0430B6
	ld	h,c                         ; 0430BA
	ld	a,(bc)                      ; 0430BB
	dec	c                          ; 0430BC || 	dec	c                          ; 04305B
	jr	z,$+$45                     ; 0430BD || 	jr	z,$+$45                     ; 04305C || 0430BD 28 43 29 20 8133  NOTICE:			DB    	"(C) Copyright R.T.Russell 1987\n\r"
	add	hl,hl                      ; 0430BF || 	add	hl,hl                      ; 04305E
	jr	nz,$+$45                    ; 0430C0 || 	jr	nz,$+$45                    ; 04305F
	ld	l,a                         ; 0430C2 || 	ld	l,a                         ; 043061
	ld	(hl),b                      ; 0430C3 || 	ld	(hl),b                      ; 043062
	ld	a,c                         ; 0430C4 || 	ld	a,c                         ; 043063
	ld	(hl),d                      ; 0430C5 || 	ld	(hl),d                      ; 043064
	ld	l,c                         ; 0430C6 || 	ld	l,c                         ; 043065
	ld	h,a                         ; 0430C7 || 	ld	h,a                         ; 043066
	ld	l,b                         ; 0430C8 || 	ld	l,b                         ; 043067
	ld	(hl),h                      ; 0430C9 || 	ld	(hl),h                      ; 043068
	jr	nz,$+$54                    ; 0430CA || 	jr	nz,$+$54                    ; 043069
	ld	l,$54                       ; 0430CC || 	ld	l,$54                       ; 04306B
	ld	l,$52                       ; 0430CE || 	ld	l,$52                       ; 04306D
	ld	(hl),l                      ; 0430D0 || 	ld	(hl),l                      ; 04306F
	ld	(hl),e                      ; 0430D1 || 	ld	(hl),e                      ; 043070
	ld	(hl),e                      ; 0430D2 || 	ld	(hl),e                      ; 043071
	ld	h,l                         ; 0430D3 || 	ld	h,l                         ; 043072
	ld	l,h                         ; 0430D4 || 	ld	l,h                         ; 043073
	ld	l,h                         ; 0430D5 || 	ld	l,h                         ; 043074
	jr	nz,$+$33                    ; 0430D6 || 	jr	nz,$+$33                    ; 043075
	add	hl,sp                      ; 0430D8 || 	add	hl,sp                      ; 043077
	jr	c,$+$39                     ; 0430D9 || 	jr	c,$+$39                     ; 043078
	ld	a,(bc)                      ; 0430DB || 	ld	a,(bc)                      ; 04307A
	dec	c                          ; 0430DC || 	dec	c                          ; 04307B
	ld	a,(bc)                      ; 0430DD || 	ld	a,(bc)                      ; 04307C || 0430DD 0A 0D 00    8134  			DB	"\n\r", 0
	dec	c                          ; 0430DE || 	dec	c                          ; 04307D
	nop                            ; 0430DF || 	nop                            ; 04307E
	or	$37                         ; 0430E0 || 	or	$37                         ; 04307F || 0430E0 F6          8136  WARM:			DB 	F6H			; Opcode for OR? Maybe to CCF (the following SCF will be the operand)
	ld	sp,($044d20)                ; 0430E2 || 	ld	sp,($044d20)                ; 043081 || 0430E2 ED 7B 20 4D 8141  			LD      SP,(HIMEM)
	call	$043f5b                   ; 0430E7 || 	call	$043efa                   ; 043086 || 0430E7 CD 5B 3F 04 8142  			CALL    PROMPT          	; Prompt user
	ld	hl,$044d40                  ; 0430EB || 	ld	hl,$044d40                  ; 04308A || 0430EB 21 40 4D 04 8143  			LD      HL,LISTON		; Pointer to the LISTO/OPT sysvar
	ld	a,(hl)                      ; 0430EF || 	ld	a,(hl)                      ; 04308E || 0430EF 7E          8144  			LD      A,(HL)			; Fetch the value
	and	$0f                        ; 0430F0 || 	and	$0f                        ; 04308F || 0430F0 E6 0F       8145  			AND     0FH             	; Bottom nibble: LISTO
	or	$b0                         ; 0430F2 || 	or	$b0                         ; 043091 || 0430F2 F6 B0       8146  			OR      B0H             	; Top nibble: Default to OPT (3) with ADL mode bit set to 1 for assembler
	ld	(hl),a                      ; 0430F4 || 	ld	(hl),a                      ; 043093 || 0430F4 77          8147  			LD      (HL),A			; Store back in
	sbc	hl,hl                      ; 0430F5 || 	sbc	hl,hl                      ; 043094 || 0430F5 ED 62       8148  			SBC     HL,HL           	; HL: 0
	ld	($044d2c),hl                ; 0430F7 || 	ld	($044d2c),hl                ; 043096 || 0430F7 22 2C 4D 04 8149  			LD      (ERRTRP),HL		; Clear ERRTRP sysvar
	ld	($044d35),hl                ; 0430FB || 	ld	($044d35),hl                ; 04309A || 0430FB 22 35 4D 04 8150  			LD      (ERRLIN),HL		; Clear ERRLIN sysvar (ON ERROR)
	ld	hl,($044d29)                ; 0430FF || 	ld	hl,($044d29)                ; 04309E || 0430FF 2A 29 4D 04 8152  			LD      HL,(AUTONO)		; Get the auto line number
	ld	($044d23),hl                ; 043103 || 	ld	($044d23),hl                ; 0430A2 || 043103 22 23 4D 04 8153  			LD      (LINENO),HL		; Store in line number
	ld	a,h                         ; 043107 || 	ld	a,h                         ; 0430A6 || 043107 7C          8154  			LD      A,H			; If the auto line number is zero then
	or	l                           ; 043108 || 	or	l                           ; 0430A7 || 043108 B5          8155  			OR      L
	jr	z,$+$20                     ; 043109 || 	jr	z,$+$20                     ; 0430A8 || 043109 28 1E       8156  			JR      Z,NOAUTO		; We're not auto line numbering, so skip the next bit
	push	hl                        ; 04310B || 	push	hl                        ; 0430AA || 04310B E5          8160  			PUSH    HL			; Stack the line number
	call	$043a5c                   ; 04310C || 	call	$0439fb                   ; 0430AB || 04310C CD 5C 3A 04 8161  			CALL    PBCD           	 	; Output the line number
	pop	hl                         ; 043110 || 	pop	hl                         ; 0430AF || 043110 E1          8162  			POP     HL			; Pop the line number back off the stack
	ld	bc,$000000                  ; 043111 || 	ld	bc,$000000                  ; 0430B0 || 043111 01 00 00 00 8165  			LD	BC, 0			; Load BC with Increment
	ld	a,($044d41)                 ; 043115 || 	ld	a,($044d41)                 ; 0430B4 || 043115 3A 41 4D 04 8166  			LD	A,(INCREM)
	ld	c,a                         ; 043119 || 	ld	c,a                         ; 0430B8 || 043119 4F          8167  			LD	C, A
	add	hl,bc                      ; 04311A || 	add	hl,bc                      ; 0430B9 || 04311A 09          8168  			ADD     HL,BC			; Add the increment to the line number
	jp	c,$043c86                   ; 04311B || 	jp	c,$043c25                   ; 0430BA || 04311B DA 86 3C 04 8169  			JP      C,TOOBIG		; And error if we wrap
	ld	($044d29),hl                ; 04311F || 	ld	($044d29),hl                ; 0430BE || 04311F 22 29 4D 04 8170  			LD      (AUTONO),HL		; Store the new auto line number
	ld	a,$20                       ; 043123 || 	ld	a,$20                       ; 0430C2 || 043123 3E 20       8171  			LD      A,' '			; Print a space
	call	$0439b0                   ; 043125 || 	call	$04394f                   ; 0430C4 || 043125 CD B0 39 04 8172  			CALL    OUTCHR
	ld	hl,$044a00                  ; 043129 || 	ld	hl,$044a00                  ; 0430C8 || 043129 21 00 4A 04 8176  NOAUTO:			LD      HL,ACCS			; Storage for the line editor (256 bytes)
	call	$043ec0                   ; 04312D || 	call	$043e5f                   ; 0430CC || 04312D CD C0 3E 04 8177  			CALL    OSLINE          	; Call the line editor in MOS
	call	$04313d                   ; 043131 || 	call	$0430dc                   ; 0430D0 || 043131 CD 3D 31 04 8178  ONEDIT:			CALL	ONEDIT1			; Enter the line into memory
	call	c,$0438a0                 ; 043135 || 	call	c,$04383f                 ; 0430D4 || 043135 DC A0 38 04 8179  			CALL    C,CLEAN			; Set TOP, write out &FFFF end of program marker
	jp	$0430e1                     ; 043139 || 	jp	$043080                     ; 0430D8 || 043139 C3 E1 30 04 8180  			JP      CLOOP			; Jump back to immediate mode
	xor	a                          ; 04313D || 	xor	a                          ; 0430DC || 04313D AF          8187  ONEDIT1:		XOR     A			; Entry point after *EDIT
	ld	($044d3d),a                 ; 04313E || 	ld	($044d3d),a                 ; 0430DD || 04313E 32 3D 4D 04 8188  			LD      (COUNT),A
	ld	iy,$044a00                  ; 043142 || 	ld	iy,$044a00                  ; 0430E1 || 043142 FD 21 00 4A 8189  			LD      IY,ACCS
	call	$043c5a                   ; 043147 || 	call	$043bf9                   ; 0430E6 || 043147 CD 5A 3C 04 8190  			CALL    LINNUM			; HL: The line number from the input buffer
	call	$040a83                   ; 04314B || 	call	$040a70                   ; 0430EA || 04314B CD 83 0A 04 8191  			CALL    NXT			; Skip spaces
	ld	a,h                         ; 04314F || 	ld	a,h                         ; 0430EE || 04314F 7C          8192  			LD      A,H			; HL: The line number will be 0 for immediate mode or when auto line numbering is used
	or	l                           ; 043150 || 	or	l                           ; 0430EF || 043150 B5          8193  			OR      L
	jr	z,$+$06                     ; 043151 || 	jr	z,$+$06                     ; 0430F0 || 043151 28 04       8194  			JR      Z,LNZERO        	; Skip if there is no line number in the input buffer
	ld	($044d23),hl                ; 043153 || 	ld	($044d23),hl                ; 0430F2 || 043153 22 23 4D 04 8195  			LD      (LINENO),HL		; Otherwise store it
	ld	c,$01                       ; 043157 || 	ld	c,$01                       ; 0430F6 || 043157 0E 01       8199  LNZERO:			LD	C,1			; Left mode
	ld	de,$044b00                  ; 043159 || 	ld	de,$044b00                  ; 0430F8 || 043159 11 00 4B 04 8200  			LD      DE,BUFFER		; Buffer for tokenised BASIC
	call	$043d00                   ; 04315D || 	call	$043c9f                   ; 0430FC || 04315D CD 00 3D 04 8201  			CALL    LEXAN2          	; Lexical analysis on the user input
	ld	(de),a                      ; 043161 || 	ld	(de),a                      ; 043100 || 043161 12          8202  			LD      (DE),A          	; Terminator
	xor	a                          ; 043162 || 	xor	a                          ; 043101 || 043162 AF          8203  			XOR     A
	ld	bc,$000000                  ; 043163 || 	ld	bc,$000000                  ; 043102 || 043163 01 00 00 00 8206  			LD	BC,0
	ld	c,e                         ; 043167 || 	ld	c,e                         ; 043106 || 043167 4B          8207  			LD	C,E			; BC: Line length
	inc	de                         ; 043168 || 	inc	de                         ; 043107 || 043168 13          8208  			INC     DE
	ld	(de),a                      ; 043169 || 	ld	(de),a                      ; 043108 || 043169 12          8209  			LD      (DE),A          	; Zero next
	ld	hl,($044d23)                ; 04316A || 	ld	hl,($044d23)                ; 043109 || 04316A 2A 23 4D 04 8210  			LD      HL,(LINENO)		; Get the line number
	ld	a,h                         ; 04316E || 	ld	a,h                         ; 04310D || 04316E 7C          8211  			LD      A,H			; Is it zero, i.e. a command with no line number?
	or	l                           ; 04316F || 	or	l                           ; 04310E || 04316F B5          8212  			OR      L
	ld	iy,$044b00                  ; 043170 || 	ld	iy,$044b00                  ; 04310F || 043170 FD 21 00 4B 8213  			LD      IY,BUFFER       	; Yes, so we're in immediate mode
	jp	z,$040ba9                   ; 043175 || 	jp	z,$040b96                   ; 043114 || 043175 CA A9 0B 04 8214  			JP      Z,XEQ           	; Execute it
	push	bc                        ; 043179 || 	push	bc                        ; 043118 || 043179 C5          8218  			PUSH    BC
	push	hl                        ; 04317A || 	push	hl                        ; 043119 || 04317A E5          8219  			PUSH    HL
	call	$0438ac                   ; 04317B || 	call	$04384b                   ; 04311A || 04317B CD AC 38 04 8220  			CALL    SETTOP          	; Set TOP sysvar
	pop	hl                         ; 04317F || 	pop	hl                         ; 04311E || 04317F E1          8221  			POP     HL
	call	$0439f0                   ; 043180 || 	call	$04398f                   ; 04311F || 043180 CD F0 39 04 8222  			CALL    FINDL			; Find the address of the line
	call	z,$043863                 ; 043184 || 	call	z,$043802                 ; 043123 || 043184 CC 63 38 04 8223  			CALL    Z,DEL			; Delete the existing line if found
	pop	bc                         ; 043188 || 	pop	bc                         ; 043127 || 043188 C1          8224  			POP     BC
	ld	a,c                         ; 043189 || 	ld	a,c                         ; 043128 || 043189 79          8225  			LD      A,C			; Check for the line length being zero, i.e.
	or	a                           ; 04318A || 	or	a                           ; 043129 || 04318A B7          8226  			OR      A			; the user has just entered a line number in the command line
	ret	z                          ; 04318B || 	ret	z                          ; 04312A || 04318B C8          8227  			RET	Z 	         	; If so, then don't do anything else
	add	a,$04                      ; 04318C || 	add	a,$04                      ; 04312B || 04318C C6 04       8228  			ADD     A,4
	ld	c,a                         ; 04318E || 	ld	c,a                         ; 04312D || 04318E 4F          8229  			LD      C,A             	; Length inclusive
	push	de                        ; 04318F || 	push	de                        ; 04312E || 04318F D5          8230  			PUSH    DE              	; DE: Line number (fetched from the call to FINDL)
	push	bc                        ; 043190 || 	push	bc                        ; 04312F || 043190 C5          8231  			PUSH    BC              	; BC: Line length
	ex	de,hl                       ; 043191 || 	ex	de,hl                       ; 043130 || 043191 EB          8232  			EX      DE,HL			; DE: Address of the line in memory
	ld	hl,($044d17)                ; 043192 || 	ld	hl,($044d17)                ; 043131 || 043192 2A 17 4D 04 8233  			LD      HL,(TOP)		; HL: TOP (the first free location after the end of the BASIC program)
	push	hl                        ; 043196 || 	push	hl                        ; 043135 || 043196 E5          8234  			PUSH    HL			; Stack TOP (current TOP value)
	add	hl,bc                      ; 043197 || 	add	hl,bc                      ; 043136 || 043197 09          8235  			ADD     HL,BC			; Add the line length to HL, the new TOP value
	push	hl                        ; 043198 || 	push	hl                        ; 043137 || 043198 E5          8236  			PUSH    HL			; Stack HL (new TOP value)
	inc	h                          ; 043199 || 	inc	h                          ; 043138 || 043199 24          8237  			INC     H			; Add 256 to HL
	xor	a                          ; 04319A || 	xor	a                          ; 043139 || 04319A AF          8238  			XOR     A
	sbc	hl,sp                      ; 04319B || 	sbc	hl,sp                      ; 04313A || 04319B ED 72       8239  			SBC     HL,SP			; Check whether HL is in the same page as the current stack pointer
	pop	hl                         ; 04319D || 	pop	hl                         ; 04313C || 04319D E1          8240  			POP     HL			; Pop HL (new TOP value)
	jp	nc,$0437c1                  ; 04319E || 	jp	nc,$043760                  ; 04313D || 04319E D2 C1 37 04 8241  			JP      NC,ERROR_        	; If HL is in the stack page, then error: "No room"
	ld	($044d17),hl                ; 0431A2 || 	ld	($044d17),hl                ; 043141 || 0431A2 22 17 4D 04 8242  			LD      (TOP),HL		; Store new value of TOP
	ex	(sp),hl                     ; 0431A6 || 	ex	(sp),hl                     ; 043145 || 0431A6 E3          8243  			EX      (SP),HL			; HL: TOP (current TOP value), top of stack now contains new TOP value
	push	hl                        ; 0431A7 || 	push	hl                        ; 043146 || 0431A7 E5          8244  			PUSH    HL			; PUSH current TOP value
	inc	hl                         ; 0431A8 || 	inc	hl                         ; 043147 || 0431A8 23          8245  			INC     HL
	or	a                           ; 0431A9 || 	or	a                           ; 043148 || 0431A9 B7          8246  			OR      A
	sbc	hl,de                      ; 0431AA || 	sbc	hl,de                      ; 043149 || 0431AA ED 52       8247  			SBC     HL,DE			; DE: Address of the line in memory
	ld	b,h                         ; 0431AC || 	ld	b,h                         ; 04314B || 0431AC 44          8248  			LD      B,H             	; BC: Amount to move
	ld	c,l                         ; 0431AD || 	ld	c,l                         ; 04314C || 0431AD 4D          8249  			LD      C,L
	pop	hl                         ; 0431AE || 	pop	hl                         ; 04314D || 0431AE E1          8250  			POP     HL			; HL: Destination (current TOP value)
	pop	de                         ; 0431AF || 	pop	de                         ; 04314E || 0431AF D1          8251  			POP     DE			; DE: Source (new TOP value)
	jr	z,$+$04                     ; 0431B0 || 	jr	z,$+$04                     ; 04314F || 0431B0 28 02       8252  			JR      Z,ATEND			; If current TOP and new TOP are the same, i.e. adding a line at the end, then skip...
	lddr                           ; 0431B2 || 	lddr                           ; 043151 || 0431B2 ED B8       8253  			LDDR                    	; Otherwise, make space for the new line in the program
	pop	bc                         ; 0431B4 || 	pop	bc                         ; 043153 || 0431B4 C1          8254  ATEND:			POP     BC              	; BC: Line length
	pop	de                         ; 0431B5 || 	pop	de                         ; 043154 || 0431B5 D1          8255  			POP     DE              	; DE: Line number
	inc	hl                         ; 0431B6 || 	inc	hl                         ; 043155 || 0431B6 23          8256  			INC     HL			; HL: Destination address
	ld	(hl),c                      ; 0431B7 || 	ld	(hl),c                      ; 043156 || 0431B7 71          8257  			LD      (HL),C          	; Store length
	inc	hl                         ; 0431B8 || 	inc	hl                         ; 043157 || 0431B8 23          8258  			INC     HL
	ld	(hl),e                      ; 0431B9 || 	ld	(hl),e                      ; 043158 || 0431B9 73          8259  			LD      (HL),E          	; Store line number
	inc	hl                         ; 0431BA || 	inc	hl                         ; 043159 || 0431BA 23          8260  			INC     HL
	ld	(hl),d                      ; 0431BB || 	ld	(hl),d                      ; 04315A || 0431BB 72          8261  			LD      (HL),D
	inc	hl                         ; 0431BC || 	inc	hl                         ; 04315B || 0431BC 23          8262  			INC     HL
	ld	de,$044b00                  ; 0431BD || 	ld	de,$044b00                  ; 04315C || 0431BD 11 00 4B 04 8263  			LD      DE,BUFFER		; DE: Location of the new, tokenised line
	ex	de,hl                       ; 0431C1 || 	ex	de,hl                       ; 043160 || 0431C1 EB          8264  			EX      DE,HL			; HL: Location of the new, tokensied line, DE: Destination address in BASIC program
	dec	c                          ; 0431C2 || 	dec	c                          ; 043161 || 0431C2 0D          8265  			DEC     C			; Subtract 3 from the number of bytes to copy to
	dec	c                          ; 0431C3 || 	dec	c                          ; 043162 || 0431C3 0D          8266  			DEC     C			; compensate for the 3 bytes stored above (length and line number)
	dec	c                          ; 0431C4 || 	dec	c                          ; 043163 || 0431C4 0D          8267  			DEC     C
	ldir                           ; 0431C5 || 	ldir                           ; 043164 || 0431C5 ED B0       8268  			LDIR                    	; Add the line to the BASIC program
	scf                            ; 0431C7 || 	scf                            ; 043166 || 0431C7 37          8269  			SCF				; To flag we need to call CLEAN
	ret                            ; 0431C8 || 	ret                            ; 043167 || 0431C8 C9          8270  			RET
	add	a,b                        ; 0431C9 || 	add	a,b                        ; 043168 || 0431C9 80 41 4E 44 8276  KEYWDS:			DB    80H, "AND"
	ld	b,c                         ; 0431CA || 	ld	b,c                         ; 043169
	ld	c,(hl)                      ; 0431CB || 	ld	c,(hl)                      ; 04316A
	ld	b,h                         ; 0431CC || 	ld	b,h                         ; 04316B
	sub	h                          ; 0431CD || 	sub	h                          ; 04316C || 0431CD 94 41 42 53 8277  			DB    94H, "ABS"
	ld	b,c                         ; 0431CE || 	ld	b,c                         ; 04316D
	ld	b,d                         ; 0431CF || 	ld	b,d                         ; 04316E
	ld	d,e                         ; 0431D0 || 	ld	d,e                         ; 04316F
	sub	l                          ; 0431D1 || 	sub	l                          ; 043170 || 0431D1 95 41 43 53 8278  			DB    95H, "ACS"
	ld	b,c                         ; 0431D2 || 	ld	b,c                         ; 043171
	ld	b,e                         ; 0431D3 || 	ld	b,e                         ; 043172
	ld	d,e                         ; 0431D4 || 	ld	d,e                         ; 043173
	sub	(hl)                       ; 0431D5 || 	sub	(hl)                       ; 043174 || 0431D5 96 41 44 56 8279  			DB    96H, "ADVAL"
	ld	b,c                         ; 0431D6 || 	ld	b,c                         ; 043175
	ld	b,h                         ; 0431D7 || 	ld	b,h                         ; 043176
	ld	d,(hl)                      ; 0431D8 || 	ld	d,(hl)                      ; 043177
	ld	b,c                         ; 0431D9 || 	ld	b,c                         ; 043178
	ld	c,h                         ; 0431DA || 	ld	c,h                         ; 043179
	sub	a                          ; 0431DB || 	sub	a                          ; 04317A || 0431DB 97 41 53 43 8280  			DB    97H, "ASC"
	ld	b,c                         ; 0431DC || 	ld	b,c                         ; 04317B
	ld	d,e                         ; 0431DD || 	ld	d,e                         ; 04317C
	ld	b,e                         ; 0431DE || 	ld	b,e                         ; 04317D
	sbc	a,b                        ; 0431DF || 	sbc	a,b                        ; 04317E || 0431DF 98 41 53 4E 8281  			DB    98H, "ASN"
	ld	b,c                         ; 0431E0 || 	ld	b,c                         ; 04317F
	ld	d,e                         ; 0431E1 || 	ld	d,e                         ; 043180
	ld	c,(hl)                      ; 0431E2 || 	ld	c,(hl)                      ; 043181
	sbc	a,c                        ; 0431E3 || 	sbc	a,c                        ; 043182 || 0431E3 99 41 54 4E 8282  			DB    99H, "ATN"
	ld	b,c                         ; 0431E4 || 	ld	b,c                         ; 043183
	ld	d,h                         ; 0431E5 || 	ld	d,h                         ; 043184
	ld	c,(hl)                      ; 0431E6 || 	ld	c,(hl)                      ; 043185
	add	a,$41                      ; 0431E7 || 	add	a,$41                      ; 043186 || 0431E7 C6 41 55 54 8283  			DB    C6H, "AUTO"
	ld	d,l                         ; 0431E9 || 	ld	d,l                         ; 043188
	ld	d,h                         ; 0431EA || 	ld	d,h                         ; 043189
	ld	c,a                         ; 0431EB || 	ld	c,a                         ; 04318A
	sbc	a,d                        ; 0431EC || 	sbc	a,d                        ; 04318B || 0431EC 9A 42 47 45 8284  			DB    9AH, "BGET", 0
	ld	b,d                         ; 0431ED || 	ld	b,d                         ; 04318C
	ld	b,a                         ; 0431EE || 	ld	b,a                         ; 04318D
	ld	b,l                         ; 0431EF || 	ld	b,l                         ; 04318E
	ld	d,h                         ; 0431F0 || 	ld	d,h                         ; 04318F
	nop                            ; 0431F1 || 	nop                            ; 043190
	push	de                        ; 0431F2 || 	push	de                        ; 043191 || 0431F2 D5 42 50 55 8285  			DB    D5H, "BPUT", 0
	ld	b,d                         ; 0431F3 || 	ld	b,d                         ; 043192
	ld	d,b                         ; 0431F4 || 	ld	d,b                         ; 043193
	ld	d,l                         ; 0431F5 || 	ld	d,l                         ; 043194
	ld	d,h                         ; 0431F6 || 	ld	d,h                         ; 043195
	nop                            ; 0431F7 || 	nop                            ; 043196
	ei                             ; 0431F8 || 	ei                             ; 043197 || 0431F8 FB 43 4F 4C 8286  			DB    FBH, "COLOUR"
	ld	b,e                         ; 0431F9 || 	ld	b,e                         ; 043198
	ld	c,a                         ; 0431FA || 	ld	c,a                         ; 043199
	ld	c,h                         ; 0431FB || 	ld	c,h                         ; 04319A
	ld	c,a                         ; 0431FC || 	ld	c,a                         ; 04319B
	ld	d,l                         ; 0431FD || 	ld	d,l                         ; 04319C
	ei.sil                         ; 0431FE || 	ei.sil                         ; 04319D
	ld	b,e                         ; 043200 || 	ld	b,e                         ; 04319F
	ld	c,a                         ; 043201 || 	ld	c,a                         ; 0431A0
	ld	c,h                         ; 043202 || 	ld	c,h                         ; 0431A1
	ld	c,a                         ; 043203 || 	ld	c,a                         ; 0431A2
	sub.sil	$43                    ; 043204 || 	sub.sil	$43                    ; 0431A3
	ld	b,c                         ; 043207 || 	ld	b,c                         ; 0431A6
	ld	c,h                         ; 043208 || 	ld	c,h                         ; 0431A7
	ld	c,h                         ; 043209 || 	ld	c,h                         ; 0431A8
	rst	$10                        ; 04320A || 	rst	$10                        ; 0431A9 || 04320A D7 43 48 41 8289  			DB    D7H, "CHAIN"
	ld	b,e                         ; 04320B || 	ld	b,e                         ; 0431AA
	ld	c,b                         ; 04320C || 	ld	c,b                         ; 0431AB
	ld	b,c                         ; 04320D || 	ld	b,c                         ; 0431AC
	ld.lis	c,(hl)                  ; 04320E || 	ld.lis	c,(hl)                  ; 0431AD
	cp	l                           ; 043210 || 	cp	l                           ; 0431AF || 043210 BD 43 48 52 8290  			DB    BDH, "CHR$"
	ld	b,e                         ; 043211 || 	ld	b,e                         ; 0431B0
	ld	c,b                         ; 043212 || 	ld	c,b                         ; 0431B1
	inc.sil	h                      ; 043213 || 	inc.sil	h                      ; 0431B2
	ret	c                          ; 043215 || 	ret	c                          ; 0431B4 || 043215 D8 43 4C 45 8291  			DB    D8H, "CLEAR", 0
	ld	b,e                         ; 043216 || 	ld	b,e                         ; 0431B5
	ld	c,h                         ; 043217 || 	ld	c,h                         ; 0431B6
	ld	b,l                         ; 043218 || 	ld	b,l                         ; 0431B7
	ld	b,c                         ; 043219 || 	ld	b,c                         ; 0431B8
	nop.sil                        ; 04321A || 	nop.sil                        ; 0431B9
	exx                            ; 04321C || 	exx                            ; 0431BB || 04321C D9 43 4C 4F 8292  			DB    D9H, "CLOSE", 0
	ld	b,e                         ; 04321D || 	ld	b,e                         ; 0431BC
	ld	c,h                         ; 04321E || 	ld	c,h                         ; 0431BD
	ld	c,a                         ; 04321F || 	ld	c,a                         ; 0431BE
	ld	d,e                         ; 043220 || 	ld	d,e                         ; 0431BF
	ld	b,l                         ; 043221 || 	ld	b,l                         ; 0431C0
	nop                            ; 043222 || 	nop                            ; 0431C1
	jp	c,$474c43                   ; 043223 || 	jp	c,$474c43                   ; 0431C2 || 043223 DA 43 4C 47 8293  			DB    DAH, "CLG", 0
	nop                            ; 043227 || 	nop                            ; 0431C6
	in	a,($43)                     ; 043228 || 	in	a,($43)                     ; 0431C7 || 043228 DB 43 4C 53 8294  			DB    DBH, "CLS", 0
	ld	c,h                         ; 04322A || 	ld	c,h                         ; 0431C9
	ld	d,e                         ; 04322B || 	ld	d,e                         ; 0431CA
	nop                            ; 04322C || 	nop                            ; 0431CB
	sbc	a,e                        ; 04322D || 	sbc	a,e                        ; 0431CC || 04322D 9B 43 4F 53 8295  			DB    9BH, "COS"
	ld	b,e                         ; 04322E || 	ld	b,e                         ; 0431CD
	ld	c,a                         ; 04322F || 	ld	c,a                         ; 0431CE
	ld	d,e                         ; 043230 || 	ld	d,e                         ; 0431CF
	sbc	a,h                        ; 043231 || 	sbc	a,h                        ; 0431D0 || 043231 9C 43 4F 55 8296  			DB    9CH, "COUNT", 0
	ld	b,e                         ; 043232 || 	ld	b,e                         ; 0431D1
	ld	c,a                         ; 043233 || 	ld	c,a                         ; 0431D2
	ld	d,l                         ; 043234 || 	ld	d,l                         ; 0431D3
	ld	c,(hl)                      ; 043235 || 	ld	c,(hl)                      ; 0431D4
	ld	d,h                         ; 043236 || 	ld	d,h                         ; 0431D5
	nop                            ; 043237 || 	nop                            ; 0431D6
	call	c,$544144                 ; 043238 || 	call	c,$544144                 ; 0431D7 || 043238 DC 44 41 54 8297  			DB    DCH, "DATA"
	ld	b,c                         ; 04323C || 	ld	b,c                         ; 0431DB
	sbc	a,l                        ; 04323D || 	sbc	a,l                        ; 0431DC || 04323D 9D 44 45 47 8298  			DB    9DH, "DEG"
	ld	b,h                         ; 04323E || 	ld	b,h                         ; 0431DD
	ld	b,l                         ; 04323F || 	ld	b,l                         ; 0431DE
	ld	b,a                         ; 043240 || 	ld	b,a                         ; 0431DF
	ld	b,ixh                       ; 043241 || 	ld	b,ixh                       ; 0431E0 || 043241 DD 44 45 46 8299  			DB    DDH, "DEF"
	ld	b,l                         ; 043243 || 	ld	b,l                         ; 0431E2
	ld	b,(hl)                      ; 043244 || 	ld	b,(hl)                      ; 0431E3
	rst	$00                        ; 043245 || 	rst	$00                        ; 0431E4 || 043245 C7 44 45 4C 8300  			DB    C7H, "DELETE"
	ld	b,h                         ; 043246 || 	ld	b,h                         ; 0431E5
	ld	b,l                         ; 043247 || 	ld	b,l                         ; 0431E6
	ld	c,h                         ; 043248 || 	ld	c,h                         ; 0431E7
	ld	b,l                         ; 043249 || 	ld	b,l                         ; 0431E8
	ld	d,h                         ; 04324A || 	ld	d,h                         ; 0431E9
	ld	b,l                         ; 04324B || 	ld	b,l                         ; 0431EA
	add	a,c                        ; 04324C || 	add	a,c                        ; 0431EB || 04324C 81 44 49 56 8301  			DB    81H, "DIV"
	ld	b,h                         ; 04324D || 	ld	b,h                         ; 0431EC
	ld.lis	d,(hl)                  ; 04324E || 	ld.lis	d,(hl)                  ; 0431ED
	sbc	a,$44                      ; 043250 || 	sbc	a,$44                      ; 0431EF || 043250 DE 44 49 4D 8302  			DB    DEH, "DIM"
	ld.lis	c,l                     ; 043252 || 	ld.lis	c,l                     ; 0431F1
	rst	$18                        ; 043254 || 	rst	$18                        ; 0431F3 || 043254 DF 44 52 41 8303  			DB    DFH, "DRAW"
	ld	b,h                         ; 043255 || 	ld	b,h                         ; 0431F4
	ld.sil	b,c                     ; 043256 || 	ld.sil	b,c                     ; 0431F5
	ld	d,a                         ; 043258 || 	ld	d,a                         ; 0431F7
	pop	hl                         ; 043259 || 	pop	hl                         ; 0431F8 || 043259 E1 45 4E 44 8304  			DB    E1H, "ENDPROC", 0
	ld	b,l                         ; 04325A || 	ld	b,l                         ; 0431F9
	ld	c,(hl)                      ; 04325B || 	ld	c,(hl)                      ; 0431FA
	ld	b,h                         ; 04325C || 	ld	b,h                         ; 0431FB
	ld	d,b                         ; 04325D || 	ld	d,b                         ; 0431FC
	ld.sil	c,a                     ; 04325E || 	ld.sil	c,a                     ; 0431FD
	ld	b,e                         ; 043260 || 	ld	b,e                         ; 0431FF
	nop                            ; 043261 || 	nop                            ; 043200
	ret	po                         ; 043262 || 	ret	po                         ; 043201 || 043262 E0 45 4E 44 8305  			DB    E0H, "END", 0
	ld	b,l                         ; 043263 || 	ld	b,l                         ; 043202
	ld	c,(hl)                      ; 043264 || 	ld	c,(hl)                      ; 043203
	ld	b,h                         ; 043265 || 	ld	b,h                         ; 043204
	nop                            ; 043266 || 	nop                            ; 043205
	jp	po,$564e45                  ; 043267 || 	jp	po,$564e45                  ; 043206 || 043267 E2 45 4E 56 8306  			DB    E2H, "ENVELOPE"
	ld	b,l                         ; 04326B || 	ld	b,l                         ; 04320A
	ld	c,h                         ; 04326C || 	ld	c,h                         ; 04320B
	ld	c,a                         ; 04326D || 	ld	c,a                         ; 04320C
	ld	d,b                         ; 04326E || 	ld	d,b                         ; 04320D
	ld	b,l                         ; 04326F || 	ld	b,l                         ; 04320E
	adc	a,e                        ; 043270 || 	adc	a,e                        ; 04320F || 043270 8B 45 4C 53 8307  			DB    8BH, "ELSE"
	ld	b,l                         ; 043271 || 	ld	b,l                         ; 043210
	ld	c,h                         ; 043272 || 	ld	c,h                         ; 043211
	ld	d,e                         ; 043273 || 	ld	d,e                         ; 043212
	ld	b,l                         ; 043274 || 	ld	b,l                         ; 043213
	and	b                          ; 043275 || 	and	b                          ; 043214 || 043275 A0 45 56 41 8308  			DB    A0H, "EVAL"
	ld	b,l                         ; 043276 || 	ld	b,l                         ; 043215
	ld	d,(hl)                      ; 043277 || 	ld	d,(hl)                      ; 043216
	ld	b,c                         ; 043278 || 	ld	b,c                         ; 043217
	ld	c,h                         ; 043279 || 	ld	c,h                         ; 043218
	sbc	a,(hl)                     ; 04327A || 	sbc	a,(hl)                     ; 043219 || 04327A 9E 45 52 4C 8309  			DB    9EH, "ERL", 0
	ld	b,l                         ; 04327B || 	ld	b,l                         ; 04321A
	ld.sil	c,h                     ; 04327C || 	ld.sil	c,h                     ; 04321B
	nop                            ; 04327E || 	nop                            ; 04321D
	add	a,l                        ; 04327F || 	add	a,l                        ; 04321E || 04327F 85 45 52 52 8310  			DB    85H, "ERROR"
	ld	b,l                         ; 043280 || 	ld	b,l                         ; 04321F
	noni.sil                       ; 043281 || 	noni.sil                       ; 043220
	ld.sil	c,a                     ; 043282 || 	ld.sil	c,a                     ; 043221
	push.sil	bc                    ; 043284 || 	push.sil	bc                    ; 043223
	ld	b,l                         ; 043286 || 	ld	b,l                         ; 043225
	ld	c,a                         ; 043287 || 	ld	c,a                         ; 043226
	ld	b,(hl)                      ; 043288 || 	ld	b,(hl)                      ; 043227
	nop                            ; 043289 || 	nop                            ; 043228
	add	a,d                        ; 04328A || 	add	a,d                        ; 043229 || 04328A 82 45 4F 52 8312  			DB    82H, "EOR"
	ld	b,l                         ; 04328B || 	ld	b,l                         ; 04322A
	ld	c,a                         ; 04328C || 	ld	c,a                         ; 04322B
	sbc.sil	a,a                    ; 04328D || 	sbc.sil	a,a                    ; 04322C
	ld	b,l                         ; 04328F || 	ld	b,l                         ; 04322E
	noni.sil                       ; 043290 || 	noni.sil                       ; 04322F
	nop.sil                        ; 043291 || 	nop.sil                        ; 043230
	and	c                          ; 043293 || 	and	c                          ; 043232 || 043293 A1 45 58 50 8314  			DB    A1H, "EXP"
	ld	b,l                         ; 043294 || 	ld	b,l                         ; 043233
	ld	e,b                         ; 043295 || 	ld	e,b                         ; 043234
	ld	d,b                         ; 043296 || 	ld	d,b                         ; 043235
	and	d                          ; 043297 || 	and	d                          ; 043236 || 043297 A2 45 58 54 8315  			DB    A2H, "EXT", 0
	ld	b,l                         ; 043298 || 	ld	b,l                         ; 043237
	ld	e,b                         ; 043299 || 	ld	e,b                         ; 043238
	ld	d,h                         ; 04329A || 	ld	d,h                         ; 043239
	nop                            ; 04329B || 	nop                            ; 04323A
	ex	(sp),hl                     ; 04329C || 	ex	(sp),hl                     ; 04323B || 04329C E3 46 4F 52 8316  			DB    E3H, "FOR"
	ld	b,(hl)                      ; 04329D || 	ld	b,(hl)                      ; 04323C
	ld	c,a                         ; 04329E || 	ld	c,a                         ; 04323D
	and.sil	e                      ; 04329F || 	and.sil	e                      ; 04323E
	ld	b,(hl)                      ; 0432A1 || 	ld	b,(hl)                      ; 043240
	ld	b,c                         ; 0432A2 || 	ld	b,c                         ; 043241
	ld	c,h                         ; 0432A3 || 	ld	c,h                         ; 043242
	ld	d,e                         ; 0432A4 || 	ld	d,e                         ; 043243
	ld	b,l                         ; 0432A5 || 	ld	b,l                         ; 043244
	nop                            ; 0432A6 || 	nop                            ; 043245
	and	h                          ; 0432A7 || 	and	h                          ; 043246 || 0432A7 A4 46 4E    8318  			DB    A4H, "FN"
	ld	b,(hl)                      ; 0432A8 || 	ld	b,(hl)                      ; 043247
	ld	c,(hl)                      ; 0432A9 || 	ld	c,(hl)                      ; 043248
	push	hl                        ; 0432AA || 	push	hl                        ; 043249 || 0432AA E5 47 4F 54 8319  			DB    E5H, "GOTO"
	ld	b,a                         ; 0432AB || 	ld	b,a                         ; 04324A
	ld	c,a                         ; 0432AC || 	ld	c,a                         ; 04324B
	ld	d,h                         ; 0432AD || 	ld	d,h                         ; 04324C
	ld	c,a                         ; 0432AE || 	ld	c,a                         ; 04324D
	cp	(hl)                        ; 0432AF || 	cp	(hl)                        ; 04324E || 0432AF BE 47 45 54 8320  			DB    BEH, "GET$"
	ld	b,a                         ; 0432B0 || 	ld	b,a                         ; 04324F
	ld	b,l                         ; 0432B1 || 	ld	b,l                         ; 043250
	ld	d,h                         ; 0432B2 || 	ld	d,h                         ; 043251
	inc	h                          ; 0432B3 || 	inc	h                          ; 043252
	and	l                          ; 0432B4 || 	and	l                          ; 043253 || 0432B4 A5 47 45 54 8321  			DB    A5H, "GET"
	ld	b,a                         ; 0432B5 || 	ld	b,a                         ; 043254
	ld	b,l                         ; 0432B6 || 	ld	b,l                         ; 043255
	ld	d,h                         ; 0432B7 || 	ld	d,h                         ; 043256
	call	po,$534f47                ; 0432B8 || 	call	po,$534f47                ; 043257 || 0432B8 E4 47 4F 53 8322  			DB    E4H, "GOSUB"
	ld	d,l                         ; 0432BC || 	ld	d,l                         ; 04325B
	ld	b,d                         ; 0432BD || 	ld	b,d                         ; 04325C
	and	$47                        ; 0432BE || 	and	$47                        ; 04325D || 0432BE E6 47 43 4F 8323  			DB    E6H, "GCOL"
	ld	b,e                         ; 0432C0 || 	ld	b,e                         ; 04325F
	ld	c,a                         ; 0432C1 || 	ld	c,a                         ; 043260
	ld	c,h                         ; 0432C2 || 	ld	c,h                         ; 043261
	sub	e                          ; 0432C3 || 	sub	e                          ; 043262 || 0432C3 93 48 49 4D 8324  			DB    93H, "HIMEM", 0
	ld	c,b                         ; 0432C4 || 	ld	c,b                         ; 043263
	ld.lis	c,l                     ; 0432C5 || 	ld.lis	c,l                     ; 043264
	ld	b,l                         ; 0432C7 || 	ld	b,l                         ; 043266
	ld	c,l                         ; 0432C8 || 	ld	c,l                         ; 043267
	nop                            ; 0432C9 || 	nop                            ; 043268
	ret	pe                         ; 0432CA || 	ret	pe                         ; 043269 || 0432CA E8 49 4E 50 8325  			DB    E8H, "INPUT"
	ld.lis	c,(hl)                  ; 0432CB || 	ld.lis	c,(hl)                  ; 04326A
	ld	d,b                         ; 0432CD || 	ld	d,b                         ; 04326C
	ld	d,l                         ; 0432CE || 	ld	d,l                         ; 04326D
	ld	d,h                         ; 0432CF || 	ld	d,h                         ; 04326E
	rst	$20                        ; 0432D0 || 	rst	$20                        ; 04326F || 0432D0 E7 49 46    8326  			DB    E7H, "IF"
	ld.lis	b,(hl)                  ; 0432D1 || 	ld.lis	b,(hl)                  ; 043270
	cp	a                           ; 0432D3 || 	cp	a                           ; 043272 || 0432D3 BF 49 4E 4B 8327  			DB    BFH, "INKEY$"
	ld.lis	c,(hl)                  ; 0432D4 || 	ld.lis	c,(hl)                  ; 043273
	ld	c,e                         ; 0432D6 || 	ld	c,e                         ; 043275
	ld	b,l                         ; 0432D7 || 	ld	b,l                         ; 043276
	ld	e,c                         ; 0432D8 || 	ld	e,c                         ; 043277
	inc	h                          ; 0432D9 || 	inc	h                          ; 043278
	and	(hl)                       ; 0432DA || 	and	(hl)                       ; 043279 || 0432DA A6 49 4E 4B 8328  			DB    A6H, "INKEY"
	ld.lis	c,(hl)                  ; 0432DB || 	ld.lis	c,(hl)                  ; 04327A
	ld	c,e                         ; 0432DD || 	ld	c,e                         ; 04327C
	ld	b,l                         ; 0432DE || 	ld	b,l                         ; 04327D
	ld	e,c                         ; 0432DF || 	ld	e,c                         ; 04327E
	xor	b                          ; 0432E0 || 	xor	b                          ; 04327F || 0432E0 A8 49 4E 54 8329  			DB    A8H, "INT"
	ld.lis	c,(hl)                  ; 0432E1 || 	ld.lis	c,(hl)                  ; 043280
	ld	d,h                         ; 0432E3 || 	ld	d,h                         ; 043282
	and	a                          ; 0432E4 || 	and	a                          ; 043283 || 0432E4 A7 49 4E 53 8330  			DB    A7H, "INSTR("
	ld.lis	c,(hl)                  ; 0432E5 || 	ld.lis	c,(hl)                  ; 043284
	ld	d,e                         ; 0432E7 || 	ld	d,e                         ; 043286
	ld	d,h                         ; 0432E8 || 	ld	d,h                         ; 043287
	jr.sil	z,$-$34                 ; 0432E9 || 	jr.sil	z,$-$34                 ; 043288
	ld	c,h                         ; 0432EC || 	ld	c,h                         ; 04328B
	ld.lis	d,e                     ; 0432ED || 	ld.lis	d,e                     ; 04328C
	ld	d,h                         ; 0432EF || 	ld	d,h                         ; 04328E
	add	a,(hl)                     ; 0432F0 || 	add	a,(hl)                     ; 04328F || 0432F0 86 4C 49 4E 8332  			DB    86H, "LINE"
	ld	c,h                         ; 0432F1 || 	ld	c,h                         ; 043290
	ld.lis	c,(hl)                  ; 0432F2 || 	ld.lis	c,(hl)                  ; 043291
	ld	b,l                         ; 0432F4 || 	ld	b,l                         ; 043293
	ret	z                          ; 0432F5 || 	ret	z                          ; 043294 || 0432F5 C8 4C 4F 41 8333  			DB    C8H, "LOAD"
	ld	c,h                         ; 0432F6 || 	ld	c,h                         ; 043295
	ld	c,a                         ; 0432F7 || 	ld	c,a                         ; 043296
	ld	b,c                         ; 0432F8 || 	ld	b,c                         ; 043297
	ld	b,h                         ; 0432F9 || 	ld	b,h                         ; 043298
	sub	d                          ; 0432FA || 	sub	d                          ; 043299 || 0432FA 92 4C 4F 4D 8334  			DB    92H, "LOMEM", 0
	ld	c,h                         ; 0432FB || 	ld	c,h                         ; 04329A
	ld	c,a                         ; 0432FC || 	ld	c,a                         ; 04329B
	ld	c,l                         ; 0432FD || 	ld	c,l                         ; 04329C
	ld	b,l                         ; 0432FE || 	ld	b,l                         ; 04329D
	ld	c,l                         ; 0432FF || 	ld	c,l                         ; 04329E
	nop                            ; 043300 || 	nop                            ; 04329F
	jp	pe,$434f4c                  ; 043301 || 	jp	pe,$434f4c                  ; 0432A0 || 043301 EA 4C 4F 43 8335  			DB    EAH, "LOCAL"
	ld	b,c                         ; 043305 || 	ld	b,c                         ; 0432A4
	ld	c,h                         ; 043306 || 	ld	c,h                         ; 0432A5
	ret	nz                         ; 043307 || 	ret	nz                         ; 0432A6 || 043307 C0 4C 45 46 8336  			DB    C0H, "LEFT$("
	ld	c,h                         ; 043308 || 	ld	c,h                         ; 0432A7
	ld	b,l                         ; 043309 || 	ld	b,l                         ; 0432A8
	ld	b,(hl)                      ; 04330A || 	ld	b,(hl)                      ; 0432A9
	ld	d,h                         ; 04330B || 	ld	d,h                         ; 0432AA
	inc	h                          ; 04330C || 	inc	h                          ; 0432AB
	jr	z,$-$55                     ; 04330D || 	jr	z,$-$55                     ; 0432AC
	ld	c,h                         ; 04330F || 	ld	c,h                         ; 0432AE
	ld	b,l                         ; 043310 || 	ld	b,l                         ; 0432AF
	ld	c,(hl)                      ; 043311 || 	ld	c,(hl)                      ; 0432B0
	jp	(hl)                        ; 043312 || 	jp	(hl)                        ; 0432B1 || 043312 E9 4C 45 54 8338  			DB    E9H, "LET"
	ld	c,h                         ; 043313 || 	ld	c,h                         ; 0432B2
	ld	b,l                         ; 043314 || 	ld	b,l                         ; 0432B3
	ld	d,h                         ; 043315 || 	ld	d,h                         ; 0432B4
	xor	e                          ; 043316 || 	xor	e                          ; 0432B5 || 043316 AB 4C 4F 47 8339  			DB    ABH, "LOG"
	ld	c,h                         ; 043317 || 	ld	c,h                         ; 0432B6
	ld	c,a                         ; 043318 || 	ld	c,a                         ; 0432B7
	ld	b,a                         ; 043319 || 	ld	b,a                         ; 0432B8
	xor	d                          ; 04331A || 	xor	d                          ; 0432B9 || 04331A AA 4C 4E    8340  			DB    AAH, "LN"
	ld	c,h                         ; 04331B || 	ld	c,h                         ; 0432BA
	ld	c,(hl)                      ; 04331C || 	ld	c,(hl)                      ; 0432BB
	pop	bc                         ; 04331D || 	pop	bc                         ; 0432BC || 04331D C1 4D 49 44 8341  			DB    C1H, "MID$("
	ld	c,l                         ; 04331E || 	ld	c,l                         ; 0432BD
	ld.lis	b,h                     ; 04331F || 	ld.lis	b,h                     ; 0432BE
	inc	h                          ; 043321 || 	inc	h                          ; 0432C0
	jr	z,$-$13                     ; 043322 || 	jr	z,$-$13                     ; 0432C1
	ld	c,l                         ; 043324 || 	ld	c,l                         ; 0432C3
	ld	c,a                         ; 043325 || 	ld	c,a                         ; 0432C4
	ld	b,h                         ; 043326 || 	ld	b,h                         ; 0432C5
	ld	b,l                         ; 043327 || 	ld	b,l                         ; 0432C6
	add	a,e                        ; 043328 || 	add	a,e                        ; 0432C7 || 043328 83 4D 4F 44 8343  			DB    83H, "MOD"
	ld	c,l                         ; 043329 || 	ld	c,l                         ; 0432C8
	ld	c,a                         ; 04332A || 	ld	c,a                         ; 0432C9
	ld	b,h                         ; 04332B || 	ld	b,h                         ; 0432CA
	call	pe,$564f4d                ; 04332C || 	call	pe,$564f4d                ; 0432CB || 04332C EC 4D 4F 56 8344  			DB    ECH, "MOVE"
	ld	b,l                         ; 043330 || 	ld	b,l                         ; 0432CF
	trap                           ; 043331 || 	trap                           ; 0432D0 || 043331 ED 4E 45 58 8345  			DB    EDH, "NEXT"
	ld	b,l                         ; 043333 || 	ld	b,l                         ; 0432D2
	ld	e,b                         ; 043334 || 	ld	e,b                         ; 0432D3
	ld	d,h                         ; 043335 || 	ld	d,h                         ; 0432D4
	jp	z,$57454e                   ; 043336 || 	jp	z,$57454e                   ; 0432D5 || 043336 CA 4E 45 57 8346  			DB    CAH, "NEW", 0
	nop                            ; 04333A || 	nop                            ; 0432D9
	xor	h                          ; 04333B || 	xor	h                          ; 0432DA || 04333B AC 4E 4F 54 8347  			DB    ACH, "NOT"
	ld	c,(hl)                      ; 04333C || 	ld	c,(hl)                      ; 0432DB
	ld	c,a                         ; 04333D || 	ld	c,a                         ; 0432DC
	ld	d,h                         ; 04333E || 	ld	d,h                         ; 0432DD
	bit	1,a                        ; 04333F || 	bit	1,a                        ; 0432DE || 04333F CB 4F 4C 44 8348  			DB    CBH, "OLD", 0
	ld	c,h                         ; 043341 || 	ld	c,h                         ; 0432E0
	ld	b,h                         ; 043342 || 	ld	b,h                         ; 0432E1
	nop                            ; 043343 || 	nop                            ; 0432E2
	xor	$4f                        ; 043344 || 	xor	$4f                        ; 0432E3 || 043344 EE 4F 4E    8349  			DB    EEH, "ON"
	ld	c,(hl)                      ; 043346 || 	ld	c,(hl)                      ; 0432E5
	add	a,a                        ; 043347 || 	add	a,a                        ; 0432E6 || 043347 87 4F 46 46 8350  			DB    87H, "OFF"
	ld	c,a                         ; 043348 || 	ld	c,a                         ; 0432E7
	ld	b,(hl)                      ; 043349 || 	ld	b,(hl)                      ; 0432E8
	ld	b,(hl)                      ; 04334A || 	ld	b,(hl)                      ; 0432E9
	add	a,h                        ; 04334B || 	add	a,h                        ; 0432EA || 04334B 84 4F 52    8351  			DB    84H, "OR"
	ld	c,a                         ; 04334C || 	ld	c,a                         ; 0432EB
	adc.sil	a,(hl)                 ; 04334D || 	adc.sil	a,(hl)                 ; 0432EC
	ld	c,a                         ; 04334F || 	ld	c,a                         ; 0432EE
	ld	d,b                         ; 043350 || 	ld	d,b                         ; 0432EF
	ld	b,l                         ; 043351 || 	ld	b,l                         ; 0432F0
	ld	c,(hl)                      ; 043352 || 	ld	c,(hl)                      ; 0432F1
	ld.lis	c,(hl)                  ; 043353 || 	ld.lis	c,(hl)                  ; 0432F2
	xor	(hl)                       ; 043355 || 	xor	(hl)                       ; 0432F4 || 043355 AE 4F 50 45 8353  			DB    AEH, "OPENOUT"
	ld	c,a                         ; 043356 || 	ld	c,a                         ; 0432F5
	ld	d,b                         ; 043357 || 	ld	d,b                         ; 0432F6
	ld	b,l                         ; 043358 || 	ld	b,l                         ; 0432F7
	ld	c,(hl)                      ; 043359 || 	ld	c,(hl)                      ; 0432F8
	ld	c,a                         ; 04335A || 	ld	c,a                         ; 0432F9
	ld	d,l                         ; 04335B || 	ld	d,l                         ; 0432FA
	ld	d,h                         ; 04335C || 	ld	d,h                         ; 0432FB
	xor	l                          ; 04335D || 	xor	l                          ; 0432FC || 04335D AD 4F 50 45 8354  			DB    ADH, "OPENUP"
	ld	c,a                         ; 04335E || 	ld	c,a                         ; 0432FD
	ld	d,b                         ; 04335F || 	ld	d,b                         ; 0432FE
	ld	b,l                         ; 043360 || 	ld	b,l                         ; 0432FF
	ld	c,(hl)                      ; 043361 || 	ld	c,(hl)                      ; 043300
	ld	d,l                         ; 043362 || 	ld	d,l                         ; 043301
	ld	d,b                         ; 043363 || 	ld	d,b                         ; 043302
	rst	$38                        ; 043364 || 	rst	$38                        ; 043303 || 043364 FF 4F 53 43 8355  			DB    FFH, "OSCLI"
	ld	c,a                         ; 043365 || 	ld	c,a                         ; 043304
	ld	d,e                         ; 043366 || 	ld	d,e                         ; 043305
	ld	b,e                         ; 043367 || 	ld	b,e                         ; 043306
	ld	c,h                         ; 043368 || 	ld	c,h                         ; 043307
	pop.lis	af                     ; 043369 || 	pop.lis	af                     ; 043308
	ld	d,b                         ; 04336B || 	ld	d,b                         ; 04330A
	noni.sil                       ; 04336C || 	noni.sil                       ; 04330B
	ld.lis	c,(hl)                  ; 04336D || 	ld.lis	c,(hl)                  ; 04330C
	ld	d,h                         ; 04336F || 	ld	d,h                         ; 04330E
	sub	b                          ; 043370 || 	sub	b                          ; 04330F || 043370 90 50 41 47 8357  			DB    90H, "PAGE", 0
	ld	d,b                         ; 043371 || 	ld	d,b                         ; 043310
	ld	b,c                         ; 043372 || 	ld	b,c                         ; 043311
	ld	b,a                         ; 043373 || 	ld	b,a                         ; 043312
	ld	b,l                         ; 043374 || 	ld	b,l                         ; 043313
	nop                            ; 043375 || 	nop                            ; 043314
	adc	a,a                        ; 043376 || 	adc	a,a                        ; 043315 || 043376 8F 50 54 52 8358  			DB    8FH, "PTR", 0
	ld	d,b                         ; 043377 || 	ld	d,b                         ; 043316
	ld	d,h                         ; 043378 || 	ld	d,h                         ; 043317
	nop.sil                        ; 043379 || 	nop.sil                        ; 043318
	xor	a                          ; 04337B || 	xor	a                          ; 04331A || 04337B AF 50 49 00 8359  			DB    AFH, "PI", 0
	ld	d,b                         ; 04337C || 	ld	d,b                         ; 04331B
	nop.lis                        ; 04337D || 	nop.lis                        ; 04331C
	ret	p                          ; 04337F || 	ret	p                          ; 04331E || 04337F F0 50 4C 4F 8360  			DB    F0H, "PLOT"
	ld	d,b                         ; 043380 || 	ld	d,b                         ; 04331F
	ld	c,h                         ; 043381 || 	ld	c,h                         ; 043320
	ld	c,a                         ; 043382 || 	ld	c,a                         ; 043321
	ld	d,h                         ; 043383 || 	ld	d,h                         ; 043322
	or	b                           ; 043384 || 	or	b                           ; 043323 || 043384 B0 50 4F 49 8361  			DB    B0H, "POINT("
	ld	d,b                         ; 043385 || 	ld	d,b                         ; 043324
	ld	c,a                         ; 043386 || 	ld	c,a                         ; 043325
	ld.lis	c,(hl)                  ; 043387 || 	ld.lis	c,(hl)                  ; 043326
	ld	d,h                         ; 043389 || 	ld	d,h                         ; 043328
	jr	z,$-$0c                     ; 04338A || 	jr	z,$-$0c                     ; 043329
	ld	d,b                         ; 04338C || 	ld	d,b                         ; 04332B
	ld.sil	c,a                     ; 04338D || 	ld.sil	c,a                     ; 04332C
	ld	b,e                         ; 04338F || 	ld	b,e                         ; 04332E
	or	c                           ; 043390 || 	or	c                           ; 04332F || 043390 B1 50 4F 53 8363  			DB    B1H, "POS", 0
	ld	d,b                         ; 043391 || 	ld	d,b                         ; 043330
	ld	c,a                         ; 043392 || 	ld	c,a                         ; 043331
	ld	d,e                         ; 043393 || 	ld	d,e                         ; 043332
	nop                            ; 043394 || 	nop                            ; 043333
	adc	a,$50                      ; 043395 || 	adc	a,$50                      ; 043334 || 043395 CE 50 55 54 8364  			DB    CEH, "PUT"
	ld	d,l                         ; 043397 || 	ld	d,l                         ; 043336
	ld	d,h                         ; 043398 || 	ld	d,h                         ; 043337
	ret	m                          ; 043399 || 	ret	m                          ; 043338 || 043399 F8 52 45 54 8365  			DB    F8H, "RETURN", 0
	ld.sil	b,l                     ; 04339A || 	ld.sil	b,l                     ; 043339
	ld	d,h                         ; 04339C || 	ld	d,h                         ; 04333B
	ld	d,l                         ; 04339D || 	ld	d,l                         ; 04333C
	ld.sil	c,(hl)                  ; 04339E || 	ld.sil	c,(hl)                  ; 04333D
	nop                            ; 0433A0 || 	nop                            ; 04333F
	push	af                        ; 0433A1 || 	push	af                        ; 043340 || 0433A1 F5 52 45 50 8366  			DB    F5H, "REPEAT"
	ld.sil	b,l                     ; 0433A2 || 	ld.sil	b,l                     ; 043341
	ld	d,b                         ; 0433A4 || 	ld	d,b                         ; 043343
	ld	b,l                         ; 0433A5 || 	ld	b,l                         ; 043344
	ld	b,c                         ; 0433A6 || 	ld	b,c                         ; 043345
	ld	d,h                         ; 0433A7 || 	ld	d,h                         ; 043346
	or	$52                         ; 0433A8 || 	or	$52                         ; 043347 || 0433A8 F6 52 45 50 8367  			DB    F6H, "REPORT", 0
	ld	b,l                         ; 0433AA || 	ld	b,l                         ; 043349
	ld	d,b                         ; 0433AB || 	ld	d,b                         ; 04334A
	ld	c,a                         ; 0433AC || 	ld	c,a                         ; 04334B
	ld.sil	d,h                     ; 0433AD || 	ld.sil	d,h                     ; 04334C
	nop                            ; 0433AF || 	nop                            ; 04334E
	di                             ; 0433B0 || 	di                             ; 04334F || 0433B0 F3 52 45 41 8368  			DB    F3H, "READ"
	ld.sil	b,l                     ; 0433B1 || 	ld.sil	b,l                     ; 043350
	ld	b,c                         ; 0433B3 || 	ld	b,c                         ; 043352
	ld	b,h                         ; 0433B4 || 	ld	b,h                         ; 043353
	call	p,$4d4552                 ; 0433B5 || 	call	p,$4d4552                 ; 043354 || 0433B5 F4 52 45 4D 8369  			DB    F4H, "REM"
	ld	sp,hl                       ; 0433B9 || 	ld	sp,hl                       ; 043358 || 0433B9 F9 52 55 4E 8370  			DB    F9H, "RUN", 0
	ld.sil	d,l                     ; 0433BA || 	ld.sil	d,l                     ; 043359
	ld	c,(hl)                      ; 0433BC || 	ld	c,(hl)                      ; 04335B
	nop                            ; 0433BD || 	nop                            ; 04335C
	or	d                           ; 0433BE || 	or	d                           ; 04335D || 0433BE B2 52 41 44 8371  			DB    B2H, "RAD"
	ld.sil	b,c                     ; 0433BF || 	ld.sil	b,c                     ; 04335E
	ld	b,h                         ; 0433C1 || 	ld	b,h                         ; 043360
	rst	$30                        ; 0433C2 || 	rst	$30                        ; 043361 || 0433C2 F7 52 45 53 8372  			DB    F7H, "RESTORE"
	ld.sil	b,l                     ; 0433C3 || 	ld.sil	b,l                     ; 043362
	ld	d,e                         ; 0433C5 || 	ld	d,e                         ; 043364
	ld	d,h                         ; 0433C6 || 	ld	d,h                         ; 043365
	ld	c,a                         ; 0433C7 || 	ld	c,a                         ; 043366
	ld.sil	b,l                     ; 0433C8 || 	ld.sil	b,l                     ; 043367
	jp	nz,$474952                  ; 0433CA || 	jp	nz,$474952                  ; 043369 || 0433CA C2 52 49 47 8373  			DB    C2H, "RIGHT$("
	ld	c,b                         ; 0433CE || 	ld	c,b                         ; 04336D
	ld	d,h                         ; 0433CF || 	ld	d,h                         ; 04336E
	inc	h                          ; 0433D0 || 	inc	h                          ; 04336F
	jr	z,$-$4b                     ; 0433D1 || 	jr	z,$-$4b                     ; 043370
	ld.sil	c,(hl)                  ; 0433D3 || 	ld.sil	c,(hl)                  ; 043372
	ld	b,h                         ; 0433D5 || 	ld	b,h                         ; 043374
	nop                            ; 0433D6 || 	nop                            ; 043375
	call	z,$4e4552                 ; 0433D7 || 	call	z,$4e4552                 ; 043376 || 0433D7 CC 52 45 4E 8375  			DB    CCH, "RENUMBER"
	ld	d,l                         ; 0433DB || 	ld	d,l                         ; 04337A
	ld	c,l                         ; 0433DC || 	ld	c,l                         ; 04337B
	ld	b,d                         ; 0433DD || 	ld	b,d                         ; 04337C
	ld	b,l                         ; 0433DE || 	ld	b,l                         ; 04337D
	adc.sil	a,b                    ; 0433DF || 	adc.sil	a,b                    ; 04337E
	ld	d,e                         ; 0433E1 || 	ld	d,e                         ; 043380
	ld	d,h                         ; 0433E2 || 	ld	d,h                         ; 043381
	ld	b,l                         ; 0433E3 || 	ld	b,l                         ; 043382
	ld	d,b                         ; 0433E4 || 	ld	d,b                         ; 043383
	call	$564153                   ; 0433E5 || 	call	$564153                   ; 043384 || 0433E5 CD 53 41 56 8377  			DB    CDH, "SAVE"
	ld	b,l                         ; 0433E9 || 	ld	b,l                         ; 043388
	or	h                           ; 0433EA || 	or	h                           ; 043389 || 0433EA B4 53 47 4E 8378  			DB    B4H, "SGN"
	ld	d,e                         ; 0433EB || 	ld	d,e                         ; 04338A
	ld	b,a                         ; 0433EC || 	ld	b,a                         ; 04338B
	ld	c,(hl)                      ; 0433ED || 	ld	c,(hl)                      ; 04338C
	or	l                           ; 0433EE || 	or	l                           ; 04338D || 0433EE B5 53 49 4E 8379  			DB    B5H, "SIN"
	ld	d,e                         ; 0433EF || 	ld	d,e                         ; 04338E
	ld.lis	c,(hl)                  ; 0433F0 || 	ld.lis	c,(hl)                  ; 04338F
	or	(hl)                        ; 0433F2 || 	or	(hl)                        ; 043391 || 0433F2 B6 53 51 52 8380  			DB    B6H, "SQR"
	ld	d,e                         ; 0433F3 || 	ld	d,e                         ; 043392
	ld	d,c                         ; 0433F4 || 	ld	d,c                         ; 043393
	adc.sil	a,c                    ; 0433F5 || 	adc.sil	a,c                    ; 043394
	ld	d,e                         ; 0433F7 || 	ld	d,e                         ; 043396
	ld	d,b                         ; 0433F8 || 	ld	d,b                         ; 043397
	ld	b,e                         ; 0433F9 || 	ld	b,e                         ; 043398
	jp	$525453                     ; 0433FA || 	jp	$525453                     ; 043399 || 0433FA C3 53 54 52 8382  			DB    C3H, "STR$"
	inc	h                          ; 0433FE || 	inc	h                          ; 04339D
	call	nz,$525453                ; 0433FF || 	call	nz,$525453                ; 04339E || 0433FF C4 53 54 52 8383  			DB    C4H, "STRING$("
	ld.lis	c,(hl)                  ; 043403 || 	ld.lis	c,(hl)                  ; 0433A2
	ld	b,a                         ; 043405 || 	ld	b,a                         ; 0433A4
	inc	h                          ; 043406 || 	inc	h                          ; 0433A5
	jr	z,$-$2a                     ; 043407 || 	jr	z,$-$2a                     ; 0433A6
	ld	d,e                         ; 043409 || 	ld	d,e                         ; 0433A8
	ld	c,a                         ; 04340A || 	ld	c,a                         ; 0433A9
	ld	d,l                         ; 04340B || 	ld	d,l                         ; 0433AA
	ld	c,(hl)                      ; 04340C || 	ld	c,(hl)                      ; 0433AB
	ld	b,h                         ; 04340D || 	ld	b,h                         ; 0433AC
	jp	m,$4f5453                   ; 04340E || 	jp	m,$4f5453                   ; 0433AD || 04340E FA 53 54 4F 8385  			DB    FAH, "STOP", 0
	ld	d,b                         ; 043412 || 	ld	d,b                         ; 0433B1
	nop                            ; 043413 || 	nop                            ; 0433B2
	or	a                           ; 043414 || 	or	a                           ; 0433B3 || 043414 B7 54 41 4E 8386  			DB    B7H, "TAN"
	ld	d,h                         ; 043415 || 	ld	d,h                         ; 0433B4
	ld	b,c                         ; 043416 || 	ld	b,c                         ; 0433B5
	ld	c,(hl)                      ; 043417 || 	ld	c,(hl)                      ; 0433B6
	adc	a,h                        ; 043418 || 	adc	a,h                        ; 0433B7 || 043418 8C 54 48 45 8387  			DB    8CH, "THEN"
	ld	d,h                         ; 043419 || 	ld	d,h                         ; 0433B8
	ld	c,b                         ; 04341A || 	ld	c,b                         ; 0433B9
	ld	b,l                         ; 04341B || 	ld	b,l                         ; 0433BA
	ld	c,(hl)                      ; 04341C || 	ld	c,(hl)                      ; 0433BB
	cp	b                           ; 04341D || 	cp	b                           ; 0433BC || 04341D B8 54 4F    8388  			DB    B8H, "TO"
	ld	d,h                         ; 04341E || 	ld	d,h                         ; 0433BD
	ld	c,a                         ; 04341F || 	ld	c,a                         ; 0433BE
	adc	a,d                        ; 043420 || 	adc	a,d                        ; 0433BF || 043420 8A 54 41 42 8389  			DB    8AH, "TAB("
	ld	d,h                         ; 043421 || 	ld	d,h                         ; 0433C0
	ld	b,c                         ; 043422 || 	ld	b,c                         ; 0433C1
	ld	b,d                         ; 043423 || 	ld	b,d                         ; 0433C2
	jr	z,$-$02                     ; 043424 || 	jr	z,$-$02                     ; 0433C3
	ld	d,h                         ; 043426 || 	ld	d,h                         ; 0433C5
	ld.sil	b,c                     ; 043427 || 	ld.sil	b,c                     ; 0433C6
	ld	b,e                         ; 043429 || 	ld	b,e                         ; 0433C8
	ld	b,l                         ; 04342A || 	ld	b,l                         ; 0433C9
	sub	c                          ; 04342B || 	sub	c                          ; 0433CA || 04342B 91 54 49 4D 8391  			DB    91H, "TIME", 0
	ld	d,h                         ; 04342C || 	ld	d,h                         ; 0433CB
	ld.lis	c,l                     ; 04342D || 	ld.lis	c,l                     ; 0433CC
	ld	b,l                         ; 04342F || 	ld	b,l                         ; 0433CE
	nop                            ; 043430 || 	nop                            ; 0433CF
	cp	c                           ; 043431 || 	cp	c                           ; 0433D0 || 043431 B9 54 52 55 8392  			DB    B9H, "TRUE", 0
	ld	d,h                         ; 043432 || 	ld	d,h                         ; 0433D1
	ld.sil	d,l                     ; 043433 || 	ld.sil	d,l                     ; 0433D2
	ld	b,l                         ; 043435 || 	ld	b,l                         ; 0433D4
	nop                            ; 043436 || 	nop                            ; 0433D5
	ld	d,iyl                       ; 043437 || 	ld	d,iyl                       ; 0433D6 || 043437 FD 55 4E 54 8393  			DB    FDH, "UNTIL"
	ld	c,(hl)                      ; 043439 || 	ld	c,(hl)                      ; 0433D8
	ld	d,h                         ; 04343A || 	ld	d,h                         ; 0433D9
	ld.lis	c,h                     ; 04343B || 	ld.lis	c,h                     ; 0433DA
	cp	d                           ; 04343D || 	cp	d                           ; 0433DC || 04343D BA 55 53 52 8394  			DB    BAH, "USR"
	ld	d,l                         ; 04343E || 	ld	d,l                         ; 0433DD
	ld	d,e                         ; 04343F || 	ld	d,e                         ; 0433DE
	rst.sil	$28                    ; 043440 || 	rst.sil	$28                    ; 0433DF
	ld	d,(hl)                      ; 043442 || 	ld	d,(hl)                      ; 0433E1
	ld	b,h                         ; 043443 || 	ld	b,h                         ; 0433E2
	ld	d,l                         ; 043444 || 	ld	d,l                         ; 0433E3
	cp	e                           ; 043445 || 	cp	e                           ; 0433E4 || 043445 BB 56 41 4C 8396  			DB    BBH, "VAL"
	ld	d,(hl)                      ; 043446 || 	ld	d,(hl)                      ; 0433E5
	ld	b,c                         ; 043447 || 	ld	b,c                         ; 0433E6
	ld	c,h                         ; 043448 || 	ld	c,h                         ; 0433E7
	cp	h                           ; 043449 || 	cp	h                           ; 0433E8 || 043449 BC 56 50 4F 8397  			DB    BCH, "VPOS", 0
	ld	d,(hl)                      ; 04344A || 	ld	d,(hl)                      ; 0433E9
	ld	d,b                         ; 04344B || 	ld	d,b                         ; 0433EA
	ld	c,a                         ; 04344C || 	ld	c,a                         ; 0433EB
	ld	d,e                         ; 04344D || 	ld	d,e                         ; 0433EC
	nop                            ; 04344E || 	nop                            ; 0433ED
	cp	$57                         ; 04344F || 	cp	$57                         ; 0433EE || 04344F FE 57 49 44 8398  			DB    FEH, "WIDTH"
	ld.lis	b,h                     ; 043451 || 	ld.lis	b,h                     ; 0433F0
	ld	d,h                         ; 043453 || 	ld	d,h                         ; 0433F2
	ld	c,b                         ; 043454 || 	ld	c,b                         ; 0433F3
	out	($48),a                    ; 043455 || 	out	($48),a                    ; 0433F4 || 043455 D3 48 49 4D 8399  			DB    D3H, "HIMEM"
	ld.lis	c,l                     ; 043457 || 	ld.lis	c,l                     ; 0433F6
	ld	b,l                         ; 043459 || 	ld	b,l                         ; 0433F8
	ld	c,l                         ; 04345A || 	ld	c,l                         ; 0433F9
	jp	nc,$4d4f4c                  ; 04345B || 	jp	nc,$4d4f4c                  ; 0433FA || 04345B D2 4C 4F 4D 8400  			DB    D2H, "LOMEM"
	ld	b,l                         ; 04345F || 	ld	b,l                         ; 0433FE
	ld	c,l                         ; 043460 || 	ld	c,l                         ; 0433FF
	ret	nc                         ; 043461 || 	ret	nc                         ; 043400 || 043461 D0 50 41 47 8401  			DB    D0H, "PAGE"
	ld	d,b                         ; 043462 || 	ld	d,b                         ; 043401
	ld	b,c                         ; 043463 || 	ld	b,c                         ; 043402
	ld	b,a                         ; 043464 || 	ld	b,a                         ; 043403
	ld	b,l                         ; 043465 || 	ld	b,l                         ; 043404
	rst	$08                        ; 043466 || 	rst	$08                        ; 043405 || 043466 CF 50 54 52 8402  			DB    CFH, "PTR"
	ld	d,b                         ; 043467 || 	ld	d,b                         ; 043406
	ld	d,h                         ; 043468 || 	ld	d,h                         ; 043407
	pop.sil	de                     ; 043469 || 	pop.sil	de                     ; 043408
	ld	d,h                         ; 04346B || 	ld	d,h                         ; 04340A
	ld.lis	c,l                     ; 04346C || 	ld.lis	c,l                     ; 04340B
	ld	b,l                         ; 04346E || 	ld	b,l                         ; 04340D
	ld	bc,$73694d                  ; 04346F || 	ld	bc,$73694d                  ; 04340E || 04346F 01 4D 69 73 8407  			DB    01H, "Missing "
	ld	(hl),e                      ; 043473 || 	ld	(hl),e                      ; 043412
	ld	l,c                         ; 043474 || 	ld	l,c                         ; 043413
	ld	l,(hl)                      ; 043475 || 	ld	l,(hl)                      ; 043414
	ld	h,a                         ; 043476 || 	ld	h,a                         ; 043415
	jr	nz,$+$04                    ; 043477 || 	jr	nz,$+$04                    ; 043416
	ld	c,(hl)                      ; 043479 || 	ld	c,(hl)                      ; 043418
	ld	l,a                         ; 04347A || 	ld	l,a                         ; 043419
	jr	nz,$+$75                    ; 04347B || 	jr	nz,$+$75                    ; 04341A
	ld	(hl),l                      ; 04347D || 	ld	(hl),l                      ; 04341C
	ld	h,e                         ; 04347E || 	ld	h,e                         ; 04341D
	ld	l,b                         ; 04347F || 	ld	l,b                         ; 04341E
	jr	nz,$+$05                    ; 043480 || 	jr	nz,$+$05                    ; 04341F
	ld	b,d                         ; 043482 || 	ld	b,d                         ; 043421
	ld	h,c                         ; 043483 || 	ld	h,c                         ; 043422
	ld	h,h                         ; 043484 || 	ld	h,h                         ; 043423
	jr	nz,$+$06                    ; 043485 || 	jr	nz,$+$06                    ; 043424
	jr	nz,$+$74                    ; 043487 || 	jr	nz,$+$74                    ; 043426
	ld	h,c                         ; 043489 || 	ld	h,c                         ; 043428
	ld	l,(hl)                      ; 04348A || 	ld	l,(hl)                      ; 043429
	ld	h,a                         ; 04348B || 	ld	h,a                         ; 04342A
	ld	h,l                         ; 04348C || 	ld	h,l                         ; 04342B
	dec	b                          ; 04348D || 	dec	b                          ; 04342C || 04348D 05 76 61 72 8411  			DB    05H, "variable"
	halt                           ; 04348E || 	halt                           ; 04342D
	ld	h,c                         ; 04348F || 	ld	h,c                         ; 04342E
	ld	(hl),d                      ; 043490 || 	ld	(hl),d                      ; 04342F
	ld	l,c                         ; 043491 || 	ld	l,c                         ; 043430
	ld	h,c                         ; 043492 || 	ld	h,c                         ; 043431
	ld	h,d                         ; 043493 || 	ld	h,d                         ; 043432
	ld	l,h                         ; 043494 || 	ld	l,h                         ; 043433
	ld	h,l                         ; 043495 || 	ld	h,l                         ; 043434
	ld	b,$4f                       ; 043496 || 	ld	b,$4f                       ; 043435 || 043496 06 4F 75 74 8412  			DB    06H, "Out of"
	ld	(hl),l                      ; 043498 || 	ld	(hl),l                      ; 043437
	ld	(hl),h                      ; 043499 || 	ld	(hl),h                      ; 043438
	jr	nz,$+$71                    ; 04349A || 	jr	nz,$+$71                    ; 043439
	ld	h,(hl)                      ; 04349C || 	ld	h,(hl)                      ; 04343B
	rlca                           ; 04349D || 	rlca                           ; 04343C || 04349D 07 4E 6F 20 8413  			DB    07H, "No "
	ld	c,(hl)                      ; 04349E || 	ld	c,(hl)                      ; 04343D
	ld	l,a                         ; 04349F || 	ld	l,a                         ; 04343E
	jr	nz,$+$0a                    ; 0434A0 || 	jr	nz,$+$0a                    ; 04343F
	jr	nz,$+$75                    ; 0434A2 || 	jr	nz,$+$75                    ; 043441
	ld	(hl),b                      ; 0434A4 || 	ld	(hl),b                      ; 043443
	ld	h,c                         ; 0434A5 || 	ld	h,c                         ; 043444
	ld	h,e                         ; 0434A6 || 	ld	h,e                         ; 043445
	ld	h,l                         ; 0434A7 || 	ld	h,l                         ; 043446
	rst	$38                        ; 0434A8 || 	rst	$38                        ; 043447 || 0434A8 FF FF       8417  			DW    -1
	rst	$38                        ; 0434A9 || 	rst	$38                        ; 043448
	rlca                           ; 0434AA || 	rlca                           ; 043449 || 0434AA 07 72 6F 6F 8421  ERRWDS:			DB    7, "room", 0		;  0: No room
	ld	(hl),d                      ; 0434AB || 	ld	(hl),d                      ; 04344A
	ld	l,a                         ; 0434AC || 	ld	l,a                         ; 04344B
	ld	l,a                         ; 0434AD || 	ld	l,a                         ; 04344C
	ld	l,l                         ; 0434AE || 	ld	l,l                         ; 04344D
	nop                            ; 0434AF || 	nop                            ; 04344E
	ld	b,$04                       ; 0434B0 || 	ld	b,$04                       ; 04344F || 0434B0 06 04 00    8422  			DB    6, 4, 0			;  1: Out of range
	nop                            ; 0434B2 || 	nop                            ; 043451
	nop                            ; 0434B3 || 	nop                            ; 043452 || 0434B3 00          8423  			DB    0				;  2: *
	nop                            ; 0434B4 || 	nop                            ; 043453 || 0434B4 00          8424  			DB    0				;  3: *
	ld	c,l                         ; 0434B5 || 	ld	c,l                         ; 043454 || 0434B5 4D 69 73 74 8425  			DB    "Mistake", 0		;  4: Mistake
	ld	l,c                         ; 0434B6 || 	ld	l,c                         ; 043455
	ld	(hl),e                      ; 0434B7 || 	ld	(hl),e                      ; 043456
	ld	(hl),h                      ; 0434B8 || 	ld	(hl),h                      ; 043457
	ld	h,c                         ; 0434B9 || 	ld	h,c                         ; 043458
	ld	l,e                         ; 0434BA || 	ld	l,e                         ; 043459
	ld	h,l                         ; 0434BB || 	ld	h,l                         ; 04345A
	nop                            ; 0434BC || 	nop                            ; 04345B
	ld	bc,$54002c                  ; 0434BD || 	ld	bc,$54002c                  ; 04345C || 0434BD 01 2C 00    8426  			DB    1, ",", 0			;  5: Missing ,
	ld	a,c                         ; 0434C1 || 	ld	a,c                         ; 043460
	ld	(hl),b                      ; 0434C2 || 	ld	(hl),b                      ; 043461
	ld	h,l                         ; 0434C3 || 	ld	h,l                         ; 043462
	jr	nz,$+$6f                    ; 0434C4 || 	jr	nz,$+$6f                    ; 043463
	ld	l,c                         ; 0434C6 || 	ld	l,c                         ; 043465
	ld	(hl),e                      ; 0434C7 || 	ld	(hl),e                      ; 043466
	ld	l,l                         ; 0434C8 || 	ld	l,l                         ; 043467
	ld	h,c                         ; 0434C9 || 	ld	h,c                         ; 043468
	ld	(hl),h                      ; 0434CA || 	ld	(hl),h                      ; 043469
	ld	h,e                         ; 0434CB || 	ld	h,e                         ; 04346A
	ld	l,b                         ; 0434CC || 	ld	l,b                         ; 04346B
	nop                            ; 0434CD || 	nop                            ; 04346C
	rlca                           ; 0434CE || 	rlca                           ; 04346D || 0434CE 07 A4 00    8428  			DB    7, FN, 0			;  7: No FN
	and	h                          ; 0434CF || 	and	h                          ; 04346E
	nop                            ; 0434D0 || 	nop                            ; 04346F
	nop                            ; 0434D1 || 	nop                            ; 043470 || 0434D1 00          8429  			DB    0				;  8: *
	ld	bc,$030022                  ; 0434D2 || 	ld	bc,$030022                  ; 043471 || 0434D2 01 22 00    8430  			DB    1, 34, 0			;  9: Missing "
	sbc	a,$00                      ; 0434D6 || 	sbc	a,$00                      ; 043475
	sbc	a,$08                      ; 0434D8 || 	sbc	a,$08                      ; 043477 || 0434D8 DE 08 00    8432  			DB    DIM, 8, 0			; 11: DIM space
	nop                            ; 0434DA || 	nop                            ; 043479
	ld	c,(hl)                      ; 0434DB || 	ld	c,(hl)                      ; 04347A || 0434DB 4E 6F 74 20 8433  			DB    "Not ", LOCAL_, 0		; 12: Not LOCAL
	ld	l,a                         ; 0434DC || 	ld	l,a                         ; 04347B
	ld	(hl),h                      ; 0434DD || 	ld	(hl),h                      ; 04347C
	jr	nz,$-$14                    ; 0434DE || 	jr	nz,$-$14                    ; 04347D
	nop                            ; 0434E0 || 	nop                            ; 04347F
	rlca                           ; 0434E1 || 	rlca                           ; 043480 || 0434E1 07 F2 00    8434  			DB    7, PROC, 0		; 13: No PROC
	jp	p,$724100                   ; 0434E2 || 	jp	p,$724100                   ; 043481
	ld	(hl),d                      ; 0434E6 || 	ld	(hl),d                      ; 043485
	ld	h,c                         ; 0434E7 || 	ld	h,c                         ; 043486
	ld	a,c                         ; 0434E8 || 	ld	a,c                         ; 043487
	nop                            ; 0434E9 || 	nop                            ; 043488
	ld	d,e                         ; 0434EA || 	ld	d,e                         ; 043489 || 0434EA 53 75 62 73 8436  			DB    "Subscript", 0		; 15: Subscript
	ld	(hl),l                      ; 0434EB || 	ld	(hl),l                      ; 04348A
	ld	h,d                         ; 0434EC || 	ld	h,d                         ; 04348B
	ld	(hl),e                      ; 0434ED || 	ld	(hl),e                      ; 04348C
	ld	h,e                         ; 0434EE || 	ld	h,e                         ; 04348D
	ld	(hl),d                      ; 0434EF || 	ld	(hl),d                      ; 04348E
	ld	l,c                         ; 0434F0 || 	ld	l,c                         ; 04348F
	ld	(hl),b                      ; 0434F1 || 	ld	(hl),b                      ; 043490
	ld	(hl),h                      ; 0434F2 || 	ld	(hl),h                      ; 043491
	nop                            ; 0434F3 || 	nop                            ; 043492
	ld	d,e                         ; 0434F4 || 	ld	d,e                         ; 043493 || 0434F4 53 79 6E 74 8437  			DB    "Syntax error", 0		; 16: Syntax error
	ld	a,c                         ; 0434F5 || 	ld	a,c                         ; 043494
	ld	l,(hl)                      ; 0434F6 || 	ld	l,(hl)                      ; 043495
	ld	(hl),h                      ; 0434F7 || 	ld	(hl),h                      ; 043496
	ld	h,c                         ; 0434F8 || 	ld	h,c                         ; 043497
	ld	a,b                         ; 0434F9 || 	ld	a,b                         ; 043498
	jr	nz,$+$67                    ; 0434FA || 	jr	nz,$+$67                    ; 043499
	ld	(hl),d                      ; 0434FC || 	ld	(hl),d                      ; 04349B
	ld	(hl),d                      ; 0434FD || 	ld	(hl),d                      ; 04349C
	ld	l,a                         ; 0434FE || 	ld	l,a                         ; 04349D
	ld	(hl),d                      ; 0434FF || 	ld	(hl),d                      ; 04349E
	nop                            ; 043500 || 	nop                            ; 04349F
	ld	b,l                         ; 043501 || 	ld	b,l                         ; 0434A0 || 043501 45 73 63 61 8438  			DB    "Escape", 0		; 17: Escape
	ld	(hl),e                      ; 043502 || 	ld	(hl),e                      ; 0434A1
	ld	h,e                         ; 043503 || 	ld	h,e                         ; 0434A2
	ld	h,c                         ; 043504 || 	ld	h,c                         ; 0434A3
	ld	(hl),b                      ; 043505 || 	ld	(hl),b                      ; 0434A4
	ld	h,l                         ; 043506 || 	ld	h,l                         ; 0434A5
	nop                            ; 043507 || 	nop                            ; 0434A6
	ld	b,h                         ; 043508 || 	ld	b,h                         ; 0434A7 || 043508 44 69 76 69 8439  			DB    "Division by zero", 0	; 18: Division by zero
	ld	l,c                         ; 043509 || 	ld	l,c                         ; 0434A8
	halt                           ; 04350A || 	halt                           ; 0434A9
	ld	l,c                         ; 04350B || 	ld	l,c                         ; 0434AA
	ld	(hl),e                      ; 04350C || 	ld	(hl),e                      ; 0434AB
	ld	l,c                         ; 04350D || 	ld	l,c                         ; 0434AC
	ld	l,a                         ; 04350E || 	ld	l,a                         ; 0434AD
	ld	l,(hl)                      ; 04350F || 	ld	l,(hl)                      ; 0434AE
	jr	nz,$+$64                    ; 043510 || 	jr	nz,$+$64                    ; 0434AF
	ld	a,c                         ; 043512 || 	ld	a,c                         ; 0434B1
	jr	nz,$+$7c                    ; 043513 || 	jr	nz,$+$7c                    ; 0434B2
	ld	h,l                         ; 043515 || 	ld	h,l                         ; 0434B4
	ld	(hl),d                      ; 043516 || 	ld	(hl),d                      ; 0434B5
	ld	l,a                         ; 043517 || 	ld	l,a                         ; 0434B6
	nop                            ; 043518 || 	nop                            ; 0434B7
	ld	d,e                         ; 043519 || 	ld	d,e                         ; 0434B8 || 043519 53 74 72 69 8440  			DB    "String too long", 0	; 19: String too long
	ld	(hl),h                      ; 04351A || 	ld	(hl),h                      ; 0434B9
	ld	(hl),d                      ; 04351B || 	ld	(hl),d                      ; 0434BA
	ld	l,c                         ; 04351C || 	ld	l,c                         ; 0434BB
	ld	l,(hl)                      ; 04351D || 	ld	l,(hl)                      ; 0434BC
	ld	h,a                         ; 04351E || 	ld	h,a                         ; 0434BD
	jr	nz,$+$76                    ; 04351F || 	jr	nz,$+$76                    ; 0434BE
	ld	l,a                         ; 043521 || 	ld	l,a                         ; 0434C0
	ld	l,a                         ; 043522 || 	ld	l,a                         ; 0434C1
	jr	nz,$+$6e                    ; 043523 || 	jr	nz,$+$6e                    ; 0434C2
	ld	l,a                         ; 043525 || 	ld	l,a                         ; 0434C4
	ld	l,(hl)                      ; 043526 || 	ld	l,(hl)                      ; 0434C5
	ld	h,a                         ; 043527 || 	ld	h,a                         ; 0434C6
	nop                            ; 043528 || 	nop                            ; 0434C7
	ld	d,h                         ; 043529 || 	ld	d,h                         ; 0434C8 || 043529 54 6F 6F 20 8441  			DB    "Too big", 0		; 20: Too big
	ld	l,a                         ; 04352A || 	ld	l,a                         ; 0434C9
	ld	l,a                         ; 04352B || 	ld	l,a                         ; 0434CA
	jr	nz,$+$64                    ; 04352C || 	jr	nz,$+$64                    ; 0434CB
	ld	l,c                         ; 04352E || 	ld	l,c                         ; 0434CD
	ld	h,a                         ; 04352F || 	ld	h,a                         ; 0434CE
	nop                            ; 043530 || 	nop                            ; 0434CF
	dec	l                          ; 043531 || 	dec	l                          ; 0434D0 || 043531 2D 76 65 20 8442  			DB    "-ve root", 0		; 21: -ve root
	halt                           ; 043532 || 	halt                           ; 0434D1
	ld	h,l                         ; 043533 || 	ld	h,l                         ; 0434D2
	jr	nz,$+$74                    ; 043534 || 	jr	nz,$+$74                    ; 0434D3
	ld	l,a                         ; 043536 || 	ld	l,a                         ; 0434D5
	ld	l,a                         ; 043537 || 	ld	l,a                         ; 0434D6
	ld	(hl),h                      ; 043538 || 	ld	(hl),h                      ; 0434D7
	nop                            ; 043539 || 	nop                            ; 0434D8
	ld	c,h                         ; 04353A || 	ld	c,h                         ; 0434D9 || 04353A 4C 6F 67 04 8443  			DB    "Log", 4, 0		; 22: Log range
	ld	l,a                         ; 04353B || 	ld	l,a                         ; 0434DA
	ld	h,a                         ; 04353C || 	ld	h,a                         ; 0434DB
	inc	b                          ; 04353D || 	inc	b                          ; 0434DC
	nop                            ; 04353E || 	nop                            ; 0434DD
	ld	b,c                         ; 04353F || 	ld	b,c                         ; 0434DE || 04353F 41 63 63 75 8444  			DB    "Accuracy lost", 0	; 23: Accuracy lost
	ld	h,e                         ; 043540 || 	ld	h,e                         ; 0434DF
	ld	h,e                         ; 043541 || 	ld	h,e                         ; 0434E0
	ld	(hl),l                      ; 043542 || 	ld	(hl),l                      ; 0434E1
	ld	(hl),d                      ; 043543 || 	ld	(hl),d                      ; 0434E2
	ld	h,c                         ; 043544 || 	ld	h,c                         ; 0434E3
	ld	h,e                         ; 043545 || 	ld	h,e                         ; 0434E4
	ld	a,c                         ; 043546 || 	ld	a,c                         ; 0434E5
	jr	nz,$+$6e                    ; 043547 || 	jr	nz,$+$6e                    ; 0434E6
	ld	l,a                         ; 043549 || 	ld	l,a                         ; 0434E8
	ld	(hl),e                      ; 04354A || 	ld	(hl),e                      ; 0434E9
	ld	(hl),h                      ; 04354B || 	ld	(hl),h                      ; 0434EA
	nop                            ; 04354C || 	nop                            ; 0434EB
	ld	b,l                         ; 04354D || 	ld	b,l                         ; 0434EC || 04354D 45 78 70 04 8445  			DB    "Exp", 4, 0		; 24: Exp range
	ld	a,b                         ; 04354E || 	ld	a,b                         ; 0434ED
	ld	(hl),b                      ; 04354F || 	ld	(hl),b                      ; 0434EE
	inc	b                          ; 043550 || 	inc	b                          ; 0434EF
	nop                            ; 043551 || 	nop                            ; 0434F0
	nop                            ; 043552 || 	nop                            ; 0434F1 || 043552 00          8446  			DB    0				; 25: *
	ld	(bc),a                      ; 043553 || 	ld	(bc),a                      ; 0434F2 || 043553 02 05 00    8447  			DB    2, 5, 0			; 26: No such variable
	dec	b                          ; 043554 || 	dec	b                          ; 0434F3
	nop                            ; 043555 || 	nop                            ; 0434F4
	ld	bc,$030029                  ; 043556 || 	ld	bc,$030029                  ; 0434F5 || 043556 01 29 00    8448  			DB    1, ")", 0			; 27: Missing )
	ld	c,b                         ; 04355A || 	ld	c,b                         ; 0434F9
	ld	b,l                         ; 04355B || 	ld	b,l                         ; 0434FA
	ld	e,b                         ; 04355C || 	ld	e,b                         ; 0434FB
	nop                            ; 04355D || 	nop                            ; 0434FC
	ld	(bc),a                      ; 04355E || 	ld	(bc),a                      ; 0434FD || 04355E 02 A4 2F F2 8450  			DB    2, FN, "/", PROC, 0	; 29: No such FN/PROC
	and	h                          ; 04355F || 	and	h                          ; 0434FE
	cpl                            ; 043560 || 	cpl                            ; 0434FF
	jp	p,$630300                   ; 043561 || 	jp	p,$630300                   ; 043500
	ld	h,c                         ; 043565 || 	ld	h,c                         ; 043504
	ld	l,h                         ; 043566 || 	ld	l,h                         ; 043505
	ld	l,h                         ; 043567 || 	ld	l,h                         ; 043506
	nop                            ; 043568 || 	nop                            ; 043507
	ld	b,c                         ; 043569 || 	ld	b,c                         ; 043508 || 043569 41 72 67 75 8452  			DB    "Arguments", 0		; 31: Arguments
	ld	(hl),d                      ; 04356A || 	ld	(hl),d                      ; 043509
	ld	h,a                         ; 04356B || 	ld	h,a                         ; 04350A
	ld	(hl),l                      ; 04356C || 	ld	(hl),l                      ; 04350B
	ld	l,l                         ; 04356D || 	ld	l,l                         ; 04350C
	ld	h,l                         ; 04356E || 	ld	h,l                         ; 04350D
	ld	l,(hl)                      ; 04356F || 	ld	l,(hl)                      ; 04350E
	ld	(hl),h                      ; 043570 || 	ld	(hl),h                      ; 04350F
	ld	(hl),e                      ; 043571 || 	ld	(hl),e                      ; 043510
	nop                            ; 043572 || 	nop                            ; 043511
	rlca                           ; 043573 || 	rlca                           ; 043512 || 043573 07 E3 00    8453  			DB    7, FOR, 0			; 32: No FOR
	ex	(sp),hl                     ; 043574 || 	ex	(sp),hl                     ; 043513
	nop                            ; 043575 || 	nop                            ; 043514
	ld	b,e                         ; 043576 || 	ld	b,e                         ; 043515 || 043576 43 61 6E 27 8454  			DB    "Can't match ", FOR, 0	; 33: Can't match FOR
	ld	h,c                         ; 043577 || 	ld	h,c                         ; 043516
	ld	l,(hl)                      ; 043578 || 	ld	l,(hl)                      ; 043517
	daa                            ; 043579 || 	daa                            ; 043518
	ld	(hl),h                      ; 04357A || 	ld	(hl),h                      ; 043519
	jr	nz,$+$6f                    ; 04357B || 	jr	nz,$+$6f                    ; 04351A
	ld	h,c                         ; 04357D || 	ld	h,c                         ; 04351C
	ld	(hl),h                      ; 04357E || 	ld	(hl),h                      ; 04351D
	ld	h,e                         ; 04357F || 	ld	h,e                         ; 04351E
	ld	l,b                         ; 043580 || 	ld	l,b                         ; 04351F
	jr	nz,$-$1b                    ; 043581 || 	jr	nz,$-$1b                    ; 043520
	nop                            ; 043583 || 	nop                            ; 043522
	ex	(sp),hl                     ; 043584 || 	ex	(sp),hl                     ; 043523 || 043584 E3 20 05 00 8455  			DB    FOR, " ", 5, 0		; 34: FOR variable
	jr	nz,$+$07                    ; 043585 || 	jr	nz,$+$07                    ; 043524
	nop                            ; 043587 || 	nop                            ; 043526
	nop                            ; 043588 || 	nop                            ; 043527 || 043588 00          8456  			DB    0				; 35: *
	rlca                           ; 043589 || 	rlca                           ; 043528 || 043589 07 B8 00    8457  			DB    7, TO, 0			; 36: No TO
	cp	b                           ; 04358A || 	cp	b                           ; 043529
	nop                            ; 04358B || 	nop                            ; 04352A
	nop                            ; 04358C || 	nop                            ; 04352B || 04358C 00          8458  			DB    0				; 37: *
	rlca                           ; 04358D || 	rlca                           ; 04352C || 04358D 07 E4 00    8459  			DB    7, GOSUB, 0		; 38: No GOSUB
	call	po,$20ee00                ; 04358E || 	call	po,$20ee00                ; 04352D
	ld	(hl),e                      ; 043592 || 	ld	(hl),e                      ; 043531
	ld	a,c                         ; 043593 || 	ld	a,c                         ; 043532
	ld	l,(hl)                      ; 043594 || 	ld	l,(hl)                      ; 043533
	ld	(hl),h                      ; 043595 || 	ld	(hl),h                      ; 043534
	ld	h,c                         ; 043596 || 	ld	h,c                         ; 043535
	ld	a,b                         ; 043597 || 	ld	a,b                         ; 043536
	nop                            ; 043598 || 	nop                            ; 043537
	xor	$04                        ; 043599 || 	xor	$04                        ; 043538 || 043599 EE 04 00    8461  			DB    ON_, 4, 0			; 40: ON range
	nop                            ; 04359B || 	nop                            ; 04353A
	ld	(bc),a                      ; 04359C || 	ld	(bc),a                      ; 04353B || 04359C 02 6C 69 6E 8462  			DB    2, "line", 0		; 41: No such line
	ld	l,h                         ; 04359D || 	ld	l,h                         ; 04353C
	ld	l,c                         ; 04359E || 	ld	l,c                         ; 04353D
	ld	l,(hl)                      ; 04359F || 	ld	l,(hl)                      ; 04353E
	ld	h,l                         ; 0435A0 || 	ld	h,l                         ; 04353F
	nop                            ; 0435A1 || 	nop                            ; 043540
	ld	b,$20                       ; 0435A2 || 	ld	b,$20                       ; 043541 || 0435A2 06 20 DC 00 8463  			DB    6, " ", DATA_, 0		; 42: Out of DATA
	call	c,$f50700                 ; 0435A4 || 	call	c,$f50700                 ; 043543
	nop                            ; 0435A8 || 	nop                            ; 043547
	nop                            ; 0435A9 || 	nop                            ; 043548 || 0435A9 00          8465  			DB    0				; 44: *
	ld	bc,$cd0023                  ; 0435AA || 	ld	bc,$cd0023                  ; 043549 || 0435AA 01 23 00    8466  			DB    1, "#", 0			; 45: Missing #
	xor	h                          ; 0435AE
	jr	c,$+$06                     ; 0435AF || 	jr	c,$+$06                     ; 04354E
	call	$043cb4                   ; 0435B1 || 	call	$043c53                   ; 043550 || 0435B1 CD B4 3C 04 8473  			CALL    DLPAIR			; Get the line number pair - HL: BASIC program address, BC: second number (or 0 if missing)
	ld	a,(hl)                      ; 0435B5 || 	ld	a,(hl)                      ; 043554 || 0435B5 7E          8474  DELET1:			LD      A,(HL)			; Check whether it's the last line
	or	a                           ; 0435B6 || 	or	a                           ; 043555 || 0435B6 B7          8475  			OR      A
	jp	z,$04363e                   ; 0435B7 || 	jp	z,$0435dd                   ; 043556 || 0435B7 CA 3E 36 04 8476  			JP      Z,WARMNC		; Yes, so do nothing
	inc	hl                         ; 0435BB || 	inc	hl                         ; 04355A || 0435BB 23          8477  			INC     HL			; Skip the line length byte
	ld	de,$000000                  ; 0435BC || 	ld	de,$000000                  ; 04355B || 0435BC 11 00 00 00 8478  			LD	DE, 0			; Clear DE
	ld	e,(hl)                      ; 0435C0 || 	ld	e,(hl)                      ; 04355F || 0435C0 5E          8479  			LD      E,(HL)			; Fetch the line number in DE
	inc	hl                         ; 0435C1 || 	inc	hl                         ; 043560 || 0435C1 23          8480  			INC     HL
	ld	d,(hl)                      ; 0435C2 || 	ld	d,(hl)                      ; 043561 || 0435C2 56          8481  			LD      D,(HL)
	ld	a,d                         ; 0435C3 || 	ld	a,d                         ; 043562 || 0435C3 7A          8482  			LD      A,D			; If the line number is zero then
	or	e                           ; 0435C4 || 	or	e                           ; 043563 || 0435C4 B3          8483  			OR      E
	jr	z,$+$1f                     ; 0435C5 || 	jr	z,$+$1f                     ; 043564 || 0435C5 28 1D       8484  			JR      Z,CLOOP1        	; Do nothing
	dec	hl                         ; 0435C7 || 	dec	hl                         ; 043566 || 0435C7 2B          8485  			DEC     HL			; Decrement BASIC program pointer back to length
	dec	hl                         ; 0435C8 || 	dec	hl                         ; 043567 || 0435C8 2B          8486  			DEC     HL
	ex	de,hl                       ; 0435C9 || 	ex	de,hl                       ; 043568 || 0435C9 EB          8487  			EX      DE,HL			; Check if we've gone past the terminating line
	scf                            ; 0435CA || 	scf                            ; 043569 || 0435CA 37          8488  			SCF
	sbc	hl,bc                      ; 0435CB || 	sbc	hl,bc                      ; 04356A || 0435CB ED 42       8489  			SBC     HL,BC
	ex	de,hl                       ; 0435CD || 	ex	de,hl                       ; 04356C || 0435CD EB          8490  			EX      DE,HL
	jr	nc,$+$70                    ; 0435CE || 	jr	nc,$+$70                    ; 04356D || 0435CE 30 6E       8491  			JR      NC,WARMNC		; Yes, so exit back to BASIC prompt
	push	bc                        ; 0435D0 || 	push	bc                        ; 04356F || 0435D0 C5          8492  			PUSH    BC
	call	$043863                   ; 0435D1 || 	call	$043802                   ; 043570 || 0435D1 CD 63 38 04 8493  			CALL    DEL			; Delete the line pointed to by HL
	pop	bc                         ; 0435D5 || 	pop	bc                         ; 043574 || 0435D5 C1          8494  			POP     BC
	jr	$-$21                       ; 0435D6 || 	jr	$-$21                       ; 043575 || 0435D6 18 DD       8495  			JR      DELET1			; And loop round to the next line
	inc	iy                         ; 0435D8 || 	inc	iy                         ; 043577 || 0435D8 FD 23       8499  LISTO:			INC     IY              	; Skip "O" byte
	call	$04031a                   ; 0435DA || 	call	$04030a                   ; 043579 || 0435DA CD 1A 03 04 8500  			CALL    EXPRI			; Get expr
	exx                            ; 0435DE || 	exx                            ; 04357D || 0435DE D9          8501  			EXX
	ld	a,l                         ; 0435DF || 	ld	a,l                         ; 04357E || 0435DF 7D          8502  			LD      A,L
	ld	($044d40),a                 ; 0435E0 || 	ld	($044d40),a                 ; 04357F || 0435E0 32 40 4D 04 8503  			LD      (LISTON),A		; Store in LISTON sysvar
	jp	$0430e1                     ; 0435E4 || 	jp	$043080                     ; 043583 || 0435E4 C3 E1 30 04 8504  CLOOP1:			JP      CLOOP
	cp	$4f                         ; 0435E8 || 	cp	$4f                         ; 043587 || 0435E8 FE 4F       8512  LIST_:			CP      'O'			; Check for O (LISTO)
	jr	z,$-$12                     ; 0435EA || 	jr	z,$-$12                     ; 043589 || 0435EA 28 EC       8513  			JR      Z,LISTO			; and jump to LISTO if zero
	call	$043cb4                   ; 0435EC || 	call	$043c53                   ; 04358B || 0435EC CD B4 3C 04 8514  			CALL    DLPAIR			; Get the line number pair - HL: BASIC program address, BC: second number (or 0 if missing)
	call	$040a83                   ; 0435F0 || 	call	$040a70                   ; 04358F || 0435F0 CD 83 0A 04 8515  			CALL    NXT			; Skip space
	cp	$e7                         ; 0435F4 || 	cp	$e7                         ; 043593 || 0435F4 FE E7       8516  			CP      TIF             	; Check for IF clause (token IF)
	ld	a,$00                       ; 0435F6 || 	ld	a,$00                       ; 043595 || 0435F6 3E 00       8517  			LD      A,0             	; Initialise the IF clause string length
	jr	nz,$+$19                    ; 0435F8 || 	jr	nz,$+$19                    ; 043597 || 0435F8 20 17       8518  			JR      NZ,LISTB		; If there is no IF clause, skip the next bit
	inc	iy                         ; 0435FA || 	inc	iy                         ; 043599 || 0435FA FD 23       8520  			INC     IY              	; Skip the IF token
	call	$040a83                   ; 0435FC || 	call	$040a70                   ; 04359B || 0435FC CD 83 0A 04 8521  			CALL    NXT             	; And skip any spaces
	ex	de,hl                       ; 043600 || 	ex	de,hl                       ; 04359F || 043600 EB          8522  			EX      DE,HL			; DE: Address in memory
	push	iy                        ; 043601 || 	push	iy                        ; 0435A0 || 043601 FD E5       8523  			PUSH    IY			; LD IY, HL
	pop	hl                         ; 043603 || 	pop	hl                         ; 0435A2 || 043603 E1          8524  			POP     HL              	; HL is now the address of the tokenised line
	ld	a,$0d                       ; 043604 || 	ld	a,$0d                       ; 0435A3 || 043604 3E 0D       8525  			LD      A,CR
	push	bc                        ; 043606 || 	push	bc                        ; 0435A5 || 043606 C5          8526  			PUSH    BC			; Stack the second line number arg
	ld	bc,$000100                  ; 043607 || 	ld	bc,$000100                  ; 0435A6 || 043607 01 00 01 00 8527  			LD      BC,256
	cpir                           ; 04360B || 	cpir                           ; 0435AA || 04360B ED B1       8528  			CPIR                    	; Locate CR byte
	ld	a,c                         ; 04360D || 	ld	a,c                         ; 0435AC || 04360D 79          8529  			LD      A,C
	cpl                            ; 04360E || 	cpl                            ; 0435AD || 04360E 2F          8530  			CPL                    	 	; A: Substring length (of IF clause)
	pop	bc                         ; 04360F || 	pop	bc                         ; 0435AE || 04360F C1          8531  			POP     BC			; Restore the second line number arg
	ex	de,hl                       ; 043610 || 	ex	de,hl                       ; 0435AF || 043610 EB          8532  			EX      DE,HL			; HL: Address in memory
	ld	e,a                         ; 043611 || 	ld	e,a                         ; 0435B0 || 043611 5F          8534  LISTB:			LD      E,A             	; E: IF clause string length
	ld	a,b                         ; 043612 || 	ld	a,b                         ; 0435B1 || 043612 78          8535  			LD      A,B			; Check whether a second line number was passed (BC!=0)
	or	c                           ; 043613 || 	or	c                           ; 0435B2 || 043613 B1          8536  			OR      C
	jr	nz,$+$03                    ; 043614 || 	jr	nz,$+$03                    ; 0435B3 || 043614 20 01       8537  			JR      NZ,LISTA		; If there isn't a second line number
	dec	bc                         ; 043616 || 	dec	bc                         ; 0435B5 || 043616 0B          8538  			DEC     BC			; then we set it to the maximum of 65535
	exx                            ; 043617 || 	exx                            ; 0435B6 || 043617 D9          8540  LISTA:			EXX
	ld	ix,$044d40                  ; 043618 || 	ld	ix,$044d40                  ; 0435B7 || 043618 DD 21 40 4D 8541  			LD      IX,LISTON		; IX : Pointer to the LISTON (LISTO and OPT) sysvar
	ld	bc,$000000                  ; 04361D || 	ld	bc,$000000                  ; 0435BC || 04361D 01 00 00 00 8542  			LD      BC,0            	; BC': Indentation counter (C: FOR/NEXT, B: REPEAT/UNTIL)
	exx                            ; 043621 || 	exx                            ; 0435C0 || 043621 D9          8543  			EXX
	ld	a,$14                       ; 043622 || 	ld	a,$14                       ; 0435C1 || 043622 3E 14       8544  			LD      A,20			; Number of lines to list
	push	bc                        ; 043624 || 	push	bc                        ; 0435C3 || 043624 C5          8546  LISTC:			PUSH    BC              	; Save second line number
	push	de                        ; 043625 || 	push	de                        ; 0435C4 || 043625 D5          8547  			PUSH    DE              	; Save IF clause length
	push	hl                        ; 043626 || 	push	hl                        ; 0435C5 || 043626 E5          8548  			PUSH    HL              	; Save BASIC program counter
	ex	af,af'                      ; 043627 || 	ex	af,af'                      ; 0435C6 || 043627 08          8549  			EX      AF,AF'
	ld	a,(hl)                      ; 043628 || 	ld	a,(hl)                      ; 0435C7 || 043628 7E          8558  			LD      A,(HL)			; Check for end of program marker
	or	a                           ; 043629 || 	or	a                           ; 0435C8 || 043629 B7          8559  			OR      A			; If found
	jr	z,$+$14                     ; 04362A || 	jr	z,$+$14                     ; 0435C9 || 04362A 28 12       8560  			JR      Z,WARMNC		; Jump to WARMNC (F=NC, so will jump to WARM)
	ld	a,e                         ; 04362C || 	ld	a,e                         ; 0435CB || 04362C 7B          8564  			LD      A,E             	; A: IF clause length
	inc	hl                         ; 04362D || 	inc	hl                         ; 0435CC || 04362D 23          8565  			INC     HL			; Skip the length byte
	ld	de,$000000                  ; 04362E || 	ld	de,$000000                  ; 0435CD || 04362E 11 00 00 00 8566  			LD	DE,0			; Clear DE
	ld	e,(hl)                      ; 043632 || 	ld	e,(hl)                      ; 0435D1 || 043632 5E          8567  			LD      E,(HL)			; Fetch the line number in DE
	inc	hl                         ; 043633 || 	inc	hl                         ; 0435D2 || 043633 23          8568  			INC     HL
	ld	d,(hl)                      ; 043634 || 	ld	d,(hl)                      ; 0435D3 || 043634 56          8569  			LD      D,(HL)
	dec	hl                         ; 043635 || 	dec	hl                         ; 0435D4 || 043635 2B          8570  			DEC     HL			; Step HL back to the length byte
	dec	hl                         ; 043636 || 	dec	hl                         ; 0435D5 || 043636 2B          8571  			DEC     HL
	push	de                        ; 043637 || 	push	de                        ; 0435D6 || 043637 D5          8572  			PUSH    DE             	 	; Push the line number on the stack
	ex	de,hl                       ; 043638 || 	ex	de,hl                       ; 0435D7 || 043638 EB          8573  			EX      DE,HL			; HL: line number
	scf                            ; 043639 || 	scf                            ; 0435D8 || 043639 37          8574  			SCF				; Do a 16-bit compare of HL and DE
	sbc	hl,bc                      ; 04363A || 	sbc	hl,bc                      ; 0435D9 || 04363A ED 42       8575  			SBC     HL,BC
	ex	de,hl                       ; 04363C || 	ex	de,hl                       ; 0435DB || 04363C EB          8576  			EX      DE,HL
	pop	de                         ; 04363D || 	pop	de                         ; 0435DC || 04363D D1          8577  			POP     DE              	; Restore the line number
	jp	nc,$0430e0                  ; 04363E || 	jp	nc,$04307f                  ; 0435DD || 04363E D2 E0 30 04 8578  WARMNC:			JP      NC,WARM			; If exceeded the terminating line number then jump to WARM
	ld	c,(hl)                      ; 043642 || 	ld	c,(hl)                      ; 0435E1 || 043642 4E          8579  			LD      C,(HL)          	; C: Line length + 4
	ld	b,a                         ; 043643 || 	ld	b,a                         ; 0435E2 || 043643 47          8580  			LD      B,A             	; B: IF clause length
	ld	a,d                         ; 043644 || 	ld	a,d                         ; 0435E3 || 043644 7A          8584  			LD      A,D			; TODO: What is "UNLISTABLE?"
	or	e                           ; 043645 || 	or	e                           ; 0435E4 || 043645 B3          8585  			OR      E
	jp	z,$0430e1                   ; 043646 || 	jp	z,$043080                   ; 0435E5 || 043646 CA E1 30 04 8586  			JP      Z,CLOOP
	inc	hl                         ; 04364A || 	inc	hl                         ; 0435E9 || 04364A 23          8590  			INC     HL			; Skip the length
	inc	hl                         ; 04364B || 	inc	hl                         ; 0435EA || 04364B 23          8591  			INC     HL			; Skip the line number
	inc	hl                         ; 04364C || 	inc	hl                         ; 0435EB || 04364C 23          8592  			INC     HL              	; HL: Address of the tokenised BASIC line
	dec	c                          ; 04364D || 	dec	c                          ; 0435EC || 04364D 0D          8593  			DEC     C			;  C: Line length
	dec	c                          ; 04364E || 	dec	c                          ; 0435ED || 04364E 0D          8594  			DEC     C
	dec	c                          ; 04364F || 	dec	c                          ; 0435EE || 04364F 0D          8595  			DEC     C
	dec	c                          ; 043650 || 	dec	c                          ; 0435EF || 043650 0D          8596  			DEC     C
	push	de                        ; 043651 || 	push	de                        ; 0435F0 || 043651 D5          8597  			PUSH    DE              	; Save the line number
	push	hl                        ; 043652 || 	push	hl                        ; 0435F1 || 043652 E5          8598  			PUSH    HL              	; Save the BASIC program address
	xor	a                          ; 043653 || 	xor	a                          ; 0435F2 || 043653 AF          8599  			XOR     A               	;
	cp	b                           ; 043654 || 	cp	b                           ; 0435F3 || 043654 B8          8600  			CP      B              	 	; Check for an IF clause (B!=0)
	push	iy                        ; 043655 || 	push	iy                        ; 0435F4 || 043655 FD E5       8601  			PUSH    IY			; LD IY, DE
	pop	de                         ; 043657 || 	pop	de                         ; 0435F6 || 043657 D1          8602  			POP     DE              	; DE: Address of the IF clause string in the input buffer
	call	nz,$040795                ; 043658 || 	call	nz,$040785                ; 0435F7 || 043658 C4 95 07 04 8603  			CALL    NZ,SEARCH      		; If there is an IF clause (B!=0) then search for it
	pop	hl                         ; 04365C || 	pop	hl                         ; 0435FB || 04365C E1          8604  			POP     HL              	; Restore BASIC program address
	pop	de                         ; 04365D || 	pop	de                         ; 0435FC || 04365D D1          8605  			POP     DE              	; Restore line number
	push	iy                        ; 04365E || 	push	iy                        ; 0435FD || 04365E FD E5       8606  			PUSH    IY
	call	z,$0438f3                 ; 043660 || 	call	z,$043892                 ; 0435FF || 043660 CC F3 38 04 8607  			CALL    Z,LISTIT        	; List if no IF clause OR there is an IF clause match
	pop	iy                         ; 043664 || 	pop	iy                         ; 043603 || 043664 FD E1       8608  			POP     IY
	ex	af,af'                      ; 043666 || 	ex	af,af'                      ; 043605 || 043666 08          8610  			EX      AF,AF'
	dec	a                          ; 043667 || 	dec	a                          ; 043606 || 043667 3D          8611  			DEC     A			; Decrement line list counter
	call	$043fd2                   ; 043668 || 	call	$043f71                   ; 043607 || 043668 CD D2 3F 04 8612  			CALL    LTRAP			; TODO: This destroys A - is this a bug I've introduced in LTRAP?
	pop	hl                         ; 04366C || 	pop	hl                         ; 04360B || 04366C E1          8613  			POP     HL             	 	; Restore BASIC program address to beginning of line
	ld	de,$000000                  ; 04366D || 	ld	de,$000000                  ; 04360C || 04366D 11 00 00 00 8614  			LD	DE,0
	ld	e,(hl)                      ; 043671 || 	ld	e,(hl)                      ; 043610 || 043671 5E          8615  			LD      E,(HL)			; Fetch the length of line in DE
	add	hl,de                      ; 043672 || 	add	hl,de                      ; 043611 || 043672 19          8616  			ADD     HL,DE           	; Go to the next line
	pop	de                         ; 043673 || 	pop	de                         ; 043612 || 043673 D1          8617  			POP     DE              	; Restore IF clause length
	pop	bc                         ; 043674 || 	pop	bc                         ; 043613 || 043674 C1          8618  			POP     BC              	; Restore second line number
	jr	$-$51                       ; 043675 || 	jr	$-$51                       ; 043614 || 043675 18 AD       8619  			JR      LISTC			; Loop back to do next line
	call	$0438d7                   ; 043677 || 	call	$043876                   ; 043616 || 043677 CD D7 38 04 8626  RENUM:			CALL    CLEAR           	; Uses the heap so clear all dynamic variables and function/procedure pointers
	call	$043c8c                   ; 04367B || 	call	$043c2b                   ; 04361A || 04367B CD 8C 3C 04 8627  			CALL    PAIR            	; Fetch the parameters - HL: start (NEW line number), BC: increment
	exx                            ; 04367F || 	exx                            ; 04361E || 04367F D9          8628  			EXX
	ld	hl,($044d14)                ; 043680 || 	ld	hl,($044d14)                ; 04361F || 043680 2A 14 4D 04 8629  			LD      HL,(PAGE_)		; HL: Top of program
	ld	de,($044d1a)                ; 043684 || 	ld	de,($044d1a)                ; 043623 || 043684 ED 5B 1A 4D 8630  			LD      DE,(LOMEM)		; DE: Start address of the heap
	ld	a,(hl)                      ; 043689 || 	ld	a,(hl)                      ; 043628 || 043689 7E          8634  RENUM1:			LD      A,(HL)          	; Fetch the line length byte
	or	a                           ; 04368A || 	or	a                           ; 043629 || 04368A B7          8635  			OR      A			; Is it zero, i.e. the end of program marker?
	jr	z,$+$38                     ; 04368B || 	jr	z,$+$38                     ; 04362A || 04368B 28 36       8636  			JR      Z,RENUM2		; Yes, so skip to the next part
	inc	hl                         ; 04368D || 	inc	hl                         ; 04362C || 04368D 23          8637  			INC     HL
	ld	c,(hl)                      ; 04368E || 	ld	c,(hl)                      ; 04362D || 04368E 4E          8638  			LD      C,(HL)          	; BC: The OLD line number
	inc	hl                         ; 04368F || 	inc	hl                         ; 04362E || 04368F 23          8639  			INC     HL
	ld	b,(hl)                      ; 043690 || 	ld	b,(hl)                      ; 04362F || 043690 46          8640  			LD      B,(HL)
	ld	a,b                         ; 043691 || 	ld	a,b                         ; 043630 || 043691 78          8641  			LD      A,B			; Check whether the line number is zero - we only need to check the LSW
	or	c                           ; 043692 || 	or	c                           ; 043631 || 043692 B1          8642  			OR      C
	jp	z,$0430e1                   ; 043693 || 	jp	z,$043080                   ; 043632 || 043693 CA E1 30 04 8643  			JP      Z,CLOOP        		; If the line number is zero, then exit back to the command line
	ex	de,hl                       ; 043697 || 	ex	de,hl                       ; 043636 || 043697 EB          8644  			EX      DE,HL			; DE: Pointer to BASIC program, HL: Pointer to heap
	ld	(hl),c                      ; 043698 || 	ld	(hl),c                      ; 043637 || 043698 71          8645  			LD      (HL),C			; Store the OLD line number in the heap
	inc	hl                         ; 043699 || 	inc	hl                         ; 043638 || 043699 23          8646  			INC     HL
	ld	(hl),b                      ; 04369A || 	ld	(hl),b                      ; 043639 || 04369A 70          8647  			LD      (HL),B
	inc	hl                         ; 04369B || 	inc	hl                         ; 04363A || 04369B 23          8648  			INC     HL
	exx                            ; 04369C || 	exx                            ; 04363B || 04369C D9          8649  			EXX				; HL: line number, BC: increment (16-bit values)
	push	hl                        ; 04369D || 	push	hl                        ; 04363C || 04369D E5          8650  			PUSH    HL			; HL: Stack the NEW line number value
	add.sil	hl,bc                  ; 04369E || 	add.sil	hl,bc                  ; 04363D || 04369E 52 09       8651  			ADD.S   HL,BC           	; Add the increment
	jp	c,$043c86                   ; 0436A0 || 	jp	c,$043c25                   ; 04363F || 0436A0 DA 86 3C 04 8652  			JP      C,TOOBIG        	; If > 65535, then error: "Too big"
	exx                            ; 0436A4 || 	exx                            ; 043643 || 0436A4 D9          8653  			EXX				; DE: Pointer to BASIC program, HL: Pointer to heap
	pop	bc                         ; 0436A5 || 	pop	bc                         ; 043644 || 0436A5 C1          8654  			POP     BC			; BC: Pop the NEW line number value off the stack
	ld	(hl),c                      ; 0436A6 || 	ld	(hl),c                      ; 043645 || 0436A6 71          8655  			LD      (HL),C			; Store the NEW line number in the heap
	inc	hl                         ; 0436A7 || 	inc	hl                         ; 043646 || 0436A7 23          8656  			INC     HL
	ld	(hl),b                      ; 0436A8 || 	ld	(hl),b                      ; 043647 || 0436A8 70          8657  			LD      (HL),B
	inc	hl                         ; 0436A9 || 	inc	hl                         ; 043648 || 0436A9 23          8658  			INC     HL
	ex	de,hl                       ; 0436AA || 	ex	de,hl                       ; 043649 || 0436AA EB          8659  			EX      DE,HL			; HL: Pointer to BASIC program, DE: Pointer to heap
	dec	hl                         ; 0436AB || 	dec	hl                         ; 04364A || 0436AB 2B          8660  			DEC     HL			; Back up to the line length byte
	dec	hl                         ; 0436AC || 	dec	hl                         ; 04364B || 0436AC 2B          8661  			DEC     HL
	ld	bc,$000000                  ; 0436AD || 	ld	bc,$000000                  ; 04364C || 0436AD 01 00 00 00 8662  			LD	BC, 0
	ld	c,(hl)                      ; 0436B1 || 	ld	c,(hl)                      ; 043650 || 0436B1 4E          8663  			LD      C,(HL)			; BC: Line length
	add	hl,bc                      ; 0436B2 || 	add	hl,bc                      ; 043651 || 0436B2 09          8664  			ADD	HL,BC           	; Advance HL to next line
	ex	de,hl                       ; 0436B3 || 	ex	de,hl                       ; 043652 || 0436B3 EB          8665  			EX      DE,HL			; DE: Pointer to BASIC program, HL: Pointer to heap
	push	hl                        ; 0436B4 || 	push	hl                        ; 043653 || 0436B4 E5          8666  			PUSH    HL
	inc	h                          ; 0436B5 || 	inc	h                          ; 043654 || 0436B5 24          8667  			INC     H			; Increment to next page
	sbc	hl,sp                      ; 0436B6 || 	sbc	hl,sp                      ; 043655 || 0436B6 ED 72       8668  			SBC     HL,SP			; Subtract from SP
	pop	hl                         ; 0436B8 || 	pop	hl                         ; 043657 || 0436B8 E1          8669  			POP     HL
	ex	de,hl                       ; 0436B9 || 	ex	de,hl                       ; 043658 || 0436B9 EB          8670  			EX      DE, HL			; HL: Pointer to BASIC program, DE: Pointer to heap
	jr	c,$-$31                     ; 0436BA || 	jr	c,$-$31                     ; 043659 || 0436BA 38 CD       8671  			JR      C,RENUM1        	; Loop, as the heap pointer has not strayed into the stack page
	call	$0437d8                   ; 0436BC || 	call	$043777                   ; 04365B || 0436BC CD D8 37 04 8672  			CALL    EXTERR          	; Otherwise throw error: "RENUMBER space'
	call	z,$eb0008                 ; 0436C0 || 	call	z,$eb0008                 ; 04365F || 0436C0 CC          8673  			DB    	REN
	ld	(hl),$ff                    ; 0436C4 || 	ld	(hl),$ff                    ; 043663 || 0436C4 36 FF       8683  			LD      (HL),-1			; Mark the end with FFFFh
	inc	hl                         ; 0436C6 || 	inc	hl                         ; 043665 || 0436C6 23          8684  			INC     HL
	ld	(hl),$ff                    ; 0436C7 || 	ld	(hl),$ff                    ; 043666 || 0436C7 36 FF       8685  			LD      (HL),-1
	ld	de,($044d1a)                ; 0436C9 || 	ld	de,($044d1a)                ; 043668 || 0436C9 ED 5B 1A 4D 8686  			LD      DE,(LOMEM)		; DE: Pointer to the start of the heap
	exx                            ; 0436CE || 	exx                            ; 04366D || 0436CE D9          8687  			EXX
	ld	hl,($044d14)                ; 0436CF || 	ld	hl,($044d14)                ; 04366E || 0436CF 2A 14 4D 04 8688  			LD      HL,(PAGE_)		; HL: Start of the BASIC program area
	ld	c,(hl)                      ; 0436D3 || 	ld	c,(hl)                      ; 043672 || 0436D3 4E          8689  RENUM3:			LD      C,(HL)			; Fetch the first line length byte
	ld	a,c                         ; 0436D4 || 	ld	a,c                         ; 043673 || 0436D4 79          8690  			LD      A,C			; If it is zero, then no program, so...
	or	a                           ; 0436D5 || 	or	a                           ; 043674 || 0436D5 B7          8691  			OR      A
	jp	z,$0430e0                   ; 0436D6 || 	jp	z,$04307f                   ; 043675 || 0436D6 CA E0 30 04 8692  			JP      Z,WARM			; Jump to warm start
	exx                            ; 0436DA || 	exx                            ; 043679 || 0436DA D9          8693  			EXX				; HL: Pointer to end of heap, DE: Pointer to start of heap
	ex	de,hl                       ; 0436DB || 	ex	de,hl                       ; 04367A || 0436DB EB          8694  			EX      DE,HL			; DE: Pointer to end of heap, HL: Pointer to start of heap
	inc	hl                         ; 0436DC || 	inc	hl                         ; 04367B || 0436DC 23          8695  			INC     HL			; Skip to the NEW line number
	inc	hl                         ; 0436DD || 	inc	hl                         ; 04367C || 0436DD 23          8696  			INC     HL
	ld	e,(hl)                      ; 0436DE || 	ld	e,(hl)                      ; 04367D || 0436DE 5E          8697  			LD      E,(HL)			; DE: The NEW line number
	inc	hl                         ; 0436DF || 	inc	hl                         ; 04367E || 0436DF 23          8698  			INC     HL
	ld	d,(hl)                      ; 0436E0 || 	ld	d,(hl)                      ; 04367F || 0436E0 56          8699  			LD      D,(HL)
	inc	hl                         ; 0436E1 || 	inc	hl                         ; 043680 || 0436E1 23          8700  			INC     HL
	push	de                        ; 0436E2 || 	push	de                        ; 043681 || 0436E2 D5          8701  			PUSH    DE			; Stack the NEW line number
	ex	de,hl                       ; 0436E3 || 	ex	de,hl                       ; 043682 || 0436E3 EB          8702  			EX      DE,HL			; HL: The NEW line number, DE: Pointer to the end of heap
	ld	($044d23),hl                ; 0436E4 || 	ld	($044d23),hl                ; 043683 || 0436E4 22 23 4D 04 8703  			LD      (LINENO),HL		; Store the line number in LINENO
	exx                            ; 0436E8 || 	exx                            ; 043687 || 0436E8 D9          8704  			EXX				; HL: Pointer to the BASIC program area
	pop	de                         ; 0436E9 || 	pop	de                         ; 043688 || 0436E9 D1          8705  			POP     DE			; DE: The NEW line number
	inc	hl                         ; 0436EA || 	inc	hl                         ; 043689 || 0436EA 23          8706  			INC     HL
	ld	(hl),e                      ; 0436EB || 	ld	(hl),e                      ; 04368A || 0436EB 73          8707  			LD      (HL),E          	; Write out the NEW line number to the BASIC program
	inc	hl                         ; 0436EC || 	inc	hl                         ; 04368B || 0436EC 23          8708  			INC     HL
	ld	(hl),d                      ; 0436ED || 	ld	(hl),d                      ; 04368C || 0436ED 72          8709  			LD      (HL),D
	inc	hl                         ; 0436EE || 	inc	hl                         ; 04368D || 0436EE 23          8710  			INC     HL
	dec	c                          ; 0436EF || 	dec	c                          ; 04368E || 0436EF 0D          8711  			DEC     C			; Subtract 3 from the line length to compensate for increasing HL by 3 above
	dec	c                          ; 0436F0 || 	dec	c                          ; 04368F || 0436F0 0D          8712  			DEC     C
	dec	c                          ; 0436F1 || 	dec	c                          ; 043690 || 0436F1 0D          8713  			DEC     C
	ld	a,c                         ; 0436F2 || 	ld	a,c                         ; 043691 || 0436F2 79          8714  			LD	A,C
	ld	bc,$000000                  ; 0436F3 || 	ld	bc,$000000                  ; 043692 || 0436F3 01 00 00 00 8715  			LD	BC,0
	ld	c,a                         ; 0436F7 || 	ld	c,a                         ; 043696 || 0436F7 4F          8716  			LD	C,A			; BC: Line length
	ld	a,$8d                       ; 0436F8 || 	ld	a,$8d                       ; 043697 || 0436F8 3E 8D       8718  RENUM7:			LD      A,LINO			; A: The token code that precedes any line number encoded in BASIC (i.e. GOTO/GOSUB)
	cpir                           ; 0436FA || 	cpir                           ; 043699 || 0436FA ED B1       8719  			CPIR                    	; Search for the token
	jr	nz,$-$29                    ; 0436FC || 	jr	nz,$-$29                    ; 04369B || 0436FC 20 D5       8720  			JR      NZ,RENUM3		; If not found, then loop to process the next line
	push	bc                        ; 0436FE || 	push	bc                        ; 04369D || 0436FE C5          8724  			PUSH    BC			; Stack everything
	push	hl                        ; 0436FF || 	push	hl                        ; 04369E || 0436FF E5          8725  			PUSH    HL
	push	hl                        ; 043700 || 	push	hl                        ; 04369F || 043700 E5          8726  			PUSH    HL			; HL: Pointer to encoded line number
	pop	iy                         ; 043701 || 	pop	iy                         ; 0436A0 || 043701 FD E1       8727  			POP     IY			; IY: Pointer to encoded line number
	exx                            ; 043703 || 	exx                            ; 0436A2 || 043703 D9          8728  			EXX
	call	$0408f6                   ; 043704 || 	call	$0408e6                   ; 0436A3 || 043704 CD F6 08 04 8729  			CALL    DECODE			; Decode the encoded line number (in HL')
	exx                            ; 043708 || 	exx                            ; 0436A7 || 043708 D9          8730  			EXX				; HL: Decoded line number
	ld	b,h                         ; 043709 || 	ld	b,h                         ; 0436A8 || 043709 44          8731  			LD      B,H			; BC: Decoded line number
	ld	c,l                         ; 04370A || 	ld	c,l                         ; 0436A9 || 04370A 4D          8732  			LD      C,L
	ld	hl,($044d1a)                ; 04370B || 	ld	hl,($044d1a)                ; 0436AA || 04370B 2A 1A 4D 04 8733  			LD      HL,(LOMEM)		; HL: Pointer to heap
	ld	e,(hl)                      ; 04370F || 	ld	e,(hl)                      ; 0436AE || 04370F 5E          8738  RENUM4:			LD      E,(HL)          	; DE: The OLD line number
	inc	hl                         ; 043710 || 	inc	hl                         ; 0436AF || 043710 23          8739  			INC     HL
	ld	d,(hl)                      ; 043711 || 	ld	d,(hl)                      ; 0436B0 || 043711 56          8740  			LD      D,(HL)
	inc	hl                         ; 043712 || 	inc	hl                         ; 0436B1 || 043712 23          8741  			INC     HL
	ex	de,hl                       ; 043713 || 	ex	de,hl                       ; 0436B2 || 043713 EB          8742  			EX      DE,HL			; HL: The OLD line number, DE: Pointer in the global heap
	or	a                           ; 043714 || 	or	a                           ; 0436B3 || 043714 B7          8743  			OR      A               	; Clear the carry and...
	sbc.sil	hl,bc                  ; 043715 || 	sbc.sil	hl,bc                  ; 0436B4 || 043715 52 ED 42    8744  			SBC.S   HL,BC			; Compare by means of subtraction the OLD line number against the one in the heap
	ex	de,hl                       ; 043718 || 	ex	de,hl                       ; 0436B7 || 043718 EB          8745  			EX      DE,HL			; HL: Pointer in the global heap
	ld	e,(hl)                      ; 043719 || 	ld	e,(hl)                      ; 0436B8 || 043719 5E          8746  			LD      E,(HL)          	; DE: The NEW line number
	inc	hl                         ; 04371A || 	inc	hl                         ; 0436B9 || 04371A 23          8747  			INC     HL
	ld	d,(hl)                      ; 04371B || 	ld	d,(hl)                      ; 0436BA || 04371B 56          8748  			LD      D,(HL)
	inc	hl                         ; 04371C || 	inc	hl                         ; 0436BB || 04371C 23          8749  			INC     HL
	jr	c,$-$0e                     ; 04371D || 	jr	c,$-$0e                     ; 0436BC || 04371D 38 F0       8750  			JR      C,RENUM4		; Loop until there is a match (Z) or not (NC)
	ex	de,hl                       ; 04371F || 	ex	de,hl                       ; 0436BE || 04371F EB          8751  			EX      DE,HL			; DE: Pointer in the global heap
	jr	z,$+$1f                     ; 043720 || 	jr	z,$+$1f                     ; 0436BF || 043720 28 1D       8752  			JR      Z,RENUM5        	; If Z flag is set, there is an exact match to the decoded line number on the heap
	call	$043df1                   ; 043722 || 	call	$043d90                   ; 0436C1 || 043722 CD F1 3D 04 8754  			CALL    TELL			; Display this error if the line number is not found
	ld	b,(hl)                      ; 043726 || 	ld	b,(hl)                      ; 0436C5 || 043726 46 61 69 6C 8755  			DB    	"Failed at "
	ld	h,c                         ; 043727 || 	ld	h,c                         ; 0436C6
	ld	l,c                         ; 043728 || 	ld	l,c                         ; 0436C7
	ld	l,h                         ; 043729 || 	ld	l,h                         ; 0436C8
	ld	h,l                         ; 04372A || 	ld	h,l                         ; 0436C9
	ld	h,h                         ; 04372B || 	ld	h,h                         ; 0436CA
	jr	nz,$+$63                    ; 04372C || 	jr	nz,$+$63                    ; 0436CB
	ld	(hl),h                      ; 04372E || 	ld	(hl),h                      ; 0436CD
	jr	nz,$+$02                    ; 04372F || 	jr	nz,$+$02                    ; 0436CE
	ld	hl,($044d23)                ; 043731 || 	ld	hl,($044d23)                ; 0436D0 || 043731 2A 23 4D 04 8757  			LD      HL,(LINENO)
	call	$043a58                   ; 043735 || 	call	$0439f7                   ; 0436D4 || 043735 CD 58 3A 04 8758  			CALL    PBCDL
	call	$0439a8                   ; 043739 || 	call	$043947                   ; 0436D8 || 043739 CD A8 39 04 8759  			CALL    CRLF
	jr	$+$09                       ; 04373D || 	jr	$+$09                       ; 0436DC || 04373D 18 07       8760  			JR      RENUM6			; And carry on renumbering
	pop	de                         ; 04373F || 	pop	de                         ; 0436DE || 04373F D1          8764  RENUM5:			POP     DE			; DE: Pointer to the encoded line number in the listing
	push	de                        ; 043740 || 	push	de                        ; 0436DF || 043740 D5          8765  			PUSH    DE
	dec	de                         ; 043741 || 	dec	de                         ; 0436E0 || 043741 1B          8766  			DEC     DE			; Back up a byte to the LINO token
	call	$043dbd                   ; 043742 || 	call	$043d5c                   ; 0436E1 || 043742 CD BD 3D 04 8767  			CALL    ENCODE          	; Re-write the new line number out
	pop	hl                         ; 043746 || 	pop	hl                         ; 0436E5 || 043746 E1          8768  RENUM6:			POP     HL			; HL: Pointer to the encoded line number in the listing
	pop	bc                         ; 043747 || 	pop	bc                         ; 0436E6 || 043747 C1          8769  			POP     BC			; BC: The remaining line length
	jr	$-$50                       ; 043748 || 	jr	$-$50                       ; 0436E7 || 043748 18 AE       8770  			JR      RENUM7			; Carry on checking for any more encoded line numbers in this line
	call	$043c8c                   ; 04374A || 	call	$043c2b                   ; 0436E9 || 04374A CD 8C 3C 04 8777  AUTO:			CALL    PAIR			; Get the parameter pair (HL: first parameter, BC: second parameter)
	ld	($044d29),hl                ; 04374E || 	ld	($044d29),hl                ; 0436ED || 04374E 22 29 4D 04 8778  			LD      (AUTONO),HL		; Store the start in AUTONO
	ld	a,c                         ; 043752 || 	ld	a,c                         ; 0436F1 || 043752 79          8779  			LD      A,C			; Increment is 8 bit (0-255)
	ld	($044d41),a                 ; 043753 || 	ld	($044d41),a                 ; 0436F2 || 043753 32 41 4D 04 8780  			LD      (INCREM),A		; Store that in INCREM
	jr	$+$30                       ; 043757 || 	jr	$+$30                       ; 0436F6 || 043757 18 2E       8781  			JR      CLOOP0			; Jump back indirectly to the command loop via CLOOP0 (optimisation for size)
	call	$043df1                   ; 043759 || 	call	$043d90                   ; 0436F8 || 043759 CD F1 3D 04 8786  BAD:			CALL    TELL            	; Output "Bad program" error
	inc	bc                         ; 04375D || 	inc	bc                         ; 0436FC || 04375D 03          8787  			DB    3				; Token for "BAD"
	ld	(hl),b                      ; 04375E || 	ld	(hl),b                      ; 0436FD || 04375E 70 72 6F 67 8788  			DB    "program"
	ld	(hl),d                      ; 04375F || 	ld	(hl),d                      ; 0436FE
	ld	l,a                         ; 043760 || 	ld	l,a                         ; 0436FF
	ld	h,a                         ; 043761 || 	ld	h,a                         ; 043700
	ld	(hl),d                      ; 043762 || 	ld	(hl),d                      ; 043701
	ld	h,c                         ; 043763 || 	ld	h,c                         ; 043702
	ld	l,l                         ; 043764 || 	ld	l,l                         ; 043703
	dec	c                          ; 043765 || 	dec	c                          ; 043704 || 043765 0D          8789  			DB    CR
	ld	a,(bc)                      ; 043766 || 	ld	a,(bc)                      ; 043705 || 043766 0A          8790  			DB    LF
	nop                            ; 043767 || 	nop                            ; 043706 || 043767 00          8791  			DB    0				; Falls through to NEW
	call	$0438cd                   ; 043768 || 	call	$04386c                   ; 043707 || 043768 CD CD 38 04 8793  NEW:			CALL    NEWIT			; Call NEWIT (clears program area and variables)
	jr	$+$1b                       ; 04376C || 	jr	$+$1b                       ; 04370B || 04376C 18 19       8794  			JR      CLOOP0			; Jump back indirectly to the command loop via CLOOP0 (optimisation for size)
	ld	hl,($044d14)                ; 04376E || 	ld	hl,($044d14)                ; 04370D || 04376E 2A 14 4D 04 8798  OLD:			LD      HL,(PAGE_)		; HL: The start of the BASIC program area
	push	hl                        ; 043772 || 	push	hl                        ; 043711 || 043772 E5          8799  			PUSH    HL			; Stack it
	inc	hl                         ; 043773 || 	inc	hl                         ; 043712 || 043773 23          8800  			INC     HL			; Skip the potential length byte of first line of code
	inc	hl                         ; 043774 || 	inc	hl                         ; 043713 || 043774 23          8801  			INC     HL			; And the line number word
	inc	hl                         ; 043775 || 	inc	hl                         ; 043714 || 043775 23          8802  			INC     HL
	ld	bc,$0000fc                  ; 043776 || 	ld	bc,$0000fc                  ; 043715 || 043776 01 FC 00 00 8803  			LD      BC,252			; Look for a CR in the first 252 bytes of code; maximum line length
	ld	a,$0d                       ; 04377A || 	ld	a,$0d                       ; 043719 || 04377A 3E 0D       8804  			LD      A,CR
	cpir                           ; 04377C || 	cpir                           ; 04371B || 04377C ED B1       8805  			CPIR
	jr	nz,$-$25                    ; 04377E || 	jr	nz,$-$25                    ; 04371D || 04377E 20 D9       8806  			JR      NZ,BAD			; If not found, then the first line of code is not a valid BBC BASIC code
	ld	a,l                         ; 043780 || 	ld	a,l                         ; 04371F || 043780 7D          8807  			LD      A,L			; It could still be garbage though! Store the position in A; this requires
	pop	hl                         ; 043781 || 	pop	hl                         ; 043720 || 043781 E1          8808  			POP     HL			; PAGE to be on a 256 page boundary, and is now the length of the first line
	ld	(hl),a                      ; 043782 || 	ld	(hl),a                      ; 043721 || 043782 77          8809  			LD      (HL),A			; Restore the length byte (this will have been set to 0 by NEW)
	call	$0438a0                   ; 043783 || 	call	$04383f                   ; 043722 || 043783 CD A0 38 04 8810  			CALL    CLEAN			; Further checks for bad program, set TOP, write out &FFFF end of program marker
	jp	$0430e1                     ; 043787 || 	jp	$043080                     ; 043726 || 043787 C3 E1 30 04 8811  CLOOP0:			JP      CLOOP			; Jump back to the command loop
	call	$040325                   ; 04378B || 	call	$040315                   ; 04372A || 04378B CD 25 03 04 8815  LOAD:			CALL    EXPRS           	; Get the filename
	ld	a,$0d                       ; 04378F || 	ld	a,$0d                       ; 04372E || 04378F 3E 0D       8816  			LD      A,CR			; DE points to the last byte of filename in ACCS
	ld	(de),a                      ; 043791 || 	ld	(de),a                      ; 043730 || 043791 12          8817  			LD      (DE),A			; Terminate filename with a CR
	call	$043880                   ; 043792 || 	call	$04381f                   ; 043731 || 043792 CD 80 38 04 8818  			CALL    LOAD0			; Load the file in, then CLEAN
	call	$0438d7                   ; 043796 || 	call	$043876                   ; 043735 || 043796 CD D7 38 04 8819  			CALL    CLEAR			; Further checks for bad program, set TOP, write out &FFFF end of program marker
	jr	$+$23                       ; 04379A || 	jr	$+$23                       ; 043739 || 04379A 18 21       8820  			JR      WARM0			; Jump back to the command loop
	call	$0438ac                   ; 04379C || 	call	$04384b                   ; 04373B || 04379C CD AC 38 04 8824  SAVE:			CALL    SETTOP          	; Set TOP sysvar
	call	$040325                   ; 0437A0 || 	call	$040315                   ; 04373F || 0437A0 CD 25 03 04 8825  			CALL    EXPRS           	; Get the filename
	ld	a,$0d                       ; 0437A4 || 	ld	a,$0d                       ; 043743 || 0437A4 3E 0D       8826  			LD      A,CR			; Terminate the filename with a CR
	ld	(de),a                      ; 0437A6 || 	ld	(de),a                      ; 043745 || 0437A6 12          8827  			LD      (DE),A
	ld	de,($044d14)                ; 0437A7 || 	ld	de,($044d14)                ; 043746 || 0437A7 ED 5B 14 4D 8828  			LD      DE,(PAGE_)		; DE: Start of program memory
	ld	hl,($044d17)                ; 0437AC || 	ld	hl,($044d17)                ; 04374B || 0437AC 2A 17 4D 04 8829  			LD      HL,(TOP)		; HL: Top of program memory
	or	a                           ; 0437B0 || 	or	a                           ; 04374F || 0437B0 B7          8830  			OR      A			; Calculate program size (TOP-PAGE)
	sbc	hl,de                      ; 0437B1 || 	sbc	hl,de                      ; 043750 || 0437B1 ED 52       8831  			SBC     HL,DE
	ld	b,h                         ; 0437B3 || 	ld	b,h                         ; 043752 || 0437B3 44          8832  			LD      B,H             	; BC: Length of program in bytes
	ld	c,l                         ; 0437B4 || 	ld	c,l                         ; 043753 || 0437B4 4D          8833  			LD      C,L
	ld	hl,$044a00                  ; 0437B5 || 	ld	hl,$044a00                  ; 043754 || 0437B5 21 00 4A 04 8834  			LD      HL,ACCS			; HL: Address of the filename
	call	$04429f                   ; 0437B9 || 	call	$04422d                   ; 043758 || 0437B9 CD 9F 42 04 8835  			CALL    OSSAVE			; Call the SAVE routine in patch.asm
	jp	$0430e0                     ; 0437BD || 	jp	$04307f                     ; 04375C || 0437BD C3 E0 30 04 8836  WARM0:			JP      WARM			; Jump back to the command loop
	ld	sp,($044d20)                ; 0437C1 || 	ld	sp,($044d20)                ; 043760 || 0437C1 ED 7B 20 4D 8845  ERROR_:			LD      SP,(HIMEM)		; Set SP to HIMEM
	ld	hl,$0434aa                  ; 0437C6 || 	ld	hl,$043449                  ; 043765 || 0437C6 21 AA 34 04 8846  			LD      HL,ERRWDS		; Index into the error string table
	or	a                           ; 0437CA || 	or	a                           ; 043769 || 0437CA B7          8847  			OR      A			; We don't need to search for the first error
	jr	z,$+$0c                     ; 0437CB || 	jr	z,$+$0c                     ; 04376A || 0437CB 28 0A       8848  			JR      Z,ERROR1		; So skip the search routine
	ld	b,a                         ; 0437CD || 	ld	b,a                         ; 04376C || 0437CD 47          8854  			LD      B,A             	; Store error number in B
	ex	af,af'                      ; 0437CE || 	ex	af,af'                      ; 04376D || 0437CE 08          8855  			EX      AF,AF'			; Store error number in AF'
	xor	a                          ; 0437CF || 	xor	a                          ; 04376E || 0437CF AF          8856  			XOR     A
	cp	(hl)                        ; 0437D0 || 	cp	(hl)                        ; 04376F || 0437D0 BE          8857  ERROR0:			CP      (HL)			; Compare the character with 0 (the terminator byte)
	inc	hl                         ; 0437D1 || 	inc	hl                         ; 043770 || 0437D1 23          8858  			INC     HL			; Increment the string pointer
	jr	nz,$-$02                    ; 0437D2 || 	jr	nz,$-$02                    ; 043771 || 0437D2 20 FC       8859  			JR      NZ,ERROR0		; Loop until with hit a 0
	djnz	$-$04                     ; 0437D4 || 	djnz	$-$04                     ; 043773 || 0437D4 10 FA       8860  			DJNZ    ERROR0			; Decrements the error number and loop until 0
	ex	af,af'                      ; 0437D6 || 	ex	af,af'                      ; 043775 || 0437D6 08          8861  			EX      AF,AF'			; Restore the error number from AF'
	push	hl                        ; 0437D7 || 	push	hl                        ; 043776 || 0437D7 E5          8865  ERROR1:			PUSH    HL			; Stack the error string pointer and fall through to EXTERR
	pop	hl                         ; 0437D8 || 	pop	hl                         ; 043777 || 0437D8 E1          8878  EXTERR:			POP     HL			; Pop the error string pointer
	ld	($044d2f),hl                ; 0437D9 || 	ld	($044d2f),hl                ; 043778 || 0437D9 22 2F 4D 04 8879  			LD      (ERRTXT),HL		; Store in ERRTXT sysvar
	ld	sp,($044d20)                ; 0437DD || 	ld	sp,($044d20)                ; 04377C || 0437DD ED 7B 20 4D 8880  			LD      SP,(HIMEM)		; Set SP to HIMEM
	ld	($044d3f),a                 ; 0437E2 || 	ld	($044d3f),a                 ; 043781 || 0437E2 32 3F 4D 04 8881  			LD      (ERR),A			; Store error number in ERR sysvar
	call	$043a0f                   ; 0437E6 || 	call	$0439ae                   ; 043785 || 0437E6 CD 0F 3A 04 8882  			CALL    SETLIN			; Get line number
	ld	($044d33),hl                ; 0437EA || 	ld	($044d33),hl                ; 043789 || 0437EA 22 33 4D 04 8883  			LD      (ERL),HL		; Store in ERL sysvar
	or	a                           ; 0437EE || 	or	a                           ; 04378D || 0437EE B7          8884  			OR      A			; Is error number 0?
	jr	z,$+$0f                     ; 0437EF || 	jr	z,$+$0f                     ; 04378E || 0437EF 28 0D       8885  			JR      Z,ERROR2		; Yes, so skip the next bit as error number 0 is untrappable
	ld	hl,($044d2c)                ; 0437F1 || 	ld	hl,($044d2c)                ; 043790 || 0437F1 2A 2C 4D 04 8887  			LD      HL,(ERRTRP)		; Check whether the error is trapped
	ld	a,h                         ; 0437F5 || 	ld	a,h                         ; 043794 || 0437F5 7C          8888  			LD      A,H
	or	l                           ; 0437F6 || 	or	l                           ; 043795 || 0437F6 B5          8889  			OR      L
	push	hl                        ; 0437F7 || 	push	hl                        ; 043796 || 0437F7 E5          8890  			PUSH    HL			; HL: Error line
	pop	iy                         ; 0437F8 || 	pop	iy                         ; 043797 || 0437F8 FD E1       8891  			POP     IY			; IY: HL
	jp	nz,$040ba9                  ; 0437FA || 	jp	nz,$040b96                  ; 043799 || 0437FA C2 A9 0B 04 8892  			JP      NZ,XEQ         	 	; If error trapped, jump to XEQ
	ld	hl,$000000                  ; 0437FE || 	ld	hl,$000000                  ; 04379D || 0437FE 21 00 00 00 8894  ERROR2:			LD      HL,0
	ld	($044d29),hl                ; 043802 || 	ld	($044d29),hl                ; 0437A1 || 043802 22 29 4D 04 8895  			LD      (AUTONO),HL		; Cancel AUTO
	ld	($044d26),hl                ; 043806 || 	ld	($044d26),hl                ; 0437A5 || 043806 22 26 4D 04 8896  			LD      (TRACEN),HL     	; Cancel TRACE
	call	$044428                   ; 04380A || 	call	$0443b6                   ; 0437A9 || 04380A CD 28 44 04 8897  			CALL    RESET           	; Reset OPSYS
	call	$0439a8                   ; 04380E || 	call	$043947                   ; 0437AD || 04380E CD A8 39 04 8898  			CALL    CRLF			; Output newline
	call	$043de3                   ; 043812 || 	call	$043d82                   ; 0437B1 || 043812 CD E3 3D 04 8899  			CALL    REPORT          	; Output the error message
	call	$043a43                   ; 043816 || 	call	$0439e2                   ; 0437B5 || 043816 CD 43 3A 04 8900  			CALL    SAYLN			; Output " at line nnnn" message.
	ld	e,$00                       ; 04381A || 	ld	e,$00                       ; 0437B9 || 04381A 1E 00       8901  			LD      E,0			; Close all files
	call	c,$04439d                 ; 04381C || 	call	c,$04432b                 ; 0437BB || 04381C DC 9D 43 04 8902  			CALL    C,OSSHUT
	call	$0439a8                   ; 043820 || 	call	$043947                   ; 0437BF || 043820 CD A8 39 04 8903  			CALL    CRLF			; Output newline
	jp	$0430e1                     ; 043824 || 	jp	$043080                     ; 0437C3 || 043824 C3 E1 30 04 8904  			JP      CLOOP			; Back to CLOOP
	ld	hl,$0431c9                  ; 043828 || 	ld	hl,$043168                  ; 0437C7 || 043828 21 C9 31 04 8916  LEX:			LD      HL,KEYWDS		; Address of the keywords table
	ld	a,(iy)                      ; 04382C || 	ld	a,(iy)                      ; 0437CB || 04382C FD 7E 00    8918  LEX0:			LD      A,(IY)			; Fetch the character to match
	ld	b,(hl)                      ; 04382F || 	ld	b,(hl)                      ; 0437CE || 04382F 46          8919  			LD      B,(HL)			; B: The token from the keywords table
	inc	hl                         ; 043830 || 	inc	hl                         ; 0437CF || 043830 23          8920  			INC     HL			; Increment the pointer in the keywords table
	cp	(hl)                        ; 043831 || 	cp	(hl)                        ; 0437D0 || 043831 BE          8921  			CP      (HL)			; Compare the first characters
	jr	z,$+$0a                     ; 043832 || 	jr	z,$+$0a                     ; 0437D1 || 043832 28 08       8922  			JR      Z,LEX2			; If there is a match, then skip to LEX2
	ret	c                          ; 043834 || 	ret	c                          ; 0437D3 || 043834 D8          8923  			RET     C               	; No match, so fail
	inc	hl                         ; 043835 || 	inc	hl                         ; 0437D4 || 043835 23          8927  LEX1:			INC     HL			; Increment the pointer
	bit	7,(hl)                     ; 043836 || 	bit	7,(hl)                     ; 0437D5 || 043836 CB 7E       8928  			BIT     7,(HL)			; Check if bit 7 set (all token IDs have bit 7 set)
	jr	z,$-$03                     ; 043838 || 	jr	z,$-$03                     ; 0437D7 || 043838 28 FB       8929  			JR      Z,LEX1			; No, so loop
	jr	$-$0e                       ; 04383A || 	jr	$-$0e                       ; 0437D9 || 04383A 18 F0       8930  			JR      LEX0			; At this point HL is pointing to the start of the next keyword
	push	iy                        ; 04383C || 	push	iy                        ; 0437DB || 04383C FD E5       8932  LEX2:			PUSH    IY              	; Save the input pointer
	inc	hl                         ; 04383E || 	inc	hl                         ; 0437DD || 04383E 23          8933  LEX3:			INC     HL			; Increment the keyword pointer
	bit	7,(hl)                     ; 04383F || 	bit	7,(hl)                     ; 0437DE || 04383F CB 7E       8934  			BIT     7,(HL)			; If we've reached the end (marked by the start of the next token) then
	jr	nz,$+$1e                    ; 043841 || 	jr	nz,$+$1e                    ; 0437E0 || 043841 20 1C       8935  			JR      NZ,LEX6         	; Jump to here as we've found a token
	inc	iy                         ; 043843 || 	inc	iy                         ; 0437E2 || 043843 FD 23       8936  			INC     IY			; Increment the text pointer
	ld	a,(iy)                      ; 043845 || 	ld	a,(iy)                      ; 0437E4 || 043845 FD 7E 00    8937  			LD      A,(IY)			; Fetch the character
	cp	$2e                         ; 043848 || 	cp	$2e                         ; 0437E7 || 043848 FE 2E       8938  			CP      '.'			; Is it an abbreviated keyword?
	jr	z,$+$15                     ; 04384A || 	jr	z,$+$15                     ; 0437E9 || 04384A 28 13       8939  			JR      Z,LEX6          	; Yes, so we'll return with the token we've found
	cp	(hl)                        ; 04384C || 	cp	(hl)                        ; 0437EB || 04384C BE          8940  			CP      (HL)			; Compare with the keywords list
	jr	z,$-$0f                     ; 04384D || 	jr	z,$-$0f                     ; 0437EC || 04384D 28 EF       8941  			JR      Z,LEX3			; It's a match, so continue checking this keyword
	call	$043cdc                   ; 04384F || 	call	$043c7b                   ; 0437EE || 04384F CD DC 3C 04 8942  			CALL    RANGE1			; Is it alphanumeric, '@', '_' or '`'
	jr	c,$+$06                     ; 043853 || 	jr	c,$+$06                     ; 0437F2 || 043853 38 04       8943  			JR      C,LEX5			; No, so check whether keyword needs to be immediately delimited
	pop	iy                         ; 043855 || 	pop	iy                         ; 0437F4 || 043855 FD E1       8945  LEX4:			POP     IY              	; Restore the input pointer ready for the next search
	jr	$-$22                       ; 043857 || 	jr	$-$22                       ; 0437F6 || 043857 18 DC       8946  			JR      LEX1			; And loop back to start again
	ld	a,(hl)                      ; 043859 || 	ld	a,(hl)                      ; 0437F8 || 043859 7E          8951  LEX5:			LD      A,(HL)			; Fetch the byte from the keywords table
	or	a                           ; 04385A || 	or	a                           ; 0437F9 || 04385A B7          8952  			OR      A			; If it is not zero, then...
	jr	nz,$-$06                    ; 04385B || 	jr	nz,$-$06                    ; 0437FA || 04385B 20 F8       8953  			JR      NZ,LEX4			; Keep searching
	dec	iy                         ; 04385D || 	dec	iy                         ; 0437FC || 04385D FD 2B       8954  			DEC     IY			; If it is zero, then skip the input pointer back one byte
	pop	af                         ; 04385F || 	pop	af                         ; 0437FE || 04385F F1          8958  LEX6:			POP     AF			; Discard IY input pointer pushed on the stack
	xor	a                          ; 043860 || 	xor	a                          ; 0437FF || 043860 AF          8959  			XOR     A			; Set the Z flag
	ld	a,b                         ; 043861 || 	ld	a,b                         ; 043800 || 043861 78          8960  			LD      A,B			; A: The token
	ret                            ; 043862 || 	ret                            ; 043801 || 043862 C9          8961  			RET
	push	de                        ; 043863 || 	push	de                        ; 043802 || 043863 D5          8970  DEL:			PUSH    DE
	push	hl                        ; 043864 || 	push	hl                        ; 043803 || 043864 E5          8971  			PUSH    HL
	push	hl                        ; 043865 || 	push	hl                        ; 043804 || 043865 E5          8972  			PUSH    HL			; HL: Address of the program line
	ld	b,$00                       ; 043866 || 	ld	b,$00                       ; 043805 || 043866 06 00       8973  			LD      B,0			; BC: Length of the line
	ld	c,(hl)                      ; 043868 || 	ld	c,(hl)                      ; 043807 || 043868 4E          8974  			LD      C,(HL)
	add	hl,bc                      ; 043869 || 	add	hl,bc                      ; 043808 || 043869 09          8975  			ADD     HL,BC			; HL: Advanced to the start of the next line
	push	hl                        ; 04386A || 	push	hl                        ; 043809 || 04386A E5          8976  			PUSH    HL
	ex	de,hl                       ; 04386B || 	ex	de,hl                       ; 04380A || 04386B EB          8977  			EX      DE,HL			; DE: Pointer to the next line
	ld	hl,($044d17)                ; 04386C || 	ld	hl,($044d17)                ; 04380B || 04386C 2A 17 4D 04 8978  			LD      HL,(TOP)		; HL: Pointer to the end of the program
	sbc	hl,de                      ; 043870 || 	sbc	hl,de                      ; 04380F || 043870 ED 52       8979  			SBC     HL,DE
	ld	b,h                         ; 043872 || 	ld	b,h                         ; 043811 || 043872 44          8980  			LD      B,H			; BC: Size of block to move
	ld	c,l                         ; 043873 || 	ld	c,l                         ; 043812 || 043873 4D          8981  			LD      C,L
	pop	hl                         ; 043874 || 	pop	hl                         ; 043813 || 043874 E1          8982  			POP     HL			; HL: Pointer to next line
	pop	de                         ; 043875 || 	pop	de                         ; 043814 || 043875 D1          8983  			POP     DE			; DE: Pointer to this line
	ldir                           ; 043876 || 	ldir                           ; 043815 || 043876 ED B0       8984  			LDIR                    	; Delete the line
	ld	($044d17),de                ; 043878 || 	ld	($044d17),de                ; 043817 || 043878 ED 53 17 4D 8985  			LD      (TOP),DE		; Adjust TOP
	pop	hl                         ; 04387D || 	pop	hl                         ; 04381C || 04387D E1          8986  			POP     HL
	pop	de                         ; 04387E || 	pop	de                         ; 04381D || 04387E D1          8987  			POP     DE
	ret                            ; 04387F || 	ret                            ; 04381E || 04387F C9          8988  			RET
	ld	de,($044d14)                ; 043880 || 	ld	de,($044d14)                ; 04381F || 043880 ED 5B 14 4D 8998  LOAD0: 			LD      DE,(PAGE_)		; DE: Beginning of BASIC program area
	ld	hl,$ffff00                  ; 043885 || 	ld	hl,$ffff00                  ; 043824 || 043885 21 00 FF FF 8999  			LD      HL,-256
	add	hl,sp                      ; 043889 || 	add	hl,sp                      ; 043828 || 043889 39          9000  			ADD     HL,SP
	sbc	hl,de                      ; 04388A || 	sbc	hl,de                      ; 043829 || 04388A ED 52       9001  			SBC     HL,DE           	; Find available space
	ld	b,h                         ; 04388C || 	ld	b,h                         ; 04382B || 04388C 44          9002  			LD      B,H
	ld	c,l                         ; 04388D || 	ld	c,l                         ; 04382C || 04388D 4D          9003  			LD      C,L
	ld	hl,$044a00                  ; 04388E || 	ld	hl,$044a00                  ; 04382D || 04388E 21 00 4A 04 9004  			LD      HL,ACCS
	call	$044206                   ; 043892 || 	call	$044194                   ; 043831 || 043892 CD 06 42 04 9005  			CALL    OSLOAD          	; Call the OSLOAD function in patch
	call	nc,$0438cd                ; 043896 || 	call	nc,$04386c                ; 043835 || 043896 D4 CD 38 04 9006  			CALL    NC,NEWIT		; If NC then NEW
	ld	a,$00                       ; 04389A || 	ld	a,$00                       ; 043839 || 04389A 3E 00       9007  			LD      A,0
	jp	nc,$0437c1                  ; 04389C || 	jp	nc,$043760                  ; 04383B || 04389C D2 C1 37 04 9008  			JP      NC,ERROR_        	; And trigger a "No room" error, otherwise...
	call	$0438ac                   ; 0438A0 || 	call	$04384b                   ; 04383F || 0438A0 CD AC 38 04 9010  CLEAN:			CALL    SETTOP			; Set TOP sysvar
	dec	hl                         ; 0438A4 || 	dec	hl                         ; 043843 || 0438A4 2B          9011  			DEC     HL			; Write out the end of program markers
	ld	(hl),$ff                    ; 0438A5 || 	ld	(hl),$ff                    ; 043844 || 0438A5 36 FF       9012  			LD      (HL),-1
	dec	hl                         ; 0438A7 || 	dec	hl                         ; 043846 || 0438A7 2B          9013  			DEC     HL
	ld	(hl),$ff                    ; 0438A8 || 	ld	(hl),$ff                    ; 043847 || 0438A8 36 FF       9014  			LD      (HL),-1
	jr	$+$2d                       ; 0438AA || 	jr	$+$2d                       ; 043849 || 0438AA 18 2B       9015  			JR      CLEAR			; Clear all dynamic variables and function/procedure pointers
	ld	hl,($044d14)                ; 0438AC || 	ld	hl,($044d14)                ; 04384B || 0438AC 2A 14 4D 04 9021  SETTOP:			LD      HL,(PAGE_)		; Start at beginning of BASIC program area
	ld	bc,$000000                  ; 0438B0 || 	ld	bc,$000000                  ; 04384F || 0438B0 01 00 00 00 9022  			LD	BC, 0			; BC: 0
	ld	a,$0d                       ; 0438B4 || 	ld	a,$0d                       ; 043853 || 0438B4 3E 0D       9023  			LD      A,CR			; End of line marker
	ld	c,(hl)                      ; 0438B6 || 	ld	c,(hl)                      ; 043855 || 0438B6 4E          9024  SETOP1:			LD      C,(HL)			; BC: Get first byte of program line (line length)
	inc	c                          ; 0438B7 || 	inc	c                          ; 043856 || 0438B7 0C          9025  			INC     C			; Check for zero
	dec	c                          ; 0438B8 || 	dec	c                          ; 043857 || 0438B8 0D          9026  			DEC     C
	jr	z,$+$0c                     ; 0438B9 || 	jr	z,$+$0c                     ; 043858 || 0438B9 28 0A       9027  			JR      Z,SETOP2		; If it is zero, we've reached the end
	add	hl,bc                      ; 0438BB || 	add	hl,bc                      ; 04385A || 0438BB 09          9028  			ADD     HL,BC			; Skip to next line
	dec	hl                         ; 0438BC || 	dec	hl                         ; 04385B || 0438BC 2B          9029  			DEC     HL			; Check end of previous line
	cp	(hl)                        ; 0438BD || 	cp	(hl)                        ; 04385C || 0438BD BE          9030  			CP      (HL)
	inc	hl                         ; 0438BE || 	inc	hl                         ; 04385D || 0438BE 23          9031  			INC     HL
	jr	z,$-$09                     ; 0438BF || 	jr	z,$-$09                     ; 04385E || 0438BF 28 F5       9032  			JR      Z,SETOP1		; If CR then loop
	jp	$043759                     ; 0438C1 || 	jp	$0436f8                     ; 043860 || 0438C1 C3 59 37 04 9033  			JP      BAD			; If anything else, then something has gone wrong - trip a Bad Program error
	inc	hl                         ; 0438C5 || 	inc	hl                         ; 043864 || 0438C5 23          9035  SETOP2:			INC     HL             		; Skip the 3 byte end of program marker (&00, &FF, &FF)
	inc	hl                         ; 0438C6 || 	inc	hl                         ; 043865 || 0438C6 23          9036  			INC     HL			; NB: Called from NEWIT
	inc	hl                         ; 0438C7 || 	inc	hl                         ; 043866 || 0438C7 23          9037  			INC     HL
	ld	($044d17),hl                ; 0438C8 || 	ld	($044d17),hl                ; 043867 || 0438C8 22 17 4D 04 9038  			LD      (TOP),HL		; Store in TOP sysvar
	ret                            ; 0438CC || 	ret                            ; 04386B || 0438CC C9          9039  			RET
	ld	hl,($044d14)                ; 0438CD || 	ld	hl,($044d14)                ; 04386C || 0438CD 2A 14 4D 04 9048  NEWIT:			LD      HL,(PAGE_)		; HL: First byte of BASIC program area
	ld	(hl),$00                    ; 0438D1 || 	ld	(hl),$00                    ; 043870 || 0438D1 36 00       9049  			LD      (HL),0			; Stick a 0 in there
	call	$0438c5                   ; 0438D3 || 	call	$043864                   ; 043872 || 0438D3 CD C5 38 04 9050  			CALL    SETOP2			; Skip three bytes to get to end of empty BASIC program area and set TOP sysvar
	push	hl                        ; 0438D7 || 	push	hl                        ; 043876 || 0438D7 E5          9052  CLEAR:			PUSH    HL			; Stack the BASIC program pointer
	ld	hl,($044d17)                ; 0438D8 || 	ld	hl,($044d17)                ; 043877 || 0438D8 2A 17 4D 04 9053  			LD      HL,(TOP)		; Get the TOP sysvar - first available byte after BASIC
	ld	($044d1a),hl                ; 0438DC || 	ld	($044d1a),hl                ; 04387B || 0438DC 22 1A 4D 04 9054  			LD      (LOMEM),HL		; Set the LOMEM sysvar
	ld	($044d1d),hl                ; 0438E0 || 	ld	($044d1d),hl                ; 04387F || 0438E0 22 1D 4D 04 9055  			LD      (FREE),HL		; And the FREE sysvar with that value
	ld	hl,$044c6c                  ; 0438E4 || 	ld	hl,$044c6c                  ; 043883 || 0438E4 21 6C 4C 04 9056  			LD      HL,DYNVAR		; Get the pointer to the dynamic variable pointers buffer in RAM
	push	bc                        ; 0438E8 || 	push	bc                        ; 043887 || 0438E8 C5          9057  			PUSH    BC
	ld	b,$a8                       ; 0438E9 || 	ld	b,$a8                       ; 043888 || 0438E9 06 A8       9059  			LD      B,54+2*3		; ez80asm doesn't do () in expressions
	ld	(hl),$00                    ; 0438EB || 	ld	(hl),$00                    ; 04388A || 0438EB 36 00       9060  CLEAR1:			LD      (HL),0			; Clear the dynamic variable pointers
	inc	hl                         ; 0438ED || 	inc	hl                         ; 04388C || 0438ED 23          9061  			INC     HL
	djnz	$-$03                     ; 0438EE || 	djnz	$-$03                     ; 04388D || 0438EE 10 FB       9062  			DJNZ    CLEAR1
	pop	bc                         ; 0438F0 || 	pop	bc                         ; 04388F || 0438F0 C1          9063  			POP     BC
	pop	hl                         ; 0438F1 || 	pop	hl                         ; 043890 || 0438F1 E1          9064  			POP     HL			; Restore the BASIC program pointer
	ret                            ; 0438F2 || 	ret                            ; 043891 || 0438F2 C9          9065  			RET
	push	hl                        ; 0438F3 || 	push	hl                        ; 043892 || 0438F3 E5          9075  LISTIT:			PUSH    HL			; Stack the address of the line
	ex	de,hl                       ; 0438F4 || 	ex	de,hl                       ; 043893 || 0438F4 EB          9076  			EX      DE,HL			; HL: Line number
	push	bc                        ; 0438F5 || 	push	bc                        ; 043894 || 0438F5 C5          9077  			PUSH    BC
	call	$043a5c                   ; 0438F6 || 	call	$0439fb                   ; 043895 || 0438F6 CD 5C 3A 04 9078  			CALL    PBCD			; Print the line number
	pop	bc                         ; 0438FA || 	pop	bc                         ; 043899 || 0438FA C1          9079  			POP     BC
	pop	hl                         ; 0438FB || 	pop	hl                         ; 04389A || 0438FB E1          9080  			POP     HL			; HL: Address of the first token/character
	ld	a,(hl)                      ; 0438FC || 	ld	a,(hl)                      ; 04389B || 0438FC 7E          9081  			LD      A,(HL)			; Fetch the token
	cp	$ed                         ; 0438FD || 	cp	$ed                         ; 04389C || 0438FD FE ED       9082  			CP      NEXT			; Is it NEXT...
	call	z,$043989                 ; 0438FF || 	call	z,$043928                 ; 04389E || 0438FF CC 89 39 04 9083  			CALL    Z,INDENT		; Yes, so indent in
	cp	$fd                         ; 043903 || 	cp	$fd                         ; 0438A2 || 043903 FE FD       9084  			CP      UNTIL			; Or is it UNTIL...
	call	z,$043989                 ; 043905 || 	call	z,$043928                 ; 0438A4 || 043905 CC 89 39 04 9085  			CALL    Z,INDENT		; Yes, so indent in
	exx                            ; 043909 || 	exx                            ; 0438A8 || 043909 D9          9086  			EXX
	ld	a,$20                       ; 04390A || 	ld	a,$20                       ; 0438A9 || 04390A 3E 20       9087  			LD      A,' '
	bit	0,(ix)                     ; 04390C || 	bit	0,(ix)                     ; 0438AB || 04390C DD CB 00 46 9088  			BIT     0,(IX)			; If BIT 0 of LISTON is set
	call	nz,$0439b0                ; 043910 || 	call	nz,$04394f                ; 0438AF || 043910 C4 B0 39 04 9089  			CALL    NZ,OUTCHR		; Then print a space after the line number
	ld	a,b                         ; 043914 || 	ld	a,b                         ; 0438B3 || 043914 78          9090  			LD      A,B			; Fetch the FOR/NEXT indent level
	add	a,a                        ; 043915 || 	add	a,a                        ; 0438B4 || 043915 87          9091  			ADD     A,A			; Multiply by 2
	bit	1,(ix)                     ; 043916 || 	bit	1,(ix)                     ; 0438B5 || 043916 DD CB 00 4E 9092  			BIT     1,(IX)			; If BIT 1 of LISTON is set
	call	nz,$04182c                ; 04391A || 	call	nz,$0417ef                ; 0438B9 || 04391A C4 2C 18 04 9093  			CALL    NZ,FILL			; Then print the FOR/NEXT indent
	ld	a,c                         ; 04391E || 	ld	a,c                         ; 0438BD || 04391E 79          9094  			LD      A,C			; Fetch the REPEAT/UNTIL indent level
	add	a,a                        ; 04391F || 	add	a,a                        ; 0438BE || 04391F 87          9095  			ADD     A,A			; Multiply by 2
	bit	2,(ix)                     ; 043920 || 	bit	2,(ix)                     ; 0438BF || 043920 DD CB 00 56 9096  			BIT     2,(IX)			; If BIT 2 of LISTON is set
	call	nz,$04182c                ; 043924 || 	call	nz,$0417ef                ; 0438C3 || 043924 C4 2C 18 04 9097  			CALL    NZ,FILL			; Then print the REPEAT/UNTIL indent
	exx                            ; 043928 || 	exx                            ; 0438C7 || 043928 D9          9098  			EXX
	ld	a,(hl)                      ; 043929 || 	ld	a,(hl)                      ; 0438C8 || 043929 7E          9099  			LD      A,(HL)			; Fetch the token
	cp	$e3                         ; 04392A || 	cp	$e3                         ; 0438C9 || 04392A FE E3       9100  			CP      FOR			; Is it FOR?
	call	z,$043989                 ; 04392C || 	call	z,$043928                 ; 0438CB || 04392C CC 89 39 04 9101  			CALL    Z,INDENT		; Yes, so indent
	cp	$f5                         ; 043930 || 	cp	$f5                         ; 0438CF || 043930 FE F5       9102  			CP      REPEAT			; Is it REPEAT?
	call	z,$043989                 ; 043932 || 	call	z,$043928                 ; 0438D1 || 043932 CC 89 39 04 9103  			CALL    Z,INDENT		; Yes, so indent
	ld	e,$00                       ; 043936 || 	ld	e,$00                       ; 0438D5 || 043936 1E 00       9104  			LD      E,0			; E: The quote counter - reset to 0
	ld	a,(hl)                      ; 043938 || 	ld	a,(hl)                      ; 0438D7 || 043938 7E          9105  LIST8:			LD      A,(HL)			; Fetch a character / token byte
	inc	hl                         ; 043939 || 	inc	hl                         ; 0438D8 || 043939 23          9106  			INC     HL
	cp	$0d                         ; 04393A || 	cp	$0d                         ; 0438D9 || 04393A FE 0D       9107  			CP      CR			; Is it end of line?
	jr	z,$+$0d                     ; 04393C || 	jr	z,$+$0d                     ; 0438DB || 04393C 28 0B       9108  			JR      Z,LISTE			; Yes, so finish (DB: Used to jump to CRLF, modified for *EDIT)
	cp	$22                         ; 04393E || 	cp	$22                         ; 0438DD || 04393E FE 22       9109  			CP      34			; Is it a quote character?
	jr	nz,$+$03                    ; 043940 || 	jr	nz,$+$03                    ; 0438DF || 043940 20 01       9110  			JR      NZ,LIST7		; No, so skip to next bit
	inc	e                          ; 043942 || 	inc	e                          ; 0438E1 || 043942 1C          9111  			INC     E			; Otherwise increment quote counter
	call	$043978                   ; 043943 || 	call	$043917                   ; 0438E2 || 043943 CD 78 39 04 9112  LIST7:			CALL    LOUT			; Output the character / token
	jr	$-$0f                       ; 043947 || 	jr	$-$0f                       ; 0438E6 || 043947 18 EF       9113  			JR      LIST8			; And repeat
	bit	3,(ix)                     ; 043949 || 	bit	3,(ix)                     ; 0438E8 || 043949 DD CB 00 5E 9118  LISTE:			BIT 	3,(IX)			; Are we printing to buffer?
	jr	z,$+$5b                     ; 04394D || 	jr	z,$+$5b                     ; 0438EC || 04394D 28 59       9119  			JR	Z, CRLF			; Yes, so print a CRLF
	xor	a                          ; 04394F || 	xor	a                          ; 0438EE || 04394F AF          9120  			XOR	A			; Otherwise print a NUL (0)
	jp	$043f61                     ; 043950 || 	jp	$043f00                     ; 0438EF || 043950 C3 61 3F 04 9121  			JP	OSWRCH
	push	hl                        ; 043954 || 	push	hl                        ; 0438F3 || 043954 E5          9125  PRLINO:			PUSH    HL			; Swap HL and IY
	pop	iy                         ; 043955 || 	pop	iy                         ; 0438F4 || 043955 FD E1       9126  			POP     IY			; IY: Pointer to the line number
	push	bc                        ; 043957 || 	push	bc                        ; 0438F6 || 043957 C5          9127  			PUSH    BC
	call	$0408f6                   ; 043958 || 	call	$0408e6                   ; 0438F7 || 043958 CD F6 08 04 9128  			CALL    DECODE			; Decode
	pop	bc                         ; 04395C || 	pop	bc                         ; 0438FB || 04395C C1          9129  			POP     BC
	exx                            ; 04395D || 	exx                            ; 0438FC || 04395D D9          9130  			EXX
	push	bc                        ; 04395E || 	push	bc                        ; 0438FD || 04395E C5          9131  			PUSH    BC
	call	$043a58                   ; 04395F || 	call	$0439f7                   ; 0438FE || 04395F CD 58 3A 04 9132  			CALL    PBCDL			; Output the line number
	pop	bc                         ; 043963 || 	pop	bc                         ; 043902 || 043963 C1          9133  			POP     BC
	exx                            ; 043964 || 	exx                            ; 043903 || 043964 D9          9134  			EXX
	push	iy                        ; 043965 || 	push	iy                        ; 043904 || 043965 FD E5       9135  			PUSH    IY			; Swap HL and IY
	pop	hl                         ; 043967 || 	pop	hl                         ; 043906 || 043967 E1          9136  			POP     HL			; HL: Pointer to the next character in the line
	ret                            ; 043968 || 	ret                            ; 043907 || 043968 C9          9137  			RET
	call	$0439cd                   ; 043969 || 	call	$04396c                   ; 043908 || 043969 CD CD 39 04 9141  PRREM:			CALL	OUT_			; Output the REM token
	ld	a,(hl)                      ; 04396D || 	ld	a,(hl)                      ; 04390C || 04396D 7E          9142  @@:			LD	A, (HL)			; Fetch the character
	cp	$0d                         ; 04396E || 	cp	$0d                         ; 04390D || 04396E FE 0D       9143  			CP	CR			; If it is end of line, then
	ret	z                          ; 043970 || 	ret	z                          ; 04390F || 043970 C8          9144  			RET	Z			; we have finished
	call	$0439b0                   ; 043971 || 	call	$04394f                   ; 043910 || 043971 CD B0 39 04 9145  			CALL	OUTCHR			; Ouput the character
	inc	hl                         ; 043975 || 	inc	hl                         ; 043914 || 043975 23          9146  			INC	HL
	jr	$-$09                       ; 043976 || 	jr	$-$09                       ; 043915 || 043976 18 F5       9147  			JR	@B			; And loop
	bit	0,e                        ; 043978 || 	bit	0,e                        ; 043917 || 043978 CB 43       9151  LOUT:			BIT     0,E			; If the quote counter is odd (bit 1 set) then
	jr	nz,$+$36                    ; 04397A || 	jr	nz,$+$36                    ; 043919 || 04397A 20 34       9152  			JR      NZ,OUTCHR		; don't tokenise, just output the character
	cp	$f4                         ; 04397C || 	cp	$f4                         ; 04391B || 04397C FE F4       9153  			CP	REM			; DB: Is it REM
	jr	z,$-$15                     ; 04397E || 	jr	z,$-$15                     ; 04391D || 04397E 28 E9       9154  			JR	Z, PRREM		; DB: Yes so jump to the special case for REM
	cp	$8d                         ; 043980 || 	cp	$8d                         ; 04391F || 043980 FE 8D       9155  			CP      LINO			; Is it a line number (following GOTO/GOSUB etc)?
	jr	z,$-$2e                     ; 043982 || 	jr	z,$-$2e                     ; 043921 || 043982 28 D0       9156  			JR      Z,PRLINO		; Yes, so decode and print the line number
	call	$0439cd                   ; 043984 || 	call	$04396c                   ; 043923 || 043984 CD CD 39 04 9157  			CALL    OUT_			; Output a character / keyword
	ld	a,(hl)                      ; 043988 || 	ld	a,(hl)                      ; 043927 || 043988 7E          9158  			LD      A,(HL)			; Fetch the next character
	exx                            ; 043989 || 	exx                            ; 043928 || 043989 D9          9164  INDENT:			EXX
	cp	$e3                         ; 04398A || 	cp	$e3                         ; 043929 || 04398A FE E3       9165  			CP      FOR			; If the token is FOR
	jr	z,$+$0b                     ; 04398C || 	jr	z,$+$0b                     ; 04392B || 04398C 28 09       9166  			JR      Z,IND1			; Then INC B
	cp	$ed                         ; 04398E || 	cp	$ed                         ; 04392D || 04398E FE ED       9167  			CP      NEXT			; If it is NEXT
	jr	nz,$+$08                    ; 043990 || 	jr	nz,$+$08                    ; 04392F || 043990 20 06       9168  			JR      NZ,IND2_		; Then...
	dec	b                          ; 043992 || 	dec	b                          ; 043931 || 043992 05          9169  			DEC     B			; DEC B
	jp	p,$043998                   ; 043993 || 	jp	p,$043937                   ; 043932 || 043993 F2 98 39 04 9170  			JP      P,IND2_			; If we have gone below 0 then
	inc	b                          ; 043997 || 	inc	b                          ; 043936 || 043997 04          9171  IND1:			INC     B			; Increment back to 0
	cp	$f5                         ; 043998 || 	cp	$f5                         ; 043937 || 043998 FE F5       9173  IND2_:			CP      REPEAT			; If the token is REPEAT
	jr	z,$+$0b                     ; 04399A || 	jr	z,$+$0b                     ; 043939 || 04399A 28 09       9174  			JR      Z,IND3			; Then INC C
	cp	$fd                         ; 04399C || 	cp	$fd                         ; 04393B || 04399C FE FD       9175  			CP      UNTIL			; If it is UNTIL
	jr	nz,$+$08                    ; 04399E || 	jr	nz,$+$08                    ; 04393D || 04399E 20 06       9176  			JR      NZ,IND4			; Then...
	dec	c                          ; 0439A0 || 	dec	c                          ; 04393F || 0439A0 0D          9177  			DEC     C			; DEC C
	jp	p,$0439a6                   ; 0439A1 || 	jp	p,$043945                   ; 043940 || 0439A1 F2 A6 39 04 9178  			JP      P,IND4			; If we have gone below 0 then
	inc	c                          ; 0439A5 || 	inc	c                          ; 043944 || 0439A5 0C          9179  IND3:			INC     C			; Incremet back to 0
	exx                            ; 0439A6 || 	exx                            ; 043945 || 0439A6 D9          9180  IND4:			EXX
	ret                            ; 0439A7 || 	ret                            ; 043946 || 0439A7 C9          9181  			RET
	ld	a,$0d                       ; 0439A8 || 	ld	a,$0d                       ; 043947 || 0439A8 3E 0D       9189  CRLF:			LD      A,CR			; Output CR
	call	$0439b0                   ; 0439AA || 	call	$04394f                   ; 043949 || 0439AA CD B0 39 04 9190  			CALL    OUTCHR
	ld	a,$0a                       ; 0439AE || 	ld	a,$0a                       ; 04394D || 0439AE 3E 0A       9191  			LD      A,LF			; Output LF
	call	$043f61                   ; 0439B0 || 	call	$043f00                   ; 04394F || 0439B0 CD 61 3F 04 9193  OUTCHR:			CALL    OSWRCH			; Output the character in A
	sub	$0d                        ; 0439B4 || 	sub	$0d                        ; 043953 || 0439B4 D6 0D       9194  			SUB     CR			; Check for CR
	jr	z,$+$08                     ; 0439B6 || 	jr	z,$+$08                     ; 043955 || 0439B6 28 06       9195  			JR      Z,CARRET		; If it is CR then A will be 0, this will clear the count
	ret	c                          ; 0439B8 || 	ret	c                          ; 043957 || 0439B8 D8          9196  			RET     C              		; If it is less than CR, it is non-printing, so don't increment the count
	ld	a,($044d3d)                 ; 0439B9 || 	ld	a,($044d3d)                 ; 043958 || 0439B9 3A 3D 4D 04 9197  			LD      A,(COUNT)		; Increment the count
	inc	a                          ; 0439BD || 	inc	a                          ; 04395C || 0439BD 3C          9198  			INC     A
	ld	($044d3d),a                 ; 0439BE || 	ld	($044d3d),a                 ; 04395D || 0439BE 32 3D 4D 04 9200  CARRET:			LD      (COUNT),A		; Store the new count value
	ret	z                          ; 0439C2 || 	ret	z                          ; 043961 || 0439C2 C8          9201  			RET     Z			; Return if the count has wrapped to 0
	push	hl                        ; 0439C3 || 	push	hl                        ; 043962 || 0439C3 E5          9202  			PUSH    HL			; Now check if count = print width
	ld	hl,($044d3e)                ; 0439C4 || 	ld	hl,($044d3e)                ; 043963 || 0439C4 2A 3E 4D 04 9203  			LD      HL,(WIDTH)		; Get the print width; it's a byte value, so
	cp	l                           ; 0439C8 || 	cp	l                           ; 043967 || 0439C8 BD          9204  			CP      L			; L is the width. Compare it with count.
	pop	hl                         ; 0439C9 || 	pop	hl                         ; 043968 || 0439C9 E1          9205  			POP     HL
	ret	nz                         ; 0439CA || 	ret	nz                         ; 043969 || 0439CA C0          9206  			RET     NZ			; If we've not hit print width, then just return
	jr	$-$23                       ; 0439CB || 	jr	$-$23                       ; 04396A || 0439CB 18 DB       9207  			JR      CRLF			; Otherwise output CRLF
	cp	$8a                         ; 0439CD || 	cp	$8a                         ; 04396C || 0439CD FE 8A       9214  OUT_:			CP      138			; Neat trick to do condition: If A >= 10 or < 128 then PE flag is set
	jp	pe,$0439b0                  ; 0439CF || 	jp	pe,$04394f                  ; 04396E || 0439CF EA B0 39 04 9215  			JP      PE,OUTCHR		; If so, then it's a character, so just output it
	push	bc                        ; 0439D3 || 	push	bc                        ; 043972 || 0439D3 C5          9231  			PUSH    BC			; Preserve BC and HL
	push	hl                        ; 0439D4 || 	push	hl                        ; 043973 || 0439D4 E5          9232  			PUSH    HL
	ld	hl,$0431c9                  ; 0439D5 || 	ld	hl,$043168                  ; 043974 || 0439D5 21 C9 31 04 9233  			LD      HL,KEYWDS		; The list of tokens and keywords
	ld	bc,$0002df                  ; 0439D9 || 	ld	bc,$0002df                  ; 043978 || 0439D9 01 DF 02 00 9234  			LD      BC,KEYWDL		; The length of the keyword list
	cpir                           ; 0439DD || 	cpir                           ; 04397C || 0439DD ED B1       9235  			CPIR				; We can just do a straight CPIR as the token characters are unique in the list
	ld	a,(hl)                      ; 0439DF || 	ld	a,(hl)                      ; 04397E || 0439DF 7E          9237  TOKEN1:			LD      A,(HL)			; Fetch the character
	inc	hl                         ; 0439E0 || 	inc	hl                         ; 04397F || 0439E0 23          9238  			INC     HL			; Increment to the next byte in the token table
	cp	$8a                         ; 0439E1 || 	cp	$8a                         ; 043980 || 0439E1 FE 8A       9239  			CP      138			; If A >= 10 or < 128, i.e. we've not hit the token code for the next token
	push	af                        ; 0439E3 || 	push	af                        ; 043982 || 0439E3 F5          9240  			PUSH    AF			; Then...
	call	pe,$0439b0                ; 0439E4 || 	call	pe,$04394f                ; 043983 || 0439E4 EC B0 39 04 9241  			CALL    PE,OUTCHR		; Output the character...
	pop	af                         ; 0439E8 || 	pop	af                         ; 043987 || 0439E8 F1          9242  			POP     AF			;
	jp	pe,$0439df                  ; 0439E9 || 	jp	pe,$04397e                  ; 043988 || 0439E9 EA DF 39 04 9243  			JP      PE,TOKEN1		; And loop to the next character
	pop	hl                         ; 0439ED || 	pop	hl                         ; 04398C || 0439ED E1          9244  			POP     HL			; Done, so tidy up the stack and exit
	pop	bc                         ; 0439EE || 	pop	bc                         ; 04398D || 0439EE C1          9245  			POP     BC
	ret                            ; 0439EF || 	ret                            ; 04398E || 0439EF C9          9246  			RET
	ex	de,hl                       ; 0439F0 || 	ex	de,hl                       ; 04398F || 0439F0 EB          9255  FINDL:			EX      DE,HL			; DE: Line number (binary)
	ld	hl,($044d14)                ; 0439F1 || 	ld	hl,($044d14)                ; 043990 || 0439F1 2A 14 4D 04 9256  			LD      HL,(PAGE_)		; HL: Top of BASIC program area
	xor	a                          ; 0439F5 || 	xor	a                          ; 043994 || 0439F5 AF          9257  			XOR     A               	;  A: 0
	cp	(hl)                        ; 0439F6 || 	cp	(hl)                        ; 043995 || 0439F6 BE          9258  			CP      (HL)			; Check for end of program marker
	inc	a                          ; 0439F7 || 	inc	a                          ; 043996 || 0439F7 3C          9259  			INC     A			;  A: 1
	ret	nc                         ; 0439F8 || 	ret	nc                         ; 043997 || 0439F8 D0          9260  			RET     NC			; Return with 1 if 0
	xor	a                          ; 0439F9 || 	xor	a                          ; 043998 || 0439F9 AF          9261  			XOR     A               	; Clear the carry flag
	ld	bc,$000000                  ; 0439FA || 	ld	bc,$000000                  ; 043999 || 0439FA 01 00 00 00 9263  			LD	BC, 0			; BC: 0
	ld	c,(hl)                      ; 0439FE || 	ld	c,(hl)                      ; 04399D || 0439FE 4E          9265  FINDL1:			LD      C,(HL)			;  C: The line length
	push	hl                        ; 0439FF || 	push	hl                        ; 04399E || 0439FF E5          9266  			PUSH    HL			; Stack the current program counter
	inc	hl                         ; 043A00 || 	inc	hl                         ; 04399F || 043A00 23          9267  			INC     HL			; Skip to the line number bytes
	ld	a,(hl)                      ; 043A01 || 	ld	a,(hl)                      ; 0439A0 || 043A01 7E          9268  			LD      A,(HL)			; Fetch the line number (in binary) from the BASIC line in HL
	inc	hl                         ; 043A02 || 	inc	hl                         ; 0439A1 || 043A02 23          9269  			INC     HL
	ld	h,(hl)                      ; 043A03 || 	ld	h,(hl)                      ; 0439A2 || 043A03 66          9270  			LD      H,(HL)
	ld	l,a                         ; 043A04 || 	ld	l,a                         ; 0439A3 || 043A04 6F          9271  			LD      L,A
	sbc.sil	hl,de                  ; 043A05 || 	sbc.sil	hl,de                  ; 0439A4 || 043A05 52 ED 52    9272  			SBC.S   HL,DE			; Compare with the line number we're searching for
	pop	hl                         ; 043A08 || 	pop	hl                         ; 0439A7 || 043A08 E1          9273  			POP     HL			; Get the current program counter
	ret	nc                         ; 043A09 || 	ret	nc                         ; 0439A8 || 043A09 D0          9274  			RET     NC              	; Then return if found or past (Z flag will be set if line number matches)
	add	hl,bc                      ; 043A0A || 	add	hl,bc                      ; 0439A9 || 043A0A 09          9275  			ADD     HL,BC			; Skip to the next line (B was set to 0 before the loop was entered)
	jp	$0439fe                     ; 043A0B || 	jp	$04399d                     ; 0439AA || 043A0B C3 FE 39 04 9276  			JP      FINDL1			; And loop
	ld	bc,$000000                  ; 043A0F || 	ld	bc,$000000                  ; 0439AE || 043A0F 01 00 00 00 9284  SETLIN:			LD	BC, 0			; Zero BC for later
	ld	de,($044d35)                ; 043A13 || 	ld	de,($044d35)                ; 0439B2 || 043A13 ED 5B 35 4D 9286  			LD      DE, (ERRLIN)		; DE: Address of line
	ld	hl,($044d14)                ; 043A18 || 	ld	hl,($044d14)                ; 0439B7 || 043A18 2A 14 4D 04 9287  			LD      HL, (PAGE_)		; HL: Start of user program area
	or	a                           ; 043A1C || 	or	a                           ; 0439BB || 043A1C B7          9288  			OR      A			; Do a 24 bit compare without destroying HL
	sbc	hl,de                      ; 043A1D || 	sbc	hl,de                      ; 0439BC || 043A1D ED 52       9289  			SBC     HL, DE			;  Z: DE = HL, NC: DE <= HL
	add	hl,de                      ; 043A1F || 	add	hl,de                      ; 0439BE || 043A1F 19          9290  			ADD     HL, DE			;  C: DE > HL
	jr	nc,$+$1d                    ; 043A20 || 	jr	nc,$+$1d                    ; 0439BF || 043A20 30 1B       9291  			JR      NC, SET3		; So skip, as the address is less than or equal to the top of program area
	ld	c,(hl)                      ; 043A22 || 	ld	c,(hl)                      ; 0439C1 || 043A22 4E          9293  SET1:			LD      C, (HL)			; Get the length of the line; zero indicates the end of the BASIC program
	inc	c                          ; 043A23 || 	inc	c                          ; 0439C2 || 043A23 0C          9294  			INC     C			; This is a way to check for zero without using the accumulator
	dec	c                          ; 043A24 || 	dec	c                          ; 0439C3 || 043A24 0D          9295  			DEC     C			; If it is zero, then...
	jr	z,$+$18                     ; 043A25 || 	jr	z,$+$18                     ; 0439C4 || 043A25 28 16       9296  			JR      Z, SET3			; We've reached the end of the current BASIC program, not found the line
	add	hl,bc                      ; 043A27 || 	add	hl,bc                      ; 0439C6 || 043A27 09          9297  			ADD     HL, BC			; Skip to the next line (we set B to 0 at the top of this subroutine)
	sbc	hl,de                      ; 043A28 || 	sbc	hl,de                      ; 0439C7 || 043A28 ED 52       9298  			SBC     HL, DE			; Do a 24-bit compare; the previous ADD will have cleared the carry flag
	add	hl,de                      ; 043A2A || 	add	hl,de                      ; 0439C9 || 043A2A 19          9299  			ADD     HL, DE
	jr	c,$-$09                     ; 043A2B || 	jr	c,$-$09                     ; 0439CA || 043A2B 38 F5       9300  			JR      C, SET1			; Loop whilst DE (the address to search for) is > HL (the current line)
	sbc	hl,bc                      ; 043A2D || 	sbc	hl,bc                      ; 0439CC || 043A2D ED 42       9301  			SBC     HL, BC			; We've found it, so back up to the beginning of the line
	inc	hl                         ; 043A2F || 	inc	hl                         ; 0439CE || 043A2F 23          9302  			INC     HL			; Skip the length counter
	ld	de,$000000                  ; 043A30 || 	ld	de,$000000                  ; 0439CF || 043A30 11 00 00 00 9303  			LD	DE, 0			; Zero DE
	ld	e,(hl)                      ; 043A34 || 	ld	e,(hl)                      ; 0439D3 || 043A34 5E          9304  			LD      E, (HL)          	; Fetch the line number
	inc	hl                         ; 043A35 || 	inc	hl                         ; 0439D4 || 043A35 23          9305  			INC     HL
	ld	d,(hl)                      ; 043A36 || 	ld	d,(hl)                      ; 0439D5 || 043A36 56          9306  			LD      D, (HL)
	ex	de,hl                       ; 043A37 || 	ex	de,hl                       ; 0439D6 || 043A37 EB          9307  			EX      DE, HL			; HL: The line number
	ld	($044d23),hl                ; 043A38 || 	ld	($044d23),hl                ; 0439D7 || 043A38 22 23 4D 04 9308  SET2:			LD      (LINENO), HL		; Store in the variable LINENO
	ret                            ; 043A3C || 	ret                            ; 0439DB || 043A3C C9          9309  			RET
	ld	hl,$000000                  ; 043A3D || 	ld	hl,$000000                  ; 0439DC || 043A3D 21 00 00 00 9311  SET3:			LD      HL, 0			; We've not found the line at this point so
	jr	$-$09                       ; 043A41 || 	jr	$-$09                       ; 0439E0 || 043A41 18 F5       9312  			JR      SET2			; Set LINENO to 0
	ld	hl,($044d23)                ; 043A43 || 	ld	hl,($044d23)                ; 0439E2 || 043A43 2A 23 4D 04 9319  SAYLN:			LD      HL,(LINENO)		; Get the LINENO sysvar
	ld	a,h                         ; 043A47 || 	ld	a,h                         ; 0439E6 || 043A47 7C          9320  			LD      A,H			; If it is zero then
	or	l                           ; 043A48 || 	or	l                           ; 0439E7 || 043A48 B5          9321  			OR      L
	ret	z                          ; 043A49 || 	ret	z                          ; 0439E8 || 043A49 C8          9322  			RET     Z			; Don't need to do anything; return with F:C set to 0
	call	$043df1                   ; 043A4A || 	call	$043d90                   ; 0439E9 || 043A4A CD F1 3D 04 9323  			CALL    TELL			; Output the error message
	jr	nz,$+$63                    ; 043A4E || 	jr	nz,$+$63                    ; 0439ED || 043A4E 20 61 74 20 9324  			DB    	" at line ", 0
	ld	(hl),h                      ; 043A50 || 	ld	(hl),h                      ; 0439EF
	jr	nz,$+$6e                    ; 043A51 || 	jr	nz,$+$6e                    ; 0439F0
	ld	l,c                         ; 043A53 || 	ld	l,c                         ; 0439F2
	ld	l,(hl)                      ; 043A54 || 	ld	l,(hl)                      ; 0439F3
	ld	h,l                         ; 043A55 || 	ld	h,l                         ; 0439F4
	jr	nz,$+$02                    ; 043A56 || 	jr	nz,$+$02                    ; 0439F5
	ld	c,$00                       ; 043A58 || 	ld	c,$00                       ; 0439F7 || 043A58 0E 00       9325  PBCDL:			LD      C,0			; C: Leading character (NUL)
	jr	$+$04                       ; 043A5A || 	jr	$+$04                       ; 0439F9 || 043A5A 18 02       9326  			JR      PBCD0			; Output the line number; return with F:C set to 1
	ld	c,$20                       ; 043A5C || 	ld	c,$20                       ; 0439FB || 043A5C 0E 20       9333  PBCD:			LD      C,' '			; C: Leading character (" ")
	ld	b,$05                       ; 043A5E || 	ld	b,$05                       ; 0439FD || 043A5E 06 05       9334  PBCD0:			LD      B,5			; Number of digits in result
	ld	de,$002710                  ; 043A60 || 	ld	de,$002710                  ; 0439FF || 043A60 11 10 27 00 9335  			LD      DE,10000		; Start off with the 10,000 column
	xor	a                          ; 043A64 || 	xor	a                          ; 043A03 || 043A64 AF          9336  PBCD1:			XOR     A			; Counter
	sbc	hl,de                      ; 043A65 || 	sbc	hl,de                      ; 043A04 || 043A65 ED 52       9337  PBCD2:			SBC     HL,DE			; Loop and count how many 10,000s we have
	inc	a                          ; 043A67 || 	inc	a                          ; 043A06 || 043A67 3C          9338  			INC     A
	jr	nc,$-$03                    ; 043A68 || 	jr	nc,$-$03                    ; 043A07 || 043A68 30 FB       9339  			JR      NC,PBCD2
	add	hl,de                      ; 043A6A || 	add	hl,de                      ; 043A09 || 043A6A 19          9340  			ADD     HL,DE			; The loop overruns by one, so adjust here
	dec	a                          ; 043A6B || 	dec	a                          ; 043A0A || 043A6B 3D          9341  			DEC     A			; A: Number of 10,000s
	jr	z,$+$06                     ; 043A6C || 	jr	z,$+$06                     ; 043A0B || 043A6C 28 04       9342  			JR      Z,PBCD3			; If it is 0, then skip the next bit
	set	4,c                        ; 043A6E || 	set	4,c                        ; 043A0D || 043A6E CB E1       9343  			SET     4,C			; C: Set to '0' ASCII (30h)
	set	5,c                        ; 043A70 || 	set	5,c                        ; 043A0F || 043A70 CB E9       9344  			SET     5,C
	or	c                           ; 043A72 || 	or	c                           ; 043A11 || 043A72 B1          9345  PBCD3:			OR      C			; A is then an ASCII character, or 00h if we've not processed any non-zero digits yet
	call	nz,$0439b0                ; 043A73 || 	call	nz,$04394f                ; 043A12 || 043A73 C4 B0 39 04 9346  			CALL    NZ,OUTCHR		; If it is not a leading NUL character then output it
	ld	a,b                         ; 043A77 || 	ld	a,b                         ; 043A16 || 043A77 78          9347  			LD      A,B			; If on first transition, skip this
	cp	$05                         ; 043A78 || 	cp	$05                         ; 043A17 || 043A78 FE 05       9348  			CP      5			; TODO: Need to find out why
	jr	z,$+$08                     ; 043A7A || 	jr	z,$+$08                     ; 043A19 || 043A7A 28 06       9349  			JR      Z,PBCD4
	add	hl,hl                      ; 043A7C || 	add	hl,hl                      ; 043A1B || 043A7C 29          9350  			ADD     HL,HL			; HL x  2 : We shift the number being tested left,
	ld	d,h                         ; 043A7D || 	ld	d,h                         ; 043A1C || 043A7D 54          9351  			LD      D,H			;         : rather than shifting DE right
	ld	e,l                         ; 043A7E || 	ld	e,l                         ; 043A1D || 043A7E 5D          9352  			LD      E,L			;         : This makes a lot of sense
	add	hl,hl                      ; 043A7F || 	add	hl,hl                      ; 043A1E || 043A7F 29          9353  			ADD     HL,HL			; HL x  4
	add	hl,hl                      ; 043A80 || 	add	hl,hl                      ; 043A1F || 043A80 29          9354  			ADD     HL,HL			; HL x  8
	add	hl,de                      ; 043A81 || 	add	hl,de                      ; 043A20 || 043A81 19          9355  			ADD     HL,DE			; HL x 10
	ld	de,$0003e8                  ; 043A82 || 	ld	de,$0003e8                  ; 043A21 || 043A82 11 E8 03 00 9356  PBCD4:			LD      DE,1000			; Set the column heading to 1,000s for subsequent runs
	djnz	$-$22                     ; 043A86 || 	djnz	$-$22                     ; 043A25 || 043A86 10 DC       9357  			DJNZ    PBCD1			; Loop until done
	scf                            ; 043A88 || 	scf                            ; 043A27 || 043A88 37          9358  			SCF				; SCF set for SAYLN in this module
	ret                            ; 043A89 || 	ret                            ; 043A28 || 043A89 C9          9359  			RET
	call	$043c0f                   ; 043A8A || 	call	$043bae                   ; 043A29 || 043A8A CD 0F 3C 04 9366  PUTVAR:			CALL    CREATE			; Create the variable
	ld	a,(iy)                      ; 043A8E || 	ld	a,(iy)                      ; 043A2D || 043A8E FD 7E 00    9367  			LD      A,(IY)			; Fetch the next character
	cp	$28                         ; 043A91 || 	cp	$28                         ; 043A30 || 043A91 FE 28       9368  			CP      '('			; Check for bad use of array
	jr	nz,$+$72                    ; 043A93 || 	jr	nz,$+$72                    ; 043A32 || 043A93 20 70       9369  			JR      NZ,GETVZ        	; It's fine, so set the exit conditions
	ld	a,$0e                       ; 043A95 || 	ld	a,$0e                       ; 043A34 || 043A95 3E 0E       9370  ARRAY:			LD      A,14            	; Otherwise Error: 'Array'
	jp	$0437c1                     ; 043A97 || 	jp	$043760                     ; 043A36 || 043A97 C3 C1 37 04 9371  ERROR3:			JP      ERROR_
	ld	a,(iy)                      ; 043A9B || 	ld	a,(iy)                      ; 043A3A || 043A9B FD 7E 00    9384  GETVAR:			LD      A,(IY)			; Get the first character
	cp	$24                         ; 043A9E || 	cp	$24                         ; 043A3D || 043A9E FE 24       9385  			CP      '$'			; Is it a string?
	jr	z,$+$6b                     ; 043AA0 || 	jr	z,$+$6b                     ; 043A3F || 043AA0 28 69       9386  			JR      Z,GETV4			; Yes, so branch here
	cp	$21                         ; 043AA2 || 	cp	$21                         ; 043A41 || 043AA2 FE 21       9387  			CP      '!'			; Is it indirection (32-bit)?
	jr	z,$+$6b                     ; 043AA4 || 	jr	z,$+$6b                     ; 043A43 || 043AA4 28 69       9388  			JR      Z,GETV5			; Yes, so branch here
	cp	$3f                         ; 043AA6 || 	cp	$3f                         ; 043A45 || 043AA6 FE 3F       9389  			CP      '?'			; Is it indirection (8-bit)?
	jr	z,$+$6b                     ; 043AA8 || 	jr	z,$+$6b                     ; 043A47 || 043AA8 28 69       9390  			JR      Z,GETV6			; Yes, so branch here
	call	$043b79                   ; 043AAA || 	call	$043b18                   ; 043A49 || 043AAA CD 79 3B 04 9392  			CALL    LOCATE			; Locate the variable
	ret	nz                         ; 043AAE || 	ret	nz                         ; 043A4D || 043AAE C0          9393  			RET     NZ			; And exit here if not found
	ld	a,(iy)                      ; 043AAF || 	ld	a,(iy)                      ; 043A4E || 043AAF FD 7E 00    9399  			LD      A,(IY)			; Further checks
	cp	$28                         ; 043AB2 || 	cp	$28                         ; 043A51 || 043AB2 FE 28       9400  			CP      '('             	; Is it an array?
	jr	nz,$+$49                    ; 043AB4 || 	jr	nz,$+$49                    ; 043A53 || 043AB4 20 47       9401  			JR      NZ,GETVX        	; No, so exit
	push	de                        ; 043AB6 || 	push	de                        ; 043A55 || 043AB6 D5          9405  			PUSH    DE              	; Save the variable type (in D)
	ld	a,(hl)                      ; 043AB7 || 	ld	a,(hl)                      ; 043A56 || 043AB7 7E          9406  			LD      A,(HL)          	; Fetch the number of dimensions
	or	a                           ; 043AB8 || 	or	a                           ; 043A57 || 043AB8 B7          9407  			OR      A
	jr	z,$-$24                     ; 043AB9 || 	jr	z,$-$24                     ; 043A58 || 043AB9 28 DA       9408  			JR      Z,ARRAY			; If there are none, then Error: 'Array'
	inc	hl                         ; 043ABB || 	inc	hl                         ; 043A5A || 043ABB 23          9409  			INC     HL			;
	ld	de,$000000                  ; 043ABC || 	ld	de,$000000                  ; 043A5B || 043ABC 11 00 00 00 9410  			LD      DE,0            	; Accumulator
	push	af                        ; 043AC0 || 	push	af                        ; 043A5F || 043AC0 F5          9411  			PUSH    AF
	inc	iy                         ; 043AC1 || 	inc	iy                         ; 043A60 || 043AC1 FD 23       9412  			INC     IY              	; Skip "("
	jr	$+$07                       ; 043AC3 || 	jr	$+$07                       ; 043A62 || 043AC3 18 05       9413  			JR      GETV3
	push	af                        ; 043AC5 || 	push	af                        ; 043A64 || 043AC5 F5          9415  GETV2:			PUSH    AF
	call	$040a35                   ; 043AC6 || 	call	$040a22                   ; 043A65 || 043AC6 CD 35 0A 04 9416  			CALL    COMMA
	push	hl                        ; 043ACA || 	push	hl                        ; 043A69 || 043ACA E5          9417  GETV3:			PUSH    HL
	push	de                        ; 043ACB || 	push	de                        ; 043A6A || 043ACB D5          9418  			PUSH    DE
	call	$04031a                   ; 043ACC || 	call	$04030a                   ; 043A6B || 043ACC CD 1A 03 04 9419  			CALL    EXPRI			; Get the subscript
	exx                            ; 043AD0 || 	exx                            ; 043A6F || 043AD0 D9          9420  			EXX
	pop	de                         ; 043AD1 || 	pop	de                         ; 043A70 || 043AD1 D1          9421  			POP     DE
	ex	(sp),hl                     ; 043AD2 || 	ex	(sp),hl                     ; 043A71 || 043AD2 E3          9422  			EX      (SP),HL
	ld	c,(hl)                      ; 043AD3 || 	ld	c,(hl)                      ; 043A72 || 043AD3 4E          9423  			LD      C,(HL)
	inc	hl                         ; 043AD4 || 	inc	hl                         ; 043A73 || 043AD4 23          9424  			INC     HL
	ld	b,(hl)                      ; 043AD5 || 	ld	b,(hl)                      ; 043A74 || 043AD5 46          9425  			LD      B,(HL)
	inc	hl                         ; 043AD6 || 	inc	hl                         ; 043A75 || 043AD6 23          9426  			INC     HL
	ex	(sp),hl                     ; 043AD7 || 	ex	(sp),hl                     ; 043A76 || 043AD7 E3          9427  			EX      (SP),HL
	ex	de,hl                       ; 043AD8 || 	ex	de,hl                       ; 043A77 || 043AD8 EB          9428  			EX      DE,HL
	push	de                        ; 043AD9 || 	push	de                        ; 043A78 || 043AD9 D5          9429  			PUSH    DE
	call	$0418af                   ; 043ADA || 	call	$041872                   ; 043A79 || 043ADA CD AF 18 04 9430  			CALL    MUL16			; HL=HL*BC
	pop	de                         ; 043ADE || 	pop	de                         ; 043A7D || 043ADE D1          9431  			POP     DE
	add	hl,de                      ; 043ADF || 	add	hl,de                      ; 043A7E || 043ADF 19          9432  			ADD     HL,DE
	ex	de,hl                       ; 043AE0 || 	ex	de,hl                       ; 043A7F || 043AE0 EB          9433  			EX      DE,HL
	or	a                           ; 043AE1 || 	or	a                           ; 043A80 || 043AE1 B7          9434  			OR      A
	sbc	hl,bc                      ; 043AE2 || 	sbc	hl,bc                      ; 043A81 || 043AE2 ED 42       9435  			SBC     HL,BC
	ld	a,$0f                       ; 043AE4 || 	ld	a,$0f                       ; 043A83 || 043AE4 3E 0F       9436  			LD      A,15
	jr	nc,$-$4f                    ; 043AE6 || 	jr	nc,$-$4f                    ; 043A85 || 043AE6 30 AF       9437  			JR      NC,ERROR3		; Throw a "Subscript" error
	pop	hl                         ; 043AE8 || 	pop	hl                         ; 043A87 || 043AE8 E1          9438  			POP     HL
	pop	af                         ; 043AE9 || 	pop	af                         ; 043A88 || 043AE9 F1          9439  			POP     AF
	dec	a                          ; 043AEA || 	dec	a                          ; 043A89 || 043AEA 3D          9440  			DEC     A               	; Dimension counter
	jr	nz,$-$26                    ; 043AEB || 	jr	nz,$-$26                    ; 043A8A || 043AEB 20 D8       9441  			JR      NZ,GETV2
	call	$040a42                   ; 043AED || 	call	$040a2f                   ; 043A8C || 043AED CD 42 0A 04 9442  			CALL    BRAKET          	; Check for closing bracket
	pop	af                         ; 043AF1 || 	pop	af                         ; 043A90 || 043AF1 F1          9443  			POP     AF              	; Restore the type
	push	hl                        ; 043AF2 || 	push	hl                        ; 043A91 || 043AF2 E5          9444  			PUSH    HL
	call	$0418a2                   ; 043AF3 || 	call	$041865                   ; 043A92 || 043AF3 CD A2 18 04 9445  			CALL    X4OR5           	; DE=DE*n
	pop	hl                         ; 043AF7 || 	pop	hl                         ; 043A96 || 043AF7 E1          9446  			POP     HL
	add	hl,de                      ; 043AF8 || 	add	hl,de                      ; 043A97 || 043AF8 19          9447  			ADD     HL,DE
	ld	d,a                         ; 043AF9 || 	ld	d,a                         ; 043A98 || 043AF9 57          9448  			LD      D,A             	; The type
	ld	a,(iy)                      ; 043AFA || 	ld	a,(iy)                      ; 043A99 || 043AFA FD 7E 00    9449  			LD      A,(IY)
	cp	$3f                         ; 043AFD || 	cp	$3f                         ; 043A9C || 043AFD FE 3F       9450  GETVX:			CP      '?'
	jr	z,$+$20                     ; 043AFF || 	jr	z,$+$20                     ; 043A9E || 043AFF 28 1E       9451  			JR      Z,GETV9
	cp	$21                         ; 043B01 || 	cp	$21                         ; 043AA0 || 043B01 FE 21       9452  			CP      '!'
	jr	z,$+$18                     ; 043B03 || 	jr	z,$+$18                     ; 043AA2 || 043B03 28 16       9453  			JR      Z,GETV8
	push	hl                        ; 043B05 || 	push	hl                        ; 043AA4 || 043B05 E5          9454  GETVZ:			PUSH    HL              	; Set exit conditions
	pop	ix                         ; 043B06 || 	pop	ix                         ; 043AA5 || 043B06 DD E1       9455  			POP     IX
	ld	a,d                         ; 043B08 || 	ld	a,d                         ; 043AA7 || 043B08 7A          9456  			LD      A,D
	cp	a                           ; 043B09 || 	cp	a                           ; 043AA8 || 043B09 BF          9457  			CP      A
	ret                            ; 043B0A || 	ret                            ; 043AA9 || 043B0A C9          9458  			RET
	ld	a,$80                       ; 043B0B || 	ld	a,$80                       ; 043AAA || 043B0B 3E 80       9462  GETV4:			LD      A,128           	; Static strings
	jr	$+$07                       ; 043B0D || 	jr	$+$07                       ; 043AAC || 043B0D 18 05       9463  			JR      GETV7
	ld	a,$04                       ; 043B0F || 	ld	a,$04                       ; 043AAE || 043B0F 3E 04       9465  GETV5:			LD      A,4             	; Unary 32-bit indirection
	jr	$+$03                       ; 043B11 || 	jr	$+$03                       ; 043AB0 || 043B11 18 01       9466  			JR      GETV7
	xor	a                          ; 043B13 || 	xor	a                          ; 043AB2 || 043B13 AF          9468  GETV6:			XOR     A               	; Unary 8-bit indirection
	ld	hl,$000000                  ; 043B14 || 	ld	hl,$000000                  ; 043AB3 || 043B14 21 00 00 00 9470  GETV7:			LD      HL,0
	push	af                        ; 043B18 || 	push	af                        ; 043AB7 || 043B18 F5          9471  			PUSH    AF
	jr	$+$26                       ; 043B19 || 	jr	$+$26                       ; 043AB8 || 043B19 18 24       9472  			JR      GETV0
	ld	b,$04                       ; 043B1B || 	ld	b,$04                       ; 043ABA || 043B1B 06 04       9474  GETV8:			LD      B,4             	; Binary 32-bt indirection
	jr	$+$04                       ; 043B1D || 	jr	$+$04                       ; 043ABC || 043B1D 18 02       9475  			JR      GETVA
	ld	b,$00                       ; 043B1F || 	ld	b,$00                       ; 043ABE || 043B1F 06 00       9477  GETV9:			LD      B,0             	; Binary 8-bit indirection
	push	hl                        ; 043B21 || 	push	hl                        ; 043AC0 || 043B21 E5          9479  GETVA:			PUSH    HL
	pop	ix                         ; 043B22 || 	pop	ix                         ; 043AC1 || 043B22 DD E1       9480  			POP     IX
	ld	a,d                         ; 043B24 || 	ld	a,d                         ; 043AC3 || 043B24 7A          9481  			LD      A,D            		; Fetch the variable type
	cp	$81                         ; 043B25 || 	cp	$81                         ; 043AC4 || 043B25 FE 81       9482  			CP      129			; Is it a string?
	ret	z                          ; 043B27 || 	ret	z                          ; 043AC6 || 043B27 C8          9483  			RET     Z               	; Yes, so exit here
	push	bc                        ; 043B28 || 	push	bc                        ; 043AC7 || 043B28 C5          9484  			PUSH    BC
	call	$040426                   ; 043B29 || 	call	$040416                   ; 043AC8 || 043B29 CD 26 04 04 9485  			CALL    LOADN           	; Left operand of the binary indirection (var?index or var!index)
	call	$040672                   ; 043B2D || 	call	$040662                   ; 043ACC || 043B2D CD 72 06 04 9486  			CALL    SFIX
	ld	a,l                         ; 043B31 || 	ld	a,l                         ; 043AD0 || 043B31 7D          9487  			LD	A,L
	exx                            ; 043B32 || 	exx                            ; 043AD1 || 043B32 D9          9488  			EXX
	ld	($044d4a),hl                ; 043B33 || 	ld	($044d4a),hl                ; 043AD2 || 043B33 22 4A 4D 04 9489  			LD	(R0+0),HL
	ld	($044d4c),a                 ; 043B37 || 	ld	($044d4c),a                 ; 043AD6 || 043B37 32 4C 4D 04 9490  			LD	(R0+2),A
	ld	hl,($044d4a)                ; 043B3B || 	ld	hl,($044d4a)                ; 043ADA || 043B3B 2A 4A 4D 04 9491  			LD	HL,(R0)			; HL: 24-bit address of the variable in memory
	push	hl                        ; 043B3F || 	push	hl                        ; 043ADE || 043B3F E5          9493  GETV0:			PUSH    HL			; HL will be 0 for a unary indirection, or the address of the variable for a binary indirection
	inc	iy                         ; 043B40 || 	inc	iy                         ; 043ADF || 043B40 FD 23       9494  			INC     IY
	call	$040335                   ; 043B42 || 	call	$040325                   ; 043AE1 || 043B42 CD 35 03 04 9495  			CALL    ITEMI
	ld	a,l                         ; 043B46 || 	ld	a,l                         ; 043AE5 || 043B46 7D          9496  			LD	A,L			;  A: The MSB of the address
	exx                            ; 043B47 || 	exx                            ; 043AE6 || 043B47 D9          9497  			EXX
	ld	($044d4a),hl                ; 043B48 || 	ld	($044d4a),hl                ; 043AE7 || 043B48 22 4A 4D 04 9498  			LD	(R0+0),HL		; HL: The LSW of the address
	ld	($044d4c),a                 ; 043B4C || 	ld	($044d4c),a                 ; 043AEB || 043B4C 32 4C 4D 04 9499  			LD	(R0+2),A		; R0: L'HL or the 24-bit address
	pop	de                         ; 043B50 || 	pop	de                         ; 043AEF || 043B50 D1          9500  			POP     DE
	pop	af                         ; 043B51 || 	pop	af                         ; 043AF0 || 043B51 F1          9501  			POP     AF
	ld	hl,($044d4a)                ; 043B52 || 	ld	hl,($044d4a)                ; 043AF1 || 043B52 2A 4A 4D 04 9502  			LD	HL,(R0)			; HL: L'HL
	add	hl,de                      ; 043B56 || 	add	hl,de                      ; 043AF5 || 043B56 19          9503  			ADD     HL,DE
	push	hl                        ; 043B57 || 	push	hl                        ; 043AF6 || 043B57 E5          9504  			PUSH    HL
	pop	ix                         ; 043B58 || 	pop	ix                         ; 043AF7 || 043B58 DD E1       9505  			POP     IX
	cp	a                           ; 043B5A || 	cp	a                           ; 043AF9 || 043B5A BF          9506  			CP      A
	ret                            ; 043B5B || 	ret                            ; 043AFA || 043B5B C9          9507  			RET
	ld	a,(iy+$01)                  ; 043B5C || 	ld	a,(iy+$01)                  ; 043AFB || 043B5C FD 7E 01    9517  GETDEF:			LD      A,(IY+1)		; Get the next character from the tokenised line (the start of the procedure name)
	call	$043cdc                   ; 043B5F || 	call	$043c7b                   ; 043AFE || 043B5F CD DC 3C 04 9518  			CALL    RANGE1			; Is it in range: "0" to "9", "A" to "Z", "a' to "z", "@", "_" or "`"?
	ret	c                          ; 043B63 || 	ret	c                          ; 043B02 || 043B63 D8          9519  			RET     C			; No so return with C set
	ld	a,(iy)                      ; 043B64 || 	ld	a,(iy)                      ; 043B03 || 043B64 FD 7E 00    9520  			LD      A,(IY)			; Fetch the current character from the tokenised line
	ld	hl,$044d0e                  ; 043B67 || 	ld	hl,$044d0e                  ; 043B06 || 043B67 21 0E 4D 04 9521  			LD      HL,FNPTR		; HL: Address of the dynamic function pointer in ram.asm
	cp	$a4                         ; 043B6B || 	cp	$a4                         ; 043B0A || 043B6B FE A4       9522  			CP      FN			; Is it the token FN?
	jr	z,$+$4c                     ; 043B6D || 	jr	z,$+$4c                     ; 043B0C || 043B6D 28 4A       9523  			JR      Z,LOC2			; Yes, so skip to LOC2 with that pointer to find a match
	ld	hl,$044d11                  ; 043B6F || 	ld	hl,$044d11                  ; 043B0E || 043B6F 21 11 4D 04 9524  			LD      HL,PROPTR		; HL: Address of the dynamic procedure pointer in ram.asm
	cp	$f2                         ; 043B73 || 	cp	$f2                         ; 043B12 || 043B73 FE F2       9525  			CP      PROC			; Is it the token PROC?
	jr	z,$+$44                     ; 043B75 || 	jr	z,$+$44                     ; 043B14 || 043B75 28 42       9526  			JR      Z,LOC2			; Yes, so skip to LOC2 with that pointer to find a match
	scf                            ; 043B77 || 	scf                            ; 043B16 || 043B77 37          9527  			SCF				; No, so just return with C set
	ret                            ; 043B78 || 	ret                            ; 043B17 || 043B78 C9          9528  			RET
	sub	$40                        ; 043B79 || 	sub	$40                        ; 043B18 || 043B79 D6 40       9551  LOCATE:			SUB     '@'			; Check for valid range
	ret	c                          ; 043B7B || 	ret	c                          ; 043B1A || 043B7B D8          9552  			RET     C			; First character not "@", "A" to "Z" or "a" to "z", so not a variable
	ld	hl,$000000                  ; 043B7C || 	ld	hl,$000000                  ; 043B1B || 043B7C 21 00 00 00 9553  			LD      HL, 0			; Clear HL
	cp	$1b                         ; 043B80 || 	cp	$1b                         ; 043B1F || 043B80 FE 1B       9554  			CP      'Z'-'@'+1		; Check for static ("@", "A" to "Z"); if it is not static...
	jr	nc,$+$20                    ; 043B82 || 	jr	nc,$+$20                    ; 043B21 || 043B82 30 1E       9555  			JR      NC,LOC0         	; Then branch here
	ld	l,a                         ; 043B84 || 	ld	l,a                         ; 043B23 || 043B84 6F          9556  			LD	L, A			; HL = A
	ld	a,(iy+$01)                  ; 043B85 || 	ld	a,(iy+$01)                  ; 043B24 || 043B85 FD 7E 01    9557  			LD      A,(IY+1)        	; Check the 2nd character
	cp	$25                         ; 043B88 || 	cp	$25                         ; 043B27 || 043B88 FE 25       9558  			CP      '%'			; If not "%" then it is not static...
	jr	nz,$+$23                    ; 043B8A || 	jr	nz,$+$23                    ; 043B29 || 043B8A 20 21       9559  			JR      NZ,LOC1         	; Branch here
	ld	a,(iy+$02)                  ; 043B8C || 	ld	a,(iy+$02)                  ; 043B2B || 043B8C FD 7E 02    9560  			LD      A,(IY+2)		; Check the 3rd character
	cp	$28                         ; 043B8F || 	cp	$28                         ; 043B2E || 043B8F FE 28       9561  			CP      '('			; If it is "(" (array) then it is not static...
	jr	z,$+$1c                     ; 043B91 || 	jr	z,$+$1c                     ; 043B30 || 043B91 28 1A       9562  			JR      Z,LOC1          	; Branch here
	add	hl,hl                      ; 043B93 || 	add	hl,hl                      ; 043B32 || 043B93 29          9566  			ADD     HL,HL			; HL: Variable index * 4
	add	hl,hl                      ; 043B94 || 	add	hl,hl                      ; 043B33 || 043B94 29          9567  			ADD	HL,HL
	ld	de,$044c00                  ; 043B95 || 	ld	de,$044c00                  ; 043B34 || 043B95 11 00 4C 04 9568  			LD      DE,STAVAR       	; The static variable area in memory
	add	hl,de                      ; 043B99 || 	add	hl,de                      ; 043B38 || 043B99 19          9569  			ADD     HL,DE			; HL: The address of the static variable
	inc	iy                         ; 043B9A || 	inc	iy                         ; 043B39 || 043B9A FD 23       9570  			INC     IY			; Skip the program pointer past the static variable name
	inc	iy                         ; 043B9C || 	inc	iy                         ; 043B3B || 043B9C FD 23       9571  			INC     IY
	ld	d,$04                       ; 043B9E || 	ld	d,$04                       ; 043B3D || 043B9E 16 04       9572  			LD      D,4             	; Set the type to be integer
	xor	a                          ; 043BA0 || 	xor	a                          ; 043B3F || 043BA0 AF          9573  			XOR     A			; Set the Z flag
	ret                            ; 043BA1 || 	ret                            ; 043B40 || 043BA1 C9          9574  			RET
	cp	$1f                         ; 043BA2 || 	cp	$1f                         ; 043B41 || 043BA2 FE 1F       9578  LOC0:			CP      '_'-'@'			; Check the first character is in
	ret	c                          ; 043BA4 || 	ret	c                          ; 043B43 || 043BA4 D8          9579  			RET     C			; the range "_" to
	cp	$3b                         ; 043BA5 || 	cp	$3b                         ; 043B44 || 043BA5 FE 3B       9580  			CP      'z'-'@'+1		; "z" (lowercase characters only)
	ccf                            ; 043BA7 || 	ccf                            ; 043B46 || 043BA7 3F          9581  			CCF				; If it is not in range then
	dec	a                          ; 043BA8 || 	dec	a                          ; 043B47 || 043BA8 3D          9582  			DEC     A               	; Set NZ flag and
	ret	c                          ; 043BA9 || 	ret	c                          ; 043B48 || 043BA9 D8          9583  			RET     C			; Exit here
	sub	$03                        ; 043BAA || 	sub	$03                        ; 043B49 || 043BAA D6 03       9584  			SUB     3			; This brings it in the range of 27 upwards (need to confirm)
	ld	l,a                         ; 043BAC || 	ld	l,a                         ; 043B4B || 043BAC 6F          9585  			LD	L, A			; HL = A
	ld	a,l                         ; 043BAD || 	ld	a,l                         ; 043B4C || 043BAD 7D          9589  LOC1:			LD	A, L			; Fetch variable index
	add	a,a                        ; 043BAE || 	add	a,a                        ; 043B4D || 043BAE 87          9590  			ADD	A, A			; x 2
	add	a,l                        ; 043BAF || 	add	a,l                        ; 043B4E || 043BAF 85          9591  			ADD	A, L			; x 3
	sub	$03                        ; 043BB0 || 	sub	$03                        ; 043B4F || 043BB0 D6 03       9592  			SUB	3			; Subtract 2 TODO: Should be 3
	ld	l,a                         ; 043BB2 || 	ld	l,a                         ; 043B51 || 043BB2 6F          9593  			LD	L, A
	ld	de,$044c6c                  ; 043BB3 || 	ld	de,$044c6c                  ; 043B52 || 043BB3 11 6C 4C 04 9594  			LD      DE, DYNVAR       	; The dynamic variable storage
	ret	c                          ; 043BB7 || 	ret	c                          ; 043B56 || 043BB7 D8          9595  			RET	C			; Bounds check to trap for variable '@'
	add	hl,de                      ; 043BB8 || 	add	hl,de                      ; 043B57 || 043BB8 19          9596  			ADD     HL, DE			; HL: Address of first entry
	ld	de,(hl)                     ; 043BB9 || 	ld	de,(hl)                     ; 043B58 || 043BB9 ED 17       9600  LOC2:			LD	DE, (HL)		; Fetch the original pointer
	push	hl                        ; 043BBB || 	push	hl                        ; 043B5A || 043BBB E5          9601  			PUSH	HL			; Need to preserve HL for LOC6
	xor	a                          ; 043BBC || 	xor	a                          ; 043B5B || 043BBC AF          9602  			XOR	A			; Reset carry flag
	sbc	hl,hl                      ; 043BBD || 	sbc	hl,hl                      ; 043B5C || 043BBD ED 62       9603  			SBC	HL, HL			; Set HL to 0
	sbc	hl,de                      ; 043BBF || 	sbc	hl,de                      ; 043B5E || 043BBF ED 52       9604  			SBC	HL, DE			; Compare with 0
	pop	hl                         ; 043BC1 || 	pop	hl                         ; 043B60 || 043BC1 E1          9605  			POP	HL			; Restore the original pointer
	jr	z,$+$4b                     ; 043BC2 || 	jr	z,$+$4b                     ; 043B61 || 043BC2 28 49       9606  			JR	Z, LOC6			; If the pointer in DE is zero, the variable is undefined at this point
	push	de                        ; 043BC4 || 	push	de                        ; 043B63 || 043BC4 D5          9608  			push de
	pop	hl                         ; 043BC5 || 	pop	hl                         ; 043B64 || 043BC5 E1          9609  			pop hl ; how was that even possible?
	inc	hl                         ; 043BC6 || 	inc	hl                         ; 043B65 || 043BC6 23          9610  			INC     HL              	; Skip the link (24-bits)
	inc	hl                         ; 043BC7 || 	inc	hl                         ; 043B66 || 043BC7 23          9611  			INC     HL
	inc	hl                         ; 043BC8 || 	inc	hl                         ; 043B67 || 043BC8 23          9612  			INC	HL			; HL: Address of the variable name in DYNVARS
	push	iy                        ; 043BC9 || 	push	iy                        ; 043B68 || 043BC9 FD E5       9613  			PUSH    IY			; IY: Address of the variable name in the program
	ld	a,(hl)                      ; 043BCB || 	ld	a,(hl)                      ; 043B6A || 043BCB 7E          9615  LOC3:			LD      A,(HL)         		; Compare
	inc	hl                         ; 043BCC || 	inc	hl                         ; 043B6B || 043BCC 23          9616  			INC     HL
	inc	iy                         ; 043BCD || 	inc	iy                         ; 043B6C || 043BCD FD 23       9617  			INC     IY
	cp	(iy)                        ; 043BCF || 	cp	(iy)                        ; 043B6E || 043BCF FD BE 00    9618  			CP      (IY)
	jr	z,$-$07                     ; 043BD2 || 	jr	z,$-$07                     ; 043B71 || 043BD2 28 F7       9619  			JR      Z, LOC3			; Keep looping whilst we've got a match...
	or	a                           ; 043BD4 || 	or	a                           ; 043B73 || 043BD4 B7          9620  			OR      A               	; Have we hit a terminator?
	jr	z,$+$09                     ; 043BD5 || 	jr	z,$+$09                     ; 043B74 || 043BD5 28 07       9621  			JR      Z,LOC5          	; Yes, so maybe we've found a variable
	pop	iy                         ; 043BD7 || 	pop	iy                         ; 043B76 || 043BD7 FD E1       9623  LOC4:			POP     IY			; Restore the pointer in the program
	ex	de,hl                       ; 043BD9 || 	ex	de,hl                       ; 043B78 || 043BD9 EB          9624  			EX      DE, HL			; HL: New pointer in DYNVARS
	jp	$043bb9                     ; 043BDA || 	jp	$043b58                     ; 043B79 || 043BDA C3 B9 3B 04 9625  			JP      LOC2            	; Loop round and try again
	dec	iy                         ; 043BDE || 	dec	iy                         ; 043B7D || 043BDE FD 2B       9629  LOC5:			DEC     IY
	ld	a,(iy)                      ; 043BE0 || 	ld	a,(iy)                      ; 043B7F || 043BE0 FD 7E 00    9630  			LD      A,(IY)
	cp	$28                         ; 043BE3 || 	cp	$28                         ; 043B82 || 043BE3 FE 28       9631  			CP      '('
	jr	z,$+$17                     ; 043BE5 || 	jr	z,$+$17                     ; 043B84 || 043BE5 28 15       9632  			JR      Z,LOC5A         	; FOUND
	inc	iy                         ; 043BE7 || 	inc	iy                         ; 043B86 || 043BE7 FD 23       9633  			INC     IY
	call	$043cd0                   ; 043BE9 || 	call	$043c6f                   ; 043B88 || 043BE9 CD D0 3C 04 9634  			CALL    RANGE
	jr	c,$+$0f                     ; 043BED || 	jr	c,$+$0f                     ; 043B8C || 043BED 38 0D       9635  			JR      C,LOC5A         	; FOUND
	cp	$28                         ; 043BEF || 	cp	$28                         ; 043B8E || 043BEF FE 28       9636  			CP      '('
	jr	z,$-$1a                     ; 043BF1 || 	jr	z,$-$1a                     ; 043B90 || 043BF1 28 E4       9637  			JR      Z,LOC4          	; KEEP LOOKING
	ld	a,(iy-$01)                  ; 043BF3 || 	ld	a,(iy-$01)                  ; 043B92 || 043BF3 FD 7E FF    9638  			LD      A,(IY-1)
	call	$043cdc                   ; 043BF6 || 	call	$043c7b                   ; 043B95 || 043BF6 CD DC 3C 04 9639  			CALL    RANGE1
	jr	nc,$-$23                    ; 043BFA || 	jr	nc,$-$23                    ; 043B99 || 043BFA 30 DB       9640  			JR      NC,LOC4         	; KEEP LOOKING
	pop	de                         ; 043BFC || 	pop	de                         ; 043B9B || 043BFC D1          9641  LOC5A:			POP     DE
	ld	a,(iy-$01)                  ; 043BFD || 	ld	a,(iy-$01)                  ; 043B9C || 043BFD FD 7E FF    9642  TYPE_:			LD      A,(IY-1)		; Check the string type postfix
	cp	$24                         ; 043C00 || 	cp	$24                         ; 043B9F || 043C00 FE 24       9643  			CP      '$'			; Is it a string?
	ld	d,$81                       ; 043C02 || 	ld	d,$81                       ; 043BA1 || 043C02 16 81       9644  			LD      D,129			; Yes, so return D = 129
	ret	z                          ; 043C04 || 	ret	z                          ; 043BA3 || 043C04 C8          9645  			RET     Z
	cp	$25                         ; 043C05 || 	cp	$25                         ; 043BA4 || 043C05 FE 25       9646  			CP      '%'			; Is it an integer?
	ld	d,$04                       ; 043C07 || 	ld	d,$04                       ; 043BA6 || 043C07 16 04       9647  			LD      D,4			; Yes, so return D = 4
	ret	z                          ; 043C09 || 	ret	z                          ; 043BA8 || 043C09 C8          9648  			RET     Z
	inc	d                          ; 043C0A || 	inc	d                          ; 043BA9 || 043C0A 14          9649  			INC     D			; At this point it must be a float
	cp	a                           ; 043C0B || 	cp	a                           ; 043BAA || 043C0B BF          9650  			CP      A			; Set the flags
	ret                            ; 043C0C || 	ret                            ; 043BAB || 043C0C C9          9651  			RET
	inc	a                          ; 043C0D || 	inc	a                          ; 043BAC || 043C0D 3C          9655  LOC6:			INC     A               	; Set NZ flag
	ret                            ; 043C0E || 	ret                            ; 043BAD || 043C0E C9          9656  			RET
	xor	a                          ; 043C0F || 	xor	a                          ; 043BAE || 043C0F AF          9663  CREATE:			XOR     A
	ld	de,($044d1d)                ; 043C10 || 	ld	de,($044d1d)                ; 043BAF || 043C10 ED 5B 1D 4D 9664  			LD      DE,(FREE)		; Get the last byte of available RAM
	ld	(hl),de                     ; 043C15 || 	ld	(hl),de                     ; 043BB4 || 043C15 ED 1F       9665  			LD	(HL), DE		; Store
	ex	de,hl                       ; 043C17 || 	ex	de,hl                       ; 043BB6 || 043C17 EB          9666  			EX      DE,HL
	ld	(hl),a                      ; 043C18 || 	ld	(hl),a                      ; 043BB7 || 043C18 77          9667  			LD      (HL),A			; Clear the link of the new entity
	inc	hl                         ; 043C19 || 	inc	hl                         ; 043BB8 || 043C19 23          9668  			INC     HL
	ld	(hl),a                      ; 043C1A || 	ld	(hl),a                      ; 043BB9 || 043C1A 77          9669  			LD      (HL),A
	inc	hl                         ; 043C1B || 	inc	hl                         ; 043BBA || 043C1B 23          9670  			INC     HL
	ld	(hl),a                      ; 043C1C || 	ld	(hl),a                      ; 043BBB || 043C1C 77          9671  			LD      (HL),A
	inc	hl                         ; 043C1D || 	inc	hl                         ; 043BBC || 043C1D 23          9672  			INC     HL
	inc	iy                         ; 043C1E || 	inc	iy                         ; 043BBD || 043C1E FD 23       9673  LOC7:			INC     IY
	call	$043cd0                   ; 043C20 || 	call	$043c6f                   ; 043BBF || 043C20 CD D0 3C 04 9674  			CALL    RANGE           	; END OF VARIABLE?
	jr	c,$+$17                     ; 043C24 || 	jr	c,$+$17                     ; 043BC3 || 043C24 38 15       9675  			JR      C,LOC8
	ld	(hl),a                      ; 043C26 || 	ld	(hl),a                      ; 043BC5 || 043C26 77          9676  			LD      (HL),A
	inc	hl                         ; 043C27 || 	inc	hl                         ; 043BC6 || 043C27 23          9677  			INC     HL
	call	$043cdc                   ; 043C28 || 	call	$043c7b                   ; 043BC7 || 043C28 CD DC 3C 04 9678  			CALL    RANGE1
	jr	nc,$-$0e                    ; 043C2C || 	jr	nc,$-$0e                    ; 043BCB || 043C2C 30 F0       9679  			JR      NC,LOC7
	cp	$28                         ; 043C2E || 	cp	$28                         ; 043BCD || 043C2E FE 28       9680  			CP      '('
	jr	z,$+$0b                     ; 043C30 || 	jr	z,$+$0b                     ; 043BCF || 043C30 28 09       9681  			JR      Z,LOC8
	ld	a,(iy+$01)                  ; 043C32 || 	ld	a,(iy+$01)                  ; 043BD1 || 043C32 FD 7E 01    9682  			LD      A,(IY+1)
	cp	$28                         ; 043C35 || 	cp	$28                         ; 043BD4 || 043C35 FE 28       9683  			CP      '('
	jr	z,$-$19                     ; 043C37 || 	jr	z,$-$19                     ; 043BD6 || 043C37 28 E5       9684  			JR      Z,LOC7
	inc	iy                         ; 043C39 || 	inc	iy                         ; 043BD8 || 043C39 FD 23       9685  			INC     IY
	ld	(hl),$00                    ; 043C3B || 	ld	(hl),$00                    ; 043BDA || 043C3B 36 00       9686  LOC8:			LD      (HL),0          	; TERMINATOR
	inc	hl                         ; 043C3D || 	inc	hl                         ; 043BDC || 043C3D 23          9687  			INC     HL
	push	hl                        ; 043C3E || 	push	hl                        ; 043BDD || 043C3E E5          9688  			PUSH    HL
	call	$043bfd                   ; 043C3F || 	call	$043b9c                   ; 043BDE || 043C3F CD FD 3B 04 9689  			CALL    TYPE_			; Get the variable type in D
	ld	a,$04                       ; 043C43 || 	ld	a,$04                       ; 043BE2 || 043C43 3E 04       9690  			LD      A,4			; If it is an integer then it takes up 4 bytes
	cp	d                           ; 043C45 || 	cp	d                           ; 043BE4 || 043C45 BA          9691  			CP      D
	jr	z,$+$03                     ; 043C46 || 	jr	z,$+$03                     ; 043BE5 || 043C46 28 01       9692  			JR      Z,LOC9			; So skip the next bit
	inc	a                          ; 043C48 || 	inc	a                          ; 043BE7 || 043C48 3C          9693  			INC     A			; Strings and floats take up 5 bytes (NB: Strings take up 4 in BBC BASIC for Z80)
	ld	(hl),$00                    ; 043C49 || 	ld	(hl),$00                    ; 043BE8 || 043C49 36 00       9694  LOC9:			LD      (HL),0          	; Initialise the memory to zero
	inc	hl                         ; 043C4B || 	inc	hl                         ; 043BEA || 043C4B 23          9695  			INC     HL
	dec	a                          ; 043C4C || 	dec	a                          ; 043BEB || 043C4C 3D          9696  			DEC     A
	jr	nz,$-$04                    ; 043C4D || 	jr	nz,$-$04                    ; 043BEC || 043C4D 20 FA       9697  			JR      NZ,LOC9
	ld	($044d1d),hl                ; 043C4F || 	ld	($044d1d),hl                ; 043BEE || 043C4F 22 1D 4D 04 9698  			LD      (FREE),HL		; Adjust the stack
	call	$04168c                   ; 043C53 || 	call	$04164f                   ; 043BF2 || 043C53 CD 8C 16 04 9699  			CALL    CHECK			; Check whether we are out of space
	pop	hl                         ; 043C57 || 	pop	hl                         ; 043BF6 || 043C57 E1          9700  			POP     HL
	xor	a                          ; 043C58 || 	xor	a                          ; 043BF7 || 043C58 AF          9701  			XOR     A
	ret                            ; 043C59 || 	ret                            ; 043BF8 || 043C59 C9          9702  			RET
	call	$040a83                   ; 043C5A || 	call	$040a70                   ; 043BF9 || 043C5A CD 83 0A 04 9722  LINNUM:			CALL    NXT			; Skip whitespace to the first character
	ld.sis	hl,$0000                ; 043C5E || 	ld.sis	hl,$0000                ; 043BFD || 043C5E 40 21 00 00 9723  			LD.SIS  HL,0			; The running total
	ld	a,(iy)                      ; 043C62 || 	ld	a,(iy)                      ; 043C01 || 043C62 FD 7E 00    9724  LINNM1:			LD      A,(IY)			; A: Fetch the digit to add in
	sub	$30                        ; 043C65 || 	sub	$30                        ; 043C04 || 043C65 D6 30       9725  			SUB     '0'			; Sub ASCII '0' to make a binary number (0-9)
	ret	c                          ; 043C67 || 	ret	c                          ; 043C06 || 043C67 D8          9726  			RET     C			; And return if less than 0
	cp	$0a                         ; 043C68 || 	cp	$0a                         ; 043C07 || 043C68 FE 0A       9727  			CP      10			; Or greater than or equal to 10
	ret	nc                         ; 043C6A || 	ret	nc                         ; 043C09 || 043C6A D0          9728  			RET     NC			; As we've hit a non-numeric character (end of number) at this point
	inc	iy                         ; 043C6B || 	inc	iy                         ; 043C0A || 043C6B FD 23       9729  			INC     IY			; Increment the string pointer
	ld	d,h                         ; 043C6D || 	ld	d,h                         ; 043C0C || 043C6D 54          9730  			LD      D,H			; This next block multiplys HL by 10, shifting the result left in BASE 10
	ld	e,l                         ; 043C6E || 	ld	e,l                         ; 043C0D || 043C6E 5D          9731  			LD      E,L			; Store the original number in DE
	add.sil	hl,hl                  ; 043C6F || 	add.sil	hl,hl                  ; 043C0E || 043C6F 52 29       9732  			ADD.S   HL,HL           	; *2
	jr	c,$+$15                     ; 043C71 || 	jr	c,$+$15                     ; 043C10 || 043C71 38 13       9733  			JR      C,TOOBIG		; At each point, error if > 65535 (carry flag set)
	add.sil	hl,hl                  ; 043C73 || 	add.sil	hl,hl                  ; 043C12 || 043C73 52 29       9734  			ADD.S   HL,HL           	; *4S
	jr	c,$+$11                     ; 043C75 || 	jr	c,$+$11                     ; 043C14 || 043C75 38 0F       9735  			JR      C,TOOBIG
	add.sil	hl,de                  ; 043C77 || 	add.sil	hl,de                  ; 043C16 || 043C77 52 19       9736  			ADD.S   HL,DE           	; *5
	jr	c,$+$0d                     ; 043C79 || 	jr	c,$+$0d                     ; 043C18 || 043C79 38 0B       9737  			JR      C,TOOBIG
	add.sil	hl,hl                  ; 043C7B || 	add.sil	hl,hl                  ; 043C1A || 043C7B 52 29       9738  			ADD.S   HL,HL           	; *10
	jr	c,$+$09                     ; 043C7D || 	jr	c,$+$09                     ; 043C1C || 043C7D 38 07       9739  			JR      C,TOOBIG
	ld	e,a                         ; 043C7F || 	ld	e,a                         ; 043C1E || 043C7F 5F          9740  			LD      E,A			; A->DE: the digit to add in
	ld	d,$00                       ; 043C80 || 	ld	d,$00                       ; 043C1F || 043C80 16 00       9741  			LD      D,0
	add.sil	hl,de                  ; 043C82 || 	add.sil	hl,de                  ; 043C21 || 043C82 52 19       9742  			ADD.S   HL,DE           	; Add in the digit to the running total
	jr	nc,$-$22                    ; 043C84 || 	jr	nc,$-$22                    ; 043C23 || 043C84 30 DC       9743  			JR      NC,LINNM1       	; And if it is still <= 65535, loop
	ld	a,$14                       ; 043C86 || 	ld	a,$14                       ; 043C25 || 043C86 3E 14       9745  TOOBIG:			LD      A,20
	jp	$0437c1                     ; 043C88 || 	jp	$043760                     ; 043C27 || 043C88 C3 C1 37 04 9746  			JP      ERROR_           	; Error: "Too big"
	call	$043c5a                   ; 043C8C || 	call	$043bf9                   ; 043C2B || 043C8C CD 5A 3C 04 9754  PAIR:			CALL    LINNUM          	; Parse the first line number
	ld	a,h                         ; 043C90 || 	ld	a,h                         ; 043C2F || 043C90 7C          9755  			LD      A,H			; If it is not zero, then...
	or	l                           ; 043C91 || 	or	l                           ; 043C30 || 043C91 B5          9756  			OR      L
	jr	nz,$+$04                    ; 043C92 || 	jr	nz,$+$04                    ; 043C31 || 043C92 20 02       9757  			JR      NZ,PAIR1		; Skip...
	ld	l,$0a                       ; 043C94 || 	ld	l,$0a                       ; 043C33 || 043C94 2E 0A       9758  			LD      L,10			; HL: the default value (10)
	call	$0417b7                   ; 043C96 || 	call	$04177a                   ; 043C35 || 043C96 CD B7 17 04 9760  PAIR1:			CALL    TERMQ			; Check for ELSE, : or CR
	inc	iy                         ; 043C9A || 	inc	iy                         ; 043C39 || 043C9A FD 23       9761  			INC     IY			; Skip to next character
	push	hl                        ; 043C9C || 	push	hl                        ; 043C3B || 043C9C E5          9762  			PUSH    HL			; Stack the first line number
	ld	hl,$00000a                  ; 043C9D || 	ld	hl,$00000a                  ; 043C3C || 043C9D 21 0A 00 00 9763  			LD      HL,10			; HL: the second default (10)
	call	nz,$043c5a                ; 043CA1 || 	call	nz,$043bf9                ; 043C40 || 043CA1 C4 5A 3C 04 9764  			CALL    NZ,LINNUM       	; Parse the second line number
	ex	(sp),hl                     ; 043CA5 || 	ex	(sp),hl                     ; 043C44 || 043CA5 E3          9765  			EX      (SP),HL			; HL: The first line number (off the stack)
	pop	bc                         ; 043CA6 || 	pop	bc                         ; 043C45 || 043CA6 C1          9766  			POP     BC			; BC: Second line number
	ld	a,b                         ; 043CA7 || 	ld	a,b                         ; 043C46 || 043CA7 78          9767  			LD      A,B			; If the second line number is not zero then...
	or	c                           ; 043CA8 || 	or	c                           ; 043C47 || 043CA8 B1          9768  			OR      C			; We're good...
	ret	nz                         ; 043CA9 || 	ret	nz                         ; 043C48 || 043CA9 C0          9769  			RET     NZ			; Exit, otherwise...
	call	$0437d8                   ; 043CAA || 	call	$043777                   ; 043C49 || 043CAA CD D8 37 04 9770  			CALL    EXTERR			; Throw error: "Silly"
	ld	d,e                         ; 043CAE || 	ld	d,e                         ; 043C4D || 043CAE 53 69 6C 6C 9771  			DB    	"Silly", 0
	ld	l,c                         ; 043CAF || 	ld	l,c                         ; 043C4E
	ld	l,h                         ; 043CB0 || 	ld	l,h                         ; 043C4F
	ld	l,h                         ; 043CB1 || 	ld	l,h                         ; 043C50
	ld	a,c                         ; 043CB2 || 	ld	a,c                         ; 043C51
	nop                            ; 043CB3 || 	nop                            ; 043C52
	call	$043c5a                   ; 043CB4 || 	call	$043bf9                   ; 043C53 || 043CB4 CD 5A 3C 04 9779  DLPAIR:			CALL    LINNUM			; Parse the first line number
	push	hl                        ; 043CB8 || 	push	hl                        ; 043C57 || 043CB8 E5          9780  			PUSH    HL			; Stack it
	call	$0417b7                   ; 043CB9 || 	call	$04177a                   ; 043C58 || 043CB9 CD B7 17 04 9781  			CALL    TERMQ			; Check for ELSE, : or CR
	jr	z,$+$0c                     ; 043CBD || 	jr	z,$+$0c                     ; 043C5C || 043CBD 28 0A       9782  			JR      Z,DLP1			; And exit if so
	cp	$e7                         ; 043CBF || 	cp	$e7                         ; 043C5E || 043CBF FE E7       9783  			CP      TIF			; Is the token IF?
	jr	z,$+$08                     ; 043CC1 || 	jr	z,$+$08                     ; 043C60 || 043CC1 28 06       9784  			JR      Z,DLP1			; Yes, so skip the next bit...
	inc	iy                         ; 043CC3 || 	inc	iy                         ; 043C62 || 043CC3 FD 23       9785  			INC     IY			; Otherwise...
	call	$043c5a                   ; 043CC5 || 	call	$043bf9                   ; 043C64 || 043CC5 CD 5A 3C 04 9786  			CALL    LINNUM			; Fetch the second line number
	ex	(sp),hl                     ; 043CC9 || 	ex	(sp),hl                     ; 043C68 || 043CC9 E3          9787  DLP1:			EX      (SP),HL			; HL: The first line number (off the stack)
	call	$0439f0                   ; 043CCA || 	call	$04398f                   ; 043C69 || 043CCA CD F0 39 04 9788  			CALL    FINDL			; HL: Find the address of the line
	pop	bc                         ; 043CCE || 	pop	bc                         ; 043C6D || 043CCE C1          9789  			POP     BC			; BC: The second number
	ret                            ; 043CCF || 	ret                            ; 043C6E || 043CCF C9          9790  			RET
	ld	a,(iy)                      ; 043CD0 || 	ld	a,(iy)                      ; 043C6F || 043CD0 FD 7E 00    9801  RANGE:			LD      A,(IY)			; Fetch the character
	cp	$24                         ; 043CD3 || 	cp	$24                         ; 043C72 || 043CD3 FE 24       9802  			CP      '$'			; Postfix for string variable is valid
	ret	z                          ; 043CD5 || 	ret	z                          ; 043C74 || 043CD5 C8          9803  			RET     Z
	cp	$25                         ; 043CD6 || 	cp	$25                         ; 043C75 || 043CD6 FE 25       9804  			CP      '%'			; Postfix for integer variable is valid
	ret	z                          ; 043CD8 || 	ret	z                          ; 043C77 || 043CD8 C8          9805  			RET     Z
	cp	$28                         ; 043CD9 || 	cp	$28                         ; 043C78 || 043CD9 FE 28       9806  			CP      '('			; Postfix for array is valid
	ret	z                          ; 043CDB || 	ret	z                          ; 043C7A || 043CDB C8          9807  			RET     Z
	cp	$30                         ; 043CDC || 	cp	$30                         ; 043C7B || 043CDC FE 30       9813  RANGE1:			CP      '0'			; If it is between '0'...
	ret	c                          ; 043CDE || 	ret	c                          ; 043C7D || 043CDE D8          9814  			RET     C
	cp	$3a                         ; 043CDF || 	cp	$3a                         ; 043C7E || 043CDF FE 3A       9815  			CP      '9'+1			; And '9'...
	ccf                            ; 043CE1 || 	ccf                            ; 043C80 || 043CE1 3F          9816  			CCF
	ret	nc                         ; 043CE2 || 	ret	nc                         ; 043C81 || 043CE2 D0          9817  			RET     NC			; Then it is valid
	cp	$40                         ; 043CE3 || 	cp	$40                         ; 043C82 || 043CE3 FE 40       9818  			CP      '@'             	; The prefix @ is valid (@% controls numeric print formatting - v2.4)
	ret	z                          ; 043CE5 || 	ret	z                          ; 043C84 || 043CE5 C8          9819  			RET     Z
	cp	$41                         ; 043CE6 || 	cp	$41                         ; 043C85 || 043CE6 FE 41       9824  RANGE2:			CP      'A'			; If it is between 'A'...
	ret	c                          ; 043CE8 || 	ret	c                          ; 043C87 || 043CE8 D8          9825  			RET     C
	cp	$5b                         ; 043CE9 || 	cp	$5b                         ; 043C88 || 043CE9 FE 5B       9826  			CP      'Z'+1			; And 'Z'...
	ccf                            ; 043CEB || 	ccf                            ; 043C8A || 043CEB 3F          9827  			CCF
	ret	nc                         ; 043CEC || 	ret	nc                         ; 043C8B || 043CEC D0          9828  			RET     NC			; Then it is valid
	cp	$5f                         ; 043CED || 	cp	$5f                         ; 043C8C || 043CED FE 5F       9829  			CP      '_'			; If it is underscore, grave, or between 'a'
	ret	c                          ; 043CEF || 	ret	c                          ; 043C8E || 043CEF D8          9830  			RET     C
	cp	$7b                         ; 043CF0 || 	cp	$7b                         ; 043C8F || 043CF0 FE 7B       9831  			CP      'z'+1			; And 'z'
	ccf                            ; 043CF2 || 	ccf                            ; 043C91 || 043CF2 3F          9832  			CCF				; Then it is valid
	ret                            ; 043CF3 || 	ret                            ; 043C92 || 043CF3 C9          9833  			RET
	xor	a                          ; 043CF4 || 	xor	a                          ; 043C93 || 043CF4 AF          9838  SPACE_: 		XOR     A
	call	$0437d8                   ; 043CF5 || 	call	$043777                   ; 043C94 || 043CF5 CD D8 37 04 9839  			CALL    EXTERR          	; "LINE space"
	add	a,(hl)                     ; 043CF9 || 	add	a,(hl)                     ; 043C98 || 043CF9 86 08 00    9840  			DB    	LINE_, 8, 0
	ex	af,af'                      ; 043CFA || 	ex	af,af'                      ; 043C99
	nop                            ; 043CFB || 	nop                            ; 043C9A
	ld	(de),a                      ; 043CFC || 	ld	(de),a                      ; 043C9B || 043CFC 12          9856  LEXAN1:			LD      (DE),A          	; Transfer to buffer
	inc	de                         ; 043CFD || 	inc	de                         ; 043C9C || 043CFD 13          9857  			INC     DE              	; Increment the pointers
	inc	iy                         ; 043CFE || 	inc	iy                         ; 043C9D || 043CFE FD 23       9858  			INC     IY			; And fall through to the main function
	ld	a,e                         ; 043D00 || 	ld	a,e                         ; 043C9F || 043D00 7B          9862  LEXAN2:			LD      A,E             	; Destination buffer on page boundary, so E can be used as length
	cp	$fc                         ; 043D01 || 	cp	$fc                         ; 043CA0 || 043D01 FE FC       9863  			CP      252             	; If it is >= 252 bytes, then...
	jr	nc,$-$0f                    ; 043D03 || 	jr	nc,$-$0f                    ; 043CA2 || 043D03 30 EF       9864  			JR      NC,SPACE_        	; Throw a 'LINE space' error (line too long)
	ld	a,(iy)                      ; 043D05 || 	ld	a,(iy)                      ; 043CA4 || 043D05 FD 7E 00    9865  			LD      A,(IY)			; Fetch character from source string
	cp	$0d                         ; 043D08 || 	cp	$0d                         ; 043CA7 || 043D08 FE 0D       9866  			CP      CR			; If it is a CR
	ret	z                          ; 043D0A || 	ret	z                          ; 043CA9 || 043D0A C8          9867  			RET     Z               	; Then it is end of line; we're done parsing
	call	$043cdc                   ; 043D0B || 	call	$043c7b                   ; 043CAA || 043D0B CD DC 3C 04 9868  			CALL    RANGE1			; Is it alphanumeric, '@', '_' or '`'
	jr	nc,$+$08                    ; 043D0F || 	jr	nc,$+$08                    ; 043CAE || 043D0F 30 06       9869  			JR      NC,LEXAN3		; Yes, so skip
	res	5,c                        ; 043D11 || 	res	5,c                        ; 043CB0 || 043D11 CB A9       9870  			RES     5,C             	; FLAG: NOT IN VARIABLE
	res	3,c                        ; 043D13 || 	res	3,c                        ; 043CB2 || 043D13 CB 99       9871  			RES     3,C             	; FLAG: NOT IN HEX
	res	2,c                        ; 043D15 || 	res	2,c                        ; 043CB4 || 043D15 CB 91       9872  			RES	2,C			; FLAG: NOT IN BINARY
	cp	$20                         ; 043D17 || 	cp	$20                         ; 043CB6 || 043D17 FE 20       9874  LEXAN3:			CP      ' '			; Ignore spaces
	jr	z,$-$1d                     ; 043D19 || 	jr	z,$-$1d                     ; 043CB8 || 043D19 28 E1       9875  			JR      Z,LEXAN1
	cp	$2c                         ; 043D1B || 	cp	$2c                         ; 043CBA || 043D1B FE 2C       9876  			CP      ','			; Ignore commas
	jr	z,$-$21                     ; 043D1D || 	jr	z,$-$21                     ; 043CBC || 043D1D 28 DD       9877  			JR      Z,LEXAN1
	cp	$32                         ; 043D1F || 	cp	$32                         ; 043CBE || 043D1F FE 32       9878  			CP	'2'			; If less than '2'
	jr	nc,$+$04                    ; 043D21 || 	jr	nc,$+$04                    ; 043CC0 || 043D21 30 02       9879  			JR	NC, @F			; No, so skip
	res	2,c                        ; 043D23 || 	res	2,c                        ; 043CC2 || 043D23 CB 91       9880  			RES	2,C			; FLAG: NOT IN BINARY
	cp	$47                         ; 043D25 || 	cp	$47                         ; 043CC4 || 043D25 FE 47       9881  @@:			CP      'G'			; If less then 'G'
	jr	c,$+$04                     ; 043D27 || 	jr	c,$+$04                     ; 043CC6 || 043D27 38 02       9882  			JR      C,LEXAN4		; Yes, so skip
	res	3,c                        ; 043D29 || 	res	3,c                        ; 043CC8 || 043D29 CB 99       9883  			RES     3,C             	; FLAG: NOT IN HEX
	cp	$22                         ; 043D2B || 	cp	$22                         ; 043CCA || 043D2B FE 22       9885  LEXAN4:			CP      34			; Is it a quote character?
	jr	nz,$+$07                    ; 043D2D || 	jr	nz,$+$07                    ; 043CCC || 043D2D 20 05       9886  			JR      NZ,LEXAN5		; No, so skip
	rl	c                           ; 043D2F || 	rl	c                           ; 043CCE || 043D2F CB 11       9887  			RL      C			; Toggle bit 7 of C by shifting it into carry flag
	ccf                            ; 043D31 || 	ccf                            ; 043CD0 || 043D31 3F          9888  			CCF                     	; Toggle the carry
	rr	c                           ; 043D32 || 	rr	c                           ; 043CD1 || 043D32 CB 19       9889  			RR      C			; And then shifting it back into bit 7 of C
	bit	4,c                        ; 043D34 || 	bit	4,c                        ; 043CD3 || 043D34 CB 61       9891  LEXAN5:			BIT     4,C			; Accept line number?
	jr	z,$+$14                     ; 043D36 || 	jr	z,$+$14                     ; 043CD5 || 043D36 28 12       9892  			JR      Z,LEXAN6		; No, so skip
	res	4,c                        ; 043D38 || 	res	4,c                        ; 043CD7 || 043D38 CB A1       9893  			RES     4,C			; FLAG: DON'T ACCEPT LINE NUMBER
	push	bc                        ; 043D3A || 	push	bc                        ; 043CD9 || 043D3A C5          9894  			PUSH    BC
	push	de                        ; 043D3B || 	push	de                        ; 043CDA || 043D3B D5          9895  			PUSH    DE
	call	$043c5a                   ; 043D3C || 	call	$043bf9                   ; 043CDB || 043D3C CD 5A 3C 04 9896  			CALL    LINNUM         		; Parse the line number to HL
	pop	de                         ; 043D40 || 	pop	de                         ; 043CDF || 043D40 D1          9897  			POP     DE
	pop	bc                         ; 043D41 || 	pop	bc                         ; 043CE0 || 043D41 C1          9898  			POP     BC
	ld	a,h                         ; 043D42 || 	ld	a,h                         ; 043CE1 || 043D42 7C          9899  			LD      A,H			; If it is not zero
	or	l                           ; 043D43 || 	or	l                           ; 043CE2 || 043D43 B5          9900  			OR      L
	call	nz,$043dbd                ; 043D44 || 	call	nz,$043d5c                ; 043CE3 || 043D44 C4 BD 3D 04 9901  			CALL    NZ,ENCODE       	; Then encode the line number HL to the destination (DE)
	jr	$-$48                       ; 043D48 || 	jr	$-$48                       ; 043CE7 || 043D48 18 B6       9902  			JR      LEXAN2          	; And loop
	dec	c                          ; 043D4A || 	dec	c                          ; 043CE9 || 043D4A 0D          9904  LEXAN6:			DEC     C			; Check for C=1 (LEFT)
	jr	z,$+$0c                     ; 043D4B || 	jr	z,$+$0c                     ; 043CEA || 043D4B 28 0A       9905  			JR      Z,LEXAN7        	; If so, skip
	inc	c                          ; 043D4D || 	inc	c                          ; 043CEC || 043D4D 0C          9906  			INC     C			; Otherwise restore C
	jr	nz,$-$52                    ; 043D4E || 	jr	nz,$-$52                    ; 043CED || 043D4E 20 AC       9907  			JR      NZ,LEXAN1		; If C was 0 (RIGHT) then...
	or	a                           ; 043D50 || 	or	a                           ; 043CEF || 043D50 B7          9908  			OR      A			; Set the flags based on the character
	call	p,$043828                 ; 043D51 || 	call	p,$0437c7                 ; 043CF0 || 043D51 F4 28 38 04 9909  			CALL    P,LEX           	; Tokenise if A < 128
	jr	$+$15                       ; 043D55 || 	jr	$+$15                       ; 043CF4 || 043D55 18 13       9910  			JR      LEXAN8			; And skip
	cp	$2a                         ; 043D57 || 	cp	$2a                         ; 043CF6 || 043D57 FE 2A       9914  LEXAN7:			CP      '*'			; Is it a '*' (for star commands)
	jr	z,$+$19                     ; 043D59 || 	jr	z,$+$19                     ; 043CF8 || 043D59 28 17       9915  			JR      Z,LEXAN9		; Yes, so skip to quit tokenising
	or	a                           ; 043D5B || 	or	a                           ; 043CFA || 043D5B B7          9916  			OR      A			; Set the flags based on the character
	call	p,$043828                 ; 043D5C || 	call	p,$0437c7                 ; 043CFB || 043D5C F4 28 38 04 9917  			CALL    P,LEX           	; Tokenise if A < 128
	cp	$8f                         ; 043D60 || 	cp	$8f                         ; 043CFF || 043D60 FE 8F       9925  			CP      TOKLO			; TOKLO is 8Fh
	jr	c,$+$08                     ; 043D62 || 	jr	c,$+$08                     ; 043D01 || 043D62 38 06       9926  			JR      C,LEXAN8		; If A is < 8Fh then skip to LEX8
	cp	$94                         ; 043D64 || 	cp	$94                         ; 043D03 || 043D64 FE 94       9927  			CP      TOKHI+1			; TOKHI is 93h
	jr	nc,$+$04                    ; 043D66 || 	jr	nc,$+$04                    ; 043D05 || 043D66 30 02       9928  			JR      NC,LEXAN8		; If A is >= 94h then skip to LEX8
	add	a,$40                      ; 043D68 || 	add	a,$40                      ; 043D07 || 043D68 C6 40       9929  			ADD     A,OFFSET       		; Add OFFSET (40h) to make the token the SET version
	cp	$f4                         ; 043D6A || 	cp	$f4                         ; 043D09 || 043D6A FE F4       9931  LEXAN8:			CP      REM			; If the token is REM
	jr	z,$+$06                     ; 043D6C || 	jr	z,$+$06                     ; 043D0B || 043D6C 28 04       9932  			JR      Z,LEXAN9		; Then stop tokenising
	cp	$dc                         ; 043D6E || 	cp	$dc                         ; 043D0D || 043D6E FE DC       9933  			CP      DATA_			; If it is not DATA then
	jr	nz,$+$04                    ; 043D70 || 	jr	nz,$+$04                    ; 043D0F || 043D70 20 02       9934  			JR      NZ,LEXANA		; Skip
	set	6,c                        ; 043D72 || 	set	6,c                        ; 043D11 || 043D72 CB F1       9935  LEXAN9:			SET     6,C             	; FLAG: STOP TOKENISING
	cp	$a4                         ; 043D74 || 	cp	$a4                         ; 043D13 || 043D74 FE A4       9937  LEXANA:			CP      FN			; If the token is FN
	jr	z,$+$0c                     ; 043D76 || 	jr	z,$+$0c                     ; 043D15 || 043D76 28 0A       9938  			JR      Z,LEXANB
	cp	$f2                         ; 043D78 || 	cp	$f2                         ; 043D17 || 043D78 FE F2       9939  			CP      PROC			; Or the token is PROC
	jr	z,$+$08                     ; 043D7A || 	jr	z,$+$08                     ; 043D19 || 043D7A 28 06       9940  			JR      Z,LEXANB		; Then jump to here
	call	$043ce6                   ; 043D7C || 	call	$043c85                   ; 043D1B || 043D7C CD E6 3C 04 9941  			CALL    RANGE2			; Otherwise check the input is alphanumeric, "_" or "`"
	jr	c,$+$04                     ; 043D80 || 	jr	c,$+$04                     ; 043D1F || 043D80 38 02       9942  			JR      C,LEXANC		; Jump here if out of range
	set	5,c                        ; 043D82 || 	set	5,c                        ; 043D21 || 043D82 CB E9       9944  LEXANB:			SET     5,C             	; FLAG: IN VARIABLE/FN/PROC
	cp	$26                         ; 043D84 || 	cp	$26                         ; 043D23 || 043D84 FE 26       9945  LEXANC:			CP      '&'			; Check for hex prefix
	jr	nz,$+$04                    ; 043D86 || 	jr	nz,$+$04                    ; 043D25 || 043D86 20 02       9946  			JR      NZ,LEXAND		; If not, skip
	set	3,c                        ; 043D88 || 	set	3,c                        ; 043D27 || 043D88 CB D9       9947  			SET     3,C             	; FLAG: IN HEX
	cp	$25                         ; 043D8A || 	cp	$25                         ; 043D29 || 043D8A FE 25       9949  LEXAND:			CP	'%'			; Check for binary prefix
	jr	nz,$+$04                    ; 043D8C || 	jr	nz,$+$04                    ; 043D2B || 043D8C 20 02       9950  			JR	NZ,LEXANE		; If not, skip
	set	2,c                        ; 043D8E || 	set	2,c                        ; 043D2D || 043D8E CB D1       9951  			SET	2,C			; FLAG: IN BINARY
	ld	hl,$043db4                  ; 043D90 || 	ld	hl,$043d53                  ; 043D2F || 043D90 21 B4 3D 04 9953  LEXANE:			LD      HL,LIST1		; List of tokens that must be followed by a line number
	push	bc                        ; 043D94 || 	push	bc                        ; 043D33 || 043D94 C5          9954  			PUSH    BC
	ld	bc,$000006                  ; 043D95 || 	ld	bc,$000006                  ; 043D34 || 043D95 01 06 00 00 9955  			LD      BC,LIST1L		; The list length
	cpir                           ; 043D99 || 	cpir                           ; 043D38 || 043D99 ED B1       9956  			CPIR				; Check if the token is in this list
	pop	bc                         ; 043D9B || 	pop	bc                         ; 043D3A || 043D9B C1          9957  			POP     BC
	jr	nz,$+$04                    ; 043D9C || 	jr	nz,$+$04                    ; 043D3B || 043D9C 20 02       9958  			JR      NZ,LEXANF		; If not, then skip
	set	4,c                        ; 043D9E || 	set	4,c                        ; 043D3D || 043D9E CB E1       9959  			SET     4,C             	; FLAG: ACCEPT LINE NUMBER
	ld	hl,$043db8                  ; 043DA0 || 	ld	hl,$043d57                  ; 043D3F || 043DA0 21 B8 3D 04 9961  LEXANF:			LD      HL,LIST2		; List of tokens that switch the lexical analysis back to LEFT mode
	push	bc                        ; 043DA4 || 	push	bc                        ; 043D43 || 043DA4 C5          9962  			PUSH    BC
	ld	bc,$000005                  ; 043DA5 || 	ld	bc,$000005                  ; 043D44 || 043DA5 01 05 00 00 9963  			LD      BC,LIST2L		; The list length
	cpir                           ; 043DA9 || 	cpir                           ; 043D48 || 043DA9 ED B1       9964  			CPIR				; Check if the token is in this list
	pop	bc                         ; 043DAB || 	pop	bc                         ; 043D4A || 043DAB C1          9965  			POP     BC
	jr	nz,$+$04                    ; 043DAC || 	jr	nz,$+$04                    ; 043D4B || 043DAC 20 02       9966  			JR      NZ,LEXANG		; If not, then skip
	set	0,c                        ; 043DAE || 	set	0,c                        ; 043D4D || 043DAE CB C1       9967  			SET     0,C             	; FLAG: ENTER LEFT MODE
	jp	$043cfc                     ; 043DB0 || 	jp	$043c9b                     ; 043D4F || 043DB0 C3 FC 3C 04 9968  LEXANG:			JP      LEXAN1			; And loop
	push	hl                        ; 043DB4 || 	push	hl                        ; 043D53 || 043DB4 E5          9974  LIST1:			DB	GOTO
	call	po,$8cfcf7                ; 043DB5 || 	call	po,$8cfcf7                ; 043D54 || 043DB5 E4          9975  			DB	GOSUB
	adc	a,e                        ; 043DB9 || 	adc	a,e                        ; 043D58 || 043DB9 8B          9979  			DB	ELSE_
	push	af                        ; 043DBA || 	push	af                        ; 043D59 || 043DBA F5          9981  			DB	REPEAT
	add	a,l                        ; 043DBB || 	add	a,l                        ; 043D5A || 043DBB 85          9982  			DB	TERROR
	ld	a,($ebe1cb)                 ; 043DBC || 	ld	a,($ebe1cb)                 ; 043D5B || 043DBC 3A          9983  			DB    	':'
	ld	(hl),$8d                    ; 043DC0 || 	ld	(hl),$8d                    ; 043D5F || 043DC0 36 8D       10001  			LD      (HL), LINO		; Store 8Dh first to flag next bytes as an encoded line number
	inc	hl                         ; 043DC2 || 	inc	hl                         ; 043D61 || 043DC2 23          10002  			INC     HL
	ld	a,d                         ; 043DC3 || 	ld	a,d                         ; 043D62 || 043DC3 7A          10003  			LD      A,D			; Get the high byte
	and	$c0                        ; 043DC4 || 	and	$c0                        ; 043D63 || 043DC4 E6 C0       10004  			AND     0C0H			; Get the top two bits	DD000000
	rrca                           ; 043DC6 || 	rrca                           ; 043D65 || 043DC6 0F          10005  			RRCA				; Shift right		00DD0000
	rrca                           ; 043DC7 || 	rrca                           ; 043D66 || 043DC7 0F          10006  			RRCA
	ld	b,a                         ; 043DC8 || 	ld	b,a                         ; 043D67 || 043DC8 47          10007  			LD      B,A			; Store in B
	ld	a,e                         ; 043DC9 || 	ld	a,e                         ; 043D68 || 043DC9 7B          10008  			LD      A,E			; Get the low byte
	and	$c0                        ; 043DCA || 	and	$c0                        ; 043D69 || 043DCA E6 C0       10009  			AND     0C0H			; Get the top two bits	EE000000
	or	b                           ; 043DCC || 	or	b                           ; 043D6B || 043DCC B0          10010  			OR      B			; Combine with D	EEDD0000
	rrca                           ; 043DCD || 	rrca                           ; 043D6C || 043DCD 0F          10011  			RRCA				; Shift right		00EEDD00
	rrca                           ; 043DCE || 	rrca                           ; 043D6D || 043DCE 0F          10012  			RRCA
	xor	$54                        ; 043DCF || 	xor	$54                        ; 043D6E || 043DCF EE 54       10013  			XOR     01010100B		; XOR with 54h
	ld	(hl),a                      ; 043DD1 || 	ld	(hl),a                      ; 043D70 || 043DD1 77          10014  			LD      (HL),A			; Store this as the second byte
	inc	hl                         ; 043DD2 || 	inc	hl                         ; 043D71 || 043DD2 23          10015  			INC     HL
	ld	a,e                         ; 043DD3 || 	ld	a,e                         ; 043D72 || 043DD3 7B          10016  			LD      A,E			; Get the low byte
	and	$3f                        ; 043DD4 || 	and	$3f                        ; 043D73 || 043DD4 E6 3F       10017  			AND     3FH			; Strip the top two bits off
	or	$40                         ; 043DD6 || 	or	$40                         ; 043D75 || 043DD6 F6 40       10018  			OR      '@'			; OR with 40h
	ld	(hl),a                      ; 043DD8 || 	ld	(hl),a                      ; 043D77 || 043DD8 77          10019  			LD      (HL),A			; Store
	inc	hl                         ; 043DD9 || 	inc	hl                         ; 043D78 || 043DD9 23          10020  			INC     HL
	ld	a,d                         ; 043DDA || 	ld	a,d                         ; 043D79 || 043DDA 7A          10021  			LD      A,D			; Get the high byte
	and	$3f                        ; 043DDB || 	and	$3f                        ; 043D7A || 043DDB E6 3F       10022  			AND     3FH			; Strip the top two bits off
	or	$40                         ; 043DDD || 	or	$40                         ; 043D7C || 043DDD F6 40       10023  			OR      '@'			; OR with 40h
	ld	(hl),a                      ; 043DDF || 	ld	(hl),a                      ; 043D7E || 043DDF 77          10024  			LD      (HL),A			; Store
	inc	hl                         ; 043DE0 || 	inc	hl                         ; 043D7F || 043DE0 23          10025  			INC     HL
	ex	de,hl                       ; 043DE1 || 	ex	de,hl                       ; 043D80 || 043DE1 EB          10026  			EX      DE,HL			; DE: string pointer, HL: line number
	ret                            ; 043DE2 || 	ret                            ; 043D81 || 043DE2 C9          10027  			RET
	ld	hl,($044d2f)                ; 043DE3 || 	ld	hl,($044d2f)                ; 043D82 || 043DE3 2A 2F 4D 04 10034  REPORT:			LD      HL, (ERRTXT)		; Output an error message pointed to by ERRTXT
	ld	a,(hl)                      ; 043DE7 || 	ld	a,(hl)                      ; 043D86 || 043DE7 7E          10036  TEXT_:			LD      A, (HL)			; Fetch the character
	inc	hl                         ; 043DE8 || 	inc	hl                         ; 043D87 || 043DE8 23          10037  			INC     HL			; Increment pointer to next character
	or	a                           ; 043DE9 || 	or	a                           ; 043D88 || 043DE9 B7          10038  			OR      A			; Check for the nul (0) string terminator
	ret	z                          ; 043DEA || 	ret	z                          ; 043D89 || 043DEA C8          10039  			RET     Z			; And return if so
	call	$0439cd                   ; 043DEB || 	call	$04396c                   ; 043D8A || 043DEB CD CD 39 04 10040  			CALL    OUT_			; Output the character; note that OUT_ will detokenise tokens
	jr	$-$08                       ; 043DEF || 	jr	$-$08                       ; 043D8E || 043DEF 18 F6       10041  			JR      TEXT_			; And loop
	ex	(sp),hl                     ; 043DF1 || 	ex	(sp),hl                     ; 043D90 || 043DF1 E3          10053  TELL:			EX      (SP), HL		; Get the return address off the stack into HL, this is the
	call	$043de7                   ; 043DF2 || 	call	$043d86                   ; 043D91 || 043DF2 CD E7 3D 04 10054  			CALL    TEXT_			; first byte of the string that follows it. Print it, then
	ex	(sp),hl                     ; 043DF6 || 	ex	(sp),hl                     ; 043D95 || 043DF6 E3          10055  			EX      (SP), HL		; HL will point to the next instruction, swap this back onto the stack
	ret                            ; 043DF7 || 	ret                            ; 043D96 || 043DF7 C9          10056  			RET				; at this point we'll return to the first instruction after the message; --- End main.asm ---
	push	bc                        ; 043DF8 || 	push	bc                        ; 043D97 || 043DF8 C5          10096  ASC_TO_NUMBER:		PUSH	BC			; Preserve BC
	ld	de,$000000                  ; 043DF9 || 	ld	de,$000000                  ; 043D98 || 043DF9 11 00 00 00 10097  			LD	DE, 0			; Initialise DE
	call	$043e3f                   ; 043DFD || 	call	$043dde                   ; 043D9C || 043DFD CD 3F 3E 04 10098  			CALL	SKIPSPC			; Skip whitespace
	ld	a,(hl)                      ; 043E01 || 	ld	a,(hl)                      ; 043DA0 || 043E01 7E          10099  			LD	A, (HL)			; Read first character
	cp	$26                         ; 043E02 || 	cp	$26                         ; 043DA1 || 043E02 FE 26       10100  			CP	'&'			; Is it prefixed with '&' (HEX number)?
	jr	nz,$+$21                    ; 043E04 || 	jr	nz,$+$21                    ; 043DA3 || 043E04 20 1F       10101  			JR	NZ, ASC_TO_NUMBER3	; Jump to decimal parser if not
	inc	hl                         ; 043E06 || 	inc	hl                         ; 043DA5 || 043E06 23          10102  			INC	HL			; Otherwise fall through to ASC_TO_HEX
	ld	a,(hl)                      ; 043E07 || 	ld	a,(hl)                      ; 043DA6 || 043E07 7E          10104  ASC_TO_NUMBER1:		LD	A, (HL)			; Fetch the character
	call	$043e4d                   ; 043E08 || 	call	$043dec                   ; 043DA7 || 043E08 CD 4D 3E 04 10105  			CALL    UPPERC			; Convert to uppercase
	sub	$30                        ; 043E0C || 	sub	$30                        ; 043DAB || 043E0C D6 30       10106  			SUB	'0'			; Normalise to 0
	jr	c,$+$30                     ; 043E0E || 	jr	c,$+$30                     ; 043DAD || 043E0E 38 2E       10107  			JR 	C, ASC_TO_NUMBER4	; Return if < ASCII '0'
	cp	$0a                         ; 043E10 || 	cp	$0a                         ; 043DAF || 043E10 FE 0A       10108  			CP 	10			; Check if >= 10
	jr	c,$+$08                     ; 043E12 || 	jr	c,$+$08                     ; 043DB1 || 043E12 38 06       10109  			JR 	C,ASC_TO_NUMBER2	; No, so skip next bit
	sub	$07                        ; 043E14 || 	sub	$07                        ; 043DB3 || 043E14 D6 07       10110  			SUB 	7			; Adjust ASCII A-F to nibble
	cp	$10                         ; 043E16 || 	cp	$10                         ; 043DB5 || 043E16 FE 10       10111  			CP 	16			; Check for > F
	jr	nc,$+$26                    ; 043E18 || 	jr	nc,$+$26                    ; 043DB7 || 043E18 30 24       10112  			JR 	NC, ASC_TO_NUMBER4	; Return if out of range
	ex	de,hl                       ; 043E1A || 	ex	de,hl                       ; 043DB9 || 043E1A EB          10113  ASC_TO_NUMBER2:		EX 	DE, HL 			; Shift DE left 4 times
	add	hl,hl                      ; 043E1B || 	add	hl,hl                      ; 043DBA || 043E1B 29          10114  			ADD	HL, HL
	add	hl,hl                      ; 043E1C || 	add	hl,hl                      ; 043DBB || 043E1C 29          10115  			ADD	HL, HL
	add	hl,hl                      ; 043E1D || 	add	hl,hl                      ; 043DBC || 043E1D 29          10116  			ADD	HL, HL
	add	hl,hl                      ; 043E1E || 	add	hl,hl                      ; 043DBD || 043E1E 29          10117  			ADD	HL, HL
	ex	de,hl                       ; 043E1F || 	ex	de,hl                       ; 043DBE || 043E1F EB          10118  			EX	DE, HL
	or	e                           ; 043E20 || 	or	e                           ; 043DBF || 043E20 B3          10119  			OR      E			; OR the new digit in to the least significant nibble
	ld	e,a                         ; 043E21 || 	ld	e,a                         ; 043DC0 || 043E21 5F          10120  			LD      E, A
	inc	hl                         ; 043E22 || 	inc	hl                         ; 043DC1 || 043E22 23          10121  			INC     HL			; Onto the next character
	jr	$-$1c                       ; 043E23 || 	jr	$-$1c                       ; 043DC2 || 043E23 18 E2       10122  			JR      ASC_TO_NUMBER1		; And loop
	ld	a,(hl)                      ; 043E25 || 	ld	a,(hl)                      ; 043DC4 || 043E25 7E          10124  ASC_TO_NUMBER3:		LD	A, (HL)
	sub	$30                        ; 043E26 || 	sub	$30                        ; 043DC5 || 043E26 D6 30       10125  			SUB	'0'			; Normalise to 0
	jr	c,$+$16                     ; 043E28 || 	jr	c,$+$16                     ; 043DC7 || 043E28 38 14       10126  			JR	C, ASC_TO_NUMBER4	; Return if < ASCII '0'
	cp	$0a                         ; 043E2A || 	cp	$0a                         ; 043DC9 || 043E2A FE 0A       10127  			CP	10			; Check if >= 10
	jr	nc,$+$12                    ; 043E2C || 	jr	nc,$+$12                    ; 043DCB || 043E2C 30 10       10128  			JR	NC, ASC_TO_NUMBER4	; Return if >= 10
	ex	de,hl                       ; 043E2E || 	ex	de,hl                       ; 043DCD || 043E2E EB          10129  			EX 	DE, HL 			; Stick DE in HL
	ld	b,h                         ; 043E2F || 	ld	b,h                         ; 043DCE || 043E2F 44          10130  			LD	B, H 			; And copy HL into BC
	ld	c,l                         ; 043E30 || 	ld	c,l                         ; 043DCF || 043E30 4D          10131  			LD	C, L
	add	hl,hl                      ; 043E31 || 	add	hl,hl                      ; 043DD0 || 043E31 29          10132  			ADD	HL, HL 			; x 2
	add	hl,hl                      ; 043E32 || 	add	hl,hl                      ; 043DD1 || 043E32 29          10133  			ADD	HL, HL 			; x 4
	add	hl,bc                      ; 043E33 || 	add	hl,bc                      ; 043DD2 || 043E33 09          10134  			ADD	HL, BC 			; x 5
	add	hl,hl                      ; 043E34 || 	add	hl,hl                      ; 043DD3 || 043E34 29          10135  			ADD	HL, HL 			; x 10
	ex	de,hl                       ; 043E35 || 	ex	de,hl                       ; 043DD4 || 043E35 EB          10136  			EX	DE, HL
	add	a,e                        ; 043E36 || 	add	a,e                        ; 043DD5 || 043E36 83          0001M 		ADD	A, E
	ld	e,a                         ; 043E37 || 	ld	e,a                         ; 043DD6 || 043E37 5F          0002M 		LD	E, A
	adc	a,d                        ; 043E38 || 	adc	a,d                        ; 043DD7 || 043E38 8A          0003M 		ADC	A, D
	sub	e                          ; 043E39 || 	sub	e                          ; 043DD8 || 043E39 93          0004M 		SUB	E
	ld	d,a                         ; 043E3A || 	ld	d,a                         ; 043DD9 || 043E3A 57          0005M 		LD	D, A
	inc	hl                         ; 043E3B || 	inc	hl                         ; 043DDA || 043E3B 23          10138  			INC	HL
	jr	$-$17                       ; 043E3C || 	jr	$-$17                       ; 043DDB || 043E3C 18 E7       10139  			JR	ASC_TO_NUMBER3
	pop	bc                         ; 043E3E || 	pop	bc                         ; 043DDD || 043E3E C1          10140  ASC_TO_NUMBER4:		POP	BC 			; Fall through to SKIPSPC here
	ld	a,(hl)                      ; 043E3F || 	ld	a,(hl)                      ; 043DDE || 043E3F 7E          10145  SKIPSPC:			LD      A, (HL)
	cp	$20                         ; 043E40 || 	cp	$20                         ; 043DDF || 043E40 FE 20       10146  			CP      ' '
	ret	nz                         ; 043E42 || 	ret	nz                         ; 043DE1 || 043E42 C0          10147  			RET     NZ
	inc	hl                         ; 043E43 || 	inc	hl                         ; 043DE2 || 043E43 23          10148  			INC     HL
	jr	$-$05                       ; 043E44 || 	jr	$-$05                       ; 043DE3 || 043E44 18 F9       10149  			JR      SKIPSPC
	ld	a,(hl)                      ; 043E46 || 	ld	a,(hl)                      ; 043DE5 || 043E46 7E          10154  SKIPNOTSP:		LD	A, (HL)
	cp	$20                         ; 043E47 || 	cp	$20                         ; 043DE6 || 043E47 FE 20       10155  			CP	' '
	ret	z                          ; 043E49 || 	ret	z                          ; 043DE8 || 043E49 C8          10156  			RET	Z
	inc	hl                         ; 043E4A || 	inc	hl                         ; 043DE9 || 043E4A 23          10157  			INC	HL
	jr	$-$05                       ; 043E4B || 	jr	$-$05                       ; 043DEA || 043E4B 18 F9       10158  			JR	SKIPNOTSP
	and	$7f                        ; 043E4D || 	and	$7f                        ; 043DEC || 043E4D E6 7F       10163  UPPERC:  		AND     7FH
	cp	$60                         ; 043E4F || 	cp	$60                         ; 043DEE || 043E4F FE 60       10164  			CP      '`'
	ret	c                          ; 043E51 || 	ret	c                          ; 043DF0 || 043E51 D8          10165  			RET     C
	and	$5f                        ; 043E52 || 	and	$5f                        ; 043DF1 || 043E52 E6 5F       10166  			AND     5FH			; Convert to upper case
	ret                            ; 043E54 || 	ret                            ; 043DF3 || 043E54 C9          10167  			RET
	ex	(sp),hl                     ; 043E55 || 	ex	(sp),hl                     ; 043DF4 || 043E55 E3          10172  SWITCH_A:		EX	(SP), HL		; Swap HL with the contents of the top of the stack
	add	a,a                        ; 043E56 || 	add	a,a                        ; 043DF5 || 043E56 87          10173  			ADD	A, A			; Multiply A by two
	add	a,l                        ; 043E57 || 	add	a,l                        ; 043DF6 || 043E57 85          0001M 		ADD	A, L
	ld	l,a                         ; 043E58 || 	ld	l,a                         ; 043DF7 || 043E58 6F          0002M 		LD	L, A
	adc	a,h                        ; 043E59 || 	adc	a,h                        ; 043DF8 || 043E59 8C          0003M 		ADC	A, H
	sub	l                          ; 043E5A || 	sub	l                          ; 043DF9 || 043E5A 95          0004M 		SUB	L
	ld	h,a                         ; 043E5B || 	ld	h,a                         ; 043DFA || 043E5B 67          0005M 		LD	H, A
	ld	a,(hl)                      ; 043E5C || 	ld	a,(hl)                      ; 043DFB || 043E5C 7E          10175  			LD	A, (HL)			; follow the call. Fetch an address from the
	inc	hl                         ; 043E5D || 	inc	hl                         ; 043DFC || 043E5D 23          10176  			INC	HL 			; table.
	ld	h,(hl)                      ; 043E5E || 	ld	h,(hl)                      ; 043DFD || 043E5E 66          10177  			LD	H, (HL)
	ld	l,a                         ; 043E5F || 	ld	l,a                         ; 043DFE || 043E5F 6F          10178  			LD	L, A
	ex	(sp),hl                     ; 043E60 || 	ex	(sp),hl                     ; 043DFF || 043E60 E3          10179  			EX	(SP), HL		; Swap this new address back, restores HL
	ret                            ; 043E61 || 	ret                            ; 043E00 || 043E61 C9          10180  			RET				; Return program control to this new address
	push	bc                        ; 043E62 || 	push	bc                        ; 043E01 || 043E62 C5          10185  NULLTOCR:		PUSH 	BC
	ld	b,$00                       ; 043E63 || 	ld	b,$00                       ; 043E02 || 043E63 06 00       10186  			LD	B, 0
	ld	c,$0d                       ; 043E65 || 	ld	c,$0d                       ; 043E04 || 043E65 0E 0D       10187  			LD	C, CR
	jr	$+$07                       ; 043E67 || 	jr	$+$07                       ; 043E06 || 043E67 18 05       10188  			JR	CRTONULL0
	push	bc                        ; 043E69 || 	push	bc                        ; 043E08 || 043E69 C5          10190  CRTONULL:		PUSH	BC
	ld	b,$0d                       ; 043E6A || 	ld	b,$0d                       ; 043E09 || 043E6A 06 0D       10191  			LD	B, CR
	ld	c,$00                       ; 043E6C || 	ld	c,$00                       ; 043E0B || 043E6C 0E 00       10192  			LD	C, 0
	push	hl                        ; 043E6E || 	push	hl                        ; 043E0D || 043E6E E5          10194  CRTONULL0:		PUSH	HL
	ld	a,(hl)                      ; 043E6F || 	ld	a,(hl)                      ; 043E0E || 043E6F 7E          10195  CRTONULL1:		LD	A, (HL)
	cp	b                           ; 043E70 || 	cp	b                           ; 043E0F || 043E70 B8          10196  			CP 	B
	jr	z,$+$05                     ; 043E71 || 	jr	z,$+$05                     ; 043E10 || 043E71 28 03       10197  			JR	Z, CRTONULL2
	inc	hl                         ; 043E73 || 	inc	hl                         ; 043E12 || 043E73 23          10198  			INC	HL
	jr	$-$05                       ; 043E74 || 	jr	$-$05                       ; 043E13 || 043E74 18 F9       10199  			JR	CRTONULL1
	ld	(hl),c                      ; 043E76 || 	ld	(hl),c                      ; 043E15 || 043E76 71          10200  CRTONULL2:		LD	(HL), C
	pop	hl                         ; 043E77 || 	pop	hl                         ; 043E16 || 043E77 E1          10201  			POP 	HL
	pop	bc                         ; 043E78 || 	pop	bc                         ; 043E17 || 043E78 C1          10202  			POP	BC
	ret                            ; 043E79 || 	ret                            ; 043E18 || 043E79 C9          10203  			RET
	ld	a,(hl)                      ; 043E7A || 	ld	a,(hl)                      ; 043E19 || 043E7A 7E          10209  CSTR_FNAME:		LD	A, (HL)			; Get source
	cp	$20                         ; 043E7B || 	cp	$20                         ; 043E1A || 043E7B FE 20       10210  			CP	32			; Is it space
	jr	z,$+$0b                     ; 043E7D || 	jr	z,$+$0b                     ; 043E1C || 043E7D 28 09       10211  			JR	Z, @F
	cp	$0d                         ; 043E7F || 	cp	$0d                         ; 043E1E || 043E7F FE 0D       10212  			CP	CR			; Or is it CR
	jr	z,$+$07                     ; 043E81 || 	jr	z,$+$07                     ; 043E20 || 043E81 28 05       10213  			JR	Z, @F
	ld	(de),a                      ; 043E83 || 	ld	(de),a                      ; 043E22 || 043E83 12          10214  			LD	(DE), A			; No, so store
	inc	hl                         ; 043E84 || 	inc	hl                         ; 043E23 || 043E84 23          10215  			INC	HL			; Increment
	inc	de                         ; 043E85 || 	inc	de                         ; 043E24 || 043E85 13          10216  			INC	DE
	jr	$-$0c                       ; 043E86 || 	jr	$-$0c                       ; 043E25 || 043E86 18 F2       10217  			JR	CSTR_FNAME		; And loop
	xor	a                          ; 043E88 || 	xor	a                          ; 043E27 || 043E88 AF          10218  @@:			XOR	A			; Zero terminate the target string
	ld	(de),a                      ; 043E89 || 	ld	(de),a                      ; 043E28 || 043E89 12          10219  			LD	(DE), A
	inc	de                         ; 043E8A || 	inc	de                         ; 043E29 || 043E8A 13          10220  			INC	DE			; And point to next free address
	ret                            ; 043E8B || 	ret                            ; 043E2A || 043E8B C9          10221  			RET
	ld	a,(hl)                      ; 043E8C || 	ld	a,(hl)                      ; 043E2B || 043E8C 7E          10227  CSTR_LINE:		LD	A, (HL)			; Get source
	cp	$0d                         ; 043E8D || 	cp	$0d                         ; 043E2C || 043E8D FE 0D       10228  			CP	CR			; Is it CR
	jr	z,$+$07                     ; 043E8F || 	jr	z,$+$07                     ; 043E2E || 043E8F 28 05       10229  			JR	Z, @F
	ld	(de),a                      ; 043E91 || 	ld	(de),a                      ; 043E30 || 043E91 12          10230  			LD	(DE), A			; No, so store
	inc	hl                         ; 043E92 || 	inc	hl                         ; 043E31 || 043E92 23          10231  			INC	HL			; Increment
	inc	de                         ; 043E93 || 	inc	de                         ; 043E32 || 043E93 13          10232  			INC	DE
	jr	$-$08                       ; 043E94 || 	jr	$-$08                       ; 043E33 || 043E94 18 F6       10233  			JR	CSTR_LINE		; And loop
	xor	a                          ; 043E96 || 	xor	a                          ; 043E35 || 043E96 AF          10234  @@:			XOR	A			; Zero terminate the target string
	ld	(de),a                      ; 043E97 || 	ld	(de),a                      ; 043E36 || 043E97 12          10235  			LD	(DE), A
	inc	de                         ; 043E98 || 	inc	de                         ; 043E37 || 043E98 13          10236  			INC	DE			; And point to next free address
	ret                            ; 043E99 || 	ret                            ; 043E38 || 043E99 C9          10237  			RET
	ld	a,(hl)                      ; 043E9A || 	ld	a,(hl)                      ; 043E39 || 043E9A 7E          10245  CSTR_FINDCH:		LD	A, (HL)			; Get source
	cp	c                           ; 043E9B || 	cp	c                           ; 043E3A || 043E9B B9          10246  			CP	C			; Is it our character?
	ret	z                          ; 043E9C || 	ret	z                          ; 043E3B || 043E9C C8          10247  			RET	Z			; Yes, so exit
	or	a                           ; 043E9D || 	or	a                           ; 043E3C || 043E9D B7          10248  			OR	A			; Is it the end of string?
	ret	z                          ; 043E9E || 	ret	z                          ; 043E3D || 043E9E C8          10249  			RET	Z			; Yes, so exit
	inc	hl                         ; 043E9F || 	inc	hl                         ; 043E3E || 043E9F 23          10250  			INC	HL
	jr	$-$06                       ; 043EA0 || 	jr	$-$06                       ; 043E3F || 043EA0 18 F8       10251  			JR	CSTR_FINDCH
	ld	a,(hl)                      ; 043EA2 || 	ld	a,(hl)                      ; 043E41 || 043EA2 7E          10259  CSTR_ENDSWITH:		LD	A, (HL)			; Get the source string byte
	call	$043e4d                   ; 043EA3 || 	call	$043dec                   ; 043E42 || 043EA3 CD 4D 3E 04 10260  			CALL	UPPERC			; Convert to upper case
	ld	c,a                         ; 043EA7 || 	ld	c,a                         ; 043E46 || 043EA7 4F          10261  			LD	C, A
	ld	a,(de)                      ; 043EA8 || 	ld	a,(de)                      ; 043E47 || 043EA8 1A          10262  			LD	A, (DE)			; Get the substring byte
	cp	c                           ; 043EA9 || 	cp	c                           ; 043E48 || 043EA9 B9          10263  			CP	C
	ret	nz                         ; 043EAA || 	ret	nz                         ; 043E49 || 043EAA C0          10264  			RET	NZ			; Return NZ if at any point the strings don't match
	or	c                           ; 043EAB || 	or	c                           ; 043E4A || 043EAB B1          10265  			OR	C			; Check whether both bytes are zero
	ret	z                          ; 043EAC || 	ret	z                          ; 043E4B || 043EAC C8          10266  			RET	Z			; If so, return, as we have reached the end of both strings
	inc	hl                         ; 043EAD || 	inc	hl                         ; 043E4C || 043EAD 23          10267  			INC	HL
	inc	de                         ; 043EAE || 	inc	de                         ; 043E4D || 043EAE 13          10268  			INC	DE
	jr	$-$0d                       ; 043EAF || 	jr	$-$0d                       ; 043E4E || 043EAF 18 F1       10269  			JR	CSTR_ENDSWITH		; And loop
	ld	a,(hl)                      ; 043EB1 || 	ld	a,(hl)                      ; 043E50 || 043EB1 7E          10275  CSTR_CAT:		LD	A, (HL)			; Loop until we find the end of the first string
	or	a                           ; 043EB2 || 	or	a                           ; 043E51 || 043EB2 B7          10276  			OR	A
	jr	z,$+$05                     ; 043EB3 || 	jr	z,$+$05                     ; 043E52 || 043EB3 28 03       10277  			JR	Z, CSTR_CAT_1
	inc	hl                         ; 043EB5 || 	inc	hl                         ; 043E54 || 043EB5 23          10278  			INC	HL
	jr	$-$05                       ; 043EB6 || 	jr	$-$05                       ; 043E55 || 043EB6 18 F9       10279  			JR	CSTR_CAT
	ld	a,(de)                      ; 043EB8 || 	ld	a,(de)                      ; 043E57 || 043EB8 1A          10281  CSTR_CAT_1:		LD	A, (DE)			; Copy the second string onto the end of the first string
	ld	(hl),a                      ; 043EB9 || 	ld	(hl),a                      ; 043E58 || 043EB9 77          10282  			LD	(HL), A
	or	a                           ; 043EBA || 	or	a                           ; 043E59 || 043EBA B7          10283  			OR	A			; Check for end of string
	ret	z                          ; 043EBB || 	ret	z                          ; 043E5A || 043EBB C8          10284  			RET	Z			; And return
	inc	hl                         ; 043EBC || 	inc	hl                         ; 043E5B || 043EBC 23          10285  			INC	HL
	inc	de                         ; 043EBD || 	inc	de                         ; 043E5C || 043EBD 13          10286  			INC	DE
	jr	$-$06                       ; 043EBE || 	jr	$-$06                       ; 043E5D || 043EBE 18 F8       10287  			JR	CSTR_CAT_1		; Loop until finished						; --- End misc.asm ---
	ld	e,$01                       ; 043EC0 || 	ld	e,$01                       ; 043E5F || 043EC0 1E 01       10384  OSLINE:			LD 	E, 1			; Default is to clear the buffer
	push	iy                        ; 043EC2 || 	push	iy                        ; 043E61 || 043EC2 FD E5       10388  OSLINE1:		PUSH	IY
	push	hl                        ; 043EC4 || 	push	hl                        ; 043E63 || 043EC4 E5          10389  			PUSH	HL			; Buffer address
	ld	bc,$000100                  ; 043EC5 || 	ld	bc,$000100                  ; 043E64 || 043EC5 01 00 01 00 10390  			LD	BC, 256			; Buffer length
	ld	a,$09                       ; 043EC9 || 	ld	a,$09                       ; 043E68 || 043EC9 3E 09       0001M 			LD	A, function
	rst.lis	$08                    ; 043ECB || 	rst.lis	$08                    ; 043E6A || 043ECB 49 CF       0002M 			RST.LIS	08h
	pop	hl                         ; 043ECD || 	pop	hl                         ; 043E6C || 043ECD E1          10392  			POP	HL			; Pop the address
	pop	iy                         ; 043ECE || 	pop	iy                         ; 043E6D || 043ECE FD E1       10393  			POP	IY
	push	af                        ; 043ED0 || 	push	af                        ; 043E6F || 043ED0 F5          10394  			PUSH	AF			; Stack the return value (key pressed)
	call	$043e62                   ; 043ED1 || 	call	$043e01                   ; 043E70 || 043ED1 CD 62 3E 04 10395  			CALL	NULLTOCR		; Turn the 0 character to a CR
	call	$0439a8                   ; 043ED5 || 	call	$043947                   ; 043E74 || 043ED5 CD A8 39 04 10396  			CALL	CRLF			; Display CRLF
	pop	af                         ; 043ED9 || 	pop	af                         ; 043E78 || 043ED9 F1          10397  			POP	AF
	cp	$1b                         ; 043EDA || 	cp	$1b                         ; 043E79 || 043EDA FE 1B       10398  			CP	1Bh 			; Check if ESC terminated the input
	jp	z,$043fd8                   ; 043EDC || 	jp	z,$043f77                   ; 043E7B || 043EDC CA D8 3F 04 10399  			JP	Z, LTRAP1 		; Yes, so do the ESC thing
	ld	a,($044d42)                 ; 043EE0 || 	ld	a,($044d42)                 ; 043E7F || 043EE0 3A 42 4D 04 10400  			LD	A, (FLAGS)		; Otherwise
	res	7,a                        ; 043EE4 || 	res	7,a                        ; 043E83 || 043EE4 CB BF       10401  			RES	7, A 			; Clear the escape flag
	ld	($044d42),a                 ; 043EE6 || 	ld	($044d42),a                 ; 043E85 || 043EE6 32 42 4D 04 10402  			LD	(FLAGS), A
	call	$0441af                   ; 043EEA || 	call	$04413d                   ; 043E89 || 043EEA CD AF 41 04 10403  			CALL	WAIT_VBLANK 		; Wait a frame
	xor	a                          ; 043EEE || 	xor	a                          ; 043E8D || 043EEE AF          10404   			XOR	A			; Return A = 0
	ld	($044d47),a                 ; 043EEF || 	ld	($044d47),a                 ; 043E8E || 043EEF 32 47 4D 04 10405  			LD	(KEYDOWN), A
	ld	($044d48),a                 ; 043EF3 || 	ld	($044d48),a                 ; 043E92 || 043EF3 32 48 4D 04 10406  			LD	(KEYASCII), A
	ret                            ; 043EF7 || 	ret                            ; 043E96 || 043EF7 C9          10407  			RET
	push	ix                        ; 043EF8 || 	push	ix                        ; 043E97 || 043EF8 DD E5       10411  PUTIME:			PUSH 	IX
	ld	a,$08                       ; 043EFA || 	ld	a,$08                       ; 043E99 || 043EFA 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 043EFC || 	rst.lis	$08                    ; 043E9B || 043EFC 49 CF       0002M 			RST.LIS	08h
	ld	(ix),l                      ; 043EFE || 	ld	(ix),l                      ; 043E9D || 043EFE DD 75 00    10413  			LD	(IX + sysvar_time + 0), L
	ld	(ix+$01),h                  ; 043F01 || 	ld	(ix+$01),h                  ; 043EA0 || 043F01 DD 74 01    10414  			LD	(IX + sysvar_time + 1), H
	ld	(ix+$02),e                  ; 043F04 || 	ld	(ix+$02),e                  ; 043EA3 || 043F04 DD 73 02    10415  			LD	(IX + sysvar_time + 2), E
	ld	(ix+$03),d                  ; 043F07 || 	ld	(ix+$03),d                  ; 043EA6 || 043F07 DD 72 03    10416  			LD	(IX + sysvar_time + 3), D
	pop	ix                         ; 043F0A || 	pop	ix                         ; 043EA9 || 043F0A DD E1       10417  			POP	IX
	ret                            ; 043F0C || 	ret                            ; 043EAB || 043F0C C9          10418  			RET
	push	ix                        ; 043F0D || 	push	ix                        ; 043EAC || 043F0D DD E5       10422  GETIME:			PUSH 	IX
	ld	a,$08                       ; 043F0F || 	ld	a,$08                       ; 043EAE || 043F0F 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 043F11 || 	rst.lis	$08                    ; 043EB0 || 043F11 49 CF       0002M 			RST.LIS	08h
	ld	l,(ix)                      ; 043F13 || 	ld	l,(ix)                      ; 043EB2 || 043F13 DD 6E 00    10424  			LD	L, (IX + sysvar_time + 0)
	ld	h,(ix+$01)                  ; 043F16 || 	ld	h,(ix+$01)                  ; 043EB5 || 043F16 DD 66 01    10425  			LD	H, (IX + sysvar_time + 1)
	ld	e,(ix+$02)                  ; 043F19 || 	ld	e,(ix+$02)                  ; 043EB8 || 043F19 DD 5E 02    10426  			LD	E, (IX + sysvar_time + 2)
	ld	d,(ix+$03)                  ; 043F1C || 	ld	d,(ix+$03)                  ; 043EBB || 043F1C DD 56 03    10427  			LD	D, (IX + sysvar_time + 3)
	pop	ix                         ; 043F1F || 	pop	ix                         ; 043EBE || 043F1F DD E1       10428  			POP	IX
	ret                            ; 043F21 || 	ret                            ; 043EC0 || 043F21 C9          10429  			RET
	ld	a,$1f                       ; 043F22 || 	ld	a,$1f                       ; 043EC1 || 043F22 3E 1F       10433  PUTCSR:			LD	A, 1Fh			; TAB
	rst.lil	$10                    ; 043F24 || 	rst.lil	$10                    ; 043EC3 || 043F24 5B D7       10434  			RST.LIL	10h
	ld	a,e                         ; 043F26 || 	ld	a,e                         ; 043EC5 || 043F26 7B          10435  			LD	A, E			; X
	rst.lil	$10                    ; 043F27 || 	rst.lil	$10                    ; 043EC6 || 043F27 5B D7       10436  			RST.LIL 10h
	ld	a,l                         ; 043F29 || 	ld	a,l                         ; 043EC8 || 043F29 7D          10437  			LD	A, L			; Y
	rst.lil	$10                    ; 043F2A || 	rst.lil	$10                    ; 043EC9 || 043F2A 5B D7       10438  			RST.LIL 10h
	ret                            ; 043F2C || 	ret                            ; 043ECB || 043F2C C9          10439  			RET
	push	ix                        ; 043F2D || 	push	ix                        ; 043ECC || 043F2D DD E5       10443  GETCSR:			PUSH	IX			; Get the system vars in IX
	ld	a,$08                       ; 043F2F || 	ld	a,$08                       ; 043ECE || 043F2F 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 043F31 || 	rst.lis	$08                    ; 043ED0 || 043F31 49 CF       0002M 			RST.LIS	08h
	res	0,(ix+$04)                 ; 043F33 || 	res	0,(ix+$04)                 ; 043ED2 || 043F33 DD CB 04 86 10445  			RES	0, (IX+sysvar_vpd_pflags)
	ld	a,$17                       ; 043F37 || 	ld	a,$17                       ; 043ED6 || 043F37 3E 17       0001M 		LD	A, val
	call	$043f61                   ; 043F39 || 	call	$043f00                   ; 043ED8 || 043F39 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 043F3D || 	ld	a,$00                       ; 043EDC || 043F3D 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 043F3F || 	call	$043f00                   ; 043EDE || 043F3F CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$82                       ; 043F43 || 	ld	a,$82                       ; 043EE2 || 043F43 3E 82       0001M 		LD	A, val
	call	$043f61                   ; 043F45 || 	call	$043f00                   ; 043EE4 || 043F45 CD 61 3F 04 0002M 		CALL	OSWRCH
	bit	0,(ix+$04)                 ; 043F49 || 	bit	0,(ix+$04)                 ; 043EE8 || 043F49 DD CB 04 46 10449  @@:			BIT	0, (IX+sysvar_vpd_pflags)
	jr	z,$-$04                     ; 043F4D || 	jr	z,$-$04                     ; 043EEC || 043F4D 28 FA       10450  			JR	Z, @B			; Wait for the result
	ld	d,$00                       ; 043F4F || 	ld	d,$00                       ; 043EEE || 043F4F 16 00       10451  			LD 	D, 0
	ld	h,d                         ; 043F51 || 	ld	h,d                         ; 043EF0 || 043F51 62          10452  			LD	H, D
	ld	e,(ix+$07)                  ; 043F52 || 	ld	e,(ix+$07)                  ; 043EF1 || 043F52 DD 5E 07    10453  			LD	E, (IX + sysvar_cursorX)
	ld	l,(ix+$08)                  ; 043F55 || 	ld	l,(ix+$08)                  ; 043EF4 || 043F55 DD 6E 08    10454  			LD	L, (IX + sysvar_cursorY)
	pop	ix                         ; 043F58 || 	pop	ix                         ; 043EF7 || 043F58 DD E1       10455  			POP	IX
	ret                            ; 043F5A || 	ret                            ; 043EF9 || 043F5A C9          10456  			RET
	ld	a,$3e                       ; 043F5B || 	ld	a,$3e                       ; 043EFA || 043F5B 3E 3E       10460  PROMPT: 		LD	A,'>'
	jp	$043f61                     ; 043F5D || 	jp	$043f00                     ; 043EFC || 043F5D C3 61 3F 04 10461  			JP	OSWRCH
	push	hl                        ; 043F61 || 	push	hl                        ; 043F00 || 043F61 E5          10466  OSWRCH:			PUSH	HL
	ld	hl,$044d40                  ; 043F62 || 	ld	hl,$044d40                  ; 043F01 || 043F62 21 40 4D 04 10467  			LD	HL, LISTON		; Fetch the LISTON variable
	bit	3,(hl)                     ; 043F66 || 	bit	3,(hl)                     ; 043F05 || 043F66 CB 5E       10468  			BIT	3, (HL)			; Check whether we are in *EDIT mode
	jr	nz,$+$0d                    ; 043F68 || 	jr	nz,$+$0d                    ; 043F07 || 043F68 20 0B       10469  			JR	NZ, OSWRCH_BUFFER	; Yes, so just output to buffer
	ld	hl,($044d45)                ; 043F6A || 	ld	hl,($044d45)                ; 043F09 || 043F6A 2A 45 4D 04 10471  			LD	HL, (OSWRCHCH)		; L: Channel #
	dec	l                          ; 043F6E || 	dec	l                          ; 043F0D || 043F6E 2D          10472  			DEC	L			; If it is 1
	jr	z,$+$12                     ; 043F6F || 	jr	z,$+$12                     ; 043F0E || 043F6F 28 10       10473  			JR	Z, OSWRCH_FILE		; Then we are outputting to a file
	pop	hl                         ; 043F71 || 	pop	hl                         ; 043F10 || 043F71 E1          10475  			POP	HL			; Otherwise
	rst.lil	$10                    ; 043F72 || 	rst.lil	$10                    ; 043F11 || 043F72 5B D7       10476  			RST.LIL	10h			; Output the character to MOS
	ret                            ; 043F74 || 	ret                            ; 043F13 || 043F74 C9          10477  			RET
	ld	hl,($044d43)                ; 043F75 || 	ld	hl,($044d43)                ; 043F14 || 043F75 2A 43 4D 04 10479  OSWRCH_BUFFER:		LD	HL, (OSWRCHPT)		; Fetch the pointer buffer
	ld	(hl),a                      ; 043F79 || 	ld	(hl),a                      ; 043F18 || 043F79 77          10480  			LD	(HL), A			; Echo the character into the buffer
	inc	hl                         ; 043F7A || 	inc	hl                         ; 043F19 || 043F7A 23          10481  			INC	HL			; Increment pointer
	ld	($044d43),hl                ; 043F7B || 	ld	($044d43),hl                ; 043F1A || 043F7B 22 43 4D 04 10482  			LD	(OSWRCHPT), HL		; Write pointer back
	pop	hl                         ; 043F7F || 	pop	hl                         ; 043F1E || 043F7F E1          10483  			POP	HL
	ret                            ; 043F80 || 	ret                            ; 043F1F || 043F80 C9          10484  			RET
	push	de                        ; 043F81 || 	push	de                        ; 043F20 || 043F81 D5          10486  OSWRCH_FILE:		PUSH	DE
	ld	e,h                         ; 043F82 || 	ld	e,h                         ; 043F21 || 043F82 5C          10487  			LD	E, H			; Filehandle to E
	call	$0443ad                   ; 043F83 || 	call	$04433b                   ; 043F22 || 043F83 CD AD 43 04 10488  			CALL	OSBPUT			; Write the byte out
	pop	de                         ; 043F87 || 	pop	de                         ; 043F26 || 043F87 D1          10489  			POP	DE
	pop	hl                         ; 043F88 || 	pop	hl                         ; 043F27 || 043F88 E1          10490  			POP	HL
	ret                            ; 043F89 || 	ret                            ; 043F28 || 043F89 C9          10491  			RET
	ld	a,$00                       ; 043F8A || 	ld	a,$00                       ; 043F29 || 043F8A 3E 00       0001M 			LD	A, function
	rst.lis	$08                    ; 043F8C || 	rst.lis	$08                    ; 043F2B || 043F8C 49 CF       0002M 			RST.LIS	08h
	cp	$1b                         ; 043F8E || 	cp	$1b                         ; 043F2D || 043F8E FE 1B       10497  			CP	1Bh
	jr	z,$+$48                     ; 043F90 || 	jr	z,$+$48                     ; 043F2F || 043F90 28 46       10498  			JR	Z, LTRAP1
	ret                            ; 043F92 || 	ret                            ; 043F31 || 043F92 C9          10499  			RET
	call	$043fc4                   ; 043F93 || 	call	$043f63                   ; 043F32 || 043F93 CD C4 3F 04 10509  OSKEY:			CALL	READKEY			; Read the keyboard
	jr	z,$+$0c                     ; 043F97 || 	jr	z,$+$0c                     ; 043F36 || 043F97 28 0A       10510  			JR	Z, @F 			; Skip if we have a key
	ld	a,h                         ; 043F99 || 	ld	a,h                         ; 043F38 || 043F99 7C          10511  			LD	A, H 			; Check loop counter
	or	l                           ; 043F9A || 	or	l                           ; 043F39 || 043F9A B5          10512  			OR 	L
	ret	z                          ; 043F9B || 	ret	z                          ; 043F3A || 043F9B C8          10513  			RET 	Z 			; Return, we've not got a key at this point
	call	$0441af                   ; 043F9C || 	call	$04413d                   ; 043F3B || 043F9C CD AF 41 04 10514  			CALL	WAIT_VBLANK 		; Wait a frame
	dec	hl                         ; 043FA0 || 	dec	hl                         ; 043F3F || 043FA0 2B          10515  			DEC 	HL			; Decrement
	jr	$-$0e                       ; 043FA1 || 	jr	$-$0e                       ; 043F40 || 043FA1 18 F0       10516  			JR	OSKEY 			; And loop
	ld	hl,$044d47                  ; 043FA3 || 	ld	hl,$044d47                  ; 043F42 || 043FA3 21 47 4D 04 10518  @@:			LD	HL, KEYDOWN		; We have a key, so
	ld	(hl),$00                    ; 043FA7 || 	ld	(hl),$00                    ; 043F46 || 043FA7 36 00       10519  			LD	(HL), 0			; clear the keydown flag
	cp	$1b                         ; 043FA9 || 	cp	$1b                         ; 043F48 || 043FA9 FE 1B       10520  			CP	1BH			; If we are not pressing ESC,
	scf                            ; 043FAB || 	scf                            ; 043F4A || 043FAB 37          10521  			SCF 				; then flag we've got a character
	ret	nz                         ; 043FAC || 	ret	nz                         ; 043F4B || 043FAC C0          10522  			RET	NZ
	push	hl                        ; 043FAD || 	push	hl                        ; 043F4C || 043FAD E5          10527  ESCSET: 		PUSH    HL
	ld	hl,$044d42                  ; 043FAE || 	ld	hl,$044d42                  ; 043F4D || 043FAE 21 42 4D 04 10528          		LD      HL,FLAGS		; Pointer to FLAGS
	bit	6,(hl)                     ; 043FB2 || 	bit	6,(hl)                     ; 043F51 || 043FB2 CB 76       10529          		BIT     6,(HL)			; If bit 6 is set, then
	jr	nz,$+$04                    ; 043FB4 || 	jr	nz,$+$04                    ; 043F53 || 043FB4 20 02       10530          		JR      NZ,ESCDIS		; escape is disabled, so skip
	set	7,(hl)                     ; 043FB6 || 	set	7,(hl)                     ; 043F55 || 043FB6 CB FE       10531          		SET     7,(HL)			; Set bit 7, the escape flag
	pop	hl                         ; 043FB8 || 	pop	hl                         ; 043F57 || 043FB8 E1          10532  ESCDIS: 		POP     HL
	ret                            ; 043FB9 || 	ret                            ; 043F58 || 043FB9 C9          10533          		RET
	call	$043fc4                   ; 043FBA || 	call	$043f63                   ; 043F59 || 043FBA CD C4 3F 04 10538  ESCTEST:		CALL	READKEY			; Read the keyboard
	ret	nz                         ; 043FBE || 	ret	nz                         ; 043F5D || 043FBE C0          10539  			RET	NZ			; Skip if no key is pressed
	cp	$1b                         ; 043FBF || 	cp	$1b                         ; 043F5E || 043FBF FE 1B       10540  			CP	1BH			; If ESC pressed then
	jr	z,$-$14                     ; 043FC1 || 	jr	z,$-$14                     ; 043F60 || 043FC1 28 EA       10541  			JR	Z,ESCSET		; jump to the escape set routine
	ret                            ; 043FC3 || 	ret                            ; 043F62 || 043FC3 C9          10542  			RET
	ld	a,($044d47)                 ; 043FC4 || 	ld	a,($044d47)                 ; 043F63 || 043FC4 3A 47 4D 04 10549  READKEY:		LD	A, (KEYDOWN)		; Get key down
	dec	a                          ; 043FC8 || 	dec	a                          ; 043F67 || 043FC8 3D          10550  			DEC	A 			; Set Z flag if keydown is 1
	ld	a,($044d48)                 ; 043FC9 || 	ld	a,($044d48)                 ; 043F68 || 043FC9 3A 48 4D 04 10551  			LD	A, (KEYASCII)		; Get key ASCII value
	ret                            ; 043FCD || 	ret                            ; 043F6C || 043FCD C9          10552  			RET
	call	$043fba                   ; 043FCE || 	call	$043f59                   ; 043F6D || 043FCE CD BA 3F 04 10557  TRAP:			CALL	ESCTEST			; Read keyboard, test for ESC, set FLAGS
	ld	a,($044d42)                 ; 043FD2 || 	ld	a,($044d42)                 ; 043F71 || 043FD2 3A 42 4D 04 10559  LTRAP:			LD	A,(FLAGS)		; Get FLAGS
	or	a                           ; 043FD6 || 	or	a                           ; 043F75 || 043FD6 B7          10560  			OR	A			; This checks for bit 7; if it is not set then the result will
	ret	p                          ; 043FD7 || 	ret	p                          ; 043F76 || 043FD7 F0          10561  			RET	P			; be positive (bit 7 is the sign bit in Z80), so return
	ld	hl,$044d42                  ; 043FD8 || 	ld	hl,$044d42                  ; 043F77 || 043FD8 21 42 4D 04 10562  LTRAP1:			LD	HL,FLAGS 		; Escape is pressed at this point, so
	res	7,(hl)                     ; 043FDC || 	res	7,(hl)                     ; 043F7B || 043FDC CB BE       10563  			RES	7,(HL)			; Clear the escape pressed flag and
	jp	$040cae                     ; 043FDE || 	jp	$040c9b                     ; 043F7D || 043FDE C3 AE 0C 04 10564  			JP	ESCAPE			; Jump to the ESCAPE error routine in exec.asm
	call	$044947                   ; 043FE2 || 	call	$0448e0                   ; 043F81 || 043FE2 CD 47 49 04 10574  OSINIT:			CALL	VBLANK_INIT
	xor	a                          ; 043FE6 || 	xor	a                          ; 043F85 || 043FE6 AF          10575  			XOR	A
	ld	hl,$044e00                  ; 043FE7 || 	ld	hl,$044e00                  ; 043F86 || 043FE7 21 00 4E 04 10576  			LD 	HL, USER
	ld	de,$0b0000                  ; 043FEB || 	ld	de,$0b0000                  ; 043F8A || 043FEB 11 00 00 0B 10577  			LD	DE, RAM_Top
	ld	e,a                         ; 043FEF || 	ld	e,a                         ; 043F8E || 043FEF 5F          10578  			LD	E, A			; Page boundary
	ret                            ; 043FF0 || 	ret                            ; 043F8F || 043FF0 C9          10579  			RET
	call	$044065                   ; 043FF1 || 	call	$044004                   ; 043F90 || 043FF1 CD 65 40 04 10584  OSCLI: 			CALL    SKIPSP
	cp	$0d                         ; 043FF5 || 	cp	$0d                         ; 043F94 || 043FF5 FE 0D       10585  			CP      CR
	ret	z                          ; 043FF7 || 	ret	z                          ; 043F96 || 043FF7 C8          10586  			RET     Z
	cp	$7c                         ; 043FF8 || 	cp	$7c                         ; 043F97 || 043FF8 FE 7C       10587  			CP      '|'
	ret	z                          ; 043FFA || 	ret	z                          ; 043F99 || 043FFA C8          10588  			RET     Z
	ex	de,hl                       ; 043FFB || 	ex	de,hl                       ; 043F9A || 043FFB EB          10589  			EX      DE,HL
	ld	hl,$044074                  ; 043FFC || 	ld	hl,$044013                  ; 043F9B || 043FFC 21 74 40 04 10590  			LD      HL,COMDS
	ld	a,(de)                      ; 044000 || 	ld	a,(de)                      ; 043F9F || 044000 1A          10591  OSCLI0:			LD      A,(DE)
	call	$04406c                   ; 044001 || 	call	$04400b                   ; 043FA0 || 044001 CD 6C 40 04 10592  			CALL    UPPRC
	cp	(hl)                        ; 044005 || 	cp	(hl)                        ; 043FA4 || 044005 BE          10593  			CP      (HL)
	jr	z,$+$0d                     ; 044006 || 	jr	z,$+$0d                     ; 043FA5 || 044006 28 0B       10594  			JR      Z,OSCLI2
	jr	c,$+$32                     ; 044008 || 	jr	c,$+$32                     ; 043FA7 || 044008 38 30       10595  			JR      C,OSCLI6
	bit	7,(hl)                     ; 04400A || 	bit	7,(hl)                     ; 043FA9 || 04400A CB 7E       10596  OSCLI1:			BIT     7,(HL)
	inc	hl                         ; 04400C || 	inc	hl                         ; 043FAB || 04400C 23          10597  			INC     HL
	jr	z,$-$03                     ; 04400D || 	jr	z,$-$03                     ; 043FAC || 04400D 28 FB       10598  			JR      Z,OSCLI1
	inc	hl                         ; 04400F || 	inc	hl                         ; 043FAE || 04400F 23          10599  			INC     HL
	inc	hl                         ; 044010 || 	inc	hl                         ; 043FAF || 044010 23          10600  			INC     HL
	jr	$-$11                       ; 044011 || 	jr	$-$11                       ; 043FB0 || 044011 18 ED       10601  			JR      OSCLI0
	push	de                        ; 044013 || 	push	de                        ; 043FB2 || 044013 D5          10603  OSCLI2:			PUSH    DE
	inc	de                         ; 044014 || 	inc	de                         ; 043FB3 || 044014 13          10604  OSCLI3:			INC     DE
	inc	hl                         ; 044015 || 	inc	hl                         ; 043FB4 || 044015 23          10605  			INC     HL
	ld	a,(de)                      ; 044016 || 	ld	a,(de)                      ; 043FB5 || 044016 1A          10606  			LD      A,(DE)
	call	$04406c                   ; 044017 || 	call	$04400b                   ; 043FB6 || 044017 CD 6C 40 04 10607  			CALL    UPPRC
	cp	$2e                         ; 04401B || 	cp	$2e                         ; 043FBA || 04401B FE 2E       10608  			CP      '.'			; ABBREVIATED?
	jr	z,$+$0c                     ; 04401D || 	jr	z,$+$0c                     ; 043FBC || 04401D 28 0A       10609  			JR      Z,OSCLI4
	xor	(hl)                       ; 04401F || 	xor	(hl)                       ; 043FBE || 04401F AE          10610  			XOR     (HL)
	jr	z,$-$0c                     ; 044020 || 	jr	z,$-$0c                     ; 043FBF || 044020 28 F2       10611  			JR      Z,OSCLI3
	cp	$80                         ; 044022 || 	cp	$80                         ; 043FC1 || 044022 FE 80       10612  			CP      80H
	jr	z,$+$05                     ; 044024 || 	jr	z,$+$05                     ; 043FC3 || 044024 28 03       10613  			JR      Z,OSCLI4
	pop	de                         ; 044026 || 	pop	de                         ; 043FC5 || 044026 D1          10614  			POP     DE
	jr	$-$1d                       ; 044027 || 	jr	$-$1d                       ; 043FC6 || 044027 18 E1       10615  			JR      OSCLI1
	pop	af                         ; 044029 || 	pop	af                         ; 043FC8 || 044029 F1          10617  OSCLI4:			POP     AF
	inc	de                         ; 04402A || 	inc	de                         ; 043FC9 || 04402A 13          10618  		        INC     DE
	bit	7,(hl)                     ; 04402B || 	bit	7,(hl)                     ; 043FCA || 04402B CB 7E       10619  OSCLI5:			BIT     7,(HL)
	inc	hl                         ; 04402D || 	inc	hl                         ; 043FCC || 04402D 23          10620  			INC     HL
	jr	z,$-$03                     ; 04402E || 	jr	z,$-$03                     ; 043FCD || 04402E 28 FB       10621  			JR      Z,OSCLI5
	ld	a,(hl)                      ; 044030 || 	ld	a,(hl)                      ; 043FCF || 044030 7E          10622  			LD      A,(HL)
	inc	hl                         ; 044031 || 	inc	hl                         ; 043FD0 || 044031 23          10623  			INC     HL
	ld	h,(hl)                      ; 044032 || 	ld	h,(hl)                      ; 043FD1 || 044032 66          10624  			LD      H,(HL)
	ld	l,a                         ; 044033 || 	ld	l,a                         ; 043FD2 || 044033 6F          10625  			LD      L,A
	push	hl                        ; 044034 || 	push	hl                        ; 043FD3 || 044034 E5          10626  			PUSH    HL
	ex	de,hl                       ; 044035 || 	ex	de,hl                       ; 043FD4 || 044035 EB          10627  			EX      DE,HL
	jp	$044065                     ; 044036 || 	jp	$044004                     ; 043FD5 || 044036 C3 65 40 04 10628  			JP      SKIPSP
	ex	de,hl                       ; 04403A || 	ex	de,hl                       ; 043FD9 || 04403A EB          10630  OSCLI6:			EX	DE, HL			; HL: Buffer for command
	ld	de,$044a00                  ; 04403B || 	ld	de,$044a00                  ; 043FDA || 04403B 11 00 4A 04 10631  			LD	DE, ACCS		; Buffer for command string is ACCS (the string accumulator)
	push	de                        ; 04403F || 	push	de                        ; 043FDE || 04403F D5          10632  			PUSH	DE			; Store buffer address
	call	$043e8c                   ; 044040 || 	call	$043e2b                   ; 043FDF || 044040 CD 8C 3E 04 10633  			CALL	CSTR_LINE		; Fetch the line
	pop	hl                         ; 044044 || 	pop	hl                         ; 043FE3 || 044044 E1          10634  			POP	HL			; HL: Pointer to command string in ACCS
	push	iy                        ; 044045 || 	push	iy                        ; 043FE4 || 044045 FD E5       10635  			PUSH	IY
	ld	a,$10                       ; 044047 || 	ld	a,$10                       ; 043FE6 || 044047 3E 10       0001M 			LD	A, function
	rst.lis	$08                    ; 044049 || 	rst.lis	$08                    ; 043FE8 || 044049 49 CF       0002M 			RST.LIS	08h
	pop	iy                         ; 04404B || 	pop	iy                         ; 043FEA || 04404B FD E1       10637  			POP	IY
	or	a                           ; 04404D || 	or	a                           ; 043FEC || 04404D B7          10638  			OR	A			; 0 means MOS returned OK
	ret	z                          ; 04404E || 	ret	z                          ; 043FED || 04404E C8          10639  			RET	Z			; So don't do anything
	jp	$044289                     ; 04404F || 	jp	$044217                     ; 043FEE || 04404F C3 89 42 04 10640  			JP 	OSERROR			; Otherwise it's a MOS error
	ld	a,$fe                       ; 044053 || 	ld	a,$fe                       ; 043FF2 || 044053 3E FE       10642  HUH:    		LD      A,254			; Bad command error
	call	$0437d8                   ; 044055 || 	call	$043777                   ; 043FF4 || 044055 CD D8 37 04 10643          		CALL    EXTERR
	ld	b,d                         ; 044059 || 	ld	b,d                         ; 043FF8 || 044059 42 61 64 20 10644          		DB    	"Bad command"
	ld	h,c                         ; 04405A || 	ld	h,c                         ; 043FF9
	ld	h,h                         ; 04405B || 	ld	h,h                         ; 043FFA
	jr	nz,$+$65                    ; 04405C || 	jr	nz,$+$65                    ; 043FFB
	ld	l,a                         ; 04405E || 	ld	l,a                         ; 043FFD
	ld	l,l                         ; 04405F || 	ld	l,l                         ; 043FFE
	ld	l,l                         ; 044060 || 	ld	l,l                         ; 043FFF
	ld	h,c                         ; 044061 || 	ld	h,c                         ; 044000
	ld	l,(hl)                      ; 044062 || 	ld	l,(hl)                      ; 044001
	ld	h,h                         ; 044063 || 	ld	h,h                         ; 044002
	nop                            ; 044064 || 	nop                            ; 044003 || 044064 00          10645          		DEFB    0
	ld	a,(hl)                      ; 044065 || 	ld	a,(hl)                      ; 044004 || 044065 7E          10647  SKIPSP:			LD      A,(HL)
	cp	$20                         ; 044066 || 	cp	$20                         ; 044005 || 044066 FE 20       10648          		CP      ' '
	ret	nz                         ; 044068 || 	ret	nz                         ; 044007 || 044068 C0          10649          		RET     NZ
	inc	hl                         ; 044069 || 	inc	hl                         ; 044008 || 044069 23          10650          		INC     HL
	jr	$-$05                       ; 04406A || 	jr	$-$05                       ; 044009 || 04406A 18 F9       10651          		JR      SKIPSP
	and	$7f                        ; 04406C || 	and	$7f                        ; 04400B || 04406C E6 7F       10653  UPPRC:  		AND     7FH
	cp	$60                         ; 04406E || 	cp	$60                         ; 04400D || 04406E FE 60       10654  			CP      '`'
	ret	c                          ; 044070 || 	ret	c                          ; 04400F || 044070 D8          10655  			RET     C
	and	$5f                        ; 044071 || 	and	$5f                        ; 044010 || 044071 E6 5F       10656  			AND     5FH			; CONVERT TO UPPER CASE
	ret                            ; 044073                                         || 044073 C9          10657  			RET
	ld	b,c                         ; 044074                                         || 044074 41 53 4D    10662  COMDS:  		DB	"AS","M"+80h		; ASM
	ld	d,e                         ; 044075
	ld	c,l                         ; 044076
	sub	d                          ; 044077                                         || 044077 92 40       10663  			DW	STAR_ASM
	ld.sis	b,d                     ; 044078
	ld	e,c                         ; 04407A
	ld	b,l                         ; 04407B
	sbc	a,(hl)                     ; 04407C                                         || 04407C 9E 40       10665  			DW	STAR_BYE
	ld.sis	b,l                     ; 04407D
	ld	b,h                         ; 04407F
	ld.lis	d,h                     ; 044080
	out	($40),a                    ; 044082                                         || 044082 D3 40       10667  			DW	STAR_EDIT
	ld	b,(hl)                      ; 044084                                         || 044084 46 58       10668  			DB	"F","X"+80h		; FX
	ld	e,b                         ; 044085
	inc	de                         ; 044086                                         || 044086 13 41       10669  			DW	STAR_FX
	ld	b,c                         ; 044087
	ld	d,(hl)                      ; 044088                                         || 044088 56 45 52 53 10670  			DB	"VERSIO","N"+80h	; VERSION
	ld	b,l                         ; 044089
	ld.sil	d,e                     ; 04408A
	ld.lis	c,a                     ; 04408C
	ld	c,(hl)                      ; 04408E
	xor	d                          ; 04408F                                         || 04408F AA 40       10671  			DW	STAR_VERSION
	rst.sis	$38                    ; 044090
	push	iy                        ; 044092                                         || 044092 FD E5       10676  STAR_ASM:		PUSH	IY			; Stack the BASIC pointer
	push	hl                        ; 044094                                         || 044094 E5          10677  			PUSH	HL			; HL = IY
	pop	iy                         ; 044095                                         || 044095 FD E1       10678  			POP	IY
	call	$0418d8                   ; 044097                                         || 044097 CD D8 18 04 10679  			CALL	ASSEM			; Invoke the assembler
	pop	iy                         ; 04409B                                         || 04409B FD E1       10680  			POP	IY
	ret                            ; 04409D                                         || 04409D C9          10681  			RET
	call	$04495b                   ; 04409E                                         || 04409E CD 5B 49 04 10685  STAR_BYE:		CALL	VBLANK_STOP		; Restore MOS interrupts
	ld	hl,$000000                  ; 0440A2                                         || 0440A2 21 00 00 00 10686  			LD	HL, 0			; The return value
	jp	$040068                     ; 0440A6 || 	jp	$040068                     ; 044034 || 0440A6 C3 68 00 04 10687  			JP	_end 			; Jump back to the end routine in init.asm
	call	$043df1                   ; 0440AA || 	call	$043d90                   ; 044038 || 0440AA CD F1 3D 04 10691  STAR_VERSION:		CALL    TELL			; Output the welcome message
	ld	b,d                         ; 0440AE || 	ld	b,d                         ; 04403C || 0440AE 42 42 43 20 10692  			DB    	"BBC BASIC (Agon ADL) Version 1.03\n\r",0
	ld	b,d                         ; 0440AF || 	ld	b,d                         ; 04403D
	ld	b,e                         ; 0440B0 || 	ld	b,e                         ; 04403E
	jr	nz,$+$44                    ; 0440B1 || 	jr	nz,$+$44                    ; 04403F
	ld	b,c                         ; 0440B3 || 	ld	b,c                         ; 044041
	ld	d,e                         ; 0440B4 || 	ld	d,e                         ; 044042
	ld.lis	b,e                     ; 0440B5 || 	ld.lis	b,e                     ; 044043
	jr	nz,$+$2a                    ; 0440B7 || 	jr	nz,$+$2a                    ; 044045
	ld	b,c                         ; 0440B9 || 	ld	b,c                         ; 044047
	ld	h,a                         ; 0440BA || 	ld	h,a                         ; 044048
	ld	l,a                         ; 0440BB || 	ld	l,a                         ; 044049
	ld	l,(hl)                      ; 0440BC || 	ld	l,(hl)                      ; 04404A
	jr	nz,$+$43                    ; 0440BD || 	jr	nz,$+$43                    ; 04404B
	ld	b,h                         ; 0440BF || 	ld	b,h                         ; 04404D
	ld	c,h                         ; 0440C0 || 	ld	c,h                         ; 04404E
	add	hl,hl                      ; 0440C1 || 	add	hl,hl                      ; 04404F
	jr	nz,$+$58                    ; 0440C2 || 	jr	nz,$+$58                    ; 044050
	ld	h,l                         ; 0440C4 || 	ld	h,l                         ; 044052
	ld	(hl),d                      ; 0440C5 || 	ld	(hl),d                      ; 044053
	ld	(hl),e                      ; 0440C6 || 	ld	(hl),e                      ; 044054
	ld	l,c                         ; 0440C7 || 	ld	l,c                         ; 044055
	ld	l,a                         ; 0440C8 || 	ld	l,a                         ; 044056
	ld	l,(hl)                      ; 0440C9 || 	ld	l,(hl)                      ; 044057
	jr	nz,$+$33                    ; 0440CA || 	jr	nz,$+$33                    ; 044058
	ld	l,$30                       ; 0440CC || 	ld	l,$30                       ; 04405A
	inc	sp                         ; 0440CE || 	inc	sp                         ; 04405C
	ld	a,(bc)                      ; 0440CF || 	ld	a,(bc)                      ; 04405D
	dec	c                          ; 0440D0 || 	dec	c                          ; 04405E
	nop                            ; 0440D1 || 	nop                            ; 04405F
	ret                            ; 0440D2 || 	ret                            ; 044060 || 0440D2 C9          10693  			RET
	call	$043df8                   ; 0440D3 || 	call	$043d97                   ; 044061 || 0440D3 CD F8 3D 04 10697  STAR_EDIT:		CALL	ASC_TO_NUMBER		; DE: Line number to edit
	ex	de,hl                       ; 0440D7 || 	ex	de,hl                       ; 044065 || 0440D7 EB          10698  			EX	DE, HL			; HL: Line number
	call	$0439f0                   ; 0440D8 || 	call	$04398f                   ; 044066 || 0440D8 CD F0 39 04 10699  			CALL	FINDL			; HL: Address in RAM of tokenised line
	ld	a,$29                       ; 0440DC || 	ld	a,$29                       ; 04406A || 0440DC 3E 29       10700  			LD	A, 41			; F:NZ If the line is not found
	jp	nz,$0437c1                  ; 0440DE || 	jp	nz,$043760                  ; 04406C || 0440DE C2 C1 37 04 10701  			JP	NZ, ERROR_		; Do error 41: No such line in that case
	inc	hl                         ; 0440E2 || 	inc	hl                         ; 044070 || 0440E2 23          10705  			INC	HL			; Skip the length byte
	ld	e,(hl)                      ; 0440E3 || 	ld	e,(hl)                      ; 044071 || 0440E3 5E          10706  			LD	E, (HL)			; Fetch the line number
	inc	hl                         ; 0440E4 || 	inc	hl                         ; 044072 || 0440E4 23          10707  			INC	HL
	ld	d,(hl)                      ; 0440E5 || 	ld	d,(hl)                      ; 044073 || 0440E5 56          10708  			LD	D, (HL)
	inc	hl                         ; 0440E6 || 	inc	hl                         ; 044074 || 0440E6 23          10709  			INC	HL
	ld	ix,$044a00                  ; 0440E7 || 	ld	ix,$044a00                  ; 044075 || 0440E7 DD 21 00 4A 10710  			LD	IX, ACCS		; Pointer to where the copy is to be stored
	ld	($044d43),ix                ; 0440EC || 	ld	($044d43),ix                ; 04407A || 0440EC DD 22 43 4D 10711  			LD	(OSWRCHPT), IX
	ld	ix,$044d40                  ; 0440F1 || 	ld	ix,$044d40                  ; 04407F || 0440F1 DD 21 40 4D 10712  			LD	IX, LISTON		; Pointer to LISTON variable in RAM
	ld	a,(ix)                      ; 0440F6 || 	ld	a,(ix)                      ; 044084 || 0440F6 DD 7E 00    10713  			LD	A, (IX)			; Store that variable
	push	af                        ; 0440F9 || 	push	af                        ; 044087 || 0440F9 F5          10714  			PUSH	AF
	ld	(ix),$09                    ; 0440FA || 	ld	(ix),$09                    ; 044088 || 0440FA DD 36 00 09 10715  			LD	(IX), 09h		; Set to echo to buffer
	call	$0438f3                   ; 0440FE || 	call	$043892                   ; 04408C || 0440FE CD F3 38 04 10716  			CALL	LISTIT
	pop	af                         ; 044102 || 	pop	af                         ; 044090 || 044102 F1          10717  			POP	AF
	ld	(ix),a                      ; 044103 || 	ld	(ix),a                      ; 044091 || 044103 DD 77 00    10718  			LD	(IX), A			; Restore the original LISTON variable
	ld	hl,$044a00                  ; 044106 || 	ld	hl,$044a00                  ; 044094 || 044106 21 00 4A 04 10719  			LD	HL, ACCS		; HL: ACCS
	ld	e,l                         ; 04410A || 	ld	e,l                         ; 044098 || 04410A 5D          10720  			LD	E, L			;  E: 0 - Don't clear the buffer; ACCS is on a page boundary so L is 0
	call	$043ec2                   ; 04410B || 	call	$043e61                   ; 044099 || 04410B CD C2 3E 04 10721  			CALL	OSLINE1			; Invoke the editor
	jp	$043131                     ; 04410F || 	jp	$0430d0                     ; 04409D || 04410F C3 31 31 04 10722  			JP	ONEDIT			; Jump back to the BASIC loop just after the normal line edit
	call	$043df8                   ; 044113 || 	call	$043d97                   ; 0440A1 || 044113 CD F8 3D 04 10726  STAR_FX:		CALL	ASC_TO_NUMBER
	ld	c,e                         ; 044117 || 	ld	c,e                         ; 0440A5 || 044117 4B          10727  			LD	C, E			; C: Save FX #
	call	$043df8                   ; 044118 || 	call	$043d97                   ; 0440A6 || 044118 CD F8 3D 04 10728  			CALL	ASC_TO_NUMBER
	ld	a,d                         ; 04411C || 	ld	a,d                         ; 0440AA || 04411C 7A          10729  			LD	A, D  			; Is first parameter > 255?
	or	a                           ; 04411D || 	or	a                           ; 0440AB || 04411D B7          10730  			OR 	A
	jr	z,$+$05                     ; 04411E || 	jr	z,$+$05                     ; 0440AC || 04411E 28 03       10731  			JR	Z, STAR_FX1		; Yes, so skip next bit
	ex	de,hl                       ; 044120 || 	ex	de,hl                       ; 0440AE || 044120 EB          10732  			EX	DE, HL 			; Parameter is 16-bit
	jr	$+$09                       ; 044121 || 	jr	$+$09                       ; 0440AF || 044121 18 07       10733  			JR	STAR_FX2
	ld	b,e                         ; 044123 || 	ld	b,e                         ; 0440B1 || 044123 43          10735  STAR_FX1:		LD	B, E 			; B: Save First parameter
	call	$043df8                   ; 044124 || 	call	$043d97                   ; 0440B2 || 044124 CD F8 3D 04 10736  			CALL	ASC_TO_NUMBER		; Fetch second parameter
	ld	l,b                         ; 044128 || 	ld	l,b                         ; 0440B6 || 044128 68          10737  			LD	L, B 			; L: First parameter
	ld	h,e                         ; 044129 || 	ld	h,e                         ; 0440B7 || 044129 63          10738  			LD	H, E 			; H: Second parameter
	ld	a,c                         ; 04412A || 	ld	a,c                         ; 0440B8 || 04412A 79          10740  STAR_FX2:		LD	A, C 			; A: FX #, and fall through to OSBYTE
	cp	$0b                         ; 04412B || 	cp	$0b                         ; 0440B9 || 04412B FE 0B       10747  OSBYTE:			CP	0BH			; *FX 11, n: Keyboard auto-repeat delay
	jr	z,$+$1a                     ; 04412D || 	jr	z,$+$1a                     ; 0440BB || 04412D 28 18       10748  			JR	Z, OSBYTE_0B
	cp	$0c                         ; 04412F || 	cp	$0c                         ; 0440BD || 04412F FE 0C       10749  			CP	0CH			; *FX 12, n: Keyboard auto-repeat rate
	jr	z,$+$45                     ; 044131 || 	jr	z,$+$45                     ; 0440BF || 044131 28 43       10750  			JR	Z, OSBYTE_0C
	cp	$13                         ; 044133 || 	cp	$13                         ; 0440C1 || 044133 FE 13       10751  			CP	13H			; *FX 19: Wait for vblank
	jr	z,$+$70                     ; 044135 || 	jr	z,$+$70                     ; 0440C3 || 044135 28 6E       10752  			JR	Z, OSBYTE_13
	cp	$76                         ; 044137 || 	cp	$76                         ; 0440C5 || 044137 FE 76       10753  			CP	76H			; *FX 118, n: Set keyboard LED
	jp	z,$0441c0                   ; 044139 || 	jp	z,$04414e                   ; 0440C7 || 044139 CA C0 41 04 10754  			JP	Z, OSBYTE_76
	cp	$a0                         ; 04413D || 	cp	$a0                         ; 0440CB || 04413D FE A0       10755  			CP	A0H
	jp	z,$0441f0                   ; 04413F || 	jp	z,$04417e                   ; 0440CD || 04413F CA F0 41 04 10756  			JP	Z, OSBYTE_A0
	jp	$044053                     ; 044143 || 	jp	$043ff2                     ; 0440D1 || 044143 C3 53 40 04 10757  			JP	HUH			; Anything else trips an error
	ld	a,$17                       ; 044147 || 	ld	a,$17                       ; 0440D5 || 044147 3E 17       0001M 		LD	A, val
	call	$043f61                   ; 044149 || 	call	$043f00                   ; 0440D7 || 044149 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 04414D || 	ld	a,$00                       ; 0440DB || 04414D 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 04414F || 	call	$043f00                   ; 0440DD || 04414F CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$88                       ; 044153 || 	ld	a,$88                       ; 0440E1 || 044153 3E 88       0001M 		LD	A, val
	call	$043f61                   ; 044155 || 	call	$043f00                   ; 0440E3 || 044155 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,l                         ; 044159 || 	ld	a,l                         ; 0440E7 || 044159 7D          0001M 		LD	A, val
	call	$043f61                   ; 04415A || 	call	$043f00                   ; 0440E8 || 04415A CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,h                         ; 04415E || 	ld	a,h                         ; 0440EC || 04415E 7C          0001M 		LD	A, val
	call	$043f61                   ; 04415F || 	call	$043f00                   ; 0440ED || 04415F CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 044163 || 	ld	a,$00                       ; 0440F1 || 044163 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 044165 || 	call	$043f00                   ; 0440F3 || 044165 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 044169 || 	ld	a,$00                       ; 0440F7 || 044169 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 04416B || 	call	$043f00                   ; 0440F9 || 04416B CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$ff                       ; 04416F || 	ld	a,$ff                       ; 0440FD || 04416F 3E FF       0001M 		LD	A, val
	call	$043f61                   ; 044171 || 	call	$043f00                   ; 0440FF || 044171 CD 61 3F 04 0002M 		CALL	OSWRCH
	ret                            ; 044175 || 	ret                            ; 044103 || 044175 C9          10771  			RET
	ld	a,$17                       ; 044176 || 	ld	a,$17                       ; 044104 || 044176 3E 17       0001M 		LD	A, val
	call	$043f61                   ; 044178 || 	call	$043f00                   ; 044106 || 044178 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 04417C || 	ld	a,$00                       ; 04410A || 04417C 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 04417E || 	call	$043f00                   ; 04410C || 04417E CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$88                       ; 044182 || 	ld	a,$88                       ; 044110 || 044182 3E 88       0001M 		LD	A, val
	call	$043f61                   ; 044184 || 	call	$043f00                   ; 044112 || 044184 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 044188 || 	ld	a,$00                       ; 044116 || 044188 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 04418A || 	call	$043f00                   ; 044118 || 04418A CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 04418E || 	ld	a,$00                       ; 04411C || 04418E 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 044190 || 	call	$043f00                   ; 04411E || 044190 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,l                         ; 044194 || 	ld	a,l                         ; 044122 || 044194 7D          0001M 		LD	A, val
	call	$043f61                   ; 044195 || 	call	$043f00                   ; 044123 || 044195 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,h                         ; 044199 || 	ld	a,h                         ; 044127 || 044199 7C          0001M 		LD	A, val
	call	$043f61                   ; 04419A || 	call	$043f00                   ; 044128 || 04419A CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$ff                       ; 04419E || 	ld	a,$ff                       ; 04412C || 04419E 3E FF       0001M 		LD	A, val
	call	$043f61                   ; 0441A0 || 	call	$043f00                   ; 04412E || 0441A0 CD 61 3F 04 0002M 		CALL	OSWRCH
	ret                            ; 0441A4 || 	ret                            ; 044132 || 0441A4 C9          10785  			RET
	call	$0441af                   ; 0441A5 || 	call	$04413d                   ; 044133 || 0441A5 CD AF 41 04 10789  OSBYTE_13:		CALL	WAIT_VBLANK
	ld	l,$00                       ; 0441A9 || 	ld	l,$00                       ; 044137 || 0441A9 2E 00       10790  			LD	L, 0			; Returns 0
	jp	$04058f                     ; 0441AB || 	jp	$04057f                     ; 044139 || 0441AB C3 8F 05 04 10791  			JP	COUNT0
	push	ix                        ; 0441AF || 	push	ix                        ; 04413D || 0441AF DD E5       10793  WAIT_VBLANK:		PUSH 	IX			; Wait for VBLANK interrupt
	ld	a,$08                       ; 0441B1 || 	ld	a,$08                       ; 04413F || 0441B1 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 0441B3 || 	rst.lis	$08                    ; 044141 || 0441B3 49 CF       0002M 			RST.LIS	08h
	ld	a,(ix)                      ; 0441B5 || 	ld	a,(ix)                      ; 044143 || 0441B5 DD 7E 00    10795  			LD	A, (IX + sysvar_time + 0)
	cp	(ix)                        ; 0441B8 || 	cp	(ix)                        ; 044146 || 0441B8 DD BE 00    10796  @@:			CP 	A, (IX + sysvar_time + 0)
	jr	z,$-$03                     ; 0441BB || 	jr	z,$-$03                     ; 044149 || 0441BB 28 FB       10797  			JR	Z, @B
	pop	ix                         ; 0441BD || 	pop	ix                         ; 04414B || 0441BD DD E1       10798  			POP	IX
	ret                            ; 0441BF || 	ret                            ; 04414D || 0441BF C9          10799  			RET
	ld	a,$17                       ; 0441C0 || 	ld	a,$17                       ; 04414E || 0441C0 3E 17       0001M 		LD	A, val
	call	$043f61                   ; 0441C2 || 	call	$043f00                   ; 044150 || 0441C2 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 0441C6 || 	ld	a,$00                       ; 044154 || 0441C6 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 0441C8 || 	call	$043f00                   ; 044156 || 0441C8 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$88                       ; 0441CC || 	ld	a,$88                       ; 04415A || 0441CC 3E 88       0001M 		LD	A, val
	call	$043f61                   ; 0441CE || 	call	$043f00                   ; 04415C || 0441CE CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 0441D2 || 	ld	a,$00                       ; 044160 || 0441D2 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 0441D4 || 	call	$043f00                   ; 044162 || 0441D4 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 0441D8 || 	ld	a,$00                       ; 044166 || 0441D8 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 0441DA || 	call	$043f00                   ; 044168 || 0441DA CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 0441DE || 	ld	a,$00                       ; 04416C || 0441DE 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 0441E0 || 	call	$043f00                   ; 04416E || 0441E0 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 0441E4 || 	ld	a,$00                       ; 044172 || 0441E4 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 0441E6 || 	call	$043f00                   ; 044174 || 0441E6 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,l                         ; 0441EA || 	ld	a,l                         ; 044178 || 0441EA 7D          0001M 		LD	A, val
	call	$043f61                   ; 0441EB || 	call	$043f00                   ; 044179 || 0441EB CD 61 3F 04 0002M 		CALL	OSWRCH
	ret                            ; 0441EF || 	ret                            ; 04417D || 0441EF C9          10813  			RET
	push	ix                        ; 0441F0 || 	push	ix                        ; 04417E || 0441F0 DD E5       10819  OSBYTE_A0:		PUSH	IX
	ld	a,$08                       ; 0441F2 || 	ld	a,$08                       ; 044180 || 0441F2 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 0441F4 || 	rst.lis	$08                    ; 044182 || 0441F4 49 CF       0002M 			RST.LIS	08h
	ld	bc,$000000                  ; 0441F6 || 	ld	bc,$000000                  ; 044184 || 0441F6 01 00 00 00 10821  			LD	BC, 0
	ld	c,l                         ; 0441FA || 	ld	c,l                         ; 044188 || 0441FA 4D          10822  			LD	C, L			; BCU = L
	add	ix,bc                      ; 0441FB || 	add	ix,bc                      ; 044189 || 0441FB DD 09       10823  			ADD	IX, BC			; Add to IX
	ld	l,(ix)                      ; 0441FD || 	ld	l,(ix)                      ; 04418B || 0441FD DD 6E 00    10824  			LD	L, (IX + 0)		; Fetch the return value
	pop	ix                         ; 044200 || 	pop	ix                         ; 04418E || 044200 DD E1       10825  			POP	IX
	jp	$04058f                     ; 044202 || 	jp	$04057f                     ; 044190 || 044202 C3 8F 05 04 10826  			JP 	COUNT0
	push	bc                        ; 044206 || 	push	bc                        ; 044194 || 044206 C5          10835  OSLOAD:			PUSH	BC			; Stack the size
	push	de                        ; 044207 || 	push	de                        ; 044195 || 044207 D5          10836  			PUSH	DE			; Stack the load address
	ld	de,$044a00                  ; 044208 || 	ld	de,$044a00                  ; 044196 || 044208 11 00 4A 04 10837  			LD	DE, ACCS		; Buffer address for filename
	call	$043e7a                   ; 04420C || 	call	$043e19                   ; 04419A || 04420C CD 7A 3E 04 10838  			CALL	CSTR_FNAME		; Fetch filename from MOS into buffer
	ld	hl,$044a00                  ; 044210 || 	ld	hl,$044a00                  ; 04419E || 044210 21 00 4A 04 10839  			LD	HL, ACCS		; HL: Filename
	call	$044306                   ; 044214 || 	call	$044294                   ; 0441A2 || 044214 CD 06 43 04 10840  			CALL	EXT_DEFAULT		; Tack on the extension .BBC if not specified
	call	$04431a                   ; 044218 || 	call	$0442a8                   ; 0441A6 || 044218 CD 1A 43 04 10841  			CALL	EXT_HANDLER		; Get the default handler
	pop	de                         ; 04421C || 	pop	de                         ; 0441AA || 04421C D1          10842  			POP	DE			; Restore the load address
	pop	bc                         ; 04421D || 	pop	bc                         ; 0441AB || 04421D C1          10843  			POP	BC			; Restore the size
	or	a                           ; 04421E || 	or	a                           ; 0441AC || 04421E B7          10844  			OR	A
	jr	z,$+$62                     ; 04421F || 	jr	z,$+$62                     ; 0441AD || 04421F 28 60       10845  			JR 	Z, OSLOAD_BBC
	xor	a                          ; 044221 || 	xor	a                          ; 0441AF || 044221 AF          10849  OSLOAD_TXT:		XOR	A			; Set file attributes to read
	call	$04438e                   ; 044222 || 	call	$04431c                   ; 0441B0 || 044222 CD 8E 43 04 10850  			CALL	OSOPEN			; Open the file
	ld	e,a                         ; 044226 || 	ld	e,a                         ; 0441B4 || 044226 5F          10851  			LD 	E, A 			; The filehandle
	or	a                           ; 044227 || 	or	a                           ; 0441B5 || 044227 B7          10852  			OR	A
	ld	a,$04                       ; 044228 || 	ld	a,$04                       ; 0441B6 || 044228 3E 04       10853  			LD	A, 4			; File not found error
	jr	z,$+$5f                     ; 04422A || 	jr	z,$+$5f                     ; 0441B8 || 04422A 28 5D       10854  			JR	Z, OSERROR		; Jump to error handler
	call	$0438cd                   ; 04422C || 	call	$04386c                   ; 0441BA || 04422C CD CD 38 04 10855  			CALL	NEWIT			; Call NEW to clear the program space
	ld	hl,$044a00                  ; 044230 || 	ld	hl,$044a00                  ; 0441BE || 044230 21 00 4A 04 10857  OSLOAD_TXT1:		LD	HL, ACCS 		; Where the input is going to be stored
	call	$0443a5                   ; 044234 || 	call	$044333                   ; 0441C2 || 044234 CD A5 43 04 10861  @@:			CALL	OSBGET			; Read the byte into A
	jr	c,$+$20                     ; 044238 || 	jr	c,$+$20                     ; 0441C6 || 044238 38 1E       10862  			JR	C, OSLOAD_TXT3		; Is it EOF?
	cp	$0a                         ; 04423A || 	cp	$0a                         ; 0441C8 || 04423A FE 0A       10863  			CP	LF 			; Is it LF?
	jr	z,$+$1c                     ; 04423C || 	jr	z,$+$1c                     ; 0441CA || 04423C 28 1A       10864  			JR	Z, OSLOAD_TXT3 		; Yes, so skip to the next line
	cp	$21                         ; 04423E || 	cp	$21                         ; 0441CC || 04423E FE 21       10865  			CP	21h			; Is it less than or equal to ASCII space?
	jr	c,$-$0c                     ; 044240 || 	jr	c,$-$0c                     ; 0441CE || 044240 38 F2       10866  			JR	C, @B 			; Yes, so keep looping
	ld	(hl),a                      ; 044242 || 	ld	(hl),a                      ; 0441D0 || 044242 77          10867  			LD	(HL), A 		; Store the first character
	inc	l                          ; 044243 || 	inc	l                          ; 0441D1 || 044243 2C          10868  			INC	L
	call	$0443a5                   ; 044244 || 	call	$044333                   ; 0441D2 || 044244 CD A5 43 04 10872  OSLOAD_TXT2:		CALL	OSBGET			; Read the byte into A
	jr	c,$+$2d                     ; 044248 || 	jr	c,$+$2d                     ; 0441D6 || 044248 38 2B       10873  			JR	C, OSLOAD_TXT4		; Is it EOF?
	cp	$20                         ; 04424A || 	cp	$20                         ; 0441D8 || 04424A FE 20       10874  			CP	20h			; Skip if not an ASCII character
	jr	c,$+$08                     ; 04424C || 	jr	c,$+$08                     ; 0441DA || 04424C 38 06       10875  			JR	C, @F
	ld	(hl),a                      ; 04424E || 	ld	(hl),a                      ; 0441DC || 04424E 77          10876  			LD	(HL), A 		; Store in the input buffer
	inc	l                          ; 04424F || 	inc	l                          ; 0441DD || 04424F 2C          10877  			INC	L			; Increment the buffer pointer
	jp	z,$043759                   ; 044250 || 	jp	z,$0436f8                   ; 0441DE || 044250 CA 59 37 04 10878  			JP	Z, BAD			; If the buffer is full (wrapped to 0) then jump to Bad Program error
	cp	$0a                         ; 044254 || 	cp	$0a                         ; 0441E2 || 044254 FE 0A       10879  @@:			CP	LF			; Check for LF
	jr	nz,$-$12                    ; 044256 || 	jr	nz,$-$12                    ; 0441E4 || 044256 20 EC       10880  			JR	NZ, OSLOAD_TXT2		; If not, then loop to read the rest of the characters in
	ld	(hl),$0d                    ; 044258 || 	ld	(hl),$0d                    ; 0441E6 || 044258 36 0D       10884  OSLOAD_TXT3:		LD	(HL), CR		; Store a CR for BBC BASIC
	ld	a,l                         ; 04425A || 	ld	a,l                         ; 0441E8 || 04425A 7D          10885  			LD	A, L			; Check for minimum line length
	cp	$02                         ; 04425B || 	cp	$02                         ; 0441E9 || 04425B FE 02       10886  			CP	2			; If it is 2 characters or less (including CR)
	jr	c,$+$0c                     ; 04425D || 	jr	c,$+$0c                     ; 0441EB || 04425D 38 0A       10887  			JR	C, @F			; Then don't bother entering it
	push	de                        ; 04425F || 	push	de                        ; 0441ED || 04425F D5          10888  			PUSH	DE			; Preserve the filehandle
	call	$04313d                   ; 044260 || 	call	$0430dc                   ; 0441EE || 044260 CD 3D 31 04 10889  			CALL	ONEDIT1			; Enter the line in memory
	call	c,$0438a0                 ; 044264 || 	call	c,$04383f                 ; 0441F2 || 044264 DC A0 38 04 10890  			CALL	C,CLEAN			; If a new line has been entered, then call CLEAN to set TOP and write &FFFF end of program marker
	pop	de                         ; 044268 || 	pop	de                         ; 0441F6 || 044268 D1          10891  			POP	DE
	call	$0443b6                   ; 044269 || 	call	$044344                   ; 0441F7 || 044269 CD B6 43 04 10892  @@:			CALL	OSSTAT			; End of file?
	jr	nz,$-$3d                    ; 04426D || 	jr	nz,$-$3d                    ; 0441FB || 04426D 20 C1       10893  			JR	NZ, OSLOAD_TXT1		; No, so loop
	call	$04439d                   ; 04426F || 	call	$04432b                   ; 0441FD || 04426F CD 9D 43 04 10894  			CALL	OSSHUT			; Close the file
	scf                            ; 044273 || 	scf                            ; 044201 || 044273 37          10895  			SCF				; Flag to BASIC that we're good
	ret                            ; 044274 || 	ret                            ; 044202 || 044274 C9          10896  			RET
	cp	$20                         ; 044275 || 	cp	$20                         ; 044203 || 044275 FE 20       10900  OSLOAD_TXT4:		CP	20h			; Skip if not an ASCII character
	jr	c,$+$08                     ; 044277 || 	jr	c,$+$08                     ; 044205 || 044277 38 06       10901  			JR	C, @F
	ld	(hl),a                      ; 044279 || 	ld	(hl),a                      ; 044207 || 044279 77          10902  			LD	(HL), A			; Store the character
	inc	l                          ; 04427A || 	inc	l                          ; 044208 || 04427A 2C          10903  			INC	L
	jp	z,$043759                   ; 04427B || 	jp	z,$0436f8                   ; 044209 || 04427B CA 59 37 04 10904  			JP	Z, BAD
	jr	$-$27                       ; 04427F || 	jr	$-$27                       ; 04420D || 04427F 18 D7       10905  @@:			JR	OSLOAD_TXT3
	ld	a,$01                       ; 044281 || 	ld	a,$01                       ; 04420F || 044281 3E 01       0001M 			LD	A, function
	rst.lis	$08                    ; 044283 || 	rst.lis	$08                    ; 044211 || 044283 49 CF       0002M 			RST.LIS	08h
	ret	nc                         ; 044285 || 	ret	nc                         ; 044213 || 044285 D0          10911  			RET	NC			; If load returns with carry reset - NO ROOM
	or	a                           ; 044286 || 	or	a                           ; 044214 || 044286 B7          10912  			OR	A			; If there is no error (A=0)
	scf                            ; 044287 || 	scf                            ; 044215 || 044287 37          10913  			SCF				; Need to set carry indicating there was room
	ret	z                          ; 044288 || 	ret	z                          ; 044216 || 044288 C8          10914  			RET	Z			; Return
	push	af                        ; 044289 || 	push	af                        ; 044217 || 044289 F5          10916  OSERROR:		PUSH	AF			; Handle the MOS error
	ld	hl,$044a00                  ; 04428A || 	ld	hl,$044a00                  ; 044218 || 04428A 21 00 4A 04 10917  			LD	HL, ACCS		; Address of the buffer
	ld	bc,$000100                  ; 04428E || 	ld	bc,$000100                  ; 04421C || 04428E 01 00 01 00 10918  			LD	BC, 256			; Length of the buffer
	ld	e,a                         ; 044292 || 	ld	e,a                         ; 044220 || 044292 5F          10919  			LD	E, A			; The error code
	ld	a,$0f                       ; 044293 || 	ld	a,$0f                       ; 044221 || 044293 3E 0F       0001M 			LD	A, function
	rst.lis	$08                    ; 044295 || 	rst.lis	$08                    ; 044223 || 044295 49 CF       0002M 			RST.LIS	08h
	pop	af                         ; 044297 || 	pop	af                         ; 044225 || 044297 F1          10921  			POP	AF
	push	hl                        ; 044298 || 	push	hl                        ; 044226 || 044298 E5          10922  			PUSH	HL			; Stack the address of the error (now in ACCS)
	add	a,$7f                      ; 044299 || 	add	a,$7f                      ; 044227 || 044299 C6 7F       10923  			ADD	A, 127			; Add 127 to the error code (MOS errors start at 128, and are trappable)
	jp	$0437d8                     ; 04429B || 	jp	$043777                     ; 044229 || 04429B C3 D8 37 04 10924  			JP	EXTERR			; Trigger an external error
	push	bc                        ; 04429F || 	push	bc                        ; 04422D || 04429F C5          10932  OSSAVE:			PUSH	BC			; Stack the size
	push	de                        ; 0442A0 || 	push	de                        ; 04422E || 0442A0 D5          10933  			PUSH	DE			; Stack the save address
	ld	de,$044a00                  ; 0442A1 || 	ld	de,$044a00                  ; 04422F || 0442A1 11 00 4A 04 10934  			LD	DE, ACCS		; Buffer address for filename
	call	$043e7a                   ; 0442A5 || 	call	$043e19                   ; 044233 || 0442A5 CD 7A 3E 04 10935  			CALL	CSTR_FNAME		; Fetch filename from MOS into buffer
	ld	hl,$044a00                  ; 0442A9 || 	ld	hl,$044a00                  ; 044237 || 0442A9 21 00 4A 04 10936  			LD	HL, ACCS		; HL: Filename
	call	$044306                   ; 0442AD || 	call	$044294                   ; 04423B || 0442AD CD 06 43 04 10937  			CALL	EXT_DEFAULT		; Tack on the extension .BBC if not specified
	call	$04431a                   ; 0442B1 || 	call	$0442a8                   ; 04423F || 0442B1 CD 1A 43 04 10938  			CALL	EXT_HANDLER		; Get the default handler
	pop	de                         ; 0442B5 || 	pop	de                         ; 044243 || 0442B5 D1          10939  			POP	DE			; Restore the save address
	pop	bc                         ; 0442B6 || 	pop	bc                         ; 044244 || 0442B6 C1          10940  			POP	BC			; Restore the size
	or	a                           ; 0442B7 || 	or	a                           ; 044245 || 0442B7 B7          10941  			OR	A			; Is the extension .BBC
	jr	z,$+$46                     ; 0442B8 || 	jr	z,$+$46                     ; 044246 || 0442B8 28 44       10942  			JR	Z, OSSAVE_BBC		; Yes, so use that
	ld	a,($044d45)                 ; 0442BA || 	ld	a,($044d45)                 ; 044248 || 0442BA 3A 45 4D 04 10946  OSSAVE_TXT:		LD 	A, (OSWRCHCH)		; Stack the current channel
	push	af                        ; 0442BE || 	push	af                        ; 04424C || 0442BE F5          10947  			PUSH	AF
	xor	a                          ; 0442BF || 	xor	a                          ; 04424D || 0442BF AF          10948  			XOR	A
	inc	a                          ; 0442C0 || 	inc	a                          ; 04424E || 0442C0 3C          10949  			INC	A			; Make sure C is clear, A is 1, for OPENOUT
	ld	($044d45),a                 ; 0442C1 || 	ld	($044d45),a                 ; 04424F || 0442C1 32 45 4D 04 10950  			LD	(OSWRCHCH), A
	call	$04438e                   ; 0442C5 || 	call	$04431c                   ; 044253 || 0442C5 CD 8E 43 04 10951  			CALL	OSOPEN			; Open the file
	ld	($044d46),a                 ; 0442C9 || 	ld	($044d46),a                 ; 044257 || 0442C9 32 46 4D 04 10952  			LD	(OSWRCHFH), A		; Store the file handle for OSWRCH
	ld	ix,$044d40                  ; 0442CD || 	ld	ix,$044d40                  ; 04425B || 0442CD DD 21 40 4D 10953  			LD	IX, LISTON		; Required for LISTIT
	ld	hl,($044d14)                ; 0442D2 || 	ld	hl,($044d14)                ; 044260 || 0442D2 2A 14 4D 04 10954  			LD	HL, (PAGE_)		; Get start of program area
	exx                            ; 0442D6 || 	exx                            ; 044264 || 0442D6 D9          10955  			EXX
	ld	bc,$000000                  ; 0442D7 || 	ld	bc,$000000                  ; 044265 || 0442D7 01 00 00 00 10956  			LD	BC, 0			; Set the initial indent counters
	exx                            ; 0442DB || 	exx                            ; 044269 || 0442DB D9          10957  			EXX
	ld	a,(hl)                      ; 0442DC || 	ld	a,(hl)                      ; 04426A || 0442DC 7E          10958  OSSAVE_TXT1:		LD	A, (HL)			; Check for end of program marker
	or	a                           ; 0442DD || 	or	a                           ; 04426B || 0442DD B7          10959  			OR	A
	jr	z,$+$11                     ; 0442DE || 	jr	z,$+$11                     ; 04426C || 0442DE 28 0F       10960  			JR	Z, OSSAVE_TXT2
	inc	hl                         ; 0442E0 || 	inc	hl                         ; 04426E || 0442E0 23          10961  			INC	HL			; Skip the length byte
	ld	de,$000000                  ; 0442E1 || 	ld	de,$000000                  ; 04426F || 0442E1 11 00 00 00 10962  			LD	DE, 0			; Clear DE to ensure we get a 16-bit line number
	ld	e,(hl)                      ; 0442E5 || 	ld	e,(hl)                      ; 044273 || 0442E5 5E          10963  			LD	E, (HL)			; Get the line number
	inc	hl                         ; 0442E6 || 	inc	hl                         ; 044274 || 0442E6 23          10964  			INC	HL
	ld	d,(hl)                      ; 0442E7 || 	ld	d,(hl)                      ; 044275 || 0442E7 56          10965  			LD	D, (HL)
	inc	hl                         ; 0442E8 || 	inc	hl                         ; 044276 || 0442E8 23          10966  			INC	HL
	call	$0438f3                   ; 0442E9 || 	call	$043892                   ; 044277 || 0442E9 CD F3 38 04 10967  			CALL	LISTIT			; List the line
	jr	$-$11                       ; 0442ED || 	jr	$-$11                       ; 04427B || 0442ED 18 ED       10968  			JR	OSSAVE_TXT1
	ld	a,($044d46)                 ; 0442EF || 	ld	a,($044d46)                 ; 04427D || 0442EF 3A 46 4D 04 10969  OSSAVE_TXT2:		LD	A, (OSWRCHFH)		; Get the file handle
	ld	e,a                         ; 0442F3 || 	ld	e,a                         ; 044281 || 0442F3 5F          10970  			LD	E, A
	call	$04439d                   ; 0442F4 || 	call	$04432b                   ; 044282 || 0442F4 CD 9D 43 04 10971  			CALL	OSSHUT			; Close it
	pop	af                         ; 0442F8 || 	pop	af                         ; 044286 || 0442F8 F1          10972  			POP	AF			; Restore the channel
	ld	($044d45),a                 ; 0442F9 || 	ld	($044d45),a                 ; 044287 || 0442F9 32 45 4D 04 10973  			LD	(OSWRCHCH), A
	ret                            ; 0442FD || 	ret                            ; 04428B || 0442FD C9          10974  			RET
	ld	a,$02                       ; 0442FE || 	ld	a,$02                       ; 04428C || 0442FE 3E 02       0001M 			LD	A, function
	rst.lis	$08                    ; 044300 || 	rst.lis	$08                    ; 04428E || 044300 49 CF       0002M 			RST.LIS	08h
	or	a                           ; 044302 || 	or	a                           ; 044290 || 044302 B7          10979  			OR	A			; If there is no error (A=0)
	ret	z                          ; 044303 || 	ret	z                          ; 044291 || 044303 C8          10980  			RET	Z			; Just return
	jr	$-$7b                       ; 044304 || 	jr	$-$7b                       ; 044292 || 044304 18 83       10981  			JR	OSERROR			; Trip an error
	push	hl                        ; 044306 || 	push	hl                        ; 044294 || 044306 E5          10987  EXT_DEFAULT:		PUSH	HL			; Stack the filename pointer
	ld	c,$2e                       ; 044307 || 	ld	c,$2e                       ; 044295 || 044307 0E 2E       10988  			LD	C, '.'			; Search for dot (marks start of extension)
	call	$043e9a                   ; 044309 || 	call	$043e39                   ; 044297 || 044309 CD 9A 3E 04 10989  			CALL	CSTR_FINDCH
	or	a                           ; 04430D || 	or	a                           ; 04429B || 04430D B7          10990  			OR	A			; Check for end of string marker
	jr	nz,$+$0a                    ; 04430E || 	jr	nz,$+$0a                    ; 04429C || 04430E 20 08       10991  			JR	NZ, @F			; No, so skip as we have an extension at this point
	ld	de,$04434a                  ; 044310 || 	ld	de,$0442d8                  ; 04429E || 044310 11 4A 43 04 10992  			LD	DE, EXT_LOOKUP		; Get the first (default extension)
	call	$043eb1                   ; 044314 || 	call	$043e50                   ; 0442A2 || 044314 CD B1 3E 04 10993  			CALL	CSTR_CAT		; Concat it to string pointed to by HL
	pop	hl                         ; 044318 || 	pop	hl                         ; 0442A6 || 044318 E1          10994  @@:			POP	HL			; Restore the filename pointer
	ret                            ; 044319 || 	ret                            ; 0442A7 || 044319 C9          10995  			RET
	push	hl                        ; 04431A || 	push	hl                        ; 0442A8 || 04431A E5          11002  EXT_HANDLER:		PUSH	HL			; Stack the filename pointer
	ld	c,$2e                       ; 04431B || 	ld	c,$2e                       ; 0442A9 || 04431B 0E 2E       11003  			LD	C, '.'			; Find the '.'
	call	$043e9a                   ; 04431D || 	call	$043e39                   ; 0442AB || 04431D CD 9A 3E 04 11004  			CALL	CSTR_FINDCH
	ld	de,$04434a                  ; 044321 || 	ld	de,$0442d8                  ; 0442AF || 044321 11 4A 43 04 11005  			LD	DE, EXT_LOOKUP		; The lookup table
	push	hl                        ; 044325 || 	push	hl                        ; 0442B3 || 044325 E5          11007  EXT_HANDLER_1:		PUSH	HL			; Stack the pointer to the extension
	call	$043ea2                   ; 044326 || 	call	$043e41                   ; 0442B4 || 044326 CD A2 3E 04 11008  			CALL	CSTR_ENDSWITH		; Check whether the string ends with the entry in the lookup
	pop	hl                         ; 04432A || 	pop	hl                         ; 0442B8 || 04432A E1          11009  			POP	HL			; Restore the pointer to the extension
	jr	z,$+$1b                     ; 04432B || 	jr	z,$+$1b                     ; 0442B9 || 04432B 28 19       11010  			JR	Z, EXT_HANDLER_2	; We have a match!
	ld	a,(de)                      ; 04432D || 	ld	a,(de)                      ; 0442BB || 04432D 1A          11012  @@:			LD	A, (DE)			; Skip to the end of the entry in the lookup
	inc	de                         ; 04432E || 	inc	de                         ; 0442BC || 04432E 13          11013  			INC	DE
	or	a                           ; 04432F || 	or	a                           ; 0442BD || 04432F B7          11014  			OR	A
	jr	nz,$-$03                    ; 044330 || 	jr	nz,$-$03                    ; 0442BE || 044330 20 FB       11015  			JR	NZ, @B
	inc	de                         ; 044332 || 	inc	de                         ; 0442C0 || 044332 13          11016  			INC	DE			; Skip the file extension # byte
	ld	a,(de)                      ; 044333 || 	ld	a,(de)                      ; 0442C1 || 044333 1A          11018  			LD	A, (DE)			; Are we at the end of the table?
	or	a                           ; 044334 || 	or	a                           ; 0442C2 || 044334 B7          11019  			OR	A
	jr	nz,$-$10                    ; 044335 || 	jr	nz,$-$10                    ; 0442C3 || 044335 20 EE       11020  			JR	NZ, EXT_HANDLER_1	; No, so loop
	ld	a,$cc                       ; 044337 || 	ld	a,$cc                       ; 0442C5 || 044337 3E CC       11022  			LD      A,204			; Throw a "Bad name" error
	call	$0437d8                   ; 044339 || 	call	$043777                   ; 0442C7 || 044339 CD D8 37 04 11023          		CALL    EXTERR
	ld	b,d                         ; 04433D || 	ld	b,d                         ; 0442CB || 04433D 42 61 64 20 11024          		DB    	"Bad name", 0
	ld	h,c                         ; 04433E || 	ld	h,c                         ; 0442CC
	ld	h,h                         ; 04433F || 	ld	h,h                         ; 0442CD
	jr	nz,$+$70                    ; 044340 || 	jr	nz,$+$70                    ; 0442CE
	ld	h,c                         ; 044342 || 	ld	h,c                         ; 0442D0
	ld	l,l                         ; 044343 || 	ld	l,l                         ; 0442D1
	ld	h,l                         ; 044344 || 	ld	h,l                         ; 0442D2
	nop                            ; 044345 || 	nop                            ; 0442D3
	inc	de                         ; 044346 || 	inc	de                         ; 0442D4 || 044346 13          11026  EXT_HANDLER_2:		INC	DE			; Skip to the file extension # byte
	ld	a,(de)                      ; 044347 || 	ld	a,(de)                      ; 0442D5 || 044347 1A          11027  			LD	A, (DE)
	pop	hl                         ; 044348 || 	pop	hl                         ; 0442D6 || 044348 E1          11028  			POP	HL			; Restore the filename pointer
	ret                            ; 044349 || 	ret                            ; 0442D7 || 044349 C9          11029  			RET
	ld	l,$42                       ; 04434A || 	ld	l,$42                       ; 0442D8 || 04434A 2E 42 42 43 11038  EXT_LOOKUP:		DB	".BBC", 0, 0		; First entry is the default extension
	ld	b,d                         ; 04434C || 	ld	b,d                         ; 0442DA
	ld	b,e                         ; 04434D || 	ld	b,e                         ; 0442DB
	nop                            ; 04434E || 	nop                            ; 0442DC
	nop                            ; 04434F || 	nop                            ; 0442DD
	ld	l,$54                       ; 044350 || 	ld	l,$54                       ; 0442DE || 044350 2E 54 58 54 11039  			DB	".TXT", 0, 1
	ld	e,b                         ; 044352 || 	ld	e,b                         ; 0442E0
	ld	d,h                         ; 044353 || 	ld	d,h                         ; 0442E1
	nop                            ; 044354 || 	nop                            ; 0442E2
	ld	bc,$53412e                  ; 044355 || 	ld	bc,$53412e                  ; 0442E3
	ld	b,e                         ; 044359 || 	ld	b,e                         ; 0442E7
	nop                            ; 04435A || 	nop                            ; 0442E8
	ld	bc,$41422e                  ; 04435B || 	ld	bc,$41422e                  ; 0442E9
	ld	d,e                         ; 04435F || 	ld	d,e                         ; 0442ED
	nop                            ; 044360 || 	nop                            ; 0442EE
	ld	bc,$792100                  ; 044361 || 	ld	bc,$072100                  ; 0442EF
	ld	b,e                         ; 044365 || 	ld	b,e                         ; 0442F3
	inc	b                          ; 044366 || 	inc	b                          ; 0442F4
	ld	a,(hl)                      ; 044367 || 	ld	a,(hl)                      ; 0442F5 || 044367 7E          11061  OSCALL_1:		LD	A, (HL)
	inc	hl                         ; 044368 || 	inc	hl                         ; 0442F6 || 044368 23          11062  			INC	HL
	cp	$ff                         ; 044369 || 	cp	$ff                         ; 0442F7 || 044369 FE FF       11063  			CP	FFh
	ret	z                          ; 04436B || 	ret	z                          ; 0442F9 || 04436B C8          11064  			RET	Z
	cp	iyl                         ; 04436C || 	cp	iyl                         ; 0442FA || 04436C FD BD       11065  			CP	A, IYL
	jr	z,$+$08                     ; 04436E || 	jr	z,$+$08                     ; 0442FC || 04436E 28 06       11066  			JR	Z, OSCALL_2
	ret	nc                         ; 044370 || 	ret	nc                         ; 0442FE || 044370 D0          11067  			RET	NC
	inc	hl                         ; 044371 || 	inc	hl                         ; 0442FF || 044371 23          11068  			INC	HL
	inc	hl                         ; 044372 || 	inc	hl                         ; 044300 || 044372 23          11069  			INC	HL
	inc	hl                         ; 044373 || 	inc	hl                         ; 044301 || 044373 23          11070  			INC	HL
	jr	$-$0d                       ; 044374 || 	jr	$-$0d                       ; 044302 || 044374 18 F1       11071  			JR	OSCALL_1
	ld	iy,(hl)                     ; 044376 || 	ld	iy,(hl)                     ; 044304 || 044376 ED 31       11072  OSCALL_2:		LD	IY,(HL)
	ret                            ; 044378 || 	ret                            ; 044306 || 044378 C9          11073  			RET
	call	nc,$0443ad                ; 044379 || 	call	nc,$04433b                ; 044307 || 044379 D4          11074  OSCALL_TABLE:		DB 	D4h
	rst	$10                        ; 04437D || 	rst	$10                        ; 04430B || 04437D D7          11076  			DB 	D7h
	and	l                          ; 04437E                                         || 04437E A5 43 04    11077  			DW24 	OSBGET
	ld	b,e                         ; 04437F || 	ld	b,e                         ; 04430D
	inc	b                          ; 044380 || 	inc	b                          ; 04430E
	xor	$61                        ; 044381 || 	xor	$00                        ; 04430F || 044381 EE          11078  			DB 	EEh
	ccf                            ; 044383 || 	ccf                            ; 044311
	inc	b                          ; 044384 || 	inc	b                          ; 044312
	call	p,$04412b                 ; 044385 || 	call	p,$0440b9                 ; 044313 || 044385 F4          11080  			DB	F4h
	rst	$30                        ; 044389 || 	rst	$30                        ; 044317 || 044389 F7          11082  			DB	F7h
	pop	af                         ; 04438A                                         || 04438A F1 3F 04    11083  			DW24	OSCLI
	ccf                            ; 04438B || 	ccf                            ; 044319
	inc	b                          ; 04438C || 	inc	b                          ; 04431A
	rst	$38                        ; 04438D || 	rst	$38                        ; 04431B || 04438D FF          11084  			DB	FFh
	ld	c,$01                       ; 04438E || 	ld	c,$01                       ; 04431C || 04438E 0E 01       11095  OSOPEN:			LD	C, fa_read
	jr	z,$+$08                     ; 044390 || 	jr	z,$+$08                     ; 04431E || 044390 28 06       11096  			JR	Z, @F
	ld	c,$32                       ; 044392 || 	ld	c,$32                       ; 044320 || 044392 0E 32       11097  			LD	C, fa_write | fa_open_append
	jr	c,$+$04                     ; 044394 || 	jr	c,$+$04                     ; 044322 || 044394 38 02       11098  			JR	C, @F
	ld	c,$0a                       ; 044396 || 	ld	c,$0a                       ; 044324 || 044396 0E 0A       11099  			LD	C, fa_write | fa_create_always
	ld	a,$0a                       ; 044398 || 	ld	a,$0a                       ; 044326 || 044398 3E 0A       0001M 			LD	A, function
	rst.lis	$08                    ; 04439A || 	rst.lis	$08                    ; 044328 || 04439A 49 CF       0002M 			RST.LIS	08h
	ret                            ; 04439C || 	ret                            ; 04432A || 04439C C9          11101  			RET
	push	bc                        ; 04439D || 	push	bc                        ; 04432B || 04439D C5          11108  OSSHUT:			PUSH	BC
	ld	c,e                         ; 04439E || 	ld	c,e                         ; 04432C || 04439E 4B          11109  			LD	C, E
	ld	a,$0b                       ; 04439F || 	ld	a,$0b                       ; 04432D || 04439F 3E 0B       0001M 			LD	A, function
	rst.lis	$08                    ; 0443A1 || 	rst.lis	$08                    ; 04432F || 0443A1 49 CF       0002M 			RST.LIS	08h
	pop	bc                         ; 0443A3 || 	pop	bc                         ; 044331 || 0443A3 C1          11111  			POP	BC
	ret                            ; 0443A4 || 	ret                            ; 044332 || 0443A4 C9          11112  			RET
	push	bc                        ; 0443A5 || 	push	bc                        ; 044333 || 0443A5 C5          11121  OSBGET:			PUSH	BC
	ld	c,e                         ; 0443A6 || 	ld	c,e                         ; 044334 || 0443A6 4B          11122  			LD	C, E
	ld	a,$0c                       ; 0443A7 || 	ld	a,$0c                       ; 044335 || 0443A7 3E 0C       0001M 			LD	A, function
	rst.lis	$08                    ; 0443A9 || 	rst.lis	$08                    ; 044337 || 0443A9 49 CF       0002M 			RST.LIS	08h
	pop	bc                         ; 0443AB || 	pop	bc                         ; 044339 || 0443AB C1          11124  			POP	BC
	ret                            ; 0443AC || 	ret                            ; 04433A || 0443AC C9          11125  			RET
	push	bc                        ; 0443AD || 	push	bc                        ; 04433B || 0443AD C5          11132  OSBPUT:			PUSH	BC
	ld	c,e                         ; 0443AE || 	ld	c,e                         ; 04433C || 0443AE 4B          11133  			LD	C, E
	ld	b,a                         ; 0443AF || 	ld	b,a                         ; 04433D || 0443AF 47          11134  			LD	B, A
	ld	a,$0d                       ; 0443B0 || 	ld	a,$0d                       ; 04433E || 0443B0 3E 0D       0001M 			LD	A, function
	rst.lis	$08                    ; 0443B2 || 	rst.lis	$08                    ; 044340 || 0443B2 49 CF       0002M 			RST.LIS	08h
	pop	bc                         ; 0443B4 || 	pop	bc                         ; 044342 || 0443B4 C1          11136  			POP	BC
	ret                            ; 0443B5 || 	ret                            ; 044343 || 0443B5 C9          11137  			RET
	push	bc                        ; 0443B6 || 	push	bc                        ; 044344 || 0443B6 C5          11146  OSSTAT:			PUSH	BC
	ld	c,e                         ; 0443B7 || 	ld	c,e                         ; 044345 || 0443B7 4B          11147  			LD	C, E
	ld	a,$0e                       ; 0443B8 || 	ld	a,$0e                       ; 044346 || 0443B8 3E 0E       0001M 			LD	A, function
	rst.lis	$08                    ; 0443BA || 	rst.lis	$08                    ; 044348 || 0443BA 49 CF       0002M 			RST.LIS	08h
	pop	bc                         ; 0443BC || 	pop	bc                         ; 04434A || 0443BC C1          11149  			POP	BC
	cp	$01                         ; 0443BD || 	cp	$01                         ; 04434B || 0443BD FE 01       11150  			CP	1
	ret                            ; 0443BF || 	ret                            ; 04434D || 0443BF C9          11151  			RET
	push	iy                        ; 0443C0 || 	push	iy                        ; 04434E || 0443C0 FD E5       11159  GETPTR:			PUSH		IY
	ld	c,e                         ; 0443C2 || 	ld	c,e                         ; 044350 || 0443C2 4B          11160  			LD		C, E
	ld	a,$19                       ; 0443C3 || 	ld	a,$19                       ; 044351 || 0443C3 3E 19       0001M 			LD	A, function
	rst.lis	$08                    ; 0443C5 || 	rst.lis	$08                    ; 044353 || 0443C5 49 CF       0002M 			RST.LIS	08h
	push	hl                        ; 0443C7 || 	push	hl                        ; 044355 || 0443C7 E5          11162  			PUSH		HL
	pop	iy                         ; 0443C8 || 	pop	iy                         ; 044356 || 0443C8 FD E1       11163  			POP		IY		; IYU: Pointer to FIL structure
	ld	l,(iy+$11)                  ; 0443CA || 	ld	l,(iy+$11)                  ; 044358 || 0443CA FD 6E 11    11164  			LD		L, (IY + FIL.fptr + 0)
	ld	h,(iy+$12)                  ; 0443CD || 	ld	h,(iy+$12)                  ; 04435B || 0443CD FD 66 12    11165  			LD		H, (IY + FIL.fptr + 1)
	ld	e,(iy+$13)                  ; 0443D0 || 	ld	e,(iy+$13)                  ; 04435E || 0443D0 FD 5E 13    11166  			LD		E, (IY + FIL.fptr + 2)
	ld	d,(iy+$14)                  ; 0443D3 || 	ld	d,(iy+$14)                  ; 044361 || 0443D3 FD 56 14    11167  			LD		D, (IY + FIL.fptr + 3)
	pop	iy                         ; 0443D6 || 	pop	iy                         ; 044364 || 0443D6 FD E1       11168  			POP		IY
	ret                            ; 0443D8 || 	ret                            ; 044366 || 0443D8 C9          11169  			RET
	push	iy                        ; 0443D9 || 	push	iy                        ; 044367 || 0443D9 FD E5       11176  PUTPTR:			PUSH		IY
	ld	c,a                         ; 0443DB || 	ld	c,a                         ; 044369 || 0443DB 4F          11177  			LD		C, A  		; C: Filehandle
	push	hl                        ; 0443DC || 	push	hl                        ; 04436A || 0443DC E5          11178  			PUSH		HL
	ld	hl,$000002                  ; 0443DD || 	ld	hl,$000002                  ; 04436B || 0443DD 21 02 00 00 11179  			LD		HL, 2
	add	hl,sp                      ; 0443E1 || 	add	hl,sp                      ; 04436F || 0443E1 39          11180  			ADD		HL, SP
	ld	(hl),e                      ; 0443E2 || 	ld	(hl),e                      ; 044370 || 0443E2 73          11181  			LD		(HL), E 	; 3rd byte of DWORD set to E
	pop	hl                         ; 0443E3 || 	pop	hl                         ; 044371 || 0443E3 E1          11182  			POP		HL
	ld	e,d                         ; 0443E4 || 	ld	e,d                         ; 044372 || 0443E4 5A          11183  			LD		E, D  		; 4th byte passed as E
	ld	a,$1c                       ; 0443E5 || 	ld	a,$1c                       ; 044373 || 0443E5 3E 1C       0001M 			LD	A, function
	rst.lis	$08                    ; 0443E7 || 	rst.lis	$08                    ; 044375 || 0443E7 49 CF       0002M 			RST.LIS	08h
	pop	iy                         ; 0443E9 || 	pop	iy                         ; 044377 || 0443E9 FD E1       11185  			POP		IY
	ret                            ; 0443EB || 	ret                            ; 044379 || 0443EB C9          11186  			RET
	push	iy                        ; 0443EC || 	push	iy                        ; 04437A || 0443EC FD E5       11194  GETEXT:         PUSH    IY
	ld	c,e                         ; 0443EE || 	ld	c,e                         ; 04437C || 0443EE 4B          11195                  LD      C, E
	ld	a,$19                       ; 0443EF || 	ld	a,$19                       ; 04437D || 0443EF 3E 19       0001M 			LD	A, function
	rst.lis	$08                    ; 0443F1 || 	rst.lis	$08                    ; 04437F || 0443F1 49 CF       0002M 			RST.LIS	08h
	push	hl                        ; 0443F3 || 	push	hl                        ; 044381 || 0443F3 E5          11197                  PUSH    HL
	pop	iy                         ; 0443F4 || 	pop	iy                         ; 044382 || 0443F4 FD E1       11198                  POP     IY          ; IYU: Pointer to FIL structure
	ld	l,(iy+$0b)                  ; 0443F6 || 	ld	l,(iy+$0b)                  ; 044384 || 0443F6 FD 6E 0B    11200                  LD      L, (IY + FIL.obj + FFOBJID.objsize + 0)
	ld	h,(iy+$0c)                  ; 0443F9 || 	ld	h,(iy+$0c)                  ; 044387 || 0443F9 FD 66 0C    11201                  LD      H, (IY + FIL.obj + FFOBJID.objsize + 1)
	ld	e,(iy+$0d)                  ; 0443FC || 	ld	e,(iy+$0d)                  ; 04438A || 0443FC FD 5E 0D    11202                  LD      E, (IY + FIL.obj + FFOBJID.objsize + 2)
	ld	d,(iy+$0e)                  ; 0443FF || 	ld	d,(iy+$0e)                  ; 04438D || 0443FF FD 56 0E    11203                  LD      D, (IY + FIL.obj + FFOBJID.objsize + 3)
	pop	iy                         ; 044402 || 	pop	iy                         ; 044390 || 044402 FD E1       11205                  POP     IY
	ret                            ; 044404 || 	ret                            ; 044392 || 044404 C9          11206  			RET
	push	iy                        ; 044405 || 	push	iy                        ; 044393 || 044405 FD E5       11210  GETIMS:			PUSH	IY
	ld	hl,$044a00                  ; 044407 || 	ld	hl,$044a00                  ; 044395 || 044407 21 00 4A 04 11211  			LD	HL, ACCS 		; Where to store the time string
	ld	a,$12                       ; 04440B || 	ld	a,$12                       ; 044399 || 04440B 3E 12       0001M 			LD	A, function
	rst.lis	$08                    ; 04440D || 	rst.lis	$08                    ; 04439B || 04440D 49 CF       0002M 			RST.LIS	08h
	ld	de,$044a00                  ; 04440F || 	ld	de,$044a00                  ; 04439D || 04440F 11 00 4A 04 11213  			LD	DE, ACCS		; DE: pointer to start of string accumulator
	ld	e,a                         ; 044413 || 	ld	e,a                         ; 0443A1 || 044413 5F          11214  			LD	E, A 			;  E: now points to the end of the string
	pop	iy                         ; 044414 || 	pop	iy                         ; 0443A2 || 044414 FD E1       11215  			POP	IY
	ret                            ; 044416 || 	ret                            ; 0443A4 || 044416 C9          11216  			RET
	call	$04031a                   ; 044417 || 	call	$04030a                   ; 0443A5 || 044417 CD 1A 03 04 11224  EXPR_W2:		CALL	EXPRI			; Get first parameter
	exx                            ; 04441B || 	exx                            ; 0443A9 || 04441B D9          11225  			EXX
	push	hl                        ; 04441C || 	push	hl                        ; 0443AA || 04441C E5          11226  			PUSH	HL
	call	$040a35                   ; 04441D || 	call	$040a22                   ; 0443AB || 04441D CD 35 0A 04 11227  			CALL	COMMA
	call	$04031a                   ; 044421                                         || 044421 CD 1A 03 04 11228  			CALL	EXPRI			; Get second parameter
	exx                            ; 044425                                         || 044425 D9          11229  			EXX
	pop	de                         ; 044426                                         || 044426 D1          11230  			POP	DE
	ret                            ; 044427                                         || 044427 C9          11231  			RET
	ret                            ; 044428                                         || 044428 C9          11235  RESET:			RET
	ld	a,$10                       ; 044429 || 	ld	a,$10                       ; 0443C2 || 044429 3E 10       0001M 		LD	A, val
	call	$043f61                   ; 04442B || 	call	$043f00                   ; 0443C4 || 04442B CD 61 3F 04 0002M 		CALL	OSWRCH
	jp	$040ba9                     ; 04442F || 	jp	$040b96                     ; 0443C8 || 04442F C3 A9 0B 04 11285  			JP	XEQ
	ld	a,$0c                       ; 044433 || 	ld	a,$0c                       ; 0443CC || 044433 3E 0C       11289  CLRSCN:			LD	A, 0Ch
	jp	$043f61                     ; 044435 || 	jp	$043f00                     ; 0443CE || 044435 C3 61 3F 04 11290  			JP	OSWRCH
	push	ix                        ; 044439 || 	push	ix                        ; 0443D2 || 044439 DD E5       11294  MODE:			PUSH	IX			; Get the system vars in IX
	ld	a,$08                       ; 04443B || 	ld	a,$08                       ; 0443D4 || 04443B 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 04443D || 	rst.lis	$08                    ; 0443D6 || 04443D 49 CF       0002M 			RST.LIS	08h
	res	4,(ix+$04)                 ; 04443F || 	res	4,(ix+$04)                 ; 0443D8 || 04443F DD CB 04 A6 11296  			RES	4, (IX+sysvar_vpd_pflags)
	call	$04031a                   ; 044443 || 	call	$04030a                   ; 0443DC || 044443 CD 1A 03 04 11297  			CALL    EXPRI
	exx                            ; 044447 || 	exx                            ; 0443E0 || 044447 D9          11298  			EXX
	ld	a,$16                       ; 044448 || 	ld	a,$16                       ; 0443E1 || 044448 3E 16       0001M 		LD	A, val
	call	$043f61                   ; 04444A || 	call	$043f00                   ; 0443E3 || 04444A CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,l                         ; 04444E || 	ld	a,l                         ; 0443E7 || 04444E 7D          0001M 		LD	A, val
	call	$043f61                   ; 04444F || 	call	$043f00                   ; 0443E8 || 04444F CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$08                       ; 044453 || 	ld	a,$08                       ; 0443EC || 044453 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 044455 || 	rst.lis	$08                    ; 0443EE || 044455 49 CF       0002M 			RST.LIS	08h
	bit	4,(ix+$04)                 ; 044457 || 	bit	4,(ix+$04)                 ; 0443F0 || 044457 DD CB 04 66 11302  @@:			BIT	4, (IX+sysvar_vpd_pflags)
	jr	z,$-$04                     ; 04445B || 	jr	z,$-$04                     ; 0443F4 || 04445B 28 FA       11303  			JR	Z, @B			; Wait for the result
	pop	ix                         ; 04445D || 	pop	ix                         ; 0443F6 || 04445D DD E1       11304  			POP	IX
	jp	$040ba9                     ; 04445F || 	jp	$040b96                     ; 0443F8 || 04445F C3 A9 0B 04 11305  			JP	XEQ
	inc	iy                         ; 044463 || 	inc	iy                         ; 0443FC || 044463 FD 23       11309  GETSCHR:		INC	IY
	call	$04031a                   ; 044465 || 	call	$04030a                   ; 0443FE || 044465 CD 1A 03 04 11310  			CALL    EXPRI      		; Get X coordinate
	exx                            ; 044469 || 	exx                            ; 044402 || 044469 D9          11311  			EXX
	ld	($044a00),hl                ; 04446A || 	ld	($044a00),hl                ; 044403 || 04446A 22 00 4A 04 11312  			LD	(VDU_BUFFER+0), HL
	call	$040a35                   ; 04446E || 	call	$040a22                   ; 044407 || 04446E CD 35 0A 04 11313  			CALL	COMMA
	call	$04031a                   ; 044472 || 	call	$04030a                   ; 04440B || 044472 CD 1A 03 04 11314  			CALL	EXPRI			; Get Y coordinate
	exx                            ; 044476 || 	exx                            ; 04440F || 044476 D9          11315  			EXX
	ld	($044a02),hl                ; 044477 || 	ld	($044a02),hl                ; 044410 || 044477 22 02 4A 04 11316  			LD	(VDU_BUFFER+2), HL
	call	$040a42                   ; 04447B || 	call	$040a2f                   ; 044414 || 04447B CD 42 0A 04 11317  			CALL	BRAKET			; Closing bracket
	push	ix                        ; 04447F || 	push	ix                        ; 044418 || 04447F DD E5       11319  			PUSH	IX			; Get the system vars in IX
	ld	a,$08                       ; 044481 || 	ld	a,$08                       ; 04441A || 044481 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 044483 || 	rst.lis	$08                    ; 04441C || 044483 49 CF       0002M 			RST.LIS	08h
	res	1,(ix+$04)                 ; 044485 || 	res	1,(ix+$04)                 ; 04441E || 044485 DD CB 04 8E 11321  			RES	1, (IX+sysvar_vpd_pflags)
	ld	a,$17                       ; 044489 || 	ld	a,$17                       ; 044422 || 044489 3E 17       0001M 		LD	A, val
	call	$043f61                   ; 04448B || 	call	$043f00                   ; 044424 || 04448B CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 04448F || 	ld	a,$00                       ; 044428 || 04448F 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 044491 || 	call	$043f00                   ; 04442A || 044491 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$83                       ; 044495 || 	ld	a,$83                       ; 04442E || 044495 3E 83       0001M 		LD	A, val
	call	$043f61                   ; 044497 || 	call	$043f00                   ; 044430 || 044497 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a00)                 ; 04449B || 	ld	a,($044a00)                 ; 044434 || 04449B 3A 00 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 04449F || 	call	$043f00                   ; 044438 || 04449F CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a01)                 ; 0444A3 || 	ld	a,($044a01)                 ; 04443C || 0444A3 3A 01 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 0444A7 || 	call	$043f00                   ; 044440 || 0444A7 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a02)                 ; 0444AB || 	ld	a,($044a02)                 ; 044444 || 0444AB 3A 02 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 0444AF || 	call	$043f00                   ; 044448 || 0444AF CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a03)                 ; 0444B3 || 	ld	a,($044a03)                 ; 04444C || 0444B3 3A 03 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 0444B7 || 	call	$043f00                   ; 044450 || 0444B7 CD 61 3F 04 0002M 		CALL	OSWRCH
	bit	1,(ix+$04)                 ; 0444BB || 	bit	1,(ix+$04)                 ; 044454 || 0444BB DD CB 04 4E 11329  @@:			BIT	1, (IX+sysvar_vpd_pflags)
	jr	z,$-$04                     ; 0444BF || 	jr	z,$-$04                     ; 044458 || 0444BF 28 FA       11330  			JR	Z, @B			; Wait for the result
	ld	a,(ix+$09)                  ; 0444C1 || 	ld	a,(ix+$09)                  ; 04445A || 0444C1 DD 7E 09    11331  			LD	A, (IX+sysvar_scrchar)	; Fetch the result in A
	or	a                           ; 0444C4 || 	or	a                           ; 04445D || 0444C4 B7          11332  			OR	A			; Check for 00h
	scf                            ; 0444C5 || 	scf                            ; 04445E || 0444C5 37          11333  			SCF				; C = character map
	jr	nz,$+$04                    ; 0444C6 || 	jr	nz,$+$04                    ; 04445F || 0444C6 20 02       11334  			JR	NZ, @F			; We have a character, so skip next bit
	xor	a                          ; 0444C8 || 	xor	a                          ; 044461 || 0444C8 AF          11335  			XOR	A			; Clear carry
	dec	a                          ; 0444C9 || 	dec	a                          ; 044462 || 0444C9 3D          11336  			DEC	A			; Set A to FFh
	pop	ix                         ; 0444CA || 	pop	ix                         ; 044463 || 0444CA DD E1       11337  @@:			POP	IX
	jp	$0407f1                     ; 0444CC || 	jp	$0407e1                     ; 044465 || 0444CC C3 F1 07 04 11338  			JP	INKEY1			; Jump back to the GET command
	call	$04031a                   ; 0444D0 || 	call	$04030a                   ; 044469 || 0444D0 CD 1A 03 04 11342  POINT:			CALL    EXPRI      		; Get X coordinate
	exx                            ; 0444D4 || 	exx                            ; 04446D || 0444D4 D9          11343  			EXX
	ld	($044a00),hl                ; 0444D5 || 	ld	($044a00),hl                ; 04446E || 0444D5 22 00 4A 04 11344  			LD	(VDU_BUFFER+0), HL
	call	$040a35                   ; 0444D9 || 	call	$040a22                   ; 044472 || 0444D9 CD 35 0A 04 11345  			CALL	COMMA
	call	$04031a                   ; 0444DD || 	call	$04030a                   ; 044476 || 0444DD CD 1A 03 04 11346  			CALL	EXPRI			; Get Y coordinate
	exx                            ; 0444E1 || 	exx                            ; 04447A || 0444E1 D9          11347  			EXX
	ld	($044a02),hl                ; 0444E2 || 	ld	($044a02),hl                ; 04447B || 0444E2 22 02 4A 04 11348  			LD	(VDU_BUFFER+2), HL
	call	$040a42                   ; 0444E6 || 	call	$040a2f                   ; 04447F || 0444E6 CD 42 0A 04 11349  			CALL	BRAKET			; Closing bracket
	push	ix                        ; 0444EA || 	push	ix                        ; 044483 || 0444EA DD E5       11351  			PUSH	IX			; Get the system vars in IX
	ld	a,$08                       ; 0444EC || 	ld	a,$08                       ; 044485 || 0444EC 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 0444EE || 	rst.lis	$08                    ; 044487 || 0444EE 49 CF       0002M 			RST.LIS	08h
	res	2,(ix+$04)                 ; 0444F0 || 	res	2,(ix+$04)                 ; 044489 || 0444F0 DD CB 04 96 11353  			RES	2, (IX+sysvar_vpd_pflags)
	ld	a,$17                       ; 0444F4 || 	ld	a,$17                       ; 04448D || 0444F4 3E 17       0001M 		LD	A, val
	call	$043f61                   ; 0444F6 || 	call	$043f00                   ; 04448F || 0444F6 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 0444FA || 	ld	a,$00                       ; 044493 || 0444FA 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 0444FC || 	call	$043f00                   ; 044495 || 0444FC CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$84                       ; 044500 || 	ld	a,$84                       ; 044499 || 044500 3E 84       0001M 		LD	A, val
	call	$043f61                   ; 044502 || 	call	$043f00                   ; 04449B || 044502 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a00)                 ; 044506 || 	ld	a,($044a00)                 ; 04449F || 044506 3A 00 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 04450A || 	call	$043f00                   ; 0444A3 || 04450A CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a01)                 ; 04450E || 	ld	a,($044a01)                 ; 0444A7 || 04450E 3A 01 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 044512 || 	call	$043f00                   ; 0444AB || 044512 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a02)                 ; 044516 || 	ld	a,($044a02)                 ; 0444AF || 044516 3A 02 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 04451A || 	call	$043f00                   ; 0444B3 || 04451A CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a03)                 ; 04451E || 	ld	a,($044a03)                 ; 0444B7 || 04451E 3A 03 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 044522 || 	call	$043f00                   ; 0444BB || 044522 CD 61 3F 04 0002M 		CALL	OSWRCH
	bit	2,(ix+$04)                 ; 044526 || 	bit	2,(ix+$04)                 ; 0444BF || 044526 DD CB 04 56 11361  @@:			BIT	2, (IX+sysvar_vpd_pflags)
	jr	z,$-$04                     ; 04452A || 	jr	z,$-$04                     ; 0444C3 || 04452A 28 FA       11362  			JR	Z, @B			; Wait for the result
	ld	l,(ix+$16)                  ; 04452C || 	ld	l,(ix+$16)                  ; 0444C5 || 04452C DD 6E 16    11366  			LD	L, (IX+sysvar_scrpixelIndex)
	pop	ix                         ; 04452F || 	pop	ix                         ; 0444C8 || 04452F DD E1       11367  			POP	IX
	jp	$04058f                     ; 044531 || 	jp	$04057f                     ; 0444CA || 044531 C3 8F 05 04 11368  			JP	COUNT0
	call	$04031a                   ; 044535 || 	call	$04030a                   ; 0444CE || 044535 CD 1A 03 04 11375  COLOUR:			CALL	EXPRI			; The colour / mode
	exx                            ; 044539 || 	exx                            ; 0444D2 || 044539 D9          11376  			EXX
	ld	a,l                         ; 04453A || 	ld	a,l                         ; 0444D3 || 04453A 7D          11377  			LD	A, L
	ld	($044a00),a                 ; 04453B || 	ld	($044a00),a                 ; 0444D4 || 04453B 32 00 4A 04 11378  			LD	(VDU_BUFFER+0), A	; Store first parameter
	call	$040a83                   ; 04453F || 	call	$040a70                   ; 0444D8 || 04453F CD 83 0A 04 11379  			CALL	NXT			; Are there any more parameters?
	cp	$2c                         ; 044543 || 	cp	$2c                         ; 0444DC || 044543 FE 2C       11380  			CP	','
	jr	z,$+$14                     ; 044545 || 	jr	z,$+$14                     ; 0444DE || 044545 28 12       11381  			JR	Z, COLOUR_1		; Yes, so we're doing a palette change next
	ld	a,$11                       ; 044547 || 	ld	a,$11                       ; 0444E0 || 044547 3E 11       0001M 		LD	A, val
	call	$043f61                   ; 044549 || 	call	$043f00                   ; 0444E2 || 044549 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a00)                 ; 04454D || 	ld	a,($044a00)                 ; 0444E6 || 04454D 3A 00 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 044551 || 	call	$043f00                   ; 0444EA || 044551 CD 61 3F 04 0002M 		CALL	OSWRCH
	jp	$040ba9                     ; 044555 || 	jp	$040b96                     ; 0444EE || 044555 C3 A9 0B 04 11385  			JP	XEQ
	call	$040a35                   ; 044559 || 	call	$040a22                   ; 0444F2 || 044559 CD 35 0A 04 11387  COLOUR_1:		CALL	COMMA
	call	$04031a                   ; 04455D || 	call	$04030a                   ; 0444F6 || 04455D CD 1A 03 04 11388  			CALL	EXPRI			; Parse R (OR P)
	exx                            ; 044561 || 	exx                            ; 0444FA || 044561 D9          11389  			EXX
	ld	a,l                         ; 044562 || 	ld	a,l                         ; 0444FB || 044562 7D          11390  			LD	A, L
	ld	($044a01),a                 ; 044563 || 	ld	($044a01),a                 ; 0444FC || 044563 32 01 4A 04 11391  			LD	(VDU_BUFFER+1), A
	call	$040a83                   ; 044567 || 	call	$040a70                   ; 044500 || 044567 CD 83 0A 04 11392  			CALL	NXT			; Are there any more parameters?
	cp	$2c                         ; 04456B || 	cp	$2c                         ; 044504 || 04456B FE 2C       11393  			CP	','
	jr	z,$+$2e                     ; 04456D || 	jr	z,$+$2e                     ; 044506 || 04456D 28 2C       11394  			JR	Z, COLOUR_2		; Yes, so we're doing COLOUR L,R,G,B
	ld	a,$13                       ; 04456F || 	ld	a,$13                       ; 044508 || 04456F 3E 13       0001M 		LD	A, val
	call	$043f61                   ; 044571 || 	call	$043f00                   ; 04450A || 044571 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a00)                 ; 044575 || 	ld	a,($044a00)                 ; 04450E || 044575 3A 00 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 044579 || 	call	$043f00                   ; 044512 || 044579 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a01)                 ; 04457D || 	ld	a,($044a01)                 ; 044516 || 04457D 3A 01 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 044581 || 	call	$043f00                   ; 04451A || 044581 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 044585 || 	ld	a,$00                       ; 04451E || 044585 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 044587 || 	call	$043f00                   ; 044520 || 044587 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 04458B || 	ld	a,$00                       ; 044524 || 04458B 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 04458D || 	call	$043f00                   ; 044526 || 04458D CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 044591 || 	ld	a,$00                       ; 04452A || 044591 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 044593 || 	call	$043f00                   ; 04452C || 044593 CD 61 3F 04 0002M 		CALL	OSWRCH
	jp	$040ba9                     ; 044597 || 	jp	$040b96                     ; 044530 || 044597 C3 A9 0B 04 11402  			JP	XEQ
	call	$040a35                   ; 04459B || 	call	$040a22                   ; 044534 || 04459B CD 35 0A 04 11404  COLOUR_2:		CALL	COMMA
	call	$04031a                   ; 04459F || 	call	$04030a                   ; 044538 || 04459F CD 1A 03 04 11405  			CALL	EXPRI			; Parse G
	exx                            ; 0445A3 || 	exx                            ; 04453C || 0445A3 D9          11406  			EXX
	ld	a,l                         ; 0445A4 || 	ld	a,l                         ; 04453D || 0445A4 7D          11407  			LD	A, L
	ld	($044a02),a                 ; 0445A5 || 	ld	($044a02),a                 ; 04453E || 0445A5 32 02 4A 04 11408  			LD	(VDU_BUFFER+2), A
	call	$040a35                   ; 0445A9 || 	call	$040a22                   ; 044542 || 0445A9 CD 35 0A 04 11409  			CALL	COMMA
	call	$04031a                   ; 0445AD || 	call	$04030a                   ; 044546 || 0445AD CD 1A 03 04 11410  			CALL	EXPRI			; Parse B
	exx                            ; 0445B1 || 	exx                            ; 04454A || 0445B1 D9          11411  			EXX
	ld	a,l                         ; 0445B2 || 	ld	a,l                         ; 04454B || 0445B2 7D          11412  			LD	A, L
	ld	($044a03),a                 ; 0445B3 || 	ld	($044a03),a                 ; 04454C || 0445B3 32 03 4A 04 11413  			LD	(VDU_BUFFER+3), A
	ld	a,$13                       ; 0445B7 || 	ld	a,$13                       ; 044550 || 0445B7 3E 13       0001M 		LD	A, val
	call	$043f61                   ; 0445B9 || 	call	$043f00                   ; 044552 || 0445B9 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a00)                 ; 0445BD || 	ld	a,($044a00)                 ; 044556 || 0445BD 3A 00 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 0445C1 || 	call	$043f00                   ; 04455A || 0445C1 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$ff                       ; 0445C5 || 	ld	a,$ff                       ; 04455E || 0445C5 3E FF       0001M 		LD	A, val
	call	$043f61                   ; 0445C7 || 	call	$043f00                   ; 044560 || 0445C7 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a01)                 ; 0445CB || 	ld	a,($044a01)                 ; 044564 || 0445CB 3A 01 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 0445CF || 	call	$043f00                   ; 044568 || 0445CF CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a02)                 ; 0445D3 || 	ld	a,($044a02)                 ; 04456C || 0445D3 3A 02 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 0445D7 || 	call	$043f00                   ; 044570 || 0445D7 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a03)                 ; 0445DB || 	ld	a,($044a03)                 ; 044574 || 0445DB 3A 03 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 0445DF || 	call	$043f00                   ; 044578 || 0445DF CD 61 3F 04 0002M 		CALL	OSWRCH
	jp	$040ba9                     ; 0445E3 || 	jp	$040b96                     ; 04457C || 0445E3 C3 A9 0B 04 11420  			JP	XEQ
	call	$04031a                   ; 0445E7 || 	call	$04030a                   ; 044580 || 0445E7 CD 1A 03 04 11424  GCOL:			CALL	EXPRI			; Parse MODE
	exx                            ; 0445EB || 	exx                            ; 044584 || 0445EB D9          11425  			EXX
	ld	a,l                         ; 0445EC || 	ld	a,l                         ; 044585 || 0445EC 7D          11426  			LD	A, L
	ld	($044a00),a                 ; 0445ED || 	ld	($044a00),a                 ; 044586 || 0445ED 32 00 4A 04 11427  			LD	(VDU_BUFFER+0), A
	call	$040a35                   ; 0445F1 || 	call	$040a22                   ; 04458A || 0445F1 CD 35 0A 04 11428  			CALL	COMMA
	call	$04031a                   ; 0445F5 || 	call	$04030a                   ; 04458E || 0445F5 CD 1A 03 04 11430  			CALL	EXPRI			; Parse Colour
	exx                            ; 0445F9 || 	exx                            ; 044592 || 0445F9 D9          11431  			EXX
	ld	a,l                         ; 0445FA || 	ld	a,l                         ; 044593 || 0445FA 7D          11432  			LD	A, L
	ld	($044a01),a                 ; 0445FB || 	ld	($044a01),a                 ; 044594 || 0445FB 32 01 4A 04 11433  			LD	(VDU_BUFFER+1), A
	ld	a,$12                       ; 0445FF || 	ld	a,$12                       ; 044598 || 0445FF 3E 12       0001M 		LD	A, val
	call	$043f61                   ; 044601 || 	call	$043f00                   ; 04459A || 044601 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a00)                 ; 044605 || 	ld	a,($044a00)                 ; 04459E || 044605 3A 00 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 044609 || 	call	$043f00                   ; 0445A2 || 044609 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a01)                 ; 04460D || 	ld	a,($044a01)                 ; 0445A6 || 04460D 3A 01 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 044611 || 	call	$043f00                   ; 0445AA || 044611 CD 61 3F 04 0002M 		CALL	OSWRCH
	jp	$040ba9                     ; 044615 || 	jp	$040b96                     ; 0445AE || 044615 C3 A9 0B 04 11438  			JP	XEQ
	call	$04031a                   ; 044619 || 	call	$04030a                   ; 0445B2 || 044619 CD 1A 03 04 11442  PLOT:			CALL	EXPRI		; Parse mode
	exx                            ; 04461D || 	exx                            ; 0445B6 || 04461D D9          11443  			EXX
	push	hl                        ; 04461E || 	push	hl                        ; 0445B7 || 04461E E5          11444  			PUSH	HL		; Push mode (L) onto stack
	call	$040a35                   ; 04461F || 	call	$040a22                   ; 0445B8 || 04461F CD 35 0A 04 11445  			CALL	COMMA
	call	$044417                   ; 044623 || 	call	$0443a5                   ; 0445BC || 044623 CD 17 44 04 11446  			CALL	EXPR_W2		; Parse X and Y
	pop	bc                         ; 044627 || 	pop	bc                         ; 0445C0 || 044627 C1          11447  			POP	BC		; Pop mode (C) off stack
	ld	a,$19                       ; 044628 || 	ld	a,$19                       ; 0445C1 || 044628 3E 19       0001M 		LD	A, val
	call	$043f61                   ; 04462A || 	call	$043f00                   ; 0445C3 || 04462A CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,c                         ; 04462E || 	ld	a,c                         ; 0445C7 || 04462E 79          0001M 		LD	A, val
	call	$043f61                   ; 04462F || 	call	$043f00                   ; 0445C8 || 04462F CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,e                         ; 044633 || 	ld	a,e                         ; 0445CC || 044633 7B          0001M 		LD	A, val
	call	$043f61                   ; 044634 || 	call	$043f00                   ; 0445CD || 044634 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,d                         ; 044638 || 	ld	a,d                         ; 0445D1 || 044638 7A          0001M 		LD	A, val
	call	$043f61                   ; 044639 || 	call	$043f00                   ; 0445D2 || 044639 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,l                         ; 04463D || 	ld	a,l                         ; 0445D6 || 04463D 7D          0001M 		LD	A, val
	call	$043f61                   ; 04463E || 	call	$043f00                   ; 0445D7 || 04463E CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,h                         ; 044642 || 	ld	a,h                         ; 0445DB || 044642 7C          0001M 		LD	A, val
	call	$043f61                   ; 044643 || 	call	$043f00                   ; 0445DC || 044643 CD 61 3F 04 0002M 		CALL	OSWRCH
	jp	$040ba9                     ; 044647 || 	jp	$040b96                     ; 0445E0 || 044647 C3 A9 0B 04 11454  			JP	XEQ
	call	$044417                   ; 04464B || 	call	$0443a5                   ; 0445E4 || 04464B CD 17 44 04 11458  MOVE:			CALL	EXPR_W2		; Parse X and Y
	ld	c,$04                       ; 04464F || 	ld	c,$04                       ; 0445E8 || 04464F 0E 04       11459  			LD	C, 04H		; Plot mode 04H (Move)
	jr	$-$29                       ; 044651 || 	jr	$-$29                       ; 0445EA || 044651 18 D5       11460  			JR	PLOT_1		; Plot
	call	$044417                   ; 044653 || 	call	$0443a5                   ; 0445EC || 044653 CD 17 44 04 11465  DRAW:			CALL	EXPR_W2		; Get X1 and Y1
	call	$040a83                   ; 044657 || 	call	$040a70                   ; 0445F0 || 044657 CD 83 0A 04 11466  			CALL	NXT		; Are there any more parameters?
	cp	$2c                         ; 04465B || 	cp	$2c                         ; 0445F4 || 04465B FE 2C       11467  			CP	','
	ld	c,$05                       ; 04465D || 	ld	c,$05                       ; 0445F6 || 04465D 0E 05       11468  			LD	C, 05h		; Code for LINE
	jr	nz,$-$37                    ; 04465F || 	jr	nz,$-$37                    ; 0445F8 || 04465F 20 C7       11469  			JR	NZ, PLOT_1	; No, so just do DRAW x1,y1
	ld	a,$19                       ; 044661 || 	ld	a,$19                       ; 0445FA || 044661 3E 19       0001M 		LD	A, val
	call	$043f61                   ; 044663 || 	call	$043f00                   ; 0445FC || 044663 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$04                       ; 044667 || 	ld	a,$04                       ; 044600 || 044667 3E 04       0001M 		LD	A, val
	call	$043f61                   ; 044669 || 	call	$043f00                   ; 044602 || 044669 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,e                         ; 04466D || 	ld	a,e                         ; 044606 || 04466D 7B          0001M 		LD	A, val
	call	$043f61                   ; 04466E || 	call	$043f00                   ; 044607 || 04466E CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,d                         ; 044672 || 	ld	a,d                         ; 04460B || 044672 7A          0001M 		LD	A, val
	call	$043f61                   ; 044673 || 	call	$043f00                   ; 04460C || 044673 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,l                         ; 044677 || 	ld	a,l                         ; 044610 || 044677 7D          0001M 		LD	A, val
	call	$043f61                   ; 044678 || 	call	$043f00                   ; 044611 || 044678 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,h                         ; 04467C || 	ld	a,h                         ; 044615 || 04467C 7C          0001M 		LD	A, val
	call	$043f61                   ; 04467D || 	call	$043f00                   ; 044616 || 04467D CD 61 3F 04 0002M 		CALL	OSWRCH
	call	$040a35                   ; 044681 || 	call	$040a22                   ; 04461A || 044681 CD 35 0A 04 11476  			CALL	COMMA
	push	bc                        ; 044685 || 	push	bc                        ; 04461E || 044685 C5          11477  			PUSH	BC
	call	$044417                   ; 044686 || 	call	$0443a5                   ; 04461F || 044686 CD 17 44 04 11478  			CALL	EXPR_W2		; Get X2 and Y2
	pop	bc                         ; 04468A || 	pop	bc                         ; 044623 || 04468A C1          11479  			POP	BC
	jr	$-$63                       ; 04468B || 	jr	$-$63                       ; 044624 || 04468B 18 9B       11480  			JR	PLOT_1		; Now DRAW the line to those positions
	call	$044417                   ; 04468D || 	call	$0443a5                   ; 044626 || 04468D CD 17 44 04 11518  SOUND:			CALL	EXPR_W2			; DE: Channel/Control, HL: Volume
	ld	a,l                         ; 044691 || 	ld	a,l                         ; 04462A || 044691 7D          11519  			LD	A, L 			;  A: Volume
	push	af                        ; 044692 || 	push	af                        ; 04462B || 044692 F5          11520  			PUSH	AF
	push	de                        ; 044693 || 	push	de                        ; 04462C || 044693 D5          11521  			PUSH	DE
	call	$040a35                   ; 044694 || 	call	$040a22                   ; 04462D || 044694 CD 35 0A 04 11522  			CALL	COMMA
	call	$044417                   ; 044698 || 	call	$0443a5                   ; 044631 || 044698 CD 17 44 04 11523  			CALL	EXPR_W2			; DE: Pitch, HL: Duration
	ld	d,e                         ; 04469C || 	ld	d,e                         ; 044635 || 04469C 53          11524  			LD	D, E			;  D: Pitch
	ld	e,l                         ; 04469D || 	ld	e,l                         ; 044636 || 04469D 5D          11525  			LD	E, L 			;  E: Duration
	pop	hl                         ; 04469E || 	pop	hl                         ; 044637 || 04469E E1          11526  			POP	HL 			; HL: Channel/Control
	pop	af                         ; 04469F || 	pop	af                         ; 044638 || 04469F F1          11527  			POP	AF
	neg                            ; 0446A0 || 	neg                            ; 044639 || 0446A0 ED 44       11528  			NEG
	cp	$10                         ; 0446A2 || 	cp	$10                         ; 04463B || 0446A2 FE 10       11529  			CP	16			; Check volume is in bounds
	jp	nc,$040ba9                  ; 0446A4 || 	jp	nc,$040b96                  ; 04463D || 0446A4 D2 A9 0B 04 11530  			JP	NC, XEQ			; Out of bounds, do nothing
	ld	c,a                         ; 0446A8 || 	ld	c,a                         ; 044641 || 0446A8 4F          11534  			LD	C, A			; Store Volume in C
	ld	a,l                         ; 0446A9 || 	ld	a,l                         ; 044642 || 0446A9 7D          11535  			LD	A, L
	ld	($044a00),a                 ; 0446AA || 	ld	($044a00),a                 ; 044643 || 0446AA 32 00 4A 04 11536  			LD	(VDU_BUFFER+0), A	; Channel
	xor	a                          ; 0446AE || 	xor	a                          ; 044647 || 0446AE AF          11537  			XOR	A
	ld	($044a01),a                 ; 0446AF || 	ld	($044a01),a                 ; 044648 || 0446AF 32 01 4A 04 11538  			LD	(VDU_BUFFER+1), A	; Waveform
	ld	b,$06                       ; 0446B3 || 	ld	b,$06                       ; 04464C || 0446B3 06 06       11542  			LD	B, 6			; C already contains the volume
	mlt	bc                         ; 0446B5 || 	mlt	bc                         ; 04464E || 0446B5 ED 4C       11543  			MLT	BC			; Multiply by 6 (0-15 scales to 0-90)
	ld	a,c                         ; 0446B7 || 	ld	a,c                         ; 044650 || 0446B7 79          11544  			LD	A, C
	ld	($044a02),a                 ; 0446B8 || 	ld	($044a02),a                 ; 044651 || 0446B8 32 02 4A 04 11545  			LD	(VDU_BUFFER+2), A
	ld	c,e                         ; 0446BC || 	ld	c,e                         ; 044655 || 0446BC 4B          11549  			LD	C, E			; Store duration in C
	ld	h,$00                       ; 0446BD || 	ld	h,$00                       ; 044656 || 0446BD 26 00       11550  			LD	H, 0			; Lookup the frequency
	ld	l,d                         ; 0446BF || 	ld	l,d                         ; 044658 || 0446BF 6A          11551  			LD	L, D
	ld	de,$044747                  ; 0446C0 || 	ld	de,$0446e0                  ; 044659 || 0446C0 11 47 47 04 11552  			LD	DE, SOUND_FREQ_LOOKUP
	add	hl,hl                      ; 0446C4 || 	add	hl,hl                      ; 04465D || 0446C4 29          11553  			ADD	HL, HL
	add	hl,de                      ; 0446C5 || 	add	hl,de                      ; 04465E || 0446C5 19          11554  			ADD	HL, DE
	ld	a,(hl)                      ; 0446C6 || 	ld	a,(hl)                      ; 04465F || 0446C6 7E          11555  			LD	A, (HL)
	ld	($044a03),a                 ; 0446C7 || 	ld	($044a03),a                 ; 044660 || 0446C7 32 03 4A 04 11556  			LD	(VDU_BUFFER+3), A
	inc	hl                         ; 0446CB || 	inc	hl                         ; 044664 || 0446CB 23          11557  			INC	HL
	ld	a,(hl)                      ; 0446CC || 	ld	a,(hl)                      ; 044665 || 0446CC 7E          11558  			LD	A, (HL)
	ld	($044a04),a                 ; 0446CD || 	ld	($044a04),a                 ; 044666 || 0446CD 32 04 4A 04 11559  			LD	(VDU_BUFFER+4), A
	ld	b,$32                       ; 0446D1 || 	ld	b,$32                       ; 04466A || 0446D1 06 32       11563  			LD	B, 50			; C contains the duration, so MLT by 50
	mlt	bc                         ; 0446D3 || 	mlt	bc                         ; 04466C || 0446D3 ED 4C       11564  			MLT	BC
	ld	($044a05),bc                ; 0446D5 || 	ld	($044a05),bc                ; 04466E || 0446D5 ED 43 05 4A 11565  			LD	(VDU_BUFFER+5), BC
	push	ix                        ; 0446DA || 	push	ix                        ; 044673 || 0446DA DD E5       11567  			PUSH	IX			; Get the system vars in IX
	ld	a,$08                       ; 0446DC || 	ld	a,$08                       ; 044675 || 0446DC 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 0446DE || 	rst.lis	$08                    ; 044677 || 0446DE 49 CF       0002M 			RST.LIS	08h
	res.lil	3,(ix+$04)             ; 0446E0 || 	res.lil	3,(ix+$04)             ; 044679 || 0446E0 5B DD CB 04 11569  SOUND0:			RES.LIL	3, (IX+sysvar_vpd_pflags)
	ld	a,$17                       ; 0446E5 || 	ld	a,$17                       ; 04467E || 0446E5 3E 17       0001M 		LD	A, val
	call	$043f61                   ; 0446E7 || 	call	$043f00                   ; 044680 || 0446E7 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$00                       ; 0446EB || 	ld	a,$00                       ; 044684 || 0446EB 3E 00       0001M 		LD	A, val
	call	$043f61                   ; 0446ED || 	call	$043f00                   ; 044686 || 0446ED CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,$85                       ; 0446F1 || 	ld	a,$85                       ; 04468A || 0446F1 3E 85       0001M 		LD	A, val
	call	$043f61                   ; 0446F3 || 	call	$043f00                   ; 04468C || 0446F3 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a00)                 ; 0446F7 || 	ld	a,($044a00)                 ; 044690 || 0446F7 3A 00 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 0446FB || 	call	$043f00                   ; 044694 || 0446FB CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a01)                 ; 0446FF || 	ld	a,($044a01)                 ; 044698 || 0446FF 3A 01 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 044703 || 	call	$043f00                   ; 04469C || 044703 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a02)                 ; 044707 || 	ld	a,($044a02)                 ; 0446A0 || 044707 3A 02 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 04470B || 	call	$043f00                   ; 0446A4 || 04470B CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a03)                 ; 04470F || 	ld	a,($044a03)                 ; 0446A8 || 04470F 3A 03 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 044713 || 	call	$043f00                   ; 0446AC || 044713 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a04)                 ; 044717 || 	ld	a,($044a04)                 ; 0446B0 || 044717 3A 04 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 04471B || 	call	$043f00                   ; 0446B4 || 04471B CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a05)                 ; 04471F || 	ld	a,($044a05)                 ; 0446B8 || 04471F 3A 05 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 044723 || 	call	$043f00                   ; 0446BC || 044723 CD 61 3F 04 0002M 		CALL	OSWRCH
	ld	a,($044a06)                 ; 044727 || 	ld	a,($044a06)                 ; 0446C0 || 044727 3A 06 4A 04 0001M 		LD	A, val
	call	$043f61                   ; 04472B || 	call	$043f00                   ; 0446C4 || 04472B CD 61 3F 04 0002M 		CALL	OSWRCH
	bit.lil	3,(ix+$04)             ; 04472F || 	bit.lil	3,(ix+$04)             ; 0446C8 || 04472F 5B DD CB 04 11584  @@:			BIT.LIL	3, (IX+sysvar_vpd_pflags)
	jr	z,$-$05                     ; 044734 || 	jr	z,$-$05                     ; 0446CD || 044734 28 F9       11585  			JR	Z, @B			; Wait for the result
	call	$043fd2                   ; 044736 || 	call	$043f71                   ; 0446CF || 044736 CD D2 3F 04 11586  			CALL	LTRAP			; Check for ESC
	ld.lil	a,(ix+$0e)              ; 04473A || 	ld.lil	a,(ix+$0e)              ; 0446D3 || 04473A 5B DD 7E 0E 11587  			LD.LIL	A, (IX+sysvar_audioSuccess)
	and	a                          ; 04473E || 	and	a                          ; 0446D7 || 04473E A7          11588  			AND	A			; Check if VDP has queued the note
	jr	z,$-$5f                     ; 04473F || 	jr	z,$-$5f                     ; 0446D8 || 04473F 28 9F       11589  			JR	Z, SOUND0		; No, so loop back and send again
	pop	ix                         ; 044741 || 	pop	ix                         ; 0446DA || 044741 DD E1       11591  			POP	IX
	jp	$040ba9                     ; 044743 || 	jp	$040b96                     ; 0446DC || 044743 C3 A9 0B 04 11592  			JP	XEQ
	ld	(hl),l                      ; 044747 || 	ld	(hl),l                      ; 0446E0 || 044747 75 00 76 00 11616  SOUND_FREQ_LOOKUP:	DW	 117,  118,  120,  122,  123,  131,  133,  135
	nop                            ; 044748 || 	nop                            ; 0446E1
	halt                           ; 044749 || 	halt                           ; 0446E2
	nop                            ; 04474A || 	nop                            ; 0446E3
	ld	a,b                         ; 04474B || 	ld	a,b                         ; 0446E4
	nop                            ; 04474C || 	nop                            ; 0446E5
	ld	a,d                         ; 04474D || 	ld	a,d                         ; 0446E6
	nop                            ; 04474E || 	nop                            ; 0446E7
	ld	a,e                         ; 04474F || 	ld	a,e                         ; 0446E8
	nop                            ; 044750 || 	nop                            ; 0446E9
	add	a,e                        ; 044751 || 	add	a,e                        ; 0446EA
	nop                            ; 044752 || 	nop                            ; 0446EB
	add	a,l                        ; 044753 || 	add	a,l                        ; 0446EC
	nop                            ; 044754 || 	nop                            ; 0446ED
	add	a,a                        ; 044755 || 	add	a,a                        ; 0446EE
	nop                            ; 044756 || 	nop                            ; 0446EF
	adc	a,c                        ; 044757 || 	adc	a,c                        ; 0446F0 || 044757 89 00 8B 00 11617  			DW	 137,  139,  141,  143,  145,  147,  149,  151
	nop                            ; 044758 || 	nop                            ; 0446F1
	adc	a,e                        ; 044759 || 	adc	a,e                        ; 0446F2
	nop                            ; 04475A || 	nop                            ; 0446F3
	adc	a,l                        ; 04475B || 	adc	a,l                        ; 0446F4
	nop                            ; 04475C || 	nop                            ; 0446F5
	adc	a,a                        ; 04475D || 	adc	a,a                        ; 0446F6
	nop                            ; 04475E || 	nop                            ; 0446F7
	sub	c                          ; 04475F || 	sub	c                          ; 0446F8
	nop                            ; 044760 || 	nop                            ; 0446F9
	sub	e                          ; 044761 || 	sub	e                          ; 0446FA
	nop                            ; 044762 || 	nop                            ; 0446FB
	sub	l                          ; 044763 || 	sub	l                          ; 0446FC
	nop                            ; 044764 || 	nop                            ; 0446FD
	sub	a                          ; 044765 || 	sub	a                          ; 0446FE
	nop                            ; 044766 || 	nop                            ; 0446FF
	sbc	a,c                        ; 044767 || 	sbc	a,c                        ; 044700 || 044767 99 00 9C 00 11618  			DW	 153,  156,  158,  160,  162,  165,  167,  170
	nop                            ; 044768 || 	nop                            ; 044701
	sbc	a,h                        ; 044769 || 	sbc	a,h                        ; 044702
	nop                            ; 04476A || 	nop                            ; 044703
	sbc	a,(hl)                     ; 04476B || 	sbc	a,(hl)                     ; 044704
	nop                            ; 04476C || 	nop                            ; 044705
	and	b                          ; 04476D || 	and	b                          ; 044706
	nop                            ; 04476E || 	nop                            ; 044707
	and	d                          ; 04476F || 	and	d                          ; 044708
	nop                            ; 044770 || 	nop                            ; 044709
	and	l                          ; 044771 || 	and	l                          ; 04470A
	nop                            ; 044772 || 	nop                            ; 04470B
	and	a                          ; 044773 || 	and	a                          ; 04470C
	nop                            ; 044774 || 	nop                            ; 04470D
	xor	d                          ; 044775 || 	xor	d                          ; 04470E
	nop                            ; 044776 || 	nop                            ; 04470F
	xor	h                          ; 044777 || 	xor	h                          ; 044710 || 044777 AC 00 AF 00 11619  			DW	 172,  175,  177,  180,  182,  185,  188,  190
	nop                            ; 044778 || 	nop                            ; 044711
	xor	a                          ; 044779 || 	xor	a                          ; 044712
	nop                            ; 04477A || 	nop                            ; 044713
	or	c                           ; 04477B || 	or	c                           ; 044714
	nop                            ; 04477C || 	nop                            ; 044715
	or	h                           ; 04477D || 	or	h                           ; 044716
	nop                            ; 04477E || 	nop                            ; 044717
	or	(hl)                        ; 04477F || 	or	(hl)                        ; 044718
	nop                            ; 044780 || 	nop                            ; 044719
	cp	c                           ; 044781 || 	cp	c                           ; 04471A
	nop                            ; 044782 || 	nop                            ; 04471B
	cp	h                           ; 044783 || 	cp	h                           ; 04471C
	nop                            ; 044784 || 	nop                            ; 04471D
	cp	(hl)                        ; 044785 || 	cp	(hl)                        ; 04471E
	nop                            ; 044786 || 	nop                            ; 04471F
	pop	bc                         ; 044787 || 	pop	bc                         ; 044720 || 044787 C1 00 C4 00 11620  			DW	 193,  196,  199,  202,  205,  208,  211,  214
	nop                            ; 044788 || 	nop                            ; 044721
	call	nz,$00c700                ; 044789 || 	call	nz,$00c700                ; 044722
	jp	z,$00cd00                   ; 04478D || 	jp	z,$00cd00                   ; 044726
	ret	nc                         ; 044791 || 	ret	nc                         ; 04472A
	nop                            ; 044792 || 	nop                            ; 04472B
	out	($00),a                    ; 044793 || 	out	($00),a                    ; 04472C
	sub	$00                        ; 044795 || 	sub	$00                        ; 04472E
	exx                            ; 044797 || 	exx                            ; 044730 || 044797 D9 00 DC 00 11621  			DW	 217,  220,  223,  226,  230,  233,  236,  240
	nop                            ; 044798 || 	nop                            ; 044731
	call	c,$00df00                 ; 044799 || 	call	c,$00df00                 ; 044732
	jp	po,$00e600                  ; 04479D || 	jp	po,$00e600                  ; 044736
	jp	(hl)                        ; 0447A1 || 	jp	(hl)                        ; 04473A
	nop                            ; 0447A2 || 	nop                            ; 04473B
	call	pe,$00f000                ; 0447A3 || 	call	pe,$00f000                ; 04473C
	di                             ; 0447A7 || 	di                             ; 044740 || 0447A7 F3 00 F7 00 11622  			DW	 243,  247,  251,  254,  258,  262,  265,  269
	nop                            ; 0447A8 || 	nop                            ; 044741
	rst	$30                        ; 0447A9 || 	rst	$30                        ; 044742
	nop                            ; 0447AA || 	nop                            ; 044743
	ei                             ; 0447AB || 	ei                             ; 044744
	nop                            ; 0447AC || 	nop                            ; 044745
	cp	$00                         ; 0447AD || 	cp	$00                         ; 044746
	ld	(bc),a                      ; 0447AF || 	ld	(bc),a                      ; 044748
	ld	bc,$090106                  ; 0447B0 || 	ld	bc,$090106                  ; 044749
	ld	bc,$11010d                  ; 0447B4 || 	ld	bc,$11010d                  ; 04474D
	ld	bc,$190115                  ; 0447B8 || 	ld	bc,$190115                  ; 044751
	ld	bc,$21011d                  ; 0447BC || 	ld	bc,$090106                  ; 044749
	ld	bc,$2a0126                  ; 0447C0 || 	ld	bc,$11010d                  ; 04474D
	ld	bc,$33012e                  ; 0447C4 || 	ld	bc,$190115                  ; 044751
	ld	bc,$3c0137                  ; 0447C8 || 	ld	bc,$21011d                  ; 044755
	ld	bc,$450140                  ; 0447CC || 	ld	bc,$2a0126                  ; 044759
	ld	bc,$4e014a                  ; 0447D0 || 	ld	bc,$33012e                  ; 04475D
	ld	bc,$580153                  ; 0447D4 || 	ld	bc,$3c0137                  ; 044761
	ld	bc,$62015d                  ; 0447D8 || 	ld	bc,$450140                  ; 044765
	ld	bc,$6d0167                  ; 0447DC || 	ld	bc,$4e014a                  ; 044769
	ld	bc,$770172                  ; 0447E0 || 	ld	bc,$580153                  ; 04476D
	ld	bc,$82017d                  ; 0447E4 || 	ld	bc,$62015d                  ; 044771
	ld	bc,$8e0188                  ; 0447E8 || 	ld	bc,$6d0167                  ; 044775
	ld	bc,$990193                  ; 0447EC || 	ld	bc,$770172                  ; 044779
	ld	bc,$a5019f                  ; 0447F0 || 	ld	bc,$82017d                  ; 04477D
	ld	bc,$b201ab                  ; 0447F4 || 	ld	bc,$8e0188                  ; 044781
	ld	bc,$be01b8                  ; 0447F8 || 	ld	bc,$990193                  ; 044785
	ld	bc,$cb01c5                  ; 0447FC || 	ld	bc,$cb01c5                  ; 044795
	ld	bc,$d901d2                  ; 044800 || 	ld	bc,$d901d2                  ; 044799
	ld	bc,$e701e0                  ; 044804 || 	ld	bc,$e701e0                  ; 04479D
	ld	bc,$f501ee                  ; 044808 || 	ld	bc,$f501ee                  ; 0447A1
	ld	bc,$0401fc                  ; 04480C || 	ld	bc,$0401fc                  ; 0447A5
	ld	(bc),a                      ; 044810 || 	ld	(bc),a                      ; 0447A9
	dec	bc                         ; 044811 || 	dec	bc                         ; 0447AA
	ld	(bc),a                      ; 044812 || 	ld	(bc),a                      ; 0447AB
	inc	de                         ; 044813 || 	inc	de                         ; 0447AC
	ld	(bc),a                      ; 044814 || 	ld	(bc),a                      ; 0447AD
	dec	de                         ; 044815 || 	dec	de                         ; 0447AE
	ld	(bc),a                      ; 044816 || 	ld	(bc),a                      ; 0447AF
	ld	($022a02),hl                ; 044817 || 	ld	($022a02),hl                ; 0447B0 || 044817 22 02 2A 02 11629  			DW	 546,  554,  562,  571,  579,  587,  596,  605
	ld	($023b02),a                 ; 04481B || 	ld	($023b02),a                 ; 0447B4
	ld	b,e                         ; 04481F || 	ld	b,e                         ; 0447B8
	ld	(bc),a                      ; 044820 || 	ld	(bc),a                      ; 0447B9
	ld	c,e                         ; 044821 || 	ld	c,e                         ; 0447BA
	ld	(bc),a                      ; 044822 || 	ld	(bc),a                      ; 0447BB
	ld	d,h                         ; 044823 || 	ld	d,h                         ; 0447BC
	ld	(bc),a                      ; 044824 || 	ld	(bc),a                      ; 0447BD
	ld	e,l                         ; 044825 || 	ld	e,l                         ; 0447BE
	ld	(bc),a                      ; 044826 || 	ld	(bc),a                      ; 0447BF
	ld	h,l                         ; 044827 || 	ld	h,l                         ; 0447C0 || 044827 65 02 6E 02 11630  			DW	 613,  622,  631,  641,  650,  659,  669,  679
	ld	(bc),a                      ; 044828 || 	ld	(bc),a                      ; 0447C1
	ld	l,(hl)                      ; 044829 || 	ld	l,(hl)                      ; 0447C2
	ld	(bc),a                      ; 04482A || 	ld	(bc),a                      ; 0447C3
	ld	(hl),a                      ; 04482B || 	ld	(hl),a                      ; 0447C4
	ld	(bc),a                      ; 04482C || 	ld	(bc),a                      ; 0447C5
	add	a,c                        ; 04482D || 	add	a,c                        ; 0447C6
	ld	(bc),a                      ; 04482E || 	ld	(bc),a                      ; 0447C7
	adc	a,d                        ; 04482F || 	adc	a,d                        ; 0447C8
	ld	(bc),a                      ; 044830 || 	ld	(bc),a                      ; 0447C9
	sub	e                          ; 044831 || 	sub	e                          ; 0447CA
	ld	(bc),a                      ; 044832 || 	ld	(bc),a                      ; 0447CB
	sbc	a,l                        ; 044833 || 	sbc	a,l                        ; 0447CC
	ld	(bc),a                      ; 044834 || 	ld	(bc),a                      ; 0447CD
	and	a                          ; 044835 || 	and	a                          ; 0447CE
	ld	(bc),a                      ; 044836 || 	ld	(bc),a                      ; 0447CF
	or	c                           ; 044837 || 	or	c                           ; 0447D0 || 044837 B1 02 BB 02 11631  			DW	 689,  699,  709,  719,  729,  740,  751,  762
	ld	(bc),a                      ; 044838 || 	ld	(bc),a                      ; 0447D1
	cp	e                           ; 044839 || 	cp	e                           ; 0447D2
	ld	(bc),a                      ; 04483A || 	ld	(bc),a                      ; 0447D3
	push	bc                        ; 04483B || 	push	bc                        ; 0447D4
	ld	(bc),a                      ; 04483C || 	ld	(bc),a                      ; 0447D5
	rst	$08                        ; 04483D || 	rst	$08                        ; 0447D6
	ld	(bc),a                      ; 04483E || 	ld	(bc),a                      ; 0447D7
	exx                            ; 04483F || 	exx                            ; 0447D8
	ld	(bc),a                      ; 044840 || 	ld	(bc),a                      ; 0447D9
	call	po,$02ef02                ; 044841 || 	call	po,$02ef02                ; 0447DA
	jp	m,$030502                   ; 044845 || 	jp	m,$030502                   ; 0447DE
	djnz	$+$05                     ; 044849 || 	djnz	$+$05                     ; 0447E2
	dec	de                         ; 04484B || 	dec	de                         ; 0447E4
	inc	bc                         ; 04484C || 	inc	bc                         ; 0447E5
	daa                            ; 04484D || 	daa                            ; 0447E6
	inc	bc                         ; 04484E || 	inc	bc                         ; 0447E7
	inc	sp                         ; 04484F || 	inc	sp                         ; 0447E8
	inc	bc                         ; 044850 || 	inc	bc                         ; 0447E9
	ccf                            ; 044851 || 	ccf                            ; 0447EA
	inc	bc                         ; 044852 || 	inc	bc                         ; 0447EB
	ld	c,e                         ; 044853 || 	ld	c,e                         ; 0447EC
	inc	bc                         ; 044854 || 	inc	bc                         ; 0447ED
	ld	d,a                         ; 044855 || 	ld	d,a                         ; 0447EE
	inc	bc                         ; 044856 || 	inc	bc                         ; 0447EF
	ld	h,e                         ; 044857 || 	ld	h,e                         ; 0447F0 || 044857 63 03 70 03 11633  			DW	 867,  880,  893,  906,  919,  932,  946,  960
	inc	bc                         ; 044858 || 	inc	bc                         ; 0447F1
	ld	(hl),b                      ; 044859 || 	ld	(hl),b                      ; 0447F2
	inc	bc                         ; 04485A || 	inc	bc                         ; 0447F3
	ld	a,l                         ; 04485B || 	ld	a,l                         ; 0447F4
	inc	bc                         ; 04485C || 	inc	bc                         ; 0447F5
	adc	a,d                        ; 04485D || 	adc	a,d                        ; 0447F6
	inc	bc                         ; 04485E || 	inc	bc                         ; 0447F7
	sub	a                          ; 04485F || 	sub	a                          ; 0447F8
	inc	bc                         ; 044860 || 	inc	bc                         ; 0447F9
	and	h                          ; 044861 || 	and	h                          ; 0447FA
	inc	bc                         ; 044862 || 	inc	bc                         ; 0447FB
	or	d                           ; 044863 || 	or	d                           ; 0447FC
	inc	bc                         ; 044864 || 	inc	bc                         ; 0447FD
	ret	nz                         ; 044865 || 	ret	nz                         ; 0447FE
	inc	bc                         ; 044866 || 	inc	bc                         ; 0447FF
	adc	a,$03                      ; 044867 || 	adc	a,$03                      ; 044800 || 044867 CE 03 DC 03 11634  			DW	 974,  988, 1002, 1017, 1032, 1047, 1062, 1078
	call	c,$03ea03                 ; 044869 || 	call	c,$03ea03                 ; 044802
	ld	sp,hl                       ; 04486D || 	ld	sp,hl                       ; 044806
	inc	bc                         ; 04486E || 	inc	bc                         ; 044807
	ex	af,af'                      ; 04486F || 	ex	af,af'                      ; 044808
	inc	b                          ; 044870 || 	inc	b                          ; 044809
	rla                            ; 044871 || 	rla                            ; 04480A
	inc	b                          ; 044872 || 	inc	b                          ; 04480B
	ld	h,$04                       ; 044873 || 	ld	h,$04                       ; 04480C
	ld	(hl),$04                    ; 044875 || 	ld	(hl),$04                    ; 04480E
	ld	b,l                         ; 044877 || 	ld	b,l                         ; 044810 || 044877 45 04 55 04 11635  			DW	1093, 1109, 1125, 1142, 1158, 1175, 1192, 1210
	inc	b                          ; 044878 || 	inc	b                          ; 044811
	ld	d,l                         ; 044879 || 	ld	d,l                         ; 044812
	inc	b                          ; 04487A || 	inc	b                          ; 044813
	ld	h,l                         ; 04487B || 	ld	h,l                         ; 044814
	inc	b                          ; 04487C || 	inc	b                          ; 044815
	halt                           ; 04487D || 	halt                           ; 044816
	inc	b                          ; 04487E || 	inc	b                          ; 044817
	add	a,(hl)                     ; 04487F || 	add	a,(hl)                     ; 044818
	inc	b                          ; 044880 || 	inc	b                          ; 044819
	sub	a                          ; 044881 || 	sub	a                          ; 04481A
	inc	b                          ; 044882 || 	inc	b                          ; 04481B
	xor	b                          ; 044883 || 	xor	b                          ; 04481C
	inc	b                          ; 044884 || 	inc	b                          ; 04481D
	cp	d                           ; 044885 || 	cp	d                           ; 04481E
	inc	b                          ; 044886 || 	inc	b                          ; 04481F
	rlc	h                          ; 044887 || 	rlc	h                          ; 044820 || 044887 CB 04 DD 04 11636  			DW	1227, 1245, 1263, 1282, 1300, 1319, 1338, 1358
	trap                           ; 044889 || 	trap                           ; 044822
	rst	$28                        ; 04488B || 	rst	$28                        ; 044824
	inc	b                          ; 04488C || 	inc	b                          ; 044825
	ld	(bc),a                      ; 04488D || 	ld	(bc),a                      ; 044826
	dec	b                          ; 04488E || 	dec	b                          ; 044827
	inc	d                          ; 04488F || 	inc	d                          ; 044828
	dec	b                          ; 044890 || 	dec	b                          ; 044829
	daa                            ; 044891 || 	daa                            ; 04482A
	dec	b                          ; 044892 || 	dec	b                          ; 04482B
	ld	a,($054e05)                 ; 044893 || 	ld	a,($054e05)                 ; 04482C
	ld	h,d                         ; 044897 || 	ld	h,d                         ; 044830 || 044897 62 05 76 05 11637  			DW	1378, 1398, 1418, 1439, 1459, 1481, 1502, 1524
	dec	b                          ; 044898 || 	dec	b                          ; 044831
	halt                           ; 044899 || 	halt                           ; 044832
	dec	b                          ; 04489A || 	dec	b                          ; 044833
	adc	a,d                        ; 04489B || 	adc	a,d                        ; 044834
	dec	b                          ; 04489C || 	dec	b                          ; 044835
	sbc	a,a                        ; 04489D || 	sbc	a,a                        ; 044836
	dec	b                          ; 04489E || 	dec	b                          ; 044837
	or	e                           ; 04489F || 	or	e                           ; 044838
	dec	b                          ; 0448A0 || 	dec	b                          ; 044839
	ret                            ; 0448A1 || 	ret                            ; 04483A
	dec	b                          ; 0448A2 || 	dec	b                          ; 04483B
	sbc	a,$05                      ; 0448A3 || 	sbc	a,$05                      ; 04483C
	call	p,$060a05                 ; 0448A5 || 	call	p,$060a05                 ; 04483E
	ld	hl,$063806                  ; 0448A9 || 	ld	hl,$063806                  ; 044842
	ld	c,a                         ; 0448AD || 	ld	c,a                         ; 044846
	ld	b,$66                       ; 0448AE || 	ld	b,$66                       ; 044847
	ld	b,$7e                       ; 0448B0 || 	ld	b,$7e                       ; 044849
	ld	b,$96                       ; 0448B2 || 	ld	b,$96                       ; 04484B
	ld	b,$af                       ; 0448B4 || 	ld	b,$af                       ; 04484D
	ld	b,$c8                       ; 0448B6 || 	ld	b,$c8                       ; 04484F
	ld	b,$e1                       ; 0448B8 || 	ld	b,$e1                       ; 044851
	ld	b,$fa                       ; 0448BA || 	ld	b,$fa                       ; 044853
	ld	b,$14                       ; 0448BC || 	ld	b,$14                       ; 044855
	rlca                           ; 0448BE || 	rlca                           ; 044857
	cpl                            ; 0448BF || 	cpl                            ; 044858
	rlca                           ; 0448C0 || 	rlca                           ; 044859
	ld	c,d                         ; 0448C1 || 	ld	c,d                         ; 04485A
	rlca                           ; 0448C2 || 	rlca                           ; 04485B
	ld	h,l                         ; 0448C3 || 	ld	h,l                         ; 04485C
	rlca                           ; 0448C4 || 	rlca                           ; 04485D
	add	a,b                        ; 0448C5 || 	add	a,b                        ; 04485E
	rlca                           ; 0448C6 || 	rlca                           ; 04485F
	sbc	a,h                        ; 0448C7 || 	sbc	a,h                        ; 044860 || 0448C7 9C 07 B8 07 11640  			DW	1948, 1976, 2005, 2034, 2064, 2093, 2123, 2154
	rlca                           ; 0448C8 || 	rlca                           ; 044861
	cp	b                           ; 0448C9 || 	cp	b                           ; 044862
	rlca                           ; 0448CA || 	rlca                           ; 044863
	push	de                        ; 0448CB || 	push	de                        ; 044864
	rlca                           ; 0448CC || 	rlca                           ; 044865
	jp	p,$081007                   ; 0448CD || 	jp	p,$081007                   ; 044866
	dec	l                          ; 0448D1 || 	dec	l                          ; 04486A
	ex	af,af'                      ; 0448D2 || 	ex	af,af'                      ; 04486B
	ld	c,e                         ; 0448D3 || 	ld	c,e                         ; 04486C
	ex	af,af'                      ; 0448D4 || 	ex	af,af'                      ; 04486D
	ld	l,d                         ; 0448D5 || 	ld	l,d                         ; 04486E
	ex	af,af'                      ; 0448D6 || 	ex	af,af'                      ; 04486F
	adc	a,d                        ; 0448D7 || 	adc	a,d                        ; 044870 || 0448D7 8A 08 A9 08 11641  			DW	2186, 2217, 2250, 2282, 2316, 2349, 2383, 2418
	ex	af,af'                      ; 0448D8 || 	ex	af,af'                      ; 044871
	xor	c                          ; 0448D9 || 	xor	c                          ; 044872
	ex	af,af'                      ; 0448DA || 	ex	af,af'                      ; 044873
	jp	z,$08ea08                   ; 0448DB || 	jp	z,$08ea08                   ; 044874
	inc	c                          ; 0448DF || 	inc	c                          ; 044878
	add	hl,bc                      ; 0448E0 || 	add	hl,bc                      ; 044879
	dec	l                          ; 0448E1 || 	dec	l                          ; 04487A
	add	hl,bc                      ; 0448E2 || 	add	hl,bc                      ; 04487B
	ld	c,a                         ; 0448E3 || 	ld	c,a                         ; 04487C
	add	hl,bc                      ; 0448E4 || 	add	hl,bc                      ; 04487D
	ld	(hl),d                      ; 0448E5 || 	ld	(hl),d                      ; 04487E
	add	hl,bc                      ; 0448E6 || 	add	hl,bc                      ; 04487F
	sub	l                          ; 0448E7 || 	sub	l                          ; 044880 || 0448E7 95 09 B9 09 11642  			DW	2453, 2489, 2525, 2562, 2599, 2637, 2675, 2714
	add	hl,bc                      ; 0448E8 || 	add	hl,bc                      ; 044881
	cp	c                           ; 0448E9 || 	cp	c                           ; 044882
	add	hl,bc                      ; 0448EA || 	add	hl,bc                      ; 044883
	add	ix,bc                      ; 0448EB || 	add	ix,bc                      ; 044884
	ld	(bc),a                      ; 0448ED || 	ld	(bc),a                      ; 044886
	ld	a,(bc)                      ; 0448EE || 	ld	a,(bc)                      ; 044887
	daa                            ; 0448EF || 	daa                            ; 044888
	ld	a,(bc)                      ; 0448F0 || 	ld	a,(bc)                      ; 044889
	ld	c,l                         ; 0448F1 || 	ld	c,l                         ; 04488A
	ld	a,(bc)                      ; 0448F2 || 	ld	a,(bc)                      ; 04488B
	ld	(hl),e                      ; 0448F3 || 	ld	(hl),e                      ; 04488C
	ld	a,(bc)                      ; 0448F4 || 	ld	a,(bc)                      ; 04488D
	sbc	a,d                        ; 0448F5 || 	sbc	a,d                        ; 04488E
	ld	a,(bc)                      ; 0448F6 || 	ld	a,(bc)                      ; 04488F
	jp	nz,$0aea0a                  ; 0448F7 || 	jp	nz,$0aea0a                  ; 044890 || 0448F7 C2 0A EA 0A 11643  			DW	2754, 2794, 2834, 2876, 2918, 2960, 3003, 3047
	ld	(de),a                      ; 0448FB || 	ld	(de),a                      ; 044894
	dec	bc                         ; 0448FC || 	dec	bc                         ; 044895
	inc	a                          ; 0448FD || 	inc	a                          ; 044896
	dec	bc                         ; 0448FE || 	dec	bc                         ; 044897
	ld	h,(hl)                      ; 0448FF || 	ld	h,(hl)                      ; 044898
	dec	bc                         ; 044900 || 	dec	bc                         ; 044899
	sub	b                          ; 044901 || 	sub	b                          ; 04489A
	dec	bc                         ; 044902 || 	dec	bc                         ; 04489B
	cp	e                           ; 044903 || 	cp	e                           ; 04489C
	dec	bc                         ; 044904 || 	dec	bc                         ; 04489D
	rst	$20                        ; 044905 || 	rst	$20                        ; 04489E
	dec	bc                         ; 044906 || 	dec	bc                         ; 04489F
	inc	de                         ; 044907 || 	inc	de                         ; 0448A0 || 044907 13 0C 40 0C 11644  			DW	3091, 3136, 3182, 3228, 3275, 3322, 3371, 3420
	inc	c                          ; 044908 || 	inc	c                          ; 0448A1
	inc.sis	c                      ; 044909 || 	inc.sis	c                      ; 0448A2
	ld	l,(hl)                      ; 04490B || 	ld	l,(hl)                      ; 0448A4
	inc	c                          ; 04490C || 	inc	c                          ; 0448A5
	sbc	a,h                        ; 04490D || 	sbc	a,h                        ; 0448A6
	inc	c                          ; 04490E || 	inc	c                          ; 0448A7
	rrc	h                          ; 04490F || 	rrc	h                          ; 0448A8
	jp	m,$0d2b0c                   ; 044911 || 	jp	m,$0d2b0c                   ; 0448AA
	ld	e,h                         ; 044915 || 	ld	e,h                         ; 0448AE
	dec	c                          ; 044916 || 	dec	c                          ; 0448AF
	adc	a,(hl)                     ; 044917 || 	adc	a,(hl)                     ; 0448B0 || 044917 8E 0D C0 0D 11645  			DW	3470, 3520, 3571, 3623, 3676, 3729, 3784, 3839
	dec	c                          ; 044918 || 	dec	c                          ; 0448B1
	ret	nz                         ; 044919 || 	ret	nz                         ; 0448B2
	dec	c                          ; 04491A || 	dec	c                          ; 0448B3
	di                             ; 04491B || 	di                             ; 0448B4
	dec	c                          ; 04491C || 	dec	c                          ; 0448B5
	daa                            ; 04491D || 	daa                            ; 0448B6
	ld	c,$5c                       ; 04491E || 	ld	c,$5c                       ; 0448B7
	ld	c,$91                       ; 044920 || 	ld	c,$91                       ; 0448B9
	ld	c,$c8                       ; 044922 || 	ld	c,$c8                       ; 0448BB
	ld	c,$ff                       ; 044924 || 	ld	c,$ff                       ; 0448BD
	ld	c,$36                       ; 044926 || 	ld	c,$36                       ; 0448BF
	rrca                           ; 044928 || 	rrca                           ; 0448C1
	ld	l,a                         ; 044929 || 	ld	l,a                         ; 0448C2
	rrca                           ; 04492A || 	rrca                           ; 0448C3
	xor	c                          ; 04492B || 	xor	c                          ; 0448C4
	rrca                           ; 04492C || 	rrca                           ; 0448C5
	ex	(sp),hl                     ; 04492D || 	ex	(sp),hl                     ; 0448C6
	rrca                           ; 04492E || 	rrca                           ; 0448C7
	ld	e,$10                       ; 04492F || 	ld	e,$10                       ; 0448C8
	ld	e,d                         ; 044931 || 	ld	e,d                         ; 0448CA
	djnz	$-$67                     ; 044932 || 	djnz	$-$67                     ; 0448CB
	djnz	$-$29                     ; 044934 || 	djnz	$-$29                     ; 0448CD
	djnz	$+$15                     ; 044936 || 	djnz	$+$15                     ; 0448CF
	ld	de,$931153                  ; 044938 || 	ld	de,$931153                  ; 0448D1
	ld	de,$1711d5                  ; 04493C || 	ld	de,$1711d5                  ; 0448D5
	ld	(de),a                      ; 044940 || 	ld	(de),a                      ; 0448D9
	ld.lil	(de),a                  ; 044941 || 	ld.lil	(de),a                  ; 0448DA
	sbc	a,a                        ; 044943 || 	sbc	a,a                        ; 0448DC
	ld	(de),a                      ; 044944 || 	ld	(de),a                      ; 0448DD
	call	po,$21f312                ; 044945 || 	call	po,$21f312                ; 0448DE
	sbc	a,h                        ; 044949
	inc.lis	b                      ; 04494A || 	inc.lis	b                      ; 0448E3
	ld	e,$32                       ; 04494C || 	ld	e,$32                       ; 0448E5 || 04494C 1E 32       11683  			LD		E, 32h				; Set up the VBlank Interrupt Vector
	ld	a,$14                       ; 04494E || 	ld	a,$14                       ; 0448E7 || 04494E 3E 14       0001M 			LD	A, function
	rst.lis	$08                    ; 044950 || 	rst.lis	$08                    ; 0448E9 || 044950 49 CF       0002M 			RST.LIS	08h
	ex	de,hl                       ; 044952 || 	ex	de,hl                       ; 0448EB || 044952 EB          11686  			ex de,hl
	ld	hl,$0449aa                  ; 044953 || 	ld	hl,$044943                  ; 0448EC || 044953 21 AA 49 04 11687  			LD		HL, VBLANK_HANDLER_JP + 1	; Pointer to the JP address in this segment
	ld	(hl),de                     ; 044957 || 	ld	(hl),de                     ; 0448F0 || 044957 ED 1F       11688  			LD		(HL), DE			; Self-modify the code
	ei                             ; 044959 || 	ei                             ; 0448F2 || 044959 FB          11689  			EI
	ret                            ; 04495A || 	ret                            ; 0448F3 || 04495A C9          11690  			RET
	di                             ; 04495B || 	di                             ; 0448F4 || 04495B F3          11694  VBLANK_STOP:		DI
	ld	hl,$0449aa                  ; 04495C || 	ld	hl,$044943                  ; 0448F5 || 04495C 21 AA 49 04 11695  			LD		HL, VBLANK_HANDLER_JP + 1	; Pointer to the JP address in this segment
	ld	de,(hl)                     ; 044960 || 	ld	de,(hl)                     ; 0448F9 || 044960 ED 17       11696  			LD		DE, (HL)
	ex	de,hl                       ; 044962 || 	ex	de,hl                       ; 0448FB || 044962 EB          11697  			EX		DE, HL 				; HLU: Address of MOS interrupt vector
	ld	e,$32                       ; 044963 || 	ld	e,$32                       ; 0448FC || 044963 1E 32       11698  			LD		E, 32h
	ld	a,$14                       ; 044965 || 	ld	a,$14                       ; 0448FE || 044965 3E 14       0001M 			LD	A, function
	rst.lis	$08                    ; 044967 || 	rst.lis	$08                    ; 044900 || 044967 49 CF       0002M 			RST.LIS	08h
	ei                             ; 044969 || 	ei                             ; 044902 || 044969 FB          11700  			EI
	ret                            ; 04496A || 	ret                            ; 044903 || 04496A C9          11701  			RET
	ld	a,$08                       ; 04496B || 	ld	a,$08                       ; 044904 || 04496B 3E 08       0001M 			LD	A, function
	rst.lis	$08                    ; 04496D || 	rst.lis	$08                    ; 044906 || 04496D 49 CF       0002M 			RST.LIS	08h
	ld	hl,$044d49                  ; 04496F || 	ld	hl,$044d49                  ; 044908 || 04496F 21 49 4D 04 11706  			LD		HL, KEYCOUNT 			; Check whether the keycount has changed
	ld	a,(ix+$19)                  ; 044973 || 	ld	a,(ix+$19)                  ; 04490C || 044973 DD 7E 19    11707  			LD		A, (IX + sysvar_vkeycount)	; by comparing the MOS copy
	cp	(hl)                        ; 044976 || 	cp	(hl)                        ; 04490F || 044976 BE          11708  			CP 		(HL)				; with our local copy
	jr	nz,$+$0c                    ; 044977 || 	jr	nz,$+$0c                    ; 044910 || 044977 20 0A       11709  			JR		NZ, DO_KEYBOARD_1		; Yes it has, so jump to the next bit
	xor	a                          ; 044979 || 	xor	a                          ; 044912 || 044979 AF          11711  DO_KEYBOARD_0:		XOR		A 				; Clear the keyboard values
	ld	($044d48),a                 ; 04497A || 	ld	($044d48),a                 ; 044913 || 04497A 32 48 4D 04 11712  			LD		(KEYASCII), A
	ld	($044d47),a                 ; 04497E || 	ld	($044d47),a                 ; 044917 || 04497E 32 47 4D 04 11713  			LD		(KEYDOWN), A
	ret                            ; 044982 || 	ret                            ; 04491B || 044982 C9          11714  			RET	 					; And return
	ld	(hl),a                      ; 044983 || 	ld	(hl),a                      ; 04491C || 044983 77          11716  DO_KEYBOARD_1:		LD		(HL), A 			; Store the updated local copy of keycount
	ld	a,(ix+$18)                  ; 044984 || 	ld	a,(ix+$18)                  ; 04491D || 044984 DD 7E 18    11717  			LD		A, (IX + sysvar_vkeydown)	; Fetch key down value (1 = key down, 0 = key up)
	or	a                           ; 044987 || 	or	a                           ; 044920 || 044987 B7          11718  			OR		A
	jr	z,$-$0f                     ; 044988 || 	jr	z,$-$0f                     ; 044921 || 044988 28 EF       11719  			JR		Z, DO_KEYBOARD_0		; If it is key up, then clear the keyboard values
	ld	($044d47),a                 ; 04498A || 	ld	($044d47),a                 ; 044923 || 04498A 32 47 4D 04 11721  			LD		(KEYDOWN), A 			; Store the keydown value
	ld	a,(ix+$05)                  ; 04498E || 	ld	a,(ix+$05)                  ; 044927 || 04498E DD 7E 05    11722  			LD		A, (IX + sysvar_keyascii)	; Fetch key ASCII value
	ld	($044d48),a                 ; 044991 || 	ld	($044d48),a                 ; 04492A || 044991 32 48 4D 04 11723  			LD		(KEYASCII), A 			; Store locally
	cp	$1b                         ; 044995 || 	cp	$1b                         ; 04492E || 044995 FE 1B       11724  			CP		1Bh				; Is it escape?
	call	z,$043fad                 ; 044997 || 	call	z,$043f4c                 ; 044930 || 044997 CC AD 3F 04 11725  			CALL		Z, ESCSET			; Yes, so set the escape flags
	ret                            ; 04499B || 	ret                            ; 044934 || 04499B C9          11726  			RET						; Return to the interrupt handler
	di                             ; 04499C || 	di                             ; 044935 || 04499C F3          11728  VBLANK_HANDLER:		DI
	push	af                        ; 04499D || 	push	af                        ; 044936 || 04499D F5          11729  			PUSH		AF
	push	hl                        ; 04499E || 	push	hl                        ; 044937 || 04499E E5          11730  			PUSH		HL
	push	ix                        ; 04499F || 	push	ix                        ; 044938 || 04499F DD E5       11731  			PUSH		IX
	call	$04496b                   ; 0449A1                                         || 0449A1 CD 6B 49 04 11732  			CALL		DO_KEYBOARD
	pop	ix                         ; 0449A5                                         || 0449A5 DD E1       11733  			POP		IX
	pop	hl                         ; 0449A7                                         || 0449A7 E1          11734  			POP		HL
	pop	af                         ; 0449A8                                         || 0449A8 F1          11735  			POP		AF
	jp	$000000                     ; 0449A9                                         || 0449A9 C3 00 00 00 11739  VBLANK_HANDLER_JP:	JP		0				; This is self-modified by VBLANK_INIT				; --- End interrupts.asm ---
	nop                            ; 0449AD || 	nop                            ; 0400DA || 0449AD 00 00 00 00 11802  			ALIGN 		256		; ACCS, BUFFER & STAVAR must be on page boundaries
	nop                            ; 0449AE || 	nop                            ; 0400DB
	nop                            ; 0449AF || 	nop                            ; 0400DC
	nop                            ; 0449B0 || 	nop                            ; 0400DD
	nop                            ; 0449B1 || 	nop                            ; 0400DE
	nop                            ; 0449B2 || 	nop                            ; 0400DF
	nop                            ; 0449B3 || 	nop                            ; 0400E0
	nop                            ; 0449B4 || 	nop                            ; 0400E1
	nop                            ; 0449B5 || 	nop                            ; 0400E2
	nop                            ; 0449B6 || 	nop                            ; 0400E3
	nop                            ; 0449B7 || 	nop                            ; 0400E4
	nop                            ; 0449B8 || 	nop                            ; 0400DA
	nop                            ; 0449B9 || 	nop                            ; 0400DB
	nop                            ; 0449BA || 	nop                            ; 0400DC
	nop                            ; 0449BB || 	nop                            ; 0400DD
	nop                            ; 0449BC || 	nop                            ; 0400DE
	nop                            ; 0449BD || 	nop                            ; 0400DF
	nop                            ; 0449BE || 	nop                            ; 0400E0
	nop                            ; 0449BF || 	nop                            ; 0400E1
	nop                            ; 0449C0 || 	nop                            ; 0400E2
	nop                            ; 0449C1 || 	nop                            ; 0400E3
	nop                            ; 0449C2 || 	nop                            ; 0400E4
	nop                            ; 0449C3 || 	nop                            ; 0400E5
	nop                            ; 0449C4 || 	nop                            ; 0400E6
	nop                            ; 0449C5 || 	nop                            ; 0400E7
	nop                            ; 0449C6 || 	nop                            ; 0400E8
	nop                            ; 0449C7 || 	nop                            ; 0400E9
	nop                            ; 0449C8 || 	nop                            ; 0400DA
	nop                            ; 0449C9 || 	nop                            ; 0400DB
	nop                            ; 0449CA || 	nop                            ; 0400DC
	nop                            ; 0449CB || 	nop                            ; 0400DD
	nop                            ; 0449CC || 	nop                            ; 0400DE
	nop                            ; 0449CD || 	nop                            ; 0400DF
	nop                            ; 0449CE || 	nop                            ; 0400E0
	nop                            ; 0449CF || 	nop                            ; 0400E1
	nop                            ; 0449D0 || 	nop                            ; 0400E2
	nop                            ; 0449D1 || 	nop                            ; 0400E3
	nop                            ; 0449D2 || 	nop                            ; 0400E4
	nop                            ; 0449D3 || 	nop                            ; 0400E5
	nop                            ; 0449D4 || 	nop                            ; 0400E6
	nop                            ; 0449D5 || 	nop                            ; 0400E7
	nop                            ; 0449D6 || 	nop                            ; 0400E8
	nop                            ; 0449D7 || 	nop                            ; 0400E9
	nop                            ; 0449D8 || 	nop                            ; 0400DA
	nop                            ; 0449D9 || 	nop                            ; 0400DB
	nop                            ; 0449DA || 	nop                            ; 0400DC
	nop                            ; 0449DB || 	nop                            ; 0400DD
	nop                            ; 0449DC || 	nop                            ; 0400DE
	nop                            ; 0449DD || 	nop                            ; 0400DF
	nop                            ; 0449DE || 	nop                            ; 0400E0
	nop                            ; 0449DF || 	nop                            ; 0400E1
	nop                            ; 0449E0 || 	nop                            ; 0400E2
	nop                            ; 0449E1 || 	nop                            ; 0400E3
	nop                            ; 0449E2 || 	nop                            ; 0400E4
	nop                            ; 0449E3 || 	nop                            ; 0400E5
	nop                            ; 0449E4 || 	nop                            ; 0400E6
	nop                            ; 0449E5 || 	nop                            ; 0400E7
	nop                            ; 0449E6 || 	nop                            ; 0400E8
	nop                            ; 0449E7 || 	nop                            ; 0400E9
	nop                            ; 0449E8 || 	nop                            ; 0400DA
	nop                            ; 0449E9 || 	nop                            ; 0400DB
	nop                            ; 0449EA || 	nop                            ; 0400DC
	nop                            ; 0449EB || 	nop                            ; 0400DD
	nop                            ; 0449EC || 	nop                            ; 0400DE
	nop                            ; 0449ED || 	nop                            ; 0400DF
	nop                            ; 0449EE || 	nop                            ; 0400E0
	nop                            ; 0449EF || 	nop                            ; 0400E1
	nop                            ; 0449F0 || 	nop                            ; 0400E2
	nop                            ; 0449F1 || 	nop                            ; 0400E3
	nop                            ; 0449F2 || 	nop                            ; 0400E4
	nop                            ; 0449F3 || 	nop                            ; 0400E5
	nop                            ; 0449F4 || 	nop                            ; 0400E6
	nop                            ; 0449F5 || 	nop                            ; 0400E7
	nop                            ; 0449F6 || 	nop                            ; 0400E8
	nop                            ; 0449F7 || 	nop                            ; 0400E9
	nop                            ; 0449F8 || 	nop                            ; 0400DA
	nop                            ; 0449F9 || 	nop                            ; 0400DB
	nop                            ; 0449FA || 	nop                            ; 0400DC
	nop                            ; 0449FB || 	nop                            ; 0400DD
	nop                            ; 0449FC || 	nop                            ; 0400DE
	nop                            ; 0449FD || 	nop                            ; 0400DF
	nop                            ; 0449FE || 	nop                            ; 0400E0
	nop                            ; 0449FF || 	nop                            ; 0400E1
	nop                            ; 044A00 || 	nop                            ; 0400E2 || 044A00 00 00 00 00 11805  ACCS:           BLKB    256,0             ; String Accumulator
	nop                            ; 044A01 || 	nop                            ; 0400E3
	nop                            ; 044A02 || 	nop                            ; 0400E4
	nop                            ; 044A03 || 	nop                            ; 0400E5
	nop                            ; 044A04 || 	nop                            ; 0400E6
	nop                            ; 044A05 || 	nop                            ; 0400E7
	nop                            ; 044A06 || 	nop                            ; 0400E8
	nop                            ; 044A07 || 	nop                            ; 0400E9
	nop                            ; 044A08 || 	nop                            ; 0400DA
	nop                            ; 044A09 || 	nop                            ; 0400DB
	nop                            ; 044A0A || 	nop                            ; 0400DC
	nop                            ; 044A0B || 	nop                            ; 0400DD
	nop                            ; 044A0C || 	nop                            ; 0400DE
	nop                            ; 044A0D || 	nop                            ; 0400DF
	nop                            ; 044A0E || 	nop                            ; 0400E0
	nop                            ; 044A0F || 	nop                            ; 0400E1
	nop                            ; 044A10 || 	nop                            ; 0400E2
	nop                            ; 044A11 || 	nop                            ; 0400E3
	nop                            ; 044A12 || 	nop                            ; 0400E4
	nop                            ; 044A13 || 	nop                            ; 0400E5
	nop                            ; 044A14 || 	nop                            ; 0400E6
	nop                            ; 044A15 || 	nop                            ; 0400E7
	nop                            ; 044A16 || 	nop                            ; 0400E8
	nop                            ; 044A17 || 	nop                            ; 0400E9
	nop                            ; 044A18 || 	nop                            ; 0400DA
	nop                            ; 044A19 || 	nop                            ; 0400DB
	nop                            ; 044A1A || 	nop                            ; 0400DC
	nop                            ; 044A1B || 	nop                            ; 0400DD
	nop                            ; 044A1C || 	nop                            ; 0400DE
	nop                            ; 044A1D || 	nop                            ; 0400DF
	nop                            ; 044A1E || 	nop                            ; 0400E0
	nop                            ; 044A1F || 	nop                            ; 0400E1
	nop                            ; 044A20 || 	nop                            ; 0400E2
	nop                            ; 044A21 || 	nop                            ; 0400E3
	nop                            ; 044A22 || 	nop                            ; 0400E4
	nop                            ; 044A23 || 	nop                            ; 0400E5
	nop                            ; 044A24 || 	nop                            ; 0400E6
	nop                            ; 044A25 || 	nop                            ; 0400E7
	nop                            ; 044A26 || 	nop                            ; 0400E8
	nop                            ; 044A27 || 	nop                            ; 0400E9
	nop                            ; 044A28 || 	nop                            ; 0400DA
	nop                            ; 044A29 || 	nop                            ; 0400DB
	nop                            ; 044A2A || 	nop                            ; 0400DC
	nop                            ; 044A2B || 	nop                            ; 0400DD
	nop                            ; 044A2C || 	nop                            ; 0400DE
	nop                            ; 044A2D || 	nop                            ; 0400DF
	nop                            ; 044A2E || 	nop                            ; 0400E0
	nop                            ; 044A2F || 	nop                            ; 0400E1
	nop                            ; 044A30 || 	nop                            ; 0400E2
	nop                            ; 044A31 || 	nop                            ; 0400E3
	nop                            ; 044A32 || 	nop                            ; 0400E4
	nop                            ; 044A33 || 	nop                            ; 0400E5
	nop                            ; 044A34 || 	nop                            ; 0400E6
	nop                            ; 044A35 || 	nop                            ; 0400E7
	nop                            ; 044A36 || 	nop                            ; 0400E8
	nop                            ; 044A37 || 	nop                            ; 0400E9
	nop                            ; 044A38 || 	nop                            ; 0400DA
	nop                            ; 044A39 || 	nop                            ; 0400DB
	nop                            ; 044A3A || 	nop                            ; 0400DC
	nop                            ; 044A3B || 	nop                            ; 0400DD
	nop                            ; 044A3C || 	nop                            ; 0400DE
	nop                            ; 044A3D || 	nop                            ; 0400DF
	nop                            ; 044A3E || 	nop                            ; 0400E0
	nop                            ; 044A3F || 	nop                            ; 0400E1
	nop                            ; 044A40 || 	nop                            ; 0400E2
	nop                            ; 044A41 || 	nop                            ; 0400E3
	nop                            ; 044A42 || 	nop                            ; 0400E4
	nop                            ; 044A43 || 	nop                            ; 0400E5
	nop                            ; 044A44 || 	nop                            ; 0400E6
	nop                            ; 044A45 || 	nop                            ; 0400E7
	nop                            ; 044A46 || 	nop                            ; 0400E8
	nop                            ; 044A47 || 	nop                            ; 0400E9
	nop                            ; 044A48 || 	nop                            ; 0400DA
	nop                            ; 044A49 || 	nop                            ; 0400DB
	nop                            ; 044A4A || 	nop                            ; 0400DC
	nop                            ; 044A4B || 	nop                            ; 0400DD
	nop                            ; 044A4C || 	nop                            ; 0400DE
	nop                            ; 044A4D || 	nop                            ; 0400DF
	nop                            ; 044A4E || 	nop                            ; 0400E0
	nop                            ; 044A4F || 	nop                            ; 0400E1
	nop                            ; 044A50 || 	nop                            ; 0400E2
	nop                            ; 044A51 || 	nop                            ; 0400E3
	nop                            ; 044A52 || 	nop                            ; 0400E4
	nop                            ; 044A53 || 	nop                            ; 0400E5
	nop                            ; 044A54 || 	nop                            ; 0400E6
	nop                            ; 044A55 || 	nop                            ; 0400E7
	nop                            ; 044A56 || 	nop                            ; 0400E8
	nop                            ; 044A57 || 	nop                            ; 0400E9
	nop                            ; 044A58 || 	nop                            ; 0400DA
	nop                            ; 044A59 || 	nop                            ; 0400DB
	nop                            ; 044A5A || 	nop                            ; 0400DC
	nop                            ; 044A5B || 	nop                            ; 0400DD
	nop                            ; 044A5C || 	nop                            ; 0400DE
	nop                            ; 044A5D || 	nop                            ; 0400DF
	nop                            ; 044A5E || 	nop                            ; 0400E0
	nop                            ; 044A5F || 	nop                            ; 0400E1
	nop                            ; 044A60 || 	nop                            ; 0400E2
	nop                            ; 044A61 || 	nop                            ; 0400E3
	nop                            ; 044A62 || 	nop                            ; 0400E4
	nop                            ; 044A63 || 	nop                            ; 0400E5
	nop                            ; 044A64 || 	nop                            ; 0400E6
	nop                            ; 044A65 || 	nop                            ; 0400E7
	nop                            ; 044A66 || 	nop                            ; 0400E8
	nop                            ; 044A67 || 	nop                            ; 0400E9
	nop                            ; 044A68 || 	nop                            ; 0400DA
	nop                            ; 044A69 || 	nop                            ; 0400DB
	nop                            ; 044A6A || 	nop                            ; 0400DC
	nop                            ; 044A6B || 	nop                            ; 0400DD
	nop                            ; 044A6C || 	nop                            ; 0400DE
	nop                            ; 044A6D || 	nop                            ; 0400DF
	nop                            ; 044A6E || 	nop                            ; 0400E0
	nop                            ; 044A6F || 	nop                            ; 0400E1
	nop                            ; 044A70 || 	nop                            ; 0400E2
	nop                            ; 044A71 || 	nop                            ; 0400E3
	nop                            ; 044A72 || 	nop                            ; 0400E4
	nop                            ; 044A73 || 	nop                            ; 0400E5
	nop                            ; 044A74 || 	nop                            ; 0400E6
	nop                            ; 044A75 || 	nop                            ; 0400E7
	nop                            ; 044A76 || 	nop                            ; 0400E8
	nop                            ; 044A77 || 	nop                            ; 0400E9
	nop                            ; 044A78 || 	nop                            ; 0400DA
	nop                            ; 044A79 || 	nop                            ; 0400DB
	nop                            ; 044A7A || 	nop                            ; 0400DC
	nop                            ; 044A7B || 	nop                            ; 0400DD
	nop                            ; 044A7C || 	nop                            ; 0400DE
	nop                            ; 044A7D || 	nop                            ; 0400DF
	nop                            ; 044A7E || 	nop                            ; 0400E0
	nop                            ; 044A7F || 	nop                            ; 0400E1
	nop                            ; 044A80 || 	nop                            ; 0400E2
	nop                            ; 044A81 || 	nop                            ; 0400E3
	nop                            ; 044A82 || 	nop                            ; 0400E4
	nop                            ; 044A83 || 	nop                            ; 0400E5
	nop                            ; 044A84 || 	nop                            ; 0400E6
	nop                            ; 044A85 || 	nop                            ; 0400E7
	nop                            ; 044A86 || 	nop                            ; 0400E8
	nop                            ; 044A87 || 	nop                            ; 0400E9
	nop                            ; 044A88 || 	nop                            ; 0400DA
	nop                            ; 044A89 || 	nop                            ; 0400DB
	nop                            ; 044A8A || 	nop                            ; 0400DC
	nop                            ; 044A8B || 	nop                            ; 0400DD
	nop                            ; 044A8C || 	nop                            ; 0400DE
	nop                            ; 044A8D || 	nop                            ; 0400DF
	nop                            ; 044A8E || 	nop                            ; 0400E0
	nop                            ; 044A8F || 	nop                            ; 0400E1
	nop                            ; 044A90 || 	nop                            ; 0400E2
	nop                            ; 044A91 || 	nop                            ; 0400E3
	nop                            ; 044A92 || 	nop                            ; 0400E4
	nop                            ; 044A93 || 	nop                            ; 0400E5
	nop                            ; 044A94 || 	nop                            ; 0400E6
	nop                            ; 044A95 || 	nop                            ; 0400E7
	nop                            ; 044A96 || 	nop                            ; 0400E8
	nop                            ; 044A97 || 	nop                            ; 0400E9
	nop                            ; 044A98 || 	nop                            ; 0400DA
	nop                            ; 044A99 || 	nop                            ; 0400DB
	nop                            ; 044A9A || 	nop                            ; 0400DC
	nop                            ; 044A9B || 	nop                            ; 0400DD
	nop                            ; 044A9C || 	nop                            ; 0400DE
	nop                            ; 044A9D || 	nop                            ; 0400DF
	nop                            ; 044A9E || 	nop                            ; 0400E0
	nop                            ; 044A9F || 	nop                            ; 0400E1
	nop                            ; 044AA0 || 	nop                            ; 0400E2
	nop                            ; 044AA1 || 	nop                            ; 0400E3
	nop                            ; 044AA2 || 	nop                            ; 0400E4
	nop                            ; 044AA3 || 	nop                            ; 0400E5
	nop                            ; 044AA4 || 	nop                            ; 0400E6
	nop                            ; 044AA5 || 	nop                            ; 0400E7
	nop                            ; 044AA6 || 	nop                            ; 0400E8
	nop                            ; 044AA7 || 	nop                            ; 0400E9
	nop                            ; 044AA8 || 	nop                            ; 0400DA
	nop                            ; 044AA9 || 	nop                            ; 0400DB
	nop                            ; 044AAA || 	nop                            ; 0400DC
	nop                            ; 044AAB || 	nop                            ; 0400DD
	nop                            ; 044AAC || 	nop                            ; 0400DE
	nop                            ; 044AAD || 	nop                            ; 0400DF
	nop                            ; 044AAE || 	nop                            ; 0400E0
	nop                            ; 044AAF || 	nop                            ; 0400E1
	nop                            ; 044AB0 || 	nop                            ; 0400E2
	nop                            ; 044AB1 || 	nop                            ; 0400E3
	nop                            ; 044AB2 || 	nop                            ; 0400E4
	nop                            ; 044AB3 || 	nop                            ; 0400E5
	nop                            ; 044AB4 || 	nop                            ; 0400E6
	nop                            ; 044AB5 || 	nop                            ; 0400E7
	nop                            ; 044AB6 || 	nop                            ; 0400E8
	nop                            ; 044AB7 || 	nop                            ; 0400E9
	nop                            ; 044AB8 || 	nop                            ; 0400DA
	nop                            ; 044AB9 || 	nop                            ; 0400DB
	nop                            ; 044ABA || 	nop                            ; 0400DC
	nop                            ; 044ABB || 	nop                            ; 0400DD
	nop                            ; 044ABC || 	nop                            ; 0400DE
	nop                            ; 044ABD || 	nop                            ; 0400DF
	nop                            ; 044ABE || 	nop                            ; 0400E0
	nop                            ; 044ABF || 	nop                            ; 0400E1
	nop                            ; 044AC0 || 	nop                            ; 0400E2
	nop                            ; 044AC1 || 	nop                            ; 0400E3
	nop                            ; 044AC2 || 	nop                            ; 0400E4
	nop                            ; 044AC3 || 	nop                            ; 0400E5
	nop                            ; 044AC4 || 	nop                            ; 0400E6
	nop                            ; 044AC5 || 	nop                            ; 0400E7
	nop                            ; 044AC6 || 	nop                            ; 0400E8
	nop                            ; 044AC7 || 	nop                            ; 0400E9
	nop                            ; 044AC8 || 	nop                            ; 0400DA
	nop                            ; 044AC9 || 	nop                            ; 0400DB
	nop                            ; 044ACA || 	nop                            ; 0400DC
	nop                            ; 044ACB || 	nop                            ; 0400DD
	nop                            ; 044ACC || 	nop                            ; 0400DE
	nop                            ; 044ACD || 	nop                            ; 0400DF
	nop                            ; 044ACE || 	nop                            ; 0400E0
	nop                            ; 044ACF || 	nop                            ; 0400E1
	nop                            ; 044AD0 || 	nop                            ; 0400E2
	nop                            ; 044AD1 || 	nop                            ; 0400E3
	nop                            ; 044AD2 || 	nop                            ; 0400E4
	nop                            ; 044AD3 || 	nop                            ; 0400E5
	nop                            ; 044AD4 || 	nop                            ; 0400E6
	nop                            ; 044AD5 || 	nop                            ; 0400E7
	nop                            ; 044AD6 || 	nop                            ; 0400E8
	nop                            ; 044AD7 || 	nop                            ; 0400E9
	nop                            ; 044AD8 || 	nop                            ; 0400DA
	nop                            ; 044AD9 || 	nop                            ; 0400DB
	nop                            ; 044ADA || 	nop                            ; 0400DC
	nop                            ; 044ADB || 	nop                            ; 0400DD
	nop                            ; 044ADC || 	nop                            ; 0400DE
	nop                            ; 044ADD || 	nop                            ; 0400DF
	nop                            ; 044ADE || 	nop                            ; 0400E0
	nop                            ; 044ADF || 	nop                            ; 0400E1
	nop                            ; 044AE0 || 	nop                            ; 0400E2
	nop                            ; 044AE1 || 	nop                            ; 0400E3
	nop                            ; 044AE2 || 	nop                            ; 0400E4
	nop                            ; 044AE3 || 	nop                            ; 0400E5
	nop                            ; 044AE4 || 	nop                            ; 0400E6
	nop                            ; 044AE5 || 	nop                            ; 0400E7
	nop                            ; 044AE6 || 	nop                            ; 0400E8
	nop                            ; 044AE7 || 	nop                            ; 0400E9
	nop                            ; 044AE8 || 	nop                            ; 0400DA
	nop                            ; 044AE9 || 	nop                            ; 0400DB
	nop                            ; 044AEA || 	nop                            ; 0400DC
	nop                            ; 044AEB || 	nop                            ; 0400DD
	nop                            ; 044AEC || 	nop                            ; 0400DE
	nop                            ; 044AED || 	nop                            ; 0400DF
	nop                            ; 044AEE || 	nop                            ; 0400E0
	nop                            ; 044AEF || 	nop                            ; 0400E1
	nop                            ; 044AF0 || 	nop                            ; 0400E2
	nop                            ; 044AF1 || 	nop                            ; 0400E3
	nop                            ; 044AF2 || 	nop                            ; 0400E4
	nop                            ; 044AF3 || 	nop                            ; 0400E5
	nop                            ; 044AF4 || 	nop                            ; 0400E6
	nop                            ; 044AF5 || 	nop                            ; 0400E7
	nop                            ; 044AF6 || 	nop                            ; 0400E8
	nop                            ; 044AF7 || 	nop                            ; 0400E9
	nop                            ; 044AF8 || 	nop                            ; 0400DA
	nop                            ; 044AF9 || 	nop                            ; 0400DB
	nop                            ; 044AFA || 	nop                            ; 0400DC
	nop                            ; 044AFB || 	nop                            ; 0400DD
	nop                            ; 044AFC || 	nop                            ; 0400DE
	nop                            ; 044AFD || 	nop                            ; 0400DF
	nop                            ; 044AFE || 	nop                            ; 0400E0
	nop                            ; 044AFF || 	nop                            ; 0400E1
	nop                            ; 044B00 || 	nop                            ; 0400E2 || 044B00 00 00 00 00 11806  BUFFER:         BLKB    256,0             ; String Input Buffer
	nop                            ; 044B01 || 	nop                            ; 0400E3
	nop                            ; 044B02 || 	nop                            ; 0400E4
	nop                            ; 044B03 || 	nop                            ; 0400E5
	nop                            ; 044B04 || 	nop                            ; 0400E6
	nop                            ; 044B05 || 	nop                            ; 0400E7
	nop                            ; 044B06 || 	nop                            ; 0400E8
	nop                            ; 044B07 || 	nop                            ; 0400E9
	nop                            ; 044B08 || 	nop                            ; 0400DA
	nop                            ; 044B09 || 	nop                            ; 0400DB
	nop                            ; 044B0A || 	nop                            ; 0400DC
	nop                            ; 044B0B || 	nop                            ; 0400DD
	nop                            ; 044B0C || 	nop                            ; 0400DE
	nop                            ; 044B0D || 	nop                            ; 0400DF
	nop                            ; 044B0E || 	nop                            ; 0400E0
	nop                            ; 044B0F || 	nop                            ; 0400E1
	nop                            ; 044B10 || 	nop                            ; 0400E2
	nop                            ; 044B11 || 	nop                            ; 0400E3
	nop                            ; 044B12 || 	nop                            ; 0400E4
	nop                            ; 044B13 || 	nop                            ; 0400E5
	nop                            ; 044B14 || 	nop                            ; 0400E6
	nop                            ; 044B15 || 	nop                            ; 0400E7
	nop                            ; 044B16 || 	nop                            ; 0400E8
	nop                            ; 044B17 || 	nop                            ; 0400E9
	nop                            ; 044B18 || 	nop                            ; 0400DA
	nop                            ; 044B19 || 	nop                            ; 0400DB
	nop                            ; 044B1A || 	nop                            ; 0400DC
	nop                            ; 044B1B || 	nop                            ; 0400DD
	nop                            ; 044B1C || 	nop                            ; 0400DE
	nop                            ; 044B1D || 	nop                            ; 0400DF
	nop                            ; 044B1E || 	nop                            ; 0400E0
	nop                            ; 044B1F || 	nop                            ; 0400E1
	nop                            ; 044B20 || 	nop                            ; 0400E2
	nop                            ; 044B21 || 	nop                            ; 0400E3
	nop                            ; 044B22 || 	nop                            ; 0400E4
	nop                            ; 044B23 || 	nop                            ; 0400E5
	nop                            ; 044B24 || 	nop                            ; 0400E6
	nop                            ; 044B25 || 	nop                            ; 0400E7
	nop                            ; 044B26 || 	nop                            ; 0400E8
	nop                            ; 044B27 || 	nop                            ; 0400E9
	nop                            ; 044B28 || 	nop                            ; 0400DA
	nop                            ; 044B29 || 	nop                            ; 0400DB
	nop                            ; 044B2A || 	nop                            ; 0400DC
	nop                            ; 044B2B || 	nop                            ; 0400DD
	nop                            ; 044B2C || 	nop                            ; 0400DE
	nop                            ; 044B2D || 	nop                            ; 0400DF
	nop                            ; 044B2E || 	nop                            ; 0400E0
	nop                            ; 044B2F || 	nop                            ; 0400E1
	nop                            ; 044B30 || 	nop                            ; 0400E2
	nop                            ; 044B31 || 	nop                            ; 0400E3
	nop                            ; 044B32 || 	nop                            ; 0400E4
	nop                            ; 044B33 || 	nop                            ; 0400E5
	nop                            ; 044B34 || 	nop                            ; 0400E6
	nop                            ; 044B35 || 	nop                            ; 0400E7
	nop                            ; 044B36 || 	nop                            ; 0400E8
	nop                            ; 044B37 || 	nop                            ; 0400E9
	nop                            ; 044B38 || 	nop                            ; 0400DA
	nop                            ; 044B39 || 	nop                            ; 0400DB
	nop                            ; 044B3A || 	nop                            ; 0400DC
	nop                            ; 044B3B || 	nop                            ; 0400DD
	nop                            ; 044B3C || 	nop                            ; 0400DE
	nop                            ; 044B3D || 	nop                            ; 0400DF
	nop                            ; 044B3E || 	nop                            ; 0400E0
	nop                            ; 044B3F || 	nop                            ; 0400E1
	nop                            ; 044B40 || 	nop                            ; 0400E2
	nop                            ; 044B41 || 	nop                            ; 0400E3
	nop                            ; 044B42 || 	nop                            ; 0400E4
	nop                            ; 044B43 || 	nop                            ; 0400E5
	nop                            ; 044B44 || 	nop                            ; 0400E6
	nop                            ; 044B45 || 	nop                            ; 0400E7
	nop                            ; 044B46 || 	nop                            ; 0400E8
	nop                            ; 044B47 || 	nop                            ; 0400E9
	nop                            ; 044B48 || 	nop                            ; 0400DA
	nop                            ; 044B49 || 	nop                            ; 0400DB
	nop                            ; 044B4A || 	nop                            ; 0400DC
	nop                            ; 044B4B || 	nop                            ; 0400DD
	nop                            ; 044B4C || 	nop                            ; 0400DE
	nop                            ; 044B4D || 	nop                            ; 0400DF
	nop                            ; 044B4E || 	nop                            ; 0400E0
	nop                            ; 044B4F || 	nop                            ; 0400E1
	nop                            ; 044B50 || 	nop                            ; 0400E2
	nop                            ; 044B51 || 	nop                            ; 0400E3
	nop                            ; 044B52 || 	nop                            ; 0400E4
	nop                            ; 044B53 || 	nop                            ; 0400E5
	nop                            ; 044B54 || 	nop                            ; 0400E6
	nop                            ; 044B55 || 	nop                            ; 0400E7
	nop                            ; 044B56 || 	nop                            ; 0400E8
	nop                            ; 044B57 || 	nop                            ; 0400E9
	nop                            ; 044B58 || 	nop                            ; 0400DA
	nop                            ; 044B59 || 	nop                            ; 0400DB
	nop                            ; 044B5A || 	nop                            ; 0400DC
	nop                            ; 044B5B || 	nop                            ; 0400DD
	nop                            ; 044B5C || 	nop                            ; 0400DE
	nop                            ; 044B5D || 	nop                            ; 0400DF
	nop                            ; 044B5E || 	nop                            ; 0400E0
	nop                            ; 044B5F || 	nop                            ; 0400E1
	nop                            ; 044B60 || 	nop                            ; 0400E2
	nop                            ; 044B61 || 	nop                            ; 0400E3
	nop                            ; 044B62 || 	nop                            ; 0400E4
	nop                            ; 044B63 || 	nop                            ; 0400E5
	nop                            ; 044B64 || 	nop                            ; 0400E6
	nop                            ; 044B65 || 	nop                            ; 0400E7
	nop                            ; 044B66 || 	nop                            ; 0400E8
	nop                            ; 044B67 || 	nop                            ; 0400E9
	nop                            ; 044B68 || 	nop                            ; 0400DA
	nop                            ; 044B69 || 	nop                            ; 0400DB
	nop                            ; 044B6A || 	nop                            ; 0400DC
	nop                            ; 044B6B || 	nop                            ; 0400DD
	nop                            ; 044B6C || 	nop                            ; 0400DE
	nop                            ; 044B6D || 	nop                            ; 0400DF
	nop                            ; 044B6E || 	nop                            ; 0400E0
	nop                            ; 044B6F || 	nop                            ; 0400E1
	nop                            ; 044B70 || 	nop                            ; 0400E2
	nop                            ; 044B71 || 	nop                            ; 0400E3
	nop                            ; 044B72 || 	nop                            ; 0400E4
	nop                            ; 044B73 || 	nop                            ; 0400E5
	nop                            ; 044B74 || 	nop                            ; 0400E6
	nop                            ; 044B75 || 	nop                            ; 0400E7
	nop                            ; 044B76 || 	nop                            ; 0400E8
	nop                            ; 044B77 || 	nop                            ; 0400E9
	nop                            ; 044B78 || 	nop                            ; 0400DA
	nop                            ; 044B79 || 	nop                            ; 0400DB
	nop                            ; 044B7A || 	nop                            ; 0400DC
	nop                            ; 044B7B || 	nop                            ; 0400DD
	nop                            ; 044B7C || 	nop                            ; 0400DE
	nop                            ; 044B7D || 	nop                            ; 0400DF
	nop                            ; 044B7E || 	nop                            ; 0400E0
	nop                            ; 044B7F || 	nop                            ; 0400E1
	nop                            ; 044B80 || 	nop                            ; 0400E2
	nop                            ; 044B81 || 	nop                            ; 0400E3
	nop                            ; 044B82 || 	nop                            ; 0400E4
	nop                            ; 044B83 || 	nop                            ; 0400E5
	nop                            ; 044B84 || 	nop                            ; 0400E6
	nop                            ; 044B85 || 	nop                            ; 0400E7
	nop                            ; 044B86 || 	nop                            ; 0400E8
	nop                            ; 044B87 || 	nop                            ; 0400E9
	nop                            ; 044B88 || 	nop                            ; 0400DA
	nop                            ; 044B89 || 	nop                            ; 0400DB
	nop                            ; 044B8A || 	nop                            ; 0400DC
	nop                            ; 044B8B || 	nop                            ; 0400DD
	nop                            ; 044B8C || 	nop                            ; 0400DE
	nop                            ; 044B8D || 	nop                            ; 0400DF
	nop                            ; 044B8E || 	nop                            ; 0400E0
	nop                            ; 044B8F || 	nop                            ; 0400E1
	nop                            ; 044B90 || 	nop                            ; 0400E2
	nop                            ; 044B91 || 	nop                            ; 0400E3
	nop                            ; 044B92 || 	nop                            ; 0400E4
	nop                            ; 044B93 || 	nop                            ; 0400E5
	nop                            ; 044B94 || 	nop                            ; 0400E6
	nop                            ; 044B95 || 	nop                            ; 0400E7
	nop                            ; 044B96 || 	nop                            ; 0400E8
	nop                            ; 044B97 || 	nop                            ; 0400E9
	nop                            ; 044B98 || 	nop                            ; 0400DA
	nop                            ; 044B99 || 	nop                            ; 0400DB
	nop                            ; 044B9A || 	nop                            ; 0400DC
	nop                            ; 044B9B || 	nop                            ; 0400DD
	nop                            ; 044B9C || 	nop                            ; 0400DE
	nop                            ; 044B9D || 	nop                            ; 0400DF
	nop                            ; 044B9E || 	nop                            ; 0400E0
	nop                            ; 044B9F || 	nop                            ; 0400E1
	nop                            ; 044BA0 || 	nop                            ; 0400E2
	nop                            ; 044BA1 || 	nop                            ; 0400E3
	nop                            ; 044BA2 || 	nop                            ; 0400E4
	nop                            ; 044BA3 || 	nop                            ; 0400E5
	nop                            ; 044BA4 || 	nop                            ; 0400E6
	nop                            ; 044BA5 || 	nop                            ; 0400E7
	nop                            ; 044BA6 || 	nop                            ; 0400E8
	nop                            ; 044BA7 || 	nop                            ; 0400E9
	nop                            ; 044BA8 || 	nop                            ; 0400DA
	nop                            ; 044BA9 || 	nop                            ; 0400DB
	nop                            ; 044BAA || 	nop                            ; 0400DC
	nop                            ; 044BAB || 	nop                            ; 0400DD
	nop                            ; 044BAC || 	nop                            ; 0400DE
	nop                            ; 044BAD || 	nop                            ; 0400DF
	nop                            ; 044BAE || 	nop                            ; 0400E0
	nop                            ; 044BAF || 	nop                            ; 0400E1
	nop                            ; 044BB0 || 	nop                            ; 0400E2
	nop                            ; 044BB1 || 	nop                            ; 0400E3
	nop                            ; 044BB2 || 	nop                            ; 0400E4
	nop                            ; 044BB3 || 	nop                            ; 0400E5
	nop                            ; 044BB4 || 	nop                            ; 0400E6
	nop                            ; 044BB5 || 	nop                            ; 0400E7
	nop                            ; 044BB6 || 	nop                            ; 0400E8
	nop                            ; 044BB7 || 	nop                            ; 0400E9
	nop                            ; 044BB8 || 	nop                            ; 0400DA
	nop                            ; 044BB9 || 	nop                            ; 0400DB
	nop                            ; 044BBA || 	nop                            ; 0400DC
	nop                            ; 044BBB || 	nop                            ; 0400DD
	nop                            ; 044BBC || 	nop                            ; 0400DE
	nop                            ; 044BBD || 	nop                            ; 0400DF
	nop                            ; 044BBE || 	nop                            ; 0400E0
	nop                            ; 044BBF || 	nop                            ; 0400E1
	nop                            ; 044BC0 || 	nop                            ; 0400E2
	nop                            ; 044BC1 || 	nop                            ; 0400E3
	nop                            ; 044BC2 || 	nop                            ; 0400E4
	nop                            ; 044BC3 || 	nop                            ; 0400E5
	nop                            ; 044BC4 || 	nop                            ; 0400E6
	nop                            ; 044BC5 || 	nop                            ; 0400E7
	nop                            ; 044BC6 || 	nop                            ; 0400E8
	nop                            ; 044BC7 || 	nop                            ; 0400E9
	nop                            ; 044BC8 || 	nop                            ; 0400DA
	nop                            ; 044BC9 || 	nop                            ; 0400DB
	nop                            ; 044BCA || 	nop                            ; 0400DC
	nop                            ; 044BCB || 	nop                            ; 0400DD
	nop                            ; 044BCC || 	nop                            ; 0400DE
	nop                            ; 044BCD || 	nop                            ; 0400DF
	nop                            ; 044BCE || 	nop                            ; 0400E0
	nop                            ; 044BCF || 	nop                            ; 0400E1
	nop                            ; 044BD0 || 	nop                            ; 0400E2
	nop                            ; 044BD1 || 	nop                            ; 0400E3
	nop                            ; 044BD2 || 	nop                            ; 0400E4
	nop                            ; 044BD3 || 	nop                            ; 0400E5
	nop                            ; 044BD4 || 	nop                            ; 0400E6
	nop                            ; 044BD5 || 	nop                            ; 0400E7
	nop                            ; 044BD6 || 	nop                            ; 0400E8
	nop                            ; 044BD7 || 	nop                            ; 0400E9
	nop                            ; 044BD8 || 	nop                            ; 0400DA
	nop                            ; 044BD9 || 	nop                            ; 0400DB
	nop                            ; 044BDA || 	nop                            ; 0400DC
	nop                            ; 044BDB || 	nop                            ; 0400DD
	nop                            ; 044BDC || 	nop                            ; 0400DE
	nop                            ; 044BDD || 	nop                            ; 0400DF
	nop                            ; 044BDE || 	nop                            ; 0400E0
	nop                            ; 044BDF || 	nop                            ; 0400E1
	nop                            ; 044BE0 || 	nop                            ; 0400E2
	nop                            ; 044BE1 || 	nop                            ; 0400E3
	nop                            ; 044BE2 || 	nop                            ; 0400E4
	nop                            ; 044BE3 || 	nop                            ; 0400E5
	nop                            ; 044BE4 || 	nop                            ; 0400E6
	nop                            ; 044BE5 || 	nop                            ; 0400E7
	nop                            ; 044BE6 || 	nop                            ; 0400E8
	nop                            ; 044BE7 || 	nop                            ; 0400E9
	nop                            ; 044BE8 || 	nop                            ; 0400DA
	nop                            ; 044BE9 || 	nop                            ; 0400DB
	nop                            ; 044BEA || 	nop                            ; 0400DC
	nop                            ; 044BEB || 	nop                            ; 0400DD
	nop                            ; 044BEC || 	nop                            ; 0400DE
	nop                            ; 044BED || 	nop                            ; 0400DF
	nop                            ; 044BEE || 	nop                            ; 0400E0
	nop                            ; 044BEF || 	nop                            ; 0400E1
	nop                            ; 044BF0 || 	nop                            ; 0400E2
	nop                            ; 044BF1 || 	nop                            ; 0400E3
	nop                            ; 044BF2 || 	nop                            ; 0400E4
	nop                            ; 044BF3 || 	nop                            ; 0400E5
	nop                            ; 044BF4 || 	nop                            ; 0400E6
	nop                            ; 044BF5 || 	nop                            ; 0400E7
	nop                            ; 044BF6 || 	nop                            ; 0400E8
	nop                            ; 044BF7 || 	nop                            ; 0400E9
	nop                            ; 044BF8 || 	nop                            ; 0400DA
	nop                            ; 044BF9 || 	nop                            ; 0400DB
	nop                            ; 044BFA || 	nop                            ; 0400DC
	nop                            ; 044BFB || 	nop                            ; 0400DD
	nop                            ; 044BFC || 	nop                            ; 0400DE
	nop                            ; 044BFD || 	nop                            ; 0400DF
	nop                            ; 044BFE || 	nop                            ; 0400E0
	nop                            ; 044BFF || 	nop                            ; 0400E1
	nop                            ; 044C00 || 	nop                            ; 0400E2 || 044C00 00 00 00 00 11807  STAVAR:         BLKB    27*4,0            ; Static Variables
	nop                            ; 044C01 || 	nop                            ; 0400E3
	nop                            ; 044C02 || 	nop                            ; 0400E4
	nop                            ; 044C03 || 	nop                            ; 0400E5
	nop                            ; 044C04 || 	nop                            ; 0400E6
	nop                            ; 044C05 || 	nop                            ; 0400E7
	nop                            ; 044C06 || 	nop                            ; 0400E8
	nop                            ; 044C07 || 	nop                            ; 0400E9
	nop                            ; 044C08 || 	nop                            ; 0400DA
	nop                            ; 044C09 || 	nop                            ; 0400DB
	nop                            ; 044C0A || 	nop                            ; 0400DC
	nop                            ; 044C0B || 	nop                            ; 0400DD
	nop                            ; 044C0C || 	nop                            ; 0400DE
	nop                            ; 044C0D || 	nop                            ; 0400DF
	nop                            ; 044C0E || 	nop                            ; 0400E0
	nop                            ; 044C0F || 	nop                            ; 0400E1
	nop                            ; 044C10 || 	nop                            ; 0400E2
	nop                            ; 044C11 || 	nop                            ; 0400E3
	nop                            ; 044C12 || 	nop                            ; 0400E4
	nop                            ; 044C13 || 	nop                            ; 0400E5
	nop                            ; 044C14 || 	nop                            ; 0400E6
	nop                            ; 044C15 || 	nop                            ; 0400E7
	nop                            ; 044C16 || 	nop                            ; 0400E8
	nop                            ; 044C17 || 	nop                            ; 0400E9
	nop                            ; 044C18 || 	nop                            ; 0400DA
	nop                            ; 044C19 || 	nop                            ; 0400DB
	nop                            ; 044C1A || 	nop                            ; 0400DC
	nop                            ; 044C1B || 	nop                            ; 0400DD
	nop                            ; 044C1C || 	nop                            ; 0400DE
	nop                            ; 044C1D || 	nop                            ; 0400DF
	nop                            ; 044C1E || 	nop                            ; 0400E0
	nop                            ; 044C1F || 	nop                            ; 0400E1
	nop                            ; 044C20 || 	nop                            ; 0400E2
	nop                            ; 044C21 || 	nop                            ; 0400E3
	nop                            ; 044C22 || 	nop                            ; 0400E4
	nop                            ; 044C23 || 	nop                            ; 0400E5
	nop                            ; 044C24 || 	nop                            ; 0400E6
	nop                            ; 044C25 || 	nop                            ; 0400E7
	nop                            ; 044C26 || 	nop                            ; 0400E8
	nop                            ; 044C27 || 	nop                            ; 0400E9
	nop                            ; 044C28 || 	nop                            ; 0400DA
	nop                            ; 044C29 || 	nop                            ; 0400DB
	nop                            ; 044C2A || 	nop                            ; 0400DC
	nop                            ; 044C2B || 	nop                            ; 0400DD
	nop                            ; 044C2C || 	nop                            ; 0400DE
	nop                            ; 044C2D || 	nop                            ; 0400DF
	nop                            ; 044C2E || 	nop                            ; 0400E0
	nop                            ; 044C2F || 	nop                            ; 0400E1
	nop                            ; 044C30 || 	nop                            ; 0400E2
	nop                            ; 044C31 || 	nop                            ; 0400E3
	nop                            ; 044C32 || 	nop                            ; 0400E4
	nop                            ; 044C33 || 	nop                            ; 0400E5
	nop                            ; 044C34 || 	nop                            ; 0400E6
	nop                            ; 044C35 || 	nop                            ; 0400E7
	nop                            ; 044C36 || 	nop                            ; 0400E8
	nop                            ; 044C37 || 	nop                            ; 0400E9
	nop                            ; 044C38 || 	nop                            ; 0400DA
	nop                            ; 044C39 || 	nop                            ; 0400DB
	nop                            ; 044C3A || 	nop                            ; 0400DC
	nop                            ; 044C3B || 	nop                            ; 0400DD
	nop                            ; 044C3C || 	nop                            ; 0400DE
	nop                            ; 044C3D || 	nop                            ; 0400DF
	nop                            ; 044C3E || 	nop                            ; 0400E0
	nop                            ; 044C3F || 	nop                            ; 0400E1
	nop                            ; 044C40 || 	nop                            ; 0400E2
	nop                            ; 044C41 || 	nop                            ; 0400E3
	nop                            ; 044C42 || 	nop                            ; 0400E4
	nop                            ; 044C43 || 	nop                            ; 0400E5
	nop                            ; 044C44 || 	nop                            ; 0400E6
	nop                            ; 044C45 || 	nop                            ; 0400E7
	nop                            ; 044C46 || 	nop                            ; 0400E8
	nop                            ; 044C47 || 	nop                            ; 0400E9
	nop                            ; 044C48 || 	nop                            ; 0400DA
	nop                            ; 044C49 || 	nop                            ; 0400DB
	nop                            ; 044C4A || 	nop                            ; 0400DC
	nop                            ; 044C4B || 	nop                            ; 0400DD
	nop                            ; 044C4C || 	nop                            ; 0400DE
	nop                            ; 044C4D || 	nop                            ; 0400DF
	nop                            ; 044C4E || 	nop                            ; 0400E0
	nop                            ; 044C4F || 	nop                            ; 0400E1
	nop                            ; 044C50 || 	nop                            ; 0400E2
	nop                            ; 044C51 || 	nop                            ; 0400E3
	nop                            ; 044C52 || 	nop                            ; 0400E4
	nop                            ; 044C53 || 	nop                            ; 0400E5
	nop                            ; 044C54 || 	nop                            ; 0400E6
	nop                            ; 044C55 || 	nop                            ; 0400E7
	nop                            ; 044C56 || 	nop                            ; 0400E8
	nop                            ; 044C57 || 	nop                            ; 0400E9
	nop                            ; 044C58 || 	nop                            ; 0400DA
	nop                            ; 044C59 || 	nop                            ; 0400DB
	nop                            ; 044C5A || 	nop                            ; 0400DC
	nop                            ; 044C5B || 	nop                            ; 0400DD
	nop                            ; 044C5C || 	nop                            ; 0400DE
	nop                            ; 044C5D || 	nop                            ; 0400DF
	nop                            ; 044C5E || 	nop                            ; 0400E0
	nop                            ; 044C5F || 	nop                            ; 0400E1
	nop                            ; 044C60 || 	nop                            ; 0400E2
	nop                            ; 044C61 || 	nop                            ; 0400E3
	nop                            ; 044C62 || 	nop                            ; 0400E4
	nop                            ; 044C63 || 	nop                            ; 0400E5
	nop                            ; 044C64 || 	nop                            ; 0400E6
	nop                            ; 044C65 || 	nop                            ; 0400E7
	nop                            ; 044C66 || 	nop                            ; 0400E8
	nop                            ; 044C67 || 	nop                            ; 0400E9
	nop                            ; 044C68 || 	nop                            ; 0400DA
	nop                            ; 044C69 || 	nop                            ; 0400DB
	nop                            ; 044C6A || 	nop                            ; 0400DC
	nop                            ; 044C6B || 	nop                            ; 0400DD
	nop                            ; 044C6C || 	nop                            ; 0400DE || 044C6C 00 00 00 00 11808  DYNVAR:         BLKB    54*3,0            ; Dynamic Variable Pointers
	nop                            ; 044C6D || 	nop                            ; 0400DF
	nop                            ; 044C6E || 	nop                            ; 0400E0
	nop                            ; 044C6F || 	nop                            ; 0400E1
	nop                            ; 044C70 || 	nop                            ; 0400E2
	nop                            ; 044C71 || 	nop                            ; 0400E3
	nop                            ; 044C72 || 	nop                            ; 0400E4
	nop                            ; 044C73 || 	nop                            ; 0400E5
	nop                            ; 044C74 || 	nop                            ; 0400E6
	nop                            ; 044C75 || 	nop                            ; 0400E7
	nop                            ; 044C76 || 	nop                            ; 0400E8
	nop                            ; 044C77 || 	nop                            ; 0400E9
	nop                            ; 044C78 || 	nop                            ; 0400DA
	nop                            ; 044C79 || 	nop                            ; 0400DB
	nop                            ; 044C7A || 	nop                            ; 0400DC
	nop                            ; 044C7B || 	nop                            ; 0400DD
	nop                            ; 044C7C || 	nop                            ; 0400DE
	nop                            ; 044C7D || 	nop                            ; 0400DF
	nop                            ; 044C7E || 	nop                            ; 0400E0
	nop                            ; 044C7F || 	nop                            ; 0400E1
	nop                            ; 044C80 || 	nop                            ; 0400E2
	nop                            ; 044C81 || 	nop                            ; 0400E3
	nop                            ; 044C82 || 	nop                            ; 0400E4
	nop                            ; 044C83 || 	nop                            ; 0400E5
	nop                            ; 044C84 || 	nop                            ; 0400E6
	nop                            ; 044C85 || 	nop                            ; 0400E7
	nop                            ; 044C86 || 	nop                            ; 0400E8
	nop                            ; 044C87 || 	nop                            ; 0400E9
	nop                            ; 044C88 || 	nop                            ; 0400DA
	nop                            ; 044C89 || 	nop                            ; 0400DB
	nop                            ; 044C8A || 	nop                            ; 0400DC
	nop                            ; 044C8B || 	nop                            ; 0400DD
	nop                            ; 044C8C || 	nop                            ; 0400DE
	nop                            ; 044C8D || 	nop                            ; 0400DF
	nop                            ; 044C8E || 	nop                            ; 0400E0
	nop                            ; 044C8F || 	nop                            ; 0400E1
	nop                            ; 044C90 || 	nop                            ; 0400E2
	nop                            ; 044C91 || 	nop                            ; 0400E3
	nop                            ; 044C92 || 	nop                            ; 0400E4
	nop                            ; 044C93 || 	nop                            ; 0400E5
	nop                            ; 044C94 || 	nop                            ; 0400E6
	nop                            ; 044C95 || 	nop                            ; 0400E7
	nop                            ; 044C96 || 	nop                            ; 0400E8
	nop                            ; 044C97 || 	nop                            ; 0400E9
	nop                            ; 044C98 || 	nop                            ; 0400DA
	nop                            ; 044C99 || 	nop                            ; 0400DB
	nop                            ; 044C9A || 	nop                            ; 0400DC
	nop                            ; 044C9B || 	nop                            ; 0400DD
	nop                            ; 044C9C || 	nop                            ; 0400DE
	nop                            ; 044C9D || 	nop                            ; 0400DF
	nop                            ; 044C9E || 	nop                            ; 0400E0
	nop                            ; 044C9F || 	nop                            ; 0400E1
	nop                            ; 044CA0 || 	nop                            ; 0400E2
	nop                            ; 044CA1 || 	nop                            ; 0400E3
	nop                            ; 044CA2 || 	nop                            ; 0400E4
	nop                            ; 044CA3 || 	nop                            ; 0400E5
	nop                            ; 044CA4 || 	nop                            ; 0400E6
	nop                            ; 044CA5 || 	nop                            ; 0400E7
	nop                            ; 044CA6 || 	nop                            ; 0400E8
	nop                            ; 044CA7 || 	nop                            ; 0400E9
	nop                            ; 044CA8 || 	nop                            ; 0400DA
	nop                            ; 044CA9 || 	nop                            ; 0400DB
	nop                            ; 044CAA || 	nop                            ; 0400DC
	nop                            ; 044CAB || 	nop                            ; 0400DD
	nop                            ; 044CAC || 	nop                            ; 0400DE
	nop                            ; 044CAD || 	nop                            ; 0400DF
	nop                            ; 044CAE || 	nop                            ; 0400E0
	nop                            ; 044CAF || 	nop                            ; 0400E1
	nop                            ; 044CB0 || 	nop                            ; 0400E2
	nop                            ; 044CB1 || 	nop                            ; 0400E3
	nop                            ; 044CB2 || 	nop                            ; 0400E4
	nop                            ; 044CB3 || 	nop                            ; 0400E5
	nop                            ; 044CB4 || 	nop                            ; 0400E6
	nop                            ; 044CB5 || 	nop                            ; 0400E7
	nop                            ; 044CB6 || 	nop                            ; 0400E8
	nop                            ; 044CB7 || 	nop                            ; 0400E9
	nop                            ; 044CB8 || 	nop                            ; 0400DA
	nop                            ; 044CB9 || 	nop                            ; 0400DB
	nop                            ; 044CBA || 	nop                            ; 0400DC
	nop                            ; 044CBB || 	nop                            ; 0400DD
	nop                            ; 044CBC || 	nop                            ; 0400DE
	nop                            ; 044CBD || 	nop                            ; 0400DF
	nop                            ; 044CBE || 	nop                            ; 0400E0
	nop                            ; 044CBF || 	nop                            ; 0400E1
	nop                            ; 044CC0 || 	nop                            ; 0400E2
	nop                            ; 044CC1 || 	nop                            ; 0400E3
	nop                            ; 044CC2 || 	nop                            ; 0400E4
	nop                            ; 044CC3 || 	nop                            ; 0400E5
	nop                            ; 044CC4 || 	nop                            ; 0400E6
	nop                            ; 044CC5 || 	nop                            ; 0400E7
	nop                            ; 044CC6 || 	nop                            ; 0400E8
	nop                            ; 044CC7 || 	nop                            ; 0400E9
	nop                            ; 044CC8 || 	nop                            ; 0400DA
	nop                            ; 044CC9 || 	nop                            ; 0400DB
	nop                            ; 044CCA || 	nop                            ; 0400DC
	nop                            ; 044CCB || 	nop                            ; 0400DD
	nop                            ; 044CCC || 	nop                            ; 0400DE
	nop                            ; 044CCD || 	nop                            ; 0400DF
	nop                            ; 044CCE || 	nop                            ; 0400E0
	nop                            ; 044CCF || 	nop                            ; 0400E1
	nop                            ; 044CD0 || 	nop                            ; 0400E2
	nop                            ; 044CD1 || 	nop                            ; 0400E3
	nop                            ; 044CD2 || 	nop                            ; 0400E4
	nop                            ; 044CD3 || 	nop                            ; 0400E5
	nop                            ; 044CD4 || 	nop                            ; 0400E6
	nop                            ; 044CD5 || 	nop                            ; 0400E7
	nop                            ; 044CD6 || 	nop                            ; 0400E8
	nop                            ; 044CD7 || 	nop                            ; 0400E9
	nop                            ; 044CD8 || 	nop                            ; 0400DA
	nop                            ; 044CD9 || 	nop                            ; 0400DB
	nop                            ; 044CDA || 	nop                            ; 0400DC
	nop                            ; 044CDB || 	nop                            ; 0400DD
	nop                            ; 044CDC || 	nop                            ; 0400DE
	nop                            ; 044CDD || 	nop                            ; 0400DF
	nop                            ; 044CDE || 	nop                            ; 0400E0
	nop                            ; 044CDF || 	nop                            ; 0400E1
	nop                            ; 044CE0 || 	nop                            ; 0400E2
	nop                            ; 044CE1 || 	nop                            ; 0400E3
	nop                            ; 044CE2 || 	nop                            ; 0400E4
	nop                            ; 044CE3 || 	nop                            ; 0400E5
	nop                            ; 044CE4 || 	nop                            ; 0400E6
	nop                            ; 044CE5 || 	nop                            ; 0400E7
	nop                            ; 044CE6 || 	nop                            ; 0400E8
	nop                            ; 044CE7 || 	nop                            ; 0400E9
	nop                            ; 044CE8 || 	nop                            ; 0400DA
	nop                            ; 044CE9 || 	nop                            ; 0400DB
	nop                            ; 044CEA || 	nop                            ; 0400DC
	nop                            ; 044CEB || 	nop                            ; 0400DD
	nop                            ; 044CEC || 	nop                            ; 0400DE
	nop                            ; 044CED || 	nop                            ; 0400DF
	nop                            ; 044CEE || 	nop                            ; 0400E0
	nop                            ; 044CEF || 	nop                            ; 0400E1
	nop                            ; 044CF0 || 	nop                            ; 0400E2
	nop                            ; 044CF1 || 	nop                            ; 0400E3
	nop                            ; 044CF2 || 	nop                            ; 0400E4
	nop                            ; 044CF3 || 	nop                            ; 0400E5
	nop                            ; 044CF4 || 	nop                            ; 0400E6
	nop                            ; 044CF5 || 	nop                            ; 0400E7
	nop                            ; 044CF6 || 	nop                            ; 0400E8
	nop                            ; 044CF7 || 	nop                            ; 0400E9
	nop                            ; 044CF8 || 	nop                            ; 0400DA
	nop                            ; 044CF9 || 	nop                            ; 0400DB
	nop                            ; 044CFA || 	nop                            ; 0400DC
	nop                            ; 044CFB || 	nop                            ; 0400DD
	nop                            ; 044CFC || 	nop                            ; 0400DE
	nop                            ; 044CFD || 	nop                            ; 0400DF
	nop                            ; 044CFE || 	nop                            ; 0400E0
	nop                            ; 044CFF || 	nop                            ; 0400E1
	nop                            ; 044D00 || 	nop                            ; 0400E2
	nop                            ; 044D01 || 	nop                            ; 0400E3
	nop                            ; 044D02 || 	nop                            ; 0400E4
	nop                            ; 044D03 || 	nop                            ; 0400E5
	nop                            ; 044D04 || 	nop                            ; 0400E6
	nop                            ; 044D05 || 	nop                            ; 0400E7
	nop                            ; 044D06 || 	nop                            ; 0400E8
	nop                            ; 044D07 || 	nop                            ; 0400E9
	nop                            ; 044D08 || 	nop                            ; 0400DA
	nop                            ; 044D09 || 	nop                            ; 0400DB
	nop                            ; 044D0A || 	nop                            ; 0400DC
	nop                            ; 044D0B || 	nop                            ; 0400DD
	nop                            ; 044D0C || 	nop                            ; 0400DE
	nop                            ; 044D0D || 	nop                            ; 0400DF
	nop                            ; 044D0E || 	nop                            ; 0400E0 || 044D0E 00 00 00    11809  FNPTR:          BLKB    3,0               ; Dynamic Function Pointers
	nop                            ; 044D0F || 	nop                            ; 0400E1
	nop                            ; 044D10 || 	nop                            ; 0400E2
	nop                            ; 044D11 || 	nop                            ; 0400E3 || 044D11 00 00 00    11810  PROPTR:         BLKB    3,0               ; Dynamic Procedure Pointers
	nop                            ; 044D12 || 	nop                            ; 0400E4
	nop                            ; 044D13 || 	nop                            ; 0400E5
	nop                            ; 044D14 || 	nop                            ; 0400E6 || 044D14 00 00 00    11812  PAGE_:          BLKB    3,0               ; Start of User Program
	nop                            ; 044D15 || 	nop                            ; 0400E7
	nop                            ; 044D16 || 	nop                            ; 0400E8
	nop                            ; 044D17 || 	nop                            ; 0400E9 || 044D17 00 00 00    11813  TOP:            BLKB    3,0               ; First Location after User Program
	nop                            ; 044D18 || 	nop                            ; 0400DA
	nop                            ; 044D19 || 	nop                            ; 0400DB
	nop                            ; 044D1A || 	nop                            ; 0400DC || 044D1A 00 00 00    11814  LOMEM:          BLKB    3,0               ; Start of Dynamic Storage
	nop                            ; 044D1B || 	nop                            ; 0400DD
	nop                            ; 044D1C || 	nop                            ; 0400DE
	nop                            ; 044D1D || 	nop                            ; 0400DF || 044D1D 00 00 00    11815  FREE:           BLKB    3,0               ; First Free Space Byte
	nop                            ; 044D1E || 	nop                            ; 0400E0
	nop                            ; 044D1F || 	nop                            ; 0400E1
	nop                            ; 044D20 || 	nop                            ; 0400E2 || 044D20 00 00 00    11816  HIMEM:          BLKB    3,0               ; First Protected Byte
	nop                            ; 044D21 || 	nop                            ; 0400E3
	nop                            ; 044D22 || 	nop                            ; 0400E4
	nop                            ; 044D23 || 	nop                            ; 0400E5 || 044D23 00 00 00    11818  LINENO:         BLKB    3,0               ; Line Number
	nop                            ; 044D24 || 	nop                            ; 0400E6
	nop                            ; 044D25 || 	nop                            ; 0400E7
	nop                            ; 044D26 || 	nop                            ; 0400E8 || 044D26 00 00 00    11819  TRACEN:         BLKB    3,0               ; Trace Flag
	nop                            ; 044D27 || 	nop                            ; 0400E9
	nop                            ; 044D28 || 	nop                            ; 0400DA
	nop                            ; 044D29 || 	nop                            ; 0400DB || 044D29 00 00 00    11820  AUTONO:         BLKB    3,0               ; Auto Flag
	nop                            ; 044D2A || 	nop                            ; 0400DC
	nop                            ; 044D2B || 	nop                            ; 0400DD
	nop                            ; 044D2C || 	nop                            ; 0400DE || 044D2C 00 00 00    11821  ERRTRP:         BLKB    3,0               ; Error Trap
	nop                            ; 044D2D || 	nop                            ; 0400DF
	nop                            ; 044D2E || 	nop                            ; 0400E0
	nop                            ; 044D2F || 	nop                            ; 0400E1 || 044D2F 00 00       11822  ERRTXT:         BLKB    2,0               ; Error Message Pointer
	nop                            ; 044D30 || 	nop                            ; 0400E2
	nop                            ; 044D31 || 	nop                            ; 0400E3 || 044D31 00 00       11823  DATPTR:         BLKB    2,0               ; Data Pointer
	nop                            ; 044D32 || 	nop                            ; 0400E4
	nop                            ; 044D33 || 	nop                            ; 0400E5 || 044D33 00 00       11824  ERL:            BLKB    2,0               ; Error Line
	nop                            ; 044D34 || 	nop                            ; 0400E6
	nop                            ; 044D35 || 	nop                            ; 0400E7 || 044D35 00 00 00    11825  ERRLIN:         BLKB    3,0               ; The "ON ERROR" Line
	nop                            ; 044D36 || 	nop                            ; 0400E8
	nop                            ; 044D37 || 	nop                            ; 0400E9
	nop                            ; 044D38 || 	nop                            ; 0400DA || 044D38 00 00 00 00 11826  RANDOM:         BLKB    5,0               ; Random Number
	nop                            ; 044D39 || 	nop                            ; 0400DB
	nop                            ; 044D3A || 	nop                            ; 0400DC
	nop                            ; 044D3B || 	nop                            ; 0400DD
	nop                            ; 044D3C || 	nop                            ; 0400DE
	nop                            ; 044D3D || 	nop                            ; 0400DF || 044D3D 00          11827  COUNT:          BLKB    1,0               ; Print Position
	nop                            ; 044D3E || 	nop                            ; 0400E0 || 044D3E 00          11828  WIDTH:          BLKB    1,0               ; Print Width
	nop                            ; 044D3F || 	nop                            ; 0400E1 || 044D3F 00          11829  ERR:            BLKB    1,0               ; Error Number
	nop                            ; 044D40 || 	nop                            ; 0400E2 || 044D40 00          11830  LISTON:         BLKB    1,0               ; LISTO (bottom nibble)
	nop                            ; 044D41 || 	nop                            ; 0400E3 || 044D41 00          11840  INCREM:         BLKB    1,0               ; Auto-Increment Value
	nop                            ; 044D42 || 	nop                            ; 0400E4 || 044D42 00          11844  FLAGS:          BLKB    1,0       ; Miscellaneous flags
	nop                            ; 044D43 || 	nop                            ; 0400E5 || 044D43 00 00       11847  OSWRCHPT:       BLKB    2,0       ; Pointer for *EDIT
	nop                            ; 044D44 || 	nop                            ; 0400E6
	nop                            ; 044D45 || 	nop                            ; 0400E7 || 044D45 00          11848  OSWRCHCH:       BLKB    1,0       ; Channel of OSWRCH
	nop                            ; 044D46 || 	nop                            ; 0400E8 || 044D46 00          11851  OSWRCHFH:       BLKB    1,0       ; File handle for OSWRCHCHN
	nop                            ; 044D47 || 	nop                            ; 0400E9 || 044D47 00          11852  KEYDOWN:        BLKB    1,0       ; Keydown flag
	nop                            ; 044D48 || 	nop                            ; 0400DA || 044D48 00          11853  KEYASCII:       BLKB    1,0       ; ASCII code of pressed key
	nop                            ; 044D49 || 	nop                            ; 0400DB || 044D49 00          11854  KEYCOUNT:       BLKB    1,0       ; Counts every time a key is pressed
	nop                            ; 044D4A || 	nop                            ; 0400DC || 044D4A 00 00 00    11855  R0:             BLKB    3,0       ; General purpose storage for 8/16 to 24 bit operations
	nop                            ; 044D4B || 	nop                            ; 0400DD
	nop                            ; 044D4C || 	nop                            ; 0400DE
	nop                            ; 044D4D || 	nop                            ; 0400DF || 044D4D 00 00 00    11856  R1:             BLKB    3,0
	nop                            ; 044D4E || 	nop                            ; 0400E0
	nop                            ; 044D4F || 	nop                            ; 0400E1
	nop                            ; 044D50 || 	nop                            ; 0400E2 || 044D50 00 00 00 00 11872  			ALIGN	256
	nop                            ; 044D51 || 	nop                            ; 0400E3
	nop                            ; 044D52 || 	nop                            ; 0400E4
	nop                            ; 044D53 || 	nop                            ; 0400E5
	nop                            ; 044D54 || 	nop                            ; 0400E6
	nop                            ; 044D55 || 	nop                            ; 0400E7
	nop                            ; 044D56 || 	nop                            ; 0400E8
	nop                            ; 044D57 || 	nop                            ; 0400E9
	nop                            ; 044D58 || 	nop                            ; 0400DA
	nop                            ; 044D59 || 	nop                            ; 0400DB
	nop                            ; 044D5A || 	nop                            ; 0400DC
	nop                            ; 044D5B || 	nop                            ; 0400DD
	nop                            ; 044D5C || 	nop                            ; 0400DE
	nop                            ; 044D5D || 	nop                            ; 0400DF
	nop                            ; 044D5E || 	nop                            ; 0400E0
	nop                            ; 044D5F || 	nop                            ; 0400E1
	nop                            ; 044D60 || 	nop                            ; 0400E2
	nop                            ; 044D61 || 	nop                            ; 0400E3
	nop                            ; 044D62 || 	nop                            ; 0400E4
	nop                            ; 044D63 || 	nop                            ; 0400E5
	nop                            ; 044D64 || 	nop                            ; 0400E6
	nop                            ; 044D65 || 	nop                            ; 0400E7
	nop                            ; 044D66 || 	nop                            ; 0400E8
	nop                            ; 044D67 || 	nop                            ; 0400E9
	nop                            ; 044D68 || 	nop                            ; 0400DA
	nop                            ; 044D69 || 	nop                            ; 0400DB
	nop                            ; 044D6A || 	nop                            ; 0400DC
	nop                            ; 044D6B || 	nop                            ; 0400DD
	nop                            ; 044D6C || 	nop                            ; 0400DE
	nop                            ; 044D6D || 	nop                            ; 0400DF
	nop                            ; 044D6E || 	nop                            ; 0400E0
	nop                            ; 044D6F || 	nop                            ; 0400E1
	nop                            ; 044D70 || 	nop                            ; 0400E2
	nop                            ; 044D71 || 	nop                            ; 0400E3
	nop                            ; 044D72 || 	nop                            ; 0400E4
	nop                            ; 044D73 || 	nop                            ; 0400E5
	nop                            ; 044D74 || 	nop                            ; 0400E6
	nop                            ; 044D75 || 	nop                            ; 0400E7
	nop                            ; 044D76 || 	nop                            ; 0400E8
	nop                            ; 044D77 || 	nop                            ; 0400E9
	nop                            ; 044D78 || 	nop                            ; 0400DA
	nop                            ; 044D79 || 	nop                            ; 0400DB
	nop                            ; 044D7A || 	nop                            ; 0400DC
	nop                            ; 044D7B || 	nop                            ; 0400DD
	nop                            ; 044D7C || 	nop                            ; 0400DE
	nop                            ; 044D7D || 	nop                            ; 0400DF
	nop                            ; 044D7E || 	nop                            ; 0400E0
	nop                            ; 044D7F || 	nop                            ; 0400E1
	nop                            ; 044D80 || 	nop                            ; 0400E2
	nop                            ; 044D81 || 	nop                            ; 0400E3
	nop                            ; 044D82 || 	nop                            ; 0400E4
	nop                            ; 044D83 || 	nop                            ; 0400E5
	nop                            ; 044D84 || 	nop                            ; 0400E6
	nop                            ; 044D85 || 	nop                            ; 0400E7
	nop                            ; 044D86 || 	nop                            ; 0400E8
	nop                            ; 044D87 || 	nop                            ; 0400E9
	nop                            ; 044D88 || 	nop                            ; 0400DA
	nop                            ; 044D89 || 	nop                            ; 0400DB
	nop                            ; 044D8A || 	nop                            ; 0400DC
	nop                            ; 044D8B || 	nop                            ; 0400DD
	nop                            ; 044D8C || 	nop                            ; 0400DE
	nop                            ; 044D8D || 	nop                            ; 0400DF
	nop                            ; 044D8E || 	nop                            ; 0400E0
	nop                            ; 044D8F || 	nop                            ; 0400E1
	nop                            ; 044D90 || 	nop                            ; 0400E2
	nop                            ; 044D91 || 	nop                            ; 0400E3
	nop                            ; 044D92 || 	nop                            ; 0400E4
	nop                            ; 044D93 || 	nop                            ; 0400E5
	nop                            ; 044D94 || 	nop                            ; 0400E6
	nop                            ; 044D95 || 	nop                            ; 0400E7
	nop                            ; 044D96 || 	nop                            ; 0400E8
	nop                            ; 044D97 || 	nop                            ; 0400E9
	nop                            ; 044D98 || 	nop                            ; 0400DA
	nop                            ; 044D99 || 	nop                            ; 0400DB
	nop                            ; 044D9A || 	nop                            ; 0400DC
	nop                            ; 044D9B || 	nop                            ; 0400DD
	nop                            ; 044D9C || 	nop                            ; 0400DE
	nop                            ; 044D9D || 	nop                            ; 0400DF
	nop                            ; 044D9E || 	nop                            ; 0400E0
	nop                            ; 044D9F || 	nop                            ; 0400E1
	nop                            ; 044DA0 || 	nop                            ; 0400E2
	nop                            ; 044DA1 || 	nop                            ; 0400E3
	nop                            ; 044DA2 || 	nop                            ; 0400E4
	nop                            ; 044DA3 || 	nop                            ; 0400E5
	nop                            ; 044DA4 || 	nop                            ; 0400E6
	nop                            ; 044DA5 || 	nop                            ; 0400E7
	nop                            ; 044DA6 || 	nop                            ; 0400E8
	nop                            ; 044DA7 || 	nop                            ; 0400E9
	nop                            ; 044DA8 || 	nop                            ; 0400DA
	nop                            ; 044DA9 || 	nop                            ; 0400DB
	nop                            ; 044DAA || 	nop                            ; 0400DC
	nop                            ; 044DAB || 	nop                            ; 0400DD
	nop                            ; 044DAC || 	nop                            ; 0400DE
	nop                            ; 044DAD || 	nop                            ; 0400DF
	nop                            ; 044DAE || 	nop                            ; 0400E0
	nop                            ; 044DAF || 	nop                            ; 0400E1
	nop                            ; 044DB0 || 	nop                            ; 0400E2
	nop                            ; 044DB1 || 	nop                            ; 0400E3
	nop                            ; 044DB2 || 	nop                            ; 0400E4
	nop                            ; 044DB3 || 	nop                            ; 0400E5
	nop                            ; 044DB4 || 	nop                            ; 0400E6
	nop                            ; 044DB5 || 	nop                            ; 0400E7
	nop                            ; 044DB6 || 	nop                            ; 0400E8
	nop                            ; 044DB7 || 	nop                            ; 0400E9
	nop                            ; 044DB8 || 	nop                            ; 0400DA
	nop                            ; 044DB9 || 	nop                            ; 0400DB
	nop                            ; 044DBA || 	nop                            ; 0400DC
	nop                            ; 044DBB || 	nop                            ; 0400DD
	nop                            ; 044DBC || 	nop                            ; 0400DE
	nop                            ; 044DBD || 	nop                            ; 0400DF
	nop                            ; 044DBE || 	nop                            ; 0400E0
	nop                            ; 044DBF || 	nop                            ; 0400E1
	nop                            ; 044DC0 || 	nop                            ; 0400E2
	nop                            ; 044DC1 || 	nop                            ; 0400E3
	nop                            ; 044DC2 || 	nop                            ; 0400E4
	nop                            ; 044DC3 || 	nop                            ; 0400E5
	nop                            ; 044DC4 || 	nop                            ; 0400E6
	nop                            ; 044DC5 || 	nop                            ; 0400E7
	nop                            ; 044DC6 || 	nop                            ; 0400E8
	nop                            ; 044DC7 || 	nop                            ; 0400E9
	nop                            ; 044DC8 || 	nop                            ; 0400DA
	nop                            ; 044DC9 || 	nop                            ; 0400DB
	nop                            ; 044DCA || 	nop                            ; 0400DC
	nop                            ; 044DCB || 	nop                            ; 0400DD
	nop                            ; 044DCC || 	nop                            ; 0400DE
	nop                            ; 044DCD || 	nop                            ; 0400DF
	nop                            ; 044DCE || 	nop                            ; 0400E0
	nop                            ; 044DCF || 	nop                            ; 0400E1
	nop                            ; 044DD0 || 	nop                            ; 0400E2
	nop                            ; 044DD1 || 	nop                            ; 0400E3
	nop                            ; 044DD2 || 	nop                            ; 0400E4
	nop                            ; 044DD3 || 	nop                            ; 0400E5
	nop                            ; 044DD4 || 	nop                            ; 0400E6
	nop                            ; 044DD5 || 	nop                            ; 0400E7
	nop                            ; 044DD6 || 	nop                            ; 0400E8
	nop                            ; 044DD7 || 	nop                            ; 0400E9
	nop                            ; 044DD8 || 	nop                            ; 0400DA
	nop                            ; 044DD9 || 	nop                            ; 0400DB
	nop                            ; 044DDA || 	nop                            ; 0400DC
	nop                            ; 044DDB || 	nop                            ; 0400DD
	nop                            ; 044DDC || 	nop                            ; 0400DE
	nop                            ; 044DDD || 	nop                            ; 0400DF
	nop                            ; 044DDE || 	nop                            ; 0400E0
	nop                            ; 044DDF || 	nop                            ; 0400E1
	nop                            ; 044DE0 || 	nop                            ; 0400E2
	nop                            ; 044DE1 || 	nop                            ; 0400E3
	nop                            ; 044DE2 || 	nop                            ; 0400E4
	nop                            ; 044DE3 || 	nop                            ; 0400E5
	nop                            ; 044DE4 || 	nop                            ; 0400E6
	nop                            ; 044DE5 || 	nop                            ; 0400E7
	nop                            ; 044DE6 || 	nop                            ; 0400E8
	nop                            ; 044DE7 || 	nop                            ; 0400E9
	nop                            ; 044DE8 || 	nop                            ; 0400DA
	nop                            ; 044DE9 || 	nop                            ; 0400DB
	nop                            ; 044DEA || 	nop                            ; 0400DC
	nop                            ; 044DEB || 	nop                            ; 0400DD
	nop                            ; 044DEC || 	nop                            ; 0400DE
	nop                            ; 044DED || 	nop                            ; 0400DF
	nop                            ; 044DEE || 	nop                            ; 0400E0
	nop                            ; 044DEF || 	nop                            ; 0400E1
	nop                            ; 044DF0 || 	nop                            ; 0400E2
	nop                            ; 044DF1 || 	nop                            ; 0400E3
	nop                            ; 044DF2 || 	nop                            ; 0400E4
	nop                            ; 044DF3 || 	nop                            ; 0400E5
	nop                            ; 044DF4 || 	nop                            ; 0400E6
	nop                            ; 044DF5 || 	nop                            ; 0400E7
	nop                            ; 044DF6 || 	nop                            ; 0400E8
	nop                            ; 044DF7 || 	nop                            ; 0400E9
	nop                            ; 044DF8
	nop                            ; 044DF9
	nop                            ; 044DFA
	nop                            ; 044DFB
	nop                            ; 044DFC
	nop                            ; 044DFD
	nop                            ; 044DFE
	nop                            ; 044DFF
                                
